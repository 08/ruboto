<api><apiid version='1.0' number='1'/><apiid version='1.1' number='2'/><apiid version='1.5' number='3' name='cupcake'/><apiid version='1.6' number='4' name='donut'/><apiid version='2.0' number='5'/><apiid version='2.0.1' number='6'/><apiid version='2.1' number='7' name='eclair'/><apiid version='2.2' number='8' name='froyo'/><apiid version='2.3' number='9' name='gingerbread'/><apiid version='2.3.3' number='10'/><apiid version='3.0' number='11' name='honeycomb'/><apiid version='3.1' number='12'/><apiid version='3.2' number='13'/><apiid version='4.0' number='14' name='ice cream sandwich'/><apiid version='4.0.3' number='15'/><apiid version='4.1' number='16' name='jelly bean'/><package name='android'><class extends='java.lang.Object' name='Manifest' final='true'><constructor type='android.Manifest' name='Manifest'/></class><class extends='java.lang.Object' static='true' name='Manifest.permission' final='true'><constructor type='android.Manifest.permission' name='Manifest.permission'/></class><class extends='java.lang.Object' static='true' name='Manifest.permission_group' final='true'><constructor type='android.Manifest.permission_group' name='Manifest.permission_group'/></class><class extends='java.lang.Object' name='R' final='true'><constructor type='android.R' name='R'/></class><class extends='java.lang.Object' static='true' name='R.anim' final='true'><constructor type='android.R.anim' name='R.anim'/></class><class extends='java.lang.Object' static='true' name='R.array' final='true'><constructor type='android.R.array' name='R.array'/></class><class extends='java.lang.Object' static='true' name='R.attr' final='true'><constructor type='android.R.attr' name='R.attr'/></class><class extends='java.lang.Object' static='true' name='R.color' final='true'><constructor type='android.R.color' name='R.color'/></class><class extends='java.lang.Object' static='true' name='R.dimen' final='true'><constructor type='android.R.dimen' name='R.dimen'/></class><class extends='java.lang.Object' static='true' name='R.drawable' final='true'><constructor type='android.R.drawable' name='R.drawable'/></class><class extends='java.lang.Object' static='true' name='R.id' final='true'><constructor type='android.R.id' name='R.id'/></class><class extends='java.lang.Object' static='true' name='R.layout' final='true'><constructor type='android.R.layout' name='R.layout'/></class><class extends='java.lang.Object' static='true' name='R.plurals' final='true'><constructor type='android.R.plurals' name='R.plurals'/></class><class extends='java.lang.Object' static='true' name='R.raw' final='true'><constructor type='android.R.raw' name='R.raw'/></class><class extends='java.lang.Object' static='true' name='R.string' final='true'><constructor type='android.R.string' name='R.string'/></class><class extends='java.lang.Object' static='true' name='R.style' final='true'><constructor type='android.R.style' name='R.style'/></class><class extends='java.lang.Object' static='true' name='R.xml' final='true'><constructor type='android.R.xml' name='R.xml'/></class><class extends='java.lang.Object' static='true' name='R.bool' api_added='3' final='true'><constructor type='android.R.bool' name='R.bool' api_added='3'/></class><class extends='java.lang.Object' static='true' name='R.integer' api_added='3' final='true'><constructor type='android.R.integer' name='R.integer' api_added='3'/></class><class extends='java.lang.Object' static='true' name='R.animator' api_added='11' final='true'><constructor type='android.R.animator' name='R.animator' api_added='11'/></class><class extends='java.lang.Object' static='true' name='R.fraction' api_added='11' final='true'><constructor type='android.R.fraction' name='R.fraction' api_added='11'/></class><class extends='java.lang.Object' static='true' name='R.interpolator' api_added='11' final='true'><constructor type='android.R.interpolator' name='R.interpolator' api_added='11'/></class><class extends='java.lang.Object' static='true' name='R.menu' api_added='11' final='true'><constructor type='android.R.menu' name='R.menu' api_added='11'/></class><class extends='java.lang.Object' static='true' name='R.mipmap' api_added='11' final='true'><constructor type='android.R.mipmap' name='R.mipmap' api_added='11'/></class></package><package name='android.app'><class extends='android.view.ContextThemeWrapper' name='Activity'><constructor type='android.app.Activity' name='Activity'/><method name='addContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='closeOptionsMenu'/><method return='android.app.PendingIntent' name='createPendingResult'><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='data'/><parameter type='int' name='flags'/></method><method deprecated='13' name='dismissDialog' final='true'><parameter type='int' name='id'/></method><method return='boolean' name='dispatchKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='dispatchTouchEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='boolean' name='dispatchTrackballEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='android.view.View' name='findViewById'><parameter type='int' name='id'/></method><method name='finish'/><method name='finishActivity'><parameter type='int' name='requestCode'/></method><method name='finishActivityFromChild'><parameter type='android.app.Activity' name='child'/><parameter type='int' name='requestCode'/></method><method name='finishFromChild'><parameter type='android.app.Activity' name='child'/></method><method return='android.app.Application' name='getApplication' final='true'/><method return='android.content.ComponentName' name='getCallingActivity'/><method return='java.lang.String' name='getCallingPackage'/><method return='int' name='getChangingConfigurations'/><method return='android.content.ComponentName' name='getComponentName'/><method return='android.view.View' name='getCurrentFocus'/><method return='long' api_removed='11' static='true' name='getInstanceCount'/><method return='android.content.Intent' name='getIntent'/><method deprecated='13' return='java.lang.Object' name='getLastNonConfigurationInstance'/><method return='android.view.LayoutInflater' name='getLayoutInflater'/><method return='java.lang.String' name='getLocalClassName'/><method return='android.view.MenuInflater' name='getMenuInflater'/><method return='android.app.Activity' name='getParent' final='true'/><method return='android.content.SharedPreferences' name='getPreferences'><parameter type='int' name='mode'/></method><method return='int' name='getRequestedOrientation'/><method return='int' name='getTaskId'/><method return='java.lang.CharSequence' name='getTitle' final='true'/><method return='int' name='getTitleColor' final='true'/><method return='int' name='getVolumeControlStream' final='true'/><method return='android.view.Window' name='getWindow'/><method return='android.view.WindowManager' name='getWindowManager'/><method return='boolean' name='isChild' final='true'/><method return='boolean' name='isFinishing'/><method return='boolean' name='isTaskRoot'/><method deprecated='11' return='android.database.Cursor' name='managedQuery' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></method><method return='boolean' name='moveTaskToBack'><parameter type='boolean' name='nonRoot'/></method><method visibility='protected' name='onActivityResult'><parameter type='int' name='requestCode'/><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='data'/></method><method visibility='protected' name='onChildTitleChanged'><parameter type='android.app.Activity' name='childActivity'/><parameter type='java.lang.CharSequence' name='title'/></method><method name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method name='onContentChanged'/><method return='boolean' name='onContextItemSelected'><parameter type='android.view.MenuItem' name='item'/></method><method name='onContextMenuClosed'><parameter type='android.view.Menu' name='menu'/></method><method visibility='protected' name='onCreate'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onCreateContextMenu'><parameter type='android.view.ContextMenu' name='menu'/><parameter type='android.view.View' name='v'/><parameter type='android.view.ContextMenu.ContextMenuInfo' name='menuInfo'/></method><method return='java.lang.CharSequence' name='onCreateDescription'/><method visibility='protected' deprecated='8' return='android.app.Dialog' name='onCreateDialog'><parameter type='int' name='id'/></method><method return='boolean' name='onCreateOptionsMenu'><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onCreatePanelMenu'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='android.view.View' name='onCreatePanelView'><parameter type='int' name='featureId'/></method><method return='boolean' name='onCreateThumbnail'><parameter type='android.graphics.Bitmap' name='outBitmap'/><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='android.view.View' name='onCreateView'><parameter type='java.lang.String' name='name'/><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></method><method visibility='protected' name='onDestroy'/><method return='boolean' name='onKeyDown'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyMultiple'><parameter type='int' name='keyCode'/><parameter type='int' name='repeatCount'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='onLowMemory'/><method return='boolean' name='onMenuItemSelected'><parameter type='int' name='featureId'/><parameter type='android.view.MenuItem' name='item'/></method><method return='boolean' name='onMenuOpened'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method visibility='protected' name='onNewIntent'><parameter type='android.content.Intent' name='intent'/></method><method return='boolean' name='onOptionsItemSelected'><parameter type='android.view.MenuItem' name='item'/></method><method name='onOptionsMenuClosed'><parameter type='android.view.Menu' name='menu'/></method><method name='onPanelClosed'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method visibility='protected' name='onPause'/><method visibility='protected' name='onPostCreate'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method visibility='protected' name='onPostResume'/><method visibility='protected' deprecated='8' name='onPrepareDialog'><parameter type='int' name='id'/><parameter type='android.app.Dialog' name='dialog'/></method><method return='boolean' name='onPrepareOptionsMenu'><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onPreparePanel'><parameter type='int' name='featureId'/><parameter type='android.view.View' name='view'/><parameter type='android.view.Menu' name='menu'/></method><method visibility='protected' name='onRestart'/><method visibility='protected' name='onRestoreInstanceState'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method visibility='protected' name='onResume'/><method deprecated='13' return='java.lang.Object' name='onRetainNonConfigurationInstance'/><method visibility='protected' name='onSaveInstanceState'><parameter type='android.os.Bundle' name='outState'/></method><method return='boolean' name='onSearchRequested'/><method visibility='protected' name='onStart'/><method visibility='protected' name='onStop'/><method visibility='protected' name='onTitleChanged'><parameter type='java.lang.CharSequence' name='title'/><parameter type='int' name='color'/></method><method return='boolean' name='onTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='onTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method name='onWindowAttributesChanged'><parameter type='android.view.WindowManager.LayoutParams' name='params'/></method><method name='onWindowFocusChanged'><parameter type='boolean' name='hasFocus'/></method><method name='openContextMenu'><parameter type='android.view.View' name='view'/></method><method name='openOptionsMenu'/><method name='registerForContextMenu'><parameter type='android.view.View' name='view'/></method><method deprecated='13' name='removeDialog' final='true'><parameter type='int' name='id'/></method><method return='boolean' name='requestWindowFeature' final='true'><parameter type='int' name='featureId'/></method><method name='runOnUiThread' final='true'><parameter type='java.lang.Runnable' name='action'/></method><method name='setContentView'><parameter type='int' name='layoutResID'/></method><method name='setContentView'><parameter type='android.view.View' name='view'/></method><method name='setContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='setDefaultKeyMode' final='true'><parameter type='int' name='mode'/></method><method name='setFeatureDrawable' final='true'><parameter type='int' name='featureId'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setFeatureDrawableAlpha' final='true'><parameter type='int' name='featureId'/><parameter type='int' name='alpha'/></method><method name='setFeatureDrawableResource' final='true'><parameter type='int' name='featureId'/><parameter type='int' name='resId'/></method><method name='setFeatureDrawableUri' final='true'><parameter type='int' name='featureId'/><parameter type='android.net.Uri' name='uri'/></method><method name='setIntent'><parameter type='android.content.Intent' name='newIntent'/></method><method deprecated='9' api_removed='11' name='setPersistent'><parameter type='boolean' name='isPersistent'/></method><method name='setProgress' final='true'><parameter type='int' name='progress'/></method><method name='setProgressBarIndeterminate' final='true'><parameter type='boolean' name='indeterminate'/></method><method name='setProgressBarIndeterminateVisibility' final='true'><parameter type='boolean' name='visible'/></method><method name='setProgressBarVisibility' final='true'><parameter type='boolean' name='visible'/></method><method name='setRequestedOrientation'><parameter type='int' name='requestedOrientation'/></method><method name='setResult' final='true'><parameter type='int' name='resultCode'/></method><method name='setResult' final='true'><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='data'/></method><method name='setSecondaryProgress' final='true'><parameter type='int' name='secondaryProgress'/></method><method name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method name='setTitle'><parameter type='int' name='titleId'/></method><method name='setTitleColor'><parameter type='int' name='textColor'/></method><method name='setVolumeControlStream' final='true'><parameter type='int' name='streamType'/></method><method deprecated='13' name='showDialog' final='true'><parameter type='int' name='id'/></method><method name='startActivityForResult'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='requestCode'/></method><method name='startActivityFromChild'><parameter type='android.app.Activity' name='child'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='requestCode'/></method><method return='boolean' name='startActivityIfNeeded'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='requestCode'/></method><method deprecated='11' name='startManagingCursor'><parameter type='android.database.Cursor' name='c'/></method><method return='boolean' name='startNextMatchingActivity'><parameter type='android.content.Intent' name='intent'/></method><method name='startSearch'><parameter type='java.lang.String' name='initialQuery'/><parameter type='boolean' name='selectInitialQuery'/><parameter type='android.os.Bundle' name='appSearchData'/><parameter type='boolean' name='globalSearch'/></method><method deprecated='11' name='stopManagingCursor'><parameter type='android.database.Cursor' name='c'/></method><method name='takeKeyEvents'><parameter type='boolean' name='get'/></method><method name='unregisterForContextMenu'><parameter type='android.view.View' name='view'/></method><method name='closeContextMenu' api_added='3'/><method return='boolean' name='hasWindowFocus' api_added='3'/><method name='onUserInteraction' api_added='3'/><method visibility='protected' name='onUserLeaveHint' api_added='3'/><method name='setVisible' api_added='3'><parameter type='boolean' name='visible'/></method><method return='boolean' name='dispatchPopulateAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method name='onAttachedToWindow' api_added='5'/><method name='onBackPressed' api_added='5'/><method name='onDetachedFromWindow' api_added='5'/><method return='boolean' name='onKeyLongPress' api_added='5'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='overridePendingTransition' api_added='5'><parameter type='int' name='enterAnim'/><parameter type='int' name='exitAnim'/></method><method name='startIntentSenderForResult' api_added='5'><parameter type='android.content.IntentSender' name='intent'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='fillInIntent'/><parameter type='int' name='flagsMask'/><parameter type='int' name='flagsValues'/><parameter type='int' name='extraFlags'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method name='startIntentSenderFromChild' api_added='5'><parameter type='android.app.Activity' name='child'/><parameter type='android.content.IntentSender' name='intent'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='fillInIntent'/><parameter type='int' name='flagsMask'/><parameter type='int' name='flagsValues'/><parameter type='int' name='extraFlags'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method name='triggerSearch' api_added='5'><parameter type='java.lang.String' name='query'/><parameter type='android.os.Bundle' name='appSearchData'/></method><method visibility='protected' deprecated='13' return='android.app.Dialog' name='onCreateDialog' api_added='8'><parameter type='int' name='id'/><parameter type='android.os.Bundle' name='args'/></method><method visibility='protected' deprecated='13' name='onPrepareDialog' api_added='8'><parameter type='int' name='id'/><parameter type='android.app.Dialog' name='dialog'/><parameter type='android.os.Bundle' name='args'/></method><method deprecated='13' return='boolean' name='showDialog' api_added='8' final='true'><parameter type='int' name='id'/><parameter type='android.os.Bundle' name='args'/></method><method return='boolean' name='dispatchKeyShortcutEvent' api_added='11'><parameter type='android.view.KeyEvent' name='event'/></method><method name='dump' api_added='11'><parameter type='java.lang.String' name='prefix'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method return='android.app.ActionBar' name='getActionBar' api_added='11'/><method return='android.app.FragmentManager' name='getFragmentManager' api_added='11'/><method return='android.app.LoaderManager' name='getLoaderManager' api_added='11'/><method name='invalidateOptionsMenu' api_added='11'/><method return='boolean' name='isChangingConfigurations' api_added='11'/><method name='onActionModeFinished' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method name='onActionModeStarted' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method name='onAttachFragment' api_added='11'><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.view.View' name='onCreateView' api_added='11'><parameter type='android.view.View' name='parent'/><parameter type='java.lang.String' name='name'/><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></method><method return='boolean' name='onKeyShortcut' api_added='11'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='android.view.ActionMode' name='onWindowStartingActionMode' api_added='11'><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method name='recreate' api_added='11'/><method name='setFinishOnTouchOutside' api_added='11'><parameter type='boolean' name='finish'/></method><method return='android.view.ActionMode' name='startActionMode' api_added='11'><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method name='startActivityFromFragment' api_added='11'><parameter type='android.app.Fragment' name='fragment'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='requestCode'/></method><method return='boolean' name='dispatchGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='boolean' name='onGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method><method name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method><method name='finishAffinity' api_added='16'/><method return='android.content.Intent' name='getParentActivityIntent' api_added='16'/><method return='boolean' name='navigateUpTo' api_added='16'><parameter type='android.content.Intent' name='arg0'/></method><method return='boolean' name='navigateUpToFromChild' api_added='16'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.content.Intent' name='arg1'/></method><method name='onCreateNavigateUpTaskStack' api_added='16'><parameter type='android.app.TaskStackBuilder' name='arg0'/></method><method return='boolean' name='onNavigateUp' api_added='16'/><method return='boolean' name='onNavigateUpFromChild' api_added='16'><parameter type='android.app.Activity' name='arg0'/></method><method name='onPrepareNavigateUpTaskStack' api_added='16'><parameter type='android.app.TaskStackBuilder' name='arg0'/></method><method return='boolean' name='shouldUpRecreateTask' api_added='16'><parameter type='android.content.Intent' name='arg0'/></method><method name='startActivityForResult' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method><method name='startActivityFromChild' api_added='16'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.content.Intent' name='arg1'/><parameter type='int' name='arg2'/><parameter type='android.os.Bundle' name='arg3'/></method><method name='startActivityFromFragment' api_added='16'><parameter type='android.app.Fragment' name='arg0'/><parameter type='android.content.Intent' name='arg1'/><parameter type='int' name='arg2'/><parameter type='android.os.Bundle' name='arg3'/></method><method return='boolean' name='startActivityIfNeeded' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method><method name='startIntentSenderForResult' api_added='16'><parameter type='android.content.IntentSender' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.content.Intent' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='int' name='arg5'/><parameter type='android.os.Bundle' name='arg6'/></method><method name='startIntentSenderFromChild' api_added='16'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.content.IntentSender' name='arg1'/><parameter type='int' name='arg2'/><parameter type='android.content.Intent' name='arg3'/><parameter type='int' name='arg4'/><parameter type='int' name='arg5'/><parameter type='int' name='arg6'/><parameter type='android.os.Bundle' name='arg7'/></method><method return='boolean' name='startNextMatchingActivity' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method></class><class extends='android.app.Activity' deprecated='13' name='ActivityGroup'><constructor type='android.app.ActivityGroup' name='ActivityGroup'/><constructor type='android.app.ActivityGroup' name='ActivityGroup'><parameter type='boolean' name='singleActivityMode'/></constructor><method return='android.app.Activity' name='getCurrentActivity'/><method return='android.app.LocalActivityManager' name='getLocalActivityManager' final='true'/></class><class extends='java.lang.Object' name='ActivityManager'><method name='getMemoryInfo'><parameter type='android.app.ActivityManager.MemoryInfo' name='outInfo'/></method><method return='java.util.List&lt;android.app.ActivityManager.ProcessErrorStateInfo&gt;' name='getProcessesInErrorState'/><method return='java.util.List&lt;android.app.ActivityManager.RecentTaskInfo&gt;' name='getRecentTasks'><parameter type='int' name='maxNum'/><parameter type='int' name='flags'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.util.List&lt;android.app.ActivityManager.RunningServiceInfo&gt;' name='getRunningServices'><parameter type='int' name='maxNum'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.util.List&lt;android.app.ActivityManager.RunningTaskInfo&gt;' name='getRunningTasks'><parameter type='int' name='maxNum'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='android.content.pm.ConfigurationInfo' name='getDeviceConfigurationInfo' api_added='3'/><method return='java.util.List&lt;android.app.ActivityManager.RunningAppProcessInfo&gt;' name='getRunningAppProcesses' api_added='3'/><method deprecated='8' name='restartPackage' api_added='3'><parameter type='java.lang.String' name='packageName'/></method><method return='int' name='getMemoryClass' api_added='5'/><method return='android.os.Debug.MemoryInfo[]' name='getProcessMemoryInfo' api_added='5'><parameter type='int[]' name='pids'/></method><method return='android.app.PendingIntent' name='getRunningServiceControlPanel' api_added='5'><parameter type='android.content.ComponentName' name='service'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='boolean' static='true' name='isUserAMonkey' api_added='8'/><method name='killBackgroundProcesses' api_added='8'><parameter type='java.lang.String' name='packageName'/></method><method return='int' name='getLargeMemoryClass' api_added='11'/><method return='int' name='getLauncherLargeIconDensity' api_added='11'/><method return='int' name='getLauncherLargeIconSize' api_added='11'/><method return='boolean' static='true' name='isRunningInTestHarness' api_added='11'/><method name='moveTaskToFront' api_added='11'><parameter type='int' name='taskId'/><parameter type='int' name='flags'/></method><method static='true' name='getMyMemoryState' api_added='16'><parameter type='android.app.ActivityManager.RunningAppProcessInfo' name='arg0'/></method><method name='moveTaskToFront' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.MemoryInfo'><constructor type='android.app.ActivityManager.MemoryInfo' name='ActivityManager.MemoryInfo'/><method return='int' name='describeContents'/><method name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.ProcessErrorStateInfo'><constructor type='android.app.ActivityManager.ProcessErrorStateInfo' name='ActivityManager.ProcessErrorStateInfo'/><method return='int' name='describeContents'/><method name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.RecentTaskInfo'><constructor type='android.app.ActivityManager.RecentTaskInfo' name='ActivityManager.RecentTaskInfo'/><method return='int' name='describeContents'/><method name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.RunningServiceInfo'><constructor type='android.app.ActivityManager.RunningServiceInfo' name='ActivityManager.RunningServiceInfo'/><method return='int' name='describeContents'/><method name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.RunningTaskInfo'><constructor type='android.app.ActivityManager.RunningTaskInfo' name='ActivityManager.RunningTaskInfo'/><method return='int' name='describeContents'/><method name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='AlarmManager'><method name='cancel'><parameter type='android.app.PendingIntent' name='operation'/></method><method name='set'><parameter type='int' name='type'/><parameter type='long' name='triggerAtTime'/><parameter type='android.app.PendingIntent' name='operation'/></method><method name='setRepeating'><parameter type='int' name='type'/><parameter type='long' name='triggerAtTime'/><parameter type='long' name='interval'/><parameter type='android.app.PendingIntent' name='operation'/></method><method name='setTimeZone'><parameter type='java.lang.String' name='timeZone'/></method><method name='setInexactRepeating' api_added='3'><parameter type='int' name='type'/><parameter type='long' name='triggerAtTime'/><parameter type='long' name='interval'/><parameter type='android.app.PendingIntent' name='operation'/></method><method name='setTime' api_added='8'><parameter type='long' name='millis'/></method></class><class extends='android.app.Dialog' name='AlertDialog'><constructor visibility='protected' type='android.app.AlertDialog' name='AlertDialog'><parameter type='android.content.Context' name='context'/></constructor><constructor visibility='protected' type='android.app.AlertDialog' name='AlertDialog'><parameter type='android.content.Context' name='context'/><parameter type='int' name='theme'/></constructor><constructor visibility='protected' type='android.app.AlertDialog' name='AlertDialog'><parameter type='android.content.Context' name='context'/><parameter type='boolean' name='cancelable'/><parameter type='android.content.DialogInterface.OnCancelListener' name='cancelListener'/></constructor><method deprecated='3' name='setButton'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.os.Message' name='msg'/></method><method deprecated='3' name='setButton'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method deprecated='3' name='setButton2'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.os.Message' name='msg'/></method><method deprecated='3' name='setButton2'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method deprecated='3' name='setButton3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.os.Message' name='msg'/></method><method deprecated='3' name='setButton3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method name='setCustomTitle'><parameter type='android.view.View' name='customTitleView'/></method><method name='setIcon'><parameter type='int' name='resId'/></method><method name='setIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method name='setInverseBackgroundForced'><parameter type='boolean' name='forceInverseBackground'/></method><method name='setMessage'><parameter type='java.lang.CharSequence' name='message'/></method><method name='setView'><parameter type='android.view.View' name='view'/></method><method return='android.widget.Button' name='getButton' api_added='3'><parameter type='int' name='whichButton'/></method><method return='android.widget.ListView' name='getListView' api_added='3'/><method name='setButton' api_added='3'><parameter type='int' name='whichButton'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.os.Message' name='msg'/></method><method name='setButton' api_added='3'><parameter type='int' name='whichButton'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method name='setView' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='viewSpacingLeft'/><parameter type='int' name='viewSpacingTop'/><parameter type='int' name='viewSpacingRight'/><parameter type='int' name='viewSpacingBottom'/></method><method name='setIconAttribute' api_added='11'><parameter type='int' name='attrId'/></method></class><class extends='java.lang.Object' static='true' name='AlertDialog.Builder'><constructor type='android.app.AlertDialog.Builder' name='AlertDialog.Builder'><parameter type='android.content.Context' name='context'/></constructor><method return='android.app.AlertDialog' name='create'/><method return='android.app.AlertDialog.Builder' name='setAdapter'><parameter type='android.widget.ListAdapter' name='adapter'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setCancelable'><parameter type='boolean' name='cancelable'/></method><method return='android.app.AlertDialog.Builder' name='setCursor'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/><parameter type='java.lang.String' name='labelColumn'/></method><method return='android.app.AlertDialog.Builder' name='setCustomTitle'><parameter type='android.view.View' name='customTitleView'/></method><method return='android.app.AlertDialog.Builder' name='setIcon'><parameter type='int' name='iconId'/></method><method return='android.app.AlertDialog.Builder' name='setIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='android.app.AlertDialog.Builder' name='setInverseBackgroundForced'><parameter type='boolean' name='useInverseBackground'/></method><method return='android.app.AlertDialog.Builder' name='setItems'><parameter type='int' name='itemsId'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setItems'><parameter type='java.lang.CharSequence[]' name='items'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setMessage'><parameter type='int' name='messageId'/></method><method return='android.app.AlertDialog.Builder' name='setMessage'><parameter type='java.lang.CharSequence' name='message'/></method><method return='android.app.AlertDialog.Builder' name='setMultiChoiceItems'><parameter type='int' name='itemsId'/><parameter type='boolean[]' name='checkedItems'/><parameter type='android.content.DialogInterface.OnMultiChoiceClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setMultiChoiceItems'><parameter type='java.lang.CharSequence[]' name='items'/><parameter type='boolean[]' name='checkedItems'/><parameter type='android.content.DialogInterface.OnMultiChoiceClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setMultiChoiceItems'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='isCheckedColumn'/><parameter type='java.lang.String' name='labelColumn'/><parameter type='android.content.DialogInterface.OnMultiChoiceClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setNegativeButton'><parameter type='int' name='textId'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setNegativeButton'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setNeutralButton'><parameter type='int' name='textId'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setNeutralButton'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setOnCancelListener'><parameter type='android.content.DialogInterface.OnCancelListener' name='onCancelListener'/></method><method return='android.app.AlertDialog.Builder' name='setOnItemSelectedListener'><parameter type='android.widget.AdapterView.OnItemSelectedListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setOnKeyListener'><parameter type='android.content.DialogInterface.OnKeyListener' name='onKeyListener'/></method><method return='android.app.AlertDialog.Builder' name='setPositiveButton'><parameter type='int' name='textId'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setPositiveButton'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setSingleChoiceItems'><parameter type='int' name='itemsId'/><parameter type='int' name='checkedItem'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setSingleChoiceItems'><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='checkedItem'/><parameter type='java.lang.String' name='labelColumn'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setSingleChoiceItems'><parameter type='java.lang.CharSequence[]' name='items'/><parameter type='int' name='checkedItem'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setSingleChoiceItems'><parameter type='android.widget.ListAdapter' name='adapter'/><parameter type='int' name='checkedItem'/><parameter type='android.content.DialogInterface.OnClickListener' name='listener'/></method><method return='android.app.AlertDialog.Builder' name='setTitle'><parameter type='int' name='titleId'/></method><method return='android.app.AlertDialog.Builder' name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.app.AlertDialog.Builder' name='setView'><parameter type='android.view.View' name='view'/></method><method return='android.app.AlertDialog' name='show'/><method return='android.content.Context' name='getContext' api_added='11'/><method return='android.app.AlertDialog.Builder' name='setIconAttribute' api_added='11'><parameter type='int' name='attrId'/></method></class><class extends='android.app.Activity' name='AliasActivity'><constructor type='android.app.AliasActivity' name='AliasActivity'/></class><class extends='android.content.ContextWrapper' name='Application'><constructor type='android.app.Application' name='Application'/><method name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method name='onCreate'/><method name='onLowMemory'/><method name='onTerminate'/><method name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method><method name='registerActivityLifecycleCallbacks' api_added='14'><parameter type='android.app.Application.ActivityLifecycleCallbacks' name='arg0'/></method><method name='unregisterActivityLifecycleCallbacks' api_added='14'><parameter type='android.app.Application.ActivityLifecycleCallbacks' name='arg0'/></method></class><class extends='android.app.AlertDialog' name='DatePickerDialog'><constructor type='android.app.DatePickerDialog' name='DatePickerDialog'><parameter type='android.content.Context' name='context'/><parameter type='android.app.DatePickerDialog.OnDateSetListener' name='callBack'/><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></constructor><constructor type='android.app.DatePickerDialog' name='DatePickerDialog'><parameter type='android.content.Context' name='context'/><parameter type='int' name='theme'/><parameter type='android.app.DatePickerDialog.OnDateSetListener' name='callBack'/><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></constructor><method name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/></method><method name='onDateChanged'><parameter type='android.widget.DatePicker' name='view'/><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/></method><method name='updateDate'><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></method><method return='android.widget.DatePicker' name='getDatePicker' api_added='11'/></class><class extends='java.lang.Object' name='Dialog'><constructor type='android.app.Dialog' name='Dialog'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.app.Dialog' name='Dialog'><parameter type='android.content.Context' name='context'/><parameter type='int' name='theme'/></constructor><constructor visibility='protected' type='android.app.Dialog' name='Dialog'><parameter type='android.content.Context' name='context'/><parameter type='boolean' name='cancelable'/><parameter type='android.content.DialogInterface.OnCancelListener' name='cancelListener'/></constructor><method name='addContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='cancel'/><method name='closeOptionsMenu'/><method name='dismiss'/><method return='boolean' name='dispatchKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='dispatchTouchEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='boolean' name='dispatchTrackballEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='android.view.View' name='findViewById'><parameter type='int' name='id'/></method><method return='android.content.Context' name='getContext' final='true'/><method return='android.view.View' name='getCurrentFocus'/><method return='android.view.LayoutInflater' name='getLayoutInflater'/><method return='android.app.Activity' name='getOwnerActivity' final='true'/><method return='int' name='getVolumeControlStream' final='true'/><method return='android.view.Window' name='getWindow'/><method name='hide'/><method return='boolean' name='isShowing'/><method name='onContentChanged'/><method return='boolean' name='onContextItemSelected'><parameter type='android.view.MenuItem' name='item'/></method><method name='onContextMenuClosed'><parameter type='android.view.Menu' name='menu'/></method><method visibility='protected' name='onCreate'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onCreateContextMenu'><parameter type='android.view.ContextMenu' name='menu'/><parameter type='android.view.View' name='v'/><parameter type='android.view.ContextMenu.ContextMenuInfo' name='menuInfo'/></method><method return='boolean' name='onCreateOptionsMenu'><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onCreatePanelMenu'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='android.view.View' name='onCreatePanelView'><parameter type='int' name='featureId'/></method><method return='boolean' name='onKeyDown'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyMultiple'><parameter type='int' name='keyCode'/><parameter type='int' name='repeatCount'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onMenuItemSelected'><parameter type='int' name='featureId'/><parameter type='android.view.MenuItem' name='item'/></method><method return='boolean' name='onMenuOpened'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onOptionsItemSelected'><parameter type='android.view.MenuItem' name='item'/></method><method name='onOptionsMenuClosed'><parameter type='android.view.Menu' name='menu'/></method><method name='onPanelClosed'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onPrepareOptionsMenu'><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' name='onPreparePanel'><parameter type='int' name='featureId'/><parameter type='android.view.View' name='view'/><parameter type='android.view.Menu' name='menu'/></method><method name='onRestoreInstanceState'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method return='android.os.Bundle' name='onSaveInstanceState'/><method return='boolean' name='onSearchRequested'/><method visibility='protected' name='onStart'/><method visibility='protected' name='onStop'/><method return='boolean' name='onTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='onTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method name='onWindowAttributesChanged'><parameter type='android.view.WindowManager.LayoutParams' name='params'/></method><method name='onWindowFocusChanged'><parameter type='boolean' name='hasFocus'/></method><method name='openContextMenu'><parameter type='android.view.View' name='view'/></method><method name='openOptionsMenu'/><method name='registerForContextMenu'><parameter type='android.view.View' name='view'/></method><method return='boolean' name='requestWindowFeature' final='true'><parameter type='int' name='featureId'/></method><method name='setCancelMessage'><parameter type='android.os.Message' name='msg'/></method><method name='setCancelable'><parameter type='boolean' name='flag'/></method><method name='setCanceledOnTouchOutside'><parameter type='boolean' name='cancel'/></method><method name='setContentView'><parameter type='int' name='layoutResID'/></method><method name='setContentView'><parameter type='android.view.View' name='view'/></method><method name='setContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='setDismissMessage'><parameter type='android.os.Message' name='msg'/></method><method name='setFeatureDrawable' final='true'><parameter type='int' name='featureId'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setFeatureDrawableAlpha' final='true'><parameter type='int' name='featureId'/><parameter type='int' name='alpha'/></method><method name='setFeatureDrawableResource' final='true'><parameter type='int' name='featureId'/><parameter type='int' name='resId'/></method><method name='setFeatureDrawableUri' final='true'><parameter type='int' name='featureId'/><parameter type='android.net.Uri' name='uri'/></method><method name='setOnCancelListener'><parameter type='android.content.DialogInterface.OnCancelListener' name='listener'/></method><method name='setOnDismissListener'><parameter type='android.content.DialogInterface.OnDismissListener' name='listener'/></method><method name='setOnKeyListener'><parameter type='android.content.DialogInterface.OnKeyListener' name='onKeyListener'/></method><method name='setOwnerActivity' final='true'><parameter type='android.app.Activity' name='activity'/></method><method name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method name='setTitle'><parameter type='int' name='titleId'/></method><method name='setVolumeControlStream' final='true'><parameter type='int' name='streamType'/></method><method name='show'/><method name='takeKeyEvents'><parameter type='boolean' name='get'/></method><method name='unregisterForContextMenu'><parameter type='android.view.View' name='view'/></method><method return='boolean' name='dispatchPopulateAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method name='onAttachedToWindow' api_added='5'/><method name='onBackPressed' api_added='5'/><method name='onDetachedFromWindow' api_added='5'/><method return='boolean' name='onKeyLongPress' api_added='5'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='setOnShowListener' api_added='8'><parameter type='android.content.DialogInterface.OnShowListener' name='listener'/></method><method return='boolean' name='dispatchKeyShortcutEvent' api_added='11'><parameter type='android.view.KeyEvent' name='event'/></method><method return='android.app.ActionBar' name='getActionBar' api_added='11'/><method name='invalidateOptionsMenu' api_added='11'/><method name='onActionModeFinished' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method name='onActionModeStarted' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method return='boolean' name='onKeyShortcut' api_added='11'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='android.view.ActionMode' name='onWindowStartingActionMode' api_added='11'><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method return='boolean' name='dispatchGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='ev'/></method><method return='boolean' name='onGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method></class><class extends='android.app.Activity' name='ExpandableListActivity'><constructor type='android.app.ExpandableListActivity' name='ExpandableListActivity'/><method return='android.widget.ExpandableListAdapter' name='getExpandableListAdapter'/><method return='android.widget.ExpandableListView' name='getExpandableListView'/><method return='long' name='getSelectedId'/><method return='long' name='getSelectedPosition'/><method return='boolean' name='onChildClick'><parameter type='android.widget.ExpandableListView' name='parent'/><parameter type='android.view.View' name='v'/><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='long' name='id'/></method><method name='onGroupCollapse'><parameter type='int' name='groupPosition'/></method><method name='onGroupExpand'><parameter type='int' name='groupPosition'/></method><method name='setListAdapter'><parameter type='android.widget.ExpandableListAdapter' name='adapter'/></method><method return='boolean' name='setSelectedChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='boolean' name='shouldExpandGroup'/></method><method name='setSelectedGroup'><parameter type='int' name='groupPosition'/></method></class><class extends='java.lang.Object' name='Instrumentation'><constructor type='android.app.Instrumentation' name='Instrumentation'/><method name='addMonitor'><parameter type='android.app.Instrumentation.ActivityMonitor' name='monitor'/></method><method return='android.app.Instrumentation.ActivityMonitor' name='addMonitor'><parameter type='android.content.IntentFilter' name='filter'/><parameter type='android.app.Instrumentation.ActivityResult' name='result'/><parameter type='boolean' name='block'/></method><method return='android.app.Instrumentation.ActivityMonitor' name='addMonitor'><parameter type='java.lang.String' name='cls'/><parameter type='android.app.Instrumentation.ActivityResult' name='result'/><parameter type='boolean' name='block'/></method><method name='callActivityOnCreate'><parameter type='android.app.Activity' name='activity'/><parameter type='android.os.Bundle' name='icicle'/></method><method name='callActivityOnDestroy'><parameter type='android.app.Activity' name='activity'/></method><method name='callActivityOnNewIntent'><parameter type='android.app.Activity' name='activity'/><parameter type='android.content.Intent' name='intent'/></method><method name='callActivityOnPause'><parameter type='android.app.Activity' name='activity'/></method><method name='callActivityOnPostCreate'><parameter type='android.app.Activity' name='activity'/><parameter type='android.os.Bundle' name='icicle'/></method><method name='callActivityOnRestart'><parameter type='android.app.Activity' name='activity'/></method><method name='callActivityOnRestoreInstanceState'><parameter type='android.app.Activity' name='activity'/><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='callActivityOnResume'><parameter type='android.app.Activity' name='activity'/></method><method name='callActivityOnSaveInstanceState'><parameter type='android.app.Activity' name='activity'/><parameter type='android.os.Bundle' name='outState'/></method><method name='callActivityOnStart'><parameter type='android.app.Activity' name='activity'/></method><method name='callActivityOnStop'><parameter type='android.app.Activity' name='activity'/></method><method name='callApplicationOnCreate'><parameter type='android.app.Application' name='app'/></method><method return='boolean' name='checkMonitorHit'><parameter type='android.app.Instrumentation.ActivityMonitor' name='monitor'/><parameter type='int' name='minHits'/></method><method name='endPerformanceSnapshot'/><method name='finish'><parameter type='int' name='resultCode'/><parameter type='android.os.Bundle' name='results'/></method><method return='android.os.Bundle' name='getAllocCounts'/><method return='android.os.Bundle' name='getBinderCounts'/><method return='android.content.ComponentName' name='getComponentName'/><method return='android.content.Context' name='getContext'/><method return='android.content.Context' name='getTargetContext'/><method return='boolean' name='invokeContextMenuAction'><parameter type='android.app.Activity' name='targetActivity'/><parameter type='int' name='id'/><parameter type='int' name='flag'/></method><method return='boolean' name='invokeMenuActionSync'><parameter type='android.app.Activity' name='targetActivity'/><parameter type='int' name='id'/><parameter type='int' name='flag'/></method><method return='boolean' name='isProfiling'/><method return='android.app.Activity' name='newActivity'><parameter type='java.lang.Class&lt;?&gt;' name='clazz'/><parameter type='android.content.Context' name='context'/><parameter type='android.os.IBinder' name='token'/><parameter type='android.app.Application' name='application'/><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.pm.ActivityInfo' name='info'/><parameter type='java.lang.CharSequence' name='title'/><parameter type='android.app.Activity' name='parent'/><parameter type='java.lang.String' name='id'/><parameter type='java.lang.Object' name='lastNonConfigurationInstance'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='android.app.Activity' name='newActivity'><parameter type='java.lang.ClassLoader' name='cl'/><parameter type='java.lang.String' name='className'/><parameter type='android.content.Intent' name='intent'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='android.app.Application' name='newApplication'><parameter type='java.lang.ClassLoader' name='cl'/><parameter type='java.lang.String' name='className'/><parameter type='android.content.Context' name='context'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='android.app.Application' static='true' name='newApplication'><parameter type='java.lang.Class&lt;?&gt;' name='clazz'/><parameter type='android.content.Context' name='context'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method name='onCreate'><parameter type='android.os.Bundle' name='arguments'/></method><method name='onDestroy'/><method return='boolean' name='onException'><parameter type='java.lang.Object' name='obj'/><parameter type='java.lang.Throwable' name='e'/></method><method name='onStart'/><method name='removeMonitor'><parameter type='android.app.Instrumentation.ActivityMonitor' name='monitor'/></method><method name='runOnMainSync'><parameter type='java.lang.Runnable' name='runner'/></method><method name='sendCharacterSync'><parameter type='int' name='keyCode'/></method><method name='sendKeyDownUpSync'><parameter type='int' name='key'/></method><method name='sendKeySync'><parameter type='android.view.KeyEvent' name='event'/></method><method name='sendPointerSync'><parameter type='android.view.MotionEvent' name='event'/></method><method name='sendStatus'><parameter type='int' name='resultCode'/><parameter type='android.os.Bundle' name='results'/></method><method name='sendStringSync'><parameter type='java.lang.String' name='text'/></method><method name='sendTrackballEventSync'><parameter type='android.view.MotionEvent' name='event'/></method><method name='setAutomaticPerformanceSnapshots'/><method name='setInTouchMode'><parameter type='boolean' name='inTouch'/></method><method name='start'/><method return='android.app.Activity' name='startActivitySync'><parameter type='android.content.Intent' name='intent'/></method><method name='startAllocCounting'/><method name='startPerformanceSnapshot'/><method name='startProfiling'/><method name='stopAllocCounting'/><method name='stopProfiling'/><method name='waitForIdle'><parameter type='java.lang.Runnable' name='recipient'/></method><method name='waitForIdleSync'/><method return='android.app.Activity' name='waitForMonitor'><parameter type='android.app.Instrumentation.ActivityMonitor' name='monitor'/></method><method return='android.app.Activity' name='waitForMonitorWithTimeout'><parameter type='android.app.Instrumentation.ActivityMonitor' name='monitor'/><parameter type='long' name='timeOut'/></method><method name='callActivityOnUserLeaving' api_added='3'><parameter type='android.app.Activity' name='activity'/></method></class><class extends='java.lang.Object' static='true' name='Instrumentation.ActivityMonitor'><constructor type='android.app.Instrumentation.ActivityMonitor' name='Instrumentation.ActivityMonitor'><parameter type='android.content.IntentFilter' name='which'/><parameter type='android.app.Instrumentation.ActivityResult' name='result'/><parameter type='boolean' name='block'/></constructor><constructor type='android.app.Instrumentation.ActivityMonitor' name='Instrumentation.ActivityMonitor'><parameter type='java.lang.String' name='cls'/><parameter type='android.app.Instrumentation.ActivityResult' name='result'/><parameter type='boolean' name='block'/></constructor><method return='android.content.IntentFilter' name='getFilter' final='true'/><method return='int' name='getHits' final='true'/><method return='android.app.Activity' name='getLastActivity' final='true'/><method return='android.app.Instrumentation.ActivityResult' name='getResult' final='true'/><method return='boolean' name='isBlocking' final='true'/><method return='android.app.Activity' name='waitForActivity' final='true'/><method return='android.app.Activity' name='waitForActivityWithTimeout' final='true'><parameter type='long' name='timeOut'/></method></class><class extends='java.lang.Object' static='true' name='Instrumentation.ActivityResult' final='true'><constructor type='android.app.Instrumentation.ActivityResult' name='Instrumentation.ActivityResult'><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='resultData'/></constructor><method return='int' name='getResultCode'/><method return='android.content.Intent' name='getResultData'/></class><class extends='java.lang.Object' name='KeyguardManager'><method deprecated='13' name='exitKeyguardSecurely'><parameter type='android.app.KeyguardManager.OnKeyguardExitResult' name='callback'/></method><method return='boolean' name='inKeyguardRestrictedInputMode'/><method deprecated='13' return='android.app.KeyguardManager.KeyguardLock' name='newKeyguardLock'><parameter type='java.lang.String' name='tag'/></method><method return='boolean' name='isKeyguardLocked' api_added='16'/><method return='boolean' name='isKeyguardSecure' api_added='16'/></class><class extends='java.lang.Object' deprecated='13' name='KeyguardManager.KeyguardLock'><method name='disableKeyguard'/><method name='reenableKeyguard'/></class><class extends='android.app.ListActivity' abstract='true' name='LauncherActivity'><constructor type='android.app.LauncherActivity' name='LauncherActivity'/><method visibility='protected' return='android.content.Intent' abstract='true' name='getTargetIntent'/><method visibility='protected' return='android.content.Intent' name='intentForPosition' api_added='3'><parameter type='int' name='position'/></method><method return='java.util.List&lt;android.app.LauncherActivity.ListItem&gt;' name='makeListItems' api_added='3'/><method visibility='protected' return='android.app.LauncherActivity.ListItem' name='itemForPosition' api_added='4'><parameter type='int' name='position'/></method><method visibility='protected' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' name='onQueryPackageManager' api_added='5'><parameter type='android.content.Intent' name='queryIntent'/></method><method visibility='protected' name='onSetContentView' api_added='5'/></class><class extends='android.app.Activity' name='ListActivity'><constructor type='android.app.ListActivity' name='ListActivity'/><method return='android.widget.ListAdapter' name='getListAdapter'/><method return='android.widget.ListView' name='getListView'/><method return='long' name='getSelectedItemId'/><method return='int' name='getSelectedItemPosition'/><method visibility='protected' name='onListItemClick'><parameter type='android.widget.ListView' name='l'/><parameter type='android.view.View' name='v'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method><method name='setListAdapter'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method name='setSelection'><parameter type='int' name='position'/></method></class><class extends='java.lang.Object' deprecated='13' name='LocalActivityManager'><constructor type='android.app.LocalActivityManager' name='LocalActivityManager'><parameter type='android.app.Activity' name='parent'/><parameter type='boolean' name='singleMode'/></constructor><method return='android.view.Window' name='destroyActivity'><parameter type='java.lang.String' name='id'/><parameter type='boolean' name='finish'/></method><method name='dispatchCreate'><parameter type='android.os.Bundle' name='state'/></method><method name='dispatchDestroy'><parameter type='boolean' name='finishing'/></method><method name='dispatchPause'><parameter type='boolean' name='finishing'/></method><method name='dispatchResume'/><method name='dispatchStop'/><method return='android.app.Activity' name='getActivity'><parameter type='java.lang.String' name='id'/></method><method return='android.app.Activity' name='getCurrentActivity'/><method return='java.lang.String' name='getCurrentId'/><method name='removeAllActivities'/><method return='android.os.Bundle' name='saveInstanceState'/><method return='android.view.Window' name='startActivity'><parameter type='java.lang.String' name='id'/><parameter type='android.content.Intent' name='intent'/></method></class><class extends='java.lang.Object' name='Notification'><constructor type='android.app.Notification' name='Notification'/><constructor type='android.app.Notification' name='Notification'><parameter type='int' name='icon'/><parameter type='java.lang.CharSequence' name='tickerText'/><parameter type='long' name='when'/></constructor><constructor type='android.app.Notification' name='Notification'><parameter type='android.os.Parcel' name='parcel'/></constructor><constructor type='android.app.deprecated Notification' name='deprecated Notification' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.lang.CharSequence' name='arg1'/><parameter type='long' name='arg2'/></constructor><method return='int' name='describeContents'/><method deprecated='11' name='setLatestEventInfo'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='contentTitle'/><parameter type='java.lang.CharSequence' name='contentText'/><parameter type='android.app.PendingIntent' name='contentIntent'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='android.app.Notification' name='clone' api_added='9'/></class><class extends='java.lang.Object' name='NotificationManager'><method name='cancel'><parameter type='int' name='id'/></method><method name='cancelAll'/><method name='notify'><parameter type='int' name='id'/><parameter type='android.app.Notification' name='notification'/></method><method name='cancel' api_added='5'><parameter type='java.lang.String' name='tag'/><parameter type='int' name='id'/></method><method name='notify' api_added='5'><parameter type='java.lang.String' name='tag'/><parameter type='int' name='id'/><parameter type='android.app.Notification' name='notification'/></method></class><class extends='java.lang.Object' name='PendingIntent' final='true'><method name='cancel'/><method return='int' name='describeContents'/><method return='android.app.PendingIntent' static='true' name='getActivity'><parameter type='android.content.Context' name='context'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='android.app.PendingIntent' static='true' name='getBroadcast'><parameter type='android.content.Context' name='context'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='android.app.PendingIntent' static='true' name='getService'><parameter type='android.content.Context' name='context'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='getTargetPackage'/><method return='android.app.PendingIntent' static='true' name='readPendingIntentOrNullFromParcel'><parameter type='android.os.Parcel' name='in'/></method><method name='send'><exception type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/></method><method name='send'><parameter type='int' name='code'/><exception type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/></method><method name='send'><parameter type='android.content.Context' name='context'/><parameter type='int' name='code'/><parameter type='android.content.Intent' name='intent'/><exception type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/></method><method name='send'><parameter type='int' name='code'/><parameter type='android.app.PendingIntent.OnFinished' name='onFinished'/><parameter type='android.os.Handler' name='handler'/><exception type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/></method><method name='send'><parameter type='android.content.Context' name='context'/><parameter type='int' name='code'/><parameter type='android.content.Intent' name='intent'/><parameter type='android.app.PendingIntent.OnFinished' name='onFinished'/><parameter type='android.os.Handler' name='handler'/><exception type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/></method><method static='true' name='writePendingIntentOrNullToParcel'><parameter type='android.app.PendingIntent' name='sender'/><parameter type='android.os.Parcel' name='out'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='android.content.IntentSender' name='getIntentSender' api_added='4'/><method return='android.app.PendingIntent' static='true' name='getActivities' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='int' name='requestCode'/><parameter type='android.content.Intent[]' name='intents'/><parameter type='int' name='flags'/></method><method name='send' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.content.Intent' name='arg2'/><parameter type='android.app.PendingIntent.OnFinished' name='arg3'/><parameter type='android.os.Handler' name='arg4'/><parameter type='java.lang.String' name='arg5'/></method><method return='android.app.PendingIntent' static='true' name='getActivities' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.content.Intent[]' name='arg2'/><parameter type='int' name='arg3'/><parameter type='android.os.Bundle' name='arg4'/></method><method return='android.app.PendingIntent' static='true' name='getActivity' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.content.Intent' name='arg2'/><parameter type='int' name='arg3'/><parameter type='android.os.Bundle' name='arg4'/></method></class><class extends='android.util.AndroidException' static='true' name='PendingIntent.CanceledException'><constructor type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'/><constructor type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'><parameter type='java.lang.String' name='name'/></constructor><constructor type='android.app.PendingIntent.CanceledException' name='PendingIntent.CanceledException'><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='android.app.AlertDialog' name='ProgressDialog'><constructor type='android.app.ProgressDialog' name='ProgressDialog'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.app.ProgressDialog' name='ProgressDialog'><parameter type='android.content.Context' name='context'/><parameter type='int' name='theme'/></constructor><method return='int' name='getMax'/><method return='int' name='getProgress'/><method return='int' name='getSecondaryProgress'/><method name='incrementProgressBy'><parameter type='int' name='diff'/></method><method name='incrementSecondaryProgressBy'><parameter type='int' name='diff'/></method><method return='boolean' name='isIndeterminate'/><method name='onStart'/><method name='setIndeterminate'><parameter type='boolean' name='indeterminate'/></method><method name='setIndeterminateDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setMax'><parameter type='int' name='max'/></method><method name='setProgress'><parameter type='int' name='value'/></method><method name='setProgressDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setProgressStyle'><parameter type='int' name='style'/></method><method name='setSecondaryProgress'><parameter type='int' name='secondaryProgress'/></method><method return='android.app.ProgressDialog' static='true' name='show'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='message'/></method><method return='android.app.ProgressDialog' static='true' name='show'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='message'/><parameter type='boolean' name='indeterminate'/></method><method return='android.app.ProgressDialog' static='true' name='show'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='message'/><parameter type='boolean' name='indeterminate'/><parameter type='boolean' name='cancelable'/></method><method return='android.app.ProgressDialog' static='true' name='show'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='message'/><parameter type='boolean' name='indeterminate'/><parameter type='boolean' name='cancelable'/><parameter type='android.content.DialogInterface.OnCancelListener' name='cancelListener'/></method><method name='setProgressNumberFormat' api_added='11'><parameter type='java.lang.String' name='format'/></method><method name='setProgressPercentFormat' api_added='11'><parameter type='java.text.NumberFormat' name='format'/></method></class><class extends='java.lang.Object' name='SearchManager'><method deprecated='4' name='onCancel'><parameter type='android.content.DialogInterface' name='dialog'/></method><method deprecated='4' name='onDismiss'><parameter type='android.content.DialogInterface' name='dialog'/></method><method name='setOnCancelListener'><parameter type='android.app.SearchManager.OnCancelListener' name='listener'/></method><method name='setOnDismissListener'><parameter type='android.app.SearchManager.OnDismissListener' name='listener'/></method><method name='startSearch'><parameter type='java.lang.String' name='initialQuery'/><parameter type='boolean' name='selectInitialQuery'/><parameter type='android.content.ComponentName' name='launchActivity'/><parameter type='android.os.Bundle' name='appSearchData'/><parameter type='boolean' name='globalSearch'/></method><method name='stopSearch'/><method name='triggerSearch' api_added='5'><parameter type='java.lang.String' name='query'/><parameter type='android.content.ComponentName' name='launchActivity'/><parameter type='android.os.Bundle' name='appSearchData'/></method><method return='android.app.SearchableInfo' name='getSearchableInfo' api_added='8'><parameter type='android.content.ComponentName' name='componentName'/></method><method return='java.util.List&lt;android.app.SearchableInfo&gt;' name='getSearchablesInGlobalSearch' api_added='8'/><method return='android.content.ComponentName' name='getGlobalSearchActivity' api_added='16'/></class><class extends='android.content.ContextWrapper' abstract='true' name='Service'><constructor type='android.app.Service' name='Service'/><method visibility='protected' name='dump'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method return='android.app.Application' name='getApplication' final='true'/><method return='android.os.IBinder' abstract='true' name='onBind'><parameter type='android.content.Intent' name='intent'/></method><method name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method name='onCreate'/><method name='onDestroy'/><method name='onLowMemory'/><method name='onRebind'><parameter type='android.content.Intent' name='intent'/></method><method deprecated='5' name='onStart'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='startId'/></method><method return='boolean' name='onUnbind'><parameter type='android.content.Intent' name='intent'/></method><method deprecated='5' api_removed='11' name='setForeground' final='true'><parameter type='boolean' name='isForeground'/></method><method name='stopSelf' final='true'/><method name='stopSelf' final='true'><parameter type='int' name='startId'/></method><method return='boolean' name='stopSelfResult' final='true'><parameter type='int' name='startId'/></method><method return='int' name='onStartCommand' api_added='5'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/><parameter type='int' name='startId'/></method><method name='startForeground' api_added='5' final='true'><parameter type='int' name='id'/><parameter type='android.app.Notification' name='notification'/></method><method name='stopForeground' api_added='5' final='true'><parameter type='boolean' name='removeNotification'/></method><method name='onTaskRemoved' api_added='14'><parameter type='android.content.Intent' name='arg0'/></method><method name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.app.ActivityGroup' deprecated='13' name='TabActivity'><constructor type='android.app.TabActivity' name='TabActivity'/><method return='android.widget.TabHost' name='getTabHost'/><method return='android.widget.TabWidget' name='getTabWidget'/><method name='setDefaultTab'><parameter type='java.lang.String' name='tag'/></method><method name='setDefaultTab'><parameter type='int' name='index'/></method></class><class extends='android.app.AlertDialog' name='TimePickerDialog'><constructor type='android.app.TimePickerDialog' name='TimePickerDialog'><parameter type='android.content.Context' name='context'/><parameter type='android.app.TimePickerDialog.OnTimeSetListener' name='callBack'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/><parameter type='boolean' name='is24HourView'/></constructor><constructor type='android.app.TimePickerDialog' name='TimePickerDialog'><parameter type='android.content.Context' name='context'/><parameter type='int' name='theme'/><parameter type='android.app.TimePickerDialog.OnTimeSetListener' name='callBack'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/><parameter type='boolean' name='is24HourView'/></constructor><method name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/></method><method name='onTimeChanged'><parameter type='android.widget.TimePicker' name='view'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/></method><method name='updateTime'><parameter type='int' name='hourOfDay'/><parameter type='int' name='minutOfHour'/></method></class><class extends='java.lang.Object' static='true' name='ActivityManager.RunningAppProcessInfo' api_added='3'><constructor type='android.app.ActivityManager.RunningAppProcessInfo' name='ActivityManager.RunningAppProcessInfo' api_added='3'/><constructor type='android.app.ActivityManager.RunningAppProcessInfo' name='ActivityManager.RunningAppProcessInfo' api_added='3'><parameter type='java.lang.String' name='pProcessName'/><parameter type='int' name='pPid'/><parameter type='java.lang.String[]' name='pArr'/></constructor><method return='int' name='describeContents' api_added='3'/><method name='readFromParcel' api_added='3'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.app.Service' abstract='true' name='IntentService' api_added='3'><constructor type='android.app.IntentService' name='IntentService' api_added='3'><parameter type='java.lang.String' name='name'/></constructor><method return='android.os.IBinder' name='onBind' api_added='3'><parameter type='android.content.Intent' name='intent'/></method><method visibility='protected' abstract='true' name='onHandleIntent' api_added='3'><parameter type='android.content.Intent' name='intent'/></method><method name='setIntentRedelivery' api_added='5'><parameter type='boolean' name='enabled'/></method></class><class extends='java.lang.Object' name='LauncherActivity.IconResizer' api_added='3'><constructor type='android.app.LauncherActivity.IconResizer' name='LauncherActivity.IconResizer' api_added='3'/><method return='android.graphics.drawable.Drawable' name='createIconThumbnail' api_added='3'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method></class><class extends='java.lang.Object' static='true' name='LauncherActivity.ListItem' api_added='3'><constructor type='android.app.LauncherActivity.ListItem' name='LauncherActivity.ListItem' api_added='3'/></class><class extends='java.lang.Object' name='WallpaperManager' api_added='5'><method name='clear' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method name='clearWallpaperOffsets' api_added='5'><parameter type='android.os.IBinder' name='windowToken'/></method><method return='int' name='getDesiredMinimumHeight' api_added='5'/><method return='int' name='getDesiredMinimumWidth' api_added='5'/><method return='android.graphics.drawable.Drawable' name='getDrawable' api_added='5'/><method return='android.graphics.drawable.Drawable' name='getFastDrawable' api_added='5'/><method return='android.app.WallpaperManager' static='true' name='getInstance' api_added='5'><parameter type='android.content.Context' name='context'/></method><method return='android.graphics.drawable.Drawable' name='peekDrawable' api_added='5'/><method return='android.graphics.drawable.Drawable' name='peekFastDrawable' api_added='5'/><method name='setBitmap' api_added='5'><parameter type='android.graphics.Bitmap' name='bitmap'/><exception type='java.io.IOException' name='IOException'/></method><method name='setResource' api_added='5'><parameter type='int' name='resid'/><exception type='java.io.IOException' name='IOException'/></method><method name='setStream' api_added='5'><parameter type='java.io.InputStream' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method name='setWallpaperOffsets' api_added='5'><parameter type='android.os.IBinder' name='windowToken'/><parameter type='float' name='xOffset'/><parameter type='float' name='yOffset'/></method><method name='suggestDesiredDimensions' api_added='5'><parameter type='int' name='minimumWidth'/><parameter type='int' name='minimumHeight'/></method><method return='android.app.WallpaperInfo' name='getWallpaperInfo' api_added='7'/><method name='sendWallpaperCommand' api_added='7'><parameter type='android.os.IBinder' name='windowToken'/><parameter type='java.lang.String' name='action'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='android.os.Bundle' name='extras'/></method><method name='setWallpaperOffsetSteps' api_added='7'><parameter type='float' name='xStep'/><parameter type='float' name='yStep'/></method><method name='forgetLoadedWallpaper' api_added='14'/></class><class extends='java.lang.Object' name='WallpaperInfo' api_added='7' final='true'><constructor type='android.app.WallpaperInfo' name='WallpaperInfo' api_added='7'><parameter type='android.content.Context' name='context'/><parameter type='android.content.pm.ResolveInfo' name='service'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></constructor><method return='int' name='describeContents' api_added='7'/><method name='dump' api_added='7'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.content.ComponentName' name='getComponent' api_added='7'/><method return='java.lang.String' name='getPackageName' api_added='7'/><method return='android.content.pm.ServiceInfo' name='getServiceInfo' api_added='7'/><method return='java.lang.String' name='getServiceName' api_added='7'/><method return='java.lang.String' name='getSettingsActivity' api_added='7'/><method return='java.lang.CharSequence' name='loadAuthor' api_added='7'><parameter type='android.content.pm.PackageManager' name='pm'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.CharSequence' name='loadDescription' api_added='7'><parameter type='android.content.pm.PackageManager' name='pm'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.graphics.drawable.Drawable' name='loadIcon' api_added='7'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel' api_added='7'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='android.graphics.drawable.Drawable' name='loadThumbnail' api_added='7'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method name='writeToParcel' api_added='7'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='SearchableInfo' api_added='8' final='true'><method return='boolean' name='autoUrlDetect' api_added='8'/><method return='int' name='describeContents' api_added='8'/><method return='int' name='getHintId' api_added='8'/><method return='int' name='getImeOptions' api_added='8'/><method return='int' name='getInputType' api_added='8'/><method return='android.content.ComponentName' name='getSearchActivity' api_added='8'/><method return='int' name='getSettingsDescriptionId' api_added='8'/><method return='java.lang.String' name='getSuggestAuthority' api_added='8'/><method return='java.lang.String' name='getSuggestIntentAction' api_added='8'/><method return='java.lang.String' name='getSuggestIntentData' api_added='8'/><method return='java.lang.String' name='getSuggestPackage' api_added='8'/><method return='java.lang.String' name='getSuggestPath' api_added='8'/><method return='java.lang.String' name='getSuggestSelection' api_added='8'/><method return='int' name='getSuggestThreshold' api_added='8'/><method return='int' name='getVoiceLanguageId' api_added='8'/><method return='int' name='getVoiceLanguageModeId' api_added='8'/><method return='int' name='getVoiceMaxResults' api_added='8'/><method return='int' name='getVoicePromptTextId' api_added='8'/><method return='boolean' name='getVoiceSearchEnabled' api_added='8'/><method return='boolean' name='getVoiceSearchLaunchRecognizer' api_added='8'/><method return='boolean' name='getVoiceSearchLaunchWebSearch' api_added='8'/><method return='boolean' name='queryAfterZeroResults' api_added='8'/><method return='boolean' name='shouldIncludeInGlobalSearch' api_added='8'/><method return='boolean' name='shouldRewriteQueryFromData' api_added='8'/><method return='boolean' name='shouldRewriteQueryFromText' api_added='8'/><method name='writeToParcel' api_added='8'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='UiModeManager' api_added='8'><method name='disableCarMode' api_added='8'><parameter type='int' name='flags'/></method><method name='enableCarMode' api_added='8'><parameter type='int' name='flags'/></method><method return='int' name='getCurrentModeType' api_added='8'/><method return='int' name='getNightMode' api_added='8'/><method name='setNightMode' api_added='8'><parameter type='int' name='mode'/></method></class><class extends='java.lang.Object' name='DownloadManager' api_added='9'><method return='long' name='enqueue' api_added='9'><parameter type='android.app.DownloadManager.Request' name='request'/></method><method return='android.os.ParcelFileDescriptor' name='openDownloadedFile' api_added='9'><parameter type='long' name='id'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.Cursor' name='query' api_added='9'><parameter type='android.app.DownloadManager.Query' name='query'/></method><method return='int' name='remove' api_added='9'><parameter type='long...' name='ids'/></method><method return='java.lang.Long' static='true' name='getMaxBytesOverMobile' api_added='11'><parameter type='android.content.Context' name='context'/></method><method return='java.lang.String' name='getMimeTypeForDownloadedFile' api_added='11'><parameter type='long' name='id'/></method><method return='java.lang.Long' static='true' name='getRecommendedMaxBytesOverMobile' api_added='11'><parameter type='android.content.Context' name='context'/></method><method return='android.net.Uri' name='getUriForDownloadedFile' api_added='11'><parameter type='long' name='id'/></method><method return='long' name='addCompletedDownload' api_added='12'><parameter type='java.lang.String' name='title'/><parameter type='java.lang.String' name='description'/><parameter type='boolean' name='isMediaScannerScannable'/><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='path'/><parameter type='long' name='length'/><parameter type='boolean' name='showNotification'/></method></class><class extends='java.lang.Object' static='true' name='DownloadManager.Query' api_added='9'><constructor type='android.app.DownloadManager.Query' name='DownloadManager.Query' api_added='9'/><method return='android.app.DownloadManager.Query' name='setFilterById' api_added='9'><parameter type='long...' name='ids'/></method><method return='android.app.DownloadManager.Query' name='setFilterByStatus' api_added='9'><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='DownloadManager.Request' api_added='9'><constructor type='android.app.DownloadManager.Request' name='DownloadManager.Request' api_added='9'><parameter type='android.net.Uri' name='uri'/></constructor><method return='android.app.DownloadManager.Request' name='addRequestHeader' api_added='9'><parameter type='java.lang.String' name='header'/><parameter type='java.lang.String' name='value'/></method><method return='android.app.DownloadManager.Request' name='setAllowedNetworkTypes' api_added='9'><parameter type='int' name='flags'/></method><method return='android.app.DownloadManager.Request' name='setAllowedOverRoaming' api_added='9'><parameter type='boolean' name='allowed'/></method><method return='android.app.DownloadManager.Request' name='setDescription' api_added='9'><parameter type='java.lang.CharSequence' name='description'/></method><method return='android.app.DownloadManager.Request' name='setDestinationInExternalFilesDir' api_added='9'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='dirType'/><parameter type='java.lang.String' name='subPath'/></method><method return='android.app.DownloadManager.Request' name='setDestinationInExternalPublicDir' api_added='9'><parameter type='java.lang.String' name='dirType'/><parameter type='java.lang.String' name='subPath'/></method><method return='android.app.DownloadManager.Request' name='setDestinationUri' api_added='9'><parameter type='android.net.Uri' name='uri'/></method><method return='android.app.DownloadManager.Request' name='setMimeType' api_added='9'><parameter type='java.lang.String' name='mimeType'/></method><method deprecated='11' return='android.app.DownloadManager.Request' name='setShowRunningNotification' api_added='9'><parameter type='boolean' name='show'/></method><method return='android.app.DownloadManager.Request' name='setTitle' api_added='9'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.app.DownloadManager.Request' name='setVisibleInDownloadsUi' api_added='9'><parameter type='boolean' name='isVisible'/></method><method name='allowScanningByMediaScanner' api_added='11'/><method return='android.app.DownloadManager.Request' name='setNotificationVisibility' api_added='11'><parameter type='int' name='visibility'/></method><method return='android.app.DownloadManager.Request' name='setAllowedOverMetered' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='android.app.Activity' name='NativeActivity' api_added='9'><constructor type='android.app.NativeActivity' name='NativeActivity' api_added='9'/><method name='onGlobalLayout' api_added='9'/><method name='onInputQueueCreated' api_added='9'><parameter type='android.view.InputQueue' name='queue'/></method><method name='onInputQueueDestroyed' api_added='9'><parameter type='android.view.InputQueue' name='queue'/></method><method name='surfaceChanged' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/><parameter type='int' name='format'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='surfaceCreated' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='surfaceDestroyed' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='surfaceRedrawNeeded' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/></method></class><class extends='java.lang.Object' abstract='true' name='ActionBar' api_added='11'><constructor type='android.app.ActionBar' name='ActionBar' api_added='11'/><method abstract='true' name='addOnMenuVisibilityListener' api_added='11'><parameter type='android.app.ActionBar.OnMenuVisibilityListener' name='listener'/></method><method abstract='true' name='addTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/></method><method abstract='true' name='addTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='boolean' name='setSelected'/></method><method abstract='true' name='addTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='int' name='position'/></method><method abstract='true' name='addTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='int' name='position'/><parameter type='boolean' name='setSelected'/></method><method return='android.view.View' abstract='true' name='getCustomView' api_added='11'/><method return='int' abstract='true' name='getDisplayOptions' api_added='11'/><method return='int' abstract='true' name='getHeight' api_added='11'/><method return='int' abstract='true' name='getNavigationItemCount' api_added='11'/><method return='int' abstract='true' name='getNavigationMode' api_added='11'/><method return='int' abstract='true' name='getSelectedNavigationIndex' api_added='11'/><method return='android.app.ActionBar.Tab' abstract='true' name='getSelectedTab' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getSubtitle' api_added='11'/><method return='android.app.ActionBar.Tab' abstract='true' name='getTabAt' api_added='11'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getTabCount' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getTitle' api_added='11'/><method abstract='true' name='hide' api_added='11'/><method return='boolean' abstract='true' name='isShowing' api_added='11'/><method return='android.app.ActionBar.Tab' abstract='true' name='newTab' api_added='11'/><method abstract='true' name='removeAllTabs' api_added='11'/><method abstract='true' name='removeOnMenuVisibilityListener' api_added='11'><parameter type='android.app.ActionBar.OnMenuVisibilityListener' name='listener'/></method><method abstract='true' name='removeTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/></method><method abstract='true' name='removeTabAt' api_added='11'><parameter type='int' name='position'/></method><method abstract='true' name='selectTab' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/></method><method abstract='true' name='setBackgroundDrawable' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method abstract='true' name='setCustomView' api_added='11'><parameter type='android.view.View' name='view'/></method><method abstract='true' name='setCustomView' api_added='11'><parameter type='android.view.View' name='view'/><parameter type='android.app.ActionBar.LayoutParams' name='layoutParams'/></method><method abstract='true' name='setCustomView' api_added='11'><parameter type='int' name='resId'/></method><method abstract='true' name='setDisplayHomeAsUpEnabled' api_added='11'><parameter type='boolean' name='showHomeAsUp'/></method><method abstract='true' name='setDisplayOptions' api_added='11'><parameter type='int' name='options'/></method><method abstract='true' name='setDisplayOptions' api_added='11'><parameter type='int' name='options'/><parameter type='int' name='mask'/></method><method abstract='true' name='setDisplayShowCustomEnabled' api_added='11'><parameter type='boolean' name='showCustom'/></method><method abstract='true' name='setDisplayShowHomeEnabled' api_added='11'><parameter type='boolean' name='showHome'/></method><method abstract='true' name='setDisplayShowTitleEnabled' api_added='11'><parameter type='boolean' name='showTitle'/></method><method abstract='true' name='setDisplayUseLogoEnabled' api_added='11'><parameter type='boolean' name='useLogo'/></method><method abstract='true' name='setListNavigationCallbacks' api_added='11'><parameter type='android.widget.SpinnerAdapter' name='adapter'/><parameter type='android.app.ActionBar.OnNavigationListener' name='callback'/></method><method abstract='true' name='setNavigationMode' api_added='11'><parameter type='int' name='mode'/></method><method abstract='true' name='setSelectedNavigationItem' api_added='11'><parameter type='int' name='position'/></method><method abstract='true' name='setSubtitle' api_added='11'><parameter type='java.lang.CharSequence' name='subtitle'/></method><method abstract='true' name='setSubtitle' api_added='11'><parameter type='int' name='resId'/></method><method abstract='true' name='setTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/></method><method abstract='true' name='setTitle' api_added='11'><parameter type='int' name='resId'/></method><method abstract='true' name='show' api_added='11'/><method return='android.content.Context' name='getThemedContext' api_added='14'/><method name='setHomeButtonEnabled' api_added='14'><parameter type='boolean' name='arg0'/></method><method abstract='true' name='setIcon' api_added='14'><parameter type='int' name='arg0'/></method><method abstract='true' name='setIcon' api_added='14'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method abstract='true' name='setLogo' api_added='14'><parameter type='int' name='arg0'/></method><method abstract='true' name='setLogo' api_added='14'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setSplitBackgroundDrawable' api_added='14'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setStackedBackgroundDrawable' api_added='14'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method></class><class extends='android.view.ViewGroup.MarginLayoutParams' static='true' name='ActionBar.LayoutParams' api_added='11'><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='gravity'/></constructor><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='int' name='gravity'/></constructor><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='android.app.ActionBar.LayoutParams' name='source'/></constructor><constructor type='android.app.ActionBar.LayoutParams' name='ActionBar.LayoutParams' api_added='11'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor></class><class extends='java.lang.Object' abstract='true' static='true' name='ActionBar.Tab' api_added='11'><constructor type='android.app.ActionBar.Tab' name='ActionBar.Tab' api_added='11'/><method return='android.view.View' abstract='true' name='getCustomView' api_added='11'/><method return='android.graphics.drawable.Drawable' abstract='true' name='getIcon' api_added='11'/><method return='int' abstract='true' name='getPosition' api_added='11'/><method return='java.lang.Object' abstract='true' name='getTag' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getText' api_added='11'/><method abstract='true' name='select' api_added='11'/><method return='android.app.ActionBar.Tab' abstract='true' name='setCustomView' api_added='11'><parameter type='android.view.View' name='view'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setCustomView' api_added='11'><parameter type='int' name='layoutResId'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setIcon' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setIcon' api_added='11'><parameter type='int' name='resId'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setTabListener' api_added='11'><parameter type='android.app.ActionBar.TabListener' name='listener'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setTag' api_added='11'><parameter type='java.lang.Object' name='obj'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setText' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setText' api_added='11'><parameter type='int' name='resId'/></method><method return='java.lang.CharSequence' abstract='true' name='getContentDescription' api_added='14'/><method return='android.app.ActionBar.Tab' abstract='true' name='setContentDescription' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.app.ActionBar.Tab' abstract='true' name='setContentDescription' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method></class><class extends='android.app.Fragment' name='DialogFragment' api_added='11'><constructor type='android.app.DialogFragment' name='DialogFragment' api_added='11'/><method name='dismiss' api_added='11'/><method return='android.app.Dialog' name='getDialog' api_added='11'/><method return='boolean' name='getShowsDialog' api_added='11'/><method return='int' name='getTheme' api_added='11'/><method return='boolean' name='isCancelable' api_added='11'/><method name='onCancel' api_added='11'><parameter type='android.content.DialogInterface' name='dialog'/></method><method return='android.app.Dialog' name='onCreateDialog' api_added='11'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onDismiss' api_added='11'><parameter type='android.content.DialogInterface' name='dialog'/></method><method name='setCancelable' api_added='11'><parameter type='boolean' name='cancelable'/></method><method name='setShowsDialog' api_added='11'><parameter type='boolean' name='showsDialog'/></method><method name='setStyle' api_added='11'><parameter type='int' name='style'/><parameter type='int' name='theme'/></method><method name='show' api_added='11'><parameter type='android.app.FragmentManager' name='manager'/><parameter type='java.lang.String' name='tag'/></method><method return='int' name='show' api_added='11'><parameter type='android.app.FragmentTransaction' name='transaction'/><parameter type='java.lang.String' name='tag'/></method><method name='dismissAllowingStateLoss' api_added='12'/></class><class extends='java.lang.Object' name='Fragment' api_added='11'><constructor type='android.app.Fragment' name='Fragment' api_added='11'/><method name='dump' api_added='11'><parameter type='java.lang.String' name='prefix'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method return='boolean' name='equals' api_added='11' final='true'><parameter type='java.lang.Object' name='o'/></method><method return='android.app.Activity' name='getActivity' api_added='11' final='true'/><method return='android.os.Bundle' name='getArguments' api_added='11' final='true'/><method return='android.app.FragmentManager' name='getFragmentManager' api_added='11' final='true'/><method return='int' name='getId' api_added='11' final='true'/><method return='android.app.LoaderManager' name='getLoaderManager' api_added='11'/><method return='android.content.res.Resources' name='getResources' api_added='11' final='true'/><method return='boolean' name='getRetainInstance' api_added='11' final='true'/><method return='java.lang.String' name='getString' api_added='11' final='true'><parameter type='int' name='resId'/></method><method return='java.lang.String' name='getString' api_added='11' final='true'><parameter type='int' name='resId'/><parameter type='java.lang.Object...' name='formatArgs'/></method><method return='java.lang.String' name='getTag' api_added='11' final='true'/><method return='android.app.Fragment' name='getTargetFragment' api_added='11' final='true'/><method return='int' name='getTargetRequestCode' api_added='11' final='true'/><method return='java.lang.CharSequence' name='getText' api_added='11' final='true'><parameter type='int' name='resId'/></method><method return='android.view.View' name='getView' api_added='11'/><method return='int' name='hashCode' api_added='11' final='true'/><method return='android.app.Fragment' static='true' name='instantiate' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='fname'/></method><method return='android.app.Fragment' static='true' name='instantiate' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='fname'/><parameter type='android.os.Bundle' name='args'/></method><method return='boolean' name='isAdded' api_added='11' final='true'/><method return='boolean' name='isHidden' api_added='11' final='true'/><method return='boolean' name='isInLayout' api_added='11' final='true'/><method return='boolean' name='isRemoving' api_added='11' final='true'/><method return='boolean' name='isResumed' api_added='11' final='true'/><method return='boolean' name='isVisible' api_added='11' final='true'/><method name='onActivityCreated' api_added='11'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onActivityResult' api_added='11'><parameter type='int' name='requestCode'/><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='data'/></method><method name='onAttach' api_added='11'><parameter type='android.app.Activity' name='activity'/></method><method name='onConfigurationChanged' api_added='11'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method return='boolean' name='onContextItemSelected' api_added='11'><parameter type='android.view.MenuItem' name='item'/></method><method name='onCreate' api_added='11'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method return='android.animation.Animator' name='onCreateAnimator' api_added='11'><parameter type='int' name='transit'/><parameter type='boolean' name='enter'/><parameter type='int' name='nextAnim'/></method><method name='onCreateContextMenu' api_added='11'><parameter type='android.view.ContextMenu' name='menu'/><parameter type='android.view.View' name='v'/><parameter type='android.view.ContextMenu.ContextMenuInfo' name='menuInfo'/></method><method name='onCreateOptionsMenu' api_added='11'><parameter type='android.view.Menu' name='menu'/><parameter type='android.view.MenuInflater' name='inflater'/></method><method return='android.view.View' name='onCreateView' api_added='11'><parameter type='android.view.LayoutInflater' name='inflater'/><parameter type='android.view.ViewGroup' name='container'/><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onDestroy' api_added='11'/><method name='onDestroyOptionsMenu' api_added='11'/><method name='onDestroyView' api_added='11'/><method name='onDetach' api_added='11'/><method name='onHiddenChanged' api_added='11'><parameter type='boolean' name='hidden'/></method><method deprecated='12' name='onInflate' api_added='11'><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='onLowMemory' api_added='11'/><method return='boolean' name='onOptionsItemSelected' api_added='11'><parameter type='android.view.MenuItem' name='item'/></method><method name='onOptionsMenuClosed' api_added='11'><parameter type='android.view.Menu' name='menu'/></method><method name='onPause' api_added='11'/><method name='onPrepareOptionsMenu' api_added='11'><parameter type='android.view.Menu' name='menu'/></method><method name='onResume' api_added='11'/><method name='onSaveInstanceState' api_added='11'><parameter type='android.os.Bundle' name='outState'/></method><method name='onStart' api_added='11'/><method name='onStop' api_added='11'/><method name='registerForContextMenu' api_added='11'><parameter type='android.view.View' name='view'/></method><method name='setArguments' api_added='11'><parameter type='android.os.Bundle' name='args'/></method><method name='setHasOptionsMenu' api_added='11'><parameter type='boolean' name='hasMenu'/></method><method name='setRetainInstance' api_added='11'><parameter type='boolean' name='retain'/></method><method name='setTargetFragment' api_added='11'><parameter type='android.app.Fragment' name='fragment'/><parameter type='int' name='requestCode'/></method><method name='startActivity' api_added='11'><parameter type='android.content.Intent' name='intent'/></method><method name='startActivityForResult' api_added='11'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='requestCode'/></method><method name='unregisterForContextMenu' api_added='11'><parameter type='android.view.View' name='view'/></method><method name='onInflate' api_added='12'><parameter type='android.app.Activity' name='activity'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method return='boolean' name='isDetached' api_added='13' final='true'/><method name='onViewCreated' api_added='13'><parameter type='android.view.View' name='view'/><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method name='setInitialSavedState' api_added='13'><parameter type='android.app.Fragment.SavedState' name='state'/></method><method name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method><method name='setMenuVisibility' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='boolean' name='getUserVisibleHint' api_added='15'/><method name='setUserVisibleHint' api_added='15'><parameter type='boolean' name='arg0'/></method><method name='startActivity' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='startActivityForResult' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method></class><class extends='android.util.AndroidRuntimeException' static='true' name='Fragment.InstantiationException' api_added='11'><constructor type='android.app.Fragment.InstantiationException' name='Fragment.InstantiationException' api_added='11'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='android.view.ViewGroup' name='FragmentBreadCrumbs' api_added='11'><constructor type='android.app.FragmentBreadCrumbs' name='FragmentBreadCrumbs' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.app.FragmentBreadCrumbs' name='FragmentBreadCrumbs' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.app.FragmentBreadCrumbs' name='FragmentBreadCrumbs' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='onBackStackChanged' api_added='11'/><method visibility='protected' name='onLayout' api_added='11'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setActivity' api_added='11'><parameter type='android.app.Activity' name='a'/></method><method name='setMaxVisible' api_added='11'><parameter type='int' name='visibleCrumbs'/></method><method name='setParentTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='shortTitle'/><parameter type='android.view.View.OnClickListener' name='listener'/></method><method name='setTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='shortTitle'/></method><method name='setOnBreadCrumbClickListener' api_added='12'><parameter type='android.app.FragmentBreadCrumbs.OnBreadCrumbClickListener' name='listener'/></method></class><class extends='java.lang.Object' abstract='true' name='FragmentManager' api_added='11'><constructor type='android.app.FragmentManager' name='FragmentManager' api_added='11'/><method abstract='true' name='addOnBackStackChangedListener' api_added='11'><parameter type='android.app.FragmentManager.OnBackStackChangedListener' name='listener'/></method><method return='android.app.FragmentTransaction' abstract='true' name='beginTransaction' api_added='11'/><method abstract='true' name='dump' api_added='11'><parameter type='java.lang.String' name='prefix'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method static='true' name='enableDebugLogging' api_added='11'><parameter type='boolean' name='enabled'/></method><method return='boolean' abstract='true' name='executePendingTransactions' api_added='11'/><method return='android.app.Fragment' abstract='true' name='findFragmentById' api_added='11'><parameter type='int' name='id'/></method><method return='android.app.Fragment' abstract='true' name='findFragmentByTag' api_added='11'><parameter type='java.lang.String' name='tag'/></method><method return='android.app.FragmentManager.BackStackEntry' abstract='true' name='getBackStackEntryAt' api_added='11'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getBackStackEntryCount' api_added='11'/><method return='android.app.Fragment' abstract='true' name='getFragment' api_added='11'><parameter type='android.os.Bundle' name='bundle'/><parameter type='java.lang.String' name='key'/></method><method abstract='true' name='popBackStack' api_added='11'/><method abstract='true' name='popBackStack' api_added='11'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/></method><method abstract='true' name='popBackStack' api_added='11'><parameter type='int' name='id'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='popBackStackImmediate' api_added='11'/><method return='boolean' abstract='true' name='popBackStackImmediate' api_added='11'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='popBackStackImmediate' api_added='11'><parameter type='int' name='id'/><parameter type='int' name='flags'/></method><method abstract='true' name='putFragment' api_added='11'><parameter type='android.os.Bundle' name='bundle'/><parameter type='java.lang.String' name='key'/><parameter type='android.app.Fragment' name='fragment'/></method><method abstract='true' name='removeOnBackStackChangedListener' api_added='11'><parameter type='android.app.FragmentManager.OnBackStackChangedListener' name='listener'/></method><method return='android.app.Fragment.SavedState' abstract='true' name='saveFragmentInstanceState' api_added='13'><parameter type='android.app.Fragment' name='f'/></method><method name='invalidateOptionsMenu' api_added='14'/></class><class extends='java.lang.Object' abstract='true' name='FragmentTransaction' api_added='11'><constructor type='android.app.FragmentTransaction' name='FragmentTransaction' api_added='11'/><method return='android.app.FragmentTransaction' abstract='true' name='add' api_added='11'><parameter type='android.app.Fragment' name='fragment'/><parameter type='java.lang.String' name='tag'/></method><method return='android.app.FragmentTransaction' abstract='true' name='add' api_added='11'><parameter type='int' name='containerViewId'/><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='add' api_added='11'><parameter type='int' name='containerViewId'/><parameter type='android.app.Fragment' name='fragment'/><parameter type='java.lang.String' name='tag'/></method><method return='android.app.FragmentTransaction' abstract='true' name='addToBackStack' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='int' abstract='true' name='commit' api_added='11'/><method return='int' abstract='true' name='commitAllowingStateLoss' api_added='11'/><method return='android.app.FragmentTransaction' abstract='true' name='disallowAddToBackStack' api_added='11'/><method return='android.app.FragmentTransaction' abstract='true' name='hide' api_added='11'><parameter type='android.app.Fragment' name='fragment'/></method><method return='boolean' abstract='true' name='isAddToBackStackAllowed' api_added='11'/><method return='boolean' abstract='true' name='isEmpty' api_added='11'/><method return='android.app.FragmentTransaction' abstract='true' name='remove' api_added='11'><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='replace' api_added='11'><parameter type='int' name='containerViewId'/><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='replace' api_added='11'><parameter type='int' name='containerViewId'/><parameter type='android.app.Fragment' name='fragment'/><parameter type='java.lang.String' name='tag'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setBreadCrumbShortTitle' api_added='11'><parameter type='int' name='res'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setBreadCrumbShortTitle' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setBreadCrumbTitle' api_added='11'><parameter type='int' name='res'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setBreadCrumbTitle' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setCustomAnimations' api_added='11'><parameter type='int' name='enter'/><parameter type='int' name='exit'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setTransition' api_added='11'><parameter type='int' name='transit'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setTransitionStyle' api_added='11'><parameter type='int' name='styleRes'/></method><method return='android.app.FragmentTransaction' abstract='true' name='show' api_added='11'><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='attach' api_added='13'><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='detach' api_added='13'><parameter type='android.app.Fragment' name='fragment'/></method><method return='android.app.FragmentTransaction' abstract='true' name='setCustomAnimations' api_added='13'><parameter type='int' name='enter'/><parameter type='int' name='exit'/><parameter type='int' name='popEnter'/><parameter type='int' name='popExit'/></method></class><class extends='android.app.Fragment' name='ListFragment' api_added='11'><constructor type='android.app.ListFragment' name='ListFragment' api_added='11'/><method return='android.widget.ListAdapter' name='getListAdapter' api_added='11'/><method return='android.widget.ListView' name='getListView' api_added='11'/><method return='long' name='getSelectedItemId' api_added='11'/><method return='int' name='getSelectedItemPosition' api_added='11'/><method name='onListItemClick' api_added='11'><parameter type='android.widget.ListView' name='l'/><parameter type='android.view.View' name='v'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method><method name='setEmptyText' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method><method name='setListAdapter' api_added='11'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method name='setListShown' api_added='11'><parameter type='boolean' name='shown'/></method><method name='setListShownNoAnimation' api_added='11'><parameter type='boolean' name='shown'/></method><method name='setSelection' api_added='11'><parameter type='int' name='position'/></method></class><class extends='java.lang.Object' abstract='true' name='LoaderManager' api_added='11'><constructor type='android.app.LoaderManager' name='LoaderManager' api_added='11'/><method abstract='true' name='destroyLoader' api_added='11'><parameter type='int' name='id'/></method><method abstract='true' name='dump' api_added='11'><parameter type='java.lang.String' name='prefix'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method static='true' name='enableDebugLogging' api_added='11'><parameter type='boolean' name='enabled'/></method><method return='android.content.Loader&lt;D&gt;' abstract='true' name='getLoader' api_added='11'><parameter type='int' name='id'/></method><method return='android.content.Loader&lt;D&gt;' abstract='true' name='initLoader' api_added='11'><parameter type='int' name='id'/><parameter type='android.os.Bundle' name='args'/><parameter type='android.app.LoaderManager.LoaderCallbacks&lt;D&gt;' name='callback'/></method><method return='android.content.Loader&lt;D&gt;' abstract='true' name='restartLoader' api_added='11'><parameter type='int' name='id'/><parameter type='android.os.Bundle' name='args'/><parameter type='android.app.LoaderManager.LoaderCallbacks&lt;D&gt;' name='callback'/></method></class><class extends='java.lang.Object' static='true' name='Notification.Builder' api_added='11'><constructor type='android.app.Notification.Builder' name='Notification.Builder' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><method deprecated='16' return='android.app.Notification' name='getNotification' api_added='11'/><method return='android.app.Notification.Builder' name='setAutoCancel' api_added='11'><parameter type='boolean' name='autoCancel'/></method><method return='android.app.Notification.Builder' name='setContent' api_added='11'><parameter type='android.widget.RemoteViews' name='views'/></method><method return='android.app.Notification.Builder' name='setContentInfo' api_added='11'><parameter type='java.lang.CharSequence' name='info'/></method><method return='android.app.Notification.Builder' name='setContentIntent' api_added='11'><parameter type='android.app.PendingIntent' name='intent'/></method><method return='android.app.Notification.Builder' name='setContentText' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.app.Notification.Builder' name='setContentTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.app.Notification.Builder' name='setDefaults' api_added='11'><parameter type='int' name='defaults'/></method><method return='android.app.Notification.Builder' name='setDeleteIntent' api_added='11'><parameter type='android.app.PendingIntent' name='intent'/></method><method return='android.app.Notification.Builder' name='setFullScreenIntent' api_added='11'><parameter type='android.app.PendingIntent' name='intent'/><parameter type='boolean' name='highPriority'/></method><method return='android.app.Notification.Builder' name='setLargeIcon' api_added='11'><parameter type='android.graphics.Bitmap' name='icon'/></method><method return='android.app.Notification.Builder' name='setLights' api_added='11'><parameter type='int' name='argb'/><parameter type='int' name='onMs'/><parameter type='int' name='offMs'/></method><method return='android.app.Notification.Builder' name='setNumber' api_added='11'><parameter type='int' name='number'/></method><method return='android.app.Notification.Builder' name='setOngoing' api_added='11'><parameter type='boolean' name='ongoing'/></method><method return='android.app.Notification.Builder' name='setOnlyAlertOnce' api_added='11'><parameter type='boolean' name='onlyAlertOnce'/></method><method return='android.app.Notification.Builder' name='setSmallIcon' api_added='11'><parameter type='int' name='icon'/></method><method return='android.app.Notification.Builder' name='setSmallIcon' api_added='11'><parameter type='int' name='icon'/><parameter type='int' name='level'/></method><method return='android.app.Notification.Builder' name='setSound' api_added='11'><parameter type='android.net.Uri' name='sound'/></method><method return='android.app.Notification.Builder' name='setSound' api_added='11'><parameter type='android.net.Uri' name='sound'/><parameter type='int' name='streamType'/></method><method return='android.app.Notification.Builder' name='setTicker' api_added='11'><parameter type='java.lang.CharSequence' name='tickerText'/></method><method return='android.app.Notification.Builder' name='setTicker' api_added='11'><parameter type='java.lang.CharSequence' name='tickerText'/><parameter type='android.widget.RemoteViews' name='views'/></method><method return='android.app.Notification.Builder' name='setVibrate' api_added='11'><parameter type='long[]' name='pattern'/></method><method return='android.app.Notification.Builder' name='setWhen' api_added='11'><parameter type='long' name='when'/></method><method return='android.app.Notification.Builder' name='setProgress' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></method><method return='android.app.Notification.Builder' name='addAction' api_added='16'><parameter type='int' name='arg0'/><parameter type='java.lang.CharSequence' name='arg1'/><parameter type='android.app.PendingIntent' name='arg2'/></method><method return='android.app.Notification' name='build' api_added='16'/><method return='android.app.Notification.Builder' name='setPriority' api_added='16'><parameter type='int' name='arg0'/></method><method return='android.app.Notification.Builder' name='setStyle' api_added='16'><parameter type='android.app.Notification.Style' name='arg0'/></method><method return='android.app.Notification.Builder' name='setSubText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification.Builder' name='setUsesChronometer' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='Fragment.SavedState' api_added='13'><method return='int' name='describeContents' api_added='13'/><method name='writeToParcel' api_added='13'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='ApplicationErrorReport' api_added='14'><constructor type='android.app.ApplicationErrorReport' name='ApplicationErrorReport' api_added='14'/><method return='int' name='describeContents' api_added='14'/><method name='dump' api_added='14'><parameter type='android.util.Printer' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method return='android.content.ComponentName' static='true' name='getErrorReportReceiver' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='int' name='arg2'/></method><method name='readFromParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='ApplicationErrorReport.AnrInfo' api_added='14'><constructor type='android.app.ApplicationErrorReport.AnrInfo' name='ApplicationErrorReport.AnrInfo' api_added='14'/><constructor type='android.app.ApplicationErrorReport.AnrInfo' name='ApplicationErrorReport.AnrInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method name='dump' api_added='14'><parameter type='android.util.Printer' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='ApplicationErrorReport.BatteryInfo' api_added='14'><constructor type='android.app.ApplicationErrorReport.BatteryInfo' name='ApplicationErrorReport.BatteryInfo' api_added='14'/><constructor type='android.app.ApplicationErrorReport.BatteryInfo' name='ApplicationErrorReport.BatteryInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method name='dump' api_added='14'><parameter type='android.util.Printer' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='ApplicationErrorReport.CrashInfo' api_added='14'><constructor type='android.app.ApplicationErrorReport.CrashInfo' name='ApplicationErrorReport.CrashInfo' api_added='14'/><constructor type='android.app.ApplicationErrorReport.CrashInfo' name='ApplicationErrorReport.CrashInfo' api_added='14'><parameter type='java.lang.Throwable' name='arg0'/></constructor><constructor type='android.app.ApplicationErrorReport.CrashInfo' name='ApplicationErrorReport.CrashInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method name='dump' api_added='14'><parameter type='android.util.Printer' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='ApplicationErrorReport.RunningServiceInfo' api_added='14'><constructor type='android.app.ApplicationErrorReport.RunningServiceInfo' name='ApplicationErrorReport.RunningServiceInfo' api_added='14'/><constructor type='android.app.ApplicationErrorReport.RunningServiceInfo' name='ApplicationErrorReport.RunningServiceInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method name='dump' api_added='14'><parameter type='android.util.Printer' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='ActivityOptions' api_added='16'><method return='android.app.ActivityOptions' static='true' name='makeCustomAnimation' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='android.app.ActivityOptions' static='true' name='makeScaleUpAnimation' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method><method return='android.app.ActivityOptions' static='true' name='makeThumbnailScaleUpAnimation' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='android.graphics.Bitmap' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method><method return='android.os.Bundle' name='toBundle' api_added='16'/><method name='update' api_added='16'><parameter type='android.app.ActivityOptions' name='arg0'/></method></class><class extends='android.view.ActionProvider' name='MediaRouteActionProvider' api_added='16'><constructor type='android.app.MediaRouteActionProvider' name='MediaRouteActionProvider' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><method return='android.view.View' name='onCreateActionView' api_added='16'/><method name='setExtendedSettingsClickListener' api_added='16'><parameter type='android.view.View.OnClickListener' name='arg0'/></method><method name='setRouteTypes' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='android.view.View' name='MediaRouteButton' api_added='16'><constructor type='android.app.MediaRouteButton' name='MediaRouteButton' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.app.MediaRouteButton' name='MediaRouteButton' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.app.MediaRouteButton' name='MediaRouteButton' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><method return='int' name='getRouteTypes' api_added='16'/><method name='onAttachedToWindow' api_added='16'/><method name='onDetachedFromWindow' api_added='16'/><method name='setExtendedSettingsClickListener' api_added='16'><parameter type='android.view.View.OnClickListener' name='arg0'/></method><method name='setRouteTypes' api_added='16'><parameter type='int' name='arg0'/></method><method name='showDialog' api_added='16'/></class><class extends='android.app.Notification.Style' static='true' name='Notification.BigPictureStyle' api_added='16'><constructor type='android.app.Notification.BigPictureStyle' name='Notification.BigPictureStyle' api_added='16'/><constructor type='android.app.Notification.BigPictureStyle' name='Notification.BigPictureStyle' api_added='16'><parameter type='android.app.Notification.Builder' name='arg0'/></constructor><method return='android.app.Notification.BigPictureStyle' name='bigLargeIcon' api_added='16'><parameter type='android.graphics.Bitmap' name='arg0'/></method><method return='android.app.Notification.BigPictureStyle' name='bigPicture' api_added='16'><parameter type='android.graphics.Bitmap' name='arg0'/></method><method return='android.app.Notification' name='build' api_added='16'/><method return='android.app.Notification.BigPictureStyle' name='setBigContentTitle' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification.BigPictureStyle' name='setSummaryText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method></class><class extends='android.app.Notification.Style' static='true' name='Notification.BigTextStyle' api_added='16'><constructor type='android.app.Notification.BigTextStyle' name='Notification.BigTextStyle' api_added='16'/><constructor type='android.app.Notification.BigTextStyle' name='Notification.BigTextStyle' api_added='16'><parameter type='android.app.Notification.Builder' name='arg0'/></constructor><method return='android.app.Notification.BigTextStyle' name='bigText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification' name='build' api_added='16'/><method return='android.app.Notification.BigTextStyle' name='setBigContentTitle' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification.BigTextStyle' name='setSummaryText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method></class><class extends='android.app.Notification.Style' static='true' name='Notification.InboxStyle' api_added='16'><constructor type='android.app.Notification.InboxStyle' name='Notification.InboxStyle' api_added='16'/><constructor type='android.app.Notification.InboxStyle' name='Notification.InboxStyle' api_added='16'><parameter type='android.app.Notification.Builder' name='arg0'/></constructor><method return='android.app.Notification.InboxStyle' name='addLine' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification' name='build' api_added='16'/><method return='android.app.Notification.InboxStyle' name='setBigContentTitle' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='android.app.Notification.InboxStyle' name='setSummaryText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='Notification.Style' api_added='16'><constructor type='android.app.Notification.Style' name='Notification.Style' api_added='16'/><method return='android.app.Notification' abstract='true' name='build' api_added='16'/><method visibility='protected' name='checkBuilder' api_added='16'/><method visibility='protected' return='android.widget.RemoteViews' name='getStandardView' api_added='16'><parameter type='int' name='arg0'/></method><method visibility='protected' name='internalSetBigContentTitle' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method visibility='protected' name='internalSetSummaryText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setBuilder' api_added='16'><parameter type='android.app.Notification.Builder' name='arg0'/></method></class><class extends='java.lang.Object' name='TaskStackBuilder' api_added='16'><method return='android.app.TaskStackBuilder' name='addNextIntent' api_added='16'><parameter type='android.content.Intent' name='arg0'/></method><method return='android.app.TaskStackBuilder' name='addNextIntentWithParentStack' api_added='16'><parameter type='android.content.Intent' name='arg0'/></method><method return='android.app.TaskStackBuilder' name='addParentStack' api_added='16'><parameter type='android.app.Activity' name='arg0'/></method><method return='android.app.TaskStackBuilder' name='addParentStack' api_added='16'><parameter type='java.lang.Class&lt;?&gt;' name='arg0'/></method><method return='android.app.TaskStackBuilder' name='addParentStack' api_added='16'><parameter type='android.content.ComponentName' name='arg0'/></method><method return='android.app.TaskStackBuilder' static='true' name='create' api_added='16'><parameter type='android.content.Context' name='arg0'/></method><method return='android.content.Intent' name='editIntentAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getIntentCount' api_added='16'/><method return='android.content.Intent[]' name='getIntents' api_added='16'/><method return='android.app.PendingIntent' name='getPendingIntent' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.app.PendingIntent' name='getPendingIntent' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method><method name='startActivities' api_added='16'/><method name='startActivities' api_added='16'><parameter type='android.os.Bundle' name='arg0'/></method></class><interface abstract='true' static='true' name='DatePickerDialog.OnDateSetListener'><method abstract='true' name='onDateSet'><parameter type='android.widget.DatePicker' name='view'/><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></method></interface><interface abstract='true' static='true' name='KeyguardManager.OnKeyguardExitResult'><method abstract='true' name='onKeyguardExitResult'><parameter type='boolean' name='success'/></method></interface><interface abstract='true' static='true' name='PendingIntent.OnFinished'><method abstract='true' name='onSendFinished'><parameter type='android.app.PendingIntent' name='pendingIntent'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='resultCode'/><parameter type='java.lang.String' name='resultData'/><parameter type='android.os.Bundle' name='resultExtras'/></method></interface><interface abstract='true' static='true' name='SearchManager.OnCancelListener'><method abstract='true' name='onCancel'/></interface><interface abstract='true' static='true' name='SearchManager.OnDismissListener'><method abstract='true' name='onDismiss'/></interface><interface abstract='true' static='true' name='TimePickerDialog.OnTimeSetListener'><method abstract='true' name='onTimeSet'><parameter type='android.widget.TimePicker' name='view'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/></method></interface><interface abstract='true' static='true' name='ActionBar.OnMenuVisibilityListener' api_added='11'><method abstract='true' name='onMenuVisibilityChanged' api_added='11'><parameter type='boolean' name='isVisible'/></method></interface><interface abstract='true' static='true' name='ActionBar.OnNavigationListener' api_added='11'><method return='boolean' abstract='true' name='onNavigationItemSelected' api_added='11'><parameter type='int' name='itemPosition'/><parameter type='long' name='itemId'/></method></interface><interface abstract='true' static='true' name='ActionBar.TabListener' api_added='11'><method abstract='true' name='onTabReselected' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='android.app.FragmentTransaction' name='ft'/></method><method abstract='true' name='onTabSelected' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='android.app.FragmentTransaction' name='ft'/></method><method abstract='true' name='onTabUnselected' api_added='11'><parameter type='android.app.ActionBar.Tab' name='tab'/><parameter type='android.app.FragmentTransaction' name='ft'/></method></interface><interface abstract='true' static='true' name='FragmentManager.BackStackEntry' api_added='11'><method return='java.lang.CharSequence' abstract='true' name='getBreadCrumbShortTitle' api_added='11'/><method return='int' abstract='true' name='getBreadCrumbShortTitleRes' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getBreadCrumbTitle' api_added='11'/><method return='int' abstract='true' name='getBreadCrumbTitleRes' api_added='11'/><method return='int' abstract='true' name='getId' api_added='11'/><method return='java.lang.String' abstract='true' name='getName' api_added='14'/></interface><interface abstract='true' static='true' name='FragmentManager.OnBackStackChangedListener' api_added='11'><method abstract='true' name='onBackStackChanged' api_added='11'/></interface><interface abstract='true' static='true' name='LoaderManager.LoaderCallbacks' api_added='11'><method return='android.content.Loader&lt;D&gt;' abstract='true' name='onCreateLoader' api_added='11'><parameter type='int' name='id'/><parameter type='android.os.Bundle' name='args'/></method><method abstract='true' name='onLoadFinished' api_added='11'><parameter type='android.content.Loader&lt;D&gt;' name='loader'/><parameter type='D' name='data'/></method><method abstract='true' name='onLoaderReset' api_added='11'><parameter type='android.content.Loader&lt;D&gt;' name='loader'/></method></interface><interface abstract='true' static='true' name='FragmentBreadCrumbs.OnBreadCrumbClickListener' api_added='12'><method return='boolean' abstract='true' name='onBreadCrumbClick' api_added='12'><parameter type='android.app.FragmentManager.BackStackEntry' name='backStack'/><parameter type='int' name='flags'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='Application.ActivityLifecycleCallbacks' api_added='14'><method abstract='true' name='onActivityCreated' api_added='14'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method abstract='true' name='onActivityDestroyed' api_added='14'><parameter type='android.app.Activity' name='arg0'/></method><method abstract='true' name='onActivityPaused' api_added='14'><parameter type='android.app.Activity' name='arg0'/></method><method abstract='true' name='onActivityResumed' api_added='14'><parameter type='android.app.Activity' name='arg0'/></method><method abstract='true' name='onActivitySaveInstanceState' api_added='14'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method abstract='true' name='onActivityStarted' api_added='14'><parameter type='android.app.Activity' name='arg0'/></method><method abstract='true' name='onActivityStopped' api_added='14'><parameter type='android.app.Activity' name='arg0'/></method></interface></package><package name='android.content'><class extends='java.lang.RuntimeException' name='ActivityNotFoundException'><constructor type='android.content.ActivityNotFoundException' name='ActivityNotFoundException'/><constructor type='android.content.ActivityNotFoundException' name='ActivityNotFoundException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='android.os.Handler' abstract='true' name='AsyncQueryHandler'><constructor type='android.content.AsyncQueryHandler' name='AsyncQueryHandler'><parameter type='android.content.ContentResolver' name='cr'/></constructor><method name='cancelOperation' final='true'><parameter type='int' name='token'/></method><method visibility='protected' return='android.os.Handler' name='createHandler'><parameter type='android.os.Looper' name='looper'/></method><method visibility='protected' name='onDeleteComplete'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='int' name='result'/></method><method visibility='protected' name='onInsertComplete'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.net.Uri' name='uri'/></method><method visibility='protected' name='onQueryComplete'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.database.Cursor' name='cursor'/></method><method visibility='protected' name='onUpdateComplete'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='int' name='result'/></method><method name='startDelete' final='true'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method name='startInsert' final='true'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='initialValues'/></method><method name='startQuery'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='orderBy'/></method><method name='startUpdate' final='true'><parameter type='int' name='token'/><parameter type='java.lang.Object' name='cookie'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method></class><class visibility='protected' extends='java.lang.Object' static='true' name='AsyncQueryHandler.WorkerArgs' final='true'><constructor visibility='protected' type='android.content.AsyncQueryHandler.WorkerArgs' name='AsyncQueryHandler.WorkerArgs'/></class><class visibility='protected' extends='android.os.Handler' name='AsyncQueryHandler.WorkerHandler'><constructor type='android.content.AsyncQueryHandler.WorkerHandler' name='AsyncQueryHandler.WorkerHandler'><parameter type='android.os.Looper' name='looper'/></constructor></class><class extends='java.lang.Object' abstract='true' name='BroadcastReceiver'><constructor type='android.content.BroadcastReceiver' name='BroadcastReceiver'/><method name='abortBroadcast' final='true'/><method name='clearAbortBroadcast' final='true'/><method return='boolean' name='getAbortBroadcast' final='true'/><method return='boolean' name='getDebugUnregister' final='true'/><method return='int' name='getResultCode' final='true'/><method return='java.lang.String' name='getResultData' final='true'/><method return='android.os.Bundle' name='getResultExtras' final='true'><parameter type='boolean' name='makeMap'/></method><method abstract='true' name='onReceive'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='setDebugUnregister' final='true'><parameter type='boolean' name='debug'/></method><method name='setOrderedHint' final='true'><parameter type='boolean' name='isOrdered'/></method><method name='setResult' final='true'><parameter type='int' name='code'/><parameter type='java.lang.String' name='data'/><parameter type='android.os.Bundle' name='extras'/></method><method name='setResultCode' final='true'><parameter type='int' name='code'/></method><method name='setResultData' final='true'><parameter type='java.lang.String' name='data'/></method><method name='setResultExtras' final='true'><parameter type='android.os.Bundle' name='extras'/></method><method return='android.os.IBinder' name='peekService' api_added='3'><parameter type='android.content.Context' name='myContext'/><parameter type='android.content.Intent' name='service'/></method><method return='boolean' name='isInitialStickyBroadcast' api_added='5' final='true'/><method return='boolean' name='isOrderedBroadcast' api_added='5' final='true'/><method return='android.content.BroadcastReceiver.PendingResult' name='goAsync' api_added='11' final='true'/></class><class extends='java.lang.Object' name='ComponentName' final='true'><constructor type='android.content.ComponentName' name='ComponentName'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.String' name='cls'/></constructor><constructor type='android.content.ComponentName' name='ComponentName'><parameter type='android.content.Context' name='pkg'/><parameter type='java.lang.String' name='cls'/></constructor><constructor type='android.content.ComponentName' name='ComponentName'><parameter type='android.content.Context' name='pkg'/><parameter type='java.lang.Class&lt;?&gt;' name='cls'/></constructor><constructor type='android.content.ComponentName' name='ComponentName'><parameter type='android.os.Parcel' name='in'/></constructor><method return='int' name='describeContents'/><method return='java.lang.String' name='flattenToShortString'/><method return='java.lang.String' name='flattenToString'/><method return='java.lang.String' name='getClassName'/><method return='java.lang.String' name='getPackageName'/><method return='java.lang.String' name='getShortClassName'/><method return='android.content.ComponentName' static='true' name='readFromParcel'><parameter type='android.os.Parcel' name='in'/></method><method return='java.lang.String' name='toShortString'/><method return='android.content.ComponentName' static='true' name='unflattenFromString'><parameter type='java.lang.String' name='str'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method static='true' name='writeToParcel'><parameter type='android.content.ComponentName' name='c'/><parameter type='android.os.Parcel' name='out'/></method><method return='int' name='compareTo' api_added='4'><parameter type='android.content.ComponentName' name='that'/></method><method return='android.content.ComponentName' name='clone' api_added='8'/></class><class extends='java.lang.Object' abstract='true' name='ContentProvider'><constructor type='android.content.ContentProvider' name='ContentProvider'/><method name='attachInfo'><parameter type='android.content.Context' name='context'/><parameter type='android.content.pm.ProviderInfo' name='info'/></method><method return='int' name='bulkInsert'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues[]' name='values'/></method><method return='int' abstract='true' name='delete'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='android.content.Context' name='getContext' final='true'/><method return='java.lang.String' name='getReadPermission' final='true'/><method return='java.lang.String' abstract='true' name='getType'><parameter type='android.net.Uri' name='uri'/></method><method return='java.lang.String' name='getWritePermission' final='true'/><method return='android.net.Uri' abstract='true' name='insert'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/></method><method visibility='protected' return='boolean' name='isTemporary'/><method name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method return='boolean' abstract='true' name='onCreate'/><method name='onLowMemory'/><method return='android.os.ParcelFileDescriptor' name='openFile'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method visibility='protected' return='android.os.ParcelFileDescriptor' name='openFileHelper' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.Cursor' abstract='true' name='query'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></method><method visibility='protected' name='setReadPermission' final='true'><parameter type='java.lang.String' name='permission'/></method><method visibility='protected' name='setWritePermission' final='true'><parameter type='java.lang.String' name='permission'/></method><method return='int' abstract='true' name='update'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='android.content.res.AssetFileDescriptor' name='openAssetFile' api_added='3'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.content.pm.PathPermission[]' name='getPathPermissions' api_added='4' final='true'/><method visibility='protected' name='setPathPermissions' api_added='4' final='true'><parameter type='android.content.pm.PathPermission[]' name='permissions'/></method><method return='android.content.ContentProviderResult[]' name='applyBatch' api_added='5'><parameter type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;' name='operations'/><exception type='android.content.OperationApplicationException' name='OperationApplicationException'/></method><method return='android.os.Bundle' name='call' api_added='11'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='arg'/><parameter type='android.os.Bundle' name='extras'/></method><method return='java.lang.String[]' name='getStreamTypes' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeTypeFilter'/></method><method return='android.os.ParcelFileDescriptor' name='openPipeHelper' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/><parameter type='android.os.Bundle' name='opts'/><parameter type='T' name='args'/><parameter type='android.content.ContentProvider.PipeDataWriter&lt;T&gt;' name='func'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.content.res.AssetFileDescriptor' name='openTypedAssetFile' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeTypeFilter'/><parameter type='android.os.Bundle' name='opts'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method name='shutdown' api_added='11'/><method name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.database.Cursor' name='query' api_added='16'><parameter type='android.net.Uri' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='android.os.CancellationSignal' name='arg5'/></method></class><class extends='java.util.Observable' name='ContentQueryMap'><constructor type='android.content.ContentQueryMap' name='ContentQueryMap'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='columnNameOfKey'/><parameter type='boolean' name='keepUpdated'/><parameter type='android.os.Handler' name='handlerForUpdateNotifications'/></constructor><method synchronized='true' name='close'/><method return='java.util.Map&lt;java.lang.String, android.content.ContentValues&gt;' synchronized='true' name='getRows'/><method return='android.content.ContentValues' synchronized='true' name='getValues'><parameter type='java.lang.String' name='rowName'/></method><method name='requery'/><method name='setKeepUpdated'><parameter type='boolean' name='keepUpdated'/></method></class><class extends='java.lang.Object' abstract='true' name='ContentResolver'><constructor type='android.content.ContentResolver' name='ContentResolver'><parameter type='android.content.Context' name='context'/></constructor><method return='int' name='bulkInsert' final='true'><parameter type='android.net.Uri' name='url'/><parameter type='android.content.ContentValues[]' name='values'/></method><method deprecated='5' name='cancelSync'><parameter type='android.net.Uri' name='uri'/></method><method return='int' name='delete' final='true'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='where'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='java.lang.String' name='getType' final='true'><parameter type='android.net.Uri' name='url'/></method><method return='android.net.Uri' name='insert' final='true'><parameter type='android.net.Uri' name='url'/><parameter type='android.content.ContentValues' name='values'/></method><method name='notifyChange'><parameter type='android.net.Uri' name='uri'/><parameter type='android.database.ContentObserver' name='observer'/></method><method name='notifyChange'><parameter type='android.net.Uri' name='uri'/><parameter type='android.database.ContentObserver' name='observer'/><parameter type='boolean' name='syncToNetwork'/></method><method return='android.os.ParcelFileDescriptor' name='openFileDescriptor' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.InputStream' name='openInputStream' final='true'><parameter type='android.net.Uri' name='uri'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.OutputStream' name='openOutputStream' final='true'><parameter type='android.net.Uri' name='uri'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.Cursor' name='query' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></method><method name='registerContentObserver' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='boolean' name='notifyForDescendents'/><parameter type='android.database.ContentObserver' name='observer'/></method><method deprecated='5' name='startSync'><parameter type='android.net.Uri' name='uri'/><parameter type='android.os.Bundle' name='extras'/></method><method name='unregisterContentObserver' final='true'><parameter type='android.database.ContentObserver' name='observer'/></method><method return='int' name='update' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='where'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method static='true' name='validateSyncExtrasBundle'><parameter type='android.os.Bundle' name='extras'/></method><method return='android.content.res.AssetFileDescriptor' name='openAssetFileDescriptor' api_added='3' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.OutputStream' name='openOutputStream' api_added='3' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.content.ContentProviderClient' name='acquireContentProviderClient' api_added='5' final='true'><parameter type='android.net.Uri' name='uri'/></method><method return='android.content.ContentProviderClient' name='acquireContentProviderClient' api_added='5' final='true'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.Object' static='true' name='addStatusChangeListener' api_added='5'><parameter type='int' name='mask'/><parameter type='android.content.SyncStatusObserver' name='callback'/></method><method return='android.content.ContentProviderResult[]' name='applyBatch' api_added='5'><parameter type='java.lang.String' name='authority'/><parameter type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;' name='operations'/><exception type='android.content.OperationApplicationException' name='OperationApplicationException'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method static='true' name='cancelSync' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method return='int' static='true' name='getIsSyncable' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method return='boolean' static='true' name='getMasterSyncAutomatically' api_added='5'/><method return='android.content.SyncAdapterType[]' static='true' name='getSyncAdapterTypes' api_added='5'/><method return='boolean' static='true' name='getSyncAutomatically' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method return='boolean' static='true' name='isSyncActive' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method return='boolean' static='true' name='isSyncPending' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method static='true' name='removeStatusChangeListener' api_added='5'><parameter type='java.lang.Object' name='handle'/></method><method static='true' name='requestSync' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='android.os.Bundle' name='extras'/></method><method static='true' name='setIsSyncable' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='int' name='syncable'/></method><method static='true' name='setMasterSyncAutomatically' api_added='5'><parameter type='boolean' name='sync'/></method><method static='true' name='setSyncAutomatically' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='boolean' name='sync'/></method><method static='true' name='addPeriodicSync' api_added='8'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='android.os.Bundle' name='extras'/><parameter type='long' name='pollFrequency'/></method><method deprecated='11' return='android.content.SyncInfo' static='true' name='getCurrentSync' api_added='8'/><method return='java.util.List&lt;android.content.PeriodicSync&gt;' static='true' name='getPeriodicSyncs' api_added='8'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/></method><method static='true' name='removePeriodicSync' api_added='8'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='android.os.Bundle' name='extras'/></method><method return='android.os.Bundle' name='call' api_added='11' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='arg'/><parameter type='android.os.Bundle' name='extras'/></method><method return='java.util.List&lt;android.content.SyncInfo&gt;' static='true' name='getCurrentSyncs' api_added='11'/><method return='java.lang.String[]' name='getStreamTypes' api_added='11'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='mimeTypeFilter'/></method><method return='android.content.res.AssetFileDescriptor' name='openTypedAssetFileDescriptor' api_added='11' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/><parameter type='android.os.Bundle' name='opts'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.content.ContentProviderClient' name='acquireUnstableContentProviderClient' api_added='16' final='true'><parameter type='android.net.Uri' name='arg0'/></method><method return='android.content.ContentProviderClient' name='acquireUnstableContentProviderClient' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='android.database.Cursor' name='query' api_added='16' final='true'><parameter type='android.net.Uri' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='android.os.CancellationSignal' name='arg5'/></method></class><class extends='java.lang.Object' name='ContentUris'><constructor type='android.content.ContentUris' name='ContentUris'/><method return='android.net.Uri.Builder' static='true' name='appendId'><parameter type='android.net.Uri.Builder' name='builder'/><parameter type='long' name='id'/></method><method return='long' static='true' name='parseId'><parameter type='android.net.Uri' name='contentUri'/></method><method return='android.net.Uri' static='true' name='withAppendedId'><parameter type='android.net.Uri' name='contentUri'/><parameter type='long' name='id'/></method></class><class extends='java.lang.Object' name='ContentValues' final='true'><constructor type='android.content.ContentValues' name='ContentValues'/><constructor type='android.content.ContentValues' name='ContentValues'><parameter type='int' name='size'/></constructor><constructor type='android.content.ContentValues' name='ContentValues'><parameter type='android.content.ContentValues' name='from'/></constructor><method name='clear'/><method return='boolean' name='containsKey'><parameter type='java.lang.String' name='key'/></method><method return='int' name='describeContents'/><method return='java.lang.Object' name='get'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Boolean' name='getAsBoolean'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Byte' name='getAsByte'><parameter type='java.lang.String' name='key'/></method><method return='byte[]' name='getAsByteArray'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Double' name='getAsDouble'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Float' name='getAsFloat'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Integer' name='getAsInteger'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Long' name='getAsLong'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Short' name='getAsShort'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' name='getAsString'><parameter type='java.lang.String' name='key'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Byte' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Short' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Integer' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Long' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Float' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Double' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Boolean' name='value'/></method><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='value'/></method><method name='putAll'><parameter type='android.content.ContentValues' name='other'/></method><method name='putNull'><parameter type='java.lang.String' name='key'/></method><method name='remove'><parameter type='java.lang.String' name='key'/></method><method return='int' name='size'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String, java.lang.Object&gt;&gt;' name='valueSet'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='keySet' api_added='11'/></class><class extends='java.lang.Object' abstract='true' name='Context'><constructor type='android.content.Context' name='Context'/><method return='boolean' abstract='true' name='bindService'><parameter type='android.content.Intent' name='service'/><parameter type='android.content.ServiceConnection' name='conn'/><parameter type='int' name='flags'/></method><method return='int' abstract='true' name='checkCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' abstract='true' name='checkCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' abstract='true' name='checkCallingPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' abstract='true' name='checkCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' abstract='true' name='checkPermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/></method><method return='int' abstract='true' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method return='int' abstract='true' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method deprecated='5' abstract='true' name='clearWallpaper'><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.Context' abstract='true' name='createPackageContext'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' abstract='true' name='databaseList'/><method return='boolean' abstract='true' name='deleteDatabase'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='deleteFile'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='enforceCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforceCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforceCallingPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforceCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforcePermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method abstract='true' name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method return='java.lang.String[]' abstract='true' name='fileList'/><method return='android.content.Context' abstract='true' name='getApplicationContext'/><method return='android.content.res.AssetManager' abstract='true' name='getAssets'/><method return='java.io.File' abstract='true' name='getCacheDir'/><method return='java.lang.ClassLoader' abstract='true' name='getClassLoader'/><method return='android.content.ContentResolver' abstract='true' name='getContentResolver'/><method return='java.io.File' abstract='true' name='getDatabasePath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' abstract='true' name='getDir'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.io.File' abstract='true' name='getFileStreamPath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' abstract='true' name='getFilesDir'/><method return='android.os.Looper' abstract='true' name='getMainLooper'/><method return='android.content.pm.PackageManager' abstract='true' name='getPackageManager'/><method return='java.lang.String' abstract='true' name='getPackageName'/><method return='android.content.res.Resources' abstract='true' name='getResources'/><method return='android.content.SharedPreferences' abstract='true' name='getSharedPreferences'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.lang.String' name='getString' final='true'><parameter type='int' name='resId'/></method><method return='java.lang.String' name='getString' final='true'><parameter type='int' name='resId'/><parameter type='java.lang.Object...' name='formatArgs'/></method><method return='java.lang.Object' abstract='true' name='getSystemService'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.CharSequence' name='getText' final='true'><parameter type='int' name='resId'/></method><method return='android.content.res.Resources.Theme' abstract='true' name='getTheme'/><method deprecated='5' return='android.graphics.drawable.Drawable' abstract='true' name='getWallpaper'/><method deprecated='5' return='int' abstract='true' name='getWallpaperDesiredMinimumHeight'/><method deprecated='5' return='int' abstract='true' name='getWallpaperDesiredMinimumWidth'/><method abstract='true' name='grantUriPermission'><parameter type='java.lang.String' name='toPackage'/><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes' final='true'><parameter type='int[]' name='attrs'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes' final='true'><parameter type='int' name='resid'/><parameter type='int[]' name='attrs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes' final='true'><parameter type='android.util.AttributeSet' name='set'/><parameter type='int[]' name='attrs'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes' final='true'><parameter type='android.util.AttributeSet' name='set'/><parameter type='int[]' name='attrs'/><parameter type='int' name='defStyleAttr'/><parameter type='int' name='defStyleRes'/></method><method return='java.io.FileInputStream' abstract='true' name='openFileInput'><parameter type='java.lang.String' name='name'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.FileOutputStream' abstract='true' name='openFileOutput'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.sqlite.SQLiteDatabase' abstract='true' name='openOrCreateDatabase'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method deprecated='5' return='android.graphics.drawable.Drawable' abstract='true' name='peekWallpaper'/><method return='android.content.Intent' abstract='true' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/></method><method return='android.content.Intent' abstract='true' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/><parameter type='java.lang.String' name='broadcastPermission'/><parameter type='android.os.Handler' name='scheduler'/></method><method abstract='true' name='removeStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method abstract='true' name='revokeUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method abstract='true' name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method abstract='true' name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method abstract='true' name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method abstract='true' name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method abstract='true' name='sendStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method abstract='true' name='setTheme'><parameter type='int' name='resid'/></method><method deprecated='5' abstract='true' name='setWallpaper'><parameter type='android.graphics.Bitmap' name='bitmap'/><exception type='java.io.IOException' name='IOException'/></method><method deprecated='5' abstract='true' name='setWallpaper'><parameter type='java.io.InputStream' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='startActivity'><parameter type='android.content.Intent' name='intent'/></method><method return='boolean' abstract='true' name='startInstrumentation'><parameter type='android.content.ComponentName' name='className'/><parameter type='java.lang.String' name='profileFile'/><parameter type='android.os.Bundle' name='arguments'/></method><method return='android.content.ComponentName' abstract='true' name='startService'><parameter type='android.content.Intent' name='service'/></method><method return='boolean' abstract='true' name='stopService'><parameter type='android.content.Intent' name='service'/></method><method abstract='true' name='unbindService'><parameter type='android.content.ServiceConnection' name='conn'/></method><method abstract='true' name='unregisterReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/></method><method return='android.content.pm.ApplicationInfo' abstract='true' name='getApplicationInfo' api_added='4'/><method return='boolean' name='isRestricted' api_added='4'/><method abstract='true' name='sendStickyOrderedBroadcast' api_added='5'><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method abstract='true' name='startIntentSender' api_added='5'><parameter type='android.content.IntentSender' name='intent'/><parameter type='android.content.Intent' name='fillInIntent'/><parameter type='int' name='flagsMask'/><parameter type='int' name='flagsValues'/><parameter type='int' name='extraFlags'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method return='java.io.File' abstract='true' name='getExternalCacheDir' api_added='8'/><method return='java.io.File' abstract='true' name='getExternalFilesDir' api_added='8'><parameter type='java.lang.String' name='type'/></method><method return='java.lang.String' abstract='true' name='getPackageCodePath' api_added='8'/><method return='java.lang.String' abstract='true' name='getPackageResourcePath' api_added='8'/><method return='java.io.File' abstract='true' name='getObbDir' api_added='11'/><method return='android.database.sqlite.SQLiteDatabase' abstract='true' name='openOrCreateDatabase' api_added='11'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='android.database.DatabaseErrorHandler' name='errorHandler'/></method><method abstract='true' name='startActivities' api_added='11'><parameter type='android.content.Intent[]' name='intents'/></method><method name='registerComponentCallbacks' api_added='14'><parameter type='android.content.ComponentCallbacks' name='arg0'/></method><method name='unregisterComponentCallbacks' api_added='14'><parameter type='android.content.ComponentCallbacks' name='arg0'/></method><method abstract='true' name='startActivities' api_added='16'><parameter type='android.content.Intent[]' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method abstract='true' name='startActivity' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method abstract='true' name='startIntentSender' api_added='16'><parameter type='android.content.IntentSender' name='arg0'/><parameter type='android.content.Intent' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='android.os.Bundle' name='arg5'/></method></class><class extends='android.content.Context' name='ContextWrapper'><constructor type='android.content.ContextWrapper' name='ContextWrapper'><parameter type='android.content.Context' name='base'/></constructor><method visibility='protected' name='attachBaseContext'><parameter type='android.content.Context' name='base'/></method><method return='boolean' name='bindService'><parameter type='android.content.Intent' name='service'/><parameter type='android.content.ServiceConnection' name='conn'/><parameter type='int' name='flags'/></method><method return='int' name='checkCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' name='checkCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkCallingPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' name='checkCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkPermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/></method><method return='int' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method name='clearWallpaper'><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.Context' name='createPackageContext'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' name='databaseList'/><method return='boolean' name='deleteDatabase'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='deleteFile'><parameter type='java.lang.String' name='name'/></method><method name='enforceCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforcePermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='java.lang.String' name='message'/></method><method name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method return='java.lang.String[]' name='fileList'/><method return='android.content.Context' name='getApplicationContext'/><method return='android.content.res.AssetManager' name='getAssets'/><method return='android.content.Context' name='getBaseContext'/><method return='java.io.File' name='getCacheDir'/><method return='java.lang.ClassLoader' name='getClassLoader'/><method return='android.content.ContentResolver' name='getContentResolver'/><method return='java.io.File' name='getDatabasePath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' name='getDir'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.io.File' name='getFileStreamPath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' name='getFilesDir'/><method return='android.os.Looper' name='getMainLooper'/><method return='java.lang.String' name='getPackageCodePath'/><method return='android.content.pm.PackageManager' name='getPackageManager'/><method return='java.lang.String' name='getPackageName'/><method return='java.lang.String' name='getPackageResourcePath'/><method return='android.content.res.Resources' name='getResources'/><method return='android.content.SharedPreferences' name='getSharedPreferences'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.lang.Object' name='getSystemService'><parameter type='java.lang.String' name='name'/></method><method return='android.content.res.Resources.Theme' name='getTheme'/><method return='android.graphics.drawable.Drawable' name='getWallpaper'/><method return='int' name='getWallpaperDesiredMinimumHeight'/><method return='int' name='getWallpaperDesiredMinimumWidth'/><method name='grantUriPermission'><parameter type='java.lang.String' name='toPackage'/><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='java.io.FileInputStream' name='openFileInput'><parameter type='java.lang.String' name='name'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.FileOutputStream' name='openFileOutput'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.sqlite.SQLiteDatabase' name='openOrCreateDatabase'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method return='android.graphics.drawable.Drawable' name='peekWallpaper'/><method return='android.content.Intent' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/></method><method return='android.content.Intent' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/><parameter type='java.lang.String' name='broadcastPermission'/><parameter type='android.os.Handler' name='scheduler'/></method><method name='removeStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='revokeUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method name='sendStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='setTheme'><parameter type='int' name='resid'/></method><method name='setWallpaper'><parameter type='android.graphics.Bitmap' name='bitmap'/><exception type='java.io.IOException' name='IOException'/></method><method name='setWallpaper'><parameter type='java.io.InputStream' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method name='startActivity'><parameter type='android.content.Intent' name='intent'/></method><method return='boolean' name='startInstrumentation'><parameter type='android.content.ComponentName' name='className'/><parameter type='java.lang.String' name='profileFile'/><parameter type='android.os.Bundle' name='arguments'/></method><method return='android.content.ComponentName' name='startService'><parameter type='android.content.Intent' name='service'/></method><method return='boolean' name='stopService'><parameter type='android.content.Intent' name='name'/></method><method name='unbindService'><parameter type='android.content.ServiceConnection' name='conn'/></method><method name='unregisterReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/></method><method return='android.content.pm.ApplicationInfo' name='getApplicationInfo' api_added='4'/><method name='sendStickyOrderedBroadcast' api_added='5'><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method name='startIntentSender' api_added='5'><parameter type='android.content.IntentSender' name='intent'/><parameter type='android.content.Intent' name='fillInIntent'/><parameter type='int' name='flagsMask'/><parameter type='int' name='flagsValues'/><parameter type='int' name='extraFlags'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method return='java.io.File' name='getExternalCacheDir' api_added='8'/><method return='java.io.File' name='getExternalFilesDir' api_added='8'><parameter type='java.lang.String' name='type'/></method><method return='java.io.File' name='getObbDir' api_added='11'/><method return='android.database.sqlite.SQLiteDatabase' name='openOrCreateDatabase' api_added='11'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='android.database.DatabaseErrorHandler' name='errorHandler'/></method><method name='startActivities' api_added='11'><parameter type='android.content.Intent[]' name='intents'/></method><method name='startActivities' api_added='16'><parameter type='android.content.Intent[]' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='startActivity' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='startIntentSender' api_added='16'><parameter type='android.content.IntentSender' name='arg0'/><parameter type='android.content.Intent' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='android.os.Bundle' name='arg5'/></method></class><class extends='java.lang.Object' name='Intent'><constructor type='android.content.Intent' name='Intent'/><constructor type='android.content.Intent' name='Intent'><parameter type='android.content.Intent' name='o'/></constructor><constructor type='android.content.Intent' name='Intent'><parameter type='java.lang.String' name='action'/></constructor><constructor type='android.content.Intent' name='Intent'><parameter type='java.lang.String' name='action'/><parameter type='android.net.Uri' name='uri'/></constructor><constructor type='android.content.Intent' name='Intent'><parameter type='android.content.Context' name='packageContext'/><parameter type='java.lang.Class&lt;?&gt;' name='cls'/></constructor><constructor type='android.content.Intent' name='Intent'><parameter type='java.lang.String' name='action'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.Context' name='packageContext'/><parameter type='java.lang.Class&lt;?&gt;' name='cls'/></constructor><method return='android.content.Intent' name='addCategory'><parameter type='java.lang.String' name='category'/></method><method return='android.content.Intent' name='addFlags'><parameter type='int' name='flags'/></method><method return='java.lang.Object' name='clone'/><method return='android.content.Intent' name='cloneFilter'/><method return='android.content.Intent' static='true' name='createChooser'><parameter type='android.content.Intent' name='target'/><parameter type='java.lang.CharSequence' name='title'/></method><method return='int' name='describeContents'/><method return='int' name='fillIn'><parameter type='android.content.Intent' name='other'/><parameter type='int' name='flags'/></method><method return='boolean' name='filterEquals'><parameter type='android.content.Intent' name='other'/></method><method return='int' name='filterHashCode'/><method return='java.lang.String' name='getAction'/><method return='boolean[]' name='getBooleanArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='getBooleanExtra'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='defaultValue'/></method><method return='android.os.Bundle' name='getBundleExtra'><parameter type='java.lang.String' name='name'/></method><method return='byte[]' name='getByteArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='byte' name='getByteExtra'><parameter type='java.lang.String' name='name'/><parameter type='byte' name='defaultValue'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='getCategories'/><method return='char[]' name='getCharArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='char' name='getCharExtra'><parameter type='java.lang.String' name='name'/><parameter type='char' name='defaultValue'/></method><method return='java.lang.CharSequence' name='getCharSequenceExtra'><parameter type='java.lang.String' name='name'/></method><method return='android.content.ComponentName' name='getComponent'/><method return='android.net.Uri' name='getData'/><method return='java.lang.String' name='getDataString'/><method return='double[]' name='getDoubleArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='double' name='getDoubleExtra'><parameter type='java.lang.String' name='name'/><parameter type='double' name='defaultValue'/></method><method return='android.os.Bundle' name='getExtras'/><method return='int' name='getFlags'/><method return='float[]' name='getFloatArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='float' name='getFloatExtra'><parameter type='java.lang.String' name='name'/><parameter type='float' name='defaultValue'/></method><method return='int[]' name='getIntArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='int' name='getIntExtra'><parameter type='java.lang.String' name='name'/><parameter type='int' name='defaultValue'/></method><method return='java.util.ArrayList&lt;java.lang.Integer&gt;' name='getIntegerArrayListExtra'><parameter type='java.lang.String' name='name'/></method><method deprecated='4' return='android.content.Intent' static='true' name='getIntent'><parameter type='java.lang.String' name='uri'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='android.content.Intent' static='true' name='getIntentOld'><parameter type='java.lang.String' name='uri'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='long[]' name='getLongArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='long' name='getLongExtra'><parameter type='java.lang.String' name='name'/><parameter type='long' name='defaultValue'/></method><method return='android.os.Parcelable[]' name='getParcelableArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='java.util.ArrayList&lt;T&gt;' name='getParcelableArrayListExtra'><parameter type='java.lang.String' name='name'/></method><method return='T' name='getParcelableExtra'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getScheme'/><method return='java.io.Serializable' name='getSerializableExtra'><parameter type='java.lang.String' name='name'/></method><method return='short[]' name='getShortArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='short' name='getShortExtra'><parameter type='java.lang.String' name='name'/><parameter type='short' name='defaultValue'/></method><method return='java.lang.String[]' name='getStringArrayExtra'><parameter type='java.lang.String' name='name'/></method><method return='java.util.ArrayList&lt;java.lang.String&gt;' name='getStringArrayListExtra'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getStringExtra'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getType'/><method return='boolean' name='hasCategory'><parameter type='java.lang.String' name='category'/></method><method return='boolean' name='hasExtra'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='hasFileDescriptors'/><method return='android.content.Intent' static='true' name='parseIntent'><parameter type='android.content.res.Resources' name='resources'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='byte' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='char' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='short' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='float' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='double' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.CharSequence' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='android.os.Parcelable' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='android.os.Parcelable[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.io.Serializable' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='boolean[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='byte[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='short[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='char[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='int[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='long[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='float[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='double[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String[]' name='value'/></method><method return='android.content.Intent' name='putExtra'><parameter type='java.lang.String' name='name'/><parameter type='android.os.Bundle' name='value'/></method><method return='android.content.Intent' name='putExtras'><parameter type='android.content.Intent' name='src'/></method><method return='android.content.Intent' name='putExtras'><parameter type='android.os.Bundle' name='extras'/></method><method return='android.content.Intent' name='putIntegerArrayListExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.util.ArrayList&lt;java.lang.Integer&gt;' name='value'/></method><method return='android.content.Intent' name='putParcelableArrayListExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.util.ArrayList&lt;? extends android.os.Parcelable&gt;' name='value'/></method><method return='android.content.Intent' name='putStringArrayListExtra'><parameter type='java.lang.String' name='name'/><parameter type='java.util.ArrayList&lt;java.lang.String&gt;' name='value'/></method><method name='readFromParcel'><parameter type='android.os.Parcel' name='in'/></method><method name='removeCategory'><parameter type='java.lang.String' name='category'/></method><method name='removeExtra'><parameter type='java.lang.String' name='name'/></method><method return='android.content.ComponentName' name='resolveActivity'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='android.content.pm.ActivityInfo' name='resolveActivityInfo'><parameter type='android.content.pm.PackageManager' name='pm'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='resolveType'><parameter type='android.content.Context' name='context'/></method><method return='java.lang.String' name='resolveType'><parameter type='android.content.ContentResolver' name='resolver'/></method><method return='java.lang.String' name='resolveTypeIfNeeded'><parameter type='android.content.ContentResolver' name='resolver'/></method><method return='android.content.Intent' name='setAction'><parameter type='java.lang.String' name='action'/></method><method return='android.content.Intent' name='setClass'><parameter type='android.content.Context' name='packageContext'/><parameter type='java.lang.Class&lt;?&gt;' name='cls'/></method><method return='android.content.Intent' name='setClassName'><parameter type='android.content.Context' name='packageContext'/><parameter type='java.lang.String' name='className'/></method><method return='android.content.Intent' name='setClassName'><parameter type='java.lang.String' name='packageName'/><parameter type='java.lang.String' name='className'/></method><method return='android.content.Intent' name='setComponent'><parameter type='android.content.ComponentName' name='component'/></method><method return='android.content.Intent' name='setData'><parameter type='android.net.Uri' name='data'/></method><method return='android.content.Intent' name='setDataAndType'><parameter type='android.net.Uri' name='data'/><parameter type='java.lang.String' name='type'/></method><method name='setExtrasClassLoader'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='android.content.Intent' name='setFlags'><parameter type='int' name='flags'/></method><method return='android.content.Intent' name='setType'><parameter type='java.lang.String' name='type'/></method><method deprecated='4' return='java.lang.String' name='toURI'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='android.content.Intent' name='replaceExtras' api_added='3'><parameter type='android.content.Intent' name='src'/></method><method return='android.content.Intent' name='replaceExtras' api_added='3'><parameter type='android.os.Bundle' name='extras'/></method><method return='java.lang.String' name='getPackage' api_added='4'/><method return='android.content.Intent' static='true' name='parseUri' api_added='4'><parameter type='java.lang.String' name='uri'/><parameter type='int' name='flags'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='android.content.Intent' name='setPackage' api_added='4'><parameter type='java.lang.String' name='packageName'/></method><method return='java.lang.String' name='toUri' api_added='4'><parameter type='int' name='flags'/></method><method return='android.graphics.Rect' name='getSourceBounds' api_added='7'/><method name='setSourceBounds' api_added='7'><parameter type='android.graphics.Rect' name='r'/></method><method return='java.lang.CharSequence[]' name='getCharSequenceArrayExtra' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='java.util.ArrayList&lt;java.lang.CharSequence&gt;' name='getCharSequenceArrayListExtra' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='android.content.Intent' name='putCharSequenceArrayListExtra' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.util.ArrayList&lt;java.lang.CharSequence&gt;' name='value'/></method><method return='android.content.Intent' name='putExtra' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.CharSequence[]' name='value'/></method><method return='android.content.Intent' static='true' name='makeMainActivity' api_added='11'><parameter type='android.content.ComponentName' name='mainActivity'/></method><method return='android.content.Intent' static='true' name='makeRestartActivityTask' api_added='11'><parameter type='android.content.ComponentName' name='mainActivity'/></method><method return='android.content.Intent' name='getSelector' api_added='15'/><method return='android.content.Intent' static='true' name='makeMainSelectorActivity' api_added='15'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='setSelector' api_added='15'><parameter type='android.content.Intent' name='arg0'/></method><method return='android.content.ClipData' name='getClipData' api_added='16'/><method return='java.lang.String' static='true' name='normalizeMimeType' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method name='setClipData' api_added='16'><parameter type='android.content.ClipData' name='arg0'/></method><method return='android.content.Intent' name='setDataAndNormalize' api_added='16'><parameter type='android.net.Uri' name='arg0'/></method><method return='android.content.Intent' name='setDataAndTypeAndNormalize' api_added='16'><parameter type='android.net.Uri' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method return='android.content.Intent' name='setTypeAndNormalize' api_added='16'><parameter type='java.lang.String' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='Intent.FilterComparison' final='true'><constructor type='android.content.Intent.FilterComparison' name='Intent.FilterComparison'><parameter type='android.content.Intent' name='intent'/></constructor><method return='android.content.Intent' name='getIntent'/></class><class extends='java.lang.Object' static='true' name='Intent.ShortcutIconResource'><constructor type='android.content.Intent.ShortcutIconResource' name='Intent.ShortcutIconResource'/><method return='int' name='describeContents'/><method return='android.content.Intent.ShortcutIconResource' static='true' name='fromContext'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceId'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='IntentFilter'><constructor type='android.content.IntentFilter' name='IntentFilter'/><constructor type='android.content.IntentFilter' name='IntentFilter'><parameter type='java.lang.String' name='action'/></constructor><constructor type='android.content.IntentFilter' name='IntentFilter'><parameter type='java.lang.String' name='action'/><parameter type='java.lang.String' name='dataType'/><exception type='android.content.IntentFilter.MalformedMimeTypeException' name='IntentFilter.MalformedMimeTypeException'/></constructor><constructor type='android.content.IntentFilter' name='IntentFilter'><parameter type='android.content.IntentFilter' name='o'/></constructor><method return='java.util.Iterator&lt;java.lang.String&gt;' name='actionsIterator' final='true'/><method name='addAction' final='true'><parameter type='java.lang.String' name='action'/></method><method name='addCategory' final='true'><parameter type='java.lang.String' name='category'/></method><method name='addDataAuthority' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='port'/></method><method name='addDataPath' final='true'><parameter type='java.lang.String' name='path'/><parameter type='int' name='type'/></method><method name='addDataScheme' final='true'><parameter type='java.lang.String' name='scheme'/></method><method name='addDataType' final='true'><parameter type='java.lang.String' name='type'/><exception type='android.content.IntentFilter.MalformedMimeTypeException' name='IntentFilter.MalformedMimeTypeException'/></method><method return='java.util.Iterator&lt;android.content.IntentFilter.AuthorityEntry&gt;' name='authoritiesIterator' final='true'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='categoriesIterator' final='true'/><method return='int' name='countActions' final='true'/><method return='int' name='countCategories' final='true'/><method return='int' name='countDataAuthorities' final='true'/><method return='int' name='countDataPaths' final='true'/><method return='int' name='countDataSchemes' final='true'/><method return='int' name='countDataTypes' final='true'/><method return='android.content.IntentFilter' static='true' name='create'><parameter type='java.lang.String' name='action'/><parameter type='java.lang.String' name='dataType'/></method><method return='int' name='describeContents' final='true'/><method name='dump'><parameter type='android.util.Printer' name='du'/><parameter type='java.lang.String' name='prefix'/></method><method return='java.lang.String' name='getAction' final='true'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getCategory' final='true'><parameter type='int' name='index'/></method><method return='android.content.IntentFilter.AuthorityEntry' name='getDataAuthority' final='true'><parameter type='int' name='index'/></method><method return='android.os.PatternMatcher' name='getDataPath' final='true'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getDataScheme' final='true'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getDataType' final='true'><parameter type='int' name='index'/></method><method return='int' name='getPriority' final='true'/><method return='boolean' name='hasAction' final='true'><parameter type='java.lang.String' name='action'/></method><method return='boolean' name='hasCategory' final='true'><parameter type='java.lang.String' name='category'/></method><method return='boolean' name='hasDataAuthority' final='true'><parameter type='android.net.Uri' name='data'/></method><method return='boolean' name='hasDataPath' final='true'><parameter type='java.lang.String' name='data'/></method><method return='boolean' name='hasDataScheme' final='true'><parameter type='java.lang.String' name='scheme'/></method><method return='boolean' name='hasDataType' final='true'><parameter type='java.lang.String' name='type'/></method><method return='int' name='match' final='true'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.content.Intent' name='intent'/><parameter type='boolean' name='resolve'/><parameter type='java.lang.String' name='logTag'/></method><method return='int' name='match' final='true'><parameter type='java.lang.String' name='action'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='scheme'/><parameter type='android.net.Uri' name='data'/><parameter type='java.util.Set&lt;java.lang.String&gt;' name='categories'/><parameter type='java.lang.String' name='logTag'/></method><method return='boolean' name='matchAction' final='true'><parameter type='java.lang.String' name='action'/></method><method return='java.lang.String' name='matchCategories' final='true'><parameter type='java.util.Set&lt;java.lang.String&gt;' name='categories'/></method><method return='int' name='matchData' final='true'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='scheme'/><parameter type='android.net.Uri' name='data'/></method><method return='int' name='matchDataAuthority' final='true'><parameter type='android.net.Uri' name='data'/></method><method return='java.util.Iterator&lt;android.os.PatternMatcher&gt;' name='pathsIterator' final='true'/><method name='readFromXml'><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' name='schemesIterator' final='true'/><method name='setPriority' final='true'><parameter type='int' name='priority'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' name='typesIterator' final='true'/><method name='writeToParcel' final='true'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method name='writeToXml'><parameter type='org.xmlpull.v1.XmlSerializer' name='serializer'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' static='true' name='IntentFilter.AuthorityEntry' final='true'><constructor type='android.content.IntentFilter.AuthorityEntry' name='IntentFilter.AuthorityEntry'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='port'/></constructor><method return='java.lang.String' name='getHost'/><method return='int' name='getPort'/><method return='int' name='match'><parameter type='android.net.Uri' name='data'/></method></class><class extends='android.util.AndroidException' static='true' name='IntentFilter.MalformedMimeTypeException'><constructor type='android.content.IntentFilter.MalformedMimeTypeException' name='IntentFilter.MalformedMimeTypeException'/><constructor type='android.content.IntentFilter.MalformedMimeTypeException' name='IntentFilter.MalformedMimeTypeException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='android.content.ContextWrapper' name='MutableContextWrapper'><constructor type='android.content.MutableContextWrapper' name='MutableContextWrapper'><parameter type='android.content.Context' name='base'/></constructor><method name='setBaseContext'><parameter type='android.content.Context' name='base'/></method></class><class extends='android.util.AndroidRuntimeException' name='ReceiverCallNotAllowedException'><constructor type='android.content.ReceiverCallNotAllowedException' name='ReceiverCallNotAllowedException'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='android.content.ContentProvider' name='SearchRecentSuggestionsProvider'><constructor type='android.content.SearchRecentSuggestionsProvider' name='SearchRecentSuggestionsProvider'/><method return='int' name='delete'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='java.lang.String' name='getType'><parameter type='android.net.Uri' name='uri'/></method><method return='android.net.Uri' name='insert'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/></method><method return='boolean' name='onCreate'/><method return='android.database.Cursor' name='query'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></method><method visibility='protected' name='setupSuggestions'><parameter type='java.lang.String' name='authority'/><parameter type='int' name='mode'/></method><method return='int' name='update'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method></class><class extends='java.lang.Object' name='UriMatcher'><constructor type='android.content.UriMatcher' name='UriMatcher'><parameter type='int' name='code'/></constructor><method name='addURI'><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='path'/><parameter type='int' name='code'/></method><method return='int' name='match'><parameter type='android.net.Uri' name='uri'/></method></class><class extends='java.lang.Object' name='IntentSender' api_added='4'><method return='int' name='describeContents' api_added='4'/><method return='android.content.IntentSender' static='true' name='readIntentSenderOrNullFromParcel' api_added='4'><parameter type='android.os.Parcel' name='in'/></method><method name='sendIntent' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='int' name='code'/><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.IntentSender.OnFinished' name='onFinished'/><parameter type='android.os.Handler' name='handler'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method static='true' name='writeIntentSenderOrNullToParcel' api_added='4'><parameter type='android.content.IntentSender' name='sender'/><parameter type='android.os.Parcel' name='out'/></method><method name='writeToParcel' api_added='4'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='getTargetPackage' api_added='9'/><method name='sendIntent' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.content.Intent' name='arg2'/><parameter type='android.content.IntentSender.OnFinished' name='arg3'/><parameter type='android.os.Handler' name='arg4'/><parameter type='java.lang.String' name='arg5'/></method></class><class extends='android.util.AndroidException' static='true' name='IntentSender.SendIntentException' api_added='4'><constructor type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException' api_added='4'/><constructor type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException' api_added='4'><parameter type='java.lang.String' name='name'/></constructor><constructor type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException' api_added='4'><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='AbstractThreadedSyncAdapter' api_added='5'><constructor type='android.content.AbstractThreadedSyncAdapter' name='AbstractThreadedSyncAdapter' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='boolean' name='autoInitialize'/></constructor><method return='android.content.Context' name='getContext' api_added='5'/><method return='android.os.IBinder' name='getSyncAdapterBinder' api_added='5' final='true'/><method abstract='true' name='onPerformSync' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='android.os.Bundle' name='extras'/><parameter type='java.lang.String' name='authority'/><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.content.SyncResult' name='syncResult'/></method><method name='onSyncCanceled' api_added='8'/><method name='onSyncCanceled' api_added='11'><parameter type='java.lang.Thread' name='thread'/></method></class><class extends='java.lang.Object' name='ContentProviderClient' api_added='5'><method return='android.content.ContentProviderResult[]' name='applyBatch' api_added='5'><parameter type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;' name='operations'/><exception type='android.content.OperationApplicationException' name='OperationApplicationException'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='int' name='bulkInsert' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='android.content.ContentValues[]' name='initialValues'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='int' name='delete' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.content.ContentProvider' name='getLocalContentProvider' api_added='5'/><method return='java.lang.String' name='getType' api_added='5'><parameter type='android.net.Uri' name='url'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.net.Uri' name='insert' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='android.content.ContentValues' name='initialValues'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.content.res.AssetFileDescriptor' name='openAssetFile' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.os.ParcelFileDescriptor' name='openFile' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.database.Cursor' name='query' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' name='release' api_added='5'/><method return='int' name='update' api_added='5'><parameter type='android.net.Uri' name='url'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='java.lang.String[]' name='getStreamTypes' api_added='11'><parameter type='android.net.Uri' name='url'/><parameter type='java.lang.String' name='mimeTypeFilter'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.content.res.AssetFileDescriptor' name='openTypedAssetFileDescriptor' api_added='11' final='true'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/><parameter type='android.os.Bundle' name='opts'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.database.Cursor' name='query' api_added='16'><parameter type='android.net.Uri' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='android.os.CancellationSignal' name='arg5'/></method></class><class extends='java.lang.Object' name='ContentProviderOperation' api_added='5'><method return='android.content.ContentProviderResult' name='apply' api_added='5'><parameter type='android.content.ContentProvider' name='provider'/><parameter type='android.content.ContentProviderResult[]' name='backRefs'/><parameter type='int' name='numBackRefs'/><exception type='android.content.OperationApplicationException' name='OperationApplicationException'/></method><method return='int' name='describeContents' api_added='5'/><method return='android.net.Uri' name='getUri' api_added='5'/><method return='boolean' name='isReadOperation' api_added='5'/><method return='boolean' name='isWriteOperation' api_added='5'/><method return='boolean' name='isYieldAllowed' api_added='5'/><method return='android.content.ContentProviderOperation.Builder' static='true' name='newAssertQuery' api_added='5'><parameter type='android.net.Uri' name='uri'/></method><method return='android.content.ContentProviderOperation.Builder' static='true' name='newDelete' api_added='5'><parameter type='android.net.Uri' name='uri'/></method><method return='android.content.ContentProviderOperation.Builder' static='true' name='newInsert' api_added='5'><parameter type='android.net.Uri' name='uri'/></method><method return='android.content.ContentProviderOperation.Builder' static='true' name='newUpdate' api_added='5'><parameter type='android.net.Uri' name='uri'/></method><method return='java.lang.String[]' name='resolveSelectionArgsBackReferences' api_added='5'><parameter type='android.content.ContentProviderResult[]' name='backRefs'/><parameter type='int' name='numBackRefs'/></method><method return='android.content.ContentValues' name='resolveValueBackReferences' api_added='5'><parameter type='android.content.ContentProviderResult[]' name='backRefs'/><parameter type='int' name='numBackRefs'/></method><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='ContentProviderOperation.Builder' api_added='5'><method return='android.content.ContentProviderOperation' name='build' api_added='5'/><method return='android.content.ContentProviderOperation.Builder' name='withExpectedCount' api_added='5'><parameter type='int' name='count'/></method><method return='android.content.ContentProviderOperation.Builder' name='withSelection' api_added='5'><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='android.content.ContentProviderOperation.Builder' name='withSelectionBackReference' api_added='5'><parameter type='int' name='selectionArgIndex'/><parameter type='int' name='previousResult'/></method><method return='android.content.ContentProviderOperation.Builder' name='withValue' api_added='5'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/></method><method return='android.content.ContentProviderOperation.Builder' name='withValueBackReference' api_added='5'><parameter type='java.lang.String' name='key'/><parameter type='int' name='previousResult'/></method><method return='android.content.ContentProviderOperation.Builder' name='withValueBackReferences' api_added='5'><parameter type='android.content.ContentValues' name='backReferences'/></method><method return='android.content.ContentProviderOperation.Builder' name='withValues' api_added='5'><parameter type='android.content.ContentValues' name='values'/></method><method return='android.content.ContentProviderOperation.Builder' name='withYieldAllowed' api_added='5'><parameter type='boolean' name='yieldAllowed'/></method></class><class extends='java.lang.Object' name='ContentProviderResult' api_added='5'><constructor type='android.content.ContentProviderResult' name='ContentProviderResult' api_added='5'><parameter type='android.net.Uri' name='uri'/></constructor><constructor type='android.content.ContentProviderResult' name='ContentProviderResult' api_added='5'><parameter type='int' name='count'/></constructor><constructor type='android.content.ContentProviderResult' name='ContentProviderResult' api_added='5'><parameter type='android.os.Parcel' name='source'/></constructor><method return='int' name='describeContents' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Exception' name='OperationApplicationException' api_added='5'><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'/><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'><parameter type='int' name='numSuccessfulYieldPoints'/></constructor><constructor type='android.content.OperationApplicationException' name='OperationApplicationException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='int' name='numSuccessfulYieldPoints'/></constructor><method return='int' name='getNumSuccessfulYieldPoints' api_added='5'/></class><class extends='java.lang.Object' name='SyncAdapterType' api_added='5'><constructor type='android.content.SyncAdapterType' name='SyncAdapterType' api_added='5'><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='accountType'/><parameter type='boolean' name='userVisible'/><parameter type='boolean' name='supportsUploading'/></constructor><constructor type='android.content.SyncAdapterType' name='SyncAdapterType' api_added='5'><parameter type='android.os.Parcel' name='source'/></constructor><method return='int' name='describeContents' api_added='5'/><method return='boolean' name='isUserVisible' api_added='5'/><method return='android.content.SyncAdapterType' static='true' name='newKey' api_added='5'><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='accountType'/></method><method return='boolean' name='supportsUploading' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='boolean' name='allowParallelSyncs' api_added='11'/><method return='boolean' name='isAlwaysSyncable' api_added='11'/><method return='java.lang.String' name='getSettingsActivity' api_added='14'/></class><class extends='java.lang.Object' name='SyncContext' api_added='5'><method return='android.os.IBinder' name='getSyncContextBinder' api_added='5'/><method name='onFinished' api_added='5'><parameter type='android.content.SyncResult' name='result'/></method></class><class extends='java.lang.Object' name='SyncResult' api_added='5' final='true'><constructor type='android.content.SyncResult' name='SyncResult' api_added='5'/><method name='clear' api_added='5'/><method return='int' name='describeContents' api_added='5'/><method return='boolean' name='hasError' api_added='5'/><method return='boolean' name='hasHardError' api_added='5'/><method return='boolean' name='hasSoftError' api_added='5'/><method return='boolean' name='madeSomeProgress' api_added='5'/><method return='java.lang.String' name='toDebugString' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='SyncStats' api_added='5'><constructor type='android.content.SyncStats' name='SyncStats' api_added='5'/><constructor type='android.content.SyncStats' name='SyncStats' api_added='5'><parameter type='android.os.Parcel' name='in'/></constructor><method name='clear' api_added='5'/><method return='int' name='describeContents' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='Entity' api_added='8' final='true'><constructor type='android.content.Entity' name='Entity' api_added='8'><parameter type='android.content.ContentValues' name='values'/></constructor><method name='addSubValue' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/></method><method return='android.content.ContentValues' name='getEntityValues' api_added='8'/><method return='java.util.ArrayList&lt;android.content.Entity.NamedContentValues&gt;' name='getSubValues' api_added='8'/></class><class extends='java.lang.Object' static='true' name='Entity.NamedContentValues' api_added='8'><constructor type='android.content.Entity.NamedContentValues' name='Entity.NamedContentValues' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/></constructor></class><class extends='java.lang.Object' name='PeriodicSync' api_added='8'><constructor type='android.content.PeriodicSync' name='PeriodicSync' api_added='8'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authority'/><parameter type='android.os.Bundle' name='extras'/><parameter type='long' name='period'/></constructor><method return='int' name='describeContents' api_added='8'/><method name='writeToParcel' api_added='8'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='SyncInfo' api_added='8'><method return='int' name='describeContents' api_added='11'/><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='android.content.Loader' abstract='true' name='AsyncTaskLoader' api_added='11'><constructor type='android.content.AsyncTaskLoader' name='AsyncTaskLoader' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><method return='boolean' api_removed='16' name='cancelLoad' api_added='11'/><method return='D' abstract='true' name='loadInBackground' api_added='11'/><method name='onCanceled' api_added='11'><parameter type='D' name='data'/></method><method visibility='protected' return='D' name='onLoadInBackground' api_added='11'/><method name='setUpdateThrottle' api_added='11'><parameter type='long' name='delayMS'/></method><method name='cancelLoadInBackground' api_added='16'/><method return='boolean' name='isLoadInBackgroundCanceled' api_added='16'/></class><class extends='java.lang.Object' static='true' name='BroadcastReceiver.PendingResult' api_added='11'><method name='abortBroadcast' api_added='11' final='true'/><method name='clearAbortBroadcast' api_added='11' final='true'/><method name='finish' api_added='11' final='true'/><method return='boolean' name='getAbortBroadcast' api_added='11' final='true'/><method return='int' name='getResultCode' api_added='11' final='true'/><method return='java.lang.String' name='getResultData' api_added='11' final='true'/><method return='android.os.Bundle' name='getResultExtras' api_added='11' final='true'><parameter type='boolean' name='makeMap'/></method><method name='setResult' api_added='11' final='true'><parameter type='int' name='code'/><parameter type='java.lang.String' name='data'/><parameter type='android.os.Bundle' name='extras'/></method><method name='setResultCode' api_added='11' final='true'><parameter type='int' name='code'/></method><method name='setResultData' api_added='11' final='true'><parameter type='java.lang.String' name='data'/></method><method name='setResultExtras' api_added='11' final='true'><parameter type='android.os.Bundle' name='extras'/></method></class><class extends='java.lang.Object' name='ClipData' api_added='11'><constructor type='android.content.ClipData' name='ClipData' api_added='11'><parameter type='java.lang.CharSequence' name='label'/><parameter type='java.lang.String[]' name='mimeTypes'/><parameter type='android.content.ClipData.Item' name='item'/></constructor><constructor type='android.content.ClipData' name='ClipData' api_added='11'><parameter type='android.content.ClipDescription' name='description'/><parameter type='android.content.ClipData.Item' name='item'/></constructor><method name='addItem' api_added='11'><parameter type='android.content.ClipData.Item' name='item'/></method><method return='int' name='describeContents' api_added='11'/><method return='android.content.ClipDescription' name='getDescription' api_added='11'/><method return='android.content.ClipData.Item' name='getItemAt' api_added='11'><parameter type='int' name='index'/></method><method return='int' name='getItemCount' api_added='11'/><method return='android.content.ClipData' static='true' name='newIntent' api_added='11'><parameter type='java.lang.CharSequence' name='label'/><parameter type='android.content.Intent' name='intent'/></method><method return='android.content.ClipData' static='true' name='newPlainText' api_added='11'><parameter type='java.lang.CharSequence' name='label'/><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.content.ClipData' static='true' name='newRawUri' api_added='11'><parameter type='java.lang.CharSequence' name='label'/><parameter type='android.net.Uri' name='uri'/></method><method return='android.content.ClipData' static='true' name='newUri' api_added='11'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='java.lang.CharSequence' name='label'/><parameter type='android.net.Uri' name='uri'/></method><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='android.content.ClipData' static='true' name='newHtmlText' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/><parameter type='java.lang.CharSequence' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='ClipData.Item' api_added='11'><constructor type='android.content.ClipData.Item' name='ClipData.Item' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></constructor><constructor type='android.content.ClipData.Item' name='ClipData.Item' api_added='11'><parameter type='android.content.Intent' name='intent'/></constructor><constructor type='android.content.ClipData.Item' name='ClipData.Item' api_added='11'><parameter type='android.net.Uri' name='uri'/></constructor><constructor type='android.content.ClipData.Item' name='ClipData.Item' api_added='11'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.content.Intent' name='intent'/><parameter type='android.net.Uri' name='uri'/></constructor><method return='java.lang.CharSequence' name='coerceToText' api_added='11'><parameter type='android.content.Context' name='context'/></method><method return='android.content.Intent' name='getIntent' api_added='11'/><method return='java.lang.CharSequence' name='getText' api_added='11'/><method return='android.net.Uri' name='getUri' api_added='11'/><method return='java.lang.String' name='coerceToHtmlText' api_added='16'><parameter type='android.content.Context' name='arg0'/></method><method return='java.lang.CharSequence' name='coerceToStyledText' api_added='16'><parameter type='android.content.Context' name='arg0'/></method><method return='java.lang.String' name='getHtmlText' api_added='16'/></class><class extends='java.lang.Object' name='ClipDescription' api_added='11'><constructor type='android.content.ClipDescription' name='ClipDescription' api_added='11'><parameter type='java.lang.CharSequence' name='label'/><parameter type='java.lang.String[]' name='mimeTypes'/></constructor><constructor type='android.content.ClipDescription' name='ClipDescription' api_added='11'><parameter type='android.content.ClipDescription' name='o'/></constructor><method return='boolean' static='true' name='compareMimeTypes' api_added='11'><parameter type='java.lang.String' name='concreteType'/><parameter type='java.lang.String' name='desiredType'/></method><method return='int' name='describeContents' api_added='11'/><method return='java.lang.String[]' name='filterMimeTypes' api_added='11'><parameter type='java.lang.String' name='mimeType'/></method><method return='java.lang.CharSequence' name='getLabel' api_added='11'/><method return='java.lang.String' name='getMimeType' api_added='11'><parameter type='int' name='index'/></method><method return='int' name='getMimeTypeCount' api_added='11'/><method return='boolean' name='hasMimeType' api_added='11'><parameter type='java.lang.String' name='mimeType'/></method><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.ClipboardManager' name='ClipboardManager' api_added='11'><method name='addPrimaryClipChangedListener' api_added='11'><parameter type='android.content.ClipboardManager.OnPrimaryClipChangedListener' name='what'/></method><method return='android.content.ClipData' name='getPrimaryClip' api_added='11'/><method return='android.content.ClipDescription' name='getPrimaryClipDescription' api_added='11'/><method deprecated='11' return='java.lang.CharSequence' name='getText' api_added='11'/><method return='boolean' name='hasPrimaryClip' api_added='11'/><method deprecated='11' return='boolean' name='hasText' api_added='11'/><method name='removePrimaryClipChangedListener' api_added='11'><parameter type='android.content.ClipboardManager.OnPrimaryClipChangedListener' name='what'/></method><method name='setPrimaryClip' api_added='11'><parameter type='android.content.ClipData' name='clip'/></method><method deprecated='11' name='setText' api_added='11'><parameter type='java.lang.CharSequence' name='text'/></method></class><class extends='android.content.AsyncTaskLoader' name='CursorLoader' api_added='11'><constructor type='android.content.CursorLoader' name='CursorLoader' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.content.CursorLoader' name='CursorLoader' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></constructor><method name='deliverResult' api_added='11'><parameter type='android.database.Cursor' name='cursor'/></method><method return='java.lang.String[]' name='getProjection' api_added='11'/><method return='java.lang.String' name='getSelection' api_added='11'/><method return='java.lang.String[]' name='getSelectionArgs' api_added='11'/><method return='java.lang.String' name='getSortOrder' api_added='11'/><method return='android.net.Uri' name='getUri' api_added='11'/><method return='android.database.Cursor' name='loadInBackground' api_added='11'/><method name='onCanceled' api_added='11'><parameter type='android.database.Cursor' name='cursor'/></method><method name='setProjection' api_added='11'><parameter type='java.lang.String[]' name='projection'/></method><method name='setSelection' api_added='11'><parameter type='java.lang.String' name='selection'/></method><method name='setSelectionArgs' api_added='11'><parameter type='java.lang.String[]' name='selectionArgs'/></method><method name='setSortOrder' api_added='11'><parameter type='java.lang.String' name='sortOrder'/></method><method name='setUri' api_added='11'><parameter type='android.net.Uri' name='uri'/></method></class><class extends='java.lang.Object' name='Loader' api_added='11'><constructor type='android.content.Loader' name='Loader' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><method name='abandon' api_added='11'/><method return='java.lang.String' name='dataToString' api_added='11'><parameter type='D' name='data'/></method><method name='deliverResult' api_added='11'><parameter type='D' name='data'/></method><method name='dump' api_added='11'><parameter type='java.lang.String' name='prefix'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='writer'/><parameter type='java.lang.String[]' name='args'/></method><method name='forceLoad' api_added='11'/><method return='android.content.Context' name='getContext' api_added='11'/><method return='int' name='getId' api_added='11'/><method return='boolean' name='isAbandoned' api_added='11'/><method return='boolean' name='isReset' api_added='11'/><method return='boolean' name='isStarted' api_added='11'/><method visibility='protected' name='onAbandon' api_added='11'/><method name='onContentChanged' api_added='11'/><method visibility='protected' name='onForceLoad' api_added='11'/><method visibility='protected' name='onReset' api_added='11'/><method visibility='protected' name='onStartLoading' api_added='11'/><method visibility='protected' name='onStopLoading' api_added='11'/><method name='registerListener' api_added='11'><parameter type='int' name='id'/><parameter type='android.content.Loader.OnLoadCompleteListener&lt;D&gt;' name='listener'/></method><method name='reset' api_added='11'/><method name='startLoading' api_added='11' final='true'/><method name='stopLoading' api_added='11'/><method return='boolean' name='takeContentChanged' api_added='11'/><method name='unregisterListener' api_added='11'><parameter type='android.content.Loader.OnLoadCompleteListener&lt;D&gt;' name='listener'/></method><method return='boolean' name='cancelLoad' api_added='16'/><method name='deliverCancellation' api_added='16'/><method visibility='protected' return='boolean' name='onCancelLoad' api_added='16'/><method name='registerOnLoadCanceledListener' api_added='16'><parameter type='android.content.Loader.OnLoadCanceledListener&lt;D&gt;' name='arg0'/></method><method name='unregisterOnLoadCanceledListener' api_added='16'><parameter type='android.content.Loader.OnLoadCanceledListener&lt;D&gt;' name='arg0'/></method></class><class extends='android.database.ContentObserver' name='Loader.ForceLoadContentObserver' api_added='11' final='true'><constructor type='android.content.Loader.ForceLoadContentObserver' name='Loader.ForceLoadContentObserver' api_added='11'/></class><interface abstract='true' name='ComponentCallbacks'><method abstract='true' name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method abstract='true' name='onLowMemory'/></interface><interface abstract='true' name='DialogInterface'><method abstract='true' name='cancel'/><method abstract='true' name='dismiss'/></interface><interface abstract='true' static='true' name='DialogInterface.OnCancelListener'><method abstract='true' name='onCancel'><parameter type='android.content.DialogInterface' name='dialog'/></method></interface><interface abstract='true' static='true' name='DialogInterface.OnClickListener'><method abstract='true' name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/></method></interface><interface abstract='true' static='true' name='DialogInterface.OnDismissListener'><method abstract='true' name='onDismiss'><parameter type='android.content.DialogInterface' name='dialog'/></method></interface><interface abstract='true' static='true' name='DialogInterface.OnKeyListener'><method return='boolean' abstract='true' name='onKey'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method></interface><interface abstract='true' static='true' name='DialogInterface.OnMultiChoiceClickListener'><method abstract='true' name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/><parameter type='boolean' name='isChecked'/></method></interface><interface abstract='true' name='ServiceConnection'><method abstract='true' name='onServiceConnected'><parameter type='android.content.ComponentName' name='name'/><parameter type='android.os.IBinder' name='service'/></method><method abstract='true' name='onServiceDisconnected'><parameter type='android.content.ComponentName' name='name'/></method></interface><interface abstract='true' name='SharedPreferences'><method return='boolean' abstract='true' name='contains'><parameter type='java.lang.String' name='key'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='edit'/><method return='java.util.Map&lt;java.lang.String, ?&gt;' abstract='true' name='getAll'/><method return='boolean' abstract='true' name='getBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='defValue'/></method><method return='float' abstract='true' name='getFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='defValue'/></method><method return='int' abstract='true' name='getInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='defValue'/></method><method return='long' abstract='true' name='getLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='defValue'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='defValue'/></method><method abstract='true' name='registerOnSharedPreferenceChangeListener'><parameter type='android.content.SharedPreferences.OnSharedPreferenceChangeListener' name='listener'/></method><method abstract='true' name='unregisterOnSharedPreferenceChangeListener'><parameter type='android.content.SharedPreferences.OnSharedPreferenceChangeListener' name='listener'/></method><method return='java.util.Set&lt;java.lang.String&gt;' abstract='true' name='getStringSet' api_added='11'><parameter type='java.lang.String' name='key'/><parameter type='java.util.Set&lt;java.lang.String&gt;' name='defValues'/></method></interface><interface abstract='true' static='true' name='SharedPreferences.Editor'><method return='android.content.SharedPreferences.Editor' abstract='true' name='clear'/><method return='boolean' abstract='true' name='commit'/><method return='android.content.SharedPreferences.Editor' abstract='true' name='putBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='value'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='putFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='value'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='putInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='putLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='value'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='putString'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method return='android.content.SharedPreferences.Editor' abstract='true' name='remove'><parameter type='java.lang.String' name='key'/></method><method abstract='true' name='apply' api_added='9'/><method return='android.content.SharedPreferences.Editor' abstract='true' name='putStringSet' api_added='11'><parameter type='java.lang.String' name='key'/><parameter type='java.util.Set&lt;java.lang.String&gt;' name='values'/></method></interface><interface abstract='true' static='true' name='SharedPreferences.OnSharedPreferenceChangeListener'><method abstract='true' name='onSharedPreferenceChanged'><parameter type='android.content.SharedPreferences' name='sharedPreferences'/><parameter type='java.lang.String' name='key'/></method></interface><interface abstract='true' static='true' name='IntentSender.OnFinished' api_added='4'><method abstract='true' name='onSendFinished' api_added='4'><parameter type='android.content.IntentSender' name='IntentSender'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='resultCode'/><parameter type='java.lang.String' name='resultData'/><parameter type='android.os.Bundle' name='resultExtras'/></method></interface><interface abstract='true' name='SyncStatusObserver' api_added='5'><method abstract='true' name='onStatusChanged' api_added='5'><parameter type='int' name='which'/></method></interface><interface abstract='true' static='true' name='DialogInterface.OnShowListener' api_added='8'><method abstract='true' name='onShow' api_added='8'><parameter type='android.content.DialogInterface' name='dialog'/></method></interface><interface abstract='true' name='EntityIterator' api_added='8'><method abstract='true' name='close' api_added='8'/><method abstract='true' name='reset' api_added='8'/></interface><interface abstract='true' static='true' name='ClipboardManager.OnPrimaryClipChangedListener' api_added='11'><method abstract='true' name='onPrimaryClipChanged' api_added='11'/></interface><interface abstract='true' static='true' name='ContentProvider.PipeDataWriter' api_added='11'><method abstract='true' name='writeDataToPipe' api_added='11'><parameter type='android.os.ParcelFileDescriptor' name='output'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/><parameter type='android.os.Bundle' name='opts'/><parameter type='T' name='args'/></method></interface><interface abstract='true' static='true' name='Loader.OnLoadCompleteListener' api_added='11'><method abstract='true' name='onLoadComplete' api_added='11'><parameter type='android.content.Loader&lt;D&gt;' name='loader'/><parameter type='D' name='data'/></method></interface><interface extends='java.lang.Object' abstract='true' name='ComponentCallbacks2' api_added='14'><method abstract='true' name='onTrimMemory' api_added='14'><parameter type='int' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='Loader.OnLoadCanceledListener' api_added='16'><method abstract='true' name='onLoadCanceled' api_added='16'><parameter type='android.content.Loader&lt;D&gt;' name='arg0'/></method></interface></package><package name='android.content.pm'><class extends='android.content.pm.ComponentInfo' name='ActivityInfo'><constructor type='android.content.pm.ActivityInfo' name='ActivityInfo'/><constructor type='android.content.pm.ActivityInfo' name='ActivityInfo'><parameter type='android.content.pm.ActivityInfo' name='orig'/></constructor><method return='int' name='describeContents'/><method name='dump'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='int' name='getThemeResource' final='true'/></class><class extends='android.content.pm.PackageItemInfo' name='ApplicationInfo'><constructor type='android.content.pm.ApplicationInfo' name='ApplicationInfo'/><constructor type='android.content.pm.ApplicationInfo' name='ApplicationInfo'><parameter type='android.content.pm.ApplicationInfo' name='orig'/></constructor><method return='int' name='describeContents'/><method name='dump'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='java.lang.CharSequence' name='loadDescription'><parameter type='android.content.pm.PackageManager' name='pm'/></method></class><class extends='java.lang.Object' static='true' name='ApplicationInfo.DisplayNameComparator'><constructor type='android.content.pm.ApplicationInfo.DisplayNameComparator' name='ApplicationInfo.DisplayNameComparator'><parameter type='android.content.pm.PackageManager' name='pm'/></constructor><method return='int' name='compare' final='true'><parameter type='android.content.pm.ApplicationInfo' name='aa'/><parameter type='android.content.pm.ApplicationInfo' name='ab'/></method></class><class extends='android.content.pm.PackageItemInfo' name='ComponentInfo'><constructor type='android.content.pm.ComponentInfo' name='ComponentInfo'/><constructor type='android.content.pm.ComponentInfo' name='ComponentInfo'><parameter type='android.content.pm.ComponentInfo' name='orig'/></constructor><constructor visibility='protected' type='android.content.pm.ComponentInfo' name='ComponentInfo'><parameter type='android.os.Parcel' name='source'/></constructor><method return='int' name='getIconResource' final='true'/><method return='boolean' name='isEnabled' api_added='11'/></class><class extends='android.os.Binder' abstract='true' api_removed='4' static='true' name='IPackageInstallObserver.Stub'><constructor api_removed='4' type='android.content.pm.IPackageInstallObserver.Stub' name='IPackageInstallObserver.Stub'/><method return='android.os.IBinder' api_removed='4' name='asBinder'/><method return='android.content.pm.IPackageInstallObserver' api_removed='4' static='true' name='asInterface'><parameter type='android.os.IBinder' name='obj'/></method><method return='boolean' api_removed='4' name='onTransact'><parameter type='int' name='code'/><parameter type='android.os.Parcel' name='data'/><parameter type='android.os.Parcel' name='reply'/><parameter type='int' name='flags'/><exception type='android.os.RemoteException' name='RemoteException'/></method></class><class extends='android.content.pm.PackageItemInfo' name='InstrumentationInfo'><constructor type='android.content.pm.InstrumentationInfo' name='InstrumentationInfo'/><constructor type='android.content.pm.InstrumentationInfo' name='InstrumentationInfo'><parameter type='android.content.pm.InstrumentationInfo' name='orig'/></constructor><method return='int' name='describeContents'/></class><class extends='java.lang.Object' name='PackageInfo'><constructor type='android.content.pm.PackageInfo' name='PackageInfo'/><method return='int' name='describeContents'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='java.lang.Object' name='PackageItemInfo'><constructor type='android.content.pm.PackageItemInfo' name='PackageItemInfo'/><constructor type='android.content.pm.PackageItemInfo' name='PackageItemInfo'><parameter type='android.content.pm.PackageItemInfo' name='orig'/></constructor><constructor visibility='protected' type='android.content.pm.PackageItemInfo' name='PackageItemInfo'><parameter type='android.os.Parcel' name='source'/></constructor><method visibility='protected' name='dumpBack'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method visibility='protected' name='dumpFront'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.graphics.drawable.Drawable' name='loadIcon'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='android.content.res.XmlResourceParser' name='loadXmlMetaData'><parameter type='android.content.pm.PackageManager' name='pm'/><parameter type='java.lang.String' name='name'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method><method return='android.graphics.drawable.Drawable' name='loadLogo' api_added='9'><parameter type='android.content.pm.PackageManager' name='pm'/></method></class><class extends='java.lang.Object' static='true' name='PackageItemInfo.DisplayNameComparator'><constructor type='android.content.pm.PackageItemInfo.DisplayNameComparator' name='PackageItemInfo.DisplayNameComparator'><parameter type='android.content.pm.PackageManager' name='pm'/></constructor><method return='int' name='compare' final='true'><parameter type='android.content.pm.PackageItemInfo' name='aa'/><parameter type='android.content.pm.PackageItemInfo' name='ab'/></method></class><class extends='java.lang.Object' abstract='true' name='PackageManager'><constructor type='android.content.pm.PackageManager' name='PackageManager'/><method deprecated='7' abstract='true' name='addPackageToPreferred'><parameter type='java.lang.String' name='packageName'/></method><method return='boolean' abstract='true' name='addPermission'><parameter type='android.content.pm.PermissionInfo' name='info'/></method><method deprecated='8' abstract='true' name='addPreferredActivity'><parameter type='android.content.IntentFilter' name='filter'/><parameter type='int' name='match'/><parameter type='android.content.ComponentName[]' name='set'/><parameter type='android.content.ComponentName' name='activity'/></method><method return='int' abstract='true' name='checkPermission'><parameter type='java.lang.String' name='permName'/><parameter type='java.lang.String' name='pkgName'/></method><method return='int' abstract='true' name='checkSignatures'><parameter type='java.lang.String' name='pkg1'/><parameter type='java.lang.String' name='pkg2'/></method><method abstract='true' name='clearPackagePreferredActivities'><parameter type='java.lang.String' name='packageName'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getActivityIcon'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getActivityIcon'><parameter type='android.content.Intent' name='intent'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ActivityInfo' abstract='true' name='getActivityInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.util.List&lt;android.content.pm.PermissionGroupInfo&gt;' abstract='true' name='getAllPermissionGroups'><parameter type='int' name='flags'/></method><method return='int' abstract='true' name='getApplicationEnabledSetting'><parameter type='java.lang.String' name='packageName'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getApplicationIcon'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getApplicationIcon'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ApplicationInfo' abstract='true' name='getApplicationInfo'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.CharSequence' abstract='true' name='getApplicationLabel'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='int' abstract='true' name='getComponentEnabledSetting'><parameter type='android.content.ComponentName' name='componentName'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getDefaultActivityIcon'/><method return='android.graphics.drawable.Drawable' abstract='true' name='getDrawable'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method return='java.util.List&lt;android.content.pm.ApplicationInfo&gt;' abstract='true' name='getInstalledApplications'><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.PackageInfo&gt;' abstract='true' name='getInstalledPackages'><parameter type='int' name='flags'/></method><method return='android.content.pm.InstrumentationInfo' abstract='true' name='getInstrumentationInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String' abstract='true' name='getNameForUid'><parameter type='int' name='uid'/></method><method return='android.content.pm.PackageInfo' name='getPackageArchiveInfo'><parameter type='java.lang.String' name='archiveFilePath'/><parameter type='int' name='flags'/></method><method return='int[]' abstract='true' name='getPackageGids'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.PackageInfo' abstract='true' name='getPackageInfo'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' abstract='true' name='getPackagesForUid'><parameter type='int' name='uid'/></method><method return='android.content.pm.PermissionGroupInfo' abstract='true' name='getPermissionGroupInfo'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.PermissionInfo' abstract='true' name='getPermissionInfo'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='int' abstract='true' name='getPreferredActivities'><parameter type='java.util.List&lt;android.content.IntentFilter&gt;' name='outFilters'/><parameter type='java.util.List&lt;android.content.ComponentName&gt;' name='outActivities'/><parameter type='java.lang.String' name='packageName'/></method><method return='java.util.List&lt;android.content.pm.PackageInfo&gt;' abstract='true' name='getPreferredPackages'><parameter type='int' name='flags'/></method><method return='android.content.pm.ActivityInfo' abstract='true' name='getReceiverInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.res.Resources' abstract='true' name='getResourcesForActivity'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.res.Resources' abstract='true' name='getResourcesForApplication'><parameter type='android.content.pm.ApplicationInfo' name='app'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.res.Resources' abstract='true' name='getResourcesForApplication'><parameter type='java.lang.String' name='appPackageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ServiceInfo' abstract='true' name='getServiceInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.CharSequence' abstract='true' name='getText'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method return='android.content.res.XmlResourceParser' abstract='true' name='getXml'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method abstract='true' api_removed='4' name='installPackage'><parameter type='android.net.Uri' name='packageURI'/><parameter type='android.content.pm.IPackageInstallObserver' name='observer'/><parameter type='int' name='flags'/></method><method api_removed='4' name='installPackage'><parameter type='android.net.Uri' name='packageURI'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' abstract='true' name='queryBroadcastReceivers'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ProviderInfo&gt;' abstract='true' name='queryContentProviders'><parameter type='java.lang.String' name='processName'/><parameter type='int' name='uid'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.InstrumentationInfo&gt;' abstract='true' name='queryInstrumentation'><parameter type='java.lang.String' name='targetPackage'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' abstract='true' name='queryIntentActivities'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' abstract='true' name='queryIntentActivityOptions'><parameter type='android.content.ComponentName' name='caller'/><parameter type='android.content.Intent[]' name='specifics'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' abstract='true' name='queryIntentServices'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.PermissionInfo&gt;' abstract='true' name='queryPermissionsByGroup'><parameter type='java.lang.String' name='group'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method deprecated='7' abstract='true' name='removePackageFromPreferred'><parameter type='java.lang.String' name='packageName'/></method><method abstract='true' name='removePermission'><parameter type='java.lang.String' name='name'/></method><method return='android.content.pm.ResolveInfo' abstract='true' name='resolveActivity'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='android.content.pm.ProviderInfo' abstract='true' name='resolveContentProvider'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/></method><method return='android.content.pm.ResolveInfo' abstract='true' name='resolveService'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method abstract='true' name='setApplicationEnabledSetting'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='newState'/><parameter type='int' name='flags'/></method><method abstract='true' name='setComponentEnabledSetting'><parameter type='android.content.ComponentName' name='componentName'/><parameter type='int' name='newState'/><parameter type='int' name='flags'/></method><method return='android.content.Intent' abstract='true' name='getLaunchIntentForPackage' api_added='3'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' abstract='true' name='getSystemSharedLibraryNames' api_added='3'/><method return='boolean' abstract='true' name='isSafeMode' api_added='3'/><method return='int' abstract='true' name='checkSignatures' api_added='5'><parameter type='int' name='uid1'/><parameter type='int' name='uid2'/></method><method return='java.lang.String' abstract='true' name='getInstallerPackageName' api_added='5'><parameter type='java.lang.String' name='packageName'/></method><method return='android.content.pm.FeatureInfo[]' abstract='true' name='getSystemAvailableFeatures' api_added='5'/><method return='boolean' abstract='true' name='hasSystemFeature' api_added='5'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='addPermissionAsync' api_added='8'><parameter type='android.content.pm.PermissionInfo' name='info'/></method><method return='java.lang.String[]' abstract='true' name='canonicalToCurrentPackageNames' api_added='8'><parameter type='java.lang.String[]' name='names'/></method><method return='java.lang.String[]' abstract='true' name='currentToCanonicalPackageNames' api_added='8'><parameter type='java.lang.String[]' name='names'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getActivityLogo' api_added='9'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getActivityLogo' api_added='9'><parameter type='android.content.Intent' name='intent'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getApplicationLogo' api_added='9'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getApplicationLogo' api_added='9'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ProviderInfo' abstract='true' name='getProviderInfo' api_added='9'><parameter type='android.content.ComponentName' name='component'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method abstract='true' name='setInstallerPackageName' api_added='11'><parameter type='java.lang.String' name='targetPackage'/><parameter type='java.lang.String' name='installerPackageName'/></method><method abstract='true' name='verifyPendingInstall' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='android.util.AndroidException' static='true' name='PackageManager.NameNotFoundException'><constructor type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/><constructor type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='java.lang.Object' name='PackageStats'><constructor type='android.content.pm.PackageStats' name='PackageStats'><parameter type='java.lang.String' name='pkgName'/></constructor><constructor type='android.content.pm.PackageStats' name='PackageStats'><parameter type='android.os.Parcel' name='source'/></constructor><constructor type='android.content.pm.PackageStats' name='PackageStats'><parameter type='android.content.pm.PackageStats' name='pStats'/></constructor><method return='int' name='describeContents'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='android.content.pm.PackageItemInfo' name='PermissionGroupInfo'><constructor type='android.content.pm.PermissionGroupInfo' name='PermissionGroupInfo'/><constructor type='android.content.pm.PermissionGroupInfo' name='PermissionGroupInfo'><parameter type='android.content.pm.PermissionGroupInfo' name='orig'/></constructor><method return='int' name='describeContents'/><method return='java.lang.CharSequence' name='loadDescription'><parameter type='android.content.pm.PackageManager' name='pm'/></method></class><class extends='android.content.pm.PackageItemInfo' name='PermissionInfo'><constructor type='android.content.pm.PermissionInfo' name='PermissionInfo'/><constructor type='android.content.pm.PermissionInfo' name='PermissionInfo'><parameter type='android.content.pm.PermissionInfo' name='orig'/></constructor><method return='int' name='describeContents'/><method return='java.lang.CharSequence' name='loadDescription'><parameter type='android.content.pm.PackageManager' name='pm'/></method></class><class extends='android.content.pm.ComponentInfo' name='ProviderInfo' final='true'><constructor type='android.content.pm.ProviderInfo' name='ProviderInfo'/><constructor type='android.content.pm.ProviderInfo' name='ProviderInfo'><parameter type='android.content.pm.ProviderInfo' name='orig'/></constructor><method return='int' name='describeContents'/></class><class extends='java.lang.Object' name='ResolveInfo'><constructor type='android.content.pm.ResolveInfo' name='ResolveInfo'/><method return='int' name='describeContents'/><method name='dump'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='int' name='getIconResource' final='true'/><method return='android.graphics.drawable.Drawable' name='loadIcon'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='java.lang.Object' static='true' name='ResolveInfo.DisplayNameComparator'><constructor type='android.content.pm.ResolveInfo.DisplayNameComparator' name='ResolveInfo.DisplayNameComparator'><parameter type='android.content.pm.PackageManager' name='pm'/></constructor><method return='int' name='compare' final='true'><parameter type='android.content.pm.ResolveInfo' name='a'/><parameter type='android.content.pm.ResolveInfo' name='b'/></method></class><class extends='android.content.pm.ComponentInfo' name='ServiceInfo'><constructor type='android.content.pm.ServiceInfo' name='ServiceInfo'/><constructor type='android.content.pm.ServiceInfo' name='ServiceInfo'><parameter type='android.content.pm.ServiceInfo' name='orig'/></constructor><method return='int' name='describeContents'/><method name='dump' api_added='5'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method></class><class extends='java.lang.Object' name='Signature'><constructor type='android.content.pm.Signature' name='Signature'><parameter type='byte[]' name='signature'/></constructor><constructor type='android.content.pm.Signature' name='Signature'><parameter type='java.lang.String' name='text'/></constructor><method return='int' name='describeContents'/><method return='byte[]' name='toByteArray'/><method return='char[]' name='toChars'/><method return='char[]' name='toChars'><parameter type='char[]' name='existingArray'/><parameter type='int[]' name='outLen'/></method><method return='java.lang.String' name='toCharsString'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='java.lang.Object' name='ConfigurationInfo' api_added='3'><constructor type='android.content.pm.ConfigurationInfo' name='ConfigurationInfo' api_added='3'/><constructor type='android.content.pm.ConfigurationInfo' name='ConfigurationInfo' api_added='3'><parameter type='android.content.pm.ConfigurationInfo' name='orig'/></constructor><method return='int' name='describeContents' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method><method return='java.lang.String' name='getGlEsVersion' api_added='4'/></class><class extends='android.os.PatternMatcher' name='PathPermission' api_added='4'><constructor type='android.content.pm.PathPermission' name='PathPermission' api_added='4'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='type'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/></constructor><constructor type='android.content.pm.PathPermission' name='PathPermission' api_added='4'><parameter type='android.os.Parcel' name='src'/></constructor><method return='java.lang.String' name='getReadPermission' api_added='4'/><method return='java.lang.String' name='getWritePermission' api_added='4'/></class><class extends='java.lang.Object' name='FeatureInfo' api_added='5'><constructor type='android.content.pm.FeatureInfo' name='FeatureInfo' api_added='5'/><constructor type='android.content.pm.FeatureInfo' name='FeatureInfo' api_added='5'><parameter type='android.content.pm.FeatureInfo' name='orig'/></constructor><method return='int' name='describeContents' api_added='5'/><method return='java.lang.String' name='getGlEsVersion' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='android.content.Intent' name='LabeledIntent' api_added='5'><constructor type='android.content.pm.LabeledIntent' name='LabeledIntent' api_added='5'><parameter type='android.content.Intent' name='origIntent'/><parameter type='java.lang.String' name='sourcePackage'/><parameter type='int' name='labelRes'/><parameter type='int' name='icon'/></constructor><constructor type='android.content.pm.LabeledIntent' name='LabeledIntent' api_added='5'><parameter type='android.content.Intent' name='origIntent'/><parameter type='java.lang.String' name='sourcePackage'/><parameter type='java.lang.CharSequence' name='nonLocalizedLabel'/><parameter type='int' name='icon'/></constructor><constructor type='android.content.pm.LabeledIntent' name='LabeledIntent' api_added='5'><parameter type='java.lang.String' name='sourcePackage'/><parameter type='int' name='labelRes'/><parameter type='int' name='icon'/></constructor><constructor type='android.content.pm.LabeledIntent' name='LabeledIntent' api_added='5'><parameter type='java.lang.String' name='sourcePackage'/><parameter type='java.lang.CharSequence' name='nonLocalizedLabel'/><parameter type='int' name='icon'/></constructor><method return='int' name='getIconResource' api_added='5'/><method return='int' name='getLabelResource' api_added='5'/><method return='java.lang.CharSequence' name='getNonLocalizedLabel' api_added='5'/><method return='java.lang.String' name='getSourcePackage' api_added='5'/><method return='android.graphics.drawable.Drawable' name='loadIcon' api_added='5'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel' api_added='5'><parameter type='android.content.pm.PackageManager' name='pm'/></method></class><interface abstract='true' api_removed='4' name='IPackageInstallObserver'><method abstract='true' api_removed='4' name='packageInstalled'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='returnCode'/><exception type='android.os.RemoteException' name='RemoteException'/></method></interface></package><package name='android.content.res'><class extends='java.lang.Object' name='AssetFileDescriptor'><constructor type='android.content.res.AssetFileDescriptor' name='AssetFileDescriptor'><parameter type='android.os.ParcelFileDescriptor' name='fd'/><parameter type='long' name='startOffset'/><parameter type='long' name='length'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.FileDescriptor' name='getFileDescriptor'/><method return='long' name='getLength'/><method return='android.os.ParcelFileDescriptor' name='getParcelFileDescriptor'/><method return='long' name='getStartOffset'/><method return='java.io.FileInputStream' name='createInputStream' api_added='3'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.FileOutputStream' name='createOutputStream' api_added='3'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='describeContents' api_added='3'/><method return='long' name='getDeclaredLength' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='AssetManager' final='true'><method name='close'/><method return='java.lang.String[]' native='true' name='getLocales' final='true'/><method return='java.lang.String[]' native='true' name='list' final='true'><parameter type='java.lang.String' name='path'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' name='open' final='true'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' name='open' final='true'><parameter type='java.lang.String' name='fileName'/><parameter type='int' name='accessMode'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.res.AssetFileDescriptor' name='openFd' final='true'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.res.AssetFileDescriptor' name='openNonAssetFd' final='true'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.res.AssetFileDescriptor' name='openNonAssetFd' final='true'><parameter type='int' name='cookie'/><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.res.XmlResourceParser' name='openXmlResourceParser' final='true'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.content.res.XmlResourceParser' name='openXmlResourceParser' final='true'><parameter type='int' name='cookie'/><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='AssetManager.AssetInputStream' final='true'><method return='int' name='available' final='true'><exception type='java.io.IOException' name='IOException'/></method><method name='close' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getAssetInt' final='true'/><method name='mark' final='true'><parameter type='int' name='readlimit'/></method><method return='boolean' name='markSupported' final='true'/><method return='int' name='read' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read' final='true'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read' final='true'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='reset' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='skip' final='true'><parameter type='long' name='n'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ColorStateList'><constructor type='android.content.res.ColorStateList' name='ColorStateList'><parameter type='int[][]' name='states'/><parameter type='int[]' name='colors'/></constructor><method return='android.content.res.ColorStateList' static='true' name='createFromXml'><parameter type='android.content.res.Resources' name='r'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='int' name='describeContents'/><method return='int' name='getColorForState'><parameter type='int[]' name='stateSet'/><parameter type='int' name='defaultColor'/></method><method return='int' name='getDefaultColor'/><method return='boolean' name='isStateful'/><method return='android.content.res.ColorStateList' static='true' name='valueOf'><parameter type='int' name='color'/></method><method return='android.content.res.ColorStateList' name='withAlpha'><parameter type='int' name='alpha'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='Configuration' final='true'><constructor type='android.content.res.Configuration' name='Configuration'/><constructor type='android.content.res.Configuration' name='Configuration'><parameter type='android.content.res.Configuration' name='o'/></constructor><method return='int' name='compareTo'><parameter type='android.content.res.Configuration' name='that'/></method><method return='int' name='describeContents'/><method return='int' name='diff'><parameter type='android.content.res.Configuration' name='delta'/></method><method return='boolean' name='equals'><parameter type='android.content.res.Configuration' name='that'/></method><method return='boolean' static='true' name='needNewResources'><parameter type='int' name='configChanges'/><parameter type='int' name='interestingChanges'/></method><method name='setToDefaults'/><method return='int' name='updateFrom'><parameter type='android.content.res.Configuration' name='delta'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method name='readFromParcel' api_added='8'><parameter type='android.os.Parcel' name='source'/></method><method name='setTo' api_added='8'><parameter type='android.content.res.Configuration' name='o'/></method><method return='boolean' name='isLayoutSizeAtLeast' api_added='11'><parameter type='int' name='size'/></method></class><class extends='java.lang.Object' name='Resources'><constructor type='android.content.res.Resources' name='Resources'><parameter type='android.content.res.AssetManager' name='assets'/><parameter type='android.util.DisplayMetrics' name='metrics'/><parameter type='android.content.res.Configuration' name='config'/></constructor><method name='finishPreloading' final='true'/><method name='flushLayoutCache' final='true'/><method return='android.content.res.XmlResourceParser' name='getAnimation'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.AssetManager' name='getAssets' final='true'/><method return='int' name='getColor'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.ColorStateList' name='getColorStateList'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.Configuration' name='getConfiguration'/><method return='float' name='getDimension'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='int' name='getDimensionPixelOffset'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='int' name='getDimensionPixelSize'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.util.DisplayMetrics' name='getDisplayMetrics'/><method return='android.graphics.drawable.Drawable' name='getDrawable'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='int' name='getIdentifier'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='defType'/><parameter type='java.lang.String' name='defPackage'/></method><method return='int[]' name='getIntArray'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='int' name='getInteger'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.XmlResourceParser' name='getLayout'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.graphics.Movie' name='getMovie'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getQuantityString'><parameter type='int' name='id'/><parameter type='int' name='quantity'/><parameter type='java.lang.Object...' name='formatArgs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getQuantityString'><parameter type='int' name='id'/><parameter type='int' name='quantity'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.CharSequence' name='getQuantityText'><parameter type='int' name='id'/><parameter type='int' name='quantity'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getResourceEntryName'><parameter type='int' name='resid'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getResourceName'><parameter type='int' name='resid'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getResourcePackageName'><parameter type='int' name='resid'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getResourceTypeName'><parameter type='int' name='resid'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='id'/><parameter type='java.lang.Object...' name='formatArgs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.String[]' name='getStringArray'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.Resources' static='true' name='getSystem'/><method return='java.lang.CharSequence' name='getText'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.lang.CharSequence' name='getText'><parameter type='int' name='id'/><parameter type='java.lang.CharSequence' name='def'/></method><method return='java.lang.CharSequence[]' name='getTextArray'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method name='getValue'><parameter type='int' name='id'/><parameter type='android.util.TypedValue' name='outValue'/><parameter type='boolean' name='resolveRefs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method name='getValue'><parameter type='java.lang.String' name='name'/><parameter type='android.util.TypedValue' name='outValue'/><parameter type='boolean' name='resolveRefs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.XmlResourceParser' name='getXml'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.Resources.Theme' name='newTheme' final='true'/><method return='android.content.res.TypedArray' name='obtainAttributes'><parameter type='android.util.AttributeSet' name='set'/><parameter type='int[]' name='attrs'/></method><method return='android.content.res.TypedArray' name='obtainTypedArray'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='java.io.InputStream' name='openRawResource'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.AssetFileDescriptor' name='openRawResourceFd'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method name='updateConfiguration'><parameter type='android.content.res.Configuration' name='config'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='boolean' name='getBoolean' api_added='3'><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='float' name='getFraction' api_added='3'><parameter type='int' name='id'/><parameter type='int' name='base'/><parameter type='int' name='pbase'/></method><method return='java.io.InputStream' name='openRawResource' api_added='3'><parameter type='int' name='id'/><parameter type='android.util.TypedValue' name='value'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method name='parseBundleExtra' api_added='3'><parameter type='java.lang.String' name='tagName'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='android.os.Bundle' name='outBundle'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method name='parseBundleExtras' api_added='3'><parameter type='android.content.res.XmlResourceParser' name='parser'/><parameter type='android.os.Bundle' name='outBundle'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='android.graphics.drawable.Drawable' name='getDrawableForDensity' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method name='getValueForDensity' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.util.TypedValue' name='arg2'/><parameter type='boolean' name='arg3'/></method></class><class extends='java.lang.RuntimeException' static='true' name='Resources.NotFoundException'><constructor type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/><constructor type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='java.lang.Object' name='Resources.Theme' final='true'><method name='applyStyle'><parameter type='int' name='resid'/><parameter type='boolean' name='force'/></method><method name='dump'><parameter type='int' name='priority'/><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes'><parameter type='int[]' name='attrs'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes'><parameter type='int' name='resid'/><parameter type='int[]' name='attrs'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.content.res.TypedArray' name='obtainStyledAttributes'><parameter type='android.util.AttributeSet' name='set'/><parameter type='int[]' name='attrs'/><parameter type='int' name='defStyleAttr'/><parameter type='int' name='defStyleRes'/></method><method return='boolean' name='resolveAttribute'><parameter type='int' name='resid'/><parameter type='android.util.TypedValue' name='outValue'/><parameter type='boolean' name='resolveRefs'/></method><method name='setTo'><parameter type='android.content.res.Resources.Theme' name='other'/></method></class><class extends='java.lang.Object' name='TypedArray'><method return='boolean' name='getBoolean'><parameter type='int' name='index'/><parameter type='boolean' name='defValue'/></method><method return='int' name='getColor'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='android.content.res.ColorStateList' name='getColorStateList'><parameter type='int' name='index'/></method><method return='float' name='getDimension'><parameter type='int' name='index'/><parameter type='float' name='defValue'/></method><method return='int' name='getDimensionPixelOffset'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='int' name='getDimensionPixelSize'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='android.graphics.drawable.Drawable' name='getDrawable'><parameter type='int' name='index'/></method><method return='float' name='getFloat'><parameter type='int' name='index'/><parameter type='float' name='defValue'/></method><method return='float' name='getFraction'><parameter type='int' name='index'/><parameter type='int' name='base'/><parameter type='int' name='pbase'/><parameter type='float' name='defValue'/></method><method return='int' name='getIndex'><parameter type='int' name='at'/></method><method return='int' name='getIndexCount'/><method return='int' name='getInt'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='int' name='getInteger'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='int' name='getLayoutDimension'><parameter type='int' name='index'/><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getNonResourceString'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getPositionDescription'/><method return='int' name='getResourceId'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method><method return='android.content.res.Resources' name='getResources'/><method return='java.lang.String' name='getString'><parameter type='int' name='index'/></method><method return='java.lang.CharSequence' name='getText'><parameter type='int' name='index'/></method><method return='java.lang.CharSequence[]' name='getTextArray'><parameter type='int' name='index'/></method><method return='boolean' name='getValue'><parameter type='int' name='index'/><parameter type='android.util.TypedValue' name='outValue'/></method><method return='boolean' name='hasValue'><parameter type='int' name='index'/></method><method return='int' name='length'/><method return='android.util.TypedValue' name='peekValue'><parameter type='int' name='index'/></method><method name='recycle'/><method return='int' name='getLayoutDimension' api_added='3'><parameter type='int' name='index'/><parameter type='int' name='defValue'/></method></class><class extends='android.os.ParcelFileDescriptor.AutoCloseInputStream' static='true' name='AssetFileDescriptor.AutoCloseInputStream' api_added='3'><constructor type='android.content.res.AssetFileDescriptor.AutoCloseInputStream' name='AssetFileDescriptor.AutoCloseInputStream' api_added='3'><parameter type='android.content.res.AssetFileDescriptor' name='fd'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='android.os.ParcelFileDescriptor.AutoCloseOutputStream' static='true' name='AssetFileDescriptor.AutoCloseOutputStream' api_added='3'><constructor type='android.content.res.AssetFileDescriptor.AutoCloseOutputStream' name='AssetFileDescriptor.AutoCloseOutputStream' api_added='3'><parameter type='android.content.res.AssetFileDescriptor' name='fd'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.lang.Object' name='ObbInfo' api_added='9'><method return='int' name='describeContents' api_added='9'/><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method></class><class extends='java.lang.Object' name='ObbScanner' api_added='9'><method return='android.content.res.ObbInfo' static='true' name='getObbInfo' api_added='9'><parameter type='java.lang.String' name='filePath'/><exception type='java.io.IOException' name='IOException'/></method></class><interface abstract='true' name='XmlResourceParser'><method abstract='true' name='close'/></interface></package><package name='android.database'><class extends='java.lang.Object' abstract='true' name='AbstractCursor'><constructor type='android.database.AbstractCursor' name='AbstractCursor'/><method visibility='protected' name='checkPosition'/><method name='close'/><method name='copyStringToBuffer'><parameter type='int' name='columnIndex'/><parameter type='android.database.CharArrayBuffer' name='buffer'/></method><method name='deactivate'/><method name='fillWindow'><parameter type='int' name='position'/><parameter type='android.database.CursorWindow' name='window'/></method><method return='byte[]' name='getBlob'><parameter type='int' name='column'/></method><method return='int' name='getColumnCount'/><method return='int' name='getColumnIndex'><parameter type='java.lang.String' name='columnName'/></method><method return='int' name='getColumnIndexOrThrow'><parameter type='java.lang.String' name='columnName'/></method><method return='java.lang.String' name='getColumnName'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String[]' abstract='true' name='getColumnNames'/><method return='int' abstract='true' name='getCount'/><method return='double' abstract='true' name='getDouble'><parameter type='int' name='column'/></method><method return='android.os.Bundle' name='getExtras'/><method return='float' abstract='true' name='getFloat'><parameter type='int' name='column'/></method><method return='int' abstract='true' name='getInt'><parameter type='int' name='column'/></method><method return='long' abstract='true' name='getLong'><parameter type='int' name='column'/></method><method return='int' name='getPosition' final='true'/><method return='short' abstract='true' name='getShort'><parameter type='int' name='column'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='int' name='column'/></method><method visibility='protected' deprecated='11' return='java.lang.Object' name='getUpdatedField'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='getWantsAllOnMoveCalls'/><method return='android.database.CursorWindow' name='getWindow'/><method return='boolean' name='isAfterLast' final='true'/><method return='boolean' name='isBeforeFirst' final='true'/><method return='boolean' name='isClosed'/><method visibility='protected' deprecated='11' return='boolean' name='isFieldUpdated'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='isFirst' final='true'/><method return='boolean' name='isLast' final='true'/><method return='boolean' abstract='true' name='isNull'><parameter type='int' name='column'/></method><method return='boolean' name='move' final='true'><parameter type='int' name='offset'/></method><method return='boolean' name='moveToFirst' final='true'/><method return='boolean' name='moveToLast' final='true'/><method return='boolean' name='moveToNext' final='true'/><method return='boolean' name='moveToPosition' final='true'><parameter type='int' name='position'/></method><method return='boolean' name='moveToPrevious' final='true'/><method visibility='protected' name='onChange'><parameter type='boolean' name='selfChange'/></method><method return='boolean' name='onMove'><parameter type='int' name='oldPosition'/><parameter type='int' name='newPosition'/></method><method name='registerContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='boolean' name='requery'/><method return='android.os.Bundle' name='respond'><parameter type='android.os.Bundle' name='extras'/></method><method name='setNotificationUri'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='notifyUri'/></method><method name='unregisterContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='android.net.Uri' name='getNotificationUri' api_added='11'/><method return='int' name='getType' api_added='11'><parameter type='int' name='column'/></method></class><class visibility='protected' extends='android.database.ContentObserver' static='true' name='AbstractCursor.SelfContentObserver'><constructor type='android.database.AbstractCursor.SelfContentObserver' name='AbstractCursor.SelfContentObserver'><parameter type='android.database.AbstractCursor' name='cursor'/></constructor></class><class extends='android.database.AbstractCursor' abstract='true' name='AbstractWindowedCursor'><constructor type='android.database.AbstractWindowedCursor' name='AbstractWindowedCursor'/><method return='double' name='getDouble'><parameter type='int' name='columnIndex'/></method><method return='float' name='getFloat'><parameter type='int' name='columnIndex'/></method><method return='int' name='getInt'><parameter type='int' name='columnIndex'/></method><method return='long' name='getLong'><parameter type='int' name='columnIndex'/></method><method return='short' name='getShort'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='hasWindow'/><method deprecated='11' return='boolean' name='isBlob'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='isNull'><parameter type='int' name='columnIndex'/></method><method name='setWindow'><parameter type='android.database.CursorWindow' name='window'/></method><method deprecated='11' return='boolean' name='isFloat' api_added='5'><parameter type='int' name='columnIndex'/></method><method deprecated='11' return='boolean' name='isLong' api_added='5'><parameter type='int' name='columnIndex'/></method><method deprecated='11' return='boolean' name='isString' api_added='5'><parameter type='int' name='columnIndex'/></method></class><class extends='java.lang.Object' name='CharArrayBuffer' final='true'><constructor type='android.database.CharArrayBuffer' name='CharArrayBuffer'><parameter type='int' name='size'/></constructor><constructor type='android.database.CharArrayBuffer' name='CharArrayBuffer'><parameter type='char[]' name='buf'/></constructor></class><class extends='android.database.Observable' name='ContentObservable'><constructor type='android.database.ContentObservable' name='ContentObservable'/><method deprecated='16' name='dispatchChange'><parameter type='boolean' name='selfChange'/></method><method deprecated='16' name='notifyChange'><parameter type='boolean' name='selfChange'/></method><method name='registerObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='dispatchChange' api_added='16'><parameter type='boolean' name='arg0'/><parameter type='android.net.Uri' name='arg1'/></method></class><class extends='java.lang.Object' abstract='true' name='ContentObserver'><constructor type='android.database.ContentObserver' name='ContentObserver'><parameter type='android.os.Handler' name='handler'/></constructor><method return='boolean' name='deliverSelfNotifications'/><method deprecated='16' name='dispatchChange' final='true'><parameter type='boolean' name='selfChange'/></method><method name='onChange'><parameter type='boolean' name='selfChange'/></method><method name='dispatchChange' api_added='16' final='true'><parameter type='boolean' name='arg0'/><parameter type='android.net.Uri' name='arg1'/></method><method name='onChange' api_added='16'><parameter type='boolean' name='arg0'/><parameter type='android.net.Uri' name='arg1'/></method></class><class extends='java.lang.IndexOutOfBoundsException' name='CursorIndexOutOfBoundsException'><constructor type='android.database.CursorIndexOutOfBoundsException' name='CursorIndexOutOfBoundsException'><parameter type='int' name='index'/><parameter type='int' name='size'/></constructor><constructor type='android.database.CursorIndexOutOfBoundsException' name='CursorIndexOutOfBoundsException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='CursorJoiner' final='true'><constructor type='android.database.CursorJoiner' name='CursorJoiner'><parameter type='android.database.Cursor' name='cursorLeft'/><parameter type='java.lang.String[]' name='columnNamesLeft'/><parameter type='android.database.Cursor' name='cursorRight'/><parameter type='java.lang.String[]' name='columnNamesRight'/></constructor><method return='boolean' name='hasNext'/><method return='java.util.Iterator&lt;android.database.CursorJoiner.Result&gt;' name='iterator'/><method return='android.database.CursorJoiner.Result' name='next'/><method name='remove'/></class><class extends='java.lang.Enum' static='true' name='CursorJoiner.Result' final='true'><method return='android.database.CursorJoiner.Result' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.database.CursorJoiner.Result[]' static='true' name='values' final='true'/></class><class extends='android.database.sqlite.SQLiteClosable' name='CursorWindow'><constructor type='android.database.CursorWindow' name='CursorWindow'><parameter type='boolean' name='localWindow'/></constructor><constructor type='android.database.deprecated CursorWindow' name='deprecated CursorWindow' api_added='15'><parameter type='boolean' name='arg0'/></constructor><method return='boolean' name='allocRow'/><method name='clear'/><method api_removed='16' name='close'/><method name='copyStringToBuffer'><parameter type='int' name='row'/><parameter type='int' name='col'/><parameter type='android.database.CharArrayBuffer' name='buffer'/></method><method return='int' name='describeContents'/><method name='freeLastRow'/><method return='byte[]' name='getBlob'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='double' name='getDouble'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='float' name='getFloat'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='int' name='getInt'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='long' name='getLong'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='int' name='getNumRows'/><method return='short' name='getShort'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='int' name='getStartPosition'/><method return='java.lang.String' name='getString'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method deprecated='11' return='boolean' name='isBlob'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method deprecated='11' return='boolean' name='isNull'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='android.database.CursorWindow' static='true' name='newFromParcel'><parameter type='android.os.Parcel' name='p'/></method><method visibility='protected' name='onAllReferencesReleased'/><method return='boolean' name='putBlob'><parameter type='byte[]' name='value'/><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='boolean' name='putDouble'><parameter type='double' name='value'/><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='boolean' name='putLong'><parameter type='long' name='value'/><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='boolean' name='putNull'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='boolean' name='putString'><parameter type='java.lang.String' name='value'/><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='boolean' name='setNumColumns'><parameter type='int' name='columnNum'/></method><method name='setStartPosition'><parameter type='int' name='pos'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method deprecated='11' return='boolean' name='isFloat' api_added='5'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method deprecated='11' return='boolean' name='isLong' api_added='5'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method deprecated='11' return='boolean' name='isString' api_added='5'><parameter type='int' name='row'/><parameter type='int' name='col'/></method><method return='int' name='getType' api_added='11'><parameter type='int' name='row'/><parameter type='int' name='col'/></method></class><class extends='java.lang.Object' name='CursorWrapper'><constructor type='android.database.CursorWrapper' name='CursorWrapper'><parameter type='android.database.Cursor' name='cursor'/></constructor><method name='close'/><method name='copyStringToBuffer'><parameter type='int' name='columnIndex'/><parameter type='android.database.CharArrayBuffer' name='buffer'/></method><method name='deactivate'/><method return='byte[]' name='getBlob'><parameter type='int' name='columnIndex'/></method><method return='int' name='getColumnCount'/><method deprecated='2' return='int' name='getColumnIndex'><parameter type='java.lang.String' name='columnName'/></method><method return='int' name='getColumnIndexOrThrow'><parameter type='java.lang.String' name='columnName'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.String' name='getColumnName'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String[]' name='getColumnNames'/><method return='int' name='getCount'/><method return='double' name='getDouble'><parameter type='int' name='columnIndex'/></method><method return='android.os.Bundle' name='getExtras'/><method return='float' name='getFloat'><parameter type='int' name='columnIndex'/></method><method return='int' name='getInt'><parameter type='int' name='columnIndex'/></method><method return='long' name='getLong'><parameter type='int' name='columnIndex'/></method><method return='int' name='getPosition'/><method return='short' name='getShort'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='getWantsAllOnMoveCalls'/><method return='boolean' name='isAfterLast'/><method return='boolean' name='isBeforeFirst'/><method return='boolean' name='isClosed'/><method return='boolean' name='isFirst'/><method return='boolean' name='isLast'/><method return='boolean' name='isNull'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='move'><parameter type='int' name='offset'/></method><method return='boolean' name='moveToFirst'/><method return='boolean' name='moveToLast'/><method return='boolean' name='moveToNext'/><method return='boolean' name='moveToPosition'><parameter type='int' name='position'/></method><method return='boolean' name='moveToPrevious'/><method name='registerContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='boolean' name='requery'/><method return='android.os.Bundle' name='respond'><parameter type='android.os.Bundle' name='extras'/></method><method name='setNotificationUri'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/></method><method name='unregisterContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='int' name='getType' api_added='11'><parameter type='int' name='columnIndex'/></method><method return='android.database.Cursor' name='getWrappedCursor' api_added='11'/></class><class extends='android.database.Observable' name='DataSetObservable'><constructor type='android.database.DataSetObservable' name='DataSetObservable'/><method name='notifyChanged'/><method name='notifyInvalidated'/></class><class extends='java.lang.Object' abstract='true' name='DataSetObserver'><constructor type='android.database.DataSetObserver' name='DataSetObserver'/><method name='onChanged'/><method name='onInvalidated'/></class><class extends='java.lang.Object' name='DatabaseUtils'><constructor type='android.database.DatabaseUtils' name='DatabaseUtils'/><method deprecated='2' static='true' name='appendEscapedSQLString'><parameter type='java.lang.StringBuilder' name='sb'/><parameter type='java.lang.String' name='sqlString'/></method><method static='true' name='appendValueToSql' final='true'><parameter type='java.lang.StringBuilder' name='sql'/><parameter type='java.lang.Object' name='value'/></method><method static='true' name='bindObjectToProgram'><parameter type='android.database.sqlite.SQLiteProgram' name='prog'/><parameter type='int' name='index'/><parameter type='java.lang.Object' name='value'/></method><method static='true' name='createDbFromSqlStatements'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='dbName'/><parameter type='int' name='dbVersion'/><parameter type='java.lang.String' name='sqlStatements'/></method><method static='true' name='cursorDoubleToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='key'/></method><method static='true' name='cursorDoubleToCursorValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/></method><method static='true' name='cursorIntToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/></method><method static='true' name='cursorIntToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='key'/></method><method static='true' name='cursorLongToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/></method><method static='true' name='cursorLongToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='key'/></method><method static='true' name='cursorRowToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/></method><method static='true' name='cursorStringToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/></method><method static='true' name='cursorStringToContentValues'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='key'/></method><method static='true' name='cursorStringToInsertHelper'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.String' name='field'/><parameter type='android.database.DatabaseUtils.InsertHelper' name='inserter'/><parameter type='int' name='index'/></method><method static='true' name='dumpCurrentRow'><parameter type='android.database.Cursor' name='cursor'/></method><method static='true' name='dumpCurrentRow'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.io.PrintStream' name='stream'/></method><method static='true' name='dumpCurrentRow'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.StringBuilder' name='sb'/></method><method return='java.lang.String' static='true' name='dumpCurrentRowToString'><parameter type='android.database.Cursor' name='cursor'/></method><method static='true' name='dumpCursor'><parameter type='android.database.Cursor' name='cursor'/></method><method static='true' name='dumpCursor'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.io.PrintStream' name='stream'/></method><method static='true' name='dumpCursor'><parameter type='android.database.Cursor' name='cursor'/><parameter type='java.lang.StringBuilder' name='sb'/></method><method return='java.lang.String' static='true' name='dumpCursorToString'><parameter type='android.database.Cursor' name='cursor'/></method><method return='java.lang.String' static='true' name='getCollationKey'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' static='true' name='getHexCollationKey'><parameter type='java.lang.String' name='name'/></method><method return='long' static='true' name='longForQuery'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='long' static='true' name='longForQuery'><parameter type='android.database.sqlite.SQLiteStatement' name='prog'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='long' static='true' name='queryNumEntries'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='table'/></method><method static='true' name='readExceptionFromParcel' final='true'><parameter type='android.os.Parcel' name='reply'/></method><method static='true' name='readExceptionWithFileNotFoundExceptionFromParcel'><parameter type='android.os.Parcel' name='reply'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.lang.String' static='true' name='sqlEscapeString'><parameter type='java.lang.String' name='value'/></method><method return='java.lang.String' static='true' name='stringForQuery'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='java.lang.String' static='true' name='stringForQuery'><parameter type='android.database.sqlite.SQLiteStatement' name='prog'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method static='true' name='writeExceptionToParcel' final='true'><parameter type='android.os.Parcel' name='reply'/><parameter type='java.lang.Exception' name='e'/></method><method static='true' name='readExceptionWithOperationApplicationExceptionFromParcel' api_added='5'><parameter type='android.os.Parcel' name='reply'/><exception type='android.content.OperationApplicationException' name='OperationApplicationException'/></method><method static='true' name='cursorDoubleToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method static='true' name='cursorFloatToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method static='true' name='cursorIntToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method static='true' name='cursorLongToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method static='true' name='cursorShortToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method static='true' name='cursorStringToContentValuesIfPresent' api_added='8'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='column'/></method><method return='java.lang.String[]' static='true' name='appendSelectionArgs' api_added='11'><parameter type='java.lang.String[]' name='originalValues'/><parameter type='java.lang.String[]' name='newValues'/></method><method return='android.os.ParcelFileDescriptor' static='true' name='blobFileDescriptorForQuery' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='android.os.ParcelFileDescriptor' static='true' name='blobFileDescriptorForQuery' api_added='11'><parameter type='android.database.sqlite.SQLiteStatement' name='prog'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='java.lang.String' static='true' name='concatenateWhere' api_added='11'><parameter type='java.lang.String' name='a'/><parameter type='java.lang.String' name='b'/></method><method return='int' static='true' name='getSqlStatementType' api_added='11'><parameter type='java.lang.String' name='sql'/></method><method return='long' static='true' name='queryNumEntries' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='selection'/></method><method return='long' static='true' name='queryNumEntries' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method></class><class extends='java.lang.Object' static='true' name='DatabaseUtils.InsertHelper'><constructor type='android.database.DatabaseUtils.InsertHelper' name='DatabaseUtils.InsertHelper'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String' name='tableName'/></constructor><method name='bind'><parameter type='int' name='index'/><parameter type='double' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='float' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='long' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='int' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='boolean' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='byte[]' name='value'/></method><method name='bind'><parameter type='int' name='index'/><parameter type='java.lang.String' name='value'/></method><method name='bindNull'><parameter type='int' name='index'/></method><method name='close'/><method return='long' name='execute'/><method return='int' name='getColumnIndex'><parameter type='java.lang.String' name='key'/></method><method return='long' name='insert'><parameter type='android.content.ContentValues' name='values'/></method><method name='prepareForInsert'/><method name='prepareForReplace'/><method return='long' name='replace'><parameter type='android.content.ContentValues' name='values'/></method></class><class extends='android.database.AbstractCursor' name='MatrixCursor'><constructor type='android.database.MatrixCursor' name='MatrixCursor'><parameter type='java.lang.String[]' name='columnNames'/><parameter type='int' name='initialCapacity'/></constructor><constructor type='android.database.MatrixCursor' name='MatrixCursor'><parameter type='java.lang.String[]' name='columnNames'/></constructor><method name='addRow'><parameter type='java.lang.Object[]' name='columnValues'/></method><method name='addRow'><parameter type='java.lang.Iterable&lt;?&gt;' name='columnValues'/></method><method return='java.lang.String[]' name='getColumnNames'/><method return='int' name='getCount'/><method return='double' name='getDouble'><parameter type='int' name='column'/></method><method return='float' name='getFloat'><parameter type='int' name='column'/></method><method return='int' name='getInt'><parameter type='int' name='column'/></method><method return='long' name='getLong'><parameter type='int' name='column'/></method><method return='short' name='getShort'><parameter type='int' name='column'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='column'/></method><method return='boolean' name='isNull'><parameter type='int' name='column'/></method><method return='android.database.MatrixCursor.RowBuilder' name='newRow'/></class><class extends='java.lang.Object' name='MatrixCursor.RowBuilder'><method return='android.database.MatrixCursor.RowBuilder' name='add'><parameter type='java.lang.Object' name='columnValue'/></method></class><class extends='android.database.AbstractCursor' name='MergeCursor'><constructor type='android.database.MergeCursor' name='MergeCursor'><parameter type='android.database.Cursor[]' name='cursors'/></constructor><method return='java.lang.String[]' name='getColumnNames'/><method return='int' name='getCount'/><method return='double' name='getDouble'><parameter type='int' name='column'/></method><method return='float' name='getFloat'><parameter type='int' name='column'/></method><method return='int' name='getInt'><parameter type='int' name='column'/></method><method return='long' name='getLong'><parameter type='int' name='column'/></method><method return='short' name='getShort'><parameter type='int' name='column'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='column'/></method><method return='boolean' name='isNull'><parameter type='int' name='column'/></method></class><class extends='java.lang.Object' abstract='true' name='Observable'><constructor type='android.database.Observable' name='Observable'/><method name='registerObserver'><parameter type='T' name='observer'/></method><method name='unregisterAll'/><method name='unregisterObserver'><parameter type='T' name='observer'/></method></class><class extends='java.lang.RuntimeException' name='SQLException'><constructor type='android.database.SQLException' name='SQLException'/><constructor type='android.database.SQLException' name='SQLException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='java.lang.RuntimeException' name='StaleDataException'><constructor type='android.database.StaleDataException' name='StaleDataException'/><constructor type='android.database.StaleDataException' name='StaleDataException'><parameter type='java.lang.String' name='description'/></constructor></class><class extends='java.lang.Object' name='DefaultDatabaseErrorHandler' api_added='11' final='true'><constructor type='android.database.DefaultDatabaseErrorHandler' name='DefaultDatabaseErrorHandler' api_added='11'/><method name='onCorruption' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='dbObj'/></method></class><class extends='android.database.CursorWrapper' name='CrossProcessCursorWrapper' api_added='15'><constructor type='android.database.CrossProcessCursorWrapper' name='CrossProcessCursorWrapper' api_added='15'><parameter type='android.database.Cursor' name='arg0'/></constructor><method name='fillWindow' api_added='15'><parameter type='int' name='arg0'/><parameter type='android.database.CursorWindow' name='arg1'/></method><method return='android.database.CursorWindow' name='getWindow' api_added='15'/><method return='boolean' name='onMove' api_added='15'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><interface abstract='true' name='CrossProcessCursor'><method abstract='true' name='fillWindow'><parameter type='int' name='pos'/><parameter type='android.database.CursorWindow' name='winow'/></method><method return='android.database.CursorWindow' abstract='true' name='getWindow'/><method return='boolean' abstract='true' name='onMove'><parameter type='int' name='oldPosition'/><parameter type='int' name='newPosition'/></method></interface><interface abstract='true' name='Cursor'><method abstract='true' name='close'/><method abstract='true' name='copyStringToBuffer'><parameter type='int' name='columnIndex'/><parameter type='android.database.CharArrayBuffer' name='buffer'/></method><method deprecated='16' abstract='true' name='deactivate'/><method return='byte[]' abstract='true' name='getBlob'><parameter type='int' name='columnIndex'/></method><method return='int' abstract='true' name='getColumnCount'/><method deprecated='2' return='int' abstract='true' name='getColumnIndex'><parameter type='java.lang.String' name='columnName'/></method><method return='int' abstract='true' name='getColumnIndexOrThrow'><parameter type='java.lang.String' name='columnName'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.String' abstract='true' name='getColumnName'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String[]' abstract='true' name='getColumnNames'/><method return='int' abstract='true' name='getCount'/><method return='double' abstract='true' name='getDouble'><parameter type='int' name='columnIndex'/></method><method return='android.os.Bundle' abstract='true' name='getExtras'/><method return='float' abstract='true' name='getFloat'><parameter type='int' name='columnIndex'/></method><method return='int' abstract='true' name='getInt'><parameter type='int' name='columnIndex'/></method><method return='long' abstract='true' name='getLong'><parameter type='int' name='columnIndex'/></method><method return='int' abstract='true' name='getPosition'/><method return='short' abstract='true' name='getShort'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='int' name='columnIndex'/></method><method return='boolean' abstract='true' name='getWantsAllOnMoveCalls'/><method return='boolean' abstract='true' name='isAfterLast'/><method return='boolean' abstract='true' name='isBeforeFirst'/><method return='boolean' abstract='true' name='isClosed'/><method return='boolean' abstract='true' name='isFirst'/><method return='boolean' abstract='true' name='isLast'/><method return='boolean' abstract='true' name='isNull'><parameter type='int' name='columnIndex'/></method><method return='boolean' abstract='true' name='move'><parameter type='int' name='offset'/></method><method return='boolean' abstract='true' name='moveToFirst'/><method return='boolean' abstract='true' name='moveToLast'/><method return='boolean' abstract='true' name='moveToNext'/><method return='boolean' abstract='true' name='moveToPosition'><parameter type='int' name='position'/></method><method return='boolean' abstract='true' name='moveToPrevious'/><method abstract='true' name='registerContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method abstract='true' name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method deprecated='11' return='boolean' abstract='true' name='requery'/><method return='android.os.Bundle' abstract='true' name='respond'><parameter type='android.os.Bundle' name='extras'/></method><method abstract='true' name='setNotificationUri'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/></method><method abstract='true' name='unregisterContentObserver'><parameter type='android.database.ContentObserver' name='observer'/></method><method abstract='true' name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='int' abstract='true' name='getType' api_added='11'><parameter type='int' name='columnIndex'/></method></interface><interface abstract='true' name='DatabaseErrorHandler' api_added='11'><method abstract='true' name='onCorruption' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='dbObj'/></method></interface></package><package name='android.database.sqlite'><class extends='android.database.sqlite.SQLiteException' name='SQLiteAbortException'><constructor type='android.database.sqlite.SQLiteAbortException' name='SQLiteAbortException'/><constructor type='android.database.sqlite.SQLiteAbortException' name='SQLiteAbortException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SQLiteClosable'><constructor type='android.database.sqlite.SQLiteClosable' name='SQLiteClosable'/><method name='acquireReference'/><method visibility='protected' abstract='true' name='onAllReferencesReleased'/><method visibility='protected' deprecated='16' name='onAllReferencesReleasedFromContainer'/><method name='releaseReference'/><method deprecated='16' name='releaseReferenceFromContainer'/><method name='close' api_added='16'/></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteConstraintException'><constructor type='android.database.sqlite.SQLiteConstraintException' name='SQLiteConstraintException'/><constructor type='android.database.sqlite.SQLiteConstraintException' name='SQLiteConstraintException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.AbstractWindowedCursor' name='SQLiteCursor'><constructor deprecated='11' type='android.database.sqlite.SQLiteCursor' name='SQLiteCursor'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='android.database.sqlite.SQLiteCursorDriver' name='driver'/><parameter type='java.lang.String' name='editTable'/><parameter type='android.database.sqlite.SQLiteQuery' name='query'/></constructor><constructor type='android.database.sqlite.deprecated SQLiteCursor' name='deprecated SQLiteCursor' api_added='14'><parameter type='android.database.sqlite.SQLiteDatabase' name='arg0'/><parameter type='android.database.sqlite.SQLiteCursorDriver' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='android.database.sqlite.SQLiteQuery' name='arg3'/></constructor><method return='java.lang.String[]' name='getColumnNames'/><method return='int' name='getCount'/><method return='android.database.sqlite.SQLiteDatabase' name='getDatabase'/><method name='setSelectionArguments'><parameter type='java.lang.String[]' name='selectionArgs'/></method></class><class extends='android.database.sqlite.SQLiteClosable' name='SQLiteDatabase'><method name='beginTransaction'/><method api_removed='16' name='close'/><method return='android.database.sqlite.SQLiteStatement' name='compileStatement'><parameter type='java.lang.String' name='sql'/><exception type='android.database.SQLException' name='SQLException'/></method><method return='android.database.sqlite.SQLiteDatabase' static='true' name='create'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method return='int' name='delete'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='whereClause'/><parameter type='java.lang.String[]' name='whereArgs'/></method><method name='endTransaction'/><method name='execSQL'><parameter type='java.lang.String' name='sql'/><exception type='android.database.SQLException' name='SQLException'/></method><method name='execSQL'><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.Object[]' name='bindArgs'/><exception type='android.database.SQLException' name='SQLException'/></method><method return='java.lang.String' static='true' name='findEditTable'><parameter type='java.lang.String' name='tables'/></method><method return='long' name='getMaximumSize'/><method return='long' name='getPageSize'/><method return='java.lang.String' name='getPath' final='true'/><method deprecated='11' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='getSyncedTables'/><method return='int' name='getVersion'/><method return='boolean' name='inTransaction'/><method return='long' name='insert'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='nullColumnHack'/><parameter type='android.content.ContentValues' name='values'/></method><method return='long' name='insertOrThrow'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='nullColumnHack'/><parameter type='android.content.ContentValues' name='values'/><exception type='android.database.SQLException' name='SQLException'/></method><method return='boolean' name='isDbLockedByCurrentThread'/><method deprecated='16' return='boolean' name='isDbLockedByOtherThreads'/><method return='boolean' name='isOpen'/><method return='boolean' name='isReadOnly'/><method deprecated='11' name='markTableSyncable'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='deletedTable'/></method><method deprecated='11' name='markTableSyncable'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='foreignKey'/><parameter type='java.lang.String' name='updateTable'/></method><method return='boolean' name='needUpgrade'><parameter type='int' name='newVersion'/></method><method visibility='protected' name='onAllReferencesReleased'/><method return='android.database.sqlite.SQLiteDatabase' static='true' name='openDatabase'><parameter type='java.lang.String' name='path'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='int' name='flags'/></method><method return='android.database.sqlite.SQLiteDatabase' static='true' name='openOrCreateDatabase'><parameter type='java.io.File' name='file'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method return='android.database.sqlite.SQLiteDatabase' static='true' name='openOrCreateDatabase'><parameter type='java.lang.String' name='path'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method return='android.database.Cursor' name='query'><parameter type='boolean' name='distinct'/><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String[]' name='columns'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='orderBy'/><parameter type='java.lang.String' name='limit'/></method><method return='android.database.Cursor' name='query'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String[]' name='columns'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='orderBy'/></method><method return='android.database.Cursor' name='query'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String[]' name='columns'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='orderBy'/><parameter type='java.lang.String' name='limit'/></method><method return='android.database.Cursor' name='queryWithFactory'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='cursorFactory'/><parameter type='boolean' name='distinct'/><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String[]' name='columns'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='orderBy'/><parameter type='java.lang.String' name='limit'/></method><method return='android.database.Cursor' name='rawQuery'><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='android.database.Cursor' name='rawQueryWithFactory'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='cursorFactory'/><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='editTable'/></method><method return='int' native='true' static='true' name='releaseMemory'/><method return='long' name='replace'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='nullColumnHack'/><parameter type='android.content.ContentValues' name='initialValues'/></method><method return='long' name='replaceOrThrow'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='nullColumnHack'/><parameter type='android.content.ContentValues' name='initialValues'/><exception type='android.database.SQLException' name='SQLException'/></method><method name='setLocale'><parameter type='java.util.Locale' name='locale'/></method><method deprecated='16' name='setLockingEnabled'><parameter type='boolean' name='lockingEnabled'/></method><method return='long' name='setMaximumSize'><parameter type='long' name='numBytes'/></method><method name='setPageSize'><parameter type='long' name='numBytes'/></method><method name='setTransactionSuccessful'/><method name='setVersion'><parameter type='int' name='version'/></method><method return='int' name='update'><parameter type='java.lang.String' name='table'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='whereClause'/><parameter type='java.lang.String[]' name='whereArgs'/></method><method deprecated='3' return='boolean' name='yieldIfContended'/><method return='boolean' name='yieldIfContendedSafely' api_added='3'/><method name='beginTransactionWithListener' api_added='5'><parameter type='android.database.sqlite.SQLiteTransactionListener' name='transactionListener'/></method><method return='boolean' name='yieldIfContendedSafely' api_added='5'><parameter type='long' name='sleepAfterYieldDelay'/></method><method return='long' name='insertWithOnConflict' api_added='8'><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='nullColumnHack'/><parameter type='android.content.ContentValues' name='initialValues'/><parameter type='int' name='conflictAlgorithm'/></method><method return='int' name='updateWithOnConflict' api_added='8'><parameter type='java.lang.String' name='table'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='whereClause'/><parameter type='java.lang.String[]' name='whereArgs'/><parameter type='int' name='conflictAlgorithm'/></method><method name='beginTransactionNonExclusive' api_added='11'/><method name='beginTransactionWithListenerNonExclusive' api_added='11'><parameter type='android.database.sqlite.SQLiteTransactionListener' name='transactionListener'/></method><method return='boolean' name='enableWriteAheadLogging' api_added='11'/><method return='java.util.List&lt;android.util.Pair&lt;java.lang.String, java.lang.String&gt;&gt;' name='getAttachedDbs' api_added='11'/><method return='boolean' name='isDatabaseIntegrityOk' api_added='11'/><method return='android.database.sqlite.SQLiteDatabase' static='true' name='openDatabase' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='int' name='flags'/><parameter type='android.database.DatabaseErrorHandler' name='errorHandler'/></method><method return='android.database.sqlite.SQLiteDatabase' static='true' name='openOrCreateDatabase' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='android.database.DatabaseErrorHandler' name='errorHandler'/></method><method name='setMaxSqlCacheSize' api_added='11'><parameter type='int' name='cacheSize'/></method><method return='boolean' static='true' name='deleteDatabase' api_added='16'><parameter type='java.io.File' name='arg0'/></method><method name='disableWriteAheadLogging' api_added='16'/><method return='boolean' name='isWriteAheadLoggingEnabled' api_added='16'/><method return='android.database.Cursor' name='query' api_added='16'><parameter type='boolean' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/><parameter type='java.lang.String' name='arg3'/><parameter type='java.lang.String[]' name='arg4'/><parameter type='java.lang.String' name='arg5'/><parameter type='java.lang.String' name='arg6'/><parameter type='java.lang.String' name='arg7'/><parameter type='java.lang.String' name='arg8'/><parameter type='android.os.CancellationSignal' name='arg9'/></method><method return='android.database.Cursor' name='queryWithFactory' api_added='16'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='arg0'/><parameter type='boolean' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='java.lang.String[]' name='arg5'/><parameter type='java.lang.String' name='arg6'/><parameter type='java.lang.String' name='arg7'/><parameter type='java.lang.String' name='arg8'/><parameter type='java.lang.String' name='arg9'/><parameter type='android.os.CancellationSignal' name='arg10'/></method><method return='android.database.Cursor' name='rawQuery' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='android.os.CancellationSignal' name='arg2'/></method><method return='android.database.Cursor' name='rawQueryWithFactory' api_added='16'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/><parameter type='java.lang.String' name='arg3'/><parameter type='android.os.CancellationSignal' name='arg4'/></method><method name='setForeignKeyConstraintsEnabled' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteDatabaseCorruptException'><constructor type='android.database.sqlite.SQLiteDatabaseCorruptException' name='SQLiteDatabaseCorruptException'/><constructor type='android.database.sqlite.SQLiteDatabaseCorruptException' name='SQLiteDatabaseCorruptException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteDiskIOException'><constructor type='android.database.sqlite.SQLiteDiskIOException' name='SQLiteDiskIOException'/><constructor type='android.database.sqlite.SQLiteDiskIOException' name='SQLiteDiskIOException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteDoneException'><constructor type='android.database.sqlite.SQLiteDoneException' name='SQLiteDoneException'/><constructor type='android.database.sqlite.SQLiteDoneException' name='SQLiteDoneException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.SQLException' name='SQLiteException'><constructor type='android.database.sqlite.SQLiteException' name='SQLiteException'/><constructor type='android.database.sqlite.SQLiteException' name='SQLiteException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteFullException'><constructor type='android.database.sqlite.SQLiteFullException' name='SQLiteFullException'/><constructor type='android.database.sqlite.SQLiteFullException' name='SQLiteFullException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteMisuseException'><constructor type='android.database.sqlite.SQLiteMisuseException' name='SQLiteMisuseException'/><constructor type='android.database.sqlite.SQLiteMisuseException' name='SQLiteMisuseException'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SQLiteOpenHelper'><constructor type='android.database.sqlite.SQLiteOpenHelper' name='SQLiteOpenHelper'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='name'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='int' name='version'/></constructor><method synchronized='true' name='close'/><method return='android.database.sqlite.SQLiteDatabase' synchronized='true' name='getReadableDatabase'/><method return='android.database.sqlite.SQLiteDatabase' synchronized='true' name='getWritableDatabase'/><method abstract='true' name='onCreate'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/></method><method name='onOpen'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/></method><method abstract='true' name='onUpgrade'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='int' name='oldVersion'/><parameter type='int' name='newVersion'/></method><method name='onDowngrade' api_added='11'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='int' name='oldVersion'/><parameter type='int' name='newVersion'/></method><method return='java.lang.String' name='getDatabaseName' api_added='14'/><method name='onConfigure' api_added='16'><parameter type='android.database.sqlite.SQLiteDatabase' name='arg0'/></method><method name='setWriteAheadLoggingEnabled' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='android.database.sqlite.SQLiteClosable' abstract='true' name='SQLiteProgram'><method name='bindBlob'><parameter type='int' name='index'/><parameter type='byte[]' name='value'/></method><method name='bindDouble'><parameter type='int' name='index'/><parameter type='double' name='value'/></method><method name='bindLong'><parameter type='int' name='index'/><parameter type='long' name='value'/></method><method name='bindNull'><parameter type='int' name='index'/></method><method name='bindString'><parameter type='int' name='index'/><parameter type='java.lang.String' name='value'/></method><method name='clearBindings'/><method api_removed='16' name='close'/><method visibility='protected' deprecated='8' api_removed='16' name='compile'><parameter type='java.lang.String' name='sql'/><parameter type='boolean' name='forceCompilation'/></method><method deprecated='11' return='int' name='getUniqueId' final='true'/><method visibility='protected' native='true' api_removed='16' name='native_bind_blob' final='true'><parameter type='int' name='index'/><parameter type='byte[]' name='value'/></method><method visibility='protected' native='true' api_removed='16' name='native_bind_double' final='true'><parameter type='int' name='index'/><parameter type='double' name='value'/></method><method visibility='protected' native='true' api_removed='16' name='native_bind_long' final='true'><parameter type='int' name='index'/><parameter type='long' name='value'/></method><method visibility='protected' native='true' api_removed='16' name='native_bind_null' final='true'><parameter type='int' name='index'/></method><method visibility='protected' native='true' api_removed='16' name='native_bind_string' final='true'><parameter type='int' name='index'/><parameter type='java.lang.String' name='value'/></method><method visibility='protected' deprecated='8' native='true' api_removed='16' name='native_compile' final='true'><parameter type='java.lang.String' name='sql'/></method><method visibility='protected' deprecated='8' native='true' api_removed='16' name='native_finalize' final='true'/><method visibility='protected' name='onAllReferencesReleased'/><method name='bindAllArgsAsStrings' api_added='11'><parameter type='java.lang.String[]' name='bindArgs'/></method></class><class extends='android.database.sqlite.SQLiteProgram' name='SQLiteQuery'/><class extends='java.lang.Object' name='SQLiteQueryBuilder'><constructor type='android.database.sqlite.SQLiteQueryBuilder' name='SQLiteQueryBuilder'/><method static='true' name='appendColumns'><parameter type='java.lang.StringBuilder' name='s'/><parameter type='java.lang.String[]' name='columns'/></method><method name='appendWhere'><parameter type='java.lang.CharSequence' name='inWhere'/></method><method name='appendWhereEscapeString'><parameter type='java.lang.String' name='inWhere'/></method><method deprecated='11' return='java.lang.String' name='buildQuery'><parameter type='java.lang.String[]' name='projectionIn'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='sortOrder'/><parameter type='java.lang.String' name='limit'/></method><method return='java.lang.String' static='true' name='buildQueryString'><parameter type='boolean' name='distinct'/><parameter type='java.lang.String' name='tables'/><parameter type='java.lang.String[]' name='columns'/><parameter type='java.lang.String' name='where'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='orderBy'/><parameter type='java.lang.String' name='limit'/></method><method return='java.lang.String' name='buildUnionQuery'><parameter type='java.lang.String[]' name='subQueries'/><parameter type='java.lang.String' name='sortOrder'/><parameter type='java.lang.String' name='limit'/></method><method deprecated='11' return='java.lang.String' name='buildUnionSubQuery'><parameter type='java.lang.String' name='typeDiscriminatorColumn'/><parameter type='java.lang.String[]' name='unionColumns'/><parameter type='java.util.Set&lt;java.lang.String&gt;' name='columnsPresentInTable'/><parameter type='int' name='computedColumnsOffset'/><parameter type='java.lang.String' name='typeDiscriminatorValue'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/></method><method return='java.lang.String' name='getTables'/><method return='android.database.Cursor' name='query'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String[]' name='projectionIn'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='sortOrder'/></method><method return='android.database.Cursor' name='query'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='java.lang.String[]' name='projectionIn'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='sortOrder'/><parameter type='java.lang.String' name='limit'/></method><method name='setCursorFactory'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method name='setDistinct'><parameter type='boolean' name='distinct'/></method><method api_removed='14' name='setProjectionMap'><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='columnMap'/></method><method name='setTables'><parameter type='java.lang.String' name='inTables'/></method><method return='java.lang.String' name='buildQuery' api_added='11'><parameter type='java.lang.String[]' name='projectionIn'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/><parameter type='java.lang.String' name='sortOrder'/><parameter type='java.lang.String' name='limit'/></method><method return='java.lang.String' name='buildUnionSubQuery' api_added='11'><parameter type='java.lang.String' name='typeDiscriminatorColumn'/><parameter type='java.lang.String[]' name='unionColumns'/><parameter type='java.util.Set&lt;java.lang.String&gt;' name='columnsPresentInTable'/><parameter type='int' name='computedColumnsOffset'/><parameter type='java.lang.String' name='typeDiscriminatorValue'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String' name='groupBy'/><parameter type='java.lang.String' name='having'/></method><method name='setProjectionMap' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.String&gt;' name='arg1'/></method><method name='setStrict' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='android.database.Cursor' name='query' api_added='16'><parameter type='android.database.sqlite.SQLiteDatabase' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='java.lang.String' name='arg5'/><parameter type='java.lang.String' name='arg6'/><parameter type='java.lang.String' name='arg7'/><parameter type='android.os.CancellationSignal' name='arg8'/></method></class><class extends='android.database.sqlite.SQLiteProgram' name='SQLiteStatement'><method name='execute'/><method return='long' name='executeInsert'/><method return='long' name='simpleQueryForLong'/><method return='java.lang.String' name='simpleQueryForString'/><method return='int' name='executeUpdateDelete' api_added='11'/><method return='android.os.ParcelFileDescriptor' name='simpleQueryForBlobFileDescriptor' api_added='11'/></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteAccessPermException' api_added='11'><constructor type='android.database.sqlite.SQLiteAccessPermException' name='SQLiteAccessPermException' api_added='11'/><constructor type='android.database.sqlite.SQLiteAccessPermException' name='SQLiteAccessPermException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteBindOrColumnIndexOutOfRangeException' api_added='11'><constructor type='android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException' name='SQLiteBindOrColumnIndexOutOfRangeException' api_added='11'/><constructor type='android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException' name='SQLiteBindOrColumnIndexOutOfRangeException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteBlobTooBigException' api_added='11'><constructor type='android.database.sqlite.SQLiteBlobTooBigException' name='SQLiteBlobTooBigException' api_added='11'/><constructor type='android.database.sqlite.SQLiteBlobTooBigException' name='SQLiteBlobTooBigException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteCantOpenDatabaseException' api_added='11'><constructor type='android.database.sqlite.SQLiteCantOpenDatabaseException' name='SQLiteCantOpenDatabaseException' api_added='11'/><constructor type='android.database.sqlite.SQLiteCantOpenDatabaseException' name='SQLiteCantOpenDatabaseException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteDatabaseLockedException' api_added='11'><constructor type='android.database.sqlite.SQLiteDatabaseLockedException' name='SQLiteDatabaseLockedException' api_added='11'/><constructor type='android.database.sqlite.SQLiteDatabaseLockedException' name='SQLiteDatabaseLockedException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteDatatypeMismatchException' api_added='11'><constructor type='android.database.sqlite.SQLiteDatatypeMismatchException' name='SQLiteDatatypeMismatchException' api_added='11'/><constructor type='android.database.sqlite.SQLiteDatatypeMismatchException' name='SQLiteDatatypeMismatchException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteOutOfMemoryException' api_added='11'><constructor type='android.database.sqlite.SQLiteOutOfMemoryException' name='SQLiteOutOfMemoryException' api_added='11'/><constructor type='android.database.sqlite.SQLiteOutOfMemoryException' name='SQLiteOutOfMemoryException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteReadOnlyDatabaseException' api_added='11'><constructor type='android.database.sqlite.SQLiteReadOnlyDatabaseException' name='SQLiteReadOnlyDatabaseException' api_added='11'/><constructor type='android.database.sqlite.SQLiteReadOnlyDatabaseException' name='SQLiteReadOnlyDatabaseException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><class extends='android.database.sqlite.SQLiteException' name='SQLiteTableLockedException' api_added='11'><constructor type='android.database.sqlite.SQLiteTableLockedException' name='SQLiteTableLockedException' api_added='11'/><constructor type='android.database.sqlite.SQLiteTableLockedException' name='SQLiteTableLockedException' api_added='11'><parameter type='java.lang.String' name='error'/></constructor></class><interface abstract='true' name='SQLiteCursorDriver'><method abstract='true' name='cursorClosed'/><method abstract='true' name='cursorDeactivated'/><method abstract='true' name='cursorRequeried'><parameter type='android.database.Cursor' name='cursor'/></method><method return='android.database.Cursor' abstract='true' name='query'><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='java.lang.String[]' name='bindArgs'/></method><method abstract='true' name='setBindArguments'><parameter type='java.lang.String[]' name='bindArgs'/></method></interface><interface abstract='true' static='true' name='SQLiteDatabase.CursorFactory'><method return='android.database.Cursor' abstract='true' name='newCursor'><parameter type='android.database.sqlite.SQLiteDatabase' name='db'/><parameter type='android.database.sqlite.SQLiteCursorDriver' name='masterQuery'/><parameter type='java.lang.String' name='editTable'/><parameter type='android.database.sqlite.SQLiteQuery' name='query'/></method></interface><interface abstract='true' name='SQLiteTransactionListener' api_added='5'><method abstract='true' name='onBegin' api_added='5'/><method abstract='true' name='onCommit' api_added='5'/><method abstract='true' name='onRollback' api_added='5'/></interface></package><package name='android.graphics'><class extends='android.graphics.Xfermode' deprecated='16' name='AvoidXfermode'><constructor type='android.graphics.AvoidXfermode' name='AvoidXfermode'><parameter type='int' name='opColor'/><parameter type='int' name='tolerance'/><parameter type='android.graphics.AvoidXfermode.Mode' name='mode'/></constructor></class><class extends='java.lang.Enum' static='true' name='AvoidXfermode.Mode' final='true'><method return='android.graphics.AvoidXfermode.Mode' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.AvoidXfermode.Mode[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='Bitmap' final='true'><method return='boolean' name='compress'><parameter type='android.graphics.Bitmap.CompressFormat' name='format'/><parameter type='int' name='quality'/><parameter type='java.io.OutputStream' name='stream'/></method><method return='android.graphics.Bitmap' name='copy'><parameter type='android.graphics.Bitmap.Config' name='config'/><parameter type='boolean' name='isMutable'/></method><method name='copyPixelsToBuffer'><parameter type='java.nio.Buffer' name='dst'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='android.graphics.Bitmap' name='src'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='android.graphics.Bitmap' name='source'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='android.graphics.Bitmap' name='source'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='android.graphics.Matrix' name='m'/><parameter type='boolean' name='filter'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='android.graphics.Bitmap.Config' name='config'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='int[]' name='colors'/><parameter type='int' name='offset'/><parameter type='int' name='stride'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='android.graphics.Bitmap.Config' name='config'/></method><method return='android.graphics.Bitmap' static='true' name='createBitmap'><parameter type='int[]' name='colors'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='android.graphics.Bitmap.Config' name='config'/></method><method return='android.graphics.Bitmap' static='true' name='createScaledBitmap'><parameter type='android.graphics.Bitmap' name='src'/><parameter type='int' name='dstWidth'/><parameter type='int' name='dstHeight'/><parameter type='boolean' name='filter'/></method><method return='int' name='describeContents'/><method name='eraseColor'><parameter type='int' name='c'/></method><method return='android.graphics.Bitmap' name='extractAlpha'/><method return='android.graphics.Bitmap' name='extractAlpha'><parameter type='android.graphics.Paint' name='paint'/><parameter type='int[]' name='offsetXY'/></method><method return='android.graphics.Bitmap.Config' name='getConfig' final='true'/><method return='int' name='getHeight' final='true'/><method return='byte[]' name='getNinePatchChunk'/><method return='int' name='getPixel'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='getPixels'><parameter type='int[]' name='pixels'/><parameter type='int' name='offset'/><parameter type='int' name='stride'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='int' name='getRowBytes' final='true'/><method return='int' name='getWidth' final='true'/><method return='boolean' name='hasAlpha' final='true'/><method return='boolean' name='isMutable' final='true'/><method return='boolean' name='isRecycled' final='true'/><method name='recycle'/><method name='setPixel'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='color'/></method><method name='setPixels'><parameter type='int[]' name='pixels'/><parameter type='int' name='offset'/><parameter type='int' name='stride'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='p'/><parameter type='int' name='flags'/></method><method name='copyPixelsFromBuffer' api_added='3'><parameter type='java.nio.Buffer' name='src'/></method><method return='int' name='getDensity' api_added='4'/><method return='int' name='getScaledHeight' api_added='4'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getScaledHeight' api_added='4'><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='int' name='getScaledHeight' api_added='4'><parameter type='int' name='targetDensity'/></method><method return='int' name='getScaledWidth' api_added='4'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getScaledWidth' api_added='4'><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='int' name='getScaledWidth' api_added='4'><parameter type='int' name='targetDensity'/></method><method name='prepareToDraw' api_added='4'/><method name='setDensity' api_added='4'><parameter type='int' name='density'/></method><method return='int' name='getByteCount' api_added='12' final='true'/><method return='int' name='getGenerationId' api_added='12'/><method return='boolean' name='sameAs' api_added='12'><parameter type='android.graphics.Bitmap' name='other'/></method><method name='setHasAlpha' api_added='12'><parameter type='boolean' name='hasAlpha'/></method></class><class extends='java.lang.Enum' static='true' name='Bitmap.CompressFormat' final='true'><method return='android.graphics.Bitmap.CompressFormat' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Bitmap.CompressFormat[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='Bitmap.Config' final='true'><method return='android.graphics.Bitmap.Config' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Bitmap.Config[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='BitmapFactory'><constructor type='android.graphics.BitmapFactory' name='BitmapFactory'/><method return='android.graphics.Bitmap' static='true' name='decodeByteArray'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.Bitmap' static='true' name='decodeByteArray'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='android.graphics.Bitmap' static='true' name='decodeFile'><parameter type='java.lang.String' name='pathName'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.Bitmap' static='true' name='decodeFile'><parameter type='java.lang.String' name='pathName'/></method><method return='android.graphics.Bitmap' static='true' name='decodeFileDescriptor'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='android.graphics.Rect' name='outPadding'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.Bitmap' static='true' name='decodeFileDescriptor'><parameter type='java.io.FileDescriptor' name='fd'/></method><method return='android.graphics.Bitmap' static='true' name='decodeResource'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.Bitmap' static='true' name='decodeResource'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/></method><method return='android.graphics.Bitmap' static='true' name='decodeStream'><parameter type='java.io.InputStream' name='is'/><parameter type='android.graphics.Rect' name='outPadding'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.Bitmap' static='true' name='decodeStream'><parameter type='java.io.InputStream' name='is'/></method><method return='android.graphics.Bitmap' static='true' name='decodeResourceStream' api_added='4'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.util.TypedValue' name='value'/><parameter type='java.io.InputStream' name='is'/><parameter type='android.graphics.Rect' name='pad'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method></class><class extends='java.lang.Object' static='true' name='BitmapFactory.Options'><constructor type='android.graphics.BitmapFactory.Options' name='BitmapFactory.Options'/><method name='requestCancelDecode'/></class><class extends='android.graphics.Shader' name='BitmapShader'><constructor type='android.graphics.BitmapShader' name='BitmapShader'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='android.graphics.Shader.TileMode' name='tileX'/><parameter type='android.graphics.Shader.TileMode' name='tileY'/></constructor></class><class extends='android.graphics.MaskFilter' name='BlurMaskFilter'><constructor type='android.graphics.BlurMaskFilter' name='BlurMaskFilter'><parameter type='float' name='radius'/><parameter type='android.graphics.BlurMaskFilter.Blur' name='style'/></constructor></class><class extends='java.lang.Enum' static='true' name='BlurMaskFilter.Blur' final='true'><method return='android.graphics.BlurMaskFilter.Blur' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.BlurMaskFilter.Blur[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='Camera'><constructor type='android.graphics.Camera' name='Camera'/><method name='applyToCanvas'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='float' native='true' name='dotWithNormal'><parameter type='float' name='dx'/><parameter type='float' name='dy'/><parameter type='float' name='dz'/></method><method name='getMatrix'><parameter type='android.graphics.Matrix' name='matrix'/></method><method native='true' name='restore'/><method native='true' name='rotateX'><parameter type='float' name='deg'/></method><method native='true' name='rotateY'><parameter type='float' name='deg'/></method><method native='true' name='rotateZ'><parameter type='float' name='deg'/></method><method native='true' name='save'/><method native='true' name='translate'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' name='rotate' api_added='12'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' name='setLocation' api_added='12'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method return='float' name='getLocationX' api_added='16'/><method return='float' name='getLocationY' api_added='16'/><method return='float' name='getLocationZ' api_added='16'/></class><class extends='java.lang.Object' name='Canvas'><constructor type='android.graphics.Canvas' name='Canvas'/><constructor type='android.graphics.Canvas' name='Canvas'><parameter type='android.graphics.Bitmap' name='bitmap'/></constructor><constructor type='android.graphics.Canvas' name='Canvas'><parameter type='javax.microedition.khronos.opengles.GL' name='gl'/></constructor><method return='boolean' name='clipPath'><parameter type='android.graphics.Path' name='path'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='clipPath'><parameter type='android.graphics.Path' name='path'/></method><method return='boolean' name='clipRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='clipRect'><parameter type='android.graphics.Rect' name='rect'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' native='true' name='clipRect'><parameter type='android.graphics.RectF' name='rect'/></method><method return='boolean' native='true' name='clipRect'><parameter type='android.graphics.Rect' name='rect'/></method><method return='boolean' name='clipRect'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' native='true' name='clipRect'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method return='boolean' native='true' name='clipRect'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' name='clipRegion'><parameter type='android.graphics.Region' name='region'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='clipRegion'><parameter type='android.graphics.Region' name='region'/></method><method name='concat'><parameter type='android.graphics.Matrix' name='matrix'/></method><method name='drawARGB'><parameter type='int' name='a'/><parameter type='int' name='r'/><parameter type='int' name='g'/><parameter type='int' name='b'/></method><method name='drawArc'><parameter type='android.graphics.RectF' name='oval'/><parameter type='float' name='startAngle'/><parameter type='float' name='sweepAngle'/><parameter type='boolean' name='useCenter'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmap'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmap'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='android.graphics.Rect' name='src'/><parameter type='android.graphics.RectF' name='dst'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmap'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='android.graphics.Rect' name='src'/><parameter type='android.graphics.Rect' name='dst'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmap'><parameter type='int[]' name='colors'/><parameter type='int' name='offset'/><parameter type='int' name='stride'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='boolean' name='hasAlpha'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmap'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='android.graphics.Matrix' name='matrix'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawBitmapMesh'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='int' name='meshWidth'/><parameter type='int' name='meshHeight'/><parameter type='float[]' name='verts'/><parameter type='int' name='vertOffset'/><parameter type='int[]' name='colors'/><parameter type='int' name='colorOffset'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawCircle'><parameter type='float' name='cx'/><parameter type='float' name='cy'/><parameter type='float' name='radius'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawColor'><parameter type='int' name='color'/></method><method name='drawColor'><parameter type='int' name='color'/><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></method><method name='drawLine'><parameter type='float' name='startX'/><parameter type='float' name='startY'/><parameter type='float' name='stopX'/><parameter type='float' name='stopY'/><parameter type='android.graphics.Paint' name='paint'/></method><method native='true' name='drawLines'><parameter type='float[]' name='pts'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawLines'><parameter type='float[]' name='pts'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawOval'><parameter type='android.graphics.RectF' name='oval'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawPaint'><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawPath'><parameter type='android.graphics.Path' name='path'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawPicture'><parameter type='android.graphics.Picture' name='picture'/></method><method name='drawPicture'><parameter type='android.graphics.Picture' name='picture'/><parameter type='android.graphics.RectF' name='dst'/></method><method name='drawPicture'><parameter type='android.graphics.Picture' name='picture'/><parameter type='android.graphics.Rect' name='dst'/></method><method native='true' name='drawPoint'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method native='true' name='drawPoints'><parameter type='float[]' name='pts'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawPoints'><parameter type='float[]' name='pts'/><parameter type='android.graphics.Paint' name='paint'/></method><method deprecated='16' name='drawPosText'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='float[]' name='pos'/><parameter type='android.graphics.Paint' name='paint'/></method><method deprecated='16' name='drawPosText'><parameter type='java.lang.String' name='text'/><parameter type='float[]' name='pos'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawRGB'><parameter type='int' name='r'/><parameter type='int' name='g'/><parameter type='int' name='b'/></method><method name='drawRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawRect'><parameter type='android.graphics.Rect' name='r'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawRect'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawRoundRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='float' name='rx'/><parameter type='float' name='ry'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawText'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method native='true' name='drawText'><parameter type='java.lang.String' name='text'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawText'><parameter type='java.lang.String' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawText'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawTextOnPath'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='android.graphics.Path' name='path'/><parameter type='float' name='hOffset'/><parameter type='float' name='vOffset'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawTextOnPath'><parameter type='java.lang.String' name='text'/><parameter type='android.graphics.Path' name='path'/><parameter type='float' name='hOffset'/><parameter type='float' name='vOffset'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='drawVertices'><parameter type='android.graphics.Canvas.VertexMode' name='mode'/><parameter type='int' name='vertexCount'/><parameter type='float[]' name='verts'/><parameter type='int' name='vertOffset'/><parameter type='float[]' name='texs'/><parameter type='int' name='texOffset'/><parameter type='int[]' name='colors'/><parameter type='int' name='colorOffset'/><parameter type='short[]' name='indices'/><parameter type='int' name='indexOffset'/><parameter type='int' name='indexCount'/><parameter type='android.graphics.Paint' name='paint'/></method><method native='true' api_removed='11' static='true' name='freeGlCaches'/><method return='boolean' name='getClipBounds'><parameter type='android.graphics.Rect' name='bounds'/></method><method return='android.graphics.Rect' name='getClipBounds' final='true'/><method return='android.graphics.DrawFilter' name='getDrawFilter'/><method return='javax.microedition.khronos.opengles.GL' api_removed='11' name='getGL'/><method return='int' native='true' name='getHeight'/><method deprecated='16' name='getMatrix'><parameter type='android.graphics.Matrix' name='ctm'/></method><method deprecated='16' return='android.graphics.Matrix' name='getMatrix' final='true'/><method return='int' native='true' name='getSaveCount'/><method return='int' native='true' name='getWidth'/><method return='boolean' native='true' name='isOpaque'/><method return='boolean' name='quickReject'><parameter type='android.graphics.RectF' name='rect'/><parameter type='android.graphics.Canvas.EdgeType' name='type'/></method><method return='boolean' name='quickReject'><parameter type='android.graphics.Path' name='path'/><parameter type='android.graphics.Canvas.EdgeType' name='type'/></method><method return='boolean' name='quickReject'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='android.graphics.Canvas.EdgeType' name='type'/></method><method native='true' name='restore'/><method native='true' name='restoreToCount'><parameter type='int' name='saveCount'/></method><method native='true' name='rotate'><parameter type='float' name='degrees'/></method><method name='rotate' final='true'><parameter type='float' name='degrees'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='int' native='true' name='save'/><method return='int' native='true' name='save'><parameter type='int' name='saveFlags'/></method><method return='int' name='saveLayer'><parameter type='android.graphics.RectF' name='bounds'/><parameter type='android.graphics.Paint' name='paint'/><parameter type='int' name='saveFlags'/></method><method return='int' name='saveLayer'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='android.graphics.Paint' name='paint'/><parameter type='int' name='saveFlags'/></method><method return='int' name='saveLayerAlpha'><parameter type='android.graphics.RectF' name='bounds'/><parameter type='int' name='alpha'/><parameter type='int' name='saveFlags'/></method><method return='int' name='saveLayerAlpha'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='int' name='alpha'/><parameter type='int' name='saveFlags'/></method><method native='true' name='scale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/></method><method name='scale' final='true'><parameter type='float' name='sx'/><parameter type='float' name='sy'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method name='setBitmap'><parameter type='android.graphics.Bitmap' name='bitmap'/></method><method name='setDrawFilter'><parameter type='android.graphics.DrawFilter' name='filter'/></method><method name='setMatrix'><parameter type='android.graphics.Matrix' name='matrix'/></method><method api_removed='11' name='setViewport'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' name='skew'><parameter type='float' name='sx'/><parameter type='float' name='sy'/></method><method native='true' name='translate'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='drawBitmap' api_added='3'><parameter type='int[]' name='colors'/><parameter type='int' name='offset'/><parameter type='int' name='stride'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='boolean' name='hasAlpha'/><parameter type='android.graphics.Paint' name='paint'/></method><method return='int' name='getDensity' api_added='4'/><method name='setDensity' api_added='4'><parameter type='int' name='density'/></method><method return='boolean' name='isHardwareAccelerated' api_added='11'/><method return='int' name='getMaximumBitmapHeight' api_added='14'/><method return='int' name='getMaximumBitmapWidth' api_added='14'/></class><class extends='java.lang.Enum' static='true' name='Canvas.EdgeType' final='true'><method return='android.graphics.Canvas.EdgeType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Canvas.EdgeType[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='Canvas.VertexMode' final='true'><method return='android.graphics.Canvas.VertexMode' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Canvas.VertexMode[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='Color'><constructor type='android.graphics.Color' name='Color'/><method return='int' static='true' name='HSVToColor'><parameter type='float[]' name='hsv'/></method><method return='int' static='true' name='HSVToColor'><parameter type='int' name='alpha'/><parameter type='float[]' name='hsv'/></method><method static='true' name='RGBToHSV'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='float[]' name='hsv'/></method><method return='int' static='true' name='alpha'><parameter type='int' name='color'/></method><method return='int' static='true' name='argb'><parameter type='int' name='alpha'/><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/></method><method return='int' static='true' name='blue'><parameter type='int' name='color'/></method><method static='true' name='colorToHSV'><parameter type='int' name='color'/><parameter type='float[]' name='hsv'/></method><method return='int' static='true' name='green'><parameter type='int' name='color'/></method><method return='int' static='true' name='parseColor'><parameter type='java.lang.String' name='colorString'/></method><method return='int' static='true' name='red'><parameter type='int' name='color'/></method><method return='int' static='true' name='rgb'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/></method></class><class extends='java.lang.Object' name='ColorFilter'><constructor type='android.graphics.ColorFilter' name='ColorFilter'/></class><class extends='java.lang.Object' name='ColorMatrix'><constructor type='android.graphics.ColorMatrix' name='ColorMatrix'/><constructor type='android.graphics.ColorMatrix' name='ColorMatrix'><parameter type='float[]' name='src'/></constructor><constructor type='android.graphics.ColorMatrix' name='ColorMatrix'><parameter type='android.graphics.ColorMatrix' name='src'/></constructor><method return='float[]' name='getArray' final='true'/><method name='postConcat'><parameter type='android.graphics.ColorMatrix' name='postmatrix'/></method><method name='preConcat'><parameter type='android.graphics.ColorMatrix' name='prematrix'/></method><method name='reset'/><method name='set'><parameter type='android.graphics.ColorMatrix' name='src'/></method><method name='set'><parameter type='float[]' name='src'/></method><method name='setConcat'><parameter type='android.graphics.ColorMatrix' name='matA'/><parameter type='android.graphics.ColorMatrix' name='matB'/></method><method name='setRGB2YUV'/><method name='setRotate'><parameter type='int' name='axis'/><parameter type='float' name='degrees'/></method><method name='setSaturation'><parameter type='float' name='sat'/></method><method name='setScale'><parameter type='float' name='rScale'/><parameter type='float' name='gScale'/><parameter type='float' name='bScale'/><parameter type='float' name='aScale'/></method><method name='setYUV2RGB'/></class><class extends='android.graphics.ColorFilter' name='ColorMatrixColorFilter'><constructor type='android.graphics.ColorMatrixColorFilter' name='ColorMatrixColorFilter'><parameter type='android.graphics.ColorMatrix' name='matrix'/></constructor><constructor type='android.graphics.ColorMatrixColorFilter' name='ColorMatrixColorFilter'><parameter type='float[]' name='array'/></constructor></class><class extends='android.graphics.PathEffect' name='ComposePathEffect'><constructor type='android.graphics.ComposePathEffect' name='ComposePathEffect'><parameter type='android.graphics.PathEffect' name='outerpe'/><parameter type='android.graphics.PathEffect' name='innerpe'/></constructor></class><class extends='android.graphics.Shader' name='ComposeShader'><constructor type='android.graphics.ComposeShader' name='ComposeShader'><parameter type='android.graphics.Shader' name='shaderA'/><parameter type='android.graphics.Shader' name='shaderB'/><parameter type='android.graphics.Xfermode' name='mode'/></constructor><constructor type='android.graphics.ComposeShader' name='ComposeShader'><parameter type='android.graphics.Shader' name='shaderA'/><parameter type='android.graphics.Shader' name='shaderB'/><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></constructor></class><class extends='android.graphics.PathEffect' name='CornerPathEffect'><constructor type='android.graphics.CornerPathEffect' name='CornerPathEffect'><parameter type='float' name='radius'/></constructor></class><class extends='android.graphics.PathEffect' name='DashPathEffect'><constructor type='android.graphics.DashPathEffect' name='DashPathEffect'><parameter type='float[]' name='intervals'/><parameter type='float' name='phase'/></constructor></class><class extends='android.graphics.PathEffect' name='DiscretePathEffect'><constructor type='android.graphics.DiscretePathEffect' name='DiscretePathEffect'><parameter type='float' name='segmentLength'/><parameter type='float' name='deviation'/></constructor></class><class extends='java.lang.Object' name='DrawFilter'><constructor type='android.graphics.DrawFilter' name='DrawFilter'/></class><class extends='android.graphics.MaskFilter' name='EmbossMaskFilter'><constructor type='android.graphics.EmbossMaskFilter' name='EmbossMaskFilter'><parameter type='float[]' name='direction'/><parameter type='float' name='ambient'/><parameter type='float' name='specular'/><parameter type='float' name='blurRadius'/></constructor></class><class extends='java.lang.Object' name='Interpolator'><constructor type='android.graphics.Interpolator' name='Interpolator'><parameter type='int' name='valueCount'/></constructor><constructor type='android.graphics.Interpolator' name='Interpolator'><parameter type='int' name='valueCount'/><parameter type='int' name='frameCount'/></constructor><method return='int' name='getKeyFrameCount' final='true'/><method return='int' name='getValueCount' final='true'/><method name='reset'><parameter type='int' name='valueCount'/></method><method name='reset'><parameter type='int' name='valueCount'/><parameter type='int' name='frameCount'/></method><method name='setKeyFrame'><parameter type='int' name='index'/><parameter type='int' name='msec'/><parameter type='float[]' name='values'/></method><method name='setKeyFrame'><parameter type='int' name='index'/><parameter type='int' name='msec'/><parameter type='float[]' name='values'/><parameter type='float[]' name='blend'/></method><method name='setRepeatMirror'><parameter type='float' name='repeatCount'/><parameter type='boolean' name='mirror'/></method><method return='android.graphics.Interpolator.Result' name='timeToValues'><parameter type='float[]' name='values'/></method><method return='android.graphics.Interpolator.Result' name='timeToValues'><parameter type='int' name='msec'/><parameter type='float[]' name='values'/></method></class><class extends='java.lang.Enum' static='true' name='Interpolator.Result' final='true'><method return='android.graphics.Interpolator.Result' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Interpolator.Result[]' static='true' name='values' final='true'/></class><class extends='android.graphics.Rasterizer' name='LayerRasterizer'><constructor type='android.graphics.LayerRasterizer' name='LayerRasterizer'/><method name='addLayer'><parameter type='android.graphics.Paint' name='paint'/><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='addLayer'><parameter type='android.graphics.Paint' name='paint'/></method></class><class extends='android.graphics.ColorFilter' name='LightingColorFilter'><constructor type='android.graphics.LightingColorFilter' name='LightingColorFilter'><parameter type='int' name='mul'/><parameter type='int' name='add'/></constructor></class><class extends='android.graphics.Shader' name='LinearGradient'><constructor type='android.graphics.LinearGradient' name='LinearGradient'><parameter type='float' name='x0'/><parameter type='float' name='y0'/><parameter type='float' name='x1'/><parameter type='float' name='y1'/><parameter type='int[]' name='colors'/><parameter type='float[]' name='positions'/><parameter type='android.graphics.Shader.TileMode' name='tile'/></constructor><constructor type='android.graphics.LinearGradient' name='LinearGradient'><parameter type='float' name='x0'/><parameter type='float' name='y0'/><parameter type='float' name='x1'/><parameter type='float' name='y1'/><parameter type='int' name='color0'/><parameter type='int' name='color1'/><parameter type='android.graphics.Shader.TileMode' name='tile'/></constructor></class><class extends='java.lang.Object' name='MaskFilter'><constructor type='android.graphics.MaskFilter' name='MaskFilter'/></class><class extends='java.lang.Object' name='Matrix'><constructor type='android.graphics.Matrix' name='Matrix'/><constructor type='android.graphics.Matrix' name='Matrix'><parameter type='android.graphics.Matrix' name='src'/></constructor><method name='getValues'><parameter type='float[]' name='values'/></method><method return='boolean' name='invert'><parameter type='android.graphics.Matrix' name='inverse'/></method><method return='boolean' name='isIdentity'/><method name='mapPoints'><parameter type='float[]' name='dst'/><parameter type='int' name='dstIndex'/><parameter type='float[]' name='src'/><parameter type='int' name='srcIndex'/><parameter type='int' name='pointCount'/></method><method name='mapPoints'><parameter type='float[]' name='dst'/><parameter type='float[]' name='src'/></method><method name='mapPoints'><parameter type='float[]' name='pts'/></method><method return='float' name='mapRadius'><parameter type='float' name='radius'/></method><method return='boolean' name='mapRect'><parameter type='android.graphics.RectF' name='dst'/><parameter type='android.graphics.RectF' name='src'/></method><method return='boolean' name='mapRect'><parameter type='android.graphics.RectF' name='rect'/></method><method name='mapVectors'><parameter type='float[]' name='dst'/><parameter type='int' name='dstIndex'/><parameter type='float[]' name='src'/><parameter type='int' name='srcIndex'/><parameter type='int' name='vectorCount'/></method><method name='mapVectors'><parameter type='float[]' name='dst'/><parameter type='float[]' name='src'/></method><method name='mapVectors'><parameter type='float[]' name='vecs'/></method><method return='boolean' name='postConcat'><parameter type='android.graphics.Matrix' name='other'/></method><method return='boolean' name='postRotate'><parameter type='float' name='degrees'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='postRotate'><parameter type='float' name='degrees'/></method><method return='boolean' name='postScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='postScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/></method><method return='boolean' name='postSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='postSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/></method><method return='boolean' name='postTranslate'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method return='boolean' name='preConcat'><parameter type='android.graphics.Matrix' name='other'/></method><method return='boolean' name='preRotate'><parameter type='float' name='degrees'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='preRotate'><parameter type='float' name='degrees'/></method><method return='boolean' name='preScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='preScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/></method><method return='boolean' name='preSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method return='boolean' name='preSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/></method><method return='boolean' name='preTranslate'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method return='boolean' name='rectStaysRect'/><method name='reset'/><method name='set'><parameter type='android.graphics.Matrix' name='src'/></method><method return='boolean' name='setConcat'><parameter type='android.graphics.Matrix' name='a'/><parameter type='android.graphics.Matrix' name='b'/></method><method return='boolean' name='setPolyToPoly'><parameter type='float[]' name='src'/><parameter type='int' name='srcIndex'/><parameter type='float[]' name='dst'/><parameter type='int' name='dstIndex'/><parameter type='int' name='pointCount'/></method><method return='boolean' name='setRectToRect'><parameter type='android.graphics.RectF' name='src'/><parameter type='android.graphics.RectF' name='dst'/><parameter type='android.graphics.Matrix.ScaleToFit' name='stf'/></method><method name='setRotate'><parameter type='float' name='degrees'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method name='setRotate'><parameter type='float' name='degrees'/></method><method name='setScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method name='setScale'><parameter type='float' name='sx'/><parameter type='float' name='sy'/></method><method name='setSinCos'><parameter type='float' name='sinValue'/><parameter type='float' name='cosValue'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method name='setSinCos'><parameter type='float' name='sinValue'/><parameter type='float' name='cosValue'/></method><method name='setSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/><parameter type='float' name='px'/><parameter type='float' name='py'/></method><method name='setSkew'><parameter type='float' name='kx'/><parameter type='float' name='ky'/></method><method name='setTranslate'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='setValues'><parameter type='float[]' name='values'/></method><method return='java.lang.String' name='toShortString'/></class><class extends='java.lang.Enum' static='true' name='Matrix.ScaleToFit' final='true'><method return='android.graphics.Matrix.ScaleToFit' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Matrix.ScaleToFit[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='Movie'><method return='android.graphics.Movie' native='true' static='true' name='decodeByteArray'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='android.graphics.Movie' static='true' name='decodeFile'><parameter type='java.lang.String' name='pathName'/></method><method return='android.graphics.Movie' native='true' static='true' name='decodeStream'><parameter type='java.io.InputStream' name='is'/></method><method native='true' name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method return='int' native='true' name='duration'/><method return='int' native='true' name='height'/><method return='boolean' native='true' name='isOpaque'/><method return='boolean' native='true' name='setTime'><parameter type='int' name='relativeMilliseconds'/></method><method return='int' native='true' name='width'/></class><class extends='java.lang.Object' name='NinePatch'><constructor type='android.graphics.NinePatch' name='NinePatch'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='byte[]' name='chunk'/><parameter type='java.lang.String' name='srcName'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.RectF' name='location'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Rect' name='location'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Rect' name='location'/><parameter type='android.graphics.Paint' name='paint'/></method><method return='int' name='getHeight'/><method return='android.graphics.Region' name='getTransparentRegion' final='true'><parameter type='android.graphics.Rect' name='location'/></method><method return='int' name='getWidth'/><method return='boolean' name='hasAlpha' final='true'/><method return='boolean' native='true' static='true' name='isNinePatchChunk'><parameter type='byte[]' name='chunk'/></method><method name='setPaint'><parameter type='android.graphics.Paint' name='p'/></method><method return='int' name='getDensity' api_added='4'/></class><class extends='java.lang.Object' name='Paint'><constructor type='android.graphics.Paint' name='Paint'/><constructor type='android.graphics.Paint' name='Paint'><parameter type='int' name='flags'/></constructor><constructor type='android.graphics.Paint' name='Paint'><parameter type='android.graphics.Paint' name='paint'/></constructor><method return='float' native='true' name='ascent'/><method return='int' native='true' name='breakText'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='float' name='maxWidth'/><parameter type='float[]' name='measuredWidth'/></method><method return='int' name='breakText'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='measureForwards'/><parameter type='float' name='maxWidth'/><parameter type='float[]' name='measuredWidth'/></method><method return='int' native='true' name='breakText'><parameter type='java.lang.String' name='text'/><parameter type='boolean' name='measureForwards'/><parameter type='float' name='maxWidth'/><parameter type='float[]' name='measuredWidth'/></method><method name='clearShadowLayer'/><method return='float' native='true' name='descent'/><method return='int' native='true' name='getAlpha'/><method return='int' native='true' name='getColor'/><method return='android.graphics.ColorFilter' name='getColorFilter'/><method return='boolean' name='getFillPath'><parameter type='android.graphics.Path' name='src'/><parameter type='android.graphics.Path' name='dst'/></method><method return='int' native='true' name='getFlags'/><method return='float' native='true' name='getFontMetrics'><parameter type='android.graphics.Paint.FontMetrics' name='metrics'/></method><method return='android.graphics.Paint.FontMetrics' name='getFontMetrics'/><method return='int' native='true' name='getFontMetricsInt'><parameter type='android.graphics.Paint.FontMetricsInt' name='fmi'/></method><method return='android.graphics.Paint.FontMetricsInt' name='getFontMetricsInt'/><method return='float' name='getFontSpacing'/><method return='android.graphics.MaskFilter' name='getMaskFilter'/><method return='android.graphics.PathEffect' name='getPathEffect'/><method return='android.graphics.Rasterizer' name='getRasterizer'/><method return='android.graphics.Shader' name='getShader'/><method return='android.graphics.Paint.Cap' name='getStrokeCap'/><method return='android.graphics.Paint.Join' name='getStrokeJoin'/><method return='float' native='true' name='getStrokeMiter'/><method return='float' native='true' name='getStrokeWidth'/><method return='android.graphics.Paint.Style' name='getStyle'/><method return='android.graphics.Paint.Align' name='getTextAlign'/><method name='getTextBounds'><parameter type='java.lang.String' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.graphics.Rect' name='bounds'/></method><method name='getTextBounds'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='android.graphics.Rect' name='bounds'/></method><method name='getTextPath'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Path' name='path'/></method><method name='getTextPath'><parameter type='java.lang.String' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='android.graphics.Path' name='path'/></method><method return='float' native='true' name='getTextScaleX'/><method return='float' native='true' name='getTextSize'/><method return='float' native='true' name='getTextSkewX'/><method return='int' name='getTextWidths'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/><parameter type='float[]' name='widths'/></method><method return='int' name='getTextWidths'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float[]' name='widths'/></method><method return='int' name='getTextWidths'><parameter type='java.lang.String' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float[]' name='widths'/></method><method return='int' name='getTextWidths'><parameter type='java.lang.String' name='text'/><parameter type='float[]' name='widths'/></method><method return='android.graphics.Typeface' name='getTypeface'/><method return='android.graphics.Xfermode' name='getXfermode'/><method return='boolean' name='isAntiAlias' final='true'/><method return='boolean' name='isDither' final='true'/><method return='boolean' name='isFakeBoldText' final='true'/><method return='boolean' name='isFilterBitmap' final='true'/><method deprecated='16' return='boolean' name='isLinearText' final='true'/><method return='boolean' name='isStrikeThruText' final='true'/><method return='boolean' name='isSubpixelText' final='true'/><method return='boolean' name='isUnderlineText' final='true'/><method return='float' native='true' name='measureText'><parameter type='char[]' name='text'/><parameter type='int' name='index'/><parameter type='int' name='count'/></method><method return='float' native='true' name='measureText'><parameter type='java.lang.String' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='float' native='true' name='measureText'><parameter type='java.lang.String' name='text'/></method><method return='float' name='measureText'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='reset'/><method name='set'><parameter type='android.graphics.Paint' name='src'/></method><method name='setARGB'><parameter type='int' name='a'/><parameter type='int' name='r'/><parameter type='int' name='g'/><parameter type='int' name='b'/></method><method native='true' name='setAlpha'><parameter type='int' name='a'/></method><method native='true' name='setAntiAlias'><parameter type='boolean' name='aa'/></method><method native='true' name='setColor'><parameter type='int' name='color'/></method><method return='android.graphics.ColorFilter' name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='filter'/></method><method native='true' name='setDither'><parameter type='boolean' name='dither'/></method><method native='true' name='setFakeBoldText'><parameter type='boolean' name='fakeBoldText'/></method><method native='true' name='setFilterBitmap'><parameter type='boolean' name='filter'/></method><method native='true' name='setFlags'><parameter type='int' name='flags'/></method><method deprecated='16' native='true' name='setLinearText'><parameter type='boolean' name='linearText'/></method><method return='android.graphics.MaskFilter' name='setMaskFilter'><parameter type='android.graphics.MaskFilter' name='maskfilter'/></method><method return='android.graphics.PathEffect' name='setPathEffect'><parameter type='android.graphics.PathEffect' name='effect'/></method><method return='android.graphics.Rasterizer' name='setRasterizer'><parameter type='android.graphics.Rasterizer' name='rasterizer'/></method><method return='android.graphics.Shader' name='setShader'><parameter type='android.graphics.Shader' name='shader'/></method><method native='true' name='setShadowLayer'><parameter type='float' name='radius'/><parameter type='float' name='dx'/><parameter type='float' name='dy'/><parameter type='int' name='color'/></method><method native='true' name='setStrikeThruText'><parameter type='boolean' name='strikeThruText'/></method><method name='setStrokeCap'><parameter type='android.graphics.Paint.Cap' name='cap'/></method><method name='setStrokeJoin'><parameter type='android.graphics.Paint.Join' name='join'/></method><method native='true' name='setStrokeMiter'><parameter type='float' name='miter'/></method><method native='true' name='setStrokeWidth'><parameter type='float' name='width'/></method><method name='setStyle'><parameter type='android.graphics.Paint.Style' name='style'/></method><method native='true' name='setSubpixelText'><parameter type='boolean' name='subpixelText'/></method><method name='setTextAlign'><parameter type='android.graphics.Paint.Align' name='align'/></method><method native='true' name='setTextScaleX'><parameter type='float' name='scaleX'/></method><method native='true' name='setTextSize'><parameter type='float' name='textSize'/></method><method native='true' name='setTextSkewX'><parameter type='float' name='skewX'/></method><method return='android.graphics.Typeface' name='setTypeface'><parameter type='android.graphics.Typeface' name='typeface'/></method><method native='true' name='setUnderlineText'><parameter type='boolean' name='underlineText'/></method><method return='android.graphics.Xfermode' name='setXfermode'><parameter type='android.graphics.Xfermode' name='xfermode'/></method><method return='int' name='getHinting' api_added='14'/><method name='setHinting' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Enum' static='true' name='Paint.Align' final='true'><method return='android.graphics.Paint.Align' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Paint.Align[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='Paint.Cap' final='true'><method return='android.graphics.Paint.Cap' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Paint.Cap[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' static='true' name='Paint.FontMetrics'><constructor type='android.graphics.Paint.FontMetrics' name='Paint.FontMetrics'/></class><class extends='java.lang.Object' static='true' name='Paint.FontMetricsInt'><constructor type='android.graphics.Paint.FontMetricsInt' name='Paint.FontMetricsInt'/></class><class extends='java.lang.Enum' static='true' name='Paint.Join' final='true'><method return='android.graphics.Paint.Join' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Paint.Join[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='Paint.Style' final='true'><method return='android.graphics.Paint.Style' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Paint.Style[]' static='true' name='values' final='true'/></class><class extends='android.graphics.DrawFilter' name='PaintFlagsDrawFilter'><constructor type='android.graphics.PaintFlagsDrawFilter' name='PaintFlagsDrawFilter'><parameter type='int' name='clearBits'/><parameter type='int' name='setBits'/></constructor></class><class extends='java.lang.Object' name='Path'><constructor type='android.graphics.Path' name='Path'/><constructor type='android.graphics.Path' name='Path'><parameter type='android.graphics.Path' name='src'/></constructor><method name='addArc'><parameter type='android.graphics.RectF' name='oval'/><parameter type='float' name='startAngle'/><parameter type='float' name='sweepAngle'/></method><method name='addCircle'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='radius'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='addOval'><parameter type='android.graphics.RectF' name='oval'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='addPath'><parameter type='android.graphics.Path' name='src'/><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='addPath'><parameter type='android.graphics.Path' name='src'/></method><method name='addPath'><parameter type='android.graphics.Path' name='src'/><parameter type='android.graphics.Matrix' name='matrix'/></method><method name='addRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='addRect'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='addRoundRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='float' name='rx'/><parameter type='float' name='ry'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='addRoundRect'><parameter type='android.graphics.RectF' name='rect'/><parameter type='float[]' name='radii'/><parameter type='android.graphics.Path.Direction' name='dir'/></method><method name='arcTo'><parameter type='android.graphics.RectF' name='oval'/><parameter type='float' name='startAngle'/><parameter type='float' name='sweepAngle'/><parameter type='boolean' name='forceMoveTo'/></method><method name='arcTo'><parameter type='android.graphics.RectF' name='oval'/><parameter type='float' name='startAngle'/><parameter type='float' name='sweepAngle'/></method><method name='close'/><method name='computeBounds'><parameter type='android.graphics.RectF' name='bounds'/><parameter type='boolean' name='exact'/></method><method name='cubicTo'><parameter type='float' name='x1'/><parameter type='float' name='y1'/><parameter type='float' name='x2'/><parameter type='float' name='y2'/><parameter type='float' name='x3'/><parameter type='float' name='y3'/></method><method return='android.graphics.Path.FillType' name='getFillType'/><method name='incReserve'><parameter type='int' name='extraPtCount'/></method><method return='boolean' name='isEmpty'/><method return='boolean' name='isInverseFillType'/><method return='boolean' name='isRect'><parameter type='android.graphics.RectF' name='rect'/></method><method name='lineTo'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='moveTo'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='offset'><parameter type='float' name='dx'/><parameter type='float' name='dy'/><parameter type='android.graphics.Path' name='dst'/></method><method name='offset'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='quadTo'><parameter type='float' name='x1'/><parameter type='float' name='y1'/><parameter type='float' name='x2'/><parameter type='float' name='y2'/></method><method name='rCubicTo'><parameter type='float' name='x1'/><parameter type='float' name='y1'/><parameter type='float' name='x2'/><parameter type='float' name='y2'/><parameter type='float' name='x3'/><parameter type='float' name='y3'/></method><method name='rLineTo'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='rMoveTo'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='rQuadTo'><parameter type='float' name='dx1'/><parameter type='float' name='dy1'/><parameter type='float' name='dx2'/><parameter type='float' name='dy2'/></method><method name='reset'/><method name='rewind'/><method name='set'><parameter type='android.graphics.Path' name='src'/></method><method name='setFillType'><parameter type='android.graphics.Path.FillType' name='ft'/></method><method name='setLastPoint'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='toggleInverseFillType'/><method name='transform'><parameter type='android.graphics.Matrix' name='matrix'/><parameter type='android.graphics.Path' name='dst'/></method><method name='transform'><parameter type='android.graphics.Matrix' name='matrix'/></method></class><class extends='java.lang.Enum' static='true' name='Path.Direction' final='true'><method return='android.graphics.Path.Direction' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Path.Direction[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='Path.FillType' final='true'><method return='android.graphics.Path.FillType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Path.FillType[]' static='true' name='values' final='true'/></class><class extends='android.graphics.PathEffect' name='PathDashPathEffect'><constructor type='android.graphics.PathDashPathEffect' name='PathDashPathEffect'><parameter type='android.graphics.Path' name='shape'/><parameter type='float' name='advance'/><parameter type='float' name='phase'/><parameter type='android.graphics.PathDashPathEffect.Style' name='style'/></constructor></class><class extends='java.lang.Enum' static='true' name='PathDashPathEffect.Style' final='true'><method return='android.graphics.PathDashPathEffect.Style' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.PathDashPathEffect.Style[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='PathEffect'><constructor type='android.graphics.PathEffect' name='PathEffect'/></class><class extends='java.lang.Object' name='PathMeasure'><constructor type='android.graphics.PathMeasure' name='PathMeasure'/><constructor type='android.graphics.PathMeasure' name='PathMeasure'><parameter type='android.graphics.Path' name='path'/><parameter type='boolean' name='forceClosed'/></constructor><method return='float' name='getLength'/><method return='boolean' name='getMatrix'><parameter type='float' name='distance'/><parameter type='android.graphics.Matrix' name='matrix'/><parameter type='int' name='flags'/></method><method return='boolean' name='getPosTan'><parameter type='float' name='distance'/><parameter type='float[]' name='pos'/><parameter type='float[]' name='tan'/></method><method return='boolean' name='getSegment'><parameter type='float' name='startD'/><parameter type='float' name='stopD'/><parameter type='android.graphics.Path' name='dst'/><parameter type='boolean' name='startWithMoveTo'/></method><method return='boolean' name='isClosed'/><method return='boolean' name='nextContour'/><method name='setPath'><parameter type='android.graphics.Path' name='path'/><parameter type='boolean' name='forceClosed'/></method></class><class extends='java.lang.Object' name='Picture'><constructor type='android.graphics.Picture' name='Picture'/><constructor type='android.graphics.Picture' name='Picture'><parameter type='android.graphics.Picture' name='src'/></constructor><method return='android.graphics.Canvas' name='beginRecording'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='android.graphics.Picture' static='true' name='createFromStream'><parameter type='java.io.InputStream' name='stream'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='endRecording'/><method return='int' native='true' name='getHeight'/><method return='int' native='true' name='getWidth'/><method name='writeToStream'><parameter type='java.io.OutputStream' name='stream'/></method></class><class extends='java.lang.Object' name='PixelFormat'><constructor type='android.graphics.PixelFormat' name='PixelFormat'/><method return='boolean' static='true' name='formatHasAlpha'><parameter type='int' name='format'/></method><method native='true' static='true' name='getPixelFormatInfo'><parameter type='int' name='format'/><parameter type='android.graphics.PixelFormat' name='info'/></method></class><class extends='android.graphics.Xfermode' deprecated='16' name='PixelXorXfermode'><constructor type='android.graphics.PixelXorXfermode' name='PixelXorXfermode'><parameter type='int' name='opColor'/></constructor></class><class extends='java.lang.Object' name='Point'><constructor type='android.graphics.Point' name='Point'/><constructor type='android.graphics.Point' name='Point'><parameter type='int' name='x'/><parameter type='int' name='y'/></constructor><constructor type='android.graphics.Point' name='Point'><parameter type='android.graphics.Point' name='src'/></constructor><method return='boolean' name='equals' final='true'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='negate' final='true'/><method name='offset' final='true'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='set'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='int' name='describeContents' api_added='13'/><method name='readFromParcel' api_added='13'><parameter type='android.os.Parcel' name='in'/></method><method name='writeToParcel' api_added='13'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='PointF'><constructor type='android.graphics.PointF' name='PointF'/><constructor type='android.graphics.PointF' name='PointF'><parameter type='float' name='x'/><parameter type='float' name='y'/></constructor><constructor type='android.graphics.PointF' name='PointF'><parameter type='android.graphics.Point' name='p'/></constructor><method return='boolean' name='equals' final='true'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method return='float' name='length' final='true'/><method return='float' static='true' name='length'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='negate' final='true'/><method name='offset' final='true'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='set' final='true'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='set' final='true'><parameter type='android.graphics.PointF' name='p'/></method><method return='int' name='describeContents' api_added='13'/><method name='readFromParcel' api_added='13'><parameter type='android.os.Parcel' name='in'/></method><method name='writeToParcel' api_added='13'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='PorterDuff'><constructor type='android.graphics.PorterDuff' name='PorterDuff'/></class><class extends='java.lang.Enum' static='true' name='PorterDuff.Mode' final='true'><method return='android.graphics.PorterDuff.Mode' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.PorterDuff.Mode[]' static='true' name='values' final='true'/></class><class extends='android.graphics.ColorFilter' name='PorterDuffColorFilter'><constructor type='android.graphics.PorterDuffColorFilter' name='PorterDuffColorFilter'><parameter type='int' name='srcColor'/><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></constructor></class><class extends='android.graphics.Xfermode' name='PorterDuffXfermode'><constructor type='android.graphics.PorterDuffXfermode' name='PorterDuffXfermode'><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></constructor></class><class extends='android.graphics.Shader' name='RadialGradient'><constructor type='android.graphics.RadialGradient' name='RadialGradient'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='radius'/><parameter type='int[]' name='colors'/><parameter type='float[]' name='positions'/><parameter type='android.graphics.Shader.TileMode' name='tile'/></constructor><constructor type='android.graphics.RadialGradient' name='RadialGradient'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='radius'/><parameter type='int' name='color0'/><parameter type='int' name='color1'/><parameter type='android.graphics.Shader.TileMode' name='tile'/></constructor></class><class extends='java.lang.Object' name='Rasterizer'><constructor type='android.graphics.Rasterizer' name='Rasterizer'/></class><class extends='java.lang.Object' name='Rect' final='true'><constructor type='android.graphics.Rect' name='Rect'/><constructor type='android.graphics.Rect' name='Rect'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></constructor><constructor type='android.graphics.Rect' name='Rect'><parameter type='android.graphics.Rect' name='r'/></constructor><method return='int' name='centerX' final='true'/><method return='int' name='centerY' final='true'/><method return='boolean' name='contains'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='boolean' name='contains'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' name='contains'><parameter type='android.graphics.Rect' name='r'/></method><method return='int' name='describeContents'/><method return='float' name='exactCenterX' final='true'/><method return='float' name='exactCenterY' final='true'/><method return='int' name='height' final='true'/><method name='inset'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method return='boolean' name='intersect'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' name='intersect'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' name='intersects'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' static='true' name='intersects'><parameter type='android.graphics.Rect' name='a'/><parameter type='android.graphics.Rect' name='b'/></method><method return='boolean' name='isEmpty' final='true'/><method name='offset'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='offsetTo'><parameter type='int' name='newLeft'/><parameter type='int' name='newTop'/></method><method name='readFromParcel'><parameter type='android.os.Parcel' name='in'/></method><method name='set'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='set'><parameter type='android.graphics.Rect' name='src'/></method><method name='setEmpty'/><method return='boolean' name='setIntersect'><parameter type='android.graphics.Rect' name='a'/><parameter type='android.graphics.Rect' name='b'/></method><method name='sort'/><method name='union'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='union'><parameter type='android.graphics.Rect' name='r'/></method><method name='union'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='int' name='width' final='true'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='toShortString' api_added='3'/><method return='java.lang.String' name='flattenToString' api_added='7'/><method return='android.graphics.Rect' static='true' name='unflattenFromString' api_added='7'><parameter type='java.lang.String' name='str'/></method></class><class extends='java.lang.Object' name='RectF'><constructor type='android.graphics.RectF' name='RectF'/><constructor type='android.graphics.RectF' name='RectF'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></constructor><constructor type='android.graphics.RectF' name='RectF'><parameter type='android.graphics.RectF' name='r'/></constructor><constructor type='android.graphics.RectF' name='RectF'><parameter type='android.graphics.Rect' name='r'/></constructor><method return='float' name='centerX' final='true'/><method return='float' name='centerY' final='true'/><method return='boolean' name='contains'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method return='boolean' name='contains'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method return='boolean' name='contains'><parameter type='android.graphics.RectF' name='r'/></method><method return='float' name='height' final='true'/><method name='inset'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method return='boolean' name='intersect'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method return='boolean' name='intersect'><parameter type='android.graphics.RectF' name='r'/></method><method return='boolean' name='intersects'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method return='boolean' static='true' name='intersects'><parameter type='android.graphics.RectF' name='a'/><parameter type='android.graphics.RectF' name='b'/></method><method return='boolean' name='isEmpty' final='true'/><method name='offset'><parameter type='float' name='dx'/><parameter type='float' name='dy'/></method><method name='offsetTo'><parameter type='float' name='newLeft'/><parameter type='float' name='newTop'/></method><method name='round'><parameter type='android.graphics.Rect' name='dst'/></method><method name='roundOut'><parameter type='android.graphics.Rect' name='dst'/></method><method name='set'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method name='set'><parameter type='android.graphics.RectF' name='src'/></method><method name='set'><parameter type='android.graphics.Rect' name='src'/></method><method name='setEmpty'/><method return='boolean' name='setIntersect'><parameter type='android.graphics.RectF' name='a'/><parameter type='android.graphics.RectF' name='b'/></method><method name='sort'/><method name='union'><parameter type='float' name='left'/><parameter type='float' name='top'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/></method><method name='union'><parameter type='android.graphics.RectF' name='r'/></method><method name='union'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method return='float' name='width' final='true'/><method return='int' name='describeContents' api_added='3'/><method name='readFromParcel' api_added='3'><parameter type='android.os.Parcel' name='in'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='toShortString' api_added='14'/></class><class extends='java.lang.Object' name='Region'><constructor type='android.graphics.Region' name='Region'/><constructor type='android.graphics.Region' name='Region'><parameter type='android.graphics.Region' name='region'/></constructor><constructor type='android.graphics.Region' name='Region'><parameter type='android.graphics.Rect' name='r'/></constructor><constructor type='android.graphics.Region' name='Region'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></constructor><method return='boolean' native='true' name='contains'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='int' name='describeContents'/><method return='android.graphics.Path' name='getBoundaryPath'/><method return='boolean' name='getBoundaryPath'><parameter type='android.graphics.Path' name='path'/></method><method return='android.graphics.Rect' name='getBounds'/><method return='boolean' name='getBounds'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' native='true' name='isComplex'/><method return='boolean' native='true' name='isEmpty'/><method return='boolean' native='true' name='isRect'/><method return='boolean' name='op'><parameter type='android.graphics.Rect' name='r'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='op'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='op'><parameter type='android.graphics.Region' name='region'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='op'><parameter type='android.graphics.Rect' name='rect'/><parameter type='android.graphics.Region' name='region'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='op'><parameter type='android.graphics.Region' name='region1'/><parameter type='android.graphics.Region' name='region2'/><parameter type='android.graphics.Region.Op' name='op'/></method><method return='boolean' name='quickContains'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' native='true' name='quickContains'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' name='quickReject'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' native='true' name='quickReject'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' native='true' name='quickReject'><parameter type='android.graphics.Region' name='rgn'/></method><method return='boolean' name='set'><parameter type='android.graphics.Region' name='region'/></method><method return='boolean' name='set'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' name='set'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setEmpty'/><method return='boolean' name='setPath'><parameter type='android.graphics.Path' name='path'/><parameter type='android.graphics.Region' name='clip'/></method><method name='translate'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method native='true' name='translate'><parameter type='int' name='dx'/><parameter type='int' name='dy'/><parameter type='android.graphics.Region' name='dst'/></method><method return='boolean' name='union' final='true'><parameter type='android.graphics.Rect' name='r'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='p'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Enum' static='true' name='Region.Op' final='true'><method return='android.graphics.Region.Op' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Region.Op[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='RegionIterator'><constructor type='android.graphics.RegionIterator' name='RegionIterator'><parameter type='android.graphics.Region' name='region'/></constructor><method return='boolean' name='next' final='true'><parameter type='android.graphics.Rect' name='r'/></method></class><class extends='java.lang.Object' name='Shader'><constructor type='android.graphics.Shader' name='Shader'/><method return='boolean' name='getLocalMatrix'><parameter type='android.graphics.Matrix' name='localM'/></method><method name='setLocalMatrix'><parameter type='android.graphics.Matrix' name='localM'/></method></class><class extends='java.lang.Enum' static='true' name='Shader.TileMode' final='true'><method return='android.graphics.Shader.TileMode' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.Shader.TileMode[]' static='true' name='values' final='true'/></class><class extends='android.graphics.PathEffect' name='SumPathEffect'><constructor type='android.graphics.SumPathEffect' name='SumPathEffect'><parameter type='android.graphics.PathEffect' name='first'/><parameter type='android.graphics.PathEffect' name='second'/></constructor></class><class extends='android.graphics.Shader' name='SweepGradient'><constructor type='android.graphics.SweepGradient' name='SweepGradient'><parameter type='float' name='cx'/><parameter type='float' name='cy'/><parameter type='int[]' name='colors'/><parameter type='float[]' name='positions'/></constructor><constructor type='android.graphics.SweepGradient' name='SweepGradient'><parameter type='float' name='cx'/><parameter type='float' name='cy'/><parameter type='int' name='color0'/><parameter type='int' name='color1'/></constructor></class><class extends='java.lang.Object' name='Typeface'><method return='android.graphics.Typeface' static='true' name='create'><parameter type='java.lang.String' name='familyName'/><parameter type='int' name='style'/></method><method return='android.graphics.Typeface' static='true' name='create'><parameter type='android.graphics.Typeface' name='family'/><parameter type='int' name='style'/></method><method return='android.graphics.Typeface' static='true' name='createFromAsset'><parameter type='android.content.res.AssetManager' name='mgr'/><parameter type='java.lang.String' name='path'/></method><method return='android.graphics.Typeface' static='true' name='defaultFromStyle'><parameter type='int' name='style'/></method><method return='int' name='getStyle'/><method return='boolean' name='isBold' final='true'/><method return='boolean' name='isItalic' final='true'/><method return='android.graphics.Typeface' static='true' name='createFromFile' api_added='4'><parameter type='java.io.File' name='path'/></method><method return='android.graphics.Typeface' static='true' name='createFromFile' api_added='4'><parameter type='java.lang.String' name='path'/></method></class><class extends='java.lang.Object' name='Xfermode'><constructor type='android.graphics.Xfermode' name='Xfermode'/></class><class extends='java.lang.Object' name='ImageFormat' api_added='8'><constructor type='android.graphics.ImageFormat' name='ImageFormat' api_added='8'/><method return='int' static='true' name='getBitsPerPixel' api_added='8'><parameter type='int' name='format'/></method></class><class extends='java.lang.Object' name='YuvImage' api_added='8'><constructor type='android.graphics.YuvImage' name='YuvImage' api_added='8'><parameter type='byte[]' name='yuv'/><parameter type='int' name='format'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int[]' name='strides'/></constructor><method return='boolean' name='compressToJpeg' api_added='8'><parameter type='android.graphics.Rect' name='rectangle'/><parameter type='int' name='quality'/><parameter type='java.io.OutputStream' name='stream'/></method><method return='int' name='getHeight' api_added='8'/><method return='int[]' name='getStrides' api_added='8'/><method return='int' name='getWidth' api_added='8'/><method return='byte[]' name='getYuvData' api_added='8'/><method return='int' name='getYuvFormat' api_added='8'/></class><class extends='java.lang.Object' name='BitmapRegionDecoder' api_added='10' final='true'><method return='android.graphics.Bitmap' name='decodeRegion' api_added='10'><parameter type='android.graphics.Rect' name='rect'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method><method return='int' name='getHeight' api_added='10'/><method return='int' name='getWidth' api_added='10'/><method return='boolean' name='isRecycled' api_added='10' final='true'/><method return='android.graphics.BitmapRegionDecoder' static='true' name='newInstance' api_added='10'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='boolean' name='isShareable'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.graphics.BitmapRegionDecoder' static='true' name='newInstance' api_added='10'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='boolean' name='isShareable'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.graphics.BitmapRegionDecoder' static='true' name='newInstance' api_added='10'><parameter type='java.io.InputStream' name='is'/><parameter type='boolean' name='isShareable'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.graphics.BitmapRegionDecoder' static='true' name='newInstance' api_added='10'><parameter type='java.lang.String' name='pathName'/><parameter type='boolean' name='isShareable'/><exception type='java.io.IOException' name='IOException'/></method><method name='recycle' api_added='10'/></class><class extends='java.lang.Object' name='SurfaceTexture' api_added='11'><constructor type='android.graphics.SurfaceTexture' name='SurfaceTexture' api_added='11'><parameter type='int' name='texName'/></constructor><method name='getTransformMatrix' api_added='11'><parameter type='float[]' name='mtx'/></method><method name='setOnFrameAvailableListener' api_added='11'><parameter type='android.graphics.SurfaceTexture.OnFrameAvailableListener' name='l'/></method><method name='updateTexImage' api_added='11'/><method return='long' name='getTimestamp' api_added='14'/><method name='release' api_added='14'/><method name='setDefaultBufferSize' api_added='15'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method name='attachToGLContext' api_added='16'><parameter type='int' name='arg0'/></method><method name='detachFromGLContext' api_added='16'/></class><class extends='java.lang.Exception' static='true' name='SurfaceTexture.OutOfResourcesException' api_added='11'><constructor type='android.graphics.SurfaceTexture.OutOfResourcesException' name='SurfaceTexture.OutOfResourcesException' api_added='11'/><constructor type='android.graphics.SurfaceTexture.OutOfResourcesException' name='SurfaceTexture.OutOfResourcesException' api_added='11'><parameter type='java.lang.String' name='name'/></constructor></class><interface abstract='true' static='true' name='SurfaceTexture.OnFrameAvailableListener' api_added='11'><method abstract='true' name='onFrameAvailable' api_added='11'><parameter type='android.graphics.SurfaceTexture' name='surfaceTexture'/></method></interface></package><package name='android.graphics.drawable'><class extends='android.graphics.drawable.DrawableContainer' name='AnimationDrawable'><constructor type='android.graphics.drawable.AnimationDrawable' name='AnimationDrawable'/><method name='addFrame'><parameter type='android.graphics.drawable.Drawable' name='frame'/><parameter type='int' name='duration'/></method><method return='int' name='getDuration'><parameter type='int' name='i'/></method><method return='android.graphics.drawable.Drawable' name='getFrame'><parameter type='int' name='index'/></method><method return='int' name='getNumberOfFrames'/><method return='boolean' name='isOneShot'/><method return='boolean' name='isRunning'/><method name='run'/><method name='setOneShot'><parameter type='boolean' name='oneShot'/></method><method name='start'/><method name='stop'/></class><class extends='android.graphics.drawable.Drawable' name='BitmapDrawable'><constructor deprecated='4' type='android.graphics.drawable.BitmapDrawable' name='BitmapDrawable'/><constructor type='android.graphics.drawable.BitmapDrawable' name='BitmapDrawable'><parameter type='android.graphics.Bitmap' name='bitmap'/></constructor><constructor type='android.graphics.drawable.BitmapDrawable' name='BitmapDrawable'><parameter type='java.lang.String' name='filepath'/></constructor><constructor type='android.graphics.drawable.BitmapDrawable' name='BitmapDrawable'><parameter type='java.io.InputStream' name='is'/></constructor><constructor type='android.graphics.drawable.deprecated BitmapDrawable' name='deprecated BitmapDrawable' api_added='14'/><constructor type='android.graphics.drawable.deprecated BitmapDrawable' name='deprecated BitmapDrawable' api_added='14'/><constructor type='android.graphics.drawable.deprecated BitmapDrawable' name='deprecated BitmapDrawable' api_added='14'/><constructor type='android.graphics.drawable.deprecated BitmapDrawable' name='deprecated BitmapDrawable' api_added='14'/><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='android.graphics.Bitmap' name='getBitmap' final='true'/><method return='android.graphics.drawable.Drawable.ConstantState' name='getConstantState' final='true'/><method return='int' name='getGravity'/><method return='int' name='getOpacity'/><method return='android.graphics.Paint' name='getPaint' final='true'/><method return='android.graphics.Shader.TileMode' name='getTileModeX'/><method return='android.graphics.Shader.TileMode' name='getTileModeY'/><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setAntiAlias'><parameter type='boolean' name='aa'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setTileModeX'><parameter type='android.graphics.Shader.TileMode' name='mode'/></method><method name='setTileModeXY'><parameter type='android.graphics.Shader.TileMode' name='xmode'/><parameter type='android.graphics.Shader.TileMode' name='ymode'/></method><method name='setTileModeY' final='true'><parameter type='android.graphics.Shader.TileMode' name='mode'/></method><method name='setTargetDensity' api_added='4'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='setTargetDensity' api_added='4'><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method name='setTargetDensity' api_added='4'><parameter type='int' name='density'/></method></class><class extends='android.graphics.drawable.Drawable' name='ClipDrawable'><constructor type='android.graphics.drawable.ClipDrawable' name='ClipDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/><parameter type='int' name='gravity'/><parameter type='int' name='orientation'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method></class><class extends='android.graphics.drawable.Drawable' name='ColorDrawable'><constructor type='android.graphics.drawable.ColorDrawable' name='ColorDrawable'/><constructor type='android.graphics.drawable.ColorDrawable' name='ColorDrawable'><parameter type='int' name='color'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getAlpha'/><method return='int' name='getOpacity'/><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='colorFilter'/></method><method return='int' name='getColor' api_added='11'/><method name='setColor' api_added='11'><parameter type='int' name='color'/></method></class><class extends='java.lang.Object' abstract='true' name='Drawable'><constructor type='android.graphics.drawable.Drawable' name='Drawable'/><method name='clearColorFilter'/><method name='copyBounds' final='true'><parameter type='android.graphics.Rect' name='bounds'/></method><method return='android.graphics.Rect' name='copyBounds' final='true'/><method return='android.graphics.drawable.Drawable' static='true' name='createFromPath'><parameter type='java.lang.String' name='pathName'/></method><method return='android.graphics.drawable.Drawable' static='true' name='createFromStream'><parameter type='java.io.InputStream' name='is'/><parameter type='java.lang.String' name='srcName'/></method><method return='android.graphics.drawable.Drawable' static='true' name='createFromXml'><parameter type='android.content.res.Resources' name='r'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='android.graphics.drawable.Drawable' static='true' name='createFromXmlInner'><parameter type='android.content.res.Resources' name='r'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='android.graphics.Rect' name='getBounds' final='true'/><method return='int' name='getChangingConfigurations'/><method return='android.graphics.drawable.Drawable.ConstantState' name='getConstantState'/><method return='android.graphics.drawable.Drawable' name='getCurrent'/><method return='int' name='getIntrinsicHeight'/><method return='int' name='getIntrinsicWidth'/><method return='int' name='getLevel' final='true'/><method return='int' name='getMinimumHeight'/><method return='int' name='getMinimumWidth'/><method return='int' abstract='true' name='getOpacity'/><method return='boolean' name='getPadding'><parameter type='android.graphics.Rect' name='padding'/></method><method return='int[]' name='getState'/><method return='android.graphics.Region' name='getTransparentRegion'/><method name='inflate'><parameter type='android.content.res.Resources' name='r'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method name='invalidateSelf'/><method return='boolean' name='isStateful'/><method return='boolean' name='isVisible' final='true'/><method visibility='protected' name='onBoundsChange'><parameter type='android.graphics.Rect' name='bounds'/></method><method visibility='protected' return='boolean' name='onLevelChange'><parameter type='int' name='level'/></method><method visibility='protected' return='boolean' name='onStateChange'><parameter type='int[]' name='state'/></method><method return='int' static='true' name='resolveOpacity'><parameter type='int' name='op1'/><parameter type='int' name='op2'/></method><method name='scheduleSelf'><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method abstract='true' name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setBounds'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setBounds'><parameter type='android.graphics.Rect' name='bounds'/></method><method name='setCallback' final='true'><parameter type='android.graphics.drawable.Drawable.Callback' name='cb'/></method><method name='setChangingConfigurations'><parameter type='int' name='configs'/></method><method abstract='true' name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='setColorFilter'><parameter type='int' name='color'/><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></method><method name='setDither'><parameter type='boolean' name='dither'/></method><method name='setFilterBitmap'><parameter type='boolean' name='filter'/></method><method return='boolean' name='setLevel' final='true'><parameter type='int' name='level'/></method><method return='boolean' name='setState'><parameter type='int[]' name='stateSet'/></method><method return='boolean' name='setVisible'><parameter type='boolean' name='visible'/><parameter type='boolean' name='restart'/></method><method name='unscheduleSelf'><parameter type='java.lang.Runnable' name='what'/></method><method return='android.graphics.drawable.Drawable' name='mutate' api_added='3'/><method return='android.graphics.drawable.Drawable' static='true' name='createFromResourceStream' api_added='4'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.util.TypedValue' name='value'/><parameter type='java.io.InputStream' name='is'/><parameter type='java.lang.String' name='srcName'/></method><method return='android.graphics.drawable.Drawable' static='true' name='createFromResourceStream' api_added='5'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.util.TypedValue' name='value'/><parameter type='java.io.InputStream' name='is'/><parameter type='java.lang.String' name='srcName'/><parameter type='android.graphics.BitmapFactory.Options' name='opts'/></method><method return='android.graphics.drawable.Drawable.Callback' name='getCallback' api_added='11'/><method name='jumpToCurrentState' api_added='11'/></class><class extends='java.lang.Object' abstract='true' static='true' name='Drawable.ConstantState'><constructor type='android.graphics.drawable.Drawable.ConstantState' name='Drawable.ConstantState'/><method return='int' abstract='true' name='getChangingConfigurations'/><method return='android.graphics.drawable.Drawable' abstract='true' name='newDrawable'/><method return='android.graphics.drawable.Drawable' name='newDrawable' api_added='5'><parameter type='android.content.res.Resources' name='res'/></method></class><class extends='android.graphics.drawable.Drawable' name='DrawableContainer'><constructor type='android.graphics.drawable.DrawableContainer' name='DrawableContainer'/><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method return='boolean' name='selectDrawable'><parameter type='int' name='idx'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method visibility='protected' name='setConstantState'><parameter type='android.graphics.drawable.DrawableContainer.DrawableContainerState' name='state'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method><method name='setEnterFadeDuration' api_added='11'><parameter type='int' name='ms'/></method><method name='setExitFadeDuration' api_added='11'><parameter type='int' name='ms'/></method></class><class extends='android.graphics.drawable.Drawable.ConstantState' abstract='true' static='true' name='DrawableContainer.DrawableContainerState'><method return='int' name='addChild' final='true'><parameter type='android.graphics.drawable.Drawable' name='dr'/></method><method return='boolean' synchronized='true' name='canConstantState'/><method return='int' name='getChangingConfigurations'/><method return='int' name='getChildCount' final='true'/><method return='android.graphics.drawable.Drawable[]' name='getChildren' final='true'/><method return='int' name='getConstantHeight' final='true'/><method return='int' name='getConstantMinimumHeight' final='true'/><method return='int' name='getConstantMinimumWidth' final='true'/><method return='android.graphics.Rect' name='getConstantPadding' final='true'/><method return='int' name='getConstantWidth' final='true'/><method return='int' name='getOpacity' final='true'/><method name='growArray'><parameter type='int' name='oldSize'/><parameter type='int' name='newSize'/></method><method return='boolean' name='isConstantSize' final='true'/><method return='boolean' name='isStateful' final='true'/><method name='setConstantSize' final='true'><parameter type='boolean' name='constant'/></method><method name='setVariablePadding' final='true'><parameter type='boolean' name='variable'/></method><method visibility='protected' name='computeConstantSize' api_added='11'/><method return='int' name='getEnterFadeDuration' api_added='11' final='true'/><method return='int' name='getExitFadeDuration' api_added='11' final='true'/><method name='setEnterFadeDuration' api_added='11' final='true'><parameter type='int' name='duration'/></method><method name='setExitFadeDuration' api_added='11' final='true'><parameter type='int' name='duration'/></method></class><class extends='android.graphics.drawable.Drawable' name='GradientDrawable'><constructor type='android.graphics.drawable.GradientDrawable' name='GradientDrawable'/><constructor type='android.graphics.drawable.GradientDrawable' name='GradientDrawable'><parameter type='android.graphics.drawable.GradientDrawable.Orientation' name='orientation'/><parameter type='int[]' name='colors'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColor'><parameter type='int' name='argb'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='setCornerRadii'><parameter type='float[]' name='radii'/></method><method name='setCornerRadius'><parameter type='float' name='radius'/></method><method name='setGradientCenter'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='setGradientRadius'><parameter type='float' name='gradientRadius'/></method><method name='setGradientType'><parameter type='int' name='gradient'/></method><method name='setShape'><parameter type='int' name='shape'/></method><method name='setSize'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='setStroke'><parameter type='int' name='width'/><parameter type='int' name='color'/></method><method name='setStroke'><parameter type='int' name='width'/><parameter type='int' name='color'/><parameter type='float' name='dashWidth'/><parameter type='float' name='dashGap'/></method><method name='setUseLevel'><parameter type='boolean' name='useLevel'/></method><method return='android.graphics.drawable.GradientDrawable.Orientation' name='getOrientation' api_added='16'/><method name='setColors' api_added='16'><parameter type='int[]' name='arg0'/></method><method name='setOrientation' api_added='16'><parameter type='android.graphics.drawable.GradientDrawable.Orientation' name='arg0'/></method></class><class extends='java.lang.Enum' static='true' name='GradientDrawable.Orientation' final='true'><method return='android.graphics.drawable.GradientDrawable.Orientation' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.graphics.drawable.GradientDrawable.Orientation[]' static='true' name='values' final='true'/></class><class extends='android.graphics.drawable.Drawable' name='InsetDrawable'><constructor type='android.graphics.drawable.InsetDrawable' name='InsetDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/><parameter type='int' name='inset'/></constructor><constructor type='android.graphics.drawable.InsetDrawable' name='InsetDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/><parameter type='int' name='insetLeft'/><parameter type='int' name='insetTop'/><parameter type='int' name='insetRight'/><parameter type='int' name='insetBottom'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method></class><class extends='android.graphics.drawable.Drawable' name='LayerDrawable'><constructor type='android.graphics.drawable.LayerDrawable' name='LayerDrawable'><parameter type='android.graphics.drawable.Drawable[]' name='array'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='android.graphics.drawable.Drawable' name='findDrawableByLayerId'><parameter type='int' name='id'/></method><method return='android.graphics.drawable.Drawable' name='getDrawable'><parameter type='int' name='index'/></method><method return='int' name='getId'><parameter type='int' name='index'/></method><method return='int' name='getNumberOfLayers'/><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method return='boolean' name='setDrawableByLayerId'><parameter type='int' name='id'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setId'><parameter type='int' name='index'/><parameter type='int' name='id'/></method><method name='setLayerInset'><parameter type='int' name='index'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method><method name='setOpacity' api_added='11'><parameter type='int' name='opacity'/></method></class><class extends='android.graphics.drawable.DrawableContainer' name='LevelListDrawable'><constructor type='android.graphics.drawable.LevelListDrawable' name='LevelListDrawable'/><method name='addLevel'><parameter type='int' name='low'/><parameter type='int' name='high'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method></class><class extends='android.graphics.drawable.Drawable' name='NinePatchDrawable'><constructor deprecated='4' type='android.graphics.drawable.NinePatchDrawable' name='NinePatchDrawable'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='byte[]' name='chunk'/><parameter type='android.graphics.Rect' name='padding'/><parameter type='java.lang.String' name='srcName'/></constructor><constructor type='android.graphics.drawable.NinePatchDrawable' name='NinePatchDrawable'><parameter type='android.graphics.NinePatch' name='patch'/></constructor><constructor type='android.graphics.drawable.deprecated NinePatchDrawable' name='deprecated NinePatchDrawable' api_added='14'><parameter type='android.graphics.Bitmap' name='arg0'/><parameter type='byte[]' name='arg1'/><parameter type='android.graphics.Rect' name='arg2'/><parameter type='java.lang.String' name='arg3'/></constructor><constructor type='android.graphics.drawable.deprecated NinePatchDrawable' name='deprecated NinePatchDrawable' api_added='14'><parameter type='android.graphics.Bitmap' name='arg0'/><parameter type='byte[]' name='arg1'/><parameter type='android.graphics.Rect' name='arg2'/><parameter type='java.lang.String' name='arg3'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method return='android.graphics.Paint' name='getPaint'/><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='setTargetDensity' api_added='4'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='setTargetDensity' api_added='4'><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method name='setTargetDensity' api_added='4'><parameter type='int' name='density'/></method></class><class extends='android.graphics.drawable.ShapeDrawable' name='PaintDrawable'><constructor type='android.graphics.drawable.PaintDrawable' name='PaintDrawable'/><constructor type='android.graphics.drawable.PaintDrawable' name='PaintDrawable'><parameter type='int' name='color'/></constructor><method name='setCornerRadii'><parameter type='float[]' name='radii'/></method><method name='setCornerRadius'><parameter type='float' name='radius'/></method></class><class extends='android.graphics.drawable.Drawable' name='PictureDrawable'><constructor type='android.graphics.drawable.PictureDrawable' name='PictureDrawable'><parameter type='android.graphics.Picture' name='picture'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method return='android.graphics.Picture' name='getPicture'/><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='colorFilter'/></method><method name='setPicture'><parameter type='android.graphics.Picture' name='picture'/></method></class><class extends='android.graphics.drawable.Drawable' name='RotateDrawable'><constructor type='android.graphics.drawable.RotateDrawable' name='RotateDrawable'/><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method><method return='android.graphics.drawable.Drawable' name='getDrawable' api_added='3'/></class><class extends='android.graphics.drawable.Drawable' name='ScaleDrawable'><constructor type='android.graphics.drawable.ScaleDrawable' name='ScaleDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/><parameter type='int' name='gravity'/><parameter type='float' name='scaleWidth'/><parameter type='float' name='scaleHeight'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method><method return='android.graphics.drawable.Drawable' name='getDrawable' api_added='3'/></class><class extends='android.graphics.drawable.Drawable' name='ShapeDrawable'><constructor type='android.graphics.drawable.ShapeDrawable' name='ShapeDrawable'/><constructor type='android.graphics.drawable.ShapeDrawable' name='ShapeDrawable'><parameter type='android.graphics.drawable.shapes.Shape' name='s'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='int' name='getOpacity'/><method return='android.graphics.Paint' name='getPaint'/><method return='android.graphics.drawable.ShapeDrawable.ShaderFactory' name='getShaderFactory'/><method return='android.graphics.drawable.shapes.Shape' name='getShape'/><method visibility='protected' return='boolean' name='inflateTag'><parameter type='java.lang.String' name='name'/><parameter type='android.content.res.Resources' name='r'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.util.AttributeSet' name='attrs'/></method><method visibility='protected' name='onDraw'><parameter type='android.graphics.drawable.shapes.Shape' name='shape'/><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method name='setIntrinsicHeight'><parameter type='int' name='height'/></method><method name='setIntrinsicWidth'><parameter type='int' name='width'/></method><method name='setPadding'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setPadding'><parameter type='android.graphics.Rect' name='padding'/></method><method name='setShaderFactory'><parameter type='android.graphics.drawable.ShapeDrawable.ShaderFactory' name='fact'/></method><method name='setShape'><parameter type='android.graphics.drawable.shapes.Shape' name='s'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='ShapeDrawable.ShaderFactory'><constructor type='android.graphics.drawable.ShapeDrawable.ShaderFactory' name='ShapeDrawable.ShaderFactory'/><method return='android.graphics.Shader' abstract='true' name='resize'><parameter type='int' name='width'/><parameter type='int' name='height'/></method></class><class extends='android.graphics.drawable.DrawableContainer' name='StateListDrawable'><constructor type='android.graphics.drawable.StateListDrawable' name='StateListDrawable'/><method name='addState'><parameter type='int[]' name='stateSet'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method></class><class extends='android.graphics.drawable.LayerDrawable' name='TransitionDrawable'><constructor type='android.graphics.drawable.TransitionDrawable' name='TransitionDrawable' api_added='3'><parameter type='android.graphics.drawable.Drawable[]' name='layers'/></constructor><method return='boolean' name='isCrossFadeEnabled'/><method name='resetTransition'/><method name='reverseTransition'><parameter type='int' name='duration'/></method><method name='setCrossFadeEnabled'><parameter type='boolean' name='enabled'/></method><method name='startTransition'><parameter type='int' name='durationMillis'/></method></class><interface abstract='true' static='true' name='Drawable.Callback'><method abstract='true' name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method abstract='true' name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method abstract='true' name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method></interface><interface abstract='true' name='Animatable' api_added='4'><method return='boolean' abstract='true' name='isRunning' api_added='4'/><method abstract='true' name='start' api_added='4'/><method abstract='true' name='stop' api_added='4'/></interface></package><package name='android.graphics.drawable.shapes'><class extends='android.graphics.drawable.shapes.RectShape' name='ArcShape'><constructor type='android.graphics.drawable.shapes.ArcShape' name='ArcShape'><parameter type='float' name='startAngle'/><parameter type='float' name='sweepAngle'/></constructor></class><class extends='android.graphics.drawable.shapes.RectShape' name='OvalShape'><constructor type='android.graphics.drawable.shapes.OvalShape' name='OvalShape'/></class><class extends='android.graphics.drawable.shapes.Shape' name='PathShape'><constructor type='android.graphics.drawable.shapes.PathShape' name='PathShape'><parameter type='android.graphics.Path' name='path'/><parameter type='float' name='stdWidth'/><parameter type='float' name='stdHeight'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Paint' name='paint'/></method></class><class extends='android.graphics.drawable.shapes.Shape' name='RectShape'><constructor type='android.graphics.drawable.shapes.RectShape' name='RectShape'/><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Paint' name='paint'/></method><method visibility='protected' return='android.graphics.RectF' name='rect' final='true'/></class><class extends='android.graphics.drawable.shapes.RectShape' name='RoundRectShape'><constructor type='android.graphics.drawable.shapes.RoundRectShape' name='RoundRectShape'><parameter type='float[]' name='outerRadii'/><parameter type='android.graphics.RectF' name='inset'/><parameter type='float[]' name='innerRadii'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Shape'><constructor type='android.graphics.drawable.shapes.Shape' name='Shape'/><method abstract='true' name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.graphics.Paint' name='paint'/></method><method return='float' name='getHeight' final='true'/><method return='float' name='getWidth' final='true'/><method return='boolean' name='hasAlpha'/><method visibility='protected' name='onResize'><parameter type='float' name='width'/><parameter type='float' name='height'/></method><method name='resize' final='true'><parameter type='float' name='width'/><parameter type='float' name='height'/></method><method return='android.graphics.drawable.shapes.Shape' name='clone' api_added='3'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method></class></package><package name='android.hardware'><class extends='java.lang.Object' name='Camera'><method name='autoFocus' final='true'><parameter type='android.hardware.Camera.AutoFocusCallback' name='cb'/></method><method return='android.hardware.Camera.Parameters' name='getParameters'/><method return='android.hardware.Camera' static='true' name='open'/><method name='release' final='true'/><method name='setErrorCallback' final='true'><parameter type='android.hardware.Camera.ErrorCallback' name='cb'/></method><method name='setParameters'><parameter type='android.hardware.Camera.Parameters' name='params'/></method><method name='setPreviewCallback' final='true'><parameter type='android.hardware.Camera.PreviewCallback' name='cb'/></method><method name='setPreviewDisplay' final='true'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method native='true' name='startPreview' final='true'/><method native='true' name='stopPreview' final='true'/><method name='takePicture' final='true'><parameter type='android.hardware.Camera.ShutterCallback' name='shutter'/><parameter type='android.hardware.Camera.PictureCallback' name='raw'/><parameter type='android.hardware.Camera.PictureCallback' name='jpeg'/></method><method name='setOneShotPreviewCallback' api_added='3' final='true'><parameter type='android.hardware.Camera.PreviewCallback' name='cb'/></method><method name='cancelAutoFocus' api_added='5' final='true'/><method native='true' name='lock' api_added='5' final='true'/><method name='takePicture' api_added='5' final='true'><parameter type='android.hardware.Camera.ShutterCallback' name='shutter'/><parameter type='android.hardware.Camera.PictureCallback' name='raw'/><parameter type='android.hardware.Camera.PictureCallback' name='postview'/><parameter type='android.hardware.Camera.PictureCallback' name='jpeg'/></method><method native='true' name='unlock' api_added='5' final='true'/><method native='true' name='addCallbackBuffer' api_added='8' final='true'><parameter type='byte[]' name='callbackBuffer'/></method><method native='true' name='reconnect' api_added='8' final='true'><exception type='java.io.IOException' name='IOException'/></method><method native='true' name='setDisplayOrientation' api_added='8' final='true'><parameter type='int' name='degrees'/></method><method name='setPreviewCallbackWithBuffer' api_added='8' final='true'><parameter type='android.hardware.Camera.PreviewCallback' name='cb'/></method><method name='setZoomChangeListener' api_added='8' final='true'><parameter type='android.hardware.Camera.OnZoomChangeListener' name='listener'/></method><method native='true' name='startSmoothZoom' api_added='8' final='true'><parameter type='int' name='value'/></method><method native='true' name='stopSmoothZoom' api_added='8' final='true'/><method native='true' static='true' name='getCameraInfo' api_added='9'><parameter type='int' name='cameraId'/><parameter type='android.hardware.Camera.CameraInfo' name='cameraInfo'/></method><method return='int' native='true' static='true' name='getNumberOfCameras' api_added='9'/><method return='android.hardware.Camera' static='true' name='open' api_added='9'><parameter type='int' name='cameraId'/></method><method native='true' name='setPreviewTexture' api_added='11' final='true'><parameter type='android.graphics.SurfaceTexture' name='surfaceTexture'/></method><method name='setFaceDetectionListener' api_added='14' final='true'><parameter type='android.hardware.Camera.FaceDetectionListener' name='arg0'/></method><method name='startFaceDetection' api_added='14' final='true'/><method name='stopFaceDetection' api_added='14' final='true'/><method name='setAutoFocusMoveCallback' api_added='16'><parameter type='android.hardware.Camera.AutoFocusMoveCallback' name='arg0'/></method></class><class extends='java.lang.Object' name='Camera.Parameters'><method return='java.lang.String' name='flatten'/><method return='java.lang.String' name='get'><parameter type='java.lang.String' name='key'/></method><method return='int' name='getInt'><parameter type='java.lang.String' name='key'/></method><method return='int' name='getPictureFormat'/><method return='android.hardware.Camera.Size' name='getPictureSize'/><method return='int' name='getPreviewFormat'/><method deprecated='9' return='int' name='getPreviewFrameRate'/><method return='android.hardware.Camera.Size' name='getPreviewSize'/><method name='remove'><parameter type='java.lang.String' name='key'/></method><method name='set'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method name='set'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/></method><method name='setPictureFormat'><parameter type='int' name='pixel_format'/></method><method name='setPictureSize'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='setPreviewFormat'><parameter type='int' name='pixel_format'/></method><method deprecated='9' name='setPreviewFrameRate'><parameter type='int' name='fps'/></method><method name='setPreviewSize'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='unflatten'><parameter type='java.lang.String' name='flattened'/></method><method return='java.lang.String' name='getAntibanding' api_added='5'/><method return='java.lang.String' name='getColorEffect' api_added='5'/><method return='java.lang.String' name='getFlashMode' api_added='5'/><method return='java.lang.String' name='getFocusMode' api_added='5'/><method return='int' name='getJpegQuality' api_added='5'/><method return='int' name='getJpegThumbnailQuality' api_added='5'/><method return='android.hardware.Camera.Size' name='getJpegThumbnailSize' api_added='5'/><method return='java.lang.String' name='getSceneMode' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedAntibanding' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedColorEffects' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedFlashModes' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedFocusModes' api_added='5'/><method return='java.util.List&lt;java.lang.Integer&gt;' name='getSupportedPictureFormats' api_added='5'/><method return='java.util.List&lt;android.hardware.Camera.Size&gt;' name='getSupportedPictureSizes' api_added='5'/><method return='java.util.List&lt;java.lang.Integer&gt;' name='getSupportedPreviewFormats' api_added='5'/><method deprecated='9' return='java.util.List&lt;java.lang.Integer&gt;' name='getSupportedPreviewFrameRates' api_added='5'/><method return='java.util.List&lt;android.hardware.Camera.Size&gt;' name='getSupportedPreviewSizes' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedSceneModes' api_added='5'/><method return='java.util.List&lt;java.lang.String&gt;' name='getSupportedWhiteBalance' api_added='5'/><method return='java.lang.String' name='getWhiteBalance' api_added='5'/><method name='removeGpsData' api_added='5'/><method name='setAntibanding' api_added='5'><parameter type='java.lang.String' name='antibanding'/></method><method name='setColorEffect' api_added='5'><parameter type='java.lang.String' name='value'/></method><method name='setFlashMode' api_added='5'><parameter type='java.lang.String' name='value'/></method><method name='setFocusMode' api_added='5'><parameter type='java.lang.String' name='value'/></method><method name='setGpsAltitude' api_added='5'><parameter type='double' name='altitude'/></method><method name='setGpsLatitude' api_added='5'><parameter type='double' name='latitude'/></method><method name='setGpsLongitude' api_added='5'><parameter type='double' name='longitude'/></method><method name='setGpsTimestamp' api_added='5'><parameter type='long' name='timestamp'/></method><method name='setJpegQuality' api_added='5'><parameter type='int' name='quality'/></method><method name='setJpegThumbnailQuality' api_added='5'><parameter type='int' name='quality'/></method><method name='setJpegThumbnailSize' api_added='5'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='setRotation' api_added='5'><parameter type='int' name='rotation'/></method><method name='setSceneMode' api_added='5'><parameter type='java.lang.String' name='value'/></method><method name='setWhiteBalance' api_added='5'><parameter type='java.lang.String' name='value'/></method><method return='int' name='getExposureCompensation' api_added='8'/><method return='float' name='getExposureCompensationStep' api_added='8'/><method return='float' name='getFocalLength' api_added='8'/><method return='float' name='getHorizontalViewAngle' api_added='8'/><method return='int' name='getMaxExposureCompensation' api_added='8'/><method return='int' name='getMaxZoom' api_added='8'/><method return='int' name='getMinExposureCompensation' api_added='8'/><method return='java.util.List&lt;android.hardware.Camera.Size&gt;' name='getSupportedJpegThumbnailSizes' api_added='8'/><method return='float' name='getVerticalViewAngle' api_added='8'/><method return='int' name='getZoom' api_added='8'/><method return='java.util.List&lt;java.lang.Integer&gt;' name='getZoomRatios' api_added='8'/><method return='boolean' name='isSmoothZoomSupported' api_added='8'/><method return='boolean' name='isZoomSupported' api_added='8'/><method name='setExposureCompensation' api_added='8'><parameter type='int' name='value'/></method><method name='setGpsProcessingMethod' api_added='8'><parameter type='java.lang.String' name='processing_method'/></method><method name='setZoom' api_added='8'><parameter type='int' name='value'/></method><method name='getFocusDistances' api_added='9'><parameter type='float[]' name='output'/></method><method name='getPreviewFpsRange' api_added='9'><parameter type='int[]' name='range'/></method><method return='java.util.List&lt;int[]&gt;' name='getSupportedPreviewFpsRange' api_added='9'/><method name='setPreviewFpsRange' api_added='9'><parameter type='int' name='min'/><parameter type='int' name='max'/></method><method return='android.hardware.Camera.Size' name='getPreferredPreviewSizeForVideo' api_added='11'/><method return='java.util.List&lt;android.hardware.Camera.Size&gt;' name='getSupportedVideoSizes' api_added='11'/><method return='boolean' name='getAutoExposureLock' api_added='14'/><method return='boolean' name='getAutoWhiteBalanceLock' api_added='14'/><method return='java.util.List&lt;android.hardware.Camera.Area&gt;' name='getFocusAreas' api_added='14'/><method return='int' name='getMaxNumDetectedFaces' api_added='14'/><method return='int' name='getMaxNumFocusAreas' api_added='14'/><method return='int' name='getMaxNumMeteringAreas' api_added='14'/><method return='java.util.List&lt;android.hardware.Camera.Area&gt;' name='getMeteringAreas' api_added='14'/><method return='boolean' name='isAutoExposureLockSupported' api_added='14'/><method return='boolean' name='isAutoWhiteBalanceLockSupported' api_added='14'/><method return='boolean' name='isVideoSnapshotSupported' api_added='14'/><method name='setAutoExposureLock' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setAutoWhiteBalanceLock' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setFocusAreas' api_added='14'><parameter type='java.util.List&lt;android.hardware.Camera.Area&gt;' name='arg0'/></method><method name='setMeteringAreas' api_added='14'><parameter type='java.util.List&lt;android.hardware.Camera.Area&gt;' name='arg0'/></method><method name='setRecordingHint' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='boolean' name='getVideoStabilization' api_added='15'/><method return='boolean' name='isVideoStabilizationSupported' api_added='15'/><method name='setVideoStabilization' api_added='15'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Object' name='Camera.Size'><constructor type='android.hardware.Camera.Size' name='Camera.Size'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor></class><class extends='java.lang.Object' name='SensorManager'><method deprecated='3' return='int' name='getSensors'/><method deprecated='3' return='boolean' name='registerListener'><parameter type='android.hardware.SensorListener' name='listener'/><parameter type='int' name='sensors'/></method><method deprecated='3' return='boolean' name='registerListener'><parameter type='android.hardware.SensorListener' name='listener'/><parameter type='int' name='sensors'/><parameter type='int' name='rate'/></method><method deprecated='3' name='unregisterListener'><parameter type='android.hardware.SensorListener' name='listener'/><parameter type='int' name='sensors'/></method><method deprecated='3' name='unregisterListener'><parameter type='android.hardware.SensorListener' name='listener'/></method><method return='android.hardware.Sensor' name='getDefaultSensor' api_added='3'><parameter type='int' name='type'/></method><method return='float' static='true' name='getInclination' api_added='3'><parameter type='float[]' name='I'/></method><method return='float[]' static='true' name='getOrientation' api_added='3'><parameter type='float[]' name='R'/><parameter type='float[]' name='values'/></method><method return='boolean' static='true' name='getRotationMatrix' api_added='3'><parameter type='float[]' name='R'/><parameter type='float[]' name='I'/><parameter type='float[]' name='gravity'/><parameter type='float[]' name='geomagnetic'/></method><method return='java.util.List&lt;android.hardware.Sensor&gt;' name='getSensorList' api_added='3'><parameter type='int' name='type'/></method><method return='boolean' name='registerListener' api_added='3'><parameter type='android.hardware.SensorEventListener' name='listener'/><parameter type='android.hardware.Sensor' name='sensor'/><parameter type='int' name='rate'/></method><method return='boolean' name='registerListener' api_added='3'><parameter type='android.hardware.SensorEventListener' name='listener'/><parameter type='android.hardware.Sensor' name='sensor'/><parameter type='int' name='rate'/><parameter type='android.os.Handler' name='handler'/></method><method return='boolean' static='true' name='remapCoordinateSystem' api_added='3'><parameter type='float[]' name='inR'/><parameter type='int' name='X'/><parameter type='int' name='Y'/><parameter type='float[]' name='outR'/></method><method name='unregisterListener' api_added='3'><parameter type='android.hardware.SensorEventListener' name='listener'/><parameter type='android.hardware.Sensor' name='sensor'/></method><method name='unregisterListener' api_added='3'><parameter type='android.hardware.SensorEventListener' name='listener'/></method><method return='float' static='true' name='getAltitude' api_added='9'><parameter type='float' name='p0'/><parameter type='float' name='p'/></method><method static='true' name='getAngleChange' api_added='9'><parameter type='float[]' name='angleChange'/><parameter type='float[]' name='R'/><parameter type='float[]' name='prevR'/></method><method static='true' name='getQuaternionFromVector' api_added='9'><parameter type='float[]' name='Q'/><parameter type='float[]' name='rv'/></method><method static='true' name='getRotationMatrixFromVector' api_added='9'><parameter type='float[]' name='R'/><parameter type='float[]' name='rotationVector'/></method></class><class extends='java.lang.Object' name='GeomagneticField' api_added='3'><constructor type='android.hardware.GeomagneticField' name='GeomagneticField' api_added='3'><parameter type='float' name='gdLatitudeDeg'/><parameter type='float' name='gdLongitudeDeg'/><parameter type='float' name='altitudeMeters'/><parameter type='long' name='timeMillis'/></constructor><method return='float' name='getDeclination' api_added='3'/><method return='float' name='getFieldStrength' api_added='3'/><method return='float' name='getHorizontalStrength' api_added='3'/><method return='float' name='getInclination' api_added='3'/><method return='float' name='getX' api_added='3'/><method return='float' name='getY' api_added='3'/><method return='float' name='getZ' api_added='3'/></class><class extends='java.lang.Object' name='Sensor' api_added='3'><method return='float' name='getMaximumRange' api_added='3'/><method return='java.lang.String' name='getName' api_added='3'/><method return='float' name='getPower' api_added='3'/><method return='float' name='getResolution' api_added='3'/><method return='int' name='getType' api_added='3'/><method return='java.lang.String' name='getVendor' api_added='3'/><method return='int' name='getVersion' api_added='3'/><method return='int' name='getMinDelay' api_added='9'/></class><class extends='java.lang.Object' name='SensorEvent' api_added='3'/><class extends='java.lang.Object' static='true' name='Camera.CameraInfo' api_added='9'><constructor type='android.hardware.Camera.CameraInfo' name='Camera.CameraInfo' api_added='9'/></class><class extends='java.lang.Object' static='true' name='Camera.Area' api_added='14'><constructor type='android.hardware.Camera.Area' name='Camera.Area' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/><parameter type='int' name='arg1'/></constructor></class><class extends='java.lang.Object' static='true' name='Camera.Face' api_added='14'><constructor type='android.hardware.Camera.Face' name='Camera.Face' api_added='14'/></class><interface abstract='true' static='true' name='Camera.AutoFocusCallback'><method abstract='true' name='onAutoFocus'><parameter type='boolean' name='success'/><parameter type='android.hardware.Camera' name='camera'/></method></interface><interface abstract='true' static='true' name='Camera.ErrorCallback'><method abstract='true' name='onError'><parameter type='int' name='error'/><parameter type='android.hardware.Camera' name='camera'/></method></interface><interface abstract='true' static='true' name='Camera.PictureCallback'><method abstract='true' name='onPictureTaken'><parameter type='byte[]' name='data'/><parameter type='android.hardware.Camera' name='camera'/></method></interface><interface abstract='true' static='true' name='Camera.PreviewCallback'><method abstract='true' name='onPreviewFrame'><parameter type='byte[]' name='data'/><parameter type='android.hardware.Camera' name='camera'/></method></interface><interface abstract='true' static='true' name='Camera.ShutterCallback'><method abstract='true' name='onShutter'/></interface><interface deprecated='3' abstract='true' name='SensorListener'><method abstract='true' name='onAccuracyChanged'><parameter type='int' name='sensor'/><parameter type='int' name='accuracy'/></method><method abstract='true' name='onSensorChanged'><parameter type='int' name='sensor'/><parameter type='float[]' name='values'/></method></interface><interface abstract='true' name='SensorEventListener' api_added='3'><method abstract='true' name='onAccuracyChanged' api_added='3'><parameter type='android.hardware.Sensor' name='sensor'/><parameter type='int' name='accuracy'/></method><method abstract='true' name='onSensorChanged' api_added='3'><parameter type='android.hardware.SensorEvent' name='event'/></method></interface><interface abstract='true' static='true' name='Camera.OnZoomChangeListener' api_added='8'><method abstract='true' name='onZoomChange' api_added='8'><parameter type='int' name='zoomValue'/><parameter type='boolean' name='stopped'/><parameter type='android.hardware.Camera' name='camera'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='Camera.FaceDetectionListener' api_added='14'><method abstract='true' name='onFaceDetection' api_added='14'><parameter type='android.hardware.Camera.Face[]' name='arg0'/><parameter type='android.hardware.Camera' name='arg1'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='Camera.AutoFocusMoveCallback' api_added='16'><method abstract='true' name='onAutoFocusMoving' api_added='16'><parameter type='boolean' name='arg0'/><parameter type='android.hardware.Camera' name='arg1'/></method></interface></package><package name='android.location'><class extends='java.lang.Object' name='Address'><constructor type='android.location.Address' name='Address'><parameter type='java.util.Locale' name='locale'/></constructor><method name='clearLatitude'/><method name='clearLongitude'/><method return='int' name='describeContents'/><method return='java.lang.String' name='getAddressLine'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getAdminArea'/><method return='java.lang.String' name='getCountryCode'/><method return='java.lang.String' name='getCountryName'/><method return='android.os.Bundle' name='getExtras'/><method return='java.lang.String' name='getFeatureName'/><method return='double' name='getLatitude'/><method return='java.util.Locale' name='getLocale'/><method return='java.lang.String' name='getLocality'/><method return='double' name='getLongitude'/><method return='int' name='getMaxAddressLineIndex'/><method return='java.lang.String' name='getPhone'/><method return='java.lang.String' name='getPostalCode'/><method return='java.lang.String' name='getSubAdminArea'/><method return='java.lang.String' name='getThoroughfare'/><method return='java.lang.String' name='getUrl'/><method return='boolean' name='hasLatitude'/><method return='boolean' name='hasLongitude'/><method name='setAddressLine'><parameter type='int' name='index'/><parameter type='java.lang.String' name='line'/></method><method name='setAdminArea'><parameter type='java.lang.String' name='adminArea'/></method><method name='setCountryCode'><parameter type='java.lang.String' name='countryCode'/></method><method name='setCountryName'><parameter type='java.lang.String' name='countryName'/></method><method name='setExtras'><parameter type='android.os.Bundle' name='extras'/></method><method name='setFeatureName'><parameter type='java.lang.String' name='featureName'/></method><method name='setLatitude'><parameter type='double' name='latitude'/></method><method name='setLocality'><parameter type='java.lang.String' name='locality'/></method><method name='setLongitude'><parameter type='double' name='longitude'/></method><method name='setPhone'><parameter type='java.lang.String' name='phone'/></method><method name='setPostalCode'><parameter type='java.lang.String' name='postalCode'/></method><method name='setSubAdminArea'><parameter type='java.lang.String' name='subAdminArea'/></method><method name='setThoroughfare'><parameter type='java.lang.String' name='thoroughfare'/></method><method name='setUrl'><parameter type='java.lang.String' name='Url'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='getPremises' api_added='4'/><method return='java.lang.String' name='getSubLocality' api_added='4'/><method return='java.lang.String' name='getSubThoroughfare' api_added='4'/><method name='setPremises' api_added='4'><parameter type='java.lang.String' name='premises'/></method><method name='setSubLocality' api_added='4'><parameter type='java.lang.String' name='sublocality'/></method><method name='setSubThoroughfare' api_added='4'><parameter type='java.lang.String' name='subthoroughfare'/></method></class><class extends='java.lang.Object' name='Criteria'><constructor type='android.location.Criteria' name='Criteria'/><constructor type='android.location.Criteria' name='Criteria'><parameter type='android.location.Criteria' name='criteria'/></constructor><method return='int' name='describeContents'/><method return='int' name='getAccuracy'/><method return='int' name='getPowerRequirement'/><method return='boolean' name='isAltitudeRequired'/><method return='boolean' name='isBearingRequired'/><method return='boolean' name='isCostAllowed'/><method return='boolean' name='isSpeedRequired'/><method name='setAccuracy'><parameter type='int' name='accuracy'/></method><method name='setAltitudeRequired'><parameter type='boolean' name='altitudeRequired'/></method><method name='setBearingRequired'><parameter type='boolean' name='bearingRequired'/></method><method name='setCostAllowed'><parameter type='boolean' name='costAllowed'/></method><method name='setPowerRequirement'><parameter type='int' name='level'/></method><method name='setSpeedRequired'><parameter type='boolean' name='speedRequired'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='int' name='getBearingAccuracy' api_added='9'/><method return='int' name='getHorizontalAccuracy' api_added='9'/><method return='int' name='getSpeedAccuracy' api_added='9'/><method return='int' name='getVerticalAccuracy' api_added='9'/><method name='setBearingAccuracy' api_added='9'><parameter type='int' name='accuracy'/></method><method name='setHorizontalAccuracy' api_added='9'><parameter type='int' name='accuracy'/></method><method name='setSpeedAccuracy' api_added='9'><parameter type='int' name='accuracy'/></method><method name='setVerticalAccuracy' api_added='9'><parameter type='int' name='accuracy'/></method></class><class extends='java.lang.Object' name='Geocoder' final='true'><constructor type='android.location.Geocoder' name='Geocoder'><parameter type='android.content.Context' name='context'/><parameter type='java.util.Locale' name='locale'/></constructor><constructor type='android.location.Geocoder' name='Geocoder'><parameter type='android.content.Context' name='context'/></constructor><method return='java.util.List&lt;android.location.Address&gt;' name='getFromLocation'><parameter type='double' name='latitude'/><parameter type='double' name='longitude'/><parameter type='int' name='maxResults'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.List&lt;android.location.Address&gt;' name='getFromLocationName'><parameter type='java.lang.String' name='locationName'/><parameter type='int' name='maxResults'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.List&lt;android.location.Address&gt;' name='getFromLocationName'><parameter type='java.lang.String' name='locationName'/><parameter type='int' name='maxResults'/><parameter type='double' name='lowerLeftLatitude'/><parameter type='double' name='lowerLeftLongitude'/><parameter type='double' name='upperRightLatitude'/><parameter type='double' name='upperRightLongitude'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' static='true' name='isPresent' api_added='9'/></class><class extends='java.lang.Object' name='Location'><constructor type='android.location.Location' name='Location'><parameter type='java.lang.String' name='provider'/></constructor><constructor type='android.location.Location' name='Location'><parameter type='android.location.Location' name='l'/></constructor><method return='float' name='bearingTo'><parameter type='android.location.Location' name='dest'/></method><method return='java.lang.String' static='true' name='convert'><parameter type='double' name='coordinate'/><parameter type='int' name='outputType'/></method><method return='double' static='true' name='convert'><parameter type='java.lang.String' name='coordinate'/></method><method return='int' name='describeContents'/><method static='true' name='distanceBetween'><parameter type='double' name='startLatitude'/><parameter type='double' name='startLongitude'/><parameter type='double' name='endLatitude'/><parameter type='double' name='endLongitude'/><parameter type='float[]' name='results'/></method><method return='float' name='distanceTo'><parameter type='android.location.Location' name='dest'/></method><method return='float' name='getAccuracy'/><method return='double' name='getAltitude'/><method return='float' name='getBearing'/><method return='android.os.Bundle' name='getExtras'/><method return='double' name='getLatitude'/><method return='double' name='getLongitude'/><method return='java.lang.String' name='getProvider'/><method return='float' name='getSpeed'/><method return='long' name='getTime'/><method return='boolean' name='hasAccuracy'/><method return='boolean' name='hasAltitude'/><method return='boolean' name='hasBearing'/><method return='boolean' name='hasSpeed'/><method name='removeAccuracy'/><method name='removeAltitude'/><method name='removeBearing'/><method name='removeSpeed'/><method name='reset'/><method name='set'><parameter type='android.location.Location' name='l'/></method><method name='setAccuracy'><parameter type='float' name='accuracy'/></method><method name='setAltitude'><parameter type='double' name='altitude'/></method><method name='setBearing'><parameter type='float' name='bearing'/></method><method name='setExtras'><parameter type='android.os.Bundle' name='extras'/></method><method name='setLatitude'><parameter type='double' name='latitude'/></method><method name='setLongitude'><parameter type='double' name='longitude'/></method><method name='setProvider'><parameter type='java.lang.String' name='provider'/></method><method name='setSpeed'><parameter type='float' name='speed'/></method><method name='setTime'><parameter type='long' name='time'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method name='dump' api_added='3'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method></class><class extends='java.lang.Object' name='LocationManager'><method name='addProximityAlert'><parameter type='double' name='latitude'/><parameter type='double' name='longitude'/><parameter type='float' name='radius'/><parameter type='long' name='expiration'/><parameter type='android.app.PendingIntent' name='intent'/></method><method return='java.util.List&lt;java.lang.String&gt;' name='getAllProviders'/><method return='java.lang.String' name='getBestProvider'><parameter type='android.location.Criteria' name='criteria'/><parameter type='boolean' name='enabledOnly'/></method><method return='android.location.Location' name='getLastKnownLocation'><parameter type='java.lang.String' name='provider'/></method><method return='android.location.LocationProvider' name='getProvider'><parameter type='java.lang.String' name='name'/></method><method return='java.util.List&lt;java.lang.String&gt;' name='getProviders'><parameter type='boolean' name='enabledOnly'/></method><method return='java.util.List&lt;java.lang.String&gt;' name='getProviders'><parameter type='android.location.Criteria' name='criteria'/><parameter type='boolean' name='enabledOnly'/></method><method return='boolean' name='isProviderEnabled'><parameter type='java.lang.String' name='provider'/></method><method name='removeProximityAlert'><parameter type='android.app.PendingIntent' name='intent'/></method><method name='removeUpdates'><parameter type='android.location.LocationListener' name='listener'/></method><method name='requestLocationUpdates'><parameter type='java.lang.String' name='provider'/><parameter type='long' name='minTime'/><parameter type='float' name='minDistance'/><parameter type='android.location.LocationListener' name='listener'/></method><method name='requestLocationUpdates'><parameter type='java.lang.String' name='provider'/><parameter type='long' name='minTime'/><parameter type='float' name='minDistance'/><parameter type='android.location.LocationListener' name='listener'/><parameter type='android.os.Looper' name='looper'/></method><method return='boolean' name='addGpsStatusListener' api_added='3'><parameter type='android.location.GpsStatus.Listener' name='listener'/></method><method name='addTestProvider' api_added='3'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='requiresNetwork'/><parameter type='boolean' name='requiresSatellite'/><parameter type='boolean' name='requiresCell'/><parameter type='boolean' name='hasMonetaryCost'/><parameter type='boolean' name='supportsAltitude'/><parameter type='boolean' name='supportsSpeed'/><parameter type='boolean' name='supportsBearing'/><parameter type='int' name='powerRequirement'/><parameter type='int' name='accuracy'/></method><method name='clearTestProviderEnabled' api_added='3'><parameter type='java.lang.String' name='provider'/></method><method name='clearTestProviderLocation' api_added='3'><parameter type='java.lang.String' name='provider'/></method><method name='clearTestProviderStatus' api_added='3'><parameter type='java.lang.String' name='provider'/></method><method return='android.location.GpsStatus' name='getGpsStatus' api_added='3'><parameter type='android.location.GpsStatus' name='status'/></method><method name='removeGpsStatusListener' api_added='3'><parameter type='android.location.GpsStatus.Listener' name='listener'/></method><method name='removeTestProvider' api_added='3'><parameter type='java.lang.String' name='provider'/></method><method name='removeUpdates' api_added='3'><parameter type='android.app.PendingIntent' name='intent'/></method><method name='requestLocationUpdates' api_added='3'><parameter type='java.lang.String' name='provider'/><parameter type='long' name='minTime'/><parameter type='float' name='minDistance'/><parameter type='android.app.PendingIntent' name='intent'/></method><method return='boolean' name='sendExtraCommand' api_added='3'><parameter type='java.lang.String' name='provider'/><parameter type='java.lang.String' name='command'/><parameter type='android.os.Bundle' name='extras'/></method><method name='setTestProviderEnabled' api_added='3'><parameter type='java.lang.String' name='provider'/><parameter type='boolean' name='enabled'/></method><method name='setTestProviderLocation' api_added='3'><parameter type='java.lang.String' name='provider'/><parameter type='android.location.Location' name='loc'/></method><method name='setTestProviderStatus' api_added='3'><parameter type='java.lang.String' name='provider'/><parameter type='int' name='status'/><parameter type='android.os.Bundle' name='extras'/><parameter type='long' name='updateTime'/></method><method return='boolean' name='addNmeaListener' api_added='5'><parameter type='android.location.GpsStatus.NmeaListener' name='listener'/></method><method name='removeNmeaListener' api_added='5'><parameter type='android.location.GpsStatus.NmeaListener' name='listener'/></method><method name='requestLocationUpdates' api_added='9'><parameter type='long' name='minTime'/><parameter type='float' name='minDistance'/><parameter type='android.location.Criteria' name='criteria'/><parameter type='android.location.LocationListener' name='listener'/><parameter type='android.os.Looper' name='looper'/></method><method name='requestLocationUpdates' api_added='9'><parameter type='long' name='minTime'/><parameter type='float' name='minDistance'/><parameter type='android.location.Criteria' name='criteria'/><parameter type='android.app.PendingIntent' name='intent'/></method><method name='requestSingleUpdate' api_added='9'><parameter type='java.lang.String' name='provider'/><parameter type='android.location.LocationListener' name='listener'/><parameter type='android.os.Looper' name='looper'/></method><method name='requestSingleUpdate' api_added='9'><parameter type='android.location.Criteria' name='criteria'/><parameter type='android.location.LocationListener' name='listener'/><parameter type='android.os.Looper' name='looper'/></method><method name='requestSingleUpdate' api_added='9'><parameter type='java.lang.String' name='provider'/><parameter type='android.app.PendingIntent' name='intent'/></method><method name='requestSingleUpdate' api_added='9'><parameter type='android.location.Criteria' name='criteria'/><parameter type='android.app.PendingIntent' name='intent'/></method></class><class extends='java.lang.Object' abstract='true' name='LocationProvider'><method return='int' abstract='true' name='getAccuracy'/><method return='java.lang.String' name='getName'/><method return='int' abstract='true' name='getPowerRequirement'/><method return='boolean' abstract='true' name='hasMonetaryCost'/><method return='boolean' name='meetsCriteria'><parameter type='android.location.Criteria' name='criteria'/></method><method return='boolean' abstract='true' name='requiresCell'/><method return='boolean' abstract='true' name='requiresNetwork'/><method return='boolean' abstract='true' name='requiresSatellite'/><method return='boolean' abstract='true' name='supportsAltitude'/><method return='boolean' abstract='true' name='supportsBearing'/><method return='boolean' abstract='true' name='supportsSpeed'/></class><class extends='java.lang.Object' name='GpsSatellite' api_added='3' final='true'><method return='float' name='getAzimuth' api_added='3'/><method return='float' name='getElevation' api_added='3'/><method return='int' name='getPrn' api_added='3'/><method return='float' name='getSnr' api_added='3'/><method return='boolean' name='hasAlmanac' api_added='3'/><method return='boolean' name='hasEphemeris' api_added='3'/><method return='boolean' name='usedInFix' api_added='3'/></class><class extends='java.lang.Object' name='GpsStatus' api_added='3' final='true'><method return='int' name='getMaxSatellites' api_added='3'/><method return='java.lang.Iterable&lt;android.location.GpsSatellite&gt;' name='getSatellites' api_added='3'/><method return='int' name='getTimeToFirstFix' api_added='3'/></class><interface abstract='true' name='LocationListener'><method abstract='true' name='onLocationChanged'><parameter type='android.location.Location' name='location'/></method><method abstract='true' name='onProviderDisabled'><parameter type='java.lang.String' name='provider'/></method><method abstract='true' name='onProviderEnabled'><parameter type='java.lang.String' name='provider'/></method><method abstract='true' name='onStatusChanged'><parameter type='java.lang.String' name='provider'/><parameter type='int' name='status'/><parameter type='android.os.Bundle' name='extras'/></method></interface><interface abstract='true' static='true' name='GpsStatus.Listener' api_added='3'><method abstract='true' name='onGpsStatusChanged' api_added='3'><parameter type='int' name='event'/></method></interface><interface abstract='true' static='true' name='GpsStatus.NmeaListener' api_added='5'><method abstract='true' name='onNmeaReceived' api_added='5'><parameter type='long' name='timestamp'/><parameter type='java.lang.String' name='nmea'/></method></interface></package><package name='android.media'><class extends='java.lang.Object' name='AsyncPlayer'><constructor type='android.media.AsyncPlayer' name='AsyncPlayer'><parameter type='java.lang.String' name='tag'/></constructor><method name='play'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/><parameter type='boolean' name='looping'/><parameter type='int' name='stream'/></method><method name='stop'/></class><class extends='java.lang.Object' name='AudioManager'><method name='adjustStreamVolume'><parameter type='int' name='streamType'/><parameter type='int' name='direction'/><parameter type='int' name='flags'/></method><method name='adjustSuggestedStreamVolume'><parameter type='int' name='direction'/><parameter type='int' name='suggestedStreamType'/><parameter type='int' name='flags'/></method><method name='adjustVolume'><parameter type='int' name='direction'/><parameter type='int' name='flags'/></method><method return='int' name='getMode'/><method return='int' name='getRingerMode'/><method deprecated='4' return='int' name='getRouting'><parameter type='int' name='mode'/></method><method return='int' name='getStreamMaxVolume'><parameter type='int' name='streamType'/></method><method return='int' name='getStreamVolume'><parameter type='int' name='streamType'/></method><method deprecated='16' return='int' name='getVibrateSetting'><parameter type='int' name='vibrateType'/></method><method return='boolean' name='isBluetoothScoOn'/><method return='boolean' name='isMicrophoneMute'/><method return='boolean' name='isMusicActive'/><method return='boolean' name='isSpeakerphoneOn'/><method name='loadSoundEffects'/><method name='playSoundEffect'><parameter type='int' name='effectType'/></method><method name='setBluetoothScoOn'><parameter type='boolean' name='on'/></method><method name='setMicrophoneMute'><parameter type='boolean' name='on'/></method><method name='setMode'><parameter type='int' name='mode'/></method><method name='setRingerMode'><parameter type='int' name='ringerMode'/></method><method deprecated='4' name='setRouting'><parameter type='int' name='mode'/><parameter type='int' name='routes'/><parameter type='int' name='mask'/></method><method name='setSpeakerphoneOn'><parameter type='boolean' name='on'/></method><method name='setStreamMute'><parameter type='int' name='streamType'/><parameter type='boolean' name='state'/></method><method name='setStreamSolo'><parameter type='int' name='streamType'/><parameter type='boolean' name='state'/></method><method name='setStreamVolume'><parameter type='int' name='streamType'/><parameter type='int' name='index'/><parameter type='int' name='flags'/></method><method deprecated='16' name='setVibrateSetting'><parameter type='int' name='vibrateType'/><parameter type='int' name='vibrateSetting'/></method><method deprecated='16' return='boolean' name='shouldVibrate'><parameter type='int' name='vibrateType'/></method><method name='unloadSoundEffects'/><method return='boolean' name='isBluetoothA2dpOn' api_added='3'/><method name='playSoundEffect' api_added='3'><parameter type='int' name='effectType'/><parameter type='float' name='volume'/></method><method deprecated='5' name='setBluetoothA2dpOn' api_added='3'><parameter type='boolean' name='on'/></method><method return='java.lang.String' name='getParameters' api_added='5'><parameter type='java.lang.String' name='keys'/></method><method deprecated='14' return='boolean' name='isWiredHeadsetOn' api_added='5'/><method name='setParameters' api_added='5'><parameter type='java.lang.String' name='keyValuePairs'/></method><method deprecated='5' name='setWiredHeadsetOn' api_added='5'><parameter type='boolean' name='on'/></method><method return='int' name='abandonAudioFocus' api_added='8'><parameter type='android.media.AudioManager.OnAudioFocusChangeListener' name='l'/></method><method return='boolean' name='isBluetoothScoAvailableOffCall' api_added='8'/><method name='registerMediaButtonEventReceiver' api_added='8'><parameter type='android.content.ComponentName' name='eventReceiver'/></method><method return='int' name='requestAudioFocus' api_added='8'><parameter type='android.media.AudioManager.OnAudioFocusChangeListener' name='l'/><parameter type='int' name='streamType'/><parameter type='int' name='durationHint'/></method><method name='startBluetoothSco' api_added='8'/><method name='stopBluetoothSco' api_added='8'/><method name='unregisterMediaButtonEventReceiver' api_added='8'><parameter type='android.content.ComponentName' name='eventReceiver'/></method><method name='registerRemoteControlClient' api_added='14'><parameter type='android.media.RemoteControlClient' name='arg0'/></method><method name='unregisterRemoteControlClient' api_added='14'><parameter type='android.media.RemoteControlClient' name='arg0'/></method></class><class extends='java.lang.Object' name='FaceDetector'><constructor type='android.media.FaceDetector' name='FaceDetector'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='maxFaces'/></constructor><method return='int' name='findFaces'><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='android.media.FaceDetector.Face[]' name='faces'/></method></class><class extends='java.lang.Object' name='FaceDetector.Face'><method return='float' name='confidence'/><method return='float' name='eyesDistance'/><method name='getMidPoint'><parameter type='android.graphics.PointF' name='point'/></method><method return='float' name='pose'><parameter type='int' name='euler'/></method></class><class extends='java.lang.Object' name='MediaPlayer'><constructor type='android.media.MediaPlayer' name='MediaPlayer'/><method return='android.media.MediaPlayer' static='true' name='create'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/></method><method return='android.media.MediaPlayer' static='true' name='create'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.view.SurfaceHolder' name='holder'/></method><method return='android.media.MediaPlayer' static='true' name='create'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resid'/></method><method return='int' native='true' name='getCurrentPosition'/><method return='int' native='true' name='getDuration'/><method return='int' native='true' name='getVideoHeight'/><method return='int' native='true' name='getVideoWidth'/><method return='boolean' native='true' name='isPlaying'/><method name='pause'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='prepare'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='prepareAsync'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='release'/><method name='reset'/><method native='true' name='seekTo'><parameter type='int' name='msec'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setAudioStreamType'><parameter type='int' name='streamtype'/></method><method name='setDataSource'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method native='true' name='setDataSource'><parameter type='java.lang.String' name='path'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='setDataSource'><parameter type='java.io.FileDescriptor' name='fd'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setDataSource'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='long' name='offset'/><parameter type='long' name='length'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='setDisplay'><parameter type='android.view.SurfaceHolder' name='sh'/></method><method native='true' name='setLooping'><parameter type='boolean' name='looping'/></method><method name='setOnBufferingUpdateListener'><parameter type='android.media.MediaPlayer.OnBufferingUpdateListener' name='l'/></method><method name='setOnCompletionListener'><parameter type='android.media.MediaPlayer.OnCompletionListener' name='l'/></method><method name='setOnErrorListener'><parameter type='android.media.MediaPlayer.OnErrorListener' name='l'/></method><method name='setOnPreparedListener'><parameter type='android.media.MediaPlayer.OnPreparedListener' name='l'/></method><method name='setOnSeekCompleteListener'><parameter type='android.media.MediaPlayer.OnSeekCompleteListener' name='l'/></method><method name='setScreenOnWhilePlaying'><parameter type='boolean' name='screenOn'/></method><method native='true' name='setVolume'><parameter type='float' name='leftVolume'/><parameter type='float' name='rightVolume'/></method><method name='setWakeMode'><parameter type='android.content.Context' name='context'/><parameter type='int' name='mode'/></method><method name='start'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='stop'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='boolean' native='true' name='isLooping' api_added='3'/><method name='setOnInfoListener' api_added='3'><parameter type='android.media.MediaPlayer.OnInfoListener' name='listener'/></method><method name='setOnVideoSizeChangedListener' api_added='3'><parameter type='android.media.MediaPlayer.OnVideoSizeChangedListener' name='listener'/></method><method native='true' name='attachAuxEffect' api_added='9'><parameter type='int' name='effectId'/></method><method return='int' native='true' name='getAudioSessionId' api_added='9'/><method native='true' name='setAudioSessionId' api_added='9'><parameter type='int' name='sessionId'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setAuxEffectSendLevel' api_added='9'><parameter type='float' name='level'/></method><method name='setDataSource' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.net.Uri' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method><method name='setSurface' api_added='14'><parameter type='android.view.Surface' name='arg0'/></method><method name='addTimedTextSource' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='addTimedTextSource' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='android.net.Uri' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method><method name='addTimedTextSource' api_added='16'><parameter type='java.io.FileDescriptor' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method name='addTimedTextSource' api_added='16'><parameter type='java.io.FileDescriptor' name='arg0'/><parameter type='long' name='arg1'/><parameter type='long' name='arg2'/><parameter type='java.lang.String' name='arg3'/></method><method name='deselectTrack' api_added='16'><parameter type='int' name='arg0'/></method><method return='android.media.MediaPlayer.TrackInfo[]' name='getTrackInfo' api_added='16'/><method name='selectTrack' api_added='16'><parameter type='int' name='arg0'/></method><method name='setNextMediaPlayer' api_added='16'><parameter type='android.media.MediaPlayer' name='arg0'/></method><method name='setOnTimedTextListener' api_added='16'><parameter type='android.media.MediaPlayer.OnTimedTextListener' name='arg0'/></method><method name='setVideoScalingMode' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='MediaRecorder'><constructor type='android.media.MediaRecorder' name='MediaRecorder'/><method return='int' native='true' name='getMaxAmplitude'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='prepare'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='release'/><method native='true' name='reset'/><method native='true' name='setAudioEncoder'><parameter type='int' name='audio_encoder'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setAudioSource'><parameter type='int' name='audio_source'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setOutputFile'><parameter type='java.lang.String' name='path'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setOutputFormat'><parameter type='int' name='output_format'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='setPreviewDisplay'><parameter type='android.view.Surface' name='sv'/></method><method native='true' name='start'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='stop'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setCamera' api_added='3'><parameter type='android.hardware.Camera' name='c'/></method><method native='true' name='setMaxDuration' api_added='3'><parameter type='int' name='max_duration_ms'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method native='true' name='setMaxFileSize' api_added='3'><parameter type='long' name='max_filesize_bytes'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setOnErrorListener' api_added='3'><parameter type='android.media.MediaRecorder.OnErrorListener' name='l'/></method><method name='setOnInfoListener' api_added='3'><parameter type='android.media.MediaRecorder.OnInfoListener' name='listener'/></method><method name='setOutputFile' api_added='3'><parameter type='java.io.FileDescriptor' name='fd'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setVideoEncoder' api_added='3'><parameter type='int' name='video_encoder'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setVideoFrameRate' api_added='3'><parameter type='int' name='rate'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setVideoSize' api_added='3'><parameter type='int' name='width'/><parameter type='int' name='height'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method native='true' name='setVideoSource' api_added='3'><parameter type='int' name='video_source'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' static='true' name='getAudioSourceMax' api_added='4' final='true'/><method name='setAudioChannels' api_added='8'><parameter type='int' name='numChannels'/></method><method name='setAudioEncodingBitRate' api_added='8'><parameter type='int' name='bitRate'/></method><method name='setAudioSamplingRate' api_added='8'><parameter type='int' name='samplingRate'/></method><method name='setProfile' api_added='8'><parameter type='android.media.CamcorderProfile' name='profile'/></method><method name='setVideoEncodingBitRate' api_added='8'><parameter type='int' name='bitRate'/></method><method name='setOrientationHint' api_added='9'><parameter type='int' name='degrees'/></method><method deprecated='14' api_removed='16' name='setAuxiliaryOutputFile' api_added='11'><parameter type='java.io.FileDescriptor' name='fd'/></method><method deprecated='14' api_removed='16' name='setAuxiliaryOutputFile' api_added='11'><parameter type='java.lang.String' name='path'/></method><method name='setCaptureRate' api_added='11'><parameter type='double' name='fps'/></method><method name='setLocation' api_added='14'><parameter type='float' name='arg0'/><parameter type='float' name='arg1'/></method></class><class extends='java.lang.Object' name='MediaRecorder.AudioEncoder' final='true'/><class extends='java.lang.Object' name='MediaRecorder.AudioSource' final='true'/><class extends='java.lang.Object' name='MediaRecorder.OutputFormat' final='true'/><class extends='java.lang.Object' name='MediaScannerConnection'><constructor type='android.media.MediaScannerConnection' name='MediaScannerConnection'><parameter type='android.content.Context' name='context'/><parameter type='android.media.MediaScannerConnection.MediaScannerConnectionClient' name='client'/></constructor><method name='connect'/><method name='disconnect'/><method return='boolean' synchronized='true' name='isConnected'/><method name='onServiceConnected'><parameter type='android.content.ComponentName' name='className'/><parameter type='android.os.IBinder' name='service'/></method><method name='onServiceDisconnected'><parameter type='android.content.ComponentName' name='className'/></method><method name='scanFile'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='mimeType'/></method><method static='true' name='scanFile' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String[]' name='paths'/><parameter type='java.lang.String[]' name='mimeTypes'/><parameter type='android.media.MediaScannerConnection.OnScanCompletedListener' name='callback'/></method></class><class extends='java.lang.Object' name='Ringtone'><method return='int' name='getStreamType'/><method return='java.lang.String' name='getTitle'><parameter type='android.content.Context' name='context'/></method><method return='boolean' name='isPlaying'/><method name='play'/><method name='setStreamType'><parameter type='int' name='streamType'/></method><method name='stop'/></class><class extends='java.lang.Object' name='RingtoneManager'><constructor type='android.media.RingtoneManager' name='RingtoneManager'><parameter type='android.app.Activity' name='activity'/></constructor><constructor type='android.media.RingtoneManager' name='RingtoneManager'><parameter type='android.content.Context' name='context'/></constructor><method return='android.net.Uri' static='true' name='getActualDefaultRingtoneUri'><parameter type='android.content.Context' name='context'/><parameter type='int' name='type'/></method><method return='android.database.Cursor' name='getCursor'/><method return='int' static='true' name='getDefaultType'><parameter type='android.net.Uri' name='defaultRingtoneUri'/></method><method return='android.net.Uri' static='true' name='getDefaultUri'><parameter type='int' name='type'/></method><method return='boolean' name='getIncludeDrm'/><method return='android.media.Ringtone' name='getRingtone'><parameter type='int' name='position'/></method><method return='android.media.Ringtone' static='true' name='getRingtone'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='ringtoneUri'/></method><method return='int' name='getRingtonePosition'><parameter type='android.net.Uri' name='ringtoneUri'/></method><method return='android.net.Uri' name='getRingtoneUri'><parameter type='int' name='position'/></method><method return='boolean' name='getStopPreviousRingtone'/><method return='android.net.Uri' static='true' name='getValidRingtoneUri'><parameter type='android.content.Context' name='context'/></method><method return='boolean' static='true' name='isDefault'><parameter type='android.net.Uri' name='ringtoneUri'/></method><method static='true' name='setActualDefaultRingtoneUri'><parameter type='android.content.Context' name='context'/><parameter type='int' name='type'/><parameter type='android.net.Uri' name='ringtoneUri'/></method><method name='setIncludeDrm'><parameter type='boolean' name='includeDrm'/></method><method name='setStopPreviousRingtone'><parameter type='boolean' name='stopPreviousRingtone'/></method><method name='setType'><parameter type='int' name='type'/></method><method name='stopPreviousRingtone'/><method return='int' name='inferStreamType' api_added='3'/></class><class extends='java.lang.Object' name='SoundPool'><constructor type='android.media.SoundPool' name='SoundPool'><parameter type='int' name='maxStreams'/><parameter type='int' name='streamType'/><parameter type='int' name='srcQuality'/></constructor><method return='int' name='load'><parameter type='java.lang.String' name='path'/><parameter type='int' name='priority'/></method><method return='int' name='load'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resId'/><parameter type='int' name='priority'/></method><method native='true' name='pause' final='true'><parameter type='int' name='streamID'/></method><method return='int' native='true' name='play' final='true'><parameter type='int' name='soundID'/><parameter type='float' name='leftVolume'/><parameter type='float' name='rightVolume'/><parameter type='int' name='priority'/><parameter type='int' name='loop'/><parameter type='float' name='rate'/></method><method native='true' name='release' final='true'/><method native='true' name='resume' final='true'><parameter type='int' name='streamID'/></method><method native='true' name='setLoop' final='true'><parameter type='int' name='streamID'/><parameter type='int' name='loop'/></method><method native='true' name='setPriority' final='true'><parameter type='int' name='streamID'/><parameter type='int' name='priority'/></method><method native='true' name='setRate' final='true'><parameter type='int' name='streamID'/><parameter type='float' name='rate'/></method><method native='true' name='setVolume' final='true'><parameter type='int' name='streamID'/><parameter type='float' name='leftVolume'/><parameter type='float' name='rightVolume'/></method><method native='true' name='stop' final='true'><parameter type='int' name='streamID'/></method><method return='boolean' native='true' name='unload' final='true'><parameter type='int' name='soundID'/></method><method return='int' name='load' api_added='3'><parameter type='android.content.res.AssetFileDescriptor' name='afd'/><parameter type='int' name='priority'/></method><method return='int' name='load' api_added='3'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='long' name='offset'/><parameter type='long' name='length'/><parameter type='int' name='priority'/></method><method native='true' name='autoPause' api_added='8' final='true'/><method native='true' name='autoResume' api_added='8' final='true'/><method name='setOnLoadCompleteListener' api_added='8'><parameter type='android.media.SoundPool.OnLoadCompleteListener' name='listener'/></method></class><class extends='java.lang.Object' name='ToneGenerator'><constructor type='android.media.ToneGenerator' name='ToneGenerator'><parameter type='int' name='streamType'/><parameter type='int' name='volume'/></constructor><method native='true' name='release'/><method return='boolean' native='true' name='startTone'><parameter type='int' name='toneType'/></method><method native='true' name='stopTone'/><method return='boolean' native='true' name='startTone' api_added='5'><parameter type='int' name='toneType'/><parameter type='int' name='durationMs'/></method><method return='int' name='getAudioSessionId' api_added='16' final='true'/></class><class extends='java.lang.Object' name='AudioFormat' api_added='3'><constructor type='android.media.AudioFormat' name='AudioFormat' api_added='3'/></class><class extends='java.lang.Object' name='AudioRecord' api_added='3'><constructor type='android.media.AudioRecord' name='AudioRecord' api_added='3'><parameter type='int' name='audioSource'/><parameter type='int' name='sampleRateInHz'/><parameter type='int' name='channelConfig'/><parameter type='int' name='audioFormat'/><parameter type='int' name='bufferSizeInBytes'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></constructor><method return='int' name='getAudioFormat' api_added='3'/><method return='int' name='getAudioSource' api_added='3'/><method return='int' name='getChannelConfiguration' api_added='3'/><method return='int' name='getChannelCount' api_added='3'/><method return='int' static='true' name='getMinBufferSize' api_added='3'><parameter type='int' name='sampleRateInHz'/><parameter type='int' name='channelConfig'/><parameter type='int' name='audioFormat'/></method><method return='int' name='getNotificationMarkerPosition' api_added='3'/><method return='int' name='getPositionNotificationPeriod' api_added='3'/><method return='int' name='getRecordingState' api_added='3'/><method return='int' name='getSampleRate' api_added='3'/><method return='int' name='getState' api_added='3'/><method return='int' name='read' api_added='3'><parameter type='byte[]' name='audioData'/><parameter type='int' name='offsetInBytes'/><parameter type='int' name='sizeInBytes'/></method><method return='int' name='read' api_added='3'><parameter type='short[]' name='audioData'/><parameter type='int' name='offsetInShorts'/><parameter type='int' name='sizeInShorts'/></method><method return='int' name='read' api_added='3'><parameter type='java.nio.ByteBuffer' name='audioBuffer'/><parameter type='int' name='sizeInBytes'/></method><method name='release' api_added='3'/><method return='int' name='setNotificationMarkerPosition' api_added='3'><parameter type='int' name='markerInFrames'/></method><method return='int' name='setPositionNotificationPeriod' api_added='3'><parameter type='int' name='periodInFrames'/></method><method name='setRecordPositionUpdateListener' api_added='3'><parameter type='android.media.AudioRecord.OnRecordPositionUpdateListener' name='listener'/></method><method name='setRecordPositionUpdateListener' api_added='3'><parameter type='android.media.AudioRecord.OnRecordPositionUpdateListener' name='listener'/><parameter type='android.os.Handler' name='handler'/></method><method name='startRecording' api_added='3'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='stop' api_added='3'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='getAudioSessionId' api_added='16'/><method name='startRecording' api_added='16'><parameter type='android.media.MediaSyncEvent' name='arg0'/></method></class><class extends='java.lang.Object' name='AudioTrack' api_added='3'><constructor type='android.media.AudioTrack' name='AudioTrack' api_added='3'><parameter type='int' name='streamType'/><parameter type='int' name='sampleRateInHz'/><parameter type='int' name='channelConfig'/><parameter type='int' name='audioFormat'/><parameter type='int' name='bufferSizeInBytes'/><parameter type='int' name='mode'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></constructor><method name='flush' api_added='3'/><method return='int' name='getAudioFormat' api_added='3'/><method return='int' name='getChannelConfiguration' api_added='3'/><method return='int' name='getChannelCount' api_added='3'/><method return='float' static='true' name='getMaxVolume' api_added='3'/><method return='int' static='true' name='getMinBufferSize' api_added='3'><parameter type='int' name='sampleRateInHz'/><parameter type='int' name='channelConfig'/><parameter type='int' name='audioFormat'/></method><method return='float' static='true' name='getMinVolume' api_added='3'/><method visibility='protected' return='int' name='getNativeFrameCount' api_added='3'/><method return='int' static='true' name='getNativeOutputSampleRate' api_added='3'><parameter type='int' name='streamType'/></method><method return='int' name='getNotificationMarkerPosition' api_added='3'/><method return='int' name='getPlayState' api_added='3'/><method return='int' name='getPlaybackHeadPosition' api_added='3'/><method return='int' name='getPlaybackRate' api_added='3'/><method return='int' name='getPositionNotificationPeriod' api_added='3'/><method return='int' name='getSampleRate' api_added='3'/><method return='int' name='getState' api_added='3'/><method return='int' name='getStreamType' api_added='3'/><method name='pause' api_added='3'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='play' api_added='3'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='release' api_added='3'/><method return='int' name='reloadStaticData' api_added='3'/><method return='int' name='setLoopPoints' api_added='3'><parameter type='int' name='startInFrames'/><parameter type='int' name='endInFrames'/><parameter type='int' name='loopCount'/></method><method return='int' name='setNotificationMarkerPosition' api_added='3'><parameter type='int' name='markerInFrames'/></method><method return='int' name='setPlaybackHeadPosition' api_added='3'><parameter type='int' name='positionInFrames'/></method><method name='setPlaybackPositionUpdateListener' api_added='3'><parameter type='android.media.AudioTrack.OnPlaybackPositionUpdateListener' name='listener'/></method><method name='setPlaybackPositionUpdateListener' api_added='3'><parameter type='android.media.AudioTrack.OnPlaybackPositionUpdateListener' name='listener'/><parameter type='android.os.Handler' name='handler'/></method><method return='int' name='setPlaybackRate' api_added='3'><parameter type='int' name='sampleRateInHz'/></method><method return='int' name='setPositionNotificationPeriod' api_added='3'><parameter type='int' name='periodInFrames'/></method><method visibility='protected' name='setState' api_added='3'><parameter type='int' name='state'/></method><method return='int' name='setStereoVolume' api_added='3'><parameter type='float' name='leftVolume'/><parameter type='float' name='rightVolume'/></method><method name='stop' api_added='3'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='write' api_added='3'><parameter type='byte[]' name='audioData'/><parameter type='int' name='offsetInBytes'/><parameter type='int' name='sizeInBytes'/></method><method return='int' name='write' api_added='3'><parameter type='short[]' name='audioData'/><parameter type='int' name='offsetInShorts'/><parameter type='int' name='sizeInShorts'/></method><method return='int' name='attachAuxEffect' api_added='9'><parameter type='int' name='effectId'/></method><method return='int' name='getAudioSessionId' api_added='9'/><method return='int' name='setAuxEffectSendLevel' api_added='9'><parameter type='float' name='level'/></method></class><class extends='java.lang.Object' name='JetPlayer' api_added='3'><method return='boolean' name='clearQueue' api_added='3'/><method return='java.lang.Object' name='clone' api_added='3'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='boolean' name='closeJetFile' api_added='3'/><method return='android.media.JetPlayer' static='true' name='getJetPlayer' api_added='3'/><method return='int' static='true' name='getMaxTracks' api_added='3'/><method return='boolean' name='loadJetFile' api_added='3'><parameter type='java.lang.String' name='path'/></method><method return='boolean' name='loadJetFile' api_added='3'><parameter type='android.content.res.AssetFileDescriptor' name='afd'/></method><method return='boolean' name='pause' api_added='3'/><method return='boolean' name='play' api_added='3'/><method return='boolean' name='queueJetSegment' api_added='3'><parameter type='int' name='segmentNum'/><parameter type='int' name='libNum'/><parameter type='int' name='repeatCount'/><parameter type='int' name='transpose'/><parameter type='int' name='muteFlags'/><parameter type='byte' name='userID'/></method><method return='boolean' name='queueJetSegmentMuteArray' api_added='3'><parameter type='int' name='segmentNum'/><parameter type='int' name='libNum'/><parameter type='int' name='repeatCount'/><parameter type='int' name='transpose'/><parameter type='boolean[]' name='muteArray'/><parameter type='byte' name='userID'/></method><method name='release' api_added='3'/><method name='setEventListener' api_added='3'><parameter type='android.media.JetPlayer.OnJetEventListener' name='listener'/></method><method name='setEventListener' api_added='3'><parameter type='android.media.JetPlayer.OnJetEventListener' name='listener'/><parameter type='android.os.Handler' name='handler'/></method><method return='boolean' name='setMuteArray' api_added='3'><parameter type='boolean[]' name='muteArray'/><parameter type='boolean' name='sync'/></method><method return='boolean' name='setMuteFlag' api_added='3'><parameter type='int' name='trackId'/><parameter type='boolean' name='muteFlag'/><parameter type='boolean' name='sync'/></method><method return='boolean' name='setMuteFlags' api_added='3'><parameter type='int' name='muteFlags'/><parameter type='boolean' name='sync'/></method><method return='boolean' name='triggerClip' api_added='3'><parameter type='int' name='clipId'/></method></class><class extends='java.lang.Object' name='MediaRecorder.VideoEncoder' api_added='3' final='true'/><class extends='java.lang.Object' name='MediaRecorder.VideoSource' api_added='3' final='true'/><class extends='java.lang.Object' name='ExifInterface' api_added='5'><constructor type='android.media.ExifInterface' name='ExifInterface' api_added='5'><parameter type='java.lang.String' name='filename'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.lang.String' name='getAttribute' api_added='5'><parameter type='java.lang.String' name='tag'/></method><method return='int' name='getAttributeInt' api_added='5'><parameter type='java.lang.String' name='tag'/><parameter type='int' name='defaultValue'/></method><method return='boolean' name='getLatLong' api_added='5'><parameter type='float[]' name='output'/></method><method return='byte[]' name='getThumbnail' api_added='5'/><method return='boolean' name='hasThumbnail' api_added='5'/><method name='saveAttributes' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method name='setAttribute' api_added='5'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='value'/></method><method return='double' name='getAttributeDouble' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='double' name='defaultValue'/></method><method return='double' name='getAltitude' api_added='9'><parameter type='double' name='defaultValue'/></method></class><class extends='java.lang.Object' name='CamcorderProfile' api_added='8'><method return='android.media.CamcorderProfile' static='true' name='get' api_added='8'><parameter type='int' name='quality'/></method><method return='android.media.CamcorderProfile' static='true' name='get' api_added='9'><parameter type='int' name='cameraId'/><parameter type='int' name='quality'/></method><method return='boolean' static='true' name='hasProfile' api_added='11'><parameter type='int' name='quality'/></method><method return='boolean' static='true' name='hasProfile' api_added='11'><parameter type='int' name='cameraId'/><parameter type='int' name='quality'/></method></class><class extends='java.lang.Object' name='CameraProfile' api_added='8'><constructor type='android.media.CameraProfile' name='CameraProfile' api_added='8'/><method return='int' static='true' name='getJpegEncodingQualityParameter' api_added='8'><parameter type='int' name='quality'/></method><method return='int' static='true' name='getJpegEncodingQualityParameter' api_added='9'><parameter type='int' name='cameraId'/><parameter type='int' name='quality'/></method></class><class extends='java.lang.Object' name='ThumbnailUtils' api_added='8'><constructor type='android.media.ThumbnailUtils' name='ThumbnailUtils' api_added='8'/><method return='android.graphics.Bitmap' static='true' name='createVideoThumbnail' api_added='8'><parameter type='java.lang.String' name='filePath'/><parameter type='int' name='kind'/></method><method return='android.graphics.Bitmap' static='true' name='extractThumbnail' api_added='8'><parameter type='android.graphics.Bitmap' name='source'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='android.graphics.Bitmap' static='true' name='extractThumbnail' api_added='8'><parameter type='android.graphics.Bitmap' name='source'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='options'/></method></class><class extends='java.lang.Object' name='MediaMetadataRetriever' api_added='10'><constructor type='android.media.MediaMetadataRetriever' name='MediaMetadataRetriever' api_added='10'/><method return='java.lang.String' native='true' name='extractMetadata' api_added='10'><parameter type='int' name='keyCode'/></method><method return='byte[]' name='getEmbeddedPicture' api_added='10'/><method return='android.graphics.Bitmap' name='getFrameAtTime' api_added='10'><parameter type='long' name='timeUs'/><parameter type='int' name='option'/></method><method return='android.graphics.Bitmap' name='getFrameAtTime' api_added='10'><parameter type='long' name='timeUs'/></method><method return='android.graphics.Bitmap' name='getFrameAtTime' api_added='10'/><method native='true' name='release' api_added='10'/><method native='true' name='setDataSource' api_added='10'><parameter type='java.lang.String' name='path'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method native='true' name='setDataSource' api_added='10'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='long' name='offset'/><parameter type='long' name='length'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setDataSource' api_added='10'><parameter type='java.io.FileDescriptor' name='fd'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setDataSource' api_added='10'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method name='setDataSource' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/></method></class><class extends='java.lang.Object' name='RemoteControlClient' api_added='14'><constructor type='android.media.RemoteControlClient' name='RemoteControlClient' api_added='14'><parameter type='android.app.PendingIntent' name='arg0'/></constructor><constructor type='android.media.RemoteControlClient' name='RemoteControlClient' api_added='14'><parameter type='android.app.PendingIntent' name='arg0'/><parameter type='android.os.Looper' name='arg1'/></constructor><method return='android.media.RemoteControlClient.MetadataEditor' name='editMetadata' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setPlaybackState' api_added='14'><parameter type='int' name='arg0'/></method><method name='setTransportControlFlags' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='RemoteControlClient.MetadataEditor' api_added='14'><method synchronized='true' name='apply' api_added='14'/><method synchronized='true' name='clear' api_added='14'/><method return='android.media.RemoteControlClient.MetadataEditor' synchronized='true' name='putBitmap' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.graphics.Bitmap' name='arg1'/></method><method return='android.media.RemoteControlClient.MetadataEditor' synchronized='true' name='putLong' api_added='14'><parameter type='int' name='arg0'/><parameter type='long' name='arg1'/></method><method return='android.media.RemoteControlClient.MetadataEditor' synchronized='true' name='putString' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method></class><class extends='java.lang.Object' name='MediaActionSound' api_added='16'><constructor type='android.media.MediaActionSound' name='MediaActionSound' api_added='16'/><method synchronized='true' name='load' api_added='16'><parameter type='int' name='arg0'/></method><method synchronized='true' name='play' api_added='16'><parameter type='int' name='arg0'/></method><method name='release' api_added='16'/></class><class extends='java.lang.Object' name='MediaCodec' api_added='16' final='true'><method name='configure' api_added='16'><parameter type='android.media.MediaFormat' name='arg0'/><parameter type='android.view.Surface' name='arg1'/><parameter type='android.media.MediaCrypto' name='arg2'/><parameter type='int' name='arg3'/></method><method return='android.media.MediaCodec' static='true' name='createByCodecName' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='android.media.MediaCodec' static='true' name='createDecoderByType' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='android.media.MediaCodec' static='true' name='createEncoderByType' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='int' name='dequeueInputBuffer' api_added='16' final='true'><parameter type='long' name='arg0'/></method><method return='int' name='dequeueOutputBuffer' api_added='16' final='true'><parameter type='android.media.MediaCodec.BufferInfo' name='arg0'/><parameter type='long' name='arg1'/></method><method name='flush' api_added='16' final='true'/><method return='java.nio.ByteBuffer[]' name='getInputBuffers' api_added='16'/><method return='java.nio.ByteBuffer[]' name='getOutputBuffers' api_added='16'/><method return='android.media.MediaFormat' name='getOutputFormat' api_added='16' final='true'/><method name='queueInputBuffer' api_added='16' final='true'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='long' name='arg3'/><parameter type='int' name='arg4'/></method><method name='queueSecureInputBuffer' api_added='16' final='true'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.media.MediaCodec.CryptoInfo' name='arg2'/><parameter type='long' name='arg3'/><parameter type='int' name='arg4'/></method><method name='release' api_added='16' final='true'/><method name='releaseOutputBuffer' api_added='16' final='true'><parameter type='int' name='arg0'/><parameter type='boolean' name='arg1'/></method><method name='setVideoScalingMode' api_added='16' final='true'><parameter type='int' name='arg0'/></method><method name='start' api_added='16' final='true'/><method name='stop' api_added='16' final='true'/></class><class extends='java.lang.Object' static='true' name='MediaCodec.BufferInfo' api_added='16' final='true'><constructor type='android.media.MediaCodec.BufferInfo' name='MediaCodec.BufferInfo' api_added='16'/><method name='set' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='long' name='arg2'/><parameter type='int' name='arg3'/></method></class><class extends='java.lang.RuntimeException' static='true' name='MediaCodec.CryptoException' api_added='16' final='true'><constructor type='android.media.MediaCodec.CryptoException' name='MediaCodec.CryptoException' api_added='16'><parameter type='int' name='arg0'/><parameter type='java.lang.String' name='arg1'/></constructor><method return='int' name='getErrorCode' api_added='16'/></class><class extends='java.lang.Object' static='true' name='MediaCodec.CryptoInfo' api_added='16' final='true'><constructor type='android.media.MediaCodec.CryptoInfo' name='MediaCodec.CryptoInfo' api_added='16'/><method name='set' api_added='16'><parameter type='int' name='arg0'/><parameter type='int[]' name='arg1'/><parameter type='int[]' name='arg2'/><parameter type='byte[]' name='arg3'/><parameter type='byte[]' name='arg4'/><parameter type='int' name='arg5'/></method></class><class extends='java.lang.Object' name='MediaCodecInfo' api_added='16' final='true'><method return='android.media.MediaCodecInfo.CodecCapabilities' name='getCapabilitiesForType' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='java.lang.String' name='getName' api_added='16' final='true'/><method return='java.lang.String[]' name='getSupportedTypes' api_added='16' final='true'/><method return='boolean' name='isEncoder' api_added='16' final='true'/></class><class extends='java.lang.Object' static='true' name='MediaCodecInfo.CodecCapabilities' api_added='16' final='true'><constructor type='android.media.MediaCodecInfo.CodecCapabilities' name='MediaCodecInfo.CodecCapabilities' api_added='16'/></class><class extends='java.lang.Object' static='true' name='MediaCodecInfo.CodecProfileLevel' api_added='16' final='true'><constructor type='android.media.MediaCodecInfo.CodecProfileLevel' name='MediaCodecInfo.CodecProfileLevel' api_added='16'/></class><class extends='java.lang.Object' name='MediaCodecList' api_added='16' final='true'><method return='int' static='true' name='getCodecCount' api_added='16' final='true'/><method return='android.media.MediaCodecInfo' static='true' name='getCodecInfoAt' api_added='16' final='true'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='MediaCrypto' api_added='16' final='true'><constructor type='android.media.MediaCrypto' name='MediaCrypto' api_added='16'><parameter type='java.util.UUID' name='arg0'/><parameter type='byte[]' name='arg1'/></constructor><method return='boolean' static='true' name='isCryptoSchemeSupported' api_added='16' final='true'><parameter type='java.util.UUID' name='arg0'/></method><method name='release' api_added='16' final='true'/><method return='boolean' name='requiresSecureDecoderComponent' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method></class><class extends='java.lang.Exception' name='MediaCryptoException' api_added='16' final='true'><constructor type='android.media.MediaCryptoException' name='MediaCryptoException' api_added='16'><parameter type='java.lang.String' name='arg0'/></constructor></class><class extends='java.lang.Object' name='MediaExtractor' api_added='16' final='true'><constructor type='android.media.MediaExtractor' name='MediaExtractor' api_added='16'/><method return='boolean' name='advance' api_added='16'/><method return='long' name='getCachedDuration' api_added='16'/><method return='boolean' name='getSampleCryptoInfo' api_added='16'><parameter type='android.media.MediaCodec.CryptoInfo' name='arg0'/></method><method return='int' name='getSampleFlags' api_added='16'/><method return='long' name='getSampleTime' api_added='16'/><method return='int' name='getSampleTrackIndex' api_added='16'/><method return='int' name='getTrackCount' api_added='16' final='true'/><method return='android.media.MediaFormat' name='getTrackFormat' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' name='hasCacheReachedEndOfStream' api_added='16'/><method return='int' name='readSampleData' api_added='16'><parameter type='java.nio.ByteBuffer' name='arg0'/><parameter type='int' name='arg1'/></method><method name='release' api_added='16' final='true'/><method name='seekTo' api_added='16'><parameter type='long' name='arg0'/><parameter type='int' name='arg1'/></method><method name='selectTrack' api_added='16'><parameter type='int' name='arg0'/></method><method name='setDataSource' api_added='16' final='true'><parameter type='android.content.Context' name='arg0'/><parameter type='android.net.Uri' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method><method name='setDataSource' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/></method><method name='setDataSource' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method name='setDataSource' api_added='16' final='true'><parameter type='java.io.FileDescriptor' name='arg0'/></method><method name='setDataSource' api_added='16' final='true'><parameter type='java.io.FileDescriptor' name='arg0'/><parameter type='long' name='arg1'/><parameter type='long' name='arg2'/></method><method name='unselectTrack' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='MediaFormat' api_added='16' final='true'><constructor type='android.media.MediaFormat' name='MediaFormat' api_added='16'/><method return='boolean' name='containsKey' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='android.media.MediaFormat' static='true' name='createAudioFormat' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='android.media.MediaFormat' static='true' name='createVideoFormat' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='java.nio.ByteBuffer' name='getByteBuffer' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='float' name='getFloat' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='int' name='getInteger' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='long' name='getLong' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method return='java.lang.String' name='getString' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/></method><method name='setByteBuffer' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='java.nio.ByteBuffer' name='arg1'/></method><method name='setFloat' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='float' name='arg1'/></method><method name='setInteger' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setLong' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='long' name='arg1'/></method><method name='setString' api_added='16' final='true'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='MediaPlayer.TrackInfo' api_added='16'><method return='int' name='describeContents' api_added='16'/><method return='java.lang.String' name='getLanguage' api_added='16'/><method return='int' name='getTrackType' api_added='16'/><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='MediaRouter' api_added='16'><method name='addCallback' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.media.MediaRouter.Callback' name='arg1'/></method><method name='addUserRoute' api_added='16'><parameter type='android.media.MediaRouter.UserRouteInfo' name='arg0'/></method><method name='clearUserRoutes' api_added='16'/><method return='android.media.MediaRouter.RouteCategory' name='createRouteCategory' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/><parameter type='boolean' name='arg1'/></method><method return='android.media.MediaRouter.RouteCategory' name='createRouteCategory' api_added='16'><parameter type='int' name='arg0'/><parameter type='boolean' name='arg1'/></method><method return='android.media.MediaRouter.UserRouteInfo' name='createUserRoute' api_added='16'><parameter type='android.media.MediaRouter.RouteCategory' name='arg0'/></method><method return='android.media.MediaRouter.RouteCategory' name='getCategoryAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getCategoryCount' api_added='16'/><method return='android.media.MediaRouter.RouteInfo' name='getRouteAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getRouteCount' api_added='16'/><method return='android.media.MediaRouter.RouteInfo' name='getSelectedRoute' api_added='16'><parameter type='int' name='arg0'/></method><method name='removeCallback' api_added='16'><parameter type='android.media.MediaRouter.Callback' name='arg0'/></method><method name='removeUserRoute' api_added='16'><parameter type='android.media.MediaRouter.UserRouteInfo' name='arg0'/></method><method name='selectRoute' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='MediaRouter.Callback' api_added='16'><constructor type='android.media.MediaRouter.Callback' name='MediaRouter.Callback' api_added='16'/><method abstract='true' name='onRouteAdded' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method abstract='true' name='onRouteChanged' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method abstract='true' name='onRouteGrouped' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/><parameter type='android.media.MediaRouter.RouteGroup' name='arg2'/><parameter type='int' name='arg3'/></method><method abstract='true' name='onRouteRemoved' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method abstract='true' name='onRouteSelected' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg2'/></method><method abstract='true' name='onRouteUngrouped' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/><parameter type='android.media.MediaRouter.RouteGroup' name='arg2'/></method><method abstract='true' name='onRouteUnselected' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg2'/></method><method abstract='true' name='onRouteVolumeChanged' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='MediaRouter.RouteCategory' api_added='16'><method return='java.lang.CharSequence' name='getName' api_added='16'/><method return='java.lang.CharSequence' name='getName' api_added='16'><parameter type='android.content.Context' name='arg0'/></method><method return='java.util.List&lt;android.media.MediaRouter.RouteInfo&gt;' name='getRoutes' api_added='16'><parameter type='java.util.List&lt;android.media.MediaRouter.RouteInfo&gt;' name='arg0'/></method><method return='int' name='getSupportedTypes' api_added='16'/><method return='boolean' name='isGroupable' api_added='16'/></class><class extends='android.media.MediaRouter.RouteInfo' static='true' name='MediaRouter.RouteGroup' api_added='16'><method name='addRoute' api_added='16'><parameter type='android.media.MediaRouter.RouteInfo' name='arg0'/></method><method name='addRoute' api_added='16'><parameter type='android.media.MediaRouter.RouteInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.media.MediaRouter.RouteInfo' name='getRouteAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getRouteCount' api_added='16'/><method name='removeRoute' api_added='16'><parameter type='android.media.MediaRouter.RouteInfo' name='arg0'/></method><method name='removeRoute' api_added='16'><parameter type='int' name='arg0'/></method><method name='setIconDrawable' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setIconResource' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='MediaRouter.RouteInfo' api_added='16'><method return='android.media.MediaRouter.RouteCategory' name='getCategory' api_added='16'/><method return='android.media.MediaRouter.RouteGroup' name='getGroup' api_added='16'/><method return='android.graphics.drawable.Drawable' name='getIconDrawable' api_added='16'/><method return='java.lang.CharSequence' name='getName' api_added='16'/><method return='java.lang.CharSequence' name='getName' api_added='16'><parameter type='android.content.Context' name='arg0'/></method><method return='int' name='getPlaybackStream' api_added='16'/><method return='int' name='getPlaybackType' api_added='16'/><method return='java.lang.CharSequence' name='getStatus' api_added='16'/><method return='int' name='getSupportedTypes' api_added='16'/><method return='java.lang.Object' name='getTag' api_added='16'/><method return='int' name='getVolume' api_added='16'/><method return='int' name='getVolumeHandling' api_added='16'/><method return='int' name='getVolumeMax' api_added='16'/><method name='requestSetVolume' api_added='16'><parameter type='int' name='arg0'/></method><method name='requestUpdateVolume' api_added='16'><parameter type='int' name='arg0'/></method><method name='setTag' api_added='16'><parameter type='java.lang.Object' name='arg0'/></method></class><class extends='android.media.MediaRouter.Callback' static='true' name='MediaRouter.SimpleCallback' api_added='16'><constructor type='android.media.MediaRouter.SimpleCallback' name='MediaRouter.SimpleCallback' api_added='16'/><method name='onRouteAdded' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method name='onRouteChanged' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method name='onRouteGrouped' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/><parameter type='android.media.MediaRouter.RouteGroup' name='arg2'/><parameter type='int' name='arg3'/></method><method name='onRouteRemoved' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method><method name='onRouteSelected' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg2'/></method><method name='onRouteUngrouped' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/><parameter type='android.media.MediaRouter.RouteGroup' name='arg2'/></method><method name='onRouteUnselected' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg2'/></method><method name='onRouteVolumeChanged' api_added='16'><parameter type='android.media.MediaRouter' name='arg0'/><parameter type='android.media.MediaRouter.RouteInfo' name='arg1'/></method></class><class extends='android.media.MediaRouter.RouteInfo' static='true' name='MediaRouter.UserRouteInfo' api_added='16'><method return='android.media.RemoteControlClient' name='getRemoteControlClient' api_added='16'/><method name='setIconDrawable' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setIconResource' api_added='16'><parameter type='int' name='arg0'/></method><method name='setName' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setName' api_added='16'><parameter type='int' name='arg0'/></method><method name='setPlaybackStream' api_added='16'><parameter type='int' name='arg0'/></method><method name='setPlaybackType' api_added='16'><parameter type='int' name='arg0'/></method><method name='setRemoteControlClient' api_added='16'><parameter type='android.media.RemoteControlClient' name='arg0'/></method><method name='setStatus' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setVolume' api_added='16'><parameter type='int' name='arg0'/></method><method name='setVolumeCallback' api_added='16'><parameter type='android.media.MediaRouter.VolumeCallback' name='arg0'/></method><method name='setVolumeHandling' api_added='16'><parameter type='int' name='arg0'/></method><method name='setVolumeMax' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='MediaRouter.VolumeCallback' api_added='16'><constructor type='android.media.MediaRouter.VolumeCallback' name='MediaRouter.VolumeCallback' api_added='16'/><method abstract='true' name='onVolumeSetRequest' api_added='16'><parameter type='android.media.MediaRouter.RouteInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method abstract='true' name='onVolumeUpdateRequest' api_added='16'><parameter type='android.media.MediaRouter.RouteInfo' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='MediaSyncEvent' api_added='16'><method return='android.media.MediaSyncEvent' static='true' name='createEvent' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getAudioSessionId' api_added='16'/><method return='int' name='getType' api_added='16'/><method return='android.media.MediaSyncEvent' name='setAudioSessionId' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='TimedText' api_added='16' final='true'><method return='android.graphics.Rect' name='getBounds' api_added='16'/><method return='java.lang.String' name='getText' api_added='16'/></class><interface abstract='true' static='true' name='MediaPlayer.OnBufferingUpdateListener'><method abstract='true' name='onBufferingUpdate'><parameter type='android.media.MediaPlayer' name='mp'/><parameter type='int' name='percent'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnCompletionListener'><method abstract='true' name='onCompletion'><parameter type='android.media.MediaPlayer' name='mp'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnErrorListener'><method return='boolean' abstract='true' name='onError'><parameter type='android.media.MediaPlayer' name='mp'/><parameter type='int' name='what'/><parameter type='int' name='extra'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnPreparedListener'><method abstract='true' name='onPrepared'><parameter type='android.media.MediaPlayer' name='mp'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnSeekCompleteListener'><method abstract='true' name='onSeekComplete'><parameter type='android.media.MediaPlayer' name='mp'/></method></interface><interface abstract='true' static='true' name='MediaScannerConnection.MediaScannerConnectionClient'><method abstract='true' name='onMediaScannerConnected'/><method abstract='true' name='onScanCompleted'><parameter type='java.lang.String' name='path'/><parameter type='android.net.Uri' name='uri'/></method></interface><interface abstract='true' static='true' name='AudioRecord.OnRecordPositionUpdateListener' api_added='3'><method abstract='true' name='onMarkerReached' api_added='3'><parameter type='android.media.AudioRecord' name='recorder'/></method><method abstract='true' name='onPeriodicNotification' api_added='3'><parameter type='android.media.AudioRecord' name='recorder'/></method></interface><interface abstract='true' static='true' name='AudioTrack.OnPlaybackPositionUpdateListener' api_added='3'><method abstract='true' name='onMarkerReached' api_added='3'><parameter type='android.media.AudioTrack' name='track'/></method><method abstract='true' name='onPeriodicNotification' api_added='3'><parameter type='android.media.AudioTrack' name='track'/></method></interface><interface abstract='true' static='true' name='JetPlayer.OnJetEventListener' api_added='3'><method abstract='true' name='onJetEvent' api_added='3'><parameter type='android.media.JetPlayer' name='player'/><parameter type='short' name='segment'/><parameter type='byte' name='track'/><parameter type='byte' name='channel'/><parameter type='byte' name='controller'/><parameter type='byte' name='value'/></method><method abstract='true' name='onJetNumQueuedSegmentUpdate' api_added='3'><parameter type='android.media.JetPlayer' name='player'/><parameter type='int' name='nbSegments'/></method><method abstract='true' name='onJetPauseUpdate' api_added='3'><parameter type='android.media.JetPlayer' name='player'/><parameter type='int' name='paused'/></method><method abstract='true' name='onJetUserIdUpdate' api_added='3'><parameter type='android.media.JetPlayer' name='player'/><parameter type='int' name='userId'/><parameter type='int' name='repeatCount'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnInfoListener' api_added='3'><method return='boolean' abstract='true' name='onInfo' api_added='3'><parameter type='android.media.MediaPlayer' name='mp'/><parameter type='int' name='what'/><parameter type='int' name='extra'/></method></interface><interface abstract='true' static='true' name='MediaPlayer.OnVideoSizeChangedListener' api_added='3'><method abstract='true' name='onVideoSizeChanged' api_added='3'><parameter type='android.media.MediaPlayer' name='mp'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method></interface><interface abstract='true' static='true' name='MediaRecorder.OnErrorListener' api_added='3'><method abstract='true' name='onError' api_added='3'><parameter type='android.media.MediaRecorder' name='mr'/><parameter type='int' name='what'/><parameter type='int' name='extra'/></method></interface><interface abstract='true' static='true' name='MediaRecorder.OnInfoListener' api_added='3'><method abstract='true' name='onInfo' api_added='3'><parameter type='android.media.MediaRecorder' name='mr'/><parameter type='int' name='what'/><parameter type='int' name='extra'/></method></interface><interface abstract='true' static='true' name='AudioManager.OnAudioFocusChangeListener' api_added='8'><method abstract='true' name='onAudioFocusChange' api_added='8'><parameter type='int' name='focusChange'/></method></interface><interface abstract='true' static='true' name='MediaScannerConnection.OnScanCompletedListener' api_added='8'><method abstract='true' name='onScanCompleted' api_added='8'><parameter type='java.lang.String' name='path'/><parameter type='android.net.Uri' name='uri'/></method></interface><interface abstract='true' static='true' name='SoundPool.OnLoadCompleteListener' api_added='8'><method abstract='true' name='onLoadComplete' api_added='8'><parameter type='android.media.SoundPool' name='soundPool'/><parameter type='int' name='sampleId'/><parameter type='int' name='status'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='MediaPlayer.OnTimedTextListener' api_added='16'><method abstract='true' name='onTimedText' api_added='16'><parameter type='android.media.MediaPlayer' name='arg0'/><parameter type='android.media.TimedText' name='arg1'/></method></interface></package><package name='android.net'><class extends='java.lang.Object' name='ConnectivityManager'><method return='android.net.NetworkInfo' name='getActiveNetworkInfo'/><method return='android.net.NetworkInfo[]' name='getAllNetworkInfo'/><method return='android.net.NetworkInfo' name='getNetworkInfo'><parameter type='int' name='networkType'/></method><method return='int' name='getNetworkPreference'/><method return='boolean' static='true' name='isNetworkTypeValid'><parameter type='int' name='networkType'/></method><method return='boolean' name='requestRouteToHost'><parameter type='int' name='networkType'/><parameter type='int' name='hostAddress'/></method><method name='setNetworkPreference'><parameter type='int' name='preference'/></method><method return='int' name='startUsingNetworkFeature'><parameter type='int' name='networkType'/><parameter type='java.lang.String' name='feature'/></method><method return='int' name='stopUsingNetworkFeature'><parameter type='int' name='networkType'/><parameter type='java.lang.String' name='feature'/></method><method deprecated='14' return='boolean' name='getBackgroundDataSetting' api_added='3'/><method return='boolean' name='isActiveNetworkMetered' api_added='16'/></class><class extends='java.lang.Object' name='Credentials'><constructor type='android.net.Credentials' name='Credentials'><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='gid'/></constructor><method return='int' name='getGid'/><method return='int' name='getPid'/><method return='int' name='getUid'/></class><class extends='java.lang.Object' name='DhcpInfo'><constructor type='android.net.DhcpInfo' name='DhcpInfo'/><method return='int' name='describeContents'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='LocalServerSocket'><constructor type='android.net.LocalServerSocket' name='LocalServerSocket'><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='android.net.LocalServerSocket' name='LocalServerSocket'><parameter type='java.io.FileDescriptor' name='fd'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='android.net.LocalSocket' name='accept'><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.FileDescriptor' name='getFileDescriptor'/><method return='android.net.LocalSocketAddress' name='getLocalSocketAddress'/></class><class extends='java.lang.Object' name='LocalSocket'><constructor type='android.net.LocalSocket' name='LocalSocket'/><method name='bind'><parameter type='android.net.LocalSocketAddress' name='bindpoint'/><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='android.net.LocalSocketAddress' name='endpoint'/><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='android.net.LocalSocketAddress' name='endpoint'/><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.FileDescriptor[]' name='getAncillaryFileDescriptors'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.FileDescriptor' name='getFileDescriptor'/><method return='java.io.InputStream' name='getInputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='android.net.LocalSocketAddress' name='getLocalSocketAddress'/><method return='java.io.OutputStream' name='getOutputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='android.net.Credentials' name='getPeerCredentials'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getReceiveBufferSize'><exception type='java.io.IOException' name='IOException'/></method><method return='android.net.LocalSocketAddress' name='getRemoteSocketAddress'/><method return='int' name='getSendBufferSize'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getSoTimeout'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' synchronized='true' name='isBound'/><method return='boolean' name='isClosed'/><method return='boolean' synchronized='true' name='isConnected'/><method return='boolean' name='isInputShutdown'/><method return='boolean' name='isOutputShutdown'/><method name='setFileDescriptorsForSend'><parameter type='java.io.FileDescriptor[]' name='fds'/></method><method name='setReceiveBufferSize'><parameter type='int' name='size'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSendBufferSize'><parameter type='int' name='n'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSoTimeout'><parameter type='int' name='n'/><exception type='java.io.IOException' name='IOException'/></method><method name='shutdownInput'><exception type='java.io.IOException' name='IOException'/></method><method name='shutdownOutput'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='LocalSocketAddress'><constructor type='android.net.LocalSocketAddress' name='LocalSocketAddress'><parameter type='java.lang.String' name='name'/><parameter type='android.net.LocalSocketAddress.Namespace' name='namespace'/></constructor><constructor type='android.net.LocalSocketAddress' name='LocalSocketAddress'><parameter type='java.lang.String' name='name'/></constructor><method return='java.lang.String' name='getName'/><method return='android.net.LocalSocketAddress.Namespace' name='getNamespace'/></class><class extends='java.lang.Enum' static='true' name='LocalSocketAddress.Namespace' final='true'><method return='android.net.LocalSocketAddress.Namespace' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.net.LocalSocketAddress.Namespace[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='MailTo'><method return='java.lang.String' name='getBody'/><method return='java.lang.String' name='getCc'/><method return='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='getHeaders'/><method return='java.lang.String' name='getSubject'/><method return='java.lang.String' name='getTo'/><method return='boolean' static='true' name='isMailTo'><parameter type='java.lang.String' name='url'/></method><method return='android.net.MailTo' static='true' name='parse'><parameter type='java.lang.String' name='url'/><exception type='android.net.ParseException' name='ParseException'/></method></class><class extends='java.lang.Object' name='NetworkInfo'><constructor api_removed='3' type='android.net.NetworkInfo' name='NetworkInfo'><parameter type='int' name='type'/></constructor><method return='int' name='describeContents'/><method return='android.net.NetworkInfo.DetailedState' name='getDetailedState'/><method return='java.lang.String' name='getExtraInfo'/><method return='java.lang.String' name='getReason'/><method return='android.net.NetworkInfo.State' name='getState'/><method return='int' name='getType'/><method return='java.lang.String' name='getTypeName'/><method return='boolean' name='isAvailable'/><method return='boolean' name='isConnected'/><method return='boolean' name='isConnectedOrConnecting'/><method return='boolean' name='isFailover'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='int' name='getSubtype' api_added='3'/><method return='java.lang.String' name='getSubtypeName' api_added='3'/><method return='boolean' name='isRoaming' api_added='3'/></class><class extends='java.lang.Enum' static='true' name='NetworkInfo.DetailedState' final='true'><method return='android.net.NetworkInfo.DetailedState' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.net.NetworkInfo.DetailedState[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='NetworkInfo.State' final='true'><method return='android.net.NetworkInfo.State' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.net.NetworkInfo.State[]' static='true' name='values' final='true'/></class><class extends='java.lang.RuntimeException' name='ParseException'/><class extends='java.lang.Object' name='Proxy' final='true'><constructor type='android.net.Proxy' name='Proxy'/><method deprecated='11' return='java.lang.String' static='true' name='getDefaultHost' final='true'/><method deprecated='11' return='int' static='true' name='getDefaultPort' final='true'/><method deprecated='11' return='java.lang.String' static='true' name='getHost' final='true'><parameter type='android.content.Context' name='ctx'/></method><method deprecated='11' return='int' static='true' name='getPort' final='true'><parameter type='android.content.Context' name='ctx'/></method></class><class extends='javax.net.ssl.SSLSocketFactory' name='SSLCertificateSocketFactory'><constructor deprecated='8' api_removed='14' type='android.net.SSLCertificateSocketFactory' name='SSLCertificateSocketFactory'><parameter type='int' name='socketReadTimeoutForSslHandshake'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></constructor><constructor type='android.net.deprecated SSLCertificateSocketFactory' name='deprecated SSLCertificateSocketFactory' api_added='14'><parameter type='int' name='arg0'/></constructor><method return='java.net.Socket' name='createSocket'><parameter type='java.net.Socket' name='socket'/><parameter type='java.lang.String' name='s'/><parameter type='int' name='i'/><parameter type='boolean' name='flag'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><parameter type='java.net.InetAddress' name='inaddr'/><parameter type='int' name='i'/><parameter type='java.net.InetAddress' name='inaddr2'/><parameter type='int' name='j'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><parameter type='java.net.InetAddress' name='inaddr'/><parameter type='int' name='i'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><parameter type='java.lang.String' name='s'/><parameter type='int' name='i'/><parameter type='java.net.InetAddress' name='inaddr'/><parameter type='int' name='j'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><parameter type='java.lang.String' name='s'/><parameter type='int' name='i'/><exception type='java.io.IOException' name='IOException'/></method><method return='javax.net.SocketFactory' static='true' name='getDefault'><parameter type='int' name='socketReadTimeoutForSslHandshake'/></method><method return='java.lang.String[]' name='getDefaultCipherSuites'/><method return='java.lang.String[]' name='getSupportedCipherSuites'/><method return='javax.net.ssl.SSLSocketFactory' static='true' name='getDefault' api_added='8'><parameter type='int' name='handshakeTimeoutMillis'/><parameter type='android.net.SSLSessionCache' name='cache'/></method><method return='org.apache.http.conn.ssl.SSLSocketFactory' static='true' name='getHttpSocketFactory' api_added='8'><parameter type='int' name='handshakeTimeoutMillis'/><parameter type='android.net.SSLSessionCache' name='cache'/></method><method return='javax.net.ssl.SSLSocketFactory' static='true' name='getInsecure' api_added='8'><parameter type='int' name='handshakeTimeoutMillis'/><parameter type='android.net.SSLSessionCache' name='cache'/></method><method name='setKeyManagers' api_added='14'><parameter type='javax.net.ssl.KeyManager[]' name='arg0'/></method><method name='setTrustManagers' api_added='14'><parameter type='javax.net.ssl.TrustManager[]' name='arg0'/></method><method return='byte[]' name='getNpnSelectedProtocol' api_added='16'><parameter type='java.net.Socket' name='arg0'/></method><method name='setNpnProtocols' api_added='16'><parameter type='byte[][]' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' name='Uri'><method return='android.net.Uri.Builder' abstract='true' name='buildUpon'/><method return='int' name='compareTo'><parameter type='android.net.Uri' name='other'/></method><method return='java.lang.String' static='true' name='decode'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String' static='true' name='encode'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String' static='true' name='encode'><parameter type='java.lang.String' name='s'/><parameter type='java.lang.String' name='allow'/></method><method return='android.net.Uri' static='true' name='fromFile'><parameter type='java.io.File' name='file'/></method><method return='android.net.Uri' static='true' name='fromParts'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='ssp'/><parameter type='java.lang.String' name='fragment'/></method><method return='java.lang.String' abstract='true' name='getAuthority'/><method return='java.lang.String' abstract='true' name='getEncodedAuthority'/><method return='java.lang.String' abstract='true' name='getEncodedFragment'/><method return='java.lang.String' abstract='true' name='getEncodedPath'/><method return='java.lang.String' abstract='true' name='getEncodedQuery'/><method return='java.lang.String' abstract='true' name='getEncodedSchemeSpecificPart'/><method return='java.lang.String' abstract='true' name='getEncodedUserInfo'/><method return='java.lang.String' abstract='true' name='getFragment'/><method return='java.lang.String' abstract='true' name='getHost'/><method return='java.lang.String' abstract='true' name='getLastPathSegment'/><method return='java.lang.String' abstract='true' name='getPath'/><method return='java.util.List&lt;java.lang.String&gt;' abstract='true' name='getPathSegments'/><method return='int' abstract='true' name='getPort'/><method return='java.lang.String' abstract='true' name='getQuery'/><method return='java.lang.String' name='getQueryParameter'><parameter type='java.lang.String' name='key'/></method><method return='java.util.List&lt;java.lang.String&gt;' name='getQueryParameters'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' abstract='true' name='getScheme'/><method return='java.lang.String' abstract='true' name='getSchemeSpecificPart'/><method return='java.lang.String' abstract='true' name='getUserInfo'/><method return='boolean' name='isAbsolute'/><method return='boolean' abstract='true' name='isHierarchical'/><method return='boolean' name='isOpaque'/><method return='boolean' abstract='true' name='isRelative'/><method return='android.net.Uri' static='true' name='parse'><parameter type='java.lang.String' name='uriString'/></method><method return='java.lang.String' abstract='true' name='toString'/><method return='android.net.Uri' static='true' name='withAppendedPath'><parameter type='android.net.Uri' name='baseUri'/><parameter type='java.lang.String' name='pathSegment'/></method><method static='true' name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='android.net.Uri' name='uri'/></method><method return='boolean' name='getBooleanQueryParameter' api_added='11'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='defaultValue'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='getQueryParameterNames' api_added='11'/><method return='android.net.Uri' name='normalizeScheme' api_added='16'/></class><class extends='java.lang.Object' static='true' name='Uri.Builder' final='true'><constructor type='android.net.Uri.Builder' name='Uri.Builder'/><method return='android.net.Uri.Builder' name='appendEncodedPath'><parameter type='java.lang.String' name='newSegment'/></method><method return='android.net.Uri.Builder' name='appendPath'><parameter type='java.lang.String' name='newSegment'/></method><method return='android.net.Uri.Builder' name='appendQueryParameter'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method return='android.net.Uri.Builder' name='authority'><parameter type='java.lang.String' name='authority'/></method><method return='android.net.Uri' name='build'/><method return='android.net.Uri.Builder' name='encodedAuthority'><parameter type='java.lang.String' name='authority'/></method><method return='android.net.Uri.Builder' name='encodedFragment'><parameter type='java.lang.String' name='fragment'/></method><method return='android.net.Uri.Builder' name='encodedOpaquePart'><parameter type='java.lang.String' name='opaquePart'/></method><method return='android.net.Uri.Builder' name='encodedPath'><parameter type='java.lang.String' name='path'/></method><method return='android.net.Uri.Builder' name='encodedQuery'><parameter type='java.lang.String' name='query'/></method><method return='android.net.Uri.Builder' name='fragment'><parameter type='java.lang.String' name='fragment'/></method><method return='android.net.Uri.Builder' name='opaquePart'><parameter type='java.lang.String' name='opaquePart'/></method><method return='android.net.Uri.Builder' name='path'><parameter type='java.lang.String' name='path'/></method><method return='android.net.Uri.Builder' name='query'><parameter type='java.lang.String' name='query'/></method><method return='android.net.Uri.Builder' name='scheme'><parameter type='java.lang.String' name='scheme'/></method><method return='android.net.Uri.Builder' name='clearQuery' api_added='11'/></class><class extends='java.lang.Object' name='UrlQuerySanitizer'><constructor type='android.net.UrlQuerySanitizer' name='UrlQuerySanitizer'/><constructor type='android.net.UrlQuerySanitizer' name='UrlQuerySanitizer'><parameter type='java.lang.String' name='url'/></constructor><method visibility='protected' name='addSanitizedEntry'><parameter type='java.lang.String' name='parameter'/><parameter type='java.lang.String' name='value'/></method><method visibility='protected' name='clear'/><method visibility='protected' return='int' name='decodeHexDigit'><parameter type='char' name='c'/></method><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAllButNulAndAngleBracketsLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAllButNulLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAllButWhitespaceLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAllIllegal' final='true'/><method return='boolean' name='getAllowUnregisteredParamaters'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAmpAndSpaceLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getAmpLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' name='getEffectiveValueSanitizer'><parameter type='java.lang.String' name='parameter'/></method><method return='java.util.List&lt;android.net.UrlQuerySanitizer.ParameterValuePair&gt;' name='getParameterList'/><method return='java.util.Set&lt;java.lang.String&gt;' name='getParameterSet'/><method return='boolean' name='getPreferFirstRepeatedParameter'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getSpaceLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' name='getUnregisteredParameterValueSanitizer'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getUrlAndSpaceLegal' final='true'/><method return='android.net.UrlQuerySanitizer.ValueSanitizer' static='true' name='getUrlLegal' final='true'/><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='parameter'/></method><method return='android.net.UrlQuerySanitizer.ValueSanitizer' name='getValueSanitizer'><parameter type='java.lang.String' name='parameter'/></method><method return='boolean' name='hasParameter'><parameter type='java.lang.String' name='parameter'/></method><method visibility='protected' return='boolean' name='isHexDigit'><parameter type='char' name='c'/></method><method visibility='protected' name='parseEntry'><parameter type='java.lang.String' name='parameter'/><parameter type='java.lang.String' name='value'/></method><method name='parseQuery'><parameter type='java.lang.String' name='query'/></method><method name='parseUrl'><parameter type='java.lang.String' name='url'/></method><method name='registerParameter'><parameter type='java.lang.String' name='parameter'/><parameter type='android.net.UrlQuerySanitizer.ValueSanitizer' name='valueSanitizer'/></method><method name='registerParameters'><parameter type='java.lang.String[]' name='parameters'/><parameter type='android.net.UrlQuerySanitizer.ValueSanitizer' name='valueSanitizer'/></method><method name='setAllowUnregisteredParamaters'><parameter type='boolean' name='allowUnregisteredParamaters'/></method><method name='setPreferFirstRepeatedParameter'><parameter type='boolean' name='preferFirstRepeatedParameter'/></method><method name='setUnregisteredParameterValueSanitizer'><parameter type='android.net.UrlQuerySanitizer.ValueSanitizer' name='sanitizer'/></method><method return='java.lang.String' name='unescape'><parameter type='java.lang.String' name='string'/></method></class><class extends='java.lang.Object' static='true' name='UrlQuerySanitizer.IllegalCharacterValueSanitizer'><constructor type='android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer' name='UrlQuerySanitizer.IllegalCharacterValueSanitizer'><parameter type='int' name='flags'/></constructor><method return='java.lang.String' name='sanitize'><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='UrlQuerySanitizer.ParameterValuePair'><constructor type='android.net.UrlQuerySanitizer.ParameterValuePair' name='UrlQuerySanitizer.ParameterValuePair'><parameter type='java.lang.String' name='parameter'/><parameter type='java.lang.String' name='value'/></constructor></class><class extends='java.lang.Object' name='SSLSessionCache' api_added='8' final='true'><constructor type='android.net.SSLSessionCache' name='SSLSessionCache' api_added='8'><parameter type='java.io.File' name='dir'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='android.net.SSLSessionCache' name='SSLSessionCache' api_added='8'><parameter type='android.content.Context' name='context'/></constructor></class><class extends='java.lang.Object' name='TrafficStats' api_added='8'><constructor type='android.net.TrafficStats' name='TrafficStats' api_added='8'/><method return='long' native='true' static='true' name='getMobileRxBytes' api_added='8'/><method return='long' native='true' static='true' name='getMobileRxPackets' api_added='8'/><method return='long' native='true' static='true' name='getMobileTxBytes' api_added='8'/><method return='long' native='true' static='true' name='getMobileTxPackets' api_added='8'/><method return='long' native='true' static='true' name='getTotalRxBytes' api_added='8'/><method return='long' native='true' static='true' name='getTotalRxPackets' api_added='8'/><method return='long' native='true' static='true' name='getTotalTxBytes' api_added='8'/><method return='long' native='true' static='true' name='getTotalTxPackets' api_added='8'/><method return='long' native='true' static='true' name='getUidRxBytes' api_added='8'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTxBytes' api_added='8'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidRxPackets' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTcpRxBytes' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTcpRxSegments' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTcpTxBytes' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTcpTxSegments' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidTxPackets' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidUdpRxBytes' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidUdpRxPackets' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidUdpTxBytes' api_added='12'><parameter type='int' name='uid'/></method><method return='long' native='true' static='true' name='getUidUdpTxPackets' api_added='12'><parameter type='int' name='uid'/></method><method static='true' name='clearThreadStatsTag' api_added='14'/><method return='int' static='true' name='getThreadStatsTag' api_added='14'/><method static='true' name='incrementOperationCount' api_added='14'><parameter type='int' name='arg0'/></method><method static='true' name='incrementOperationCount' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method static='true' name='setThreadStatsTag' api_added='14'><parameter type='int' name='arg0'/></method><method static='true' name='tagSocket' api_added='14'><parameter type='java.net.Socket' name='arg0'/></method><method static='true' name='untagSocket' api_added='14'><parameter type='java.net.Socket' name='arg0'/></method></class><class extends='android.app.Service' name='VpnService' api_added='14'><constructor type='android.net.VpnService' name='VpnService' api_added='14'/><method return='android.os.IBinder' name='onBind' api_added='14'><parameter type='android.content.Intent' name='arg0'/></method><method name='onRevoke' api_added='14'/><method return='android.content.Intent' static='true' name='prepare' api_added='14'><parameter type='android.content.Context' name='arg0'/></method><method return='boolean' name='protect' api_added='14'><parameter type='int' name='arg0'/></method><method return='boolean' name='protect' api_added='14'><parameter type='java.net.Socket' name='arg0'/></method><method return='boolean' name='protect' api_added='14'><parameter type='java.net.DatagramSocket' name='arg0'/></method></class><class extends='java.lang.Object' name='VpnService.Builder' api_added='14'><constructor type='android.net.VpnService.Builder' name='VpnService.Builder' api_added='14'/><method return='android.net.VpnService.Builder' name='addAddress' api_added='14'><parameter type='java.net.InetAddress' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.net.VpnService.Builder' name='addAddress' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.net.VpnService.Builder' name='addDnsServer' api_added='14'><parameter type='java.net.InetAddress' name='arg0'/></method><method return='android.net.VpnService.Builder' name='addDnsServer' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='android.net.VpnService.Builder' name='addRoute' api_added='14'><parameter type='java.net.InetAddress' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.net.VpnService.Builder' name='addRoute' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.net.VpnService.Builder' name='addSearchDomain' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='android.os.ParcelFileDescriptor' name='establish' api_added='14'/><method return='android.net.VpnService.Builder' name='setConfigureIntent' api_added='14'><parameter type='android.app.PendingIntent' name='arg0'/></method><method return='android.net.VpnService.Builder' name='setMtu' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.net.VpnService.Builder' name='setSession' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></class><interface abstract='true' static='true' name='UrlQuerySanitizer.ValueSanitizer'><method return='java.lang.String' abstract='true' name='sanitize'><parameter type='java.lang.String' name='value'/></method></interface></package><package name='android.net.http'><class extends='java.lang.Object' name='SslCertificate'><constructor deprecated='8' type='android.net.http.SslCertificate' name='SslCertificate'><parameter type='java.lang.String' name='issuedTo'/><parameter type='java.lang.String' name='issuedBy'/><parameter type='java.lang.String' name='validNotBefore'/><parameter type='java.lang.String' name='validNotAfter'/></constructor><constructor type='android.net.http.SslCertificate' name='SslCertificate'><parameter type='java.security.cert.X509Certificate' name='certificate'/></constructor><constructor type='android.net.http.deprecated SslCertificate' name='deprecated SslCertificate' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String' name='arg3'/></constructor><constructor type='android.net.http.deprecated SslCertificate' name='deprecated SslCertificate' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String' name='arg3'/></constructor><method return='android.net.http.SslCertificate.DName' name='getIssuedBy'/><method return='android.net.http.SslCertificate.DName' name='getIssuedTo'/><method deprecated='8' return='java.lang.String' name='getValidNotAfter'/><method deprecated='8' return='java.lang.String' name='getValidNotBefore'/><method return='android.net.http.SslCertificate' static='true' name='restoreState'><parameter type='android.os.Bundle' name='bundle'/></method><method return='android.os.Bundle' static='true' name='saveState'><parameter type='android.net.http.SslCertificate' name='certificate'/></method><method return='java.util.Date' name='getValidNotAfterDate' api_added='8'/><method return='java.util.Date' name='getValidNotBeforeDate' api_added='8'/></class><class extends='java.lang.Object' name='SslCertificate.DName'><constructor type='android.net.http.SslCertificate.DName' name='SslCertificate.DName'><parameter type='java.lang.String' name='dName'/></constructor><method return='java.lang.String' name='getCName'/><method return='java.lang.String' name='getDName'/><method return='java.lang.String' name='getOName'/><method return='java.lang.String' name='getUName'/></class><class extends='java.lang.Object' name='AndroidHttpClient' api_added='8' final='true'><method name='close' api_added='8'/><method name='disableCurlLogging' api_added='8'/><method name='enableCurlLogging' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='int' name='level'/></method><method return='org.apache.http.HttpResponse' name='execute' api_added='8'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' api_added='8'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' api_added='8'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' api_added='8'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute' api_added='8'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute' api_added='8'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute' api_added='8'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute' api_added='8'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.entity.AbstractHttpEntity' static='true' name='getCompressedEntity' api_added='8'><parameter type='byte[]' name='data'/><parameter type='android.content.ContentResolver' name='resolver'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.conn.ClientConnectionManager' name='getConnectionManager' api_added='8'/><method return='long' static='true' name='getMinGzipSize' api_added='8'><parameter type='android.content.ContentResolver' name='resolver'/></method><method return='org.apache.http.params.HttpParams' name='getParams' api_added='8'/><method return='java.io.InputStream' static='true' name='getUngzippedContent' api_added='8'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='modifyRequestToAcceptGzipResponse' api_added='8'><parameter type='org.apache.http.HttpRequest' name='request'/></method><method return='android.net.http.AndroidHttpClient' static='true' name='newInstance' api_added='8'><parameter type='java.lang.String' name='userAgent'/><parameter type='android.content.Context' name='context'/></method><method return='android.net.http.AndroidHttpClient' static='true' name='newInstance' api_added='8'><parameter type='java.lang.String' name='userAgent'/></method><method return='long' static='true' name='parseDate' api_added='8'><parameter type='java.lang.String' name='dateString'/></method></class><class extends='java.lang.Object' name='SslError' api_added='8'><constructor type='android.net.http.SslError' name='SslError' api_added='8'><parameter type='int' name='error'/><parameter type='android.net.http.SslCertificate' name='certificate'/></constructor><constructor type='android.net.http.SslError' name='SslError' api_added='8'><parameter type='int' name='error'/><parameter type='java.security.cert.X509Certificate' name='certificate'/></constructor><constructor type='android.net.http.deprecated SslError' name='deprecated SslError' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.net.http.SslCertificate' name='arg1'/></constructor><constructor type='android.net.http.deprecated SslError' name='deprecated SslError' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.net.http.SslCertificate' name='arg1'/></constructor><method return='boolean' name='addError' api_added='8'><parameter type='int' name='error'/></method><method return='android.net.http.SslCertificate' name='getCertificate' api_added='8'/><method return='int' name='getPrimaryError' api_added='8'/><method return='boolean' name='hasError' api_added='8'><parameter type='int' name='error'/></method><method return='java.lang.String' name='getUrl' api_added='14'/></class><class extends='java.net.ResponseCache' name='HttpResponseCache' api_added='13' final='true'><method name='close' api_added='13'><exception type='java.io.IOException' name='IOException'/></method><method name='delete' api_added='13'><exception type='java.io.IOException' name='IOException'/></method><method name='flush' api_added='13'/><method return='java.net.CacheResponse' api_removed='14' name='get' api_added='13'><parameter type='java.net.URI' name='uri'/><parameter type='java.lang.String' name='requestMethod'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='requestHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getHitCount' api_added='13'/><method return='android.net.http.HttpResponseCache' static='true' name='getInstalled' api_added='13'/><method return='int' name='getNetworkCount' api_added='13'/><method return='int' name='getRequestCount' api_added='13'/><method return='android.net.http.HttpResponseCache' static='true' name='install' api_added='13'><parameter type='java.io.File' name='directory'/><parameter type='long' name='maxSize'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='maxSize' api_added='13'/><method return='java.net.CacheRequest' name='put' api_added='13'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.URLConnection' name='urlConnection'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='size' api_added='13'/><method return='java.net.CacheResponse' name='get' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg3'/></method></class></package><package name='android.net.wifi'><class extends='java.lang.Object' name='ScanResult'><method return='int' name='describeContents'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Enum' name='SupplicantState' final='true'><method return='int' name='describeContents'/><method return='boolean' static='true' name='isValidState'><parameter type='android.net.wifi.SupplicantState' name='state'/></method><method return='android.net.wifi.SupplicantState' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.net.wifi.SupplicantState[]' static='true' name='values' final='true'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='WifiConfiguration'><constructor type='android.net.wifi.WifiConfiguration' name='WifiConfiguration'/><method return='int' name='describeContents'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='WifiConfiguration.AuthAlgorithm'/><class extends='java.lang.Object' static='true' name='WifiConfiguration.GroupCipher'/><class extends='java.lang.Object' static='true' name='WifiConfiguration.KeyMgmt'/><class extends='java.lang.Object' static='true' name='WifiConfiguration.PairwiseCipher'/><class extends='java.lang.Object' static='true' name='WifiConfiguration.Protocol'/><class extends='java.lang.Object' static='true' name='WifiConfiguration.Status'/><class extends='java.lang.Object' name='WifiInfo'><method return='int' name='describeContents'/><method return='java.lang.String' name='getBSSID'/><method return='android.net.NetworkInfo.DetailedState' static='true' name='getDetailedStateOf'><parameter type='android.net.wifi.SupplicantState' name='suppState'/></method><method return='boolean' name='getHiddenSSID'/><method return='int' name='getIpAddress'/><method return='int' name='getLinkSpeed'/><method return='java.lang.String' name='getMacAddress'/><method return='int' name='getNetworkId'/><method return='int' name='getRssi'/><method return='java.lang.String' name='getSSID'/><method return='android.net.wifi.SupplicantState' name='getSupplicantState'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='WifiManager'><method return='int' name='addNetwork'><parameter type='android.net.wifi.WifiConfiguration' name='config'/></method><method return='int' static='true' name='calculateSignalLevel'><parameter type='int' name='rssi'/><parameter type='int' name='numLevels'/></method><method return='int' static='true' name='compareSignalLevel'><parameter type='int' name='rssiA'/><parameter type='int' name='rssiB'/></method><method return='android.net.wifi.WifiManager.WifiLock' name='createWifiLock'><parameter type='java.lang.String' name='tag'/></method><method return='boolean' name='disableNetwork'><parameter type='int' name='netId'/></method><method return='boolean' name='disconnect'/><method return='boolean' name='enableNetwork'><parameter type='int' name='netId'/><parameter type='boolean' name='disableOthers'/></method><method return='java.util.List&lt;android.net.wifi.WifiConfiguration&gt;' name='getConfiguredNetworks'/><method return='android.net.wifi.WifiInfo' name='getConnectionInfo'/><method return='android.net.DhcpInfo' name='getDhcpInfo'/><method return='java.util.List&lt;android.net.wifi.ScanResult&gt;' name='getScanResults'/><method return='int' name='getWifiState'/><method return='boolean' name='isWifiEnabled'/><method return='boolean' name='pingSupplicant'/><method return='boolean' name='reassociate'/><method return='boolean' name='reconnect'/><method return='boolean' name='removeNetwork'><parameter type='int' name='netId'/></method><method return='boolean' name='saveConfiguration'/><method return='boolean' name='setWifiEnabled'><parameter type='boolean' name='enabled'/></method><method return='boolean' name='startScan'/><method return='int' name='updateNetwork'><parameter type='android.net.wifi.WifiConfiguration' name='config'/></method><method return='android.net.wifi.WifiManager.WifiLock' name='createWifiLock' api_added='3'><parameter type='int' name='lockType'/><parameter type='java.lang.String' name='tag'/></method><method return='android.net.wifi.WifiManager.MulticastLock' name='createMulticastLock' api_added='4'><parameter type='java.lang.String' name='tag'/></method></class><class extends='java.lang.Object' name='WifiManager.WifiLock'><method name='acquire'/><method return='boolean' name='isHeld'/><method name='release'/><method name='setReferenceCounted'><parameter type='boolean' name='refCounted'/></method><method name='setWorkSource' api_added='9'><parameter type='android.os.WorkSource' name='ws'/></method></class><class extends='java.lang.Object' name='WifiManager.MulticastLock' api_added='4'><method name='acquire' api_added='4'/><method return='boolean' name='isHeld' api_added='4'/><method name='release' api_added='4'/><method name='setReferenceCounted' api_added='4'><parameter type='boolean' name='refCounted'/></method></class><class extends='java.lang.Object' name='WpsInfo' api_added='14'><constructor type='android.net.wifi.WpsInfo' name='WpsInfo' api_added='14'/><constructor type='android.net.wifi.WpsInfo' name='WpsInfo' api_added='14'><parameter type='android.net.wifi.WpsInfo' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class></package><package name='android.opengl'><class extends='java.lang.Object' name='GLDebugHelper'><constructor type='android.opengl.GLDebugHelper' name='GLDebugHelper'/><method return='javax.microedition.khronos.opengles.GL' static='true' name='wrap'><parameter type='javax.microedition.khronos.opengles.GL' name='gl'/><parameter type='int' name='configFlags'/><parameter type='java.io.Writer' name='log'/></method><method return='javax.microedition.khronos.egl.EGL' static='true' name='wrap'><parameter type='javax.microedition.khronos.egl.EGL' name='egl'/><parameter type='int' name='configFlags'/><parameter type='java.io.Writer' name='log'/></method></class><class extends='java.lang.RuntimeException' name='GLException'><constructor type='android.opengl.GLException' name='GLException'><parameter type='int' name='error'/></constructor><constructor type='android.opengl.GLException' name='GLException'><parameter type='int' name='error'/><parameter type='java.lang.String' name='string'/></constructor></class><class extends='java.lang.Object' name='GLU'><constructor type='android.opengl.GLU' name='GLU'/><method return='java.lang.String' static='true' name='gluErrorString'><parameter type='int' name='error'/></method><method static='true' name='gluLookAt'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/><parameter type='float' name='eyeX'/><parameter type='float' name='eyeY'/><parameter type='float' name='eyeZ'/><parameter type='float' name='centerX'/><parameter type='float' name='centerY'/><parameter type='float' name='centerZ'/><parameter type='float' name='upX'/><parameter type='float' name='upY'/><parameter type='float' name='upZ'/></method><method static='true' name='gluOrtho2D'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/></method><method static='true' name='gluPerspective'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/><parameter type='float' name='fovy'/><parameter type='float' name='aspect'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method return='int' static='true' name='gluProject'><parameter type='float' name='objX'/><parameter type='float' name='objY'/><parameter type='float' name='objZ'/><parameter type='float[]' name='model'/><parameter type='int' name='modelOffset'/><parameter type='float[]' name='project'/><parameter type='int' name='projectOffset'/><parameter type='int[]' name='view'/><parameter type='int' name='viewOffset'/><parameter type='float[]' name='win'/><parameter type='int' name='winOffset'/></method><method return='int' static='true' name='gluUnProject'><parameter type='float' name='winX'/><parameter type='float' name='winY'/><parameter type='float' name='winZ'/><parameter type='float[]' name='model'/><parameter type='int' name='modelOffset'/><parameter type='float[]' name='project'/><parameter type='int' name='projectOffset'/><parameter type='int[]' name='view'/><parameter type='int' name='viewOffset'/><parameter type='float[]' name='obj'/><parameter type='int' name='objOffset'/></method></class><class extends='java.lang.Object' name='GLUtils' final='true'><method return='int' static='true' name='getInternalFormat'><parameter type='android.graphics.Bitmap' name='bitmap'/></method><method return='int' static='true' name='getType'><parameter type='android.graphics.Bitmap' name='bitmap'/></method><method static='true' name='texImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='int' name='border'/></method><method static='true' name='texImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='int' name='type'/><parameter type='int' name='border'/></method><method static='true' name='texImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='int' name='border'/></method><method static='true' name='texSubImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='android.graphics.Bitmap' name='bitmap'/></method><method static='true' name='texSubImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='android.graphics.Bitmap' name='bitmap'/><parameter type='int' name='format'/><parameter type='int' name='type'/></method><method return='java.lang.String' static='true' name='getEGLErrorString' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='Matrix'><constructor type='android.opengl.Matrix' name='Matrix'/><method static='true' name='frustumM'><parameter type='float[]' name='m'/><parameter type='int' name='offset'/><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='near'/><parameter type='float' name='far'/></method><method return='boolean' static='true' name='invertM'><parameter type='float[]' name='mInv'/><parameter type='int' name='mInvOffset'/><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/></method><method return='float' static='true' name='length'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='multiplyMM'><parameter type='float[]' name='result'/><parameter type='int' name='resultOffset'/><parameter type='float[]' name='lhs'/><parameter type='int' name='lhsOffset'/><parameter type='float[]' name='rhs'/><parameter type='int' name='rhsOffset'/></method><method native='true' static='true' name='multiplyMV'><parameter type='float[]' name='resultVec'/><parameter type='int' name='resultVecOffset'/><parameter type='float[]' name='lhsMat'/><parameter type='int' name='lhsMatOffset'/><parameter type='float[]' name='rhsVec'/><parameter type='int' name='rhsVecOffset'/></method><method static='true' name='orthoM'><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='near'/><parameter type='float' name='far'/></method><method static='true' name='rotateM'><parameter type='float[]' name='rm'/><parameter type='int' name='rmOffset'/><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='a'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='rotateM'><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='a'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='scaleM'><parameter type='float[]' name='sm'/><parameter type='int' name='smOffset'/><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='scaleM'><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='setIdentityM'><parameter type='float[]' name='sm'/><parameter type='int' name='smOffset'/></method><method static='true' name='setRotateEulerM'><parameter type='float[]' name='rm'/><parameter type='int' name='rmOffset'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='setRotateM'><parameter type='float[]' name='rm'/><parameter type='int' name='rmOffset'/><parameter type='float' name='a'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='translateM'><parameter type='float[]' name='tm'/><parameter type='int' name='tmOffset'/><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='translateM'><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method static='true' name='transposeM'><parameter type='float[]' name='mTrans'/><parameter type='int' name='mTransOffset'/><parameter type='float[]' name='m'/><parameter type='int' name='mOffset'/></method><method static='true' name='setLookAtM' api_added='8'><parameter type='float[]' name='rm'/><parameter type='int' name='rmOffset'/><parameter type='float' name='eyeX'/><parameter type='float' name='eyeY'/><parameter type='float' name='eyeZ'/><parameter type='float' name='centerX'/><parameter type='float' name='centerY'/><parameter type='float' name='centerZ'/><parameter type='float' name='upX'/><parameter type='float' name='upY'/><parameter type='float' name='upZ'/></method><method static='true' name='perspectiveM' api_added='14'><parameter type='float[]' name='arg0'/><parameter type='int' name='arg1'/><parameter type='float' name='arg2'/><parameter type='float' name='arg3'/><parameter type='float' name='arg4'/><parameter type='float' name='arg5'/></method></class><class extends='android.view.SurfaceView' name='GLSurfaceView' api_added='3'><constructor type='android.opengl.GLSurfaceView' name='GLSurfaceView' api_added='3'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.opengl.GLSurfaceView' name='GLSurfaceView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='int' name='getDebugFlags' api_added='3'/><method return='int' name='getRenderMode' api_added='3'/><method name='onPause' api_added='3'/><method name='onResume' api_added='3'/><method name='queueEvent' api_added='3'><parameter type='java.lang.Runnable' name='r'/></method><method name='requestRender' api_added='3'/><method name='setDebugFlags' api_added='3'><parameter type='int' name='debugFlags'/></method><method name='setEGLConfigChooser' api_added='3'><parameter type='android.opengl.GLSurfaceView.EGLConfigChooser' name='configChooser'/></method><method name='setEGLConfigChooser' api_added='3'><parameter type='boolean' name='needDepth'/></method><method name='setEGLConfigChooser' api_added='3'><parameter type='int' name='redSize'/><parameter type='int' name='greenSize'/><parameter type='int' name='blueSize'/><parameter type='int' name='alphaSize'/><parameter type='int' name='depthSize'/><parameter type='int' name='stencilSize'/></method><method name='setGLWrapper' api_added='3'><parameter type='android.opengl.GLSurfaceView.GLWrapper' name='glWrapper'/></method><method name='setRenderMode' api_added='3'><parameter type='int' name='renderMode'/></method><method name='setRenderer' api_added='3'><parameter type='android.opengl.GLSurfaceView.Renderer' name='renderer'/></method><method name='surfaceChanged' api_added='3'><parameter type='android.view.SurfaceHolder' name='holder'/><parameter type='int' name='format'/><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method name='surfaceCreated' api_added='3'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='surfaceDestroyed' api_added='3'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='setEGLContextFactory' api_added='5'><parameter type='android.opengl.GLSurfaceView.EGLContextFactory' name='factory'/></method><method name='setEGLWindowSurfaceFactory' api_added='5'><parameter type='android.opengl.GLSurfaceView.EGLWindowSurfaceFactory' name='factory'/></method><method name='setEGLContextClientVersion' api_added='8'><parameter type='int' name='version'/></method><method return='boolean' name='getPreserveEGLContextOnPause' api_added='11'/><method name='setPreserveEGLContextOnPause' api_added='11'><parameter type='boolean' name='preserveOnPause'/></method></class><class extends='java.lang.Object' name='Visibility' api_added='3'><constructor type='android.opengl.Visibility' name='Visibility' api_added='3'/><method native='true' static='true' name='computeBoundingSphere' api_added='3'><parameter type='float[]' name='positions'/><parameter type='int' name='positionsOffset'/><parameter type='int' name='positionsCount'/><parameter type='float[]' name='sphere'/><parameter type='int' name='sphereOffset'/></method><method return='int' native='true' static='true' name='frustumCullSpheres' api_added='3'><parameter type='float[]' name='mvp'/><parameter type='int' name='mvpOffset'/><parameter type='float[]' name='spheres'/><parameter type='int' name='spheresOffset'/><parameter type='int' name='spheresCount'/><parameter type='int[]' name='results'/><parameter type='int' name='resultsOffset'/><parameter type='int' name='resultsCapacity'/></method><method return='int' native='true' static='true' name='visibilityTest' api_added='3'><parameter type='float[]' name='ws'/><parameter type='int' name='wsOffset'/><parameter type='float[]' name='positions'/><parameter type='int' name='positionsOffset'/><parameter type='char[]' name='indices'/><parameter type='int' name='indicesOffset'/><parameter type='int' name='indexCount'/></method></class><class extends='java.lang.Object' name='GLES10' api_added='4'><constructor type='android.opengl.GLES10' name='GLES10' api_added='4'/><method native='true' static='true' name='glActiveTexture' api_added='4'><parameter type='int' name='texture'/></method><method native='true' static='true' name='glAlphaFunc' api_added='4'><parameter type='int' name='func'/><parameter type='float' name='ref'/></method><method native='true' static='true' name='glAlphaFuncx' api_added='4'><parameter type='int' name='func'/><parameter type='int' name='ref'/></method><method native='true' static='true' name='glBindTexture' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='texture'/></method><method native='true' static='true' name='glBlendFunc' api_added='4'><parameter type='int' name='sfactor'/><parameter type='int' name='dfactor'/></method><method native='true' static='true' name='glClear' api_added='4'><parameter type='int' name='mask'/></method><method native='true' static='true' name='glClearColor' api_added='4'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method native='true' static='true' name='glClearColorx' api_added='4'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method native='true' static='true' name='glClearDepthf' api_added='4'><parameter type='float' name='depth'/></method><method native='true' static='true' name='glClearDepthx' api_added='4'><parameter type='int' name='depth'/></method><method native='true' static='true' name='glClearStencil' api_added='4'><parameter type='int' name='s'/></method><method native='true' static='true' name='glClientActiveTexture' api_added='4'><parameter type='int' name='texture'/></method><method native='true' static='true' name='glColor4f' api_added='4'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method native='true' static='true' name='glColor4x' api_added='4'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method native='true' static='true' name='glColorMask' api_added='4'><parameter type='boolean' name='red'/><parameter type='boolean' name='green'/><parameter type='boolean' name='blue'/><parameter type='boolean' name='alpha'/></method><method static='true' name='glColorPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glCompressedTexImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method native='true' static='true' name='glCompressedTexSubImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method native='true' static='true' name='glCopyTexImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/></method><method native='true' static='true' name='glCopyTexSubImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glCullFace' api_added='4'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glDeleteTextures' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteTextures' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method native='true' static='true' name='glDepthFunc' api_added='4'><parameter type='int' name='func'/></method><method native='true' static='true' name='glDepthMask' api_added='4'><parameter type='boolean' name='flag'/></method><method native='true' static='true' name='glDepthRangef' api_added='4'><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glDepthRangex' api_added='4'><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glDisable' api_added='4'><parameter type='int' name='cap'/></method><method native='true' static='true' name='glDisableClientState' api_added='4'><parameter type='int' name='array'/></method><method native='true' static='true' name='glDrawArrays' api_added='4'><parameter type='int' name='mode'/><parameter type='int' name='first'/><parameter type='int' name='count'/></method><method native='true' static='true' name='glDrawElements' api_added='4'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='indices'/></method><method native='true' static='true' name='glEnable' api_added='4'><parameter type='int' name='cap'/></method><method native='true' static='true' name='glEnableClientState' api_added='4'><parameter type='int' name='array'/></method><method native='true' static='true' name='glFinish' api_added='4'/><method native='true' static='true' name='glFlush' api_added='4'/><method native='true' static='true' name='glFogf' api_added='4'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glFogfv' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glFogfv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glFogx' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glFogxv' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glFogxv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glFrontFace' api_added='4'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glFrustumf' api_added='4'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glFrustumx' api_added='4'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glGenTextures' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenTextures' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method return='int' native='true' static='true' name='glGetError' api_added='4'/><method native='true' static='true' name='glGetIntegerv' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetIntegerv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='java.lang.String' native='true' static='true' name='glGetString' api_added='4'><parameter type='int' name='name'/></method><method native='true' static='true' name='glHint' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='mode'/></method><method native='true' static='true' name='glLightModelf' api_added='4'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glLightModelfv' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightModelfv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glLightModelx' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glLightModelxv' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightModelxv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glLightf' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glLightfv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightfv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glLightx' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glLightxv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightxv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glLineWidth' api_added='4'><parameter type='float' name='width'/></method><method native='true' static='true' name='glLineWidthx' api_added='4'><parameter type='int' name='width'/></method><method native='true' static='true' name='glLoadIdentity' api_added='4'/><method native='true' static='true' name='glLoadMatrixf' api_added='4'><parameter type='float[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLoadMatrixf' api_added='4'><parameter type='java.nio.FloatBuffer' name='m'/></method><method native='true' static='true' name='glLoadMatrixx' api_added='4'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLoadMatrixx' api_added='4'><parameter type='java.nio.IntBuffer' name='m'/></method><method native='true' static='true' name='glLogicOp' api_added='4'><parameter type='int' name='opcode'/></method><method native='true' static='true' name='glMaterialf' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glMaterialfv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMaterialfv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glMaterialx' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glMaterialxv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMaterialxv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glMatrixMode' api_added='4'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glMultMatrixf' api_added='4'><parameter type='float[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMultMatrixf' api_added='4'><parameter type='java.nio.FloatBuffer' name='m'/></method><method native='true' static='true' name='glMultMatrixx' api_added='4'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMultMatrixx' api_added='4'><parameter type='java.nio.IntBuffer' name='m'/></method><method native='true' static='true' name='glMultiTexCoord4f' api_added='4'><parameter type='int' name='target'/><parameter type='float' name='s'/><parameter type='float' name='t'/><parameter type='float' name='r'/><parameter type='float' name='q'/></method><method native='true' static='true' name='glMultiTexCoord4x' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='s'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='q'/></method><method native='true' static='true' name='glNormal3f' api_added='4'><parameter type='float' name='nx'/><parameter type='float' name='ny'/><parameter type='float' name='nz'/></method><method native='true' static='true' name='glNormal3x' api_added='4'><parameter type='int' name='nx'/><parameter type='int' name='ny'/><parameter type='int' name='nz'/></method><method static='true' name='glNormalPointer' api_added='4'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glOrthof' api_added='4'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glOrthox' api_added='4'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glPixelStorei' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glPointSize' api_added='4'><parameter type='float' name='size'/></method><method native='true' static='true' name='glPointSizex' api_added='4'><parameter type='int' name='size'/></method><method native='true' static='true' name='glPolygonOffset' api_added='4'><parameter type='float' name='factor'/><parameter type='float' name='units'/></method><method native='true' static='true' name='glPolygonOffsetx' api_added='4'><parameter type='int' name='factor'/><parameter type='int' name='units'/></method><method native='true' static='true' name='glPopMatrix' api_added='4'/><method native='true' static='true' name='glPushMatrix' api_added='4'/><method native='true' static='true' name='glReadPixels' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glRotatef' api_added='4'><parameter type='float' name='angle'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='glRotatex' api_added='4'><parameter type='int' name='angle'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glSampleCoverage' api_added='4'><parameter type='float' name='value'/><parameter type='boolean' name='invert'/></method><method native='true' static='true' name='glSampleCoveragex' api_added='4'><parameter type='int' name='value'/><parameter type='boolean' name='invert'/></method><method native='true' static='true' name='glScalef' api_added='4'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='glScalex' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glScissor' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glShadeModel' api_added='4'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glStencilFunc' api_added='4'><parameter type='int' name='func'/><parameter type='int' name='ref'/><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilMask' api_added='4'><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilOp' api_added='4'><parameter type='int' name='fail'/><parameter type='int' name='zfail'/><parameter type='int' name='zpass'/></method><method static='true' name='glTexCoordPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glTexEnvf' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glTexEnvfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexEnvfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glTexEnvx' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexEnvxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexEnvxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glTexParameterf' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glTexParameterx' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexSubImage2D' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glTranslatef' api_added='4'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='glTranslatex' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method static='true' name='glVertexPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glViewport' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method></class><class extends='java.lang.Object' name='GLES10Ext' api_added='4'><constructor type='android.opengl.GLES10Ext' name='GLES10Ext' api_added='4'/><method return='int' native='true' static='true' name='glQueryMatrixxOES' api_added='4'><parameter type='int[]' name='mantissa'/><parameter type='int' name='mantissaOffset'/><parameter type='int[]' name='exponent'/><parameter type='int' name='exponentOffset'/></method><method return='int' native='true' static='true' name='glQueryMatrixxOES' api_added='4'><parameter type='java.nio.IntBuffer' name='mantissa'/><parameter type='java.nio.IntBuffer' name='exponent'/></method></class><class extends='android.opengl.GLES10' name='GLES11' api_added='4'><constructor type='android.opengl.GLES11' name='GLES11' api_added='4'/><method native='true' static='true' name='glBindBuffer' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='buffer'/></method><method native='true' static='true' name='glBufferData' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/><parameter type='int' name='usage'/></method><method native='true' static='true' name='glBufferSubData' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='offset'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/></method><method native='true' static='true' name='glClipPlanef' api_added='4'><parameter type='int' name='plane'/><parameter type='float[]' name='equation'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glClipPlanef' api_added='4'><parameter type='int' name='plane'/><parameter type='java.nio.FloatBuffer' name='equation'/></method><method native='true' static='true' name='glClipPlanex' api_added='4'><parameter type='int' name='plane'/><parameter type='int[]' name='equation'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glClipPlanex' api_added='4'><parameter type='int' name='plane'/><parameter type='java.nio.IntBuffer' name='equation'/></method><method native='true' static='true' name='glColor4ub' api_added='4'><parameter type='byte' name='red'/><parameter type='byte' name='green'/><parameter type='byte' name='blue'/><parameter type='byte' name='alpha'/></method><method native='true' static='true' name='glColorPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteBuffers' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteBuffers' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method native='true' static='true' name='glDrawElements' api_added='4'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenBuffers' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenBuffers' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method native='true' static='true' name='glGetBooleanv' api_added='4'><parameter type='int' name='pname'/><parameter type='boolean[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetBooleanv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetBufferParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetBufferParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetClipPlanef' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='eqn'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetClipPlanef' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='eqn'/></method><method native='true' static='true' name='glGetClipPlanex' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='eqn'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetClipPlanex' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='eqn'/></method><method native='true' static='true' name='glGetFixedv' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFixedv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetFloatv' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFloatv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetLightfv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetLightfv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetLightxv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetLightxv' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetMaterialfv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetMaterialfv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetMaterialxv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetMaterialxv' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexEnvfv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexEnvfv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetTexEnviv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexEnviv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexEnvxv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexEnvxv' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexParameterfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameterfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetTexParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexParameterxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameterxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='boolean' native='true' static='true' name='glIsBuffer' api_added='4'><parameter type='int' name='buffer'/></method><method return='boolean' native='true' static='true' name='glIsEnabled' api_added='4'><parameter type='int' name='cap'/></method><method return='boolean' native='true' static='true' name='glIsTexture' api_added='4'><parameter type='int' name='texture'/></method><method native='true' static='true' name='glNormalPointer' api_added='4'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glPointParameterf' api_added='4'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glPointParameterfv' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glPointParameterfv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glPointParameterx' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glPointParameterxv' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glPointParameterxv' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glPointSizePointerOES' api_added='4'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glTexCoordPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexEnvi' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexEnviv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexEnviv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexParameterfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameterfv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glTexParameteri' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameteriv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexParameterxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameterxv' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glVertexPointer' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method></class><class extends='java.lang.Object' name='GLES11Ext' api_added='4'><constructor type='android.opengl.GLES11Ext' name='GLES11Ext' api_added='4'/><method native='true' static='true' name='glAlphaFuncxOES' api_added='4'><parameter type='int' name='func'/><parameter type='int' name='ref'/></method><method native='true' static='true' name='glBindFramebufferOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='framebuffer'/></method><method native='true' static='true' name='glBindRenderbufferOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='renderbuffer'/></method><method native='true' static='true' name='glBlendEquationOES' api_added='4'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glBlendEquationSeparateOES' api_added='4'><parameter type='int' name='modeRGB'/><parameter type='int' name='modeAlpha'/></method><method native='true' static='true' name='glBlendFuncSeparateOES' api_added='4'><parameter type='int' name='srcRGB'/><parameter type='int' name='dstRGB'/><parameter type='int' name='srcAlpha'/><parameter type='int' name='dstAlpha'/></method><method return='int' native='true' static='true' name='glCheckFramebufferStatusOES' api_added='4'><parameter type='int' name='target'/></method><method native='true' static='true' name='glClearColorxOES' api_added='4'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method native='true' static='true' name='glClearDepthfOES' api_added='4'><parameter type='float' name='depth'/></method><method native='true' static='true' name='glClearDepthxOES' api_added='4'><parameter type='int' name='depth'/></method><method native='true' static='true' name='glClipPlanefOES' api_added='4'><parameter type='int' name='plane'/><parameter type='float[]' name='equation'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glClipPlanefOES' api_added='4'><parameter type='int' name='plane'/><parameter type='java.nio.FloatBuffer' name='equation'/></method><method native='true' static='true' name='glClipPlanexOES' api_added='4'><parameter type='int' name='plane'/><parameter type='int[]' name='equation'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glClipPlanexOES' api_added='4'><parameter type='int' name='plane'/><parameter type='java.nio.IntBuffer' name='equation'/></method><method native='true' static='true' name='glColor4xOES' api_added='4'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method native='true' static='true' name='glCurrentPaletteMatrixOES' api_added='4'><parameter type='int' name='matrixpaletteindex'/></method><method native='true' static='true' name='glDeleteFramebuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteFramebuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method native='true' static='true' name='glDeleteRenderbuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteRenderbuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method native='true' static='true' name='glDepthRangefOES' api_added='4'><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glDepthRangexOES' api_added='4'><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glDrawTexfOES' api_added='4'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/><parameter type='float' name='width'/><parameter type='float' name='height'/></method><method native='true' static='true' name='glDrawTexfvOES' api_added='4'><parameter type='float[]' name='coords'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDrawTexfvOES' api_added='4'><parameter type='java.nio.FloatBuffer' name='coords'/></method><method native='true' static='true' name='glDrawTexiOES' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glDrawTexivOES' api_added='4'><parameter type='int[]' name='coords'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDrawTexivOES' api_added='4'><parameter type='java.nio.IntBuffer' name='coords'/></method><method native='true' static='true' name='glDrawTexsOES' api_added='4'><parameter type='short' name='x'/><parameter type='short' name='y'/><parameter type='short' name='z'/><parameter type='short' name='width'/><parameter type='short' name='height'/></method><method native='true' static='true' name='glDrawTexsvOES' api_added='4'><parameter type='short[]' name='coords'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDrawTexsvOES' api_added='4'><parameter type='java.nio.ShortBuffer' name='coords'/></method><method native='true' static='true' name='glDrawTexxOES' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glDrawTexxvOES' api_added='4'><parameter type='int[]' name='coords'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDrawTexxvOES' api_added='4'><parameter type='java.nio.IntBuffer' name='coords'/></method><method native='true' static='true' name='glEGLImageTargetRenderbufferStorageOES' api_added='4'><parameter type='int' name='target'/><parameter type='java.nio.Buffer' name='image'/></method><method native='true' static='true' name='glEGLImageTargetTexture2DOES' api_added='4'><parameter type='int' name='target'/><parameter type='java.nio.Buffer' name='image'/></method><method native='true' static='true' name='glFogxOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glFogxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glFogxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glFramebufferRenderbufferOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='renderbuffertarget'/><parameter type='int' name='renderbuffer'/></method><method native='true' static='true' name='glFramebufferTexture2DOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='textarget'/><parameter type='int' name='texture'/><parameter type='int' name='level'/></method><method native='true' static='true' name='glFrustumfOES' api_added='4'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glFrustumxOES' api_added='4'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glGenFramebuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenFramebuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method native='true' static='true' name='glGenRenderbuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenRenderbuffersOES' api_added='4'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method native='true' static='true' name='glGenerateMipmapOES' api_added='4'><parameter type='int' name='target'/></method><method native='true' static='true' name='glGetClipPlanefOES' api_added='4'><parameter type='int' name='pname'/><parameter type='float[]' name='eqn'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetClipPlanefOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='eqn'/></method><method native='true' static='true' name='glGetClipPlanexOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='eqn'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetClipPlanexOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='eqn'/></method><method native='true' static='true' name='glGetFixedvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFixedvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetFramebufferAttachmentParameterivOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFramebufferAttachmentParameterivOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetLightxvOES' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetLightxvOES' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetMaterialxvOES' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetMaterialxvOES' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetRenderbufferParameterivOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetRenderbufferParameterivOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexEnvxvOES' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexEnvxvOES' api_added='4'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexGenfvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexGenfvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetTexGenivOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexGenivOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexGenxvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexGenxvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetTexParameterxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameterxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='boolean' native='true' static='true' name='glIsFramebufferOES' api_added='4'><parameter type='int' name='framebuffer'/></method><method return='boolean' native='true' static='true' name='glIsRenderbufferOES' api_added='4'><parameter type='int' name='renderbuffer'/></method><method native='true' static='true' name='glLightModelxOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glLightModelxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightModelxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glLightxOES' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glLightxvOES' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLightxvOES' api_added='4'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glLineWidthxOES' api_added='4'><parameter type='int' name='width'/></method><method native='true' static='true' name='glLoadMatrixxOES' api_added='4'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glLoadMatrixxOES' api_added='4'><parameter type='java.nio.IntBuffer' name='m'/></method><method native='true' static='true' name='glLoadPaletteFromModelViewMatrixOES' api_added='4'/><method native='true' static='true' name='glMaterialxOES' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glMaterialxvOES' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMaterialxvOES' api_added='4'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glMatrixIndexPointerOES' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method native='true' static='true' name='glMultMatrixxOES' api_added='4'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glMultMatrixxOES' api_added='4'><parameter type='java.nio.IntBuffer' name='m'/></method><method native='true' static='true' name='glMultiTexCoord4xOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='s'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='q'/></method><method native='true' static='true' name='glNormal3xOES' api_added='4'><parameter type='int' name='nx'/><parameter type='int' name='ny'/><parameter type='int' name='nz'/></method><method native='true' static='true' name='glOrthofOES' api_added='4'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glOrthoxOES' api_added='4'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method native='true' static='true' name='glPointParameterxOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glPointParameterxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glPointParameterxvOES' api_added='4'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glPointSizexOES' api_added='4'><parameter type='int' name='size'/></method><method native='true' static='true' name='glPolygonOffsetxOES' api_added='4'><parameter type='int' name='factor'/><parameter type='int' name='units'/></method><method native='true' static='true' name='glRenderbufferStorageOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glRotatexOES' api_added='4'><parameter type='int' name='angle'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glSampleCoveragexOES' api_added='4'><parameter type='int' name='value'/><parameter type='boolean' name='invert'/></method><method native='true' static='true' name='glScalexOES' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glTexEnvxOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexEnvxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexEnvxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexGenfOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glTexGenfvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexGenfvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glTexGeniOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexGenivOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexGenivOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexGenxOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexGenxvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexGenxvOES' api_added='4'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexParameterxOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexParameterxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameterxvOES' api_added='4'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTranslatexOES' api_added='4'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glWeightPointerOES' api_added='4'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method></class><class extends='java.lang.Object' name='ETC1' api_added='8'><constructor type='android.opengl.ETC1' name='ETC1' api_added='8'/><method native='true' static='true' name='decodeBlock' api_added='8'><parameter type='java.nio.Buffer' name='in'/><parameter type='java.nio.Buffer' name='out'/></method><method native='true' static='true' name='decodeImage' api_added='8'><parameter type='java.nio.Buffer' name='in'/><parameter type='java.nio.Buffer' name='out'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='pixelSize'/><parameter type='int' name='stride'/></method><method native='true' static='true' name='encodeBlock' api_added='8'><parameter type='java.nio.Buffer' name='in'/><parameter type='int' name='validPixelMask'/><parameter type='java.nio.Buffer' name='out'/></method><method native='true' static='true' name='encodeImage' api_added='8'><parameter type='java.nio.Buffer' name='in'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='pixelSize'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='out'/></method><method native='true' static='true' name='formatHeader' api_added='8'><parameter type='java.nio.Buffer' name='header'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='int' native='true' static='true' name='getEncodedDataSize' api_added='8'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='int' native='true' static='true' name='getHeight' api_added='8'><parameter type='java.nio.Buffer' name='header'/></method><method return='int' native='true' static='true' name='getWidth' api_added='8'><parameter type='java.nio.Buffer' name='header'/></method><method return='boolean' native='true' static='true' name='isValid' api_added='8'><parameter type='java.nio.Buffer' name='header'/></method></class><class extends='java.lang.Object' name='ETC1Util' api_added='8'><constructor type='android.opengl.ETC1Util' name='ETC1Util' api_added='8'/><method return='android.opengl.ETC1Util.ETC1Texture' static='true' name='compressTexture' api_added='8'><parameter type='java.nio.Buffer' name='input'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='pixelSize'/><parameter type='int' name='stride'/></method><method return='android.opengl.ETC1Util.ETC1Texture' static='true' name='createTexture' api_added='8'><parameter type='java.io.InputStream' name='input'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' static='true' name='isETC1Supported' api_added='8'/><method static='true' name='loadTexture' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='border'/><parameter type='int' name='fallbackFormat'/><parameter type='int' name='fallbackType'/><parameter type='java.io.InputStream' name='input'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='loadTexture' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='border'/><parameter type='int' name='fallbackFormat'/><parameter type='int' name='fallbackType'/><parameter type='android.opengl.ETC1Util.ETC1Texture' name='texture'/></method><method static='true' name='writeTexture' api_added='8'><parameter type='android.opengl.ETC1Util.ETC1Texture' name='texture'/><parameter type='java.io.OutputStream' name='output'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' static='true' name='ETC1Util.ETC1Texture' api_added='8'><constructor type='android.opengl.ETC1Util.ETC1Texture' name='ETC1Util.ETC1Texture' api_added='8'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='java.nio.ByteBuffer' name='data'/></constructor><method return='java.nio.ByteBuffer' name='getData' api_added='8'/><method return='int' name='getHeight' api_added='8'/><method return='int' name='getWidth' api_added='8'/></class><class extends='java.lang.Object' name='GLES20' api_added='8'><constructor type='android.opengl.GLES20' name='GLES20' api_added='8'/><method native='true' static='true' name='glActiveTexture' api_added='8'><parameter type='int' name='texture'/></method><method native='true' static='true' name='glAttachShader' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='shader'/></method><method native='true' static='true' name='glBindAttribLocation' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='index'/><parameter type='java.lang.String' name='name'/></method><method native='true' static='true' name='glBindBuffer' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='buffer'/></method><method native='true' static='true' name='glBindFramebuffer' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='framebuffer'/></method><method native='true' static='true' name='glBindRenderbuffer' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='renderbuffer'/></method><method native='true' static='true' name='glBindTexture' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='texture'/></method><method native='true' static='true' name='glBlendColor' api_added='8'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method native='true' static='true' name='glBlendEquation' api_added='8'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glBlendEquationSeparate' api_added='8'><parameter type='int' name='modeRGB'/><parameter type='int' name='modeAlpha'/></method><method native='true' static='true' name='glBlendFunc' api_added='8'><parameter type='int' name='sfactor'/><parameter type='int' name='dfactor'/></method><method native='true' static='true' name='glBlendFuncSeparate' api_added='8'><parameter type='int' name='srcRGB'/><parameter type='int' name='dstRGB'/><parameter type='int' name='srcAlpha'/><parameter type='int' name='dstAlpha'/></method><method native='true' static='true' name='glBufferData' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/><parameter type='int' name='usage'/></method><method native='true' static='true' name='glBufferSubData' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='offset'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/></method><method return='int' native='true' static='true' name='glCheckFramebufferStatus' api_added='8'><parameter type='int' name='target'/></method><method native='true' static='true' name='glClear' api_added='8'><parameter type='int' name='mask'/></method><method native='true' static='true' name='glClearColor' api_added='8'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method native='true' static='true' name='glClearDepthf' api_added='8'><parameter type='float' name='depth'/></method><method native='true' static='true' name='glClearStencil' api_added='8'><parameter type='int' name='s'/></method><method native='true' static='true' name='glColorMask' api_added='8'><parameter type='boolean' name='red'/><parameter type='boolean' name='green'/><parameter type='boolean' name='blue'/><parameter type='boolean' name='alpha'/></method><method native='true' static='true' name='glCompileShader' api_added='8'><parameter type='int' name='shader'/></method><method native='true' static='true' name='glCompressedTexImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method native='true' static='true' name='glCompressedTexSubImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method native='true' static='true' name='glCopyTexImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/></method><method native='true' static='true' name='glCopyTexSubImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='int' native='true' static='true' name='glCreateProgram' api_added='8'/><method return='int' native='true' static='true' name='glCreateShader' api_added='8'><parameter type='int' name='type'/></method><method native='true' static='true' name='glCullFace' api_added='8'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glDeleteBuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteBuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method native='true' static='true' name='glDeleteFramebuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteFramebuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method native='true' static='true' name='glDeleteProgram' api_added='8'><parameter type='int' name='program'/></method><method native='true' static='true' name='glDeleteRenderbuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteRenderbuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method native='true' static='true' name='glDeleteShader' api_added='8'><parameter type='int' name='shader'/></method><method native='true' static='true' name='glDeleteTextures' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glDeleteTextures' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method native='true' static='true' name='glDepthFunc' api_added='8'><parameter type='int' name='func'/></method><method native='true' static='true' name='glDepthMask' api_added='8'><parameter type='boolean' name='flag'/></method><method native='true' static='true' name='glDepthRangef' api_added='8'><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method native='true' static='true' name='glDetachShader' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='shader'/></method><method native='true' static='true' name='glDisable' api_added='8'><parameter type='int' name='cap'/></method><method native='true' static='true' name='glDisableVertexAttribArray' api_added='8'><parameter type='int' name='index'/></method><method native='true' static='true' name='glDrawArrays' api_added='8'><parameter type='int' name='mode'/><parameter type='int' name='first'/><parameter type='int' name='count'/></method><method native='true' static='true' name='glDrawElements' api_added='8'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='indices'/></method><method native='true' static='true' name='glEnable' api_added='8'><parameter type='int' name='cap'/></method><method native='true' static='true' name='glEnableVertexAttribArray' api_added='8'><parameter type='int' name='index'/></method><method native='true' static='true' name='glFinish' api_added='8'/><method native='true' static='true' name='glFlush' api_added='8'/><method native='true' static='true' name='glFramebufferRenderbuffer' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='renderbuffertarget'/><parameter type='int' name='renderbuffer'/></method><method native='true' static='true' name='glFramebufferTexture2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='textarget'/><parameter type='int' name='texture'/><parameter type='int' name='level'/></method><method native='true' static='true' name='glFrontFace' api_added='8'><parameter type='int' name='mode'/></method><method native='true' static='true' name='glGenBuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenBuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method native='true' static='true' name='glGenFramebuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenFramebuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method native='true' static='true' name='glGenRenderbuffers' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenRenderbuffers' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method native='true' static='true' name='glGenTextures' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGenTextures' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method native='true' static='true' name='glGenerateMipmap' api_added='8'><parameter type='int' name='target'/></method><method native='true' static='true' name='glGetActiveAttrib' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='index'/><parameter type='int' name='bufsize'/><parameter type='int[]' name='length'/><parameter type='int' name='lengthOffset'/><parameter type='int[]' name='size'/><parameter type='int' name='sizeOffset'/><parameter type='int[]' name='type'/><parameter type='int' name='typeOffset'/><parameter type='byte[]' name='name'/><parameter type='int' name='nameOffset'/></method><method native='true' static='true' name='glGetActiveAttrib' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='index'/><parameter type='int' name='bufsize'/><parameter type='java.nio.IntBuffer' name='length'/><parameter type='java.nio.IntBuffer' name='size'/><parameter type='java.nio.IntBuffer' name='type'/><parameter type='byte' name='name'/></method><method native='true' static='true' name='glGetActiveUniform' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='index'/><parameter type='int' name='bufsize'/><parameter type='int[]' name='length'/><parameter type='int' name='lengthOffset'/><parameter type='int[]' name='size'/><parameter type='int' name='sizeOffset'/><parameter type='int[]' name='type'/><parameter type='int' name='typeOffset'/><parameter type='byte[]' name='name'/><parameter type='int' name='nameOffset'/></method><method native='true' static='true' name='glGetActiveUniform' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='index'/><parameter type='int' name='bufsize'/><parameter type='java.nio.IntBuffer' name='length'/><parameter type='java.nio.IntBuffer' name='size'/><parameter type='java.nio.IntBuffer' name='type'/><parameter type='byte' name='name'/></method><method native='true' static='true' name='glGetAttachedShaders' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='maxcount'/><parameter type='int[]' name='count'/><parameter type='int' name='countOffset'/><parameter type='int[]' name='shaders'/><parameter type='int' name='shadersOffset'/></method><method native='true' static='true' name='glGetAttachedShaders' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='maxcount'/><parameter type='java.nio.IntBuffer' name='count'/><parameter type='java.nio.IntBuffer' name='shaders'/></method><method return='int' native='true' static='true' name='glGetAttribLocation' api_added='8'><parameter type='int' name='program'/><parameter type='java.lang.String' name='name'/></method><method native='true' static='true' name='glGetBooleanv' api_added='8'><parameter type='int' name='pname'/><parameter type='boolean[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetBooleanv' api_added='8'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetBufferParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetBufferParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='int' native='true' static='true' name='glGetError' api_added='8'/><method native='true' static='true' name='glGetFloatv' api_added='8'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFloatv' api_added='8'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetFramebufferAttachmentParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetFramebufferAttachmentParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetIntegerv' api_added='8'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetIntegerv' api_added='8'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='java.lang.String' native='true' static='true' name='glGetProgramInfoLog' api_added='8'><parameter type='int' name='program'/></method><method native='true' static='true' name='glGetProgramiv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetProgramiv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetRenderbufferParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetRenderbufferParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='java.lang.String' native='true' static='true' name='glGetShaderInfoLog' api_added='8'><parameter type='int' name='shader'/></method><method native='true' static='true' name='glGetShaderPrecisionFormat' api_added='8'><parameter type='int' name='shadertype'/><parameter type='int' name='precisiontype'/><parameter type='int[]' name='range'/><parameter type='int' name='rangeOffset'/><parameter type='int[]' name='precision'/><parameter type='int' name='precisionOffset'/></method><method native='true' static='true' name='glGetShaderPrecisionFormat' api_added='8'><parameter type='int' name='shadertype'/><parameter type='int' name='precisiontype'/><parameter type='java.nio.IntBuffer' name='range'/><parameter type='java.nio.IntBuffer' name='precision'/></method><method native='true' static='true' name='glGetShaderSource' api_added='8'><parameter type='int' name='shader'/><parameter type='int' name='bufsize'/><parameter type='int[]' name='length'/><parameter type='int' name='lengthOffset'/><parameter type='byte[]' name='source'/><parameter type='int' name='sourceOffset'/></method><method native='true' static='true' name='glGetShaderSource' api_added='8'><parameter type='int' name='shader'/><parameter type='int' name='bufsize'/><parameter type='java.nio.IntBuffer' name='length'/><parameter type='byte' name='source'/></method><method native='true' static='true' name='glGetShaderiv' api_added='8'><parameter type='int' name='shader'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetShaderiv' api_added='8'><parameter type='int' name='shader'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='java.lang.String' native='true' static='true' name='glGetString' api_added='8'><parameter type='int' name='name'/></method><method native='true' static='true' name='glGetTexParameterfv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameterfv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetTexParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetTexParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='int' native='true' static='true' name='glGetUniformLocation' api_added='8'><parameter type='int' name='program'/><parameter type='java.lang.String' name='name'/></method><method native='true' static='true' name='glGetUniformfv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='location'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetUniformfv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='location'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetUniformiv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='location'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetUniformiv' api_added='8'><parameter type='int' name='program'/><parameter type='int' name='location'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glGetVertexAttribfv' api_added='8'><parameter type='int' name='index'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetVertexAttribfv' api_added='8'><parameter type='int' name='index'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glGetVertexAttribiv' api_added='8'><parameter type='int' name='index'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glGetVertexAttribiv' api_added='8'><parameter type='int' name='index'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glHint' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='mode'/></method><method return='boolean' native='true' static='true' name='glIsBuffer' api_added='8'><parameter type='int' name='buffer'/></method><method return='boolean' native='true' static='true' name='glIsEnabled' api_added='8'><parameter type='int' name='cap'/></method><method return='boolean' native='true' static='true' name='glIsFramebuffer' api_added='8'><parameter type='int' name='framebuffer'/></method><method return='boolean' native='true' static='true' name='glIsProgram' api_added='8'><parameter type='int' name='program'/></method><method return='boolean' native='true' static='true' name='glIsRenderbuffer' api_added='8'><parameter type='int' name='renderbuffer'/></method><method return='boolean' native='true' static='true' name='glIsShader' api_added='8'><parameter type='int' name='shader'/></method><method return='boolean' native='true' static='true' name='glIsTexture' api_added='8'><parameter type='int' name='texture'/></method><method native='true' static='true' name='glLineWidth' api_added='8'><parameter type='float' name='width'/></method><method native='true' static='true' name='glLinkProgram' api_added='8'><parameter type='int' name='program'/></method><method native='true' static='true' name='glPixelStorei' api_added='8'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glPolygonOffset' api_added='8'><parameter type='float' name='factor'/><parameter type='float' name='units'/></method><method native='true' static='true' name='glReadPixels' api_added='8'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glReleaseShaderCompiler' api_added='8'/><method native='true' static='true' name='glRenderbufferStorage' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glSampleCoverage' api_added='8'><parameter type='float' name='value'/><parameter type='boolean' name='invert'/></method><method native='true' static='true' name='glScissor' api_added='8'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glShaderBinary' api_added='8'><parameter type='int' name='n'/><parameter type='int[]' name='shaders'/><parameter type='int' name='offset'/><parameter type='int' name='binaryformat'/><parameter type='java.nio.Buffer' name='binary'/><parameter type='int' name='length'/></method><method native='true' static='true' name='glShaderBinary' api_added='8'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='shaders'/><parameter type='int' name='binaryformat'/><parameter type='java.nio.Buffer' name='binary'/><parameter type='int' name='length'/></method><method native='true' static='true' name='glShaderSource' api_added='8'><parameter type='int' name='shader'/><parameter type='java.lang.String' name='string'/></method><method native='true' static='true' name='glStencilFunc' api_added='8'><parameter type='int' name='func'/><parameter type='int' name='ref'/><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilFuncSeparate' api_added='8'><parameter type='int' name='face'/><parameter type='int' name='func'/><parameter type='int' name='ref'/><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilMask' api_added='8'><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilMaskSeparate' api_added='8'><parameter type='int' name='face'/><parameter type='int' name='mask'/></method><method native='true' static='true' name='glStencilOp' api_added='8'><parameter type='int' name='fail'/><parameter type='int' name='zfail'/><parameter type='int' name='zpass'/></method><method native='true' static='true' name='glStencilOpSeparate' api_added='8'><parameter type='int' name='face'/><parameter type='int' name='fail'/><parameter type='int' name='zfail'/><parameter type='int' name='zpass'/></method><method native='true' static='true' name='glTexImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glTexParameterf' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method native='true' static='true' name='glTexParameterfv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameterfv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method native='true' static='true' name='glTexParameteri' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method native='true' static='true' name='glTexParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glTexParameteriv' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method native='true' static='true' name='glTexSubImage2D' api_added='8'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method native='true' static='true' name='glUniform1f' api_added='8'><parameter type='int' name='location'/><parameter type='float' name='x'/></method><method native='true' static='true' name='glUniform1fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='float[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform1fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.FloatBuffer' name='v'/></method><method native='true' static='true' name='glUniform1i' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='x'/></method><method native='true' static='true' name='glUniform1iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='int[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform1iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.IntBuffer' name='v'/></method><method native='true' static='true' name='glUniform2f' api_added='8'><parameter type='int' name='location'/><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method native='true' static='true' name='glUniform2fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='float[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform2fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.FloatBuffer' name='v'/></method><method native='true' static='true' name='glUniform2i' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method native='true' static='true' name='glUniform2iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='int[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform2iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.IntBuffer' name='v'/></method><method native='true' static='true' name='glUniform3f' api_added='8'><parameter type='int' name='location'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='glUniform3fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='float[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform3fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.FloatBuffer' name='v'/></method><method native='true' static='true' name='glUniform3i' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method native='true' static='true' name='glUniform3iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='int[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform3iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.IntBuffer' name='v'/></method><method native='true' static='true' name='glUniform4f' api_added='8'><parameter type='int' name='location'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/><parameter type='float' name='w'/></method><method native='true' static='true' name='glUniform4fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='float[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform4fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.FloatBuffer' name='v'/></method><method native='true' static='true' name='glUniform4i' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='int' name='w'/></method><method native='true' static='true' name='glUniform4iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='int[]' name='v'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniform4iv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='java.nio.IntBuffer' name='v'/></method><method native='true' static='true' name='glUniformMatrix2fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='float[]' name='value'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniformMatrix2fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='java.nio.FloatBuffer' name='value'/></method><method native='true' static='true' name='glUniformMatrix3fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='float[]' name='value'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniformMatrix3fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='java.nio.FloatBuffer' name='value'/></method><method native='true' static='true' name='glUniformMatrix4fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='float[]' name='value'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glUniformMatrix4fv' api_added='8'><parameter type='int' name='location'/><parameter type='int' name='count'/><parameter type='boolean' name='transpose'/><parameter type='java.nio.FloatBuffer' name='value'/></method><method native='true' static='true' name='glUseProgram' api_added='8'><parameter type='int' name='program'/></method><method native='true' static='true' name='glValidateProgram' api_added='8'><parameter type='int' name='program'/></method><method native='true' static='true' name='glVertexAttrib1f' api_added='8'><parameter type='int' name='indx'/><parameter type='float' name='x'/></method><method native='true' static='true' name='glVertexAttrib1fv' api_added='8'><parameter type='int' name='indx'/><parameter type='float[]' name='values'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glVertexAttrib1fv' api_added='8'><parameter type='int' name='indx'/><parameter type='java.nio.FloatBuffer' name='values'/></method><method native='true' static='true' name='glVertexAttrib2f' api_added='8'><parameter type='int' name='indx'/><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method native='true' static='true' name='glVertexAttrib2fv' api_added='8'><parameter type='int' name='indx'/><parameter type='float[]' name='values'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glVertexAttrib2fv' api_added='8'><parameter type='int' name='indx'/><parameter type='java.nio.FloatBuffer' name='values'/></method><method native='true' static='true' name='glVertexAttrib3f' api_added='8'><parameter type='int' name='indx'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method native='true' static='true' name='glVertexAttrib3fv' api_added='8'><parameter type='int' name='indx'/><parameter type='float[]' name='values'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glVertexAttrib3fv' api_added='8'><parameter type='int' name='indx'/><parameter type='java.nio.FloatBuffer' name='values'/></method><method native='true' static='true' name='glVertexAttrib4f' api_added='8'><parameter type='int' name='indx'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/><parameter type='float' name='w'/></method><method native='true' static='true' name='glVertexAttrib4fv' api_added='8'><parameter type='int' name='indx'/><parameter type='float[]' name='values'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glVertexAttrib4fv' api_added='8'><parameter type='int' name='indx'/><parameter type='java.nio.FloatBuffer' name='values'/></method><method static='true' name='glVertexAttribPointer' api_added='8'><parameter type='int' name='indx'/><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='boolean' name='normalized'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='ptr'/></method><method native='true' static='true' name='glViewport' api_added='8'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method native='true' static='true' name='glDrawElements' api_added='9'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='int' name='offset'/></method><method native='true' static='true' name='glVertexAttribPointer' api_added='9'><parameter type='int' name='indx'/><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='boolean' name='normalized'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method></class><interface abstract='true' static='true' name='GLSurfaceView.EGLConfigChooser' api_added='3'><method return='javax.microedition.khronos.egl.EGLConfig' abstract='true' name='chooseConfig' api_added='3'><parameter type='javax.microedition.khronos.egl.EGL10' name='egl'/><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/></method></interface><interface abstract='true' static='true' name='GLSurfaceView.GLWrapper' api_added='3'><method return='javax.microedition.khronos.opengles.GL' abstract='true' name='wrap' api_added='3'><parameter type='javax.microedition.khronos.opengles.GL' name='gl'/></method></interface><interface abstract='true' static='true' name='GLSurfaceView.Renderer' api_added='3'><method abstract='true' name='onDrawFrame' api_added='3'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/></method><method abstract='true' name='onSurfaceChanged' api_added='3'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='onSurfaceCreated' api_added='3'><parameter type='javax.microedition.khronos.opengles.GL10' name='gl'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/></method></interface><interface abstract='true' static='true' name='GLSurfaceView.EGLContextFactory' api_added='5'><method return='javax.microedition.khronos.egl.EGLContext' abstract='true' name='createContext' api_added='5'><parameter type='javax.microedition.khronos.egl.EGL10' name='egl'/><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='eglConfig'/></method><method abstract='true' name='destroyContext' api_added='5'><parameter type='javax.microedition.khronos.egl.EGL10' name='egl'/><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLContext' name='context'/></method></interface><interface abstract='true' static='true' name='GLSurfaceView.EGLWindowSurfaceFactory' api_added='5'><method return='javax.microedition.khronos.egl.EGLSurface' abstract='true' name='createWindowSurface' api_added='5'><parameter type='javax.microedition.khronos.egl.EGL10' name='egl'/><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='java.lang.Object' name='nativeWindow'/></method><method abstract='true' name='destroySurface' api_added='5'><parameter type='javax.microedition.khronos.egl.EGL10' name='egl'/><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='surface'/></method></interface></package><package name='android.os'><class extends='android.util.AndroidRuntimeException' name='BadParcelableException'><constructor type='android.os.BadParcelableException' name='BadParcelableException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='android.os.BadParcelableException' name='BadParcelableException'><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='java.lang.Object' name='BatteryManager'><constructor type='android.os.BatteryManager' name='BatteryManager'/></class><class extends='java.lang.Object' name='Binder'><constructor type='android.os.Binder' name='Binder'/><method name='attachInterface'><parameter type='android.os.IInterface' name='owner'/><parameter type='java.lang.String' name='descriptor'/></method><method return='long' native='true' static='true' name='clearCallingIdentity' final='true'/><method visibility='protected' name='dump'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.io.PrintWriter' name='fout'/><parameter type='java.lang.String[]' name='args'/></method><method native='true' static='true' name='flushPendingCommands' final='true'/><method return='int' native='true' static='true' name='getCallingPid' final='true'/><method return='int' native='true' static='true' name='getCallingUid' final='true'/><method return='java.lang.String' name='getInterfaceDescriptor'/><method return='boolean' name='isBinderAlive'/><method native='true' static='true' name='joinThreadPool' final='true'/><method name='linkToDeath'><parameter type='android.os.IBinder.DeathRecipient' name='recipient'/><parameter type='int' name='flags'/></method><method visibility='protected' return='boolean' name='onTransact'><parameter type='int' name='code'/><parameter type='android.os.Parcel' name='data'/><parameter type='android.os.Parcel' name='reply'/><parameter type='int' name='flags'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' name='pingBinder'/><method return='android.os.IInterface' name='queryLocalInterface'><parameter type='java.lang.String' name='descriptor'/></method><method native='true' static='true' name='restoreCallingIdentity' final='true'><parameter type='long' name='token'/></method><method return='boolean' name='transact' final='true'><parameter type='int' name='code'/><parameter type='android.os.Parcel' name='data'/><parameter type='android.os.Parcel' name='reply'/><parameter type='int' name='flags'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' name='unlinkToDeath'><parameter type='android.os.IBinder.DeathRecipient' name='recipient'/><parameter type='int' name='flags'/></method><method name='dump' api_added='3'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.lang.String[]' name='args'/></method><method name='dumpAsync' api_added='13'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.lang.String[]' name='args'/></method></class><class extends='java.lang.Object' name='Build'><constructor type='android.os.Build' name='Build'/><method return='java.lang.String' static='true' name='getRadioVersion' api_added='14'/></class><class extends='java.lang.Object' static='true' name='Build.VERSION'><constructor type='android.os.Build.VERSION' name='Build.VERSION'/></class><class extends='java.lang.Object' name='Bundle' final='true'><constructor type='android.os.Bundle' name='Bundle'/><constructor type='android.os.Bundle' name='Bundle'><parameter type='java.lang.ClassLoader' name='loader'/></constructor><constructor type='android.os.Bundle' name='Bundle'><parameter type='int' name='capacity'/></constructor><constructor type='android.os.Bundle' name='Bundle'><parameter type='android.os.Bundle' name='b'/></constructor><method name='clear'/><method return='java.lang.Object' name='clone'/><method return='boolean' name='containsKey'><parameter type='java.lang.String' name='key'/></method><method return='int' name='describeContents'/><method return='java.lang.Object' name='get'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='getBoolean'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='getBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='defaultValue'/></method><method return='boolean[]' name='getBooleanArray'><parameter type='java.lang.String' name='key'/></method><method return='android.os.Bundle' name='getBundle'><parameter type='java.lang.String' name='key'/></method><method return='byte' name='getByte'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.Byte' name='getByte'><parameter type='java.lang.String' name='key'/><parameter type='byte' name='defaultValue'/></method><method return='byte[]' name='getByteArray'><parameter type='java.lang.String' name='key'/></method><method return='char' name='getChar'><parameter type='java.lang.String' name='key'/></method><method return='char' name='getChar'><parameter type='java.lang.String' name='key'/><parameter type='char' name='defaultValue'/></method><method return='char[]' name='getCharArray'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.CharSequence' name='getCharSequence'><parameter type='java.lang.String' name='key'/></method><method return='double' name='getDouble'><parameter type='java.lang.String' name='key'/></method><method return='double' name='getDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='defaultValue'/></method><method return='double[]' name='getDoubleArray'><parameter type='java.lang.String' name='key'/></method><method return='float' name='getFloat'><parameter type='java.lang.String' name='key'/></method><method return='float' name='getFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='defaultValue'/></method><method return='float[]' name='getFloatArray'><parameter type='java.lang.String' name='key'/></method><method return='int' name='getInt'><parameter type='java.lang.String' name='key'/></method><method return='int' name='getInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='defaultValue'/></method><method return='int[]' name='getIntArray'><parameter type='java.lang.String' name='key'/></method><method return='java.util.ArrayList&lt;java.lang.Integer&gt;' name='getIntegerArrayList'><parameter type='java.lang.String' name='key'/></method><method return='long' name='getLong'><parameter type='java.lang.String' name='key'/></method><method return='long' name='getLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='defaultValue'/></method><method return='long[]' name='getLongArray'><parameter type='java.lang.String' name='key'/></method><method return='T' name='getParcelable'><parameter type='java.lang.String' name='key'/></method><method return='android.os.Parcelable[]' name='getParcelableArray'><parameter type='java.lang.String' name='key'/></method><method return='java.util.ArrayList&lt;T&gt;' name='getParcelableArrayList'><parameter type='java.lang.String' name='key'/></method><method return='java.io.Serializable' name='getSerializable'><parameter type='java.lang.String' name='key'/></method><method return='short' name='getShort'><parameter type='java.lang.String' name='key'/></method><method return='short' name='getShort'><parameter type='java.lang.String' name='key'/><parameter type='short' name='defaultValue'/></method><method return='short[]' name='getShortArray'><parameter type='java.lang.String' name='key'/></method><method return='android.util.SparseArray&lt;T&gt;' name='getSparseParcelableArray'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' name='getString'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String[]' name='getStringArray'><parameter type='java.lang.String' name='key'/></method><method return='java.util.ArrayList&lt;java.lang.String&gt;' name='getStringArrayList'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='hasFileDescriptors'/><method return='boolean' name='isEmpty'/><method return='java.util.Set&lt;java.lang.String&gt;' name='keySet'/><method name='putAll'><parameter type='android.os.Bundle' name='map'/></method><method name='putBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='value'/></method><method name='putBooleanArray'><parameter type='java.lang.String' name='key'/><parameter type='boolean[]' name='value'/></method><method name='putBundle'><parameter type='java.lang.String' name='key'/><parameter type='android.os.Bundle' name='value'/></method><method name='putByte'><parameter type='java.lang.String' name='key'/><parameter type='byte' name='value'/></method><method name='putByteArray'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='value'/></method><method name='putChar'><parameter type='java.lang.String' name='key'/><parameter type='char' name='value'/></method><method name='putCharArray'><parameter type='java.lang.String' name='key'/><parameter type='char[]' name='value'/></method><method name='putCharSequence'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.CharSequence' name='value'/></method><method name='putDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='value'/></method><method name='putDoubleArray'><parameter type='java.lang.String' name='key'/><parameter type='double[]' name='value'/></method><method name='putFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='value'/></method><method name='putFloatArray'><parameter type='java.lang.String' name='key'/><parameter type='float[]' name='value'/></method><method name='putInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/></method><method name='putIntArray'><parameter type='java.lang.String' name='key'/><parameter type='int[]' name='value'/></method><method name='putIntegerArrayList'><parameter type='java.lang.String' name='key'/><parameter type='java.util.ArrayList&lt;java.lang.Integer&gt;' name='value'/></method><method name='putLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='value'/></method><method name='putLongArray'><parameter type='java.lang.String' name='key'/><parameter type='long[]' name='value'/></method><method name='putParcelable'><parameter type='java.lang.String' name='key'/><parameter type='android.os.Parcelable' name='value'/></method><method name='putParcelableArray'><parameter type='java.lang.String' name='key'/><parameter type='android.os.Parcelable[]' name='value'/></method><method name='putParcelableArrayList'><parameter type='java.lang.String' name='key'/><parameter type='java.util.ArrayList&lt;? extends android.os.Parcelable&gt;' name='value'/></method><method name='putSerializable'><parameter type='java.lang.String' name='key'/><parameter type='java.io.Serializable' name='value'/></method><method name='putShort'><parameter type='java.lang.String' name='key'/><parameter type='short' name='value'/></method><method name='putShortArray'><parameter type='java.lang.String' name='key'/><parameter type='short[]' name='value'/></method><method name='putSparseParcelableArray'><parameter type='java.lang.String' name='key'/><parameter type='android.util.SparseArray&lt;? extends android.os.Parcelable&gt;' name='value'/></method><method name='putString'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method name='putStringArray'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String[]' name='value'/></method><method name='putStringArrayList'><parameter type='java.lang.String' name='key'/><parameter type='java.util.ArrayList&lt;java.lang.String&gt;' name='value'/></method><method name='readFromParcel'><parameter type='android.os.Parcel' name='parcel'/></method><method name='remove'><parameter type='java.lang.String' name='key'/></method><method name='setClassLoader'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='int' name='size'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence[]' name='getCharSequenceArray' api_added='8'><parameter type='java.lang.String' name='key'/></method><method return='java.util.ArrayList&lt;java.lang.CharSequence&gt;' name='getCharSequenceArrayList' api_added='8'><parameter type='java.lang.String' name='key'/></method><method name='putCharSequenceArray' api_added='8'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.CharSequence[]' name='value'/></method><method name='putCharSequenceArrayList' api_added='8'><parameter type='java.lang.String' name='key'/><parameter type='java.util.ArrayList&lt;java.lang.CharSequence&gt;' name='value'/></method><method return='java.lang.ClassLoader' name='getClassLoader' api_added='11'/><method return='java.lang.CharSequence' name='getCharSequence' api_added='12'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.CharSequence' name='defaultValue'/></method><method return='java.lang.String' name='getString' api_added='12'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='defaultValue'/></method></class><class extends='java.lang.Object' name='ConditionVariable'><constructor type='android.os.ConditionVariable' name='ConditionVariable'/><constructor type='android.os.ConditionVariable' name='ConditionVariable'><parameter type='boolean' name='state'/></constructor><method name='block'/><method return='boolean' name='block'><parameter type='long' name='timeout'/></method><method name='close'/><method name='open'/></class><class extends='java.lang.Object' abstract='true' name='CountDownTimer'><constructor type='android.os.CountDownTimer' name='CountDownTimer'><parameter type='long' name='millisInFuture'/><parameter type='long' name='countDownInterval'/></constructor><method name='cancel' final='true'/><method abstract='true' name='onFinish'/><method abstract='true' name='onTick'><parameter type='long' name='millisUntilFinished'/></method><method return='android.os.CountDownTimer' synchronized='true' name='start' final='true'/></class><class extends='android.os.RemoteException' name='DeadObjectException'><constructor type='android.os.DeadObjectException' name='DeadObjectException'/></class><class extends='java.lang.Object' name='Debug' final='true'><method deprecated='3' static='true' name='changeDebugPort'><parameter type='int' name='port'/></method><method static='true' name='enableEmulatorTraceOutput'/><method return='int' native='true' static='true' name='getBinderDeathObjectCount' final='true'/><method return='int' native='true' static='true' name='getBinderLocalObjectCount' final='true'/><method return='int' native='true' static='true' name='getBinderProxyObjectCount' final='true'/><method return='int' native='true' static='true' name='getBinderReceivedTransactions'/><method return='int' native='true' static='true' name='getBinderSentTransactions'/><method return='int' static='true' name='getGlobalAllocCount'/><method return='int' static='true' name='getGlobalAllocSize'/><method deprecated='11' return='int' static='true' name='getGlobalExternalAllocCount'/><method deprecated='11' return='int' static='true' name='getGlobalExternalAllocSize'/><method deprecated='11' return='int' static='true' name='getGlobalExternalFreedCount'/><method deprecated='11' return='int' static='true' name='getGlobalExternalFreedSize'/><method return='int' static='true' name='getGlobalFreedCount'/><method return='int' static='true' name='getGlobalFreedSize'/><method return='int' static='true' name='getGlobalGcInvocationCount'/><method return='int' static='true' name='getLoadedClassCount'/><method native='true' static='true' name='getMemoryInfo'><parameter type='android.os.Debug.MemoryInfo' name='memoryInfo'/></method><method return='long' native='true' static='true' name='getNativeHeapAllocatedSize'/><method return='long' native='true' static='true' name='getNativeHeapFreeSize'/><method return='long' native='true' static='true' name='getNativeHeapSize'/><method return='int' static='true' name='getThreadAllocCount'/><method return='int' static='true' name='getThreadAllocSize'/><method deprecated='11' return='int' static='true' name='getThreadExternalAllocCount'/><method deprecated='11' return='int' static='true' name='getThreadExternalAllocSize'/><method return='int' static='true' name='getThreadGcInvocationCount'/><method return='boolean' static='true' name='isDebuggerConnected'/><method static='true' name='printLoadedClasses'><parameter type='int' name='flags'/></method><method static='true' name='resetAllCounts'/><method static='true' name='resetGlobalAllocCount'/><method static='true' name='resetGlobalAllocSize'/><method deprecated='11' static='true' name='resetGlobalExternalAllocCount'/><method deprecated='11' static='true' name='resetGlobalExternalAllocSize'/><method deprecated='11' static='true' name='resetGlobalExternalFreedCount'/><method deprecated='11' static='true' name='resetGlobalExternalFreedSize'/><method static='true' name='resetGlobalFreedCount'/><method static='true' name='resetGlobalFreedSize'/><method static='true' name='resetGlobalGcInvocationCount'/><method static='true' name='resetThreadAllocCount'/><method static='true' name='resetThreadAllocSize'/><method deprecated='11' static='true' name='resetThreadExternalAllocCount'/><method deprecated='11' static='true' name='resetThreadExternalAllocSize'/><method static='true' name='resetThreadGcInvocationCount'/><method deprecated='11' return='int' static='true' name='setAllocationLimit'><parameter type='int' name='limit'/></method><method deprecated='11' return='int' static='true' name='setGlobalAllocationLimit'><parameter type='int' name='limit'/></method><method static='true' name='startAllocCounting'/><method static='true' name='startMethodTracing'/><method static='true' name='startMethodTracing'><parameter type='java.lang.String' name='traceName'/></method><method static='true' name='startMethodTracing'><parameter type='java.lang.String' name='traceName'/><parameter type='int' name='bufferSize'/></method><method static='true' name='startMethodTracing'><parameter type='java.lang.String' name='traceName'/><parameter type='int' name='bufferSize'/><parameter type='int' name='flags'/></method><method static='true' name='startNativeTracing'/><method static='true' name='stopAllocCounting'/><method static='true' name='stopMethodTracing'/><method static='true' name='stopNativeTracing'/><method return='long' static='true' name='threadCpuTimeNanos'/><method static='true' name='waitForDebugger'/><method return='boolean' static='true' name='waitingForDebugger'/><method static='true' name='dumpHprofData' api_added='3'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' static='true' name='dumpService' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.lang.String[]' name='args'/></method><method return='int' static='true' name='getGlobalClassInitCount' api_added='8'/><method return='int' static='true' name='getGlobalClassInitTime' api_added='8'/><method static='true' name='resetGlobalClassInitCount' api_added='8'/><method static='true' name='resetGlobalClassInitTime' api_added='8'/><method return='long' static='true' name='getPss' api_added='14'/></class><class extends='java.lang.Object' static='true' name='Debug.InstructionCount'><constructor type='android.os.Debug.InstructionCount' name='Debug.InstructionCount'/><method return='boolean' name='collect'/><method return='int' name='globalMethodInvocations'/><method return='int' name='globalTotal'/><method return='boolean' name='resetAndStart'/></class><class extends='java.lang.Object' static='true' name='Debug.MemoryInfo'><constructor type='android.os.Debug.MemoryInfo' name='Debug.MemoryInfo'/><method return='int' name='describeContents' api_added='5'/><method return='int' name='getTotalPrivateDirty' api_added='5'/><method return='int' name='getTotalPss' api_added='5'/><method return='int' name='getTotalSharedDirty' api_added='5'/><method name='readFromParcel' api_added='5'><parameter type='android.os.Parcel' name='source'/></method><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='getOtherLabel' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getOtherPrivateDirty' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getOtherPss' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getOtherSharedDirty' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='Environment'><constructor type='android.os.Environment' name='Environment'/><method return='java.io.File' static='true' name='getDataDirectory'/><method return='java.io.File' static='true' name='getDownloadCacheDirectory'/><method return='java.io.File' static='true' name='getExternalStorageDirectory'/><method return='java.lang.String' static='true' name='getExternalStorageState'/><method return='java.io.File' static='true' name='getRootDirectory'/><method return='java.io.File' static='true' name='getExternalStoragePublicDirectory' api_added='8'><parameter type='java.lang.String' name='type'/></method><method return='boolean' static='true' name='isExternalStorageRemovable' api_added='9'/><method return='boolean' static='true' name='isExternalStorageEmulated' api_added='11'/></class><class extends='java.lang.Object' abstract='true' name='FileObserver'><constructor type='android.os.FileObserver' name='FileObserver'><parameter type='java.lang.String' name='path'/></constructor><constructor type='android.os.FileObserver' name='FileObserver'><parameter type='java.lang.String' name='path'/><parameter type='int' name='mask'/></constructor><method abstract='true' name='onEvent'><parameter type='int' name='event'/><parameter type='java.lang.String' name='path'/></method><method name='startWatching'/><method name='stopWatching'/></class><class extends='java.lang.Object' name='Handler'><constructor type='android.os.Handler' name='Handler'/><constructor type='android.os.Handler' name='Handler'><parameter type='android.os.Looper' name='looper'/></constructor><method name='dispatchMessage'><parameter type='android.os.Message' name='msg'/></method><method name='dump' final='true'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.os.Looper' name='getLooper' final='true'/><method name='handleMessage'><parameter type='android.os.Message' name='msg'/></method><method return='boolean' name='hasMessages' final='true'><parameter type='int' name='what'/></method><method return='boolean' name='hasMessages' final='true'><parameter type='int' name='what'/><parameter type='java.lang.Object' name='object'/></method><method return='android.os.Message' name='obtainMessage' final='true'/><method return='android.os.Message' name='obtainMessage' final='true'><parameter type='int' name='what'/></method><method return='android.os.Message' name='obtainMessage' final='true'><parameter type='int' name='what'/><parameter type='java.lang.Object' name='obj'/></method><method return='android.os.Message' name='obtainMessage' final='true'><parameter type='int' name='what'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='android.os.Message' name='obtainMessage' final='true'><parameter type='int' name='what'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='java.lang.Object' name='obj'/></method><method return='boolean' name='post' final='true'><parameter type='java.lang.Runnable' name='r'/></method><method return='boolean' name='postAtFrontOfQueue' final='true'><parameter type='java.lang.Runnable' name='r'/></method><method return='boolean' name='postAtTime' final='true'><parameter type='java.lang.Runnable' name='r'/><parameter type='long' name='uptimeMillis'/></method><method return='boolean' name='postAtTime' final='true'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.lang.Object' name='token'/><parameter type='long' name='uptimeMillis'/></method><method return='boolean' name='postDelayed' final='true'><parameter type='java.lang.Runnable' name='r'/><parameter type='long' name='delayMillis'/></method><method name='removeCallbacks' final='true'><parameter type='java.lang.Runnable' name='r'/></method><method name='removeCallbacks' final='true'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.lang.Object' name='token'/></method><method name='removeCallbacksAndMessages' final='true'><parameter type='java.lang.Object' name='token'/></method><method name='removeMessages' final='true'><parameter type='int' name='what'/></method><method name='removeMessages' final='true'><parameter type='int' name='what'/><parameter type='java.lang.Object' name='object'/></method><method return='boolean' name='sendEmptyMessage' final='true'><parameter type='int' name='what'/></method><method return='boolean' name='sendEmptyMessageAtTime' final='true'><parameter type='int' name='what'/><parameter type='long' name='uptimeMillis'/></method><method return='boolean' name='sendEmptyMessageDelayed' final='true'><parameter type='int' name='what'/><parameter type='long' name='delayMillis'/></method><method return='boolean' name='sendMessage' final='true'><parameter type='android.os.Message' name='msg'/></method><method return='boolean' name='sendMessageAtFrontOfQueue' final='true'><parameter type='android.os.Message' name='msg'/></method><method return='boolean' name='sendMessageAtTime'><parameter type='android.os.Message' name='msg'/><parameter type='long' name='uptimeMillis'/></method><method return='boolean' name='sendMessageDelayed' final='true'><parameter type='android.os.Message' name='msg'/><parameter type='long' name='delayMillis'/></method><method return='java.lang.String' name='getMessageName' api_added='14'><parameter type='android.os.Message' name='arg0'/></method></class><class extends='java.lang.Thread' name='HandlerThread'><constructor type='android.os.HandlerThread' name='HandlerThread'><parameter type='java.lang.String' name='name'/></constructor><constructor type='android.os.HandlerThread' name='HandlerThread'><parameter type='java.lang.String' name='name'/><parameter type='int' name='priority'/></constructor><method return='android.os.Looper' name='getLooper'/><method return='int' name='getThreadId'/><method visibility='protected' name='onLooperPrepared'/><method return='boolean' name='quit' api_added='5'/></class><class extends='java.lang.Object' name='Looper'><method name='dump'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.os.Looper' static='true' synchronized='true' name='getMainLooper' final='true'/><method static='true' name='loop' final='true'/><method return='android.os.Looper' static='true' name='myLooper' final='true'/><method return='android.os.MessageQueue' static='true' name='myQueue' final='true'/><method static='true' name='prepare' final='true'/><method static='true' name='prepareMainLooper' final='true'/><method name='quit'/><method name='setMessageLogging'><parameter type='android.util.Printer' name='printer'/></method><method return='java.lang.Thread' name='getThread' api_added='3'/></class><class extends='java.lang.Object' name='MemoryFile'><constructor type='android.os.MemoryFile' name='MemoryFile'><parameter type='java.lang.String' name='name'/><parameter type='int' name='length'/></constructor><method return='boolean' synchronized='true' name='allowPurging'><parameter type='boolean' name='allowPurging'/><exception type='java.io.IOException' name='IOException'/></method><method name='close'/><method return='java.io.InputStream' name='getInputStream'/><method return='java.io.OutputStream' name='getOutputStream'/><method return='boolean' name='isPurgingAllowed'/><method return='int' name='length'/><method return='int' name='readBytes'><parameter type='byte[]' name='buffer'/><parameter type='int' name='srcOffset'/><parameter type='int' name='destOffset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBytes'><parameter type='byte[]' name='buffer'/><parameter type='int' name='srcOffset'/><parameter type='int' name='destOffset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='Message' final='true'><constructor type='android.os.Message' name='Message'/><method name='copyFrom'><parameter type='android.os.Message' name='o'/></method><method return='int' name='describeContents'/><method return='java.lang.Runnable' name='getCallback'/><method return='android.os.Bundle' name='getData'/><method return='android.os.Handler' name='getTarget'/><method return='long' name='getWhen'/><method return='android.os.Message' static='true' name='obtain'/><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Message' name='orig'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/><parameter type='java.lang.Runnable' name='callback'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/><parameter type='int' name='what'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/><parameter type='int' name='what'/><parameter type='java.lang.Object' name='obj'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/><parameter type='int' name='what'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='android.os.Message' static='true' name='obtain'><parameter type='android.os.Handler' name='h'/><parameter type='int' name='what'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='java.lang.Object' name='obj'/></method><method return='android.os.Bundle' name='peekData'/><method name='recycle'/><method name='sendToTarget'/><method name='setData'><parameter type='android.os.Bundle' name='data'/></method><method name='setTarget'><parameter type='android.os.Handler' name='target'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='MessageQueue'><method name='addIdleHandler' final='true'><parameter type='android.os.MessageQueue.IdleHandler' name='handler'/></method><method name='removeIdleHandler' final='true'><parameter type='android.os.MessageQueue.IdleHandler' name='handler'/></method></class><class extends='java.lang.Object' name='Messenger' final='true'><constructor type='android.os.Messenger' name='Messenger'><parameter type='android.os.Handler' name='target'/></constructor><constructor type='android.os.Messenger' name='Messenger'><parameter type='android.os.IBinder' name='target'/></constructor><method return='int' name='describeContents'/><method return='android.os.IBinder' name='getBinder'/><method return='android.os.Messenger' static='true' name='readMessengerOrNullFromParcel'><parameter type='android.os.Parcel' name='in'/></method><method name='send'><parameter type='android.os.Message' name='message'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method static='true' name='writeMessengerOrNullToParcel'><parameter type='android.os.Messenger' name='messenger'/><parameter type='android.os.Parcel' name='out'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='Parcel' final='true'><method native='true' name='appendFrom' final='true'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='android.os.IBinder[]' name='createBinderArray' final='true'/><method return='java.util.ArrayList&lt;android.os.IBinder&gt;' name='createBinderArrayList' final='true'/><method return='boolean[]' name='createBooleanArray' final='true'/><method return='byte[]' native='true' name='createByteArray' final='true'/><method return='char[]' name='createCharArray' final='true'/><method return='double[]' name='createDoubleArray' final='true'/><method return='float[]' name='createFloatArray' final='true'/><method return='int[]' name='createIntArray' final='true'/><method return='long[]' name='createLongArray' final='true'/><method return='java.lang.String[]' name='createStringArray' final='true'/><method return='java.util.ArrayList&lt;java.lang.String&gt;' name='createStringArrayList' final='true'/><method return='T[]' name='createTypedArray' final='true'><parameter type='android.os.Parcelable.Creator&lt;T&gt;' name='c'/></method><method return='java.util.ArrayList&lt;T&gt;' name='createTypedArrayList' final='true'><parameter type='android.os.Parcelable.Creator&lt;T&gt;' name='c'/></method><method return='int' native='true' name='dataAvail' final='true'/><method return='int' native='true' name='dataCapacity' final='true'/><method return='int' native='true' name='dataPosition' final='true'/><method return='int' native='true' name='dataSize' final='true'/><method native='true' name='enforceInterface' final='true'><parameter type='java.lang.String' name='interfaceName'/></method><method return='boolean' native='true' name='hasFileDescriptors' final='true'/><method return='byte[]' native='true' name='marshall' final='true'/><method return='android.os.Parcel' static='true' name='obtain'/><method visibility='protected' return='android.os.Parcel' static='true' name='obtain' final='true'><parameter type='int' name='obj'/></method><method return='java.lang.Object[]' name='readArray' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='java.util.ArrayList' name='readArrayList' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method name='readBinderArray' final='true'><parameter type='android.os.IBinder[]' name='val'/></method><method name='readBinderList' final='true'><parameter type='java.util.List&lt;android.os.IBinder&gt;' name='list'/></method><method name='readBooleanArray' final='true'><parameter type='boolean[]' name='val'/></method><method return='android.os.Bundle' name='readBundle' final='true'/><method return='android.os.Bundle' name='readBundle' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='byte' name='readByte' final='true'/><method name='readByteArray' final='true'><parameter type='byte[]' name='val'/></method><method name='readCharArray' final='true'><parameter type='char[]' name='val'/></method><method return='double' native='true' name='readDouble' final='true'/><method name='readDoubleArray' final='true'><parameter type='double[]' name='val'/></method><method name='readException' final='true'/><method name='readException' final='true'><parameter type='int' name='code'/><parameter type='java.lang.String' name='msg'/></method><method return='android.os.ParcelFileDescriptor' name='readFileDescriptor' final='true'/><method return='float' native='true' name='readFloat' final='true'/><method name='readFloatArray' final='true'><parameter type='float[]' name='val'/></method><method deprecated='2' return='java.util.HashMap' name='readHashMap' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='int' native='true' name='readInt' final='true'/><method name='readIntArray' final='true'><parameter type='int[]' name='val'/></method><method name='readList' final='true'><parameter type='java.util.List' name='outVal'/><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='long' native='true' name='readLong' final='true'/><method name='readLongArray' final='true'><parameter type='long[]' name='val'/></method><method deprecated='2' name='readMap' final='true'><parameter type='java.util.Map' name='outVal'/><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='T' name='readParcelable' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='android.os.Parcelable[]' name='readParcelableArray' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='java.io.Serializable' name='readSerializable' final='true'/><method return='android.util.SparseArray' name='readSparseArray' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='android.util.SparseBooleanArray' name='readSparseBooleanArray' final='true'/><method return='java.lang.String' native='true' name='readString' final='true'/><method name='readStringArray' final='true'><parameter type='java.lang.String[]' name='val'/></method><method name='readStringList' final='true'><parameter type='java.util.List&lt;java.lang.String&gt;' name='list'/></method><method return='android.os.IBinder' native='true' name='readStrongBinder' final='true'/><method name='readTypedArray' final='true'><parameter type='T[]' name='val'/><parameter type='android.os.Parcelable.Creator&lt;T&gt;' name='c'/></method><method name='readTypedList' final='true'><parameter type='java.util.List&lt;T&gt;' name='list'/><parameter type='android.os.Parcelable.Creator&lt;T&gt;' name='c'/></method><method return='java.lang.Object' name='readValue' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method name='recycle' final='true'/><method native='true' name='setDataCapacity' final='true'><parameter type='int' name='size'/></method><method native='true' name='setDataPosition' final='true'><parameter type='int' name='pos'/></method><method native='true' name='setDataSize' final='true'><parameter type='int' name='size'/></method><method native='true' name='unmarshall' final='true'><parameter type='byte[]' name='data'/><parameter type='int' name='offest'/><parameter type='int' name='length'/></method><method name='writeArray' final='true'><parameter type='java.lang.Object[]' name='val'/></method><method name='writeBinderArray' final='true'><parameter type='android.os.IBinder[]' name='val'/></method><method name='writeBinderList' final='true'><parameter type='java.util.List&lt;android.os.IBinder&gt;' name='val'/></method><method name='writeBooleanArray' final='true'><parameter type='boolean[]' name='val'/></method><method name='writeBundle' final='true'><parameter type='android.os.Bundle' name='val'/></method><method name='writeByte' final='true'><parameter type='byte' name='val'/></method><method name='writeByteArray' final='true'><parameter type='byte[]' name='b'/></method><method name='writeByteArray' final='true'><parameter type='byte[]' name='b'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method name='writeCharArray' final='true'><parameter type='char[]' name='val'/></method><method native='true' name='writeDouble' final='true'><parameter type='double' name='val'/></method><method name='writeDoubleArray' final='true'><parameter type='double[]' name='val'/></method><method name='writeException' final='true'><parameter type='java.lang.Exception' name='e'/></method><method native='true' name='writeFileDescriptor' final='true'><parameter type='java.io.FileDescriptor' name='val'/></method><method native='true' name='writeFloat' final='true'><parameter type='float' name='val'/></method><method name='writeFloatArray' final='true'><parameter type='float[]' name='val'/></method><method native='true' name='writeInt' final='true'><parameter type='int' name='val'/></method><method name='writeIntArray' final='true'><parameter type='int[]' name='val'/></method><method native='true' name='writeInterfaceToken' final='true'><parameter type='java.lang.String' name='interfaceName'/></method><method name='writeList' final='true'><parameter type='java.util.List' name='val'/></method><method native='true' name='writeLong' final='true'><parameter type='long' name='val'/></method><method name='writeLongArray' final='true'><parameter type='long[]' name='val'/></method><method deprecated='2' name='writeMap' final='true'><parameter type='java.util.Map' name='val'/></method><method name='writeNoException' final='true'/><method name='writeParcelable' final='true'><parameter type='android.os.Parcelable' name='p'/><parameter type='int' name='parcelableFlags'/></method><method name='writeParcelableArray' final='true'><parameter type='T[]' name='value'/><parameter type='int' name='parcelableFlags'/></method><method name='writeSerializable' final='true'><parameter type='java.io.Serializable' name='s'/></method><method name='writeSparseArray' final='true'><parameter type='android.util.SparseArray&lt;java.lang.Object&gt;' name='val'/></method><method name='writeSparseBooleanArray' final='true'><parameter type='android.util.SparseBooleanArray' name='val'/></method><method native='true' name='writeString' final='true'><parameter type='java.lang.String' name='val'/></method><method name='writeStringArray' final='true'><parameter type='java.lang.String[]' name='val'/></method><method name='writeStringList' final='true'><parameter type='java.util.List&lt;java.lang.String&gt;' name='val'/></method><method native='true' name='writeStrongBinder' final='true'><parameter type='android.os.IBinder' name='val'/></method><method name='writeStrongInterface' final='true'><parameter type='android.os.IInterface' name='val'/></method><method name='writeTypedArray' final='true'><parameter type='T[]' name='val'/><parameter type='int' name='parcelableFlags'/></method><method name='writeTypedList' final='true'><parameter type='java.util.List&lt;T&gt;' name='val'/></method><method name='writeValue' final='true'><parameter type='java.lang.Object' name='v'/></method></class><class extends='java.lang.Object' name='ParcelFileDescriptor'><constructor type='android.os.ParcelFileDescriptor' name='ParcelFileDescriptor'><parameter type='android.os.ParcelFileDescriptor' name='descriptor'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='describeContents'/><method return='android.os.ParcelFileDescriptor' static='true' name='fromSocket'><parameter type='java.net.Socket' name='socket'/></method><method return='java.io.FileDescriptor' name='getFileDescriptor'/><method return='android.os.ParcelFileDescriptor' static='true' name='open'><parameter type='java.io.File' name='file'/><parameter type='int' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='long' native='true' name='getStatSize' api_added='3'/><method return='android.os.ParcelFileDescriptor[]' static='true' name='createPipe' api_added='9'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='detachFd' api_added='12'/><method return='int' name='getFd' api_added='12'/><method return='android.os.ParcelFileDescriptor' static='true' name='adoptFd' api_added='13'><parameter type='int' name='fd'/></method><method return='android.os.ParcelFileDescriptor' static='true' name='dup' api_added='13'><parameter type='java.io.FileDescriptor' name='orig'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.os.ParcelFileDescriptor' static='true' name='fromFd' api_added='13'><parameter type='int' name='fd'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.os.ParcelFileDescriptor' name='dup' api_added='14'/><method return='android.os.ParcelFileDescriptor' static='true' name='fromDatagramSocket' api_added='14'><parameter type='java.net.DatagramSocket' name='arg0'/></method></class><class extends='java.io.FileInputStream' static='true' name='ParcelFileDescriptor.AutoCloseInputStream'><constructor type='android.os.ParcelFileDescriptor.AutoCloseInputStream' name='ParcelFileDescriptor.AutoCloseInputStream'><parameter type='android.os.ParcelFileDescriptor' name='fd'/></constructor></class><class extends='java.io.FileOutputStream' static='true' name='ParcelFileDescriptor.AutoCloseOutputStream'><constructor type='android.os.ParcelFileDescriptor.AutoCloseOutputStream' name='ParcelFileDescriptor.AutoCloseOutputStream'><parameter type='android.os.ParcelFileDescriptor' name='fd'/></constructor></class><class extends='java.lang.RuntimeException' name='ParcelFormatException'><constructor type='android.os.ParcelFormatException' name='ParcelFormatException'/><constructor type='android.os.ParcelFormatException' name='ParcelFormatException'><parameter type='java.lang.String' name='reason'/></constructor></class><class extends='java.lang.Object' name='PatternMatcher'><constructor type='android.os.PatternMatcher' name='PatternMatcher'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='type'/></constructor><constructor type='android.os.PatternMatcher' name='PatternMatcher'><parameter type='android.os.Parcel' name='src'/></constructor><method return='int' name='describeContents'/><method return='java.lang.String' name='getPath' final='true'/><method return='int' name='getType' final='true'/><method return='boolean' name='match'><parameter type='java.lang.String' name='str'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='PowerManager'><method name='goToSleep'><parameter type='long' name='time'/></method><method return='android.os.PowerManager.WakeLock' name='newWakeLock'><parameter type='int' name='flags'/><parameter type='java.lang.String' name='tag'/></method><method name='userActivity'><parameter type='long' name='when'/><parameter type='boolean' name='noChangeLights'/></method><method return='boolean' name='isScreenOn' api_added='7'/><method name='reboot' api_added='8'><parameter type='java.lang.String' name='reason'/></method></class><class extends='java.lang.Object' name='PowerManager.WakeLock'><method name='acquire'/><method name='acquire'><parameter type='long' name='timeout'/></method><method return='boolean' name='isHeld'/><method name='release'/><method name='setReferenceCounted'><parameter type='boolean' name='value'/></method><method name='setWorkSource' api_added='9'><parameter type='android.os.WorkSource' name='ws'/></method></class><class extends='java.lang.Object' name='Process'><constructor type='android.os.Process' name='Process'/><method return='long' native='true' static='true' name='getElapsedCpuTime' final='true'/><method return='int' native='true' static='true' name='getGidForName' final='true'><parameter type='java.lang.String' name='name'/></method><method return='int' native='true' static='true' name='getThreadPriority' final='true'><parameter type='int' name='tid'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' native='true' static='true' name='getUidForName' final='true'><parameter type='java.lang.String' name='name'/></method><method static='true' name='killProcess' final='true'><parameter type='int' name='pid'/></method><method return='int' native='true' static='true' name='myPid' final='true'/><method return='int' native='true' static='true' name='myTid' final='true'/><method native='true' static='true' name='sendSignal' final='true'><parameter type='int' name='pid'/><parameter type='int' name='signal'/></method><method native='true' static='true' name='setThreadPriority' final='true'><parameter type='int' name='tid'/><parameter type='int' name='priority'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method native='true' static='true' name='setThreadPriority' final='true'><parameter type='int' name='priority'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method deprecated='14' return='boolean' native='true' static='true' name='supportsProcesses' final='true'/><method return='int' native='true' static='true' name='myUid' api_added='2' final='true'/></class><class extends='java.lang.Object' name='RemoteCallbackList'><constructor type='android.os.RemoteCallbackList' name='RemoteCallbackList'/><method return='int' name='beginBroadcast'/><method name='finishBroadcast'/><method return='E' name='getBroadcastItem'><parameter type='int' name='index'/></method><method name='kill'/><method name='onCallbackDied'><parameter type='E' name='callback'/></method><method return='boolean' name='register'><parameter type='E' name='callback'/></method><method return='boolean' name='unregister'><parameter type='E' name='callback'/></method><method return='java.lang.Object' name='getBroadcastCookie' api_added='4'><parameter type='int' name='index'/></method><method name='onCallbackDied' api_added='4'><parameter type='E' name='callback'/><parameter type='java.lang.Object' name='cookie'/></method><method return='boolean' name='register' api_added='4'><parameter type='E' name='callback'/><parameter type='java.lang.Object' name='cookie'/></method></class><class extends='android.util.AndroidException' name='RemoteException'><constructor type='android.os.RemoteException' name='RemoteException'/></class><class extends='java.lang.Object' name='StatFs'><constructor type='android.os.StatFs' name='StatFs'><parameter type='java.lang.String' name='path'/></constructor><method return='int' native='true' name='getAvailableBlocks'/><method return='int' native='true' name='getBlockCount'/><method return='int' native='true' name='getBlockSize'/><method return='int' native='true' name='getFreeBlocks'/><method name='restat'><parameter type='java.lang.String' name='path'/></method></class><class extends='java.lang.Object' name='SystemClock' final='true'><method return='long' native='true' static='true' name='currentThreadTimeMillis'/><method return='long' native='true' static='true' name='elapsedRealtime'/><method return='boolean' native='true' static='true' name='setCurrentTimeMillis'><parameter type='long' name='millis'/></method><method static='true' name='sleep'><parameter type='long' name='ms'/></method><method return='long' native='true' static='true' name='uptimeMillis'/></class><class extends='java.lang.Object' abstract='true' name='TokenWatcher'><constructor type='android.os.TokenWatcher' name='TokenWatcher'><parameter type='android.os.Handler' name='h'/><parameter type='java.lang.String' name='tag'/></constructor><method name='acquire'><parameter type='android.os.IBinder' name='token'/><parameter type='java.lang.String' name='tag'/></method><method abstract='true' name='acquired'/><method name='cleanup'><parameter type='android.os.IBinder' name='token'/><parameter type='boolean' name='unlink'/></method><method name='dump'/><method return='boolean' name='isAcquired'/><method name='release'><parameter type='android.os.IBinder' name='token'/></method><method abstract='true' name='released'/><method name='dump' api_added='16'><parameter type='java.io.PrintWriter' name='arg0'/></method></class><class extends='java.lang.Object' name='Vibrator'><method name='cancel'/><method name='vibrate'><parameter type='long' name='milliseconds'/></method><method name='vibrate'><parameter type='long[]' name='pattern'/><parameter type='int' name='repeat'/></method><method return='boolean' name='hasVibrator' api_added='11'/></class><class extends='java.lang.Object' abstract='true' name='AsyncTask' api_added='3'><constructor type='android.os.AsyncTask' name='AsyncTask' api_added='3'/><method return='boolean' name='cancel' api_added='3' final='true'><parameter type='boolean' name='mayInterruptIfRunning'/></method><method visibility='protected' return='Result' abstract='true' name='doInBackground' api_added='3'><parameter type='Params...' name='params'/></method><method return='android.os.AsyncTask&lt;Params, Progress, Result&gt;' name='execute' api_added='3' final='true'><parameter type='Params...' name='params'/></method><method return='Result' name='get' api_added='3' final='true'><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='Result' name='get' api_added='3' final='true'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='android.os.AsyncTask.Status' name='getStatus' api_added='3' final='true'/><method return='boolean' name='isCancelled' api_added='3' final='true'/><method visibility='protected' name='onCancelled' api_added='3'/><method visibility='protected' name='onPostExecute' api_added='3'><parameter type='Result' name='result'/></method><method visibility='protected' name='onPreExecute' api_added='3'/><method visibility='protected' name='onProgressUpdate' api_added='3'><parameter type='Progress...' name='values'/></method><method visibility='protected' name='publishProgress' api_added='3' final='true'><parameter type='Progress...' name='values'/></method><method static='true' name='execute' api_added='11'><parameter type='java.lang.Runnable' name='runnable'/></method><method return='android.os.AsyncTask&lt;Params, Progress, Result&gt;' name='executeOnExecutor' api_added='11' final='true'><parameter type='java.util.concurrent.Executor' name='exec'/><parameter type='Params...' name='params'/></method><method visibility='protected' name='onCancelled' api_added='11'><parameter type='Result' name='result'/></method></class><class extends='java.lang.Enum' static='true' name='AsyncTask.Status' api_added='3' final='true'><method return='android.os.AsyncTask.Status' static='true' name='valueOf' api_added='3'><parameter type='java.lang.String' name='name'/></method><method return='android.os.AsyncTask.Status[]' static='true' name='values' api_added='3' final='true'/></class><class extends='java.lang.Object' name='ResultReceiver' api_added='3'><constructor type='android.os.ResultReceiver' name='ResultReceiver' api_added='3'><parameter type='android.os.Handler' name='handler'/></constructor><method return='int' name='describeContents' api_added='3'/><method visibility='protected' name='onReceiveResult' api_added='3'><parameter type='int' name='resultCode'/><parameter type='android.os.Bundle' name='resultData'/></method><method name='send' api_added='3'><parameter type='int' name='resultCode'/><parameter type='android.os.Bundle' name='resultData'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='Build.VERSION_CODES' api_added='4'><constructor type='android.os.Build.VERSION_CODES' name='Build.VERSION_CODES' api_added='4'/></class><class extends='java.lang.Object' name='ParcelUuid' api_added='5' final='true'><constructor type='android.os.ParcelUuid' name='ParcelUuid' api_added='5'><parameter type='java.util.UUID' name='uuid'/></constructor><method return='int' name='describeContents' api_added='5'/><method return='android.os.ParcelUuid' static='true' name='fromString' api_added='5'><parameter type='java.lang.String' name='uuid'/></method><method return='java.util.UUID' name='getUuid' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='DropBoxManager' api_added='8'><constructor visibility='protected' type='android.os.DropBoxManager' name='DropBoxManager' api_added='8'/><method name='addData' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='byte[]' name='data'/><parameter type='int' name='flags'/></method><method name='addFile' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='java.io.File' name='file'/><parameter type='int' name='flags'/><exception type='java.io.IOException' name='IOException'/></method><method name='addText' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='data'/></method><method return='android.os.DropBoxManager.Entry' name='getNextEntry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='msec'/></method><method return='boolean' name='isTagEnabled' api_added='8'><parameter type='java.lang.String' name='tag'/></method></class><class extends='java.lang.Object' static='true' name='DropBoxManager.Entry' api_added='8'><constructor type='android.os.DropBoxManager.Entry' name='DropBoxManager.Entry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='millis'/></constructor><constructor type='android.os.DropBoxManager.Entry' name='DropBoxManager.Entry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='millis'/><parameter type='java.lang.String' name='text'/></constructor><constructor type='android.os.DropBoxManager.Entry' name='DropBoxManager.Entry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='millis'/><parameter type='byte[]' name='data'/><parameter type='int' name='flags'/></constructor><constructor type='android.os.DropBoxManager.Entry' name='DropBoxManager.Entry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='millis'/><parameter type='android.os.ParcelFileDescriptor' name='data'/><parameter type='int' name='flags'/></constructor><constructor type='android.os.DropBoxManager.Entry' name='DropBoxManager.Entry' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='long' name='millis'/><parameter type='java.io.File' name='data'/><parameter type='int' name='flags'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='close' api_added='8'/><method return='int' name='describeContents' api_added='8'/><method return='int' name='getFlags' api_added='8'/><method return='java.io.InputStream' name='getInputStream' api_added='8'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getTag' api_added='8'/><method return='java.lang.String' name='getText' api_added='8'><parameter type='int' name='maxBytes'/></method><method return='long' name='getTimeMillis' api_added='8'/><method name='writeToParcel' api_added='8'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='RecoverySystem' api_added='8'><constructor type='android.os.RecoverySystem' name='RecoverySystem' api_added='8'/><method static='true' name='installPackage' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='java.io.File' name='packageFile'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='rebootWipeUserData' api_added='8'><parameter type='android.content.Context' name='context'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='verifyPackage' api_added='8'><parameter type='java.io.File' name='packageFile'/><parameter type='android.os.RecoverySystem.ProgressListener' name='listener'/><parameter type='java.io.File' name='deviceCertsZipFile'/><exception type='java.security.GeneralSecurityException' name='GeneralSecurityException'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='rebootWipeCache' api_added='14'><parameter type='android.content.Context' name='arg0'/></method></class><class extends='java.lang.Object' name='StrictMode' api_added='9' final='true'><method return='android.os.StrictMode.ThreadPolicy' static='true' name='allowThreadDiskReads' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy' static='true' name='allowThreadDiskWrites' api_added='9'/><method static='true' name='enableDefaults' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy' static='true' name='getThreadPolicy' api_added='9'/><method return='android.os.StrictMode.VmPolicy' static='true' name='getVmPolicy' api_added='9'/><method static='true' name='setThreadPolicy' api_added='9'><parameter type='android.os.StrictMode.ThreadPolicy' name='policy'/></method><method static='true' name='setVmPolicy' api_added='9'><parameter type='android.os.StrictMode.VmPolicy' name='policy'/></method><method static='true' name='noteSlowCall' api_added='11'><parameter type='java.lang.String' name='name'/></method></class><class extends='java.lang.Object' static='true' name='StrictMode.ThreadPolicy' api_added='9' final='true'/><class extends='java.lang.Object' static='true' name='StrictMode.ThreadPolicy.Builder' api_added='9' final='true'><constructor type='android.os.StrictMode.ThreadPolicy.Builder' name='StrictMode.ThreadPolicy.Builder' api_added='9'/><constructor type='android.os.StrictMode.ThreadPolicy.Builder' name='StrictMode.ThreadPolicy.Builder' api_added='9'><parameter type='android.os.StrictMode.ThreadPolicy' name='policy'/></constructor><method return='android.os.StrictMode.ThreadPolicy' name='build' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='detectAll' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='detectDiskReads' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='detectDiskWrites' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='detectNetwork' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyDeath' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyDialog' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyDropBox' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyLog' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='permitAll' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='permitDiskReads' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='permitDiskWrites' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='permitNetwork' api_added='9'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='detectCustomSlowCalls' api_added='11'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyDeathOnNetwork' api_added='11'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='penaltyFlashScreen' api_added='11'/><method return='android.os.StrictMode.ThreadPolicy.Builder' name='permitCustomSlowCalls' api_added='11'/></class><class extends='java.lang.Object' static='true' name='StrictMode.VmPolicy' api_added='9' final='true'/><class extends='java.lang.Object' static='true' name='StrictMode.VmPolicy.Builder' api_added='9' final='true'><constructor type='android.os.StrictMode.VmPolicy.Builder' name='StrictMode.VmPolicy.Builder' api_added='9'/><method return='android.os.StrictMode.VmPolicy' name='build' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='detectAll' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='detectLeakedSqlLiteObjects' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='penaltyDeath' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='penaltyDropBox' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='penaltyLog' api_added='9'/><method return='android.os.StrictMode.VmPolicy.Builder' name='detectActivityLeaks' api_added='11'/><method return='android.os.StrictMode.VmPolicy.Builder' name='detectLeakedClosableObjects' api_added='11'/><method return='android.os.StrictMode.VmPolicy.Builder' name='setClassInstanceLimit' api_added='11'><parameter type='java.lang.Class' name='klass'/><parameter type='int' name='instanceLimit'/></method><method return='android.os.StrictMode.VmPolicy.Builder' name='detectLeakedRegistrationObjects' api_added='16'/></class><class extends='java.lang.Object' name='WorkSource' api_added='9'><constructor type='android.os.WorkSource' name='WorkSource' api_added='9'/><constructor type='android.os.WorkSource' name='WorkSource' api_added='9'><parameter type='android.os.WorkSource' name='orig'/></constructor><method return='boolean' name='add' api_added='9'><parameter type='android.os.WorkSource' name='other'/></method><method name='clear' api_added='9'/><method return='int' name='describeContents' api_added='9'/><method return='boolean' name='diff' api_added='9'><parameter type='android.os.WorkSource' name='other'/></method><method return='boolean' name='remove' api_added='9'><parameter type='android.os.WorkSource' name='other'/></method><method name='set' api_added='9'><parameter type='android.os.WorkSource' name='other'/></method><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.RuntimeException' name='NetworkOnMainThreadException' api_added='11'><constructor type='android.os.NetworkOnMainThreadException' name='NetworkOnMainThreadException' api_added='11'/></class><class extends='android.os.RemoteException' name='TransactionTooLargeException' api_added='15'><constructor type='android.os.TransactionTooLargeException' name='TransactionTooLargeException' api_added='15'/></class><class extends='java.lang.Object' name='CancellationSignal' api_added='16' final='true'><constructor type='android.os.CancellationSignal' name='CancellationSignal' api_added='16'/><method name='cancel' api_added='16'/><method return='boolean' name='isCanceled' api_added='16'/><method name='setOnCancelListener' api_added='16'><parameter type='android.os.CancellationSignal.OnCancelListener' name='arg0'/></method><method name='throwIfCanceled' api_added='16'/></class><class extends='java.lang.RuntimeException' name='OperationCanceledException' api_added='16'><constructor type='android.os.OperationCanceledException' name='OperationCanceledException' api_added='16'/><constructor type='android.os.OperationCanceledException' name='OperationCanceledException' api_added='16'><parameter type='java.lang.String' name='arg0'/></constructor></class><interface abstract='true' name='IBinder'><method return='java.lang.String' abstract='true' name='getInterfaceDescriptor'><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' abstract='true' name='isBinderAlive'/><method abstract='true' name='linkToDeath'><parameter type='android.os.IBinder.DeathRecipient' name='recipient'/><parameter type='int' name='flags'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' abstract='true' name='pingBinder'/><method return='android.os.IInterface' abstract='true' name='queryLocalInterface'><parameter type='java.lang.String' name='descriptor'/></method><method return='boolean' abstract='true' name='transact'><parameter type='int' name='code'/><parameter type='android.os.Parcel' name='data'/><parameter type='android.os.Parcel' name='reply'/><parameter type='int' name='flags'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='boolean' abstract='true' name='unlinkToDeath'><parameter type='android.os.IBinder.DeathRecipient' name='recipient'/><parameter type='int' name='flags'/></method><method abstract='true' name='dump' api_added='3'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.lang.String[]' name='args'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method abstract='true' name='dumpAsync' api_added='13'><parameter type='java.io.FileDescriptor' name='fd'/><parameter type='java.lang.String[]' name='args'/><exception type='android.os.RemoteException' name='RemoteException'/></method></interface><interface abstract='true' static='true' name='IBinder.DeathRecipient'><method abstract='true' name='binderDied'/></interface><interface abstract='true' name='IInterface'><method return='android.os.IBinder' abstract='true' name='asBinder'/></interface><interface abstract='true' static='true' name='MessageQueue.IdleHandler'><method return='boolean' abstract='true' name='queueIdle'/></interface><interface abstract='true' name='Parcelable'><method return='int' abstract='true' name='describeContents'/><method abstract='true' name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></interface><interface abstract='true' static='true' name='Parcelable.Creator'><method return='T' abstract='true' name='createFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method return='T[]' abstract='true' name='newArray'><parameter type='int' name='size'/></method></interface><interface abstract='true' static='true' name='Handler.Callback' api_added='3'><method return='boolean' abstract='true' name='handleMessage' api_added='3'><parameter type='android.os.Message' name='msg'/></method></interface><interface abstract='true' static='true' name='RecoverySystem.ProgressListener' api_added='8'><method abstract='true' name='onProgress' api_added='8'><parameter type='int' name='progress'/></method></interface><interface abstract='true' static='true' name='Parcelable.ClassLoaderCreator' api_added='13'><method return='T' abstract='true' name='createFromParcel' api_added='13'><parameter type='android.os.Parcel' name='source'/><parameter type='java.lang.ClassLoader' name='loader'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='CancellationSignal.OnCancelListener' api_added='16'><method abstract='true' name='onCancel' api_added='16'/></interface></package><package name='android.preference'><class extends='android.preference.Preference' name='CheckBoxPreference'><constructor type='android.preference.CheckBoxPreference' name='CheckBoxPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.CheckBoxPreference' name='CheckBoxPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.CheckBoxPreference' name='CheckBoxPreference'><parameter type='android.content.Context' name='context'/></constructor><method return='boolean' api_removed='14' name='getDisableDependentsState'/><method return='java.lang.CharSequence' api_removed='14' name='getSummaryOff'/><method return='java.lang.CharSequence' api_removed='14' name='getSummaryOn'/><method return='boolean' api_removed='14' name='isChecked'/><method api_removed='14' name='setChecked'><parameter type='boolean' name='checked'/></method><method api_removed='14' name='setDisableDependentsState'><parameter type='boolean' name='disableDependentsState'/></method><method api_removed='14' name='setSummaryOff'><parameter type='java.lang.CharSequence' name='summary'/></method><method api_removed='14' name='setSummaryOff'><parameter type='int' name='summaryResId'/></method><method api_removed='14' name='setSummaryOn'><parameter type='java.lang.CharSequence' name='summary'/></method><method api_removed='14' name='setSummaryOn'><parameter type='int' name='summaryResId'/></method></class><class extends='android.preference.Preference' abstract='true' name='DialogPreference'><constructor type='android.preference.DialogPreference' name='DialogPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.DialogPreference' name='DialogPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='android.graphics.drawable.Drawable' name='getDialogIcon'/><method return='int' name='getDialogLayoutResource'/><method return='java.lang.CharSequence' name='getDialogMessage'/><method return='java.lang.CharSequence' name='getDialogTitle'/><method return='java.lang.CharSequence' name='getNegativeButtonText'/><method return='java.lang.CharSequence' name='getPositiveButtonText'/><method name='onActivityDestroy'/><method visibility='protected' name='onBindDialogView'><parameter type='android.view.View' name='view'/></method><method name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/></method><method visibility='protected' return='android.view.View' name='onCreateDialogView'/><method visibility='protected' name='onDialogClosed'><parameter type='boolean' name='positiveResult'/></method><method name='onDismiss'><parameter type='android.content.DialogInterface' name='dialog'/></method><method visibility='protected' name='onPrepareDialogBuilder'><parameter type='android.app.AlertDialog.Builder' name='builder'/></method><method name='setDialogIcon'><parameter type='android.graphics.drawable.Drawable' name='dialogIcon'/></method><method name='setDialogIcon'><parameter type='int' name='dialogIconRes'/></method><method name='setDialogLayoutResource'><parameter type='int' name='dialogLayoutResId'/></method><method name='setDialogMessage'><parameter type='java.lang.CharSequence' name='dialogMessage'/></method><method name='setDialogMessage'><parameter type='int' name='dialogMessageResId'/></method><method name='setDialogTitle'><parameter type='java.lang.CharSequence' name='dialogTitle'/></method><method name='setDialogTitle'><parameter type='int' name='dialogTitleResId'/></method><method name='setNegativeButtonText'><parameter type='java.lang.CharSequence' name='negativeButtonText'/></method><method name='setNegativeButtonText'><parameter type='int' name='negativeButtonTextResId'/></method><method name='setPositiveButtonText'><parameter type='java.lang.CharSequence' name='positiveButtonText'/></method><method name='setPositiveButtonText'><parameter type='int' name='positiveButtonTextResId'/></method><method visibility='protected' name='showDialog'><parameter type='android.os.Bundle' name='state'/></method><method return='android.app.Dialog' name='getDialog' api_added='3'/></class><class extends='android.preference.DialogPreference' name='EditTextPreference'><constructor type='android.preference.EditTextPreference' name='EditTextPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.EditTextPreference' name='EditTextPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.EditTextPreference' name='EditTextPreference'><parameter type='android.content.Context' name='context'/></constructor><method return='android.widget.EditText' name='getEditText'/><method return='java.lang.String' name='getText'/><method visibility='protected' name='onAddEditTextToDialogView'><parameter type='android.view.View' name='dialogView'/><parameter type='android.widget.EditText' name='editText'/></method><method name='setText'><parameter type='java.lang.String' name='text'/></method></class><class extends='android.preference.DialogPreference' name='ListPreference'><constructor type='android.preference.ListPreference' name='ListPreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.ListPreference' name='ListPreference'><parameter type='android.content.Context' name='context'/></constructor><method return='int' name='findIndexOfValue'><parameter type='java.lang.String' name='value'/></method><method return='java.lang.CharSequence[]' name='getEntries'/><method return='java.lang.CharSequence' name='getEntry'/><method return='java.lang.CharSequence[]' name='getEntryValues'/><method return='java.lang.String' name='getValue'/><method name='setEntries'><parameter type='java.lang.CharSequence[]' name='entries'/></method><method name='setEntries'><parameter type='int' name='entriesResId'/></method><method name='setEntryValues'><parameter type='java.lang.CharSequence[]' name='entryValues'/></method><method name='setEntryValues'><parameter type='int' name='entryValuesResId'/></method><method name='setValue'><parameter type='java.lang.String' name='value'/></method><method name='setValueIndex'><parameter type='int' name='index'/></method></class><class extends='java.lang.Object' name='Preference'><constructor type='android.preference.Preference' name='Preference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.Preference' name='Preference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.Preference' name='Preference'><parameter type='android.content.Context' name='context'/></constructor><method visibility='protected' return='boolean' name='callChangeListener'><parameter type='java.lang.Object' name='newValue'/></method><method return='int' name='compareTo'><parameter type='android.preference.Preference' name='another'/></method><method visibility='protected' return='android.preference.Preference' name='findPreferenceInHierarchy'><parameter type='java.lang.String' name='key'/></method><method return='android.content.Context' name='getContext'/><method return='java.lang.String' name='getDependency'/><method return='android.content.SharedPreferences.Editor' name='getEditor'/><method return='android.content.Intent' name='getIntent'/><method return='java.lang.String' name='getKey'/><method return='int' name='getLayoutResource'/><method return='android.preference.Preference.OnPreferenceChangeListener' name='getOnPreferenceChangeListener'/><method return='android.preference.Preference.OnPreferenceClickListener' name='getOnPreferenceClickListener'/><method return='int' name='getOrder'/><method visibility='protected' return='boolean' name='getPersistedBoolean'><parameter type='boolean' name='defaultReturnValue'/></method><method visibility='protected' return='float' name='getPersistedFloat'><parameter type='float' name='defaultReturnValue'/></method><method visibility='protected' return='int' name='getPersistedInt'><parameter type='int' name='defaultReturnValue'/></method><method visibility='protected' return='long' name='getPersistedLong'><parameter type='long' name='defaultReturnValue'/></method><method visibility='protected' return='java.lang.String' name='getPersistedString'><parameter type='java.lang.String' name='defaultReturnValue'/></method><method return='android.preference.PreferenceManager' name='getPreferenceManager'/><method return='android.content.SharedPreferences' name='getSharedPreferences'/><method return='boolean' name='getShouldDisableView'/><method return='java.lang.CharSequence' name='getSummary'/><method return='java.lang.CharSequence' name='getTitle'/><method return='android.view.View' name='getView'><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='getWidgetLayoutResource'/><method return='boolean' name='hasKey'/><method return='boolean' name='isEnabled'/><method return='boolean' name='isPersistent'/><method return='boolean' name='isSelectable'/><method visibility='protected' name='notifyChanged'/><method name='notifyDependencyChange'><parameter type='boolean' name='disableDependents'/></method><method visibility='protected' name='notifyHierarchyChanged'/><method visibility='protected' name='onAttachedToActivity'/><method visibility='protected' name='onAttachedToHierarchy'><parameter type='android.preference.PreferenceManager' name='preferenceManager'/></method><method visibility='protected' name='onBindView'><parameter type='android.view.View' name='view'/></method><method visibility='protected' name='onClick'/><method visibility='protected' return='android.view.View' name='onCreateView'><parameter type='android.view.ViewGroup' name='parent'/></method><method name='onDependencyChanged'><parameter type='android.preference.Preference' name='dependency'/><parameter type='boolean' name='disableDependent'/></method><method visibility='protected' return='java.lang.Object' name='onGetDefaultValue'><parameter type='android.content.res.TypedArray' name='a'/><parameter type='int' name='index'/></method><method visibility='protected' name='onPrepareForRemoval'/><method visibility='protected' name='onRestoreInstanceState'><parameter type='android.os.Parcelable' name='state'/></method><method visibility='protected' return='android.os.Parcelable' name='onSaveInstanceState'/><method visibility='protected' name='onSetInitialValue'><parameter type='boolean' name='restorePersistedValue'/><parameter type='java.lang.Object' name='defaultValue'/></method><method visibility='protected' return='boolean' name='persistBoolean'><parameter type='boolean' name='value'/></method><method visibility='protected' return='boolean' name='persistFloat'><parameter type='float' name='value'/></method><method visibility='protected' return='boolean' name='persistInt'><parameter type='int' name='value'/></method><method visibility='protected' return='boolean' name='persistLong'><parameter type='long' name='value'/></method><method visibility='protected' return='boolean' name='persistString'><parameter type='java.lang.String' name='value'/></method><method name='restoreHierarchyState'><parameter type='android.os.Bundle' name='container'/></method><method name='saveHierarchyState'><parameter type='android.os.Bundle' name='container'/></method><method name='setDefaultValue'><parameter type='java.lang.Object' name='defaultValue'/></method><method name='setDependency'><parameter type='java.lang.String' name='dependencyKey'/></method><method name='setEnabled'><parameter type='boolean' name='enabled'/></method><method name='setIntent'><parameter type='android.content.Intent' name='intent'/></method><method name='setKey'><parameter type='java.lang.String' name='key'/></method><method name='setLayoutResource'><parameter type='int' name='layoutResId'/></method><method name='setOnPreferenceChangeListener'><parameter type='android.preference.Preference.OnPreferenceChangeListener' name='onPreferenceChangeListener'/></method><method name='setOnPreferenceClickListener'><parameter type='android.preference.Preference.OnPreferenceClickListener' name='onPreferenceClickListener'/></method><method name='setOrder'><parameter type='int' name='order'/></method><method name='setPersistent'><parameter type='boolean' name='persistent'/></method><method name='setSelectable'><parameter type='boolean' name='selectable'/></method><method name='setShouldDisableView'><parameter type='boolean' name='shouldDisableView'/></method><method name='setSummary'><parameter type='java.lang.CharSequence' name='summary'/></method><method name='setSummary'><parameter type='int' name='summaryResId'/></method><method name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method name='setTitle'><parameter type='int' name='titleResId'/></method><method name='setWidgetLayoutResource'><parameter type='int' name='widgetLayoutResId'/></method><method return='boolean' name='shouldCommit'/><method return='boolean' name='shouldDisableDependents'/><method visibility='protected' return='boolean' name='shouldPersist'/><method return='android.os.Bundle' name='getExtras' api_added='11'/><method return='java.lang.String' name='getFragment' api_added='11'/><method return='android.graphics.drawable.Drawable' name='getIcon' api_added='11'/><method return='android.os.Bundle' name='peekExtras' api_added='11'/><method name='setFragment' api_added='11'><parameter type='java.lang.String' name='fragment'/></method><method name='setIcon' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method name='setIcon' api_added='11'><parameter type='int' name='iconResId'/></method><method return='int' name='getTitleRes' api_added='14'/></class><class extends='android.view.AbsSavedState' static='true' name='Preference.BaseSavedState'><constructor type='android.preference.Preference.BaseSavedState' name='Preference.BaseSavedState'><parameter type='android.os.Parcel' name='source'/></constructor><constructor type='android.preference.Preference.BaseSavedState' name='Preference.BaseSavedState'><parameter type='android.os.Parcelable' name='superState'/></constructor></class><class extends='android.app.ListActivity' abstract='true' name='PreferenceActivity'><constructor type='android.preference.PreferenceActivity' name='PreferenceActivity'/><method deprecated='11' name='addPreferencesFromIntent'><parameter type='android.content.Intent' name='intent'/></method><method deprecated='11' name='addPreferencesFromResource'><parameter type='int' name='preferencesResId'/></method><method deprecated='11' return='android.preference.Preference' name='findPreference'><parameter type='java.lang.CharSequence' name='key'/></method><method deprecated='11' return='android.preference.PreferenceManager' name='getPreferenceManager'/><method deprecated='11' return='android.preference.PreferenceScreen' name='getPreferenceScreen'/><method deprecated='11' return='boolean' name='onPreferenceTreeClick'><parameter type='android.preference.PreferenceScreen' name='preferenceScreen'/><parameter type='android.preference.Preference' name='preference'/></method><method deprecated='11' name='setPreferenceScreen'><parameter type='android.preference.PreferenceScreen' name='preferenceScreen'/></method><method name='finishPreferencePanel' api_added='11'><parameter type='android.app.Fragment' name='caller'/><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='resultData'/></method><method return='boolean' name='hasHeaders' api_added='11'/><method name='invalidateHeaders' api_added='11'/><method return='boolean' name='isMultiPane' api_added='11'/><method name='loadHeadersFromResource' api_added='11'><parameter type='int' name='resid'/><parameter type='java.util.List&lt;android.preference.PreferenceActivity.Header&gt;' name='target'/></method><method name='onBuildHeaders' api_added='11'><parameter type='java.util.List&lt;android.preference.PreferenceActivity.Header&gt;' name='target'/></method><method return='android.preference.PreferenceActivity.Header' name='onGetInitialHeader' api_added='11'/><method return='android.preference.PreferenceActivity.Header' name='onGetNewHeader' api_added='11'/><method name='onHeaderClick' api_added='11'><parameter type='android.preference.PreferenceActivity.Header' name='header'/><parameter type='int' name='position'/></method><method return='boolean' name='onIsHidingHeaders' api_added='11'/><method return='boolean' name='onIsMultiPane' api_added='11'/><method return='boolean' name='onPreferenceStartFragment' api_added='11'><parameter type='android.preference.PreferenceFragment' name='caller'/><parameter type='android.preference.Preference' name='pref'/></method><method name='setListFooter' api_added='11'><parameter type='android.view.View' name='view'/></method><method name='setParentTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='shortTitle'/><parameter type='android.view.View.OnClickListener' name='listener'/></method><method name='showBreadCrumbs' api_added='11'><parameter type='java.lang.CharSequence' name='title'/><parameter type='java.lang.CharSequence' name='shortTitle'/></method><method name='startPreferenceFragment' api_added='11'><parameter type='android.app.Fragment' name='fragment'/><parameter type='boolean' name='push'/></method><method name='startPreferencePanel' api_added='11'><parameter type='java.lang.String' name='fragmentClass'/><parameter type='android.os.Bundle' name='args'/><parameter type='int' name='titleRes'/><parameter type='java.lang.CharSequence' name='titleText'/><parameter type='android.app.Fragment' name='resultTo'/><parameter type='int' name='resultRequestCode'/></method><method name='startWithFragment' api_added='11'><parameter type='java.lang.String' name='fragmentName'/><parameter type='android.os.Bundle' name='args'/><parameter type='android.app.Fragment' name='resultTo'/><parameter type='int' name='resultRequestCode'/></method><method name='switchToHeader' api_added='11'><parameter type='java.lang.String' name='fragmentName'/><parameter type='android.os.Bundle' name='args'/></method><method name='switchToHeader' api_added='11'><parameter type='android.preference.PreferenceActivity.Header' name='header'/></method><method return='android.content.Intent' name='onBuildStartFragmentIntent' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method><method name='startWithFragment' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/><parameter type='android.app.Fragment' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='int' name='arg5'/></method></class><class extends='android.preference.PreferenceGroup' name='PreferenceCategory'><constructor type='android.preference.PreferenceCategory' name='PreferenceCategory'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.PreferenceCategory' name='PreferenceCategory'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.PreferenceCategory' name='PreferenceCategory'><parameter type='android.content.Context' name='context'/></constructor></class><class extends='android.preference.Preference' abstract='true' name='PreferenceGroup'><constructor type='android.preference.PreferenceGroup' name='PreferenceGroup'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.PreferenceGroup' name='PreferenceGroup'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='addItemFromInflater'><parameter type='android.preference.Preference' name='preference'/></method><method return='boolean' name='addPreference'><parameter type='android.preference.Preference' name='preference'/></method><method visibility='protected' name='dispatchRestoreInstanceState'><parameter type='android.os.Bundle' name='container'/></method><method visibility='protected' name='dispatchSaveInstanceState'><parameter type='android.os.Bundle' name='container'/></method><method return='android.preference.Preference' name='findPreference'><parameter type='java.lang.CharSequence' name='key'/></method><method return='android.preference.Preference' name='getPreference'><parameter type='int' name='index'/></method><method return='int' name='getPreferenceCount'/><method visibility='protected' return='boolean' name='isOnSameScreenAsChildren'/><method return='boolean' name='isOrderingAsAdded'/><method visibility='protected' return='boolean' name='onPrepareAddPreference'><parameter type='android.preference.Preference' name='preference'/></method><method name='removeAll'/><method return='boolean' name='removePreference'><parameter type='android.preference.Preference' name='preference'/></method><method name='setOrderingAsAdded'><parameter type='boolean' name='orderingAsAdded'/></method></class><class extends='java.lang.Object' name='PreferenceManager'><method return='android.preference.PreferenceScreen' name='createPreferenceScreen'><parameter type='android.content.Context' name='context'/></method><method return='android.preference.Preference' name='findPreference'><parameter type='java.lang.CharSequence' name='key'/></method><method return='android.content.SharedPreferences' static='true' name='getDefaultSharedPreferences'><parameter type='android.content.Context' name='context'/></method><method return='android.content.SharedPreferences' name='getSharedPreferences'/><method return='int' name='getSharedPreferencesMode'/><method return='java.lang.String' name='getSharedPreferencesName'/><method static='true' name='setDefaultValues'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resId'/><parameter type='boolean' name='readAgain'/></method><method static='true' name='setDefaultValues'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='sharedPreferencesName'/><parameter type='int' name='sharedPreferencesMode'/><parameter type='int' name='resId'/><parameter type='boolean' name='readAgain'/></method><method name='setSharedPreferencesMode'><parameter type='int' name='sharedPreferencesMode'/></method><method name='setSharedPreferencesName'><parameter type='java.lang.String' name='sharedPreferencesName'/></method></class><class extends='android.preference.PreferenceGroup' name='PreferenceScreen' final='true'><method name='bind'><parameter type='android.widget.ListView' name='listView'/></method><method return='android.app.Dialog' name='getDialog'/><method return='android.widget.ListAdapter' name='getRootAdapter'/><method visibility='protected' return='android.widget.ListAdapter' name='onCreateRootAdapter'/><method name='onDismiss'><parameter type='android.content.DialogInterface' name='dialog'/></method><method name='onItemClick'><parameter type='android.widget.AdapterView' name='parent'/><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method></class><class extends='android.preference.Preference' name='RingtonePreference'><constructor type='android.preference.RingtonePreference' name='RingtonePreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.preference.RingtonePreference' name='RingtonePreference'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.RingtonePreference' name='RingtonePreference'><parameter type='android.content.Context' name='context'/></constructor><method return='int' name='getRingtoneType'/><method return='boolean' name='getShowDefault'/><method return='boolean' name='getShowSilent'/><method return='boolean' name='onActivityResult'><parameter type='int' name='requestCode'/><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='data'/></method><method visibility='protected' name='onPrepareRingtonePickerIntent'><parameter type='android.content.Intent' name='ringtonePickerIntent'/></method><method visibility='protected' return='android.net.Uri' name='onRestoreRingtone'/><method visibility='protected' name='onSaveRingtone'><parameter type='android.net.Uri' name='ringtoneUri'/></method><method name='setRingtoneType'><parameter type='int' name='type'/></method><method name='setShowDefault'><parameter type='boolean' name='showDefault'/></method><method name='setShowSilent'><parameter type='boolean' name='showSilent'/></method></class><class extends='android.preference.DialogPreference' name='MultiSelectListPreference' api_added='11'><constructor type='android.preference.MultiSelectListPreference' name='MultiSelectListPreference' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.preference.MultiSelectListPreference' name='MultiSelectListPreference' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><method return='int' name='findIndexOfValue' api_added='11'><parameter type='java.lang.String' name='value'/></method><method return='java.lang.CharSequence[]' name='getEntries' api_added='11'/><method return='java.lang.CharSequence[]' name='getEntryValues' api_added='11'/><method return='java.util.Set&lt;java.lang.String&gt;' name='getValues' api_added='11'/><method name='setEntries' api_added='11'><parameter type='java.lang.CharSequence[]' name='entries'/></method><method name='setEntries' api_added='11'><parameter type='int' name='entriesResId'/></method><method name='setEntryValues' api_added='11'><parameter type='java.lang.CharSequence[]' name='entryValues'/></method><method name='setEntryValues' api_added='11'><parameter type='int' name='entryValuesResId'/></method><method name='setValues' api_added='11'><parameter type='java.util.Set&lt;java.lang.String&gt;' name='values'/></method></class><class extends='java.lang.Object' static='true' name='PreferenceActivity.Header' api_added='11' final='true'><constructor type='android.preference.PreferenceActivity.Header' name='PreferenceActivity.Header' api_added='11'/><method return='int' name='describeContents' api_added='11'/><method return='java.lang.CharSequence' name='getBreadCrumbShortTitle' api_added='11'><parameter type='android.content.res.Resources' name='res'/></method><method return='java.lang.CharSequence' name='getBreadCrumbTitle' api_added='11'><parameter type='android.content.res.Resources' name='res'/></method><method return='java.lang.CharSequence' name='getSummary' api_added='11'><parameter type='android.content.res.Resources' name='res'/></method><method return='java.lang.CharSequence' name='getTitle' api_added='11'><parameter type='android.content.res.Resources' name='res'/></method><method name='readFromParcel' api_added='11'><parameter type='android.os.Parcel' name='in'/></method><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.app.Fragment' abstract='true' name='PreferenceFragment' api_added='11'><constructor type='android.preference.PreferenceFragment' name='PreferenceFragment' api_added='11'/><method name='addPreferencesFromIntent' api_added='11'><parameter type='android.content.Intent' name='intent'/></method><method name='addPreferencesFromResource' api_added='11'><parameter type='int' name='preferencesResId'/></method><method return='android.preference.Preference' name='findPreference' api_added='11'><parameter type='java.lang.CharSequence' name='key'/></method><method return='android.preference.PreferenceManager' name='getPreferenceManager' api_added='11'/><method return='android.preference.PreferenceScreen' name='getPreferenceScreen' api_added='11'/><method return='boolean' name='onPreferenceTreeClick' api_added='11'><parameter type='android.preference.PreferenceScreen' name='preferenceScreen'/><parameter type='android.preference.Preference' name='preference'/></method><method name='setPreferenceScreen' api_added='11'><parameter type='android.preference.PreferenceScreen' name='preferenceScreen'/></method></class><class extends='android.preference.TwoStatePreference' name='SwitchPreference' api_added='14'><constructor type='android.preference.SwitchPreference' name='SwitchPreference' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.preference.SwitchPreference' name='SwitchPreference' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.preference.SwitchPreference' name='SwitchPreference' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='java.lang.CharSequence' name='getSwitchTextOff' api_added='14'/><method return='java.lang.CharSequence' name='getSwitchTextOn' api_added='14'/><method name='setSwitchTextOff' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setSwitchTextOff' api_added='14'><parameter type='int' name='arg0'/></method><method name='setSwitchTextOn' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setSwitchTextOn' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.preference.Preference' abstract='true' name='TwoStatePreference' api_added='14'><constructor type='android.preference.TwoStatePreference' name='TwoStatePreference' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.preference.TwoStatePreference' name='TwoStatePreference' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.preference.TwoStatePreference' name='TwoStatePreference' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='boolean' name='getDisableDependentsState' api_added='14'/><method return='java.lang.CharSequence' name='getSummaryOff' api_added='14'/><method return='java.lang.CharSequence' name='getSummaryOn' api_added='14'/><method return='boolean' name='isChecked' api_added='14'/><method name='setChecked' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setDisableDependentsState' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setSummaryOff' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setSummaryOff' api_added='14'><parameter type='int' name='arg0'/></method><method name='setSummaryOn' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setSummaryOn' api_added='14'><parameter type='int' name='arg0'/></method></class><interface abstract='true' static='true' name='Preference.OnPreferenceChangeListener'><method return='boolean' abstract='true' name='onPreferenceChange'><parameter type='android.preference.Preference' name='preference'/><parameter type='java.lang.Object' name='newValue'/></method></interface><interface abstract='true' static='true' name='Preference.OnPreferenceClickListener'><method return='boolean' abstract='true' name='onPreferenceClick'><parameter type='android.preference.Preference' name='preference'/></method></interface><interface abstract='true' static='true' name='PreferenceManager.OnActivityDestroyListener'><method abstract='true' name='onActivityDestroy'/></interface><interface abstract='true' static='true' name='PreferenceManager.OnActivityResultListener'><method return='boolean' abstract='true' name='onActivityResult'><parameter type='int' name='requestCode'/><parameter type='int' name='resultCode'/><parameter type='android.content.Intent' name='data'/></method></interface><interface abstract='true' static='true' name='PreferenceManager.OnActivityStopListener'><method abstract='true' name='onActivityStop'/></interface><interface abstract='true' static='true' name='PreferenceFragment.OnPreferenceStartFragmentCallback' api_added='11'><method return='boolean' abstract='true' name='onPreferenceStartFragment' api_added='11'><parameter type='android.preference.PreferenceFragment' name='caller'/><parameter type='android.preference.Preference' name='pref'/></method></interface></package><package name='android.provider'><class extends='java.lang.Object' name='Browser'><constructor type='android.provider.Browser' name='Browser'/><method static='true' name='addSearchUrl' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='search'/></method><method return='boolean' static='true' name='canClearHistory' final='true'><parameter type='android.content.ContentResolver' name='cr'/></method><method static='true' name='clearHistory' final='true'><parameter type='android.content.ContentResolver' name='cr'/></method><method static='true' name='clearSearches' final='true'><parameter type='android.content.ContentResolver' name='cr'/></method><method static='true' name='deleteFromHistory' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='url'/></method><method static='true' name='deleteHistoryTimeFrame' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='begin'/><parameter type='long' name='end'/></method><method return='android.database.Cursor' static='true' name='getAllBookmarks' final='true'><parameter type='android.content.ContentResolver' name='cr'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='android.database.Cursor' static='true' name='getAllVisitedUrls' final='true'><parameter type='android.content.ContentResolver' name='cr'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method static='true' name='requestAllIcons' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='where'/><parameter type='android.webkit.WebIconDatabase.IconListener' name='listener'/></method><method static='true' name='saveBookmark' final='true'><parameter type='android.content.Context' name='c'/><parameter type='java.lang.String' name='title'/><parameter type='java.lang.String' name='url'/></method><method static='true' name='sendString' final='true'><parameter type='android.content.Context' name='c'/><parameter type='java.lang.String' name='s'/></method><method static='true' name='truncateHistory' final='true'><parameter type='android.content.ContentResolver' name='cr'/></method><method static='true' name='updateVisitedHistory' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='url'/><parameter type='boolean' name='real'/></method></class><class extends='java.lang.Object' static='true' name='Browser.BookmarkColumns'><constructor type='android.provider.Browser.BookmarkColumns' name='Browser.BookmarkColumns'/></class><class extends='java.lang.Object' static='true' name='Browser.SearchColumns'><constructor type='android.provider.Browser.SearchColumns' name='Browser.SearchColumns'/></class><class extends='java.lang.Object' name='CallLog'><constructor type='android.provider.CallLog' name='CallLog'/></class><class extends='java.lang.Object' static='true' name='CallLog.Calls'><constructor type='android.provider.CallLog.Calls' name='CallLog.Calls'/><method return='java.lang.String' static='true' name='getLastOutgoingCall' api_added='8'><parameter type='android.content.Context' name='context'/></method></class><class extends='java.lang.Object' deprecated='5' name='Contacts'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.ContactMethods' final='true'><method deprecated='5' name='addPostalLocation'><parameter type='android.content.Context' name='context'/><parameter type='long' name='postalId'/><parameter type='double' name='latitude'/><parameter type='double' name='longitude'/></method><method deprecated='5' return='java.lang.Object' static='true' name='decodeImProtocol'><parameter type='java.lang.String' name='encodedString'/></method><method deprecated='5' return='java.lang.String' static='true' name='encodeCustomImProtocol'><parameter type='java.lang.String' name='protocolString'/></method><method deprecated='5' return='java.lang.String' static='true' name='encodePredefinedImProtocol'><parameter type='int' name='protocol'/></method><method deprecated='5' return='java.lang.CharSequence' static='true' name='getDisplayLabel' final='true'><parameter type='android.content.Context' name='context'/><parameter type='int' name='kind'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Extensions' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.GroupMembership' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Groups' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Intents' final='true'><constructor deprecated='5' api_removed='14' type='android.provider.Contacts.Intents' name='Contacts.Intents'/><constructor type='android.provider.deprecated Contacts.Intents' name='deprecated Contacts.Intents' api_added='14'/></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Intents.Insert' final='true'><constructor deprecated='5' api_removed='14' type='android.provider.Contacts.Intents.Insert' name='Contacts.Intents.Insert'/><constructor type='android.provider.deprecated Contacts.Intents.Insert' name='deprecated Contacts.Intents.Insert' api_added='14'/></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Intents.UI' final='true'><constructor deprecated='5' api_removed='14' type='android.provider.Contacts.Intents.UI' name='Contacts.Intents.UI'/><constructor type='android.provider.deprecated Contacts.Intents.UI' name='deprecated Contacts.Intents.UI' api_added='14'/></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Organizations' final='true'><method deprecated='5' return='java.lang.CharSequence' static='true' name='getDisplayLabel' final='true'><parameter type='android.content.Context' name='context'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.People' final='true'><method deprecated='5' return='android.net.Uri' static='true' name='addToGroup'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='personId'/><parameter type='java.lang.String' name='groupName'/></method><method deprecated='5' return='android.net.Uri' static='true' name='addToGroup'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='personId'/><parameter type='long' name='groupId'/></method><method deprecated='5' return='android.net.Uri' static='true' name='addToMyContactsGroup'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='personId'/></method><method deprecated='5' return='android.net.Uri' static='true' name='createPersonInMyContactsGroup'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.content.ContentValues' name='values'/></method><method deprecated='5' return='android.graphics.Bitmap' static='true' name='loadContactPhoto'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='person'/><parameter type='int' name='placeholderImageResource'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method><method deprecated='5' static='true' name='markAsContacted'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='personId'/></method><method deprecated='5' return='java.io.InputStream' static='true' name='openContactPhotoInputStream'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='person'/></method><method deprecated='5' return='android.database.Cursor' static='true' name='queryGroups'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='person'/></method><method deprecated='5' static='true' name='setPhotoData'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='person'/><parameter type='byte[]' name='data'/></method></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.People.ContactMethods' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.People.Extensions'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.People.Phones' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Phones' final='true'><method deprecated='5' return='java.lang.CharSequence' static='true' name='getDisplayLabel' final='true'><parameter type='android.content.Context' name='context'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/><parameter type='java.lang.CharSequence[]' name='labelArray'/></method><method deprecated='5' return='java.lang.CharSequence' static='true' name='getDisplayLabel' final='true'><parameter type='android.content.Context' name='context'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method></class><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Photos' final='true'/><class extends='java.lang.Object' deprecated='5' static='true' name='Contacts.Settings' final='true'><method deprecated='5' return='java.lang.String' static='true' name='getSetting'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='account'/><parameter type='java.lang.String' name='key'/></method><method deprecated='5' static='true' name='setSetting'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='account'/><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='MediaStore' final='true'><constructor type='android.provider.MediaStore' name='MediaStore'/><method return='android.net.Uri' static='true' name='getMediaScannerUri'/><method return='java.lang.String' static='true' name='getVersion' api_added='12'><parameter type='android.content.Context' name='context'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio' final='true'><constructor type='android.provider.MediaStore.Audio' name='MediaStore.Audio'/><method return='java.lang.String' static='true' name='keyFor'><parameter type='java.lang.String' name='name'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Albums' final='true'><constructor type='android.provider.MediaStore.Audio.Albums' name='MediaStore.Audio.Albums'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Artists' final='true'><constructor type='android.provider.MediaStore.Audio.Artists' name='MediaStore.Audio.Artists'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Artists.Albums' final='true'><constructor type='android.provider.MediaStore.Audio.Artists.Albums' name='MediaStore.Audio.Artists.Albums'/><method return='android.net.Uri' static='true' name='getContentUri' final='true'><parameter type='java.lang.String' name='volumeName'/><parameter type='long' name='artistId'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Genres' final='true'><constructor type='android.provider.MediaStore.Audio.Genres' name='MediaStore.Audio.Genres'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method><method return='android.net.Uri' static='true' name='getContentUriForAudioId' api_added='11'><parameter type='java.lang.String' name='volumeName'/><parameter type='int' name='audioId'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Genres.Members' final='true'><constructor type='android.provider.MediaStore.Audio.Genres.Members' name='MediaStore.Audio.Genres.Members'/><method return='android.net.Uri' static='true' name='getContentUri' final='true'><parameter type='java.lang.String' name='volumeName'/><parameter type='long' name='genreId'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Media' final='true'><constructor type='android.provider.MediaStore.Audio.Media' name='MediaStore.Audio.Media'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method><method return='android.net.Uri' static='true' name='getContentUriForPath'><parameter type='java.lang.String' name='path'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Playlists' final='true'><constructor type='android.provider.MediaStore.Audio.Playlists' name='MediaStore.Audio.Playlists'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Audio.Playlists.Members' final='true'><constructor type='android.provider.MediaStore.Audio.Playlists.Members' name='MediaStore.Audio.Playlists.Members'/><method return='android.net.Uri' static='true' name='getContentUri' final='true'><parameter type='java.lang.String' name='volumeName'/><parameter type='long' name='playlistId'/></method><method return='boolean' static='true' name='moveItem' api_added='8' final='true'><parameter type='android.content.ContentResolver' name='res'/><parameter type='long' name='playlistId'/><parameter type='int' name='from'/><parameter type='int' name='to'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Images' final='true'><constructor type='android.provider.MediaStore.Images' name='MediaStore.Images'/></class><class extends='java.lang.Object' static='true' name='MediaStore.Images.Media' final='true'><constructor type='android.provider.MediaStore.Images.Media' name='MediaStore.Images.Media'/><method return='android.graphics.Bitmap' static='true' name='getBitmap' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='url'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method><method return='java.lang.String' static='true' name='insertImage' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='imagePath'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='description'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.lang.String' static='true' name='insertImage' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.graphics.Bitmap' name='source'/><parameter type='java.lang.String' name='title'/><parameter type='java.lang.String' name='description'/></method><method return='android.database.Cursor' static='true' name='query' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/></method><method return='android.database.Cursor' static='true' name='query' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='where'/><parameter type='java.lang.String' name='orderBy'/></method><method return='android.database.Cursor' static='true' name='query' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='orderBy'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Images.Thumbnails'><constructor type='android.provider.MediaStore.Images.Thumbnails' name='MediaStore.Images.Thumbnails'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method><method return='android.database.Cursor' static='true' name='query' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/></method><method return='android.database.Cursor' static='true' name='queryMiniThumbnail' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='int' name='kind'/><parameter type='java.lang.String[]' name='projection'/></method><method return='android.database.Cursor' static='true' name='queryMiniThumbnails' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='kind'/><parameter type='java.lang.String[]' name='projection'/></method><method static='true' name='cancelThumbnailRequest' api_added='5'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/></method><method return='android.graphics.Bitmap' static='true' name='getThumbnail' api_added='5'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='int' name='kind'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method><method static='true' name='cancelThumbnailRequest' api_added='8'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='long' name='groupId'/></method><method return='android.graphics.Bitmap' static='true' name='getThumbnail' api_added='8'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='long' name='groupId'/><parameter type='int' name='kind'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Video' final='true'><constructor type='android.provider.MediaStore.Video' name='MediaStore.Video'/><method return='android.database.Cursor' static='true' name='query' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Video.Media' final='true'><constructor type='android.provider.MediaStore.Video.Media' name='MediaStore.Video.Media'/><method return='android.net.Uri' static='true' name='getContentUri'><parameter type='java.lang.String' name='volumeName'/></method></class><class extends='java.lang.Object' name='SearchRecentSuggestions'><constructor type='android.provider.SearchRecentSuggestions' name='SearchRecentSuggestions'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='authority'/><parameter type='int' name='mode'/></constructor><method name='clearHistory'/><method name='saveRecentQuery'><parameter type='java.lang.String' name='queryString'/><parameter type='java.lang.String' name='line2'/></method><method visibility='protected' name='truncateHistory'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='int' name='maxEntries'/></method></class><class extends='java.lang.Object' name='Settings' final='true'><constructor type='android.provider.Settings' name='Settings'/></class><class extends='java.lang.Object' static='true' name='Settings.NameValueTable'><constructor type='android.provider.Settings.NameValueTable' name='Settings.NameValueTable'/><method return='android.net.Uri' static='true' name='getUriFor'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='name'/></method><method visibility='protected' return='boolean' static='true' name='putString'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method></class><class extends='android.util.AndroidException' static='true' name='Settings.SettingNotFoundException'><constructor type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='android.provider.Settings.NameValueTable' static='true' name='Settings.System' final='true'><constructor type='android.provider.Settings.System' name='Settings.System'/><method static='true' name='getConfiguration'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.content.res.Configuration' name='outConfig'/></method><method return='float' static='true' name='getFloat'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='float' name='def'/></method><method return='float' static='true' name='getFloat'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='int' static='true' name='getInt'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='def'/></method><method return='int' static='true' name='getInt'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='boolean' static='true' name='getShowGTalkServiceStatus'><parameter type='android.content.ContentResolver' name='cr'/></method><method return='java.lang.String' static='true' synchronized='true' name='getString'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='java.lang.String' name='name'/></method><method return='android.net.Uri' static='true' name='getUriFor'><parameter type='java.lang.String' name='name'/></method><method return='boolean' static='true' name='putConfiguration'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.content.res.Configuration' name='config'/></method><method return='boolean' static='true' name='putFloat'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='float' name='value'/></method><method return='boolean' static='true' name='putInt'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method return='boolean' static='true' name='putString'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method static='true' name='setShowGTalkServiceStatus'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='boolean' name='flag'/></method><method return='long' static='true' name='getLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='long' name='def'/></method><method return='long' static='true' name='getLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='boolean' static='true' name='putLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method></class><class extends='java.lang.Object' deprecated='14' name='LiveFolders' api_added='3' final='true'/><class extends='android.provider.Settings.NameValueTable' static='true' name='Settings.Secure' api_added='3' final='true'><constructor type='android.provider.Settings.Secure' name='Settings.Secure' api_added='3'/><method return='float' static='true' name='getFloat' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='float' name='def'/></method><method return='float' static='true' name='getFloat' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='int' static='true' name='getInt' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='def'/></method><method return='int' static='true' name='getInt' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='long' static='true' name='getLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='long' name='def'/></method><method return='long' static='true' name='getLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><exception type='android.provider.Settings.SettingNotFoundException' name='Settings.SettingNotFoundException'/></method><method return='java.lang.String' static='true' synchronized='true' name='getString' api_added='3'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='java.lang.String' name='name'/></method><method return='android.net.Uri' static='true' name='getUriFor' api_added='3'><parameter type='java.lang.String' name='name'/></method><method return='boolean' static='true' name='putFloat' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='float' name='value'/></method><method return='boolean' static='true' name='putInt' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method return='boolean' static='true' name='putLong' api_added='3'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method><method return='boolean' static='true' name='putString' api_added='3'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method return='boolean' static='true' name='isLocationProviderEnabled' api_added='8' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='provider'/></method><method static='true' name='setLocationProviderEnabled' api_added='8' final='true'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='java.lang.String' name='provider'/><parameter type='boolean' name='enabled'/></method></class><class extends='java.lang.Object' name='UserDictionary' api_added='3'><constructor type='android.provider.UserDictionary' name='UserDictionary' api_added='3'/></class><class extends='java.lang.Object' static='true' name='UserDictionary.Words' api_added='3'><constructor type='android.provider.UserDictionary.Words' name='UserDictionary.Words' api_added='3'/><method deprecated='16' static='true' name='addWord' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='word'/><parameter type='int' name='frequency'/><parameter type='int' name='localeType'/></method><method static='true' name='addWord' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='int' name='arg2'/><parameter type='java.lang.String' name='arg3'/><parameter type='java.util.Locale' name='arg4'/></method></class><class extends='java.lang.Object' name='ContactsContract' api_added='5' final='true'><constructor type='android.provider.ContactsContract' name='ContactsContract' api_added='5'/><method return='boolean' static='true' name='isProfileId' api_added='14'><parameter type='long' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.AggregationExceptions' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Email' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Event' api_added='5' final='true'><method return='int' static='true' name='getTypeResource' api_added='5'><parameter type='java.lang.Integer' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.GroupMembership' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Im' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getProtocolLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getProtocolLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Nickname' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Note' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Organization' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Phone' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Photo' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Relation' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='11' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='11' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.StructuredName' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.StructuredPostal' api_added='5' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='5' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='5' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Website' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts' api_added='5'><method return='android.net.Uri' static='true' name='getLookupUri' api_added='5'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.net.Uri' name='contactUri'/></method><method return='android.net.Uri' static='true' name='getLookupUri' api_added='5'><parameter type='long' name='contactId'/><parameter type='java.lang.String' name='lookupKey'/></method><method return='android.net.Uri' static='true' name='lookupContact' api_added='5'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.net.Uri' name='lookupUri'/></method><method deprecated='16' static='true' name='markAsContacted' api_added='5'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='long' name='contactId'/></method><method return='java.io.InputStream' static='true' name='openContactPhotoInputStream' api_added='5'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='contactUri'/></method><method return='java.io.InputStream' static='true' name='openContactPhotoInputStream' api_added='14'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='android.net.Uri' name='arg1'/><parameter type='boolean' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts.AggregationSuggestions' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts.Data' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts.Photo' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Data' api_added='5' final='true'><method return='android.net.Uri' static='true' name='getContactLookupUri' api_added='5'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.net.Uri' name='dataUri'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.Groups' api_added='5' final='true'><method return='android.content.EntityIterator' static='true' name='newEntityIterator' api_added='8'><parameter type='android.database.Cursor' name='cursor'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.Intents' api_added='5' final='true'><constructor type='android.provider.ContactsContract.Intents' name='ContactsContract.Intents' api_added='5'/></class><class extends='java.lang.Object' static='true' name='ContactsContract.Intents.Insert' api_added='5' final='true'><constructor type='android.provider.ContactsContract.Intents.Insert' name='ContactsContract.Intents.Insert' api_added='5'/></class><class extends='java.lang.Object' static='true' name='ContactsContract.PhoneLookup' api_added='5' final='true'/><class extends='android.provider.ContactsContract.StatusUpdates' deprecated='5' static='true' name='ContactsContract.Presence' api_added='5' final='true'><constructor type='android.provider.ContactsContract.Presence' name='ContactsContract.Presence' api_added='5'/></class><class extends='java.lang.Object' static='true' name='ContactsContract.QuickContact' api_added='5' final='true'><constructor type='android.provider.ContactsContract.QuickContact' name='ContactsContract.QuickContact' api_added='5'/><method static='true' name='showQuickContact' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='android.view.View' name='target'/><parameter type='android.net.Uri' name='lookupUri'/><parameter type='int' name='mode'/><parameter type='java.lang.String[]' name='excludeMimes'/></method><method static='true' name='showQuickContact' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='android.graphics.Rect' name='target'/><parameter type='android.net.Uri' name='lookupUri'/><parameter type='int' name='mode'/><parameter type='java.lang.String[]' name='excludeMimes'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.RawContacts' api_added='5' final='true'><method return='android.net.Uri' static='true' name='getContactLookupUri' api_added='5'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.net.Uri' name='rawContactUri'/></method><method return='android.content.EntityIterator' static='true' name='newEntityIterator' api_added='8'><parameter type='android.database.Cursor' name='cursor'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.RawContacts.Data' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.RawContacts.Entity' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.RawContactsEntity' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Settings' api_added='5' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.StatusUpdates' api_added='5'><method return='int' static='true' name='getPresenceIconResourceId' api_added='5' final='true'><parameter type='int' name='status'/></method><method return='int' static='true' name='getPresencePrecedence' api_added='5' final='true'><parameter type='int' name='status'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.SyncState' api_added='5' final='true'><method return='byte[]' static='true' name='get' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.accounts.Account' name='account'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.util.Pair&lt;android.net.Uri, byte[]&gt;' static='true' name='getWithUri' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.accounts.Account' name='account'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.content.ContentProviderOperation' static='true' name='newSetOperation' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='byte[]' name='data'/></method><method static='true' name='set' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.accounts.Account' name='account'/><parameter type='byte[]' name='data'/><exception type='android.os.RemoteException' name='RemoteException'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Video.Thumbnails' api_added='5'><constructor type='android.provider.MediaStore.Video.Thumbnails' name='MediaStore.Video.Thumbnails' api_added='5'/><method static='true' name='cancelThumbnailRequest' api_added='5'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/></method><method return='android.net.Uri' static='true' name='getContentUri' api_added='5'><parameter type='java.lang.String' name='volumeName'/></method><method return='android.graphics.Bitmap' static='true' name='getThumbnail' api_added='5'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='int' name='kind'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method><method static='true' name='cancelThumbnailRequest' api_added='8'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='long' name='groupId'/></method><method return='android.graphics.Bitmap' static='true' name='getThumbnail' api_added='8'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='long' name='origId'/><parameter type='long' name='groupId'/><parameter type='int' name='kind'/><parameter type='android.graphics.BitmapFactory.Options' name='options'/></method></class><class extends='java.lang.Object' name='SyncStateContract' api_added='5'><constructor type='android.provider.SyncStateContract' name='SyncStateContract' api_added='5'/></class><class extends='java.lang.Object' static='true' name='SyncStateContract.Constants' api_added='5'><constructor type='android.provider.SyncStateContract.Constants' name='SyncStateContract.Constants' api_added='5'/></class><class extends='java.lang.Object' static='true' name='SyncStateContract.Helpers' api_added='5' final='true'><constructor type='android.provider.SyncStateContract.Helpers' name='SyncStateContract.Helpers' api_added='5'/><method return='byte[]' static='true' name='get' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.accounts.Account' name='account'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.util.Pair&lt;android.net.Uri, byte[]&gt;' static='true' name='getWithUri' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.accounts.Account' name='account'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.net.Uri' static='true' name='insert' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.accounts.Account' name='account'/><parameter type='byte[]' name='data'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method return='android.content.ContentProviderOperation' static='true' name='newSetOperation' api_added='5'><parameter type='android.net.Uri' name='uri'/><parameter type='android.accounts.Account' name='account'/><parameter type='byte[]' name='data'/></method><method return='android.content.ContentProviderOperation' static='true' name='newUpdateOperation' api_added='5'><parameter type='android.net.Uri' name='uri'/><parameter type='byte[]' name='data'/></method><method static='true' name='set' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.net.Uri' name='uri'/><parameter type='android.accounts.Account' name='account'/><parameter type='byte[]' name='data'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method static='true' name='update' api_added='5'><parameter type='android.content.ContentProviderClient' name='provider'/><parameter type='android.net.Uri' name='uri'/><parameter type='byte[]' name='data'/><exception type='android.os.RemoteException' name='RemoteException'/></method></class><class extends='java.lang.Object' name='AlarmClock' api_added='9' final='true'><constructor type='android.provider.AlarmClock' name='AlarmClock' api_added='9'/></class><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.SipAddress' api_added='9' final='true'><method return='java.lang.CharSequence' static='true' name='getTypeLabel' api_added='9' final='true'><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='type'/><parameter type='java.lang.CharSequence' name='label'/></method><method return='int' static='true' name='getTypeLabelResource' api_added='9' final='true'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts.Entity' api_added='11' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Directory' api_added='11' final='true'><method static='true' name='notifyDirectoryChange' api_added='11'><parameter type='android.content.ContentResolver' name='resolver'/></method></class><class extends='java.lang.Object' static='true' name='MediaStore.Files' api_added='11' final='true'><constructor type='android.provider.MediaStore.Files' name='MediaStore.Files' api_added='11'/><method return='android.net.Uri' static='true' name='getContentUri' api_added='11'><parameter type='java.lang.String' name='volumeName'/></method><method return='android.net.Uri' static='true' name='getContentUri' api_added='11' final='true'><parameter type='java.lang.String' name='volumeName'/><parameter type='long' name='rowId'/></method></class><class extends='java.lang.Object' name='CalendarContract' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.Attendees' api_added='14' final='true'><method return='android.database.Cursor' static='true' name='query' api_added='14' final='true'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='long' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.CalendarAlerts' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.CalendarCache' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.CalendarEntity' api_added='14' final='true'><method return='android.content.EntityIterator' static='true' name='newEntityIterator' api_added='14'><parameter type='android.database.Cursor' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.Calendars' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.EventDays' api_added='14' final='true'><method return='android.database.Cursor' static='true' name='query' api_added='14' final='true'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.Events' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.EventsEntity' api_added='14' final='true'><method return='android.content.EntityIterator' static='true' name='newEntityIterator' api_added='14'><parameter type='android.database.Cursor' name='arg0'/><parameter type='android.content.ContentResolver' name='arg1'/></method><method return='android.content.EntityIterator' static='true' name='newEntityIterator' api_added='14'><parameter type='android.database.Cursor' name='arg0'/><parameter type='android.content.ContentProviderClient' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.ExtendedProperties' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='CalendarContract.Instances' api_added='14' final='true'><method return='android.database.Cursor' static='true' name='query' api_added='14' final='true'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='long' name='arg2'/><parameter type='long' name='arg3'/></method><method return='android.database.Cursor' static='true' name='query' api_added='14' final='true'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='long' name='arg2'/><parameter type='long' name='arg3'/><parameter type='java.lang.String' name='arg4'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.Reminders' api_added='14' final='true'><method return='android.database.Cursor' static='true' name='query' api_added='14' final='true'><parameter type='android.content.ContentResolver' name='arg0'/><parameter type='long' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.SyncState' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.CommonDataKinds.Identity' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.DataUsageFeedback' api_added='14' final='true'><constructor type='android.provider.ContactsContract.DataUsageFeedback' name='ContactsContract.DataUsageFeedback' api_added='14'/></class><class extends='java.lang.Object' static='true' name='ContactsContract.DisplayPhoto' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Profile' api_added='14' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.ProfileSyncState' api_added='14' final='true'><method return='byte[]' static='true' name='get' api_added='14'><parameter type='android.content.ContentProviderClient' name='arg0'/><parameter type='android.accounts.Account' name='arg1'/></method><method return='android.util.Pair&lt;android.net.Uri, byte[]&gt;' static='true' name='getWithUri' api_added='14'><parameter type='android.content.ContentProviderClient' name='arg0'/><parameter type='android.accounts.Account' name='arg1'/></method><method return='android.content.ContentProviderOperation' static='true' name='newSetOperation' api_added='14'><parameter type='android.accounts.Account' name='arg0'/><parameter type='byte[]' name='arg1'/></method><method static='true' name='set' api_added='14'><parameter type='android.content.ContentProviderClient' name='arg0'/><parameter type='android.accounts.Account' name='arg1'/><parameter type='byte[]' name='arg2'/></method></class><class extends='java.lang.Object' static='true' name='ContactsContract.RawContacts.DisplayPhoto' api_added='14' final='true'/><class extends='java.lang.Object' name='VoicemailContract' api_added='14'/><class extends='java.lang.Object' static='true' name='VoicemailContract.Status' api_added='14' final='true'><method return='android.net.Uri' static='true' name='buildSourceUri' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='VoicemailContract.Voicemails' api_added='14' final='true'><method return='android.net.Uri' static='true' name='buildSourceUri' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='CalendarContract.Colors' api_added='15' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.Contacts.StreamItems' api_added='15' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.RawContacts.StreamItems' api_added='15' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.StreamItemPhotos' api_added='15' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.StreamItems' api_added='15' final='true'/><class extends='java.lang.Object' static='true' name='ContactsContract.StreamItems.StreamItemPhotos' api_added='15' final='true'/><interface abstract='true' name='BaseColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.ContactMethodsColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.ExtensionsColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.GroupsColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.OrganizationColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.PeopleColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.PhonesColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.PhotosColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.PresenceColumns'/><interface deprecated='5' abstract='true' static='true' name='Contacts.SettingsColumns'/><interface abstract='true' static='true' name='MediaStore.Audio.AlbumColumns'/><interface abstract='true' static='true' name='MediaStore.Audio.ArtistColumns'/><interface abstract='true' static='true' name='MediaStore.Audio.AudioColumns'/><interface abstract='true' static='true' name='MediaStore.Audio.GenresColumns'/><interface abstract='true' static='true' name='MediaStore.Audio.PlaylistsColumns'/><interface abstract='true' static='true' name='MediaStore.Images.ImageColumns'/><interface abstract='true' static='true' name='MediaStore.MediaColumns'/><interface abstract='true' static='true' name='MediaStore.Video.VideoColumns'/><interface abstract='true' name='OpenableColumns'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.BaseSyncColumns' api_added='5'/><interface abstract='true' static='true' name='ContactsContract.CommonDataKinds.BaseTypes' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.CommonDataKinds.CommonColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.ContactOptionsColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.ContactStatusColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.ContactsColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.DataColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.DataColumnsWithJoins' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.GroupsColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.PhoneLookupColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.PresenceColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.RawContactsColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.SettingsColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.StatusColumns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.SyncColumns' api_added='5'/><interface abstract='true' static='true' name='SyncStateContract.Columns' api_added='5'/><interface visibility='protected' abstract='true' static='true' name='ContactsContract.ContactNameColumns' api_added='11'/><interface abstract='true' static='true' name='ContactsContract.DisplayNameSources' api_added='11'/><interface abstract='true' static='true' name='ContactsContract.FullNameStyle' api_added='11'/><interface abstract='true' static='true' name='ContactsContract.PhoneticNameStyle' api_added='11'/><interface abstract='true' static='true' name='MediaStore.Files.FileColumns' api_added='11'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.AttendeesColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.CalendarAlertsColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.CalendarCacheColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.CalendarColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.CalendarSyncColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.EventDaysColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.EventsColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.ExtendedPropertiesColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.RemindersColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.SyncColumns' api_added='14'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='CalendarContract.ColorsColumns' api_added='15'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='ContactsContract.StreamItemPhotosColumns' api_added='15'/><interface extends='java.lang.Object' visibility='protected' abstract='true' static='true' name='ContactsContract.StreamItemsColumns' api_added='15'/></package><package name='android.sax'><class extends='java.lang.Object' name='Element'><method return='android.sax.Element' name='getChild'><parameter type='java.lang.String' name='localName'/></method><method return='android.sax.Element' name='getChild'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='android.sax.Element' name='requireChild'><parameter type='java.lang.String' name='localName'/></method><method return='android.sax.Element' name='requireChild'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method name='setElementListener'><parameter type='android.sax.ElementListener' name='elementListener'/></method><method name='setEndElementListener'><parameter type='android.sax.EndElementListener' name='endElementListener'/></method><method name='setEndTextElementListener'><parameter type='android.sax.EndTextElementListener' name='endTextElementListener'/></method><method name='setStartElementListener'><parameter type='android.sax.StartElementListener' name='startElementListener'/></method><method name='setTextElementListener'><parameter type='android.sax.TextElementListener' name='elementListener'/></method></class><class extends='android.sax.Element' name='RootElement'><constructor type='android.sax.RootElement' name='RootElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></constructor><constructor type='android.sax.RootElement' name='RootElement'><parameter type='java.lang.String' name='localName'/></constructor><method return='org.xml.sax.ContentHandler' name='getContentHandler'/></class><interface abstract='true' name='ElementListener'/><interface abstract='true' name='EndElementListener'><method abstract='true' name='end'/></interface><interface abstract='true' name='EndTextElementListener'><method abstract='true' name='end'><parameter type='java.lang.String' name='body'/></method></interface><interface abstract='true' name='StartElementListener'><method abstract='true' name='start'><parameter type='org.xml.sax.Attributes' name='attributes'/></method></interface><interface abstract='true' name='TextElementListener'/></package><package name='android.telephony'><class extends='java.lang.Object' abstract='true' name='CellLocation'><constructor type='android.telephony.CellLocation' name='CellLocation'/><method return='android.telephony.CellLocation' static='true' name='getEmpty'/><method static='true' name='requestLocationUpdate'/></class><class extends='java.lang.Object' name='PhoneNumberFormattingTextWatcher'><constructor type='android.telephony.PhoneNumberFormattingTextWatcher' name='PhoneNumberFormattingTextWatcher'/><method synchronized='true' name='afterTextChanged'><parameter type='android.text.Editable' name='text'/></method><method name='beforeTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='after'/></method><method name='onTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='before'/><parameter type='int' name='count'/></method></class><class extends='java.lang.Object' name='PhoneNumberUtils'><constructor type='android.telephony.PhoneNumberUtils' name='PhoneNumberUtils'/><method return='java.lang.String' static='true' name='calledPartyBCDFragmentToString'><parameter type='byte[]' name='bytes'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='java.lang.String' static='true' name='calledPartyBCDToString'><parameter type='byte[]' name='bytes'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='boolean' static='true' name='compare'><parameter type='java.lang.String' name='a'/><parameter type='java.lang.String' name='b'/></method><method return='java.lang.String' static='true' name='convertKeypadLettersToDigits'><parameter type='java.lang.String' name='input'/></method><method return='java.lang.String' static='true' name='extractNetworkPortion'><parameter type='java.lang.String' name='phoneNumber'/></method><method return='java.lang.String' static='true' name='extractPostDialPortion'><parameter type='java.lang.String' name='phoneNumber'/></method><method static='true' name='formatNanpNumber'><parameter type='android.text.Editable' name='text'/></method><method return='java.lang.String' static='true' name='formatNumber'><parameter type='java.lang.String' name='source'/></method><method static='true' name='formatNumber'><parameter type='android.text.Editable' name='text'/><parameter type='int' name='defaultFormattingType'/></method><method return='int' static='true' name='getFormatTypeForLocale'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' static='true' name='getNumberFromIntent'><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.Context' name='context'/></method><method return='java.lang.String' static='true' name='getStrippedReversed'><parameter type='java.lang.String' name='phoneNumber'/></method><method return='boolean' static='true' name='is12Key' final='true'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isDialable' final='true'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isEmergencyNumber'><parameter type='java.lang.String' name='number'/></method><method return='boolean' static='true' name='isGlobalPhoneNumber'><parameter type='java.lang.String' name='phoneNumber'/></method><method return='boolean' static='true' name='isISODigit'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isNonSeparator' final='true'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isReallyDialable' final='true'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isStartsPostDial' final='true'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isWellFormedSmsAddress'><parameter type='java.lang.String' name='address'/></method><method return='byte[]' static='true' name='networkPortionToCalledPartyBCD'><parameter type='java.lang.String' name='s'/></method><method return='byte[]' static='true' name='networkPortionToCalledPartyBCDWithLength'><parameter type='java.lang.String' name='s'/></method><method return='byte[]' static='true' name='numberToCalledPartyBCD'><parameter type='java.lang.String' name='number'/></method><method return='java.lang.String' static='true' name='stringFromStringAndTOA'><parameter type='java.lang.String' name='s'/><parameter type='int' name='TOA'/></method><method return='java.lang.String' static='true' name='stripSeparators'><parameter type='java.lang.String' name='phoneNumber'/></method><method return='java.lang.String' static='true' name='toCallerIDMinMatch'><parameter type='java.lang.String' name='phoneNumber'/></method><method return='int' static='true' name='toaFromString'><parameter type='java.lang.String' name='s'/></method><method static='true' name='formatJapaneseNumber' api_added='3'><parameter type='android.text.Editable' name='text'/></method><method return='boolean' static='true' name='compare' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='a'/><parameter type='java.lang.String' name='b'/></method></class><class extends='java.lang.Object' name='PhoneStateListener'><constructor type='android.telephony.PhoneStateListener' name='PhoneStateListener'/><method name='onCallForwardingIndicatorChanged'><parameter type='boolean' name='cfi'/></method><method name='onCallStateChanged'><parameter type='int' name='state'/><parameter type='java.lang.String' name='incomingNumber'/></method><method name='onCellLocationChanged'><parameter type='android.telephony.CellLocation' name='location'/></method><method name='onDataActivity'><parameter type='int' name='direction'/></method><method name='onDataConnectionStateChanged'><parameter type='int' name='state'/></method><method name='onMessageWaitingIndicatorChanged'><parameter type='boolean' name='mwi'/></method><method name='onServiceStateChanged'><parameter type='android.telephony.ServiceState' name='serviceState'/></method><method deprecated='5' name='onSignalStrengthChanged'><parameter type='int' name='asu'/></method><method name='onDataConnectionStateChanged' api_added='7'><parameter type='int' name='state'/><parameter type='int' name='networkType'/></method><method name='onSignalStrengthsChanged' api_added='7'><parameter type='android.telephony.SignalStrength' name='signalStrength'/></method></class><class extends='java.lang.Object' name='ServiceState'><constructor type='android.telephony.ServiceState' name='ServiceState'/><constructor type='android.telephony.ServiceState' name='ServiceState'><parameter type='android.telephony.ServiceState' name='s'/></constructor><constructor type='android.telephony.ServiceState' name='ServiceState'><parameter type='android.os.Parcel' name='in'/></constructor><method visibility='protected' name='copyFrom'><parameter type='android.telephony.ServiceState' name='s'/></method><method return='int' name='describeContents'/><method return='boolean' name='getIsManualSelection'/><method return='java.lang.String' name='getOperatorAlphaLong'/><method return='java.lang.String' name='getOperatorAlphaShort'/><method return='java.lang.String' name='getOperatorNumeric'/><method return='boolean' name='getRoaming'/><method return='int' name='getState'/><method name='setIsManualSelection'><parameter type='boolean' name='isManual'/></method><method name='setOperatorName'><parameter type='java.lang.String' name='longName'/><parameter type='java.lang.String' name='shortName'/><parameter type='java.lang.String' name='numeric'/></method><method name='setRoaming'><parameter type='boolean' name='roaming'/></method><method name='setState'><parameter type='int' name='state'/></method><method name='setStateOff'/><method name='setStateOutOfService'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='TelephonyManager'><method return='int' name='getCallState'/><method return='android.telephony.CellLocation' name='getCellLocation'/><method return='int' name='getDataActivity'/><method return='int' name='getDataState'/><method return='java.lang.String' name='getDeviceId'/><method return='java.lang.String' name='getDeviceSoftwareVersion'/><method return='java.lang.String' name='getLine1Number'/><method return='java.lang.String' name='getNetworkCountryIso'/><method return='java.lang.String' name='getNetworkOperator'/><method return='java.lang.String' name='getNetworkOperatorName'/><method return='int' name='getNetworkType'/><method return='int' name='getPhoneType'/><method return='java.lang.String' name='getSimCountryIso'/><method return='java.lang.String' name='getSimOperator'/><method return='java.lang.String' name='getSimOperatorName'/><method return='java.lang.String' name='getSimSerialNumber'/><method return='int' name='getSimState'/><method return='java.lang.String' name='getSubscriberId'/><method return='java.lang.String' name='getVoiceMailAlphaTag'/><method return='java.lang.String' name='getVoiceMailNumber'/><method return='boolean' name='isNetworkRoaming'/><method name='listen'><parameter type='android.telephony.PhoneStateListener' name='listener'/><parameter type='int' name='events'/></method><method return='java.util.List&lt;android.telephony.NeighboringCellInfo&gt;' name='getNeighboringCellInfo' api_added='3'/><method return='boolean' name='hasIccCard' api_added='5'/></class><class extends='java.lang.Object' name='NeighboringCellInfo' api_added='3'><constructor deprecated='5' type='android.telephony.NeighboringCellInfo' name='NeighboringCellInfo' api_added='3'/><constructor type='android.telephony.NeighboringCellInfo' name='NeighboringCellInfo' api_added='3'><parameter type='int' name='rssi'/><parameter type='int' name='cid'/></constructor><constructor type='android.telephony.NeighboringCellInfo' name='NeighboringCellInfo' api_added='3'><parameter type='android.os.Parcel' name='in'/></constructor><constructor type='android.telephony.deprecated NeighboringCellInfo' name='deprecated NeighboringCellInfo' api_added='14'/><constructor type='android.telephony.deprecated NeighboringCellInfo' name='deprecated NeighboringCellInfo' api_added='14'/><method return='int' name='describeContents' api_added='3'/><method return='int' name='getCid' api_added='3'/><method return='int' name='getRssi' api_added='3'/><method deprecated='5' name='setCid' api_added='3'><parameter type='int' name='cid'/></method><method deprecated='5' name='setRssi' api_added='3'><parameter type='int' name='rssi'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='int' name='getLac' api_added='5'/><method return='int' name='getNetworkType' api_added='5'/><method return='int' name='getPsc' api_added='5'/></class><class extends='java.lang.Object' name='SmsManager' api_added='4' final='true'><method return='java.util.ArrayList&lt;java.lang.String&gt;' name='divideMessage' api_added='4'><parameter type='java.lang.String' name='text'/></method><method return='android.telephony.SmsManager' static='true' name='getDefault' api_added='4'/><method name='sendDataMessage' api_added='4'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='short' name='destinationPort'/><parameter type='byte[]' name='data'/><parameter type='android.app.PendingIntent' name='sentIntent'/><parameter type='android.app.PendingIntent' name='deliveryIntent'/></method><method name='sendMultipartTextMessage' api_added='4'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='java.util.ArrayList&lt;java.lang.String&gt;' name='parts'/><parameter type='java.util.ArrayList&lt;android.app.PendingIntent&gt;' name='sentIntents'/><parameter type='java.util.ArrayList&lt;android.app.PendingIntent&gt;' name='deliveryIntents'/></method><method name='sendTextMessage' api_added='4'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='text'/><parameter type='android.app.PendingIntent' name='sentIntent'/><parameter type='android.app.PendingIntent' name='deliveryIntent'/></method></class><class extends='java.lang.Object' name='SmsMessage' api_added='4'><method return='int[]' static='true' name='calculateLength' api_added='4'><parameter type='java.lang.CharSequence' name='msgBody'/><parameter type='boolean' name='use7bitOnly'/></method><method return='int[]' static='true' name='calculateLength' api_added='4'><parameter type='java.lang.String' name='messageBody'/><parameter type='boolean' name='use7bitOnly'/></method><method return='android.telephony.SmsMessage' static='true' name='createFromPdu' api_added='4'><parameter type='byte[]' name='pdu'/></method><method return='java.lang.String' name='getDisplayMessageBody' api_added='4'/><method return='java.lang.String' name='getDisplayOriginatingAddress' api_added='4'/><method return='java.lang.String' name='getEmailBody' api_added='4'/><method return='java.lang.String' name='getEmailFrom' api_added='4'/><method return='int' name='getIndexOnIcc' api_added='4'/><method deprecated='4' return='int' name='getIndexOnSim' api_added='4'/><method return='java.lang.String' name='getMessageBody' api_added='4'/><method return='android.telephony.SmsMessage.MessageClass' name='getMessageClass' api_added='4'/><method return='java.lang.String' name='getOriginatingAddress' api_added='4'/><method return='byte[]' name='getPdu' api_added='4'/><method return='int' name='getProtocolIdentifier' api_added='4'/><method return='java.lang.String' name='getPseudoSubject' api_added='4'/><method return='java.lang.String' name='getServiceCenterAddress' api_added='4'/><method return='int' name='getStatus' api_added='4'/><method return='int' name='getStatusOnIcc' api_added='4'/><method deprecated='4' return='int' name='getStatusOnSim' api_added='4'/><method return='android.telephony.SmsMessage.SubmitPdu' static='true' name='getSubmitPdu' api_added='4'><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='message'/><parameter type='boolean' name='statusReportRequested'/></method><method return='android.telephony.SmsMessage.SubmitPdu' static='true' name='getSubmitPdu' api_added='4'><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='destinationAddress'/><parameter type='short' name='destinationPort'/><parameter type='byte[]' name='data'/><parameter type='boolean' name='statusReportRequested'/></method><method return='int' static='true' name='getTPLayerLengthForPDU' api_added='4'><parameter type='java.lang.String' name='pdu'/></method><method return='long' name='getTimestampMillis' api_added='4'/><method return='byte[]' name='getUserData' api_added='4'/><method return='boolean' name='isCphsMwiMessage' api_added='4'/><method return='boolean' name='isEmail' api_added='4'/><method return='boolean' name='isMWIClearMessage' api_added='4'/><method return='boolean' name='isMWISetMessage' api_added='4'/><method return='boolean' name='isMwiDontStore' api_added='4'/><method return='boolean' name='isReplace' api_added='4'/><method return='boolean' name='isReplyPathPresent' api_added='4'/><method return='boolean' name='isStatusReportMessage' api_added='4'/></class><class extends='java.lang.Enum' static='true' name='SmsMessage.MessageClass' api_added='4' final='true'><method return='android.telephony.SmsMessage.MessageClass' static='true' name='valueOf' api_added='4'><parameter type='java.lang.String' name='name'/></method><method return='android.telephony.SmsMessage.MessageClass[]' static='true' name='values' api_added='4' final='true'/></class><class extends='java.lang.Object' static='true' name='SmsMessage.SubmitPdu' api_added='4'/><class extends='java.lang.Object' name='SignalStrength' api_added='7'><method return='int' name='describeContents' api_added='7'/><method return='int' name='getCdmaDbm' api_added='7'/><method return='int' name='getCdmaEcio' api_added='7'/><method return='int' name='getEvdoDbm' api_added='7'/><method return='int' name='getEvdoEcio' api_added='7'/><method return='int' name='getEvdoSnr' api_added='7'/><method return='int' name='getGsmBitErrorRate' api_added='7'/><method return='int' name='getGsmSignalStrength' api_added='7'/><method return='boolean' name='isGsm' api_added='7'/><method name='writeToParcel' api_added='7'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class></package><package name='android.telephony.gsm'><class extends='android.telephony.CellLocation' name='GsmCellLocation'><constructor type='android.telephony.gsm.GsmCellLocation' name='GsmCellLocation'/><constructor type='android.telephony.gsm.GsmCellLocation' name='GsmCellLocation'><parameter type='android.os.Bundle' name='bundle'/></constructor><method name='fillInNotifierBundle'><parameter type='android.os.Bundle' name='m'/></method><method return='int' name='getCid'/><method return='int' name='getLac'/><method name='setLacAndCid'><parameter type='int' name='lac'/><parameter type='int' name='cid'/></method><method name='setStateInvalid'/><method return='int' name='getPsc' api_added='9'/></class><class extends='java.lang.Object' deprecated='4' name='SmsManager' final='true'><method deprecated='4' return='java.util.ArrayList&lt;java.lang.String&gt;' name='divideMessage'><parameter type='java.lang.String' name='text'/></method><method deprecated='4' return='android.telephony.gsm.SmsManager' static='true' name='getDefault'/><method deprecated='4' name='sendDataMessage'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='short' name='destinationPort'/><parameter type='byte[]' name='data'/><parameter type='android.app.PendingIntent' name='sentIntent'/><parameter type='android.app.PendingIntent' name='deliveryIntent'/></method><method deprecated='4' name='sendMultipartTextMessage'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='java.util.ArrayList&lt;java.lang.String&gt;' name='parts'/><parameter type='java.util.ArrayList&lt;android.app.PendingIntent&gt;' name='sentIntents'/><parameter type='java.util.ArrayList&lt;android.app.PendingIntent&gt;' name='deliveryIntents'/></method><method deprecated='4' name='sendTextMessage'><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='text'/><parameter type='android.app.PendingIntent' name='sentIntent'/><parameter type='android.app.PendingIntent' name='deliveryIntent'/></method></class><class extends='java.lang.Object' deprecated='4' name='SmsMessage'><constructor deprecated='4' api_removed='14' type='android.telephony.gsm.SmsMessage' name='SmsMessage'/><constructor type='android.telephony.gsm.deprecated SmsMessage' name='deprecated SmsMessage' api_added='14'/><method deprecated='4' return='int[]' static='true' name='calculateLength'><parameter type='java.lang.String' name='messageBody'/><parameter type='boolean' name='use7bitOnly'/></method><method deprecated='4' return='android.telephony.gsm.SmsMessage' static='true' name='createFromPdu'><parameter type='byte[]' name='pdu'/></method><method deprecated='4' return='java.lang.String' name='getDisplayMessageBody'/><method deprecated='4' return='java.lang.String' name='getDisplayOriginatingAddress'/><method deprecated='4' return='java.lang.String' name='getEmailBody'/><method deprecated='4' return='java.lang.String' name='getEmailFrom'/><method deprecated='4' return='int' name='getIndexOnSim'/><method deprecated='4' return='java.lang.String' name='getMessageBody'/><method deprecated='4' return='android.telephony.gsm.SmsMessage.MessageClass' name='getMessageClass'/><method deprecated='4' return='java.lang.String' name='getOriginatingAddress'/><method deprecated='4' return='byte[]' name='getPdu'/><method deprecated='4' return='int' name='getProtocolIdentifier'/><method deprecated='4' return='java.lang.String' name='getPseudoSubject'/><method deprecated='4' return='java.lang.String' name='getServiceCenterAddress'/><method deprecated='4' return='int' name='getStatus'/><method deprecated='4' return='int' name='getStatusOnSim'/><method deprecated='4' return='android.telephony.gsm.SmsMessage.SubmitPdu' static='true' name='getSubmitPdu'><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='destinationAddress'/><parameter type='java.lang.String' name='message'/><parameter type='boolean' name='statusReportRequested'/></method><method deprecated='4' return='android.telephony.gsm.SmsMessage.SubmitPdu' static='true' name='getSubmitPdu'><parameter type='java.lang.String' name='scAddress'/><parameter type='java.lang.String' name='destinationAddress'/><parameter type='short' name='destinationPort'/><parameter type='byte[]' name='data'/><parameter type='boolean' name='statusReportRequested'/></method><method deprecated='4' return='int' static='true' name='getTPLayerLengthForPDU'><parameter type='java.lang.String' name='pdu'/></method><method deprecated='4' return='long' name='getTimestampMillis'/><method deprecated='4' return='byte[]' name='getUserData'/><method deprecated='4' return='boolean' name='isCphsMwiMessage'/><method deprecated='4' return='boolean' name='isEmail'/><method deprecated='4' return='boolean' name='isMWIClearMessage'/><method deprecated='4' return='boolean' name='isMWISetMessage'/><method deprecated='4' return='boolean' name='isMwiDontStore'/><method deprecated='4' return='boolean' name='isReplace'/><method deprecated='4' return='boolean' name='isReplyPathPresent'/><method deprecated='4' return='boolean' name='isStatusReportMessage'/><method deprecated='4' return='int[]' static='true' name='calculateLength' api_added='3'><parameter type='java.lang.CharSequence' name='messageBody'/><parameter type='boolean' name='use7bitOnly'/></method></class><class extends='java.lang.Enum' deprecated='4' static='true' name='SmsMessage.MessageClass' final='true'><method return='android.telephony.gsm.SmsMessage.MessageClass' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.telephony.gsm.SmsMessage.MessageClass[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' deprecated='4' static='true' name='SmsMessage.SubmitPdu'><constructor deprecated='4' api_removed='14' type='android.telephony.gsm.SmsMessage.SubmitPdu' name='SmsMessage.SubmitPdu'/><constructor type='android.telephony.gsm.deprecated SmsMessage.SubmitPdu' name='deprecated SmsMessage.SubmitPdu' api_added='14'/></class></package><package name='android.test'><class extends='android.test.ActivityTestCase' deprecated='3' abstract='true' name='ActivityInstrumentationTestCase'><constructor type='android.test.ActivityInstrumentationTestCase' name='ActivityInstrumentationTestCase'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityClass'/></constructor><constructor type='android.test.ActivityInstrumentationTestCase' name='ActivityInstrumentationTestCase'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityClass'/><parameter type='boolean' name='initialTouchMode'/></constructor><method return='T' name='getActivity'/><method name='testActivityTestCaseSetUpProperly'><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='android.test.InstrumentationTestCase' abstract='true' name='ActivityTestCase'><constructor type='android.test.ActivityTestCase' name='ActivityTestCase'/><method visibility='protected' return='android.app.Activity' name='getActivity'/><method visibility='protected' name='scrubClass'><parameter type='java.lang.Class&lt;?&gt;' name='testCaseClass'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/></method><method visibility='protected' name='setActivity'><parameter type='android.app.Activity' name='testActivity'/></method></class><class extends='android.test.ActivityTestCase' abstract='true' name='ActivityUnitTestCase'><constructor type='android.test.ActivityUnitTestCase' name='ActivityUnitTestCase'><parameter type='java.lang.Class&lt;T&gt;' name='activityClass'/></constructor><method return='T' name='getActivity'/><method return='int' name='getFinishedActivityRequest'/><method return='int' name='getRequestedOrientation'/><method return='android.content.Intent' name='getStartedActivityIntent'/><method return='int' name='getStartedActivityRequest'/><method return='boolean' name='isFinishCalled'/><method name='setActivityContext'><parameter type='android.content.Context' name='activityContext'/></method><method name='setApplication'><parameter type='android.app.Application' name='application'/></method><method visibility='protected' return='T' name='startActivity'><parameter type='android.content.Intent' name='intent'/><parameter type='android.os.Bundle' name='savedInstanceState'/><parameter type='java.lang.Object' name='lastNonConfigurationInstance'/></method></class><class extends='junit.framework.TestCase' name='AndroidTestCase'><constructor type='android.test.AndroidTestCase' name='AndroidTestCase'/><method return='android.content.Context' name='getContext'/><method visibility='protected' name='scrubClass'><parameter type='java.lang.Class&lt;?&gt;' name='testCaseClass'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/></method><method name='setContext'><parameter type='android.content.Context' name='context'/></method><method name='testAndroidTestCaseSetupProperly'/><method name='assertActivityRequiresPermission' api_added='4'><parameter type='java.lang.String' name='packageName'/><parameter type='java.lang.String' name='className'/><parameter type='java.lang.String' name='permission'/></method><method name='assertReadingContentUriRequiresPermission' api_added='4'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='permission'/></method><method name='assertWritingContentUriRequiresPermission' api_added='4'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='permission'/></method></class><class extends='junit.runner.BaseTestRunner' name='AndroidTestRunner'><constructor type='android.test.AndroidTestRunner' name='AndroidTestRunner'/><method name='addTestListener'><parameter type='junit.framework.TestListener' name='testListener'/></method><method name='clearTestListeners'/><method visibility='protected' return='junit.framework.TestResult' name='createTestResult'/><method return='java.util.List&lt;junit.framework.TestCase&gt;' name='getTestCases'/><method return='java.lang.String' name='getTestClassName'/><method return='junit.framework.TestResult' name='getTestResult'/><method visibility='protected' name='runFailed'><parameter type='java.lang.String' name='message'/></method><method name='runTest'/><method name='runTest'><parameter type='junit.framework.TestResult' name='testResult'/></method><method name='setContext'><parameter type='android.content.Context' name='context'/></method><method deprecated='5' name='setInstrumentaiton'><parameter type='android.app.Instrumentation' name='instrumentation'/></method><method name='setTest'><parameter type='junit.framework.Test' name='test'/></method><method name='setTestClassName'><parameter type='java.lang.String' name='testClassName'/><parameter type='java.lang.String' name='testMethodName'/></method><method name='testEnded'><parameter type='java.lang.String' name='testName'/></method><method name='testFailed'><parameter type='int' name='status'/><parameter type='junit.framework.Test' name='test'/><parameter type='java.lang.Throwable' name='t'/></method><method name='testStarted'><parameter type='java.lang.String' name='testName'/></method><method name='setInstrumentation' api_added='5'><parameter type='android.app.Instrumentation' name='instrumentation'/></method></class><class extends='android.test.AndroidTestCase' abstract='true' name='ApplicationTestCase'><constructor type='android.test.ApplicationTestCase' name='ApplicationTestCase'><parameter type='java.lang.Class&lt;T&gt;' name='applicationClass'/></constructor><method visibility='protected' name='createApplication' final='true'/><method return='T' name='getApplication'/><method return='android.content.Context' name='getSystemContext'/><method visibility='protected' name='terminateApplication' final='true'/><method name='testApplicationTestCaseSetUpProperly' final='true'><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='java.lang.Error' deprecated='16' name='AssertionFailedError'><constructor type='android.test.AssertionFailedError' name='AssertionFailedError'/><constructor type='android.test.AssertionFailedError' name='AssertionFailedError'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='android.test.AssertionFailedError' deprecated='16' name='ComparisonFailure'><constructor type='android.test.ComparisonFailure' name='ComparisonFailure'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expected'/><parameter type='java.lang.String' name='actual'/></constructor></class><class extends='java.lang.Object' abstract='true' name='FlakyTest'/><class extends='junit.framework.TestCase' name='InstrumentationTestCase'><constructor type='android.test.InstrumentationTestCase' name='InstrumentationTestCase'/><method return='android.app.Instrumentation' name='getInstrumentation'/><method deprecated='5' name='injectInsrumentation'><parameter type='android.app.Instrumentation' name='instrumentation'/></method><method return='T' name='launchActivity' final='true'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityCls'/><parameter type='android.os.Bundle' name='extras'/></method><method name='sendKeys'><parameter type='java.lang.String' name='keysSequence'/></method><method name='sendKeys'><parameter type='int...' name='keys'/></method><method name='sendRepeatedKeys'><parameter type='int...' name='keys'/></method><method return='T' name='launchActivityWithIntent' api_added='3' final='true'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityCls'/><parameter type='android.content.Intent' name='intent'/></method><method name='runTestOnUiThread' api_added='3'><parameter type='java.lang.Runnable' name='r'/><exception type='java.lang.Throwable' name='Throwable'/></method><method name='injectInstrumentation' api_added='5'><parameter type='android.app.Instrumentation' name='instrumentation'/></method></class><class extends='android.app.Instrumentation' name='InstrumentationTestRunner'><constructor type='android.test.InstrumentationTestRunner' name='InstrumentationTestRunner'/><method return='junit.framework.TestSuite' name='getAllTests'/><method visibility='protected' return='android.test.AndroidTestRunner' name='getAndroidTestRunner'/><method return='java.lang.ClassLoader' name='getLoader'/><method return='junit.framework.TestSuite' name='getTestSuite'/></class><class extends='junit.framework.TestSuite' name='InstrumentationTestSuite'><constructor type='android.test.InstrumentationTestSuite' name='InstrumentationTestSuite'><parameter type='android.app.Instrumentation' name='instr'/></constructor><constructor type='android.test.InstrumentationTestSuite' name='InstrumentationTestSuite'><parameter type='java.lang.String' name='name'/><parameter type='android.app.Instrumentation' name='instr'/></constructor><constructor type='android.test.InstrumentationTestSuite' name='InstrumentationTestSuite'><parameter type='java.lang.Class' name='theClass'/><parameter type='android.app.Instrumentation' name='instr'/></constructor><method name='addTestSuite' api_added='16'><parameter type='java.lang.Class' name='arg0'/></method></class><class extends='android.content.ContextWrapper' name='IsolatedContext'><constructor type='android.test.IsolatedContext' name='IsolatedContext'><parameter type='android.content.ContentResolver' name='resolver'/><parameter type='android.content.Context' name='targetContext'/></constructor><method return='java.util.List&lt;android.content.Intent&gt;' name='getAndClearBroadcastIntents'/></class><class extends='java.lang.Object' name='MoreAsserts' final='true'><method static='true' name='assertAssignableFrom'><parameter type='java.lang.Class&lt;?&gt;' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertAssignableFrom'><parameter type='java.lang.Class&lt;?&gt;' name='expected'/><parameter type='java.lang.Class&lt;?&gt;' name='actual'/></method><method return='java.util.regex.MatchResult' static='true' name='assertContainsRegex'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method return='java.util.regex.MatchResult' static='true' name='assertContainsRegex'><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertContentsInAnyOrder'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Iterable&lt;?&gt;' name='actual'/><parameter type='java.lang.Object...' name='expected'/></method><method static='true' name='assertContentsInAnyOrder'><parameter type='java.lang.Iterable&lt;?&gt;' name='actual'/><parameter type='java.lang.Object...' name='expected'/></method><method static='true' name='assertContentsInOrder'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Iterable&lt;?&gt;' name='actual'/><parameter type='java.lang.Object...' name='expected'/></method><method static='true' name='assertContentsInOrder'><parameter type='java.lang.Iterable&lt;?&gt;' name='actual'/><parameter type='java.lang.Object...' name='expected'/></method><method static='true' name='assertEmpty'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Iterable&lt;?&gt;' name='iterable'/></method><method static='true' name='assertEmpty'><parameter type='java.lang.Iterable&lt;?&gt;' name='iterable'/></method><method api_removed='14' static='true' name='assertEmpty'><parameter type='java.lang.String' name='message'/><parameter type='java.util.Map&lt;?, ?&gt;' name='map'/></method><method api_removed='14' static='true' name='assertEmpty'><parameter type='java.util.Map&lt;?, ?&gt;' name='map'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='byte[]' name='expected'/><parameter type='byte[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='byte[]' name='expected'/><parameter type='byte[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='int[]' name='expected'/><parameter type='int[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='int[]' name='expected'/><parameter type='int[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='double[]' name='expected'/><parameter type='double[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='double[]' name='expected'/><parameter type='double[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object[]' name='expected'/><parameter type='java.lang.Object[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.Object[]' name='expected'/><parameter type='java.lang.Object[]' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='java.util.Set&lt;? extends java.lang.Object&gt;' name='expected'/><parameter type='java.util.Set&lt;? extends java.lang.Object&gt;' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.util.Set&lt;? extends java.lang.Object&gt;' name='expected'/><parameter type='java.util.Set&lt;? extends java.lang.Object&gt;' name='actual'/></method><method return='java.util.regex.MatchResult' static='true' name='assertMatchesRegex'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method return='java.util.regex.MatchResult' static='true' name='assertMatchesRegex'><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertNotContainsRegex'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertNotContainsRegex'><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertNotEmpty'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Iterable&lt;?&gt;' name='iterable'/></method><method static='true' name='assertNotEmpty'><parameter type='java.lang.Iterable&lt;?&gt;' name='iterable'/></method><method api_removed='14' static='true' name='assertNotEmpty'><parameter type='java.lang.String' name='message'/><parameter type='java.util.Map&lt;?, ?&gt;' name='map'/></method><method api_removed='14' static='true' name='assertNotEmpty'><parameter type='java.util.Map&lt;?, ?&gt;' name='map'/></method><method static='true' name='assertNotEqual'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='unexpected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertNotEqual'><parameter type='java.lang.Object' name='unexpected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertNotMatchesRegex'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertNotMatchesRegex'><parameter type='java.lang.String' name='expectedRegex'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='checkEqualsAndHashCodeMethods'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='lhs'/><parameter type='java.lang.Object' name='rhs'/><parameter type='boolean' name='expectedResult'/></method><method static='true' name='checkEqualsAndHashCodeMethods'><parameter type='java.lang.Object' name='lhs'/><parameter type='java.lang.Object' name='rhs'/><parameter type='boolean' name='expectedResult'/></method><method static='true' name='assertEmpty' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;?' name='arg1'/><parameter type='?&gt;' name='arg2'/></method><method static='true' name='assertEmpty' api_added='14'><parameter type='java.util.Map&lt;?' name='arg0'/><parameter type='?&gt;' name='arg1'/></method><method static='true' name='assertNotEmpty' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;?' name='arg1'/><parameter type='?&gt;' name='arg2'/></method><method static='true' name='assertNotEmpty' api_added='14'><parameter type='java.util.Map&lt;?' name='arg0'/><parameter type='?&gt;' name='arg1'/></method></class><class extends='android.test.InstrumentationTestCase' deprecated='3' abstract='true' name='ProviderTestCase'><constructor type='android.test.ProviderTestCase' name='ProviderTestCase'><parameter type='java.lang.Class&lt;T&gt;' name='providerClass'/><parameter type='java.lang.String' name='providerAuthority'/></constructor><method return='android.test.mock.MockContentResolver' name='getMockContentResolver'/><method return='android.test.IsolatedContext' name='getMockContext'/><method return='T' name='getProvider'/><method return='android.content.ContentResolver' static='true' name='newResolverWithContentProviderFromSql'><parameter type='android.content.Context' name='targetContext'/><parameter type='java.lang.Class&lt;T&gt;' name='providerClass'/><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='databaseName'/><parameter type='int' name='databaseVersion'/><parameter type='java.lang.String' name='sql'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method></class><class extends='android.content.ContextWrapper' name='RenamingDelegatingContext'><constructor type='android.test.RenamingDelegatingContext' name='RenamingDelegatingContext'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='filePrefix'/></constructor><constructor type='android.test.RenamingDelegatingContext' name='RenamingDelegatingContext'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Context' name='fileContext'/><parameter type='java.lang.String' name='filePrefix'/></constructor><method return='java.lang.String' name='getDatabasePrefix'/><method name='makeExistingFilesAndDbsAccessible'/><method return='T' static='true' name='providerWithRenamedContext'><parameter type='java.lang.Class&lt;T&gt;' name='contentProvider'/><parameter type='android.content.Context' name='c'/><parameter type='java.lang.String' name='filePrefix'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='T' static='true' name='providerWithRenamedContext'><parameter type='java.lang.Class&lt;T&gt;' name='contentProvider'/><parameter type='android.content.Context' name='c'/><parameter type='java.lang.String' name='filePrefix'/><parameter type='boolean' name='allowAccessToExistingFilesAndDbs'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method></class><class extends='android.test.AndroidTestCase' abstract='true' name='ServiceTestCase'><constructor type='android.test.ServiceTestCase' name='ServiceTestCase'><parameter type='java.lang.Class&lt;T&gt;' name='serviceClass'/></constructor><method visibility='protected' return='android.os.IBinder' name='bindService'><parameter type='android.content.Intent' name='intent'/></method><method return='android.app.Application' name='getApplication'/><method return='T' name='getService'/><method return='android.content.Context' name='getSystemContext'/><method name='setApplication'><parameter type='android.app.Application' name='application'/></method><method visibility='protected' name='setupService'/><method visibility='protected' name='shutdownService'/><method visibility='protected' name='startService'><parameter type='android.content.Intent' name='intent'/></method><method name='testServiceTestCaseSetUpProperly'><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='android.test.InstrumentationTestCase' abstract='true' name='SingleLaunchActivityTestCase'><constructor type='android.test.SingleLaunchActivityTestCase' name='SingleLaunchActivityTestCase'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityClass'/></constructor><method return='T' name='getActivity'/><method name='testActivityTestCaseSetUpProperly'><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='android.test.InstrumentationTestCase' name='SyncBaseInstrumentation'><constructor type='android.test.SyncBaseInstrumentation' name='SyncBaseInstrumentation'/><method visibility='protected' name='cancelSyncsandDisableAutoSync'/><method visibility='protected' name='syncProvider'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='account'/><parameter type='java.lang.String' name='authority'/><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='java.lang.Object' name='TouchUtils'><constructor type='android.test.TouchUtils' name='TouchUtils'/><method static='true' name='clickView'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method deprecated='3' static='true' name='drag'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='float' name='fromX'/><parameter type='float' name='toX'/><parameter type='float' name='fromY'/><parameter type='float' name='toY'/><parameter type='int' name='stepCount'/></method><method deprecated='3' static='true' name='dragQuarterScreenDown'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/></method><method deprecated='3' static='true' name='dragQuarterScreenUp'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/></method><method deprecated='3' return='int' static='true' name='dragViewBy'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='deltaX'/><parameter type='int' name='deltaY'/></method><method deprecated='3' return='int' static='true' name='dragViewTo'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toX'/><parameter type='int' name='toY'/></method><method deprecated='3' static='true' name='dragViewToBottom'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method deprecated='3' static='true' name='dragViewToBottom'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='stepCount'/></method><method deprecated='3' static='true' name='dragViewToTop'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method deprecated='3' static='true' name='dragViewToTop'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='stepCount'/></method><method deprecated='3' return='int' static='true' name='dragViewToX'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toX'/></method><method deprecated='3' return='int' static='true' name='dragViewToY'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toY'/></method><method deprecated='3' static='true' name='longClickView'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method deprecated='3' static='true' name='scrollToBottom'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.ViewGroup' name='v'/></method><method deprecated='3' static='true' name='scrollToTop'><parameter type='android.test.ActivityInstrumentationTestCase' name='test'/><parameter type='android.view.ViewGroup' name='v'/></method><method static='true' name='tapView'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method static='true' name='touchAndCancelView'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method static='true' name='drag' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='float' name='fromX'/><parameter type='float' name='toX'/><parameter type='float' name='fromY'/><parameter type='float' name='toY'/><parameter type='int' name='stepCount'/></method><method static='true' name='dragQuarterScreenDown' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/></method><method static='true' name='dragQuarterScreenUp' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/></method><method deprecated='3' return='int' static='true' name='dragViewBy' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='deltaX'/><parameter type='int' name='deltaY'/></method><method return='int' static='true' name='dragViewTo' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toX'/><parameter type='int' name='toY'/></method><method static='true' name='dragViewToBottom' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.view.View' name='v'/></method><method static='true' name='dragViewToBottom' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.view.View' name='v'/><parameter type='int' name='stepCount'/></method><method static='true' name='dragViewToTop' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method static='true' name='dragViewToTop' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='stepCount'/></method><method return='int' static='true' name='dragViewToX' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toX'/></method><method return='int' static='true' name='dragViewToY' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/><parameter type='int' name='gravity'/><parameter type='int' name='toY'/></method><method static='true' name='longClickView' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.view.View' name='v'/></method><method static='true' name='scrollToBottom' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.view.ViewGroup' name='v'/></method><method static='true' name='scrollToTop' api_added='3'><parameter type='android.test.InstrumentationTestCase' name='test'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.view.ViewGroup' name='v'/></method></class><class extends='java.lang.Object' abstract='true' name='UiThreadTest'/><class extends='java.lang.Object' name='ViewAsserts'><method static='true' name='assertBaselineAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/></method><method static='true' name='assertBottomAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/></method><method static='true' name='assertBottomAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/><parameter type='int' name='margin'/></method><method static='true' name='assertGroupContains'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method static='true' name='assertGroupIntegrity'><parameter type='android.view.ViewGroup' name='parent'/></method><method static='true' name='assertGroupNotContains'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method static='true' name='assertHasScreenCoordinates'><parameter type='android.view.View' name='origin'/><parameter type='android.view.View' name='view'/><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method static='true' name='assertHorizontalCenterAligned'><parameter type='android.view.View' name='reference'/><parameter type='android.view.View' name='test'/></method><method static='true' name='assertLeftAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/></method><method static='true' name='assertLeftAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/><parameter type='int' name='margin'/></method><method static='true' name='assertOffScreenAbove'><parameter type='android.view.View' name='origin'/><parameter type='android.view.View' name='view'/></method><method static='true' name='assertOffScreenBelow'><parameter type='android.view.View' name='origin'/><parameter type='android.view.View' name='view'/></method><method static='true' name='assertOnScreen'><parameter type='android.view.View' name='origin'/><parameter type='android.view.View' name='view'/></method><method static='true' name='assertRightAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/></method><method static='true' name='assertRightAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/><parameter type='int' name='margin'/></method><method static='true' name='assertTopAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/></method><method static='true' name='assertTopAligned'><parameter type='android.view.View' name='first'/><parameter type='android.view.View' name='second'/><parameter type='int' name='margin'/></method><method static='true' name='assertVerticalCenterAligned'><parameter type='android.view.View' name='reference'/><parameter type='android.view.View' name='test'/></method></class><class extends='android.test.ActivityTestCase' abstract='true' name='ActivityInstrumentationTestCase2' api_added='3'><constructor deprecated='8' type='android.test.ActivityInstrumentationTestCase2' name='ActivityInstrumentationTestCase2' api_added='3'><parameter type='java.lang.String' name='pkg'/><parameter type='java.lang.Class&lt;T&gt;' name='activityClass'/></constructor><constructor type='android.test.deprecated ActivityInstrumentationTestCase2' name='deprecated ActivityInstrumentationTestCase2' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;T&gt;' name='arg1'/></constructor><method return='T' name='getActivity' api_added='3'/><method name='setActivityInitialTouchMode' api_added='3'><parameter type='boolean' name='initialTouchMode'/></method><method name='setActivityIntent' api_added='3'><parameter type='android.content.Intent' name='i'/></method></class><class extends='android.test.AndroidTestCase' abstract='true' name='ProviderTestCase2' api_added='3'><constructor type='android.test.ProviderTestCase2' name='ProviderTestCase2' api_added='3'><parameter type='java.lang.Class&lt;T&gt;' name='providerClass'/><parameter type='java.lang.String' name='providerAuthority'/></constructor><method return='android.test.mock.MockContentResolver' name='getMockContentResolver' api_added='3'/><method return='android.test.IsolatedContext' name='getMockContext' api_added='3'/><method return='T' name='getProvider' api_added='3'/><method return='android.content.ContentResolver' static='true' name='newResolverWithContentProviderFromSql' api_added='3'><parameter type='android.content.Context' name='targetContext'/><parameter type='java.lang.String' name='filenamePrefix'/><parameter type='java.lang.Class&lt;T&gt;' name='providerClass'/><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='databaseName'/><parameter type='int' name='databaseVersion'/><parameter type='java.lang.String' name='sql'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method></class><class extends='android.test.AndroidTestCase' name='LoaderTestCase' api_added='11'><constructor type='android.test.LoaderTestCase' name='LoaderTestCase' api_added='11'/><method return='T' name='getLoaderResultSynchronously' api_added='11'><parameter type='android.content.Loader&lt;T&gt;' name='loader'/></method></class><interface abstract='true' name='PerformanceTestCase'><method return='boolean' abstract='true' name='isPerformanceOnly'/><method return='int' abstract='true' name='startPerformance'><parameter type='android.test.PerformanceTestCase.Intermediates' name='intermediates'/></method></interface><interface abstract='true' static='true' name='PerformanceTestCase.Intermediates'><method abstract='true' name='addIntermediate'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='addIntermediate'><parameter type='java.lang.String' name='name'/><parameter type='long' name='timeInNS'/></method><method abstract='true' name='finishTiming'><parameter type='boolean' name='realTime'/></method><method abstract='true' name='setInternalIterations'><parameter type='int' name='count'/></method><method abstract='true' name='startTiming'><parameter type='boolean' name='realTime'/></method></interface><interface abstract='true' name='TestSuiteProvider'><method return='junit.framework.TestSuite' abstract='true' name='getTestSuite'/></interface></package><package name='android.test.mock'><class extends='android.app.Application' name='MockApplication'><constructor type='android.test.mock.MockApplication' name='MockApplication'/></class><class extends='android.content.ContentResolver' name='MockContentResolver'><constructor type='android.test.mock.MockContentResolver' name='MockContentResolver'/><method name='addProvider'><parameter type='java.lang.String' name='name'/><parameter type='android.content.ContentProvider' name='provider'/></method></class><class extends='android.content.Context' name='MockContext'><constructor type='android.test.mock.MockContext' name='MockContext'/><method return='boolean' name='bindService'><parameter type='android.content.Intent' name='service'/><parameter type='android.content.ServiceConnection' name='conn'/><parameter type='int' name='flags'/></method><method return='int' name='checkCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' name='checkCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkCallingPermission'><parameter type='java.lang.String' name='permission'/></method><method return='int' name='checkCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkPermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/></method><method return='int' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method return='int' name='checkUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/></method><method name='clearWallpaper'/><method return='android.content.Context' name='createPackageContext'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' name='databaseList'/><method return='boolean' name='deleteDatabase'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='deleteFile'><parameter type='java.lang.String' name='name'/></method><method name='enforceCallingOrSelfPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingOrSelfUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingPermission'><parameter type='java.lang.String' name='permission'/><parameter type='java.lang.String' name='message'/></method><method name='enforceCallingUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforcePermission'><parameter type='java.lang.String' name='permission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='java.lang.String' name='message'/></method><method name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method name='enforceUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='int' name='pid'/><parameter type='int' name='uid'/><parameter type='int' name='modeFlags'/><parameter type='java.lang.String' name='message'/></method><method return='java.lang.String[]' name='fileList'/><method return='android.content.Context' name='getApplicationContext'/><method return='android.content.res.AssetManager' name='getAssets'/><method return='java.io.File' name='getCacheDir'/><method return='java.lang.ClassLoader' name='getClassLoader'/><method return='android.content.ContentResolver' name='getContentResolver'/><method return='java.io.File' name='getDatabasePath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' name='getDir'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.io.File' name='getFileStreamPath'><parameter type='java.lang.String' name='name'/></method><method return='java.io.File' name='getFilesDir'/><method return='android.os.Looper' name='getMainLooper'/><method return='java.lang.String' name='getPackageCodePath'/><method return='android.content.pm.PackageManager' name='getPackageManager'/><method return='java.lang.String' name='getPackageName'/><method return='java.lang.String' name='getPackageResourcePath'/><method return='android.content.res.Resources' name='getResources'/><method return='android.content.SharedPreferences' name='getSharedPreferences'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/></method><method return='java.lang.Object' name='getSystemService'><parameter type='java.lang.String' name='name'/></method><method return='android.content.res.Resources.Theme' name='getTheme'/><method return='android.graphics.drawable.Drawable' name='getWallpaper'/><method return='int' name='getWallpaperDesiredMinimumHeight'/><method return='int' name='getWallpaperDesiredMinimumWidth'/><method name='grantUriPermission'><parameter type='java.lang.String' name='toPackage'/><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method return='java.io.FileInputStream' name='openFileInput'><parameter type='java.lang.String' name='name'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='java.io.FileOutputStream' name='openFileOutput'><parameter type='java.lang.String' name='name'/><parameter type='int' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></method><method return='android.database.sqlite.SQLiteDatabase' name='openOrCreateDatabase'><parameter type='java.lang.String' name='file'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/></method><method return='android.graphics.drawable.Drawable' name='peekWallpaper'/><method return='android.content.Intent' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/></method><method return='android.content.Intent' name='registerReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/><parameter type='android.content.IntentFilter' name='filter'/><parameter type='java.lang.String' name='broadcastPermission'/><parameter type='android.os.Handler' name='scheduler'/></method><method name='removeStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='revokeUriPermission'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='modeFlags'/></method><method name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='sendBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/></method><method name='sendOrderedBroadcast'><parameter type='android.content.Intent' name='intent'/><parameter type='java.lang.String' name='receiverPermission'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method name='sendStickyBroadcast'><parameter type='android.content.Intent' name='intent'/></method><method name='setTheme'><parameter type='int' name='resid'/></method><method name='setWallpaper'><parameter type='android.graphics.Bitmap' name='bitmap'/><exception type='java.io.IOException' name='IOException'/></method><method name='setWallpaper'><parameter type='java.io.InputStream' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method name='startActivity'><parameter type='android.content.Intent' name='intent'/></method><method return='boolean' name='startInstrumentation'><parameter type='android.content.ComponentName' name='className'/><parameter type='java.lang.String' name='profileFile'/><parameter type='android.os.Bundle' name='arguments'/></method><method return='android.content.ComponentName' name='startService'><parameter type='android.content.Intent' name='service'/></method><method return='boolean' name='stopService'><parameter type='android.content.Intent' name='service'/></method><method name='unbindService'><parameter type='android.content.ServiceConnection' name='conn'/></method><method name='unregisterReceiver'><parameter type='android.content.BroadcastReceiver' name='receiver'/></method><method return='android.content.pm.ApplicationInfo' name='getApplicationInfo' api_added='4'/><method name='sendStickyOrderedBroadcast' api_added='5'><parameter type='android.content.Intent' name='intent'/><parameter type='android.content.BroadcastReceiver' name='resultReceiver'/><parameter type='android.os.Handler' name='scheduler'/><parameter type='int' name='initialCode'/><parameter type='java.lang.String' name='initialData'/><parameter type='android.os.Bundle' name='initialExtras'/></method><method name='startIntentSender' api_added='5'><parameter type='android.content.IntentSender' name='intent'/><parameter type='android.content.Intent' name='fillInIntent'/><parameter type='int' name='flagsMask'/><parameter type='int' name='flagsValues'/><parameter type='int' name='extraFlags'/><exception type='android.content.IntentSender.SendIntentException' name='IntentSender.SendIntentException'/></method><method return='java.io.File' name='getExternalCacheDir' api_added='8'/><method return='java.io.File' name='getExternalFilesDir' api_added='8'><parameter type='java.lang.String' name='type'/></method><method return='java.io.File' name='getObbDir' api_added='11'/><method return='android.database.sqlite.SQLiteDatabase' name='openOrCreateDatabase' api_added='11'><parameter type='java.lang.String' name='file'/><parameter type='int' name='mode'/><parameter type='android.database.sqlite.SQLiteDatabase.CursorFactory' name='factory'/><parameter type='android.database.DatabaseErrorHandler' name='errorHandler'/></method><method name='startActivities' api_added='11'><parameter type='android.content.Intent[]' name='intents'/></method><method name='startActivities' api_added='16'><parameter type='android.content.Intent[]' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='startActivity' api_added='16'><parameter type='android.content.Intent' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='startIntentSender' api_added='16'><parameter type='android.content.IntentSender' name='arg0'/><parameter type='android.content.Intent' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='android.os.Bundle' name='arg5'/></method></class><class extends='java.lang.Object' name='MockDialogInterface'><constructor type='android.test.mock.MockDialogInterface' name='MockDialogInterface'/><method name='cancel'/><method name='dismiss'/></class><class extends='android.content.pm.PackageManager' name='MockPackageManager'><constructor type='android.test.mock.MockPackageManager' name='MockPackageManager'/><method name='addPackageToPreferred'><parameter type='java.lang.String' name='packageName'/></method><method return='boolean' name='addPermission'><parameter type='android.content.pm.PermissionInfo' name='info'/></method><method name='addPreferredActivity'><parameter type='android.content.IntentFilter' name='filter'/><parameter type='int' name='match'/><parameter type='android.content.ComponentName[]' name='set'/><parameter type='android.content.ComponentName' name='activity'/></method><method return='int' name='checkPermission'><parameter type='java.lang.String' name='permName'/><parameter type='java.lang.String' name='pkgName'/></method><method return='int' name='checkSignatures'><parameter type='java.lang.String' name='pkg1'/><parameter type='java.lang.String' name='pkg2'/></method><method name='clearPackagePreferredActivities'><parameter type='java.lang.String' name='packageName'/></method><method return='android.graphics.drawable.Drawable' name='getActivityIcon'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' name='getActivityIcon'><parameter type='android.content.Intent' name='intent'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ActivityInfo' name='getActivityInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.util.List&lt;android.content.pm.PermissionGroupInfo&gt;' name='getAllPermissionGroups'><parameter type='int' name='flags'/></method><method return='int' name='getApplicationEnabledSetting'><parameter type='java.lang.String' name='packageName'/></method><method return='android.graphics.drawable.Drawable' name='getApplicationIcon'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='android.graphics.drawable.Drawable' name='getApplicationIcon'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ApplicationInfo' name='getApplicationInfo'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.CharSequence' name='getApplicationLabel'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='int' name='getComponentEnabledSetting'><parameter type='android.content.ComponentName' name='componentName'/></method><method return='android.graphics.drawable.Drawable' name='getDefaultActivityIcon'/><method return='android.graphics.drawable.Drawable' name='getDrawable'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method return='java.util.List&lt;android.content.pm.ApplicationInfo&gt;' name='getInstalledApplications'><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.PackageInfo&gt;' name='getInstalledPackages'><parameter type='int' name='flags'/></method><method return='android.content.pm.InstrumentationInfo' name='getInstrumentationInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String' name='getNameForUid'><parameter type='int' name='uid'/></method><method return='int[]' name='getPackageGids'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.PackageInfo' name='getPackageInfo'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' name='getPackagesForUid'><parameter type='int' name='uid'/></method><method return='android.content.pm.PermissionGroupInfo' name='getPermissionGroupInfo'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.PermissionInfo' name='getPermissionInfo'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='int' name='getPreferredActivities'><parameter type='java.util.List&lt;android.content.IntentFilter&gt;' name='outFilters'/><parameter type='java.util.List&lt;android.content.ComponentName&gt;' name='outActivities'/><parameter type='java.lang.String' name='packageName'/></method><method return='java.util.List&lt;android.content.pm.PackageInfo&gt;' name='getPreferredPackages'><parameter type='int' name='flags'/></method><method return='android.content.pm.ActivityInfo' name='getReceiverInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.res.Resources' name='getResourcesForActivity'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.res.Resources' name='getResourcesForApplication'><parameter type='android.content.pm.ApplicationInfo' name='app'/></method><method return='android.content.res.Resources' name='getResourcesForApplication'><parameter type='java.lang.String' name='appPackageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ServiceInfo' name='getServiceInfo'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.CharSequence' name='getText'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method return='android.content.res.XmlResourceParser' name='getXml'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='resid'/><parameter type='android.content.pm.ApplicationInfo' name='appInfo'/></method><method api_removed='4' name='installPackage'><parameter type='android.net.Uri' name='packageURI'/><parameter type='android.content.pm.IPackageInstallObserver' name='observer'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' name='queryBroadcastReceivers'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ProviderInfo&gt;' name='queryContentProviders'><parameter type='java.lang.String' name='processName'/><parameter type='int' name='uid'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.InstrumentationInfo&gt;' name='queryInstrumentation'><parameter type='java.lang.String' name='targetPackage'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' name='queryIntentActivities'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' name='queryIntentActivityOptions'><parameter type='android.content.ComponentName' name='caller'/><parameter type='android.content.Intent[]' name='specifics'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.ResolveInfo&gt;' name='queryIntentServices'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='java.util.List&lt;android.content.pm.PermissionInfo&gt;' name='queryPermissionsByGroup'><parameter type='java.lang.String' name='group'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method name='removePackageFromPreferred'><parameter type='java.lang.String' name='packageName'/></method><method name='removePermission'><parameter type='java.lang.String' name='name'/></method><method return='android.content.pm.ResolveInfo' name='resolveActivity'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method return='android.content.pm.ProviderInfo' name='resolveContentProvider'><parameter type='java.lang.String' name='name'/><parameter type='int' name='flags'/></method><method return='android.content.pm.ResolveInfo' name='resolveService'><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/></method><method name='setApplicationEnabledSetting'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='newState'/><parameter type='int' name='flags'/></method><method name='setComponentEnabledSetting'><parameter type='android.content.ComponentName' name='componentName'/><parameter type='int' name='newState'/><parameter type='int' name='flags'/></method><method return='android.content.Intent' name='getLaunchIntentForPackage' api_added='3'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='java.lang.String[]' name='getSystemSharedLibraryNames' api_added='3'/><method return='boolean' name='isSafeMode' api_added='3'/><method return='int' name='checkSignatures' api_added='5'><parameter type='int' name='uid1'/><parameter type='int' name='uid2'/></method><method return='java.lang.String' name='getInstallerPackageName' api_added='5'><parameter type='java.lang.String' name='packageName'/></method><method return='android.content.pm.FeatureInfo[]' name='getSystemAvailableFeatures' api_added='5'/><method return='boolean' name='hasSystemFeature' api_added='5'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='addPermissionAsync' api_added='8'><parameter type='android.content.pm.PermissionInfo' name='info'/></method><method return='java.lang.String[]' name='canonicalToCurrentPackageNames' api_added='8'><parameter type='java.lang.String[]' name='names'/></method><method return='java.lang.String[]' name='currentToCanonicalPackageNames' api_added='8'><parameter type='java.lang.String[]' name='names'/></method><method return='android.graphics.drawable.Drawable' name='getActivityLogo' api_added='9'><parameter type='android.content.ComponentName' name='activityName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' name='getActivityLogo' api_added='9'><parameter type='android.content.Intent' name='intent'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.graphics.drawable.Drawable' name='getApplicationLogo' api_added='9'><parameter type='android.content.pm.ApplicationInfo' name='info'/></method><method return='android.graphics.drawable.Drawable' name='getApplicationLogo' api_added='9'><parameter type='java.lang.String' name='packageName'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method return='android.content.pm.ProviderInfo' name='getProviderInfo' api_added='9'><parameter type='android.content.ComponentName' name='className'/><parameter type='int' name='flags'/><exception type='android.content.pm.PackageManager.NameNotFoundException' name='PackageManager.NameNotFoundException'/></method><method name='setInstallerPackageName' api_added='11'><parameter type='java.lang.String' name='targetPackage'/><parameter type='java.lang.String' name='installerPackageName'/></method><method name='verifyPendingInstall' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='android.content.res.Resources' name='MockResources'><constructor type='android.test.mock.MockResources' name='MockResources'/></class><class extends='android.content.ContentProvider' name='MockContentProvider' api_added='8'><constructor visibility='protected' type='android.test.mock.MockContentProvider' name='MockContentProvider' api_added='8'/><constructor type='android.test.mock.MockContentProvider' name='MockContentProvider' api_added='8'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.test.mock.MockContentProvider' name='MockContentProvider' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='readPermission'/><parameter type='java.lang.String' name='writePermission'/><parameter type='android.content.pm.PathPermission[]' name='pathPermissions'/></constructor><method return='int' name='delete' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method><method return='java.lang.String' name='getType' api_added='8'><parameter type='android.net.Uri' name='uri'/></method><method return='android.net.Uri' name='insert' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/></method><method return='boolean' name='onCreate' api_added='8'/><method return='android.database.Cursor' name='query' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String[]' name='projection'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/><parameter type='java.lang.String' name='sortOrder'/></method><method return='int' name='update' api_added='8'><parameter type='android.net.Uri' name='uri'/><parameter type='android.content.ContentValues' name='values'/><parameter type='java.lang.String' name='selection'/><parameter type='java.lang.String[]' name='selectionArgs'/></method></class><class extends='java.lang.Object' name='MockCursor' api_added='8'><constructor type='android.test.mock.MockCursor' name='MockCursor' api_added='8'/><method api_removed='11' name='abortUpdates' api_added='8'/><method name='close' api_added='8'/><method return='boolean' api_removed='11' name='commitUpdates' api_added='8'/><method return='boolean' api_removed='11' name='commitUpdates' api_added='8'><parameter type='java.util.Map&lt;? extends java.lang.Long, ? extends java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt;' name='values'/></method><method name='copyStringToBuffer' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='android.database.CharArrayBuffer' name='buffer'/></method><method name='deactivate' api_added='8'/><method return='boolean' api_removed='11' name='deleteRow' api_added='8'/><method return='byte[]' name='getBlob' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='int' name='getColumnCount' api_added='8'/><method return='int' name='getColumnIndex' api_added='8'><parameter type='java.lang.String' name='columnName'/></method><method return='int' name='getColumnIndexOrThrow' api_added='8'><parameter type='java.lang.String' name='columnName'/></method><method return='java.lang.String' name='getColumnName' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String[]' name='getColumnNames' api_added='8'/><method return='int' name='getCount' api_added='8'/><method return='double' name='getDouble' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='android.os.Bundle' name='getExtras' api_added='8'/><method return='float' name='getFloat' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='int' name='getInt' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='long' name='getLong' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='int' name='getPosition' api_added='8'/><method return='short' name='getShort' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='java.lang.String' name='getString' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='getWantsAllOnMoveCalls' api_added='8'/><method return='boolean' api_removed='11' name='hasUpdates' api_added='8'/><method return='boolean' name='isAfterLast' api_added='8'/><method return='boolean' name='isBeforeFirst' api_added='8'/><method return='boolean' name='isClosed' api_added='8'/><method return='boolean' name='isFirst' api_added='8'/><method return='boolean' name='isLast' api_added='8'/><method return='boolean' name='isNull' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='move' api_added='8'><parameter type='int' name='offset'/></method><method return='boolean' name='moveToFirst' api_added='8'/><method return='boolean' name='moveToLast' api_added='8'/><method return='boolean' name='moveToNext' api_added='8'/><method return='boolean' name='moveToPosition' api_added='8'><parameter type='int' name='position'/></method><method return='boolean' name='moveToPrevious' api_added='8'/><method name='registerContentObserver' api_added='8'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='registerDataSetObserver' api_added='8'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='boolean' name='requery' api_added='8'/><method return='android.os.Bundle' name='respond' api_added='8'><parameter type='android.os.Bundle' name='extras'/></method><method name='setNotificationUri' api_added='8'><parameter type='android.content.ContentResolver' name='cr'/><parameter type='android.net.Uri' name='uri'/></method><method return='boolean' api_removed='11' name='supportsUpdates' api_added='8'/><method name='unregisterContentObserver' api_added='8'><parameter type='android.database.ContentObserver' name='observer'/></method><method name='unregisterDataSetObserver' api_added='8'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='boolean' api_removed='11' name='updateBlob' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='byte[]' name='value'/></method><method return='boolean' api_removed='11' name='updateDouble' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='double' name='value'/></method><method return='boolean' api_removed='11' name='updateFloat' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='float' name='value'/></method><method return='boolean' api_removed='11' name='updateInt' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='int' name='value'/></method><method return='boolean' api_removed='11' name='updateLong' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='long' name='value'/></method><method return='boolean' api_removed='11' name='updateShort' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='short' name='value'/></method><method return='boolean' api_removed='11' name='updateString' api_added='8'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='value'/></method><method return='boolean' api_removed='11' name='updateToNull' api_added='8'><parameter type='int' name='columnIndex'/></method><method return='int' name='getType' api_added='11'><parameter type='int' name='columnIndex'/></method></class></package><package name='android.test.suitebuilder'><class extends='java.lang.Object' name='TestMethod'><constructor type='android.test.suitebuilder.TestMethod' name='TestMethod'><parameter type='java.lang.reflect.Method' name='method'/><parameter type='java.lang.Class&lt;? extends junit.framework.TestCase&gt;' name='enclosingClass'/></constructor><method return='junit.framework.TestCase' name='createTest'><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/><exception type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'/></method><method return='T' name='getAnnotation'><parameter type='java.lang.Class&lt;T&gt;' name='annotationClass'/></method><method return='java.lang.Class&lt;? extends junit.framework.TestCase&gt;' name='getEnclosingClass'/><method return='java.lang.String' name='getEnclosingClassname'/><method return='java.lang.String' name='getName'/></class><class extends='java.lang.Object' name='TestSuiteBuilder'><constructor type='android.test.suitebuilder.TestSuiteBuilder' name='TestSuiteBuilder'><parameter type='java.lang.Class' name='clazz'/></constructor><constructor type='android.test.suitebuilder.TestSuiteBuilder' name='TestSuiteBuilder'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.ClassLoader' name='classLoader'/></constructor><method return='android.test.suitebuilder.TestSuiteBuilder' name='addRequirements'><parameter type='java.util.List&lt;com.android.internal.util.Predicate&lt;android.test.suitebuilder.TestMethod&gt;&gt;' name='predicates'/></method><method return='android.test.suitebuilder.TestSuiteBuilder' name='addRequirements' final='true'><parameter type='com.android.internal.util.Predicate&lt;android.test.suitebuilder.TestMethod&gt;...' name='predicates'/></method><method return='junit.framework.TestSuite' name='build' final='true'/><method return='android.test.suitebuilder.TestSuiteBuilder' name='excludePackages'><parameter type='java.lang.String...' name='packageNames'/></method><method visibility='protected' return='java.lang.String' name='getSuiteName'/><method return='android.test.suitebuilder.TestSuiteBuilder' name='includeAllPackagesUnderHere' final='true'/><method return='android.test.suitebuilder.TestSuiteBuilder' name='includePackages'><parameter type='java.lang.String...' name='packageNames'/></method><method return='android.test.suitebuilder.TestSuiteBuilder' name='named'><parameter type='java.lang.String' name='newSuiteName'/></method></class><class extends='junit.framework.TestCase' static='true' name='TestSuiteBuilder.FailedToCreateTests'><constructor type='android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests' name='TestSuiteBuilder.FailedToCreateTests'><parameter type='java.lang.Exception' name='exception'/></constructor><method name='testSuiteConstructionFailed'/></class></package><package name='android.test.suitebuilder.annotation'><class extends='java.lang.Object' abstract='true' name='Smoke'/><class extends='java.lang.Object' abstract='true' name='Suppress'/><class extends='java.lang.Object' abstract='true' name='LargeTest' api_added='2'/><class extends='java.lang.Object' abstract='true' name='MediumTest' api_added='2'/><class extends='java.lang.Object' abstract='true' name='SmallTest' api_added='2'/></package><package name='android.text'><class extends='java.lang.Object' name='AlteredCharSequence'><method return='char' name='charAt'><parameter type='int' name='off'/></method><method name='getChars'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='off'/></method><method return='int' name='length'/><method return='android.text.AlteredCharSequence' static='true' name='make'><parameter type='java.lang.CharSequence' name='source'/><parameter type='char[]' name='sub'/><parameter type='int' name='substart'/><parameter type='int' name='subend'/></method><method return='java.lang.CharSequence' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method></class><class extends='java.lang.Object' name='AndroidCharacter'><constructor type='android.text.AndroidCharacter' name='AndroidCharacter'/><method native='true' static='true' name='getDirectionalities'><parameter type='char[]' name='src'/><parameter type='byte[]' name='dest'/><parameter type='int' name='count'/></method><method return='char' native='true' static='true' name='getMirror'><parameter type='char' name='ch'/></method><method return='boolean' native='true' static='true' name='mirror'><parameter type='char[]' name='text'/><parameter type='int' name='start'/><parameter type='int' name='count'/></method><method return='int' native='true' static='true' name='getEastAsianWidth' api_added='8'><parameter type='char' name='input'/></method><method native='true' static='true' name='getEastAsianWidths' api_added='8'><parameter type='char[]' name='src'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='byte[]' name='dest'/></method></class><class extends='java.lang.Object' name='Annotation'><constructor type='android.text.Annotation' name='Annotation'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.String' name='getKey'/><method return='java.lang.String' name='getValue'/><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='AutoText'><method return='java.lang.String' static='true' name='get'><parameter type='java.lang.CharSequence' name='src'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.view.View' name='view'/></method><method return='int' static='true' name='getSize' api_added='3'><parameter type='android.view.View' name='view'/></method></class><class extends='android.text.Layout' name='BoringLayout'><constructor type='android.text.BoringLayout' name='BoringLayout'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/></constructor><constructor type='android.text.BoringLayout' name='BoringLayout'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/><parameter type='android.text.TextUtils.TruncateAt' name='ellipsize'/><parameter type='int' name='ellipsizedWidth'/></constructor><method name='ellipsized'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' name='getBottomPadding'/><method return='int' name='getEllipsisCount'><parameter type='int' name='line'/></method><method return='int' name='getEllipsisStart'><parameter type='int' name='line'/></method><method return='boolean' name='getLineContainsTab'><parameter type='int' name='line'/></method><method return='int' name='getLineCount'/><method return='int' name='getLineDescent'><parameter type='int' name='line'/></method><method return='android.text.Layout.Directions' name='getLineDirections' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineStart'><parameter type='int' name='line'/></method><method return='int' name='getLineTop'><parameter type='int' name='line'/></method><method return='int' name='getParagraphDirection'><parameter type='int' name='line'/></method><method return='int' name='getTopPadding'/><method return='android.text.BoringLayout.Metrics' static='true' name='isBoring'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='paint'/></method><method return='android.text.BoringLayout.Metrics' static='true' name='isBoring'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/></method><method return='android.text.BoringLayout' static='true' name='make'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/></method><method return='android.text.BoringLayout' static='true' name='make'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/><parameter type='android.text.TextUtils.TruncateAt' name='ellipsize'/><parameter type='int' name='ellipsizedWidth'/></method><method return='android.text.BoringLayout' name='replaceOrMake'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/></method><method return='android.text.BoringLayout' name='replaceOrMake'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='android.text.BoringLayout.Metrics' name='metrics'/><parameter type='boolean' name='includepad'/><parameter type='android.text.TextUtils.TruncateAt' name='ellipsize'/><parameter type='int' name='ellipsizedWidth'/></method></class><class extends='android.graphics.Paint.FontMetricsInt' static='true' name='BoringLayout.Metrics'><constructor type='android.text.BoringLayout.Metrics' name='BoringLayout.Metrics'/></class><class extends='java.lang.Object' deprecated='11' name='ClipboardManager'><constructor type='android.text.ClipboardManager' name='ClipboardManager' api_added='11'/><method return='java.lang.CharSequence' name='getText'/><method return='boolean' name='hasText'/><method name='setText'><parameter type='java.lang.CharSequence' name='text'/></method></class><class extends='android.text.Layout' name='DynamicLayout'><constructor type='android.text.DynamicLayout' name='DynamicLayout'><parameter type='java.lang.CharSequence' name='base'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='width'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/></constructor><constructor type='android.text.DynamicLayout' name='DynamicLayout'><parameter type='java.lang.CharSequence' name='base'/><parameter type='java.lang.CharSequence' name='display'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='width'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/></constructor><constructor type='android.text.DynamicLayout' name='DynamicLayout'><parameter type='java.lang.CharSequence' name='base'/><parameter type='java.lang.CharSequence' name='display'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='width'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/><parameter type='android.text.TextUtils.TruncateAt' name='ellipsize'/><parameter type='int' name='ellipsizedWidth'/></constructor><method return='int' name='getBottomPadding'/><method return='int' name='getEllipsisCount'><parameter type='int' name='line'/></method><method return='int' name='getEllipsisStart'><parameter type='int' name='line'/></method><method return='boolean' name='getLineContainsTab'><parameter type='int' name='line'/></method><method return='int' name='getLineCount'/><method return='int' name='getLineDescent'><parameter type='int' name='line'/></method><method return='android.text.Layout.Directions' name='getLineDirections' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineStart'><parameter type='int' name='line'/></method><method return='int' name='getLineTop'><parameter type='int' name='line'/></method><method return='int' name='getParagraphDirection'><parameter type='int' name='line'/></method><method return='int' name='getTopPadding'/></class><class extends='java.lang.Object' static='true' name='Editable.Factory'><constructor type='android.text.Editable.Factory' name='Editable.Factory'/><method return='android.text.Editable.Factory' static='true' name='getInstance'/><method return='android.text.Editable' name='newEditable'><parameter type='java.lang.CharSequence' name='source'/></method></class><class extends='java.lang.Object' name='Html'><method return='android.text.Spanned' static='true' name='fromHtml'><parameter type='java.lang.String' name='source'/></method><method return='android.text.Spanned' static='true' name='fromHtml'><parameter type='java.lang.String' name='source'/><parameter type='android.text.Html.ImageGetter' name='imageGetter'/><parameter type='android.text.Html.TagHandler' name='tagHandler'/></method><method return='java.lang.String' static='true' name='toHtml'><parameter type='android.text.Spanned' name='text'/></method><method return='java.lang.String' static='true' name='escapeHtml' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='InputFilter.AllCaps'><constructor type='android.text.InputFilter.AllCaps' name='InputFilter.AllCaps'/><method return='java.lang.CharSequence' name='filter'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.Spanned' name='dest'/><parameter type='int' name='dstart'/><parameter type='int' name='dend'/></method></class><class extends='java.lang.Object' static='true' name='InputFilter.LengthFilter'><constructor type='android.text.InputFilter.LengthFilter' name='InputFilter.LengthFilter'><parameter type='int' name='max'/></constructor><method return='java.lang.CharSequence' name='filter'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.Spanned' name='dest'/><parameter type='int' name='dstart'/><parameter type='int' name='dend'/></method></class><class extends='java.lang.Object' abstract='true' name='Layout'><constructor visibility='protected' type='android.text.Layout' name='Layout'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='width'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/></constructor><method name='draw'><parameter type='android.graphics.Canvas' name='c'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Path' name='highlight'/><parameter type='android.graphics.Paint' name='highlightpaint'/><parameter type='int' name='cursorOffsetVertical'/></method><method return='android.text.Layout.Alignment' name='getAlignment' final='true'/><method return='int' abstract='true' name='getBottomPadding'/><method name='getCursorPath'><parameter type='int' name='point'/><parameter type='android.graphics.Path' name='dest'/><parameter type='java.lang.CharSequence' name='editingBuffer'/></method><method return='float' static='true' name='getDesiredWidth'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/></method><method return='float' static='true' name='getDesiredWidth'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.TextPaint' name='paint'/></method><method return='int' abstract='true' name='getEllipsisCount'><parameter type='int' name='line'/></method><method return='int' abstract='true' name='getEllipsisStart'><parameter type='int' name='line'/></method><method return='int' name='getEllipsizedWidth'/><method return='int' name='getHeight'/><method return='int' name='getLineAscent' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineBaseline' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineBottom' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineBounds'><parameter type='int' name='line'/><parameter type='android.graphics.Rect' name='bounds'/></method><method return='boolean' abstract='true' name='getLineContainsTab'><parameter type='int' name='line'/></method><method return='int' abstract='true' name='getLineCount'/><method return='int' abstract='true' name='getLineDescent'><parameter type='int' name='line'/></method><method return='android.text.Layout.Directions' abstract='true' name='getLineDirections'><parameter type='int' name='line'/></method><method return='int' name='getLineEnd' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineForOffset'><parameter type='int' name='offset'/></method><method return='int' name='getLineForVertical'><parameter type='int' name='vertical'/></method><method return='float' name='getLineLeft'><parameter type='int' name='line'/></method><method return='float' name='getLineMax'><parameter type='int' name='line'/></method><method return='float' name='getLineRight'><parameter type='int' name='line'/></method><method return='int' abstract='true' name='getLineStart'><parameter type='int' name='line'/></method><method return='int' abstract='true' name='getLineTop'><parameter type='int' name='line'/></method><method return='int' name='getLineVisibleEnd'><parameter type='int' name='line'/></method><method return='float' name='getLineWidth'><parameter type='int' name='line'/></method><method return='int' name='getOffsetForHorizontal'><parameter type='int' name='line'/><parameter type='float' name='horiz'/></method><method return='int' name='getOffsetToLeftOf'><parameter type='int' name='offset'/></method><method return='int' name='getOffsetToRightOf'><parameter type='int' name='offset'/></method><method return='android.text.TextPaint' name='getPaint' final='true'/><method return='android.text.Layout.Alignment' name='getParagraphAlignment' final='true'><parameter type='int' name='line'/></method><method return='int' abstract='true' name='getParagraphDirection'><parameter type='int' name='line'/></method><method return='int' name='getParagraphLeft' final='true'><parameter type='int' name='line'/></method><method return='int' name='getParagraphRight' final='true'><parameter type='int' name='line'/></method><method return='float' name='getPrimaryHorizontal'><parameter type='int' name='offset'/></method><method return='float' name='getSecondaryHorizontal'><parameter type='int' name='offset'/></method><method name='getSelectionPath'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.graphics.Path' name='dest'/></method><method return='float' name='getSpacingAdd' final='true'/><method return='float' name='getSpacingMultiplier' final='true'/><method return='java.lang.CharSequence' name='getText' final='true'/><method return='int' abstract='true' name='getTopPadding'/><method return='int' name='getWidth' final='true'/><method name='increaseWidthTo' final='true'><parameter type='int' name='wid'/></method><method visibility='protected' return='boolean' name='isSpanned' final='true'/><method return='boolean' name='isRtlCharAt' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Enum' static='true' name='Layout.Alignment' final='true'><method return='android.text.Layout.Alignment' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.text.Layout.Alignment[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' static='true' name='Layout.Directions'/><class extends='java.lang.Object' abstract='true' name='LoginFilter'><method return='java.lang.CharSequence' name='filter'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.Spanned' name='dest'/><parameter type='int' name='dstart'/><parameter type='int' name='dend'/></method><method return='boolean' abstract='true' name='isAllowed'><parameter type='char' name='c'/></method><method name='onInvalidCharacter'><parameter type='char' name='c'/></method><method name='onStart'/><method name='onStop'/></class><class extends='android.text.LoginFilter' static='true' name='LoginFilter.PasswordFilterGMail'><constructor type='android.text.LoginFilter.PasswordFilterGMail' name='LoginFilter.PasswordFilterGMail'/><constructor type='android.text.LoginFilter.PasswordFilterGMail' name='LoginFilter.PasswordFilterGMail'><parameter type='boolean' name='appendInvalid'/></constructor><method return='boolean' name='isAllowed'><parameter type='char' name='c'/></method></class><class extends='android.text.LoginFilter' static='true' name='LoginFilter.UsernameFilterGMail'><constructor type='android.text.LoginFilter.UsernameFilterGMail' name='LoginFilter.UsernameFilterGMail'/><constructor type='android.text.LoginFilter.UsernameFilterGMail' name='LoginFilter.UsernameFilterGMail'><parameter type='boolean' name='appendInvalid'/></constructor><method return='boolean' name='isAllowed'><parameter type='char' name='c'/></method></class><class extends='android.text.LoginFilter' static='true' name='LoginFilter.UsernameFilterGeneric'><constructor type='android.text.LoginFilter.UsernameFilterGeneric' name='LoginFilter.UsernameFilterGeneric'/><constructor type='android.text.LoginFilter.UsernameFilterGeneric' name='LoginFilter.UsernameFilterGeneric'><parameter type='boolean' name='appendInvalid'/></constructor><method return='boolean' name='isAllowed'><parameter type='char' name='c'/></method></class><class extends='java.lang.Object' name='Selection'><method return='boolean' static='true' name='extendDown'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='extendLeft'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='extendRight'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method static='true' name='extendSelection' final='true'><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='index'/></method><method return='boolean' static='true' name='extendToLeftEdge'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='extendToRightEdge'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='extendUp'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' static='true' name='getSelectionEnd' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method return='int' static='true' name='getSelectionStart' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method return='boolean' static='true' name='moveDown'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='moveLeft'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='moveRight'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='moveToLeftEdge'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='moveToRightEdge'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method return='boolean' static='true' name='moveUp'><parameter type='android.text.Spannable' name='text'/><parameter type='android.text.Layout' name='layout'/></method><method static='true' name='removeSelection' final='true'><parameter type='android.text.Spannable' name='text'/></method><method static='true' name='selectAll' final='true'><parameter type='android.text.Spannable' name='text'/></method><method static='true' name='setSelection'><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='start'/><parameter type='int' name='stop'/></method><method static='true' name='setSelection' final='true'><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='index'/></method></class><class extends='java.lang.Object' static='true' name='Spannable.Factory'><constructor type='android.text.Spannable.Factory' name='Spannable.Factory'/><method return='android.text.Spannable.Factory' static='true' name='getInstance'/><method return='android.text.Spannable' name='newSpannable'><parameter type='java.lang.CharSequence' name='source'/></method></class><class extends='android.text.SpannableStringInternal' name='SpannableString'><constructor type='android.text.SpannableString' name='SpannableString'><parameter type='java.lang.CharSequence' name='source'/></constructor><method name='removeSpan'><parameter type='java.lang.Object' name='what'/></method><method name='setSpan'><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='subSequence' final='true'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.SpannableString' static='true' name='valueOf'><parameter type='java.lang.CharSequence' name='source'/></method></class><class extends='java.lang.Object' name='SpannableStringBuilder'><constructor type='android.text.SpannableStringBuilder' name='SpannableStringBuilder'/><constructor type='android.text.SpannableStringBuilder' name='SpannableStringBuilder'><parameter type='java.lang.CharSequence' name='text'/></constructor><constructor type='android.text.SpannableStringBuilder' name='SpannableStringBuilder'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></constructor><method return='android.text.SpannableStringBuilder' name='append'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.text.SpannableStringBuilder' name='append'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.SpannableStringBuilder' name='append'><parameter type='char' name='text'/></method><method return='char' name='charAt'><parameter type='int' name='where'/></method><method name='clear'/><method name='clearSpans'/><method return='android.text.SpannableStringBuilder' name='delete'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='getChars'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='destoff'/></method><method return='android.text.InputFilter[]' name='getFilters'/><method return='int' name='getSpanEnd'><parameter type='java.lang.Object' name='what'/></method><method return='int' name='getSpanFlags'><parameter type='java.lang.Object' name='what'/></method><method return='int' name='getSpanStart'><parameter type='java.lang.Object' name='what'/></method><method return='T[]' name='getSpans'><parameter type='int' name='queryStart'/><parameter type='int' name='queryEnd'/><parameter type='java.lang.Class&lt;T&gt;' name='kind'/></method><method return='android.text.SpannableStringBuilder' name='insert'><parameter type='int' name='where'/><parameter type='java.lang.CharSequence' name='tb'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.SpannableStringBuilder' name='insert'><parameter type='int' name='where'/><parameter type='java.lang.CharSequence' name='tb'/></method><method return='int' name='length'/><method return='int' name='nextSpanTransition'><parameter type='int' name='start'/><parameter type='int' name='limit'/><parameter type='java.lang.Class' name='kind'/></method><method name='removeSpan'><parameter type='java.lang.Object' name='what'/></method><method return='android.text.SpannableStringBuilder' name='replace'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.CharSequence' name='tb'/></method><method return='android.text.SpannableStringBuilder' name='replace'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.CharSequence' name='tb'/><parameter type='int' name='tbstart'/><parameter type='int' name='tbend'/></method><method name='setFilters'><parameter type='android.text.InputFilter[]' name='filters'/></method><method name='setSpan'><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.SpannableStringBuilder' static='true' name='valueOf'><parameter type='java.lang.CharSequence' name='source'/></method><method deprecated='12' return='int' name='getTextRunCursor' api_added='11'><parameter type='int' name='contextStart'/><parameter type='int' name='contextEnd'/><parameter type='int' name='flags'/><parameter type='int' name='offset'/><parameter type='int' name='cursorOpt'/><parameter type='android.graphics.Paint' name='p'/></method></class><class visibility='' extends='java.lang.Object' abstract='true' name='SpannableStringInternal'><method return='char' name='charAt' final='true'><parameter type='int' name='i'/></method><method name='getChars' final='true'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='off'/></method><method return='int' name='getSpanEnd'><parameter type='java.lang.Object' name='what'/></method><method return='int' name='getSpanFlags'><parameter type='java.lang.Object' name='what'/></method><method return='int' name='getSpanStart'><parameter type='java.lang.Object' name='what'/></method><method return='T[]' name='getSpans'><parameter type='int' name='queryStart'/><parameter type='int' name='queryEnd'/><parameter type='java.lang.Class&lt;T&gt;' name='kind'/></method><method return='int' name='length' final='true'/><method return='int' name='nextSpanTransition'><parameter type='int' name='start'/><parameter type='int' name='limit'/><parameter type='java.lang.Class' name='kind'/></method><method return='java.lang.String' name='toString' final='true'/></class><class extends='android.text.SpannableStringInternal' name='SpannedString' final='true'><constructor type='android.text.SpannedString' name='SpannedString'><parameter type='java.lang.CharSequence' name='source'/></constructor><method return='java.lang.CharSequence' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.SpannedString' static='true' name='valueOf'><parameter type='java.lang.CharSequence' name='source'/></method></class><class extends='android.text.Layout' name='StaticLayout'><constructor type='android.text.StaticLayout' name='StaticLayout'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='width'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/></constructor><constructor type='android.text.StaticLayout' name='StaticLayout'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='bufstart'/><parameter type='int' name='bufend'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/></constructor><constructor type='android.text.StaticLayout' name='StaticLayout'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='bufstart'/><parameter type='int' name='bufend'/><parameter type='android.text.TextPaint' name='paint'/><parameter type='int' name='outerwidth'/><parameter type='android.text.Layout.Alignment' name='align'/><parameter type='float' name='spacingmult'/><parameter type='float' name='spacingadd'/><parameter type='boolean' name='includepad'/><parameter type='android.text.TextUtils.TruncateAt' name='ellipsize'/><parameter type='int' name='ellipsizedWidth'/></constructor><method return='int' name='getBottomPadding'/><method return='int' name='getEllipsisCount'><parameter type='int' name='line'/></method><method return='int' name='getEllipsisStart'><parameter type='int' name='line'/></method><method return='boolean' name='getLineContainsTab'><parameter type='int' name='line'/></method><method return='int' name='getLineCount'/><method return='int' name='getLineDescent'><parameter type='int' name='line'/></method><method return='android.text.Layout.Directions' name='getLineDirections' final='true'><parameter type='int' name='line'/></method><method return='int' name='getLineStart'><parameter type='int' name='line'/></method><method return='int' name='getLineTop'><parameter type='int' name='line'/></method><method return='int' name='getParagraphDirection'><parameter type='int' name='line'/></method><method return='int' name='getTopPadding'/></class><class extends='android.graphics.Paint' name='TextPaint'><constructor type='android.text.TextPaint' name='TextPaint'/><constructor type='android.text.TextPaint' name='TextPaint'><parameter type='int' name='flags'/></constructor><constructor type='android.text.TextPaint' name='TextPaint'><parameter type='android.graphics.Paint' name='p'/></constructor><method name='set'><parameter type='android.text.TextPaint' name='tp'/></method></class><class extends='java.lang.Object' name='TextUtils'><method return='java.lang.CharSequence' static='true' name='commaEllipsize'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='p'/><parameter type='float' name='avail'/><parameter type='java.lang.String' name='oneMore'/><parameter type='java.lang.String' name='more'/></method><method return='java.lang.CharSequence' static='true' name='concat'><parameter type='java.lang.CharSequence...' name='text'/></method><method static='true' name='copySpansFrom'><parameter type='android.text.Spanned' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.Class' name='kind'/><parameter type='android.text.Spannable' name='dest'/><parameter type='int' name='destoff'/></method><method return='java.lang.CharSequence' static='true' name='ellipsize'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='p'/><parameter type='float' name='avail'/><parameter type='android.text.TextUtils.TruncateAt' name='where'/></method><method return='java.lang.CharSequence' static='true' name='ellipsize'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.text.TextPaint' name='p'/><parameter type='float' name='avail'/><parameter type='android.text.TextUtils.TruncateAt' name='where'/><parameter type='boolean' name='preserveLength'/><parameter type='android.text.TextUtils.EllipsizeCallback' name='callback'/></method><method return='boolean' static='true' name='equals'><parameter type='java.lang.CharSequence' name='a'/><parameter type='java.lang.CharSequence' name='b'/></method><method return='java.lang.CharSequence' static='true' name='expandTemplate'><parameter type='java.lang.CharSequence' name='template'/><parameter type='java.lang.CharSequence...' name='values'/></method><method static='true' name='getChars'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='destoff'/></method><method return='int' static='true' name='getOffsetAfter'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='offset'/></method><method return='int' static='true' name='getOffsetBefore'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='offset'/></method><method return='java.lang.CharSequence' static='true' name='getReverse'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' static='true' name='getTrimmedLength'><parameter type='java.lang.CharSequence' name='s'/></method><method return='java.lang.String' static='true' name='htmlEncode'><parameter type='java.lang.String' name='s'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/><parameter type='int' name='start'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='java.lang.CharSequence' name='needle'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='java.lang.CharSequence' name='needle'/><parameter type='int' name='start'/></method><method return='int' static='true' name='indexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='java.lang.CharSequence' name='needle'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='boolean' static='true' name='isDigitsOnly'><parameter type='java.lang.CharSequence' name='str'/></method><method return='boolean' static='true' name='isEmpty'><parameter type='java.lang.CharSequence' name='str'/></method><method return='boolean' static='true' name='isGraphic'><parameter type='java.lang.CharSequence' name='str'/></method><method return='boolean' static='true' name='isGraphic'><parameter type='char' name='c'/></method><method return='java.lang.String' static='true' name='join'><parameter type='java.lang.CharSequence' name='delimiter'/><parameter type='java.lang.Object[]' name='tokens'/></method><method return='java.lang.String' static='true' name='join'><parameter type='java.lang.CharSequence' name='delimiter'/><parameter type='java.lang.Iterable' name='tokens'/></method><method return='int' static='true' name='lastIndexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/></method><method return='int' static='true' name='lastIndexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/><parameter type='int' name='last'/></method><method return='int' static='true' name='lastIndexOf'><parameter type='java.lang.CharSequence' name='s'/><parameter type='char' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='last'/></method><method return='boolean' static='true' name='regionMatches'><parameter type='java.lang.CharSequence' name='one'/><parameter type='int' name='toffset'/><parameter type='java.lang.CharSequence' name='two'/><parameter type='int' name='ooffset'/><parameter type='int' name='len'/></method><method return='java.lang.CharSequence' static='true' name='replace'><parameter type='java.lang.CharSequence' name='template'/><parameter type='java.lang.String[]' name='sources'/><parameter type='java.lang.CharSequence[]' name='destinations'/></method><method return='java.lang.String[]' static='true' name='split'><parameter type='java.lang.String' name='text'/><parameter type='java.lang.String' name='expression'/></method><method return='java.lang.String[]' static='true' name='split'><parameter type='java.lang.String' name='text'/><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.lang.CharSequence' static='true' name='stringOrSpannedString'><parameter type='java.lang.CharSequence' name='source'/></method><method return='java.lang.String' static='true' name='substring'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='writeToParcel'><parameter type='java.lang.CharSequence' name='cs'/><parameter type='android.os.Parcel' name='p'/><parameter type='int' name='parcelableFlags'/></method><method static='true' name='dumpSpans' api_added='3'><parameter type='java.lang.CharSequence' name='cs'/><parameter type='android.util.Printer' name='printer'/><parameter type='java.lang.String' name='prefix'/></method><method return='int' static='true' name='getCapsMode' api_added='3'><parameter type='java.lang.CharSequence' name='cs'/><parameter type='int' name='off'/><parameter type='int' name='reqModes'/></method></class><class extends='java.lang.Object' static='true' name='TextUtils.SimpleStringSplitter'><constructor type='android.text.TextUtils.SimpleStringSplitter' name='TextUtils.SimpleStringSplitter'><parameter type='char' name='delimiter'/></constructor><method return='boolean' name='hasNext'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='iterator'/><method return='java.lang.String' name='next'/><method name='remove'/><method name='setString'><parameter type='java.lang.String' name='string'/></method></class><class extends='java.lang.Enum' static='true' name='TextUtils.TruncateAt' final='true'><method return='android.text.TextUtils.TruncateAt' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.text.TextUtils.TruncateAt[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' static='true' name='NoCopySpan.Concrete' api_added='3'><constructor type='android.text.NoCopySpan.Concrete' name='NoCopySpan.Concrete' api_added='3'/></class><interface abstract='true' name='Editable'><method return='android.text.Editable' abstract='true' name='append'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.text.Editable' abstract='true' name='append'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.Editable' abstract='true' name='append'><parameter type='char' name='text'/></method><method abstract='true' name='clear'/><method abstract='true' name='clearSpans'/><method return='android.text.Editable' abstract='true' name='delete'><parameter type='int' name='st'/><parameter type='int' name='en'/></method><method return='android.text.InputFilter[]' abstract='true' name='getFilters'/><method return='android.text.Editable' abstract='true' name='insert'><parameter type='int' name='where'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.Editable' abstract='true' name='insert'><parameter type='int' name='where'/><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.text.Editable' abstract='true' name='replace'><parameter type='int' name='st'/><parameter type='int' name='en'/><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='android.text.Editable' abstract='true' name='replace'><parameter type='int' name='st'/><parameter type='int' name='en'/><parameter type='java.lang.CharSequence' name='text'/></method><method abstract='true' name='setFilters'><parameter type='android.text.InputFilter[]' name='filters'/></method></interface><interface abstract='true' name='GetChars'><method abstract='true' name='getChars'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='destoff'/></method></interface><interface abstract='true' static='true' name='Html.ImageGetter'><method return='android.graphics.drawable.Drawable' abstract='true' name='getDrawable'><parameter type='java.lang.String' name='source'/></method></interface><interface abstract='true' static='true' name='Html.TagHandler'><method abstract='true' name='handleTag'><parameter type='boolean' name='opening'/><parameter type='java.lang.String' name='tag'/><parameter type='android.text.Editable' name='output'/><parameter type='org.xml.sax.XMLReader' name='xmlReader'/></method></interface><interface abstract='true' name='InputFilter'><method return='java.lang.CharSequence' abstract='true' name='filter'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.Spanned' name='dest'/><parameter type='int' name='dstart'/><parameter type='int' name='dend'/></method></interface><interface abstract='true' name='SpanWatcher'><method abstract='true' name='onSpanAdded'><parameter type='android.text.Spannable' name='text'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method abstract='true' name='onSpanChanged'><parameter type='android.text.Spannable' name='text'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='ostart'/><parameter type='int' name='oend'/><parameter type='int' name='nstart'/><parameter type='int' name='nend'/></method><method abstract='true' name='onSpanRemoved'><parameter type='android.text.Spannable' name='text'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method></interface><interface abstract='true' name='Spannable'><method abstract='true' name='removeSpan'><parameter type='java.lang.Object' name='what'/></method><method abstract='true' name='setSpan'><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='flags'/></method></interface><interface abstract='true' name='Spanned'><method return='int' abstract='true' name='getSpanEnd'><parameter type='java.lang.Object' name='tag'/></method><method return='int' abstract='true' name='getSpanFlags'><parameter type='java.lang.Object' name='tag'/></method><method return='int' abstract='true' name='getSpanStart'><parameter type='java.lang.Object' name='tag'/></method><method return='T[]' abstract='true' name='getSpans'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.Class&lt;T&gt;' name='type'/></method><method return='int' abstract='true' name='nextSpanTransition'><parameter type='int' name='start'/><parameter type='int' name='limit'/><parameter type='java.lang.Class' name='type'/></method></interface><interface abstract='true' static='true' name='TextUtils.EllipsizeCallback'><method abstract='true' name='ellipsized'><parameter type='int' name='start'/><parameter type='int' name='end'/></method></interface><interface abstract='true' static='true' name='TextUtils.StringSplitter'><method abstract='true' name='setString'><parameter type='java.lang.String' name='string'/></method></interface><interface abstract='true' name='TextWatcher'><method abstract='true' name='afterTextChanged'><parameter type='android.text.Editable' name='s'/></method><method abstract='true' name='beforeTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='after'/></method><method abstract='true' name='onTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='before'/><parameter type='int' name='count'/></method></interface><interface abstract='true' name='InputType' api_added='3'/><interface abstract='true' name='NoCopySpan' api_added='3'/><interface abstract='true' name='ParcelableSpan' api_added='3'><method return='int' abstract='true' name='getSpanTypeId' api_added='3'/></interface></package><package name='android.text.method'><class extends='java.lang.Object' name='ArrowKeyMovementMethod'><constructor type='android.text.method.ArrowKeyMovementMethod' name='ArrowKeyMovementMethod'/><method return='boolean' api_removed='11' name='canSelectArbitrarily'/><method return='android.text.method.MovementMethod' static='true' name='getInstance'/><method api_removed='11' name='initialize'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/></method><method return='boolean' api_removed='11' name='onKeyDown'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' api_removed='11' name='onKeyUp'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method api_removed='11' name='onTakeFocus'><parameter type='android.widget.TextView' name='view'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='dir'/></method><method return='boolean' api_removed='11' name='onTouchEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' api_removed='11' name='onTrackballEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' api_removed='11' name='onKeyOther' api_added='3'><parameter type='android.widget.TextView' name='view'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.KeyEvent' name='event'/></method></class><class extends='android.text.method.MetaKeyKeyListener' abstract='true' name='BaseKeyListener'><constructor type='android.text.method.BaseKeyListener' name='BaseKeyListener'/><method return='boolean' name='backspace'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyOther' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='forwardDelete' api_added='11'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method></class><class extends='android.app.Dialog' name='CharacterPickerDialog'><constructor type='android.text.method.CharacterPickerDialog' name='CharacterPickerDialog'><parameter type='android.content.Context' name='context'/><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='text'/><parameter type='java.lang.String' name='options'/><parameter type='boolean' name='insert'/></constructor><method name='onClick'><parameter type='android.view.View' name='v'/></method><method name='onItemClick'><parameter type='android.widget.AdapterView' name='parent'/><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method></class><class extends='android.text.method.NumberKeyListener' name='DateKeyListener'><constructor type='android.text.method.DateKeyListener' name='DateKeyListener'/><method visibility='protected' return='char[]' name='getAcceptedChars'/><method return='android.text.method.DateKeyListener' static='true' name='getInstance'/><method return='int' name='getInputType' api_added='3'/></class><class extends='android.text.method.NumberKeyListener' name='DateTimeKeyListener'><constructor type='android.text.method.DateTimeKeyListener' name='DateTimeKeyListener'/><method visibility='protected' return='char[]' name='getAcceptedChars'/><method return='android.text.method.DateTimeKeyListener' static='true' name='getInstance'/><method return='int' name='getInputType' api_added='3'/></class><class extends='android.text.method.NumberKeyListener' name='DialerKeyListener'><constructor type='android.text.method.DialerKeyListener' name='DialerKeyListener'/><method visibility='protected' return='char[]' name='getAcceptedChars'/><method return='android.text.method.DialerKeyListener' static='true' name='getInstance'/><method return='int' name='getInputType' api_added='3'/></class><class extends='android.text.method.NumberKeyListener' name='DigitsKeyListener'><constructor type='android.text.method.DigitsKeyListener' name='DigitsKeyListener'/><constructor type='android.text.method.DigitsKeyListener' name='DigitsKeyListener'><parameter type='boolean' name='sign'/><parameter type='boolean' name='decimal'/></constructor><method visibility='protected' return='char[]' name='getAcceptedChars'/><method return='android.text.method.DigitsKeyListener' static='true' name='getInstance'/><method return='android.text.method.DigitsKeyListener' static='true' name='getInstance'><parameter type='boolean' name='sign'/><parameter type='boolean' name='decimal'/></method><method return='android.text.method.DigitsKeyListener' static='true' name='getInstance'><parameter type='java.lang.String' name='accepted'/></method><method return='int' name='getInputType' api_added='3'/></class><class extends='android.text.method.ReplacementTransformationMethod' name='HideReturnsTransformationMethod'><constructor type='android.text.method.HideReturnsTransformationMethod' name='HideReturnsTransformationMethod'/><method return='android.text.method.HideReturnsTransformationMethod' static='true' name='getInstance'/><method visibility='protected' return='char[]' name='getOriginal'/><method visibility='protected' return='char[]' name='getReplacement'/></class><class extends='android.text.method.ScrollingMovementMethod' name='LinkMovementMethod'><constructor type='android.text.method.LinkMovementMethod' name='LinkMovementMethod'/><method return='android.text.method.MovementMethod' static='true' name='getInstance'/></class><class extends='java.lang.Object' abstract='true' name='MetaKeyKeyListener'><constructor type='android.text.method.MetaKeyKeyListener' name='MetaKeyKeyListener'/><method static='true' name='adjustMetaAfterKeypress'><parameter type='android.text.Spannable' name='content'/></method><method return='int' static='true' name='getMetaState' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method return='int' static='true' name='getMetaState' final='true'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='meta'/></method><method return='boolean' static='true' name='isMetaTracker'><parameter type='java.lang.CharSequence' name='text'/><parameter type='java.lang.Object' name='what'/></method><method return='boolean' name='onKeyDown'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' static='true' name='resetLockedMeta'><parameter type='android.text.Spannable' name='content'/></method><method static='true' name='resetMetaState'><parameter type='android.text.Spannable' name='text'/></method><method return='long' static='true' name='adjustMetaAfterKeypress' api_added='3'><parameter type='long' name='state'/></method><method name='clearMetaKeyState' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='states'/></method><method static='true' name='clearMetaKeyState' api_added='3'><parameter type='android.text.Editable' name='content'/><parameter type='int' name='states'/></method><method return='long' name='clearMetaKeyState' api_added='3'><parameter type='long' name='state'/><parameter type='int' name='which'/></method><method return='int' static='true' name='getMetaState' api_added='3' final='true'><parameter type='long' name='state'/></method><method return='int' static='true' name='getMetaState' api_added='3' final='true'><parameter type='long' name='state'/><parameter type='int' name='meta'/></method><method return='long' static='true' name='handleKeyDown' api_added='3'><parameter type='long' name='state'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='long' static='true' name='handleKeyUp' api_added='3'><parameter type='long' name='state'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' static='true' name='isSelectingMetaTracker' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='java.lang.Object' name='what'/></method><method return='long' static='true' name='resetLockedMeta' api_added='3'><parameter type='long' name='state'/></method></class><class extends='android.text.method.BaseKeyListener' name='MultiTapKeyListener'><constructor type='android.text.method.MultiTapKeyListener' name='MultiTapKeyListener'><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/><parameter type='boolean' name='autotext'/></constructor><method return='android.text.method.MultiTapKeyListener' static='true' name='getInstance'><parameter type='boolean' name='autotext'/><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/></method><method name='onSpanAdded'><parameter type='android.text.Spannable' name='s'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='onSpanChanged'><parameter type='android.text.Spannable' name='buf'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='s'/><parameter type='int' name='e'/><parameter type='int' name='start'/><parameter type='int' name='stop'/></method><method name='onSpanRemoved'><parameter type='android.text.Spannable' name='s'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' name='getInputType' api_added='3'/></class><class extends='android.text.method.BaseKeyListener' abstract='true' name='NumberKeyListener'><constructor type='android.text.method.NumberKeyListener' name='NumberKeyListener'/><method return='java.lang.CharSequence' name='filter'><parameter type='java.lang.CharSequence' name='source'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.text.Spanned' name='dest'/><parameter type='int' name='dstart'/><parameter type='int' name='dend'/></method><method visibility='protected' return='char[]' abstract='true' name='getAcceptedChars'/><method visibility='protected' return='int' name='lookup'><parameter type='android.view.KeyEvent' name='event'/><parameter type='android.text.Spannable' name='content'/></method><method visibility='protected' return='boolean' static='true' name='ok'><parameter type='char[]' name='accept'/><parameter type='char' name='c'/></method></class><class extends='java.lang.Object' name='PasswordTransformationMethod'><constructor type='android.text.method.PasswordTransformationMethod' name='PasswordTransformationMethod'/><method name='afterTextChanged'><parameter type='android.text.Editable' name='s'/></method><method name='beforeTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='after'/></method><method return='android.text.method.PasswordTransformationMethod' static='true' name='getInstance'/><method return='java.lang.CharSequence' name='getTransformation'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.view.View' name='view'/></method><method name='onFocusChanged'><parameter type='android.view.View' name='view'/><parameter type='java.lang.CharSequence' name='sourceText'/><parameter type='boolean' name='focused'/><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method><method name='onTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='before'/><parameter type='int' name='count'/></method></class><class extends='android.text.method.BaseKeyListener' name='QwertyKeyListener'><constructor type='android.text.method.QwertyKeyListener' name='QwertyKeyListener'><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/><parameter type='boolean' name='autotext'/></constructor><method return='android.text.method.QwertyKeyListener' static='true' name='getInstance'><parameter type='boolean' name='autotext'/><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/></method><method static='true' name='markAsReplaced'><parameter type='android.text.Spannable' name='content'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.String' name='original'/></method><method return='int' name='getInputType' api_added='3'/><method return='android.text.method.QwertyKeyListener' static='true' name='getInstanceForFullKeyboard' api_added='11'/></class><class extends='java.lang.Object' abstract='true' name='ReplacementTransformationMethod'><constructor type='android.text.method.ReplacementTransformationMethod' name='ReplacementTransformationMethod'/><method visibility='protected' return='char[]' abstract='true' name='getOriginal'/><method visibility='protected' return='char[]' abstract='true' name='getReplacement'/><method return='java.lang.CharSequence' name='getTransformation'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.view.View' name='v'/></method><method name='onFocusChanged'><parameter type='android.view.View' name='view'/><parameter type='java.lang.CharSequence' name='sourceText'/><parameter type='boolean' name='focused'/><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method></class><class extends='java.lang.Object' name='ScrollingMovementMethod'><constructor type='android.text.method.ScrollingMovementMethod' name='ScrollingMovementMethod'/><method return='boolean' api_removed='11' name='canSelectArbitrarily'/><method visibility='protected' return='boolean' api_removed='11' name='down'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='android.text.method.MovementMethod' static='true' name='getInstance'/><method api_removed='11' name='initialize'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/></method><method visibility='protected' return='boolean' api_removed='11' name='left'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='boolean' api_removed='11' name='onKeyDown'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' api_removed='11' name='onKeyUp'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method api_removed='11' name='onTakeFocus'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='dir'/></method><method return='boolean' api_removed='11' name='onTouchEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' api_removed='11' name='onTrackballEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.MotionEvent' name='event'/></method><method visibility='protected' return='boolean' api_removed='11' name='right'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' api_removed='11' name='up'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='boolean' api_removed='11' name='onKeyOther' api_added='3'><parameter type='android.widget.TextView' name='view'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.KeyEvent' name='event'/></method></class><class extends='android.text.method.ReplacementTransformationMethod' name='SingleLineTransformationMethod'><constructor type='android.text.method.SingleLineTransformationMethod' name='SingleLineTransformationMethod'/><method return='android.text.method.SingleLineTransformationMethod' static='true' name='getInstance'/><method visibility='protected' return='char[]' name='getOriginal'/><method visibility='protected' return='char[]' name='getReplacement'/></class><class extends='android.text.method.BaseKeyListener' name='TextKeyListener'><constructor type='android.text.method.TextKeyListener' name='TextKeyListener'><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/><parameter type='boolean' name='autotext'/></constructor><method static='true' name='clear'><parameter type='android.text.Editable' name='e'/></method><method return='android.text.method.TextKeyListener' static='true' name='getInstance'><parameter type='boolean' name='autotext'/><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/></method><method return='android.text.method.TextKeyListener' static='true' name='getInstance'/><method name='onSpanAdded'><parameter type='android.text.Spannable' name='s'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='onSpanChanged'><parameter type='android.text.Spannable' name='s'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='st'/><parameter type='int' name='en'/></method><method name='onSpanRemoved'><parameter type='android.text.Spannable' name='s'/><parameter type='java.lang.Object' name='what'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='release'/><method return='boolean' static='true' name='shouldCap'><parameter type='android.text.method.TextKeyListener.Capitalize' name='cap'/><parameter type='java.lang.CharSequence' name='cs'/><parameter type='int' name='off'/></method><method return='int' name='getInputType' api_added='3'/></class><class extends='java.lang.Enum' static='true' name='TextKeyListener.Capitalize' final='true'><method return='android.text.method.TextKeyListener.Capitalize' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.text.method.TextKeyListener.Capitalize[]' static='true' name='values' final='true'/></class><class extends='android.text.method.NumberKeyListener' name='TimeKeyListener'><constructor type='android.text.method.TimeKeyListener' name='TimeKeyListener'/><method visibility='protected' return='char[]' name='getAcceptedChars'/><method return='android.text.method.TimeKeyListener' static='true' name='getInstance'/><method return='int' name='getInputType' api_added='3'/></class><class extends='java.lang.Object' name='Touch'><method return='boolean' static='true' name='onTouchEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.MotionEvent' name='event'/></method><method static='true' name='scrollTo'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Layout' name='layout'/><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='int' static='true' name='getInitialScrollX' api_added='3'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='int' static='true' name='getInitialScrollY' api_added='3'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method></class><class extends='java.lang.Object' name='BaseMovementMethod' api_added='11'><constructor type='android.text.method.BaseMovementMethod' name='BaseMovementMethod' api_added='11'/><method visibility='protected' return='boolean' name='bottom' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='boolean' name='canSelectArbitrarily' api_added='11'/><method visibility='protected' return='boolean' name='down' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='end' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='int' name='getMovementMetaState' api_added='11'><parameter type='android.text.Spannable' name='buffer'/><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' return='boolean' name='handleMovementKey' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/><parameter type='int' name='keyCode'/><parameter type='int' name='movementMetaState'/><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' return='boolean' name='home' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method name='initialize' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/></method><method visibility='protected' return='boolean' name='left' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='lineEnd' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='lineStart' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='boolean' name='onKeyDown' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyOther' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='onTakeFocus' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='direction'/></method><method return='boolean' name='onTouchEvent' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='onTrackballEvent' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method><method visibility='protected' return='boolean' name='pageDown' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='pageUp' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='right' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='top' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method visibility='protected' return='boolean' name='up' api_added='11'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='buffer'/></method><method return='boolean' name='onGenericMotionEvent' api_added='12'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method></class><interface abstract='true' name='KeyListener'><method return='boolean' abstract='true' name='onKeyDown'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyUp'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method abstract='true' name='clearMetaKeyState' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='content'/><parameter type='int' name='states'/></method><method return='int' abstract='true' name='getInputType' api_added='3'/><method return='boolean' abstract='true' name='onKeyOther' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='android.text.Editable' name='text'/><parameter type='android.view.KeyEvent' name='event'/></method></interface><interface abstract='true' name='MovementMethod'><method return='boolean' abstract='true' name='canSelectArbitrarily'/><method abstract='true' name='initialize'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/></method><method return='boolean' abstract='true' name='onKeyDown'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyUp'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method abstract='true' name='onTakeFocus'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='direction'/></method><method return='boolean' abstract='true' name='onTouchEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' abstract='true' name='onTrackballEvent'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyOther' api_added='3'><parameter type='android.widget.TextView' name='view'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onGenericMotionEvent' api_added='12'><parameter type='android.widget.TextView' name='widget'/><parameter type='android.text.Spannable' name='text'/><parameter type='android.view.MotionEvent' name='event'/></method></interface><interface abstract='true' name='TransformationMethod'><method return='java.lang.CharSequence' abstract='true' name='getTransformation'><parameter type='java.lang.CharSequence' name='source'/><parameter type='android.view.View' name='view'/></method><method abstract='true' name='onFocusChanged'><parameter type='android.view.View' name='view'/><parameter type='java.lang.CharSequence' name='sourceText'/><parameter type='boolean' name='focused'/><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method></interface></package><package name='android.text.style'><class extends='android.text.style.MetricAffectingSpan' name='AbsoluteSizeSpan'><constructor type='android.text.style.AbsoluteSizeSpan' name='AbsoluteSizeSpan'><parameter type='int' name='size'/></constructor><method return='int' name='getSize'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='boolean' name='getDip' api_added='5'/></class><class extends='java.lang.Object' static='true' name='AlignmentSpan.Standard'><constructor type='android.text.style.AlignmentSpan.Standard' name='AlignmentSpan.Standard'><parameter type='android.text.Layout.Alignment' name='align'/></constructor><method return='android.text.Layout.Alignment' name='getAlignment'/><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.CharacterStyle' name='BackgroundColorSpan'><constructor type='android.text.style.BackgroundColorSpan' name='BackgroundColorSpan'><parameter type='int' name='color'/></constructor><method return='int' name='getBackgroundColor'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='BulletSpan'><constructor type='android.text.style.BulletSpan' name='BulletSpan'/><constructor type='android.text.style.BulletSpan' name='BulletSpan'><parameter type='int' name='gapWidth'/></constructor><constructor type='android.text.style.BulletSpan' name='BulletSpan'><parameter type='int' name='gapWidth'/><parameter type='int' name='color'/></constructor><method name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='l'/></method><method return='int' name='getLeadingMargin'><parameter type='boolean' name='first'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' abstract='true' name='CharacterStyle'><constructor type='android.text.style.CharacterStyle' name='CharacterStyle'/><method return='android.text.style.CharacterStyle' name='getUnderlying'/><method abstract='true' name='updateDrawState'><parameter type='android.text.TextPaint' name='tp'/></method><method return='android.text.style.CharacterStyle' static='true' name='wrap'><parameter type='android.text.style.CharacterStyle' name='cs'/></method></class><class extends='android.text.style.CharacterStyle' abstract='true' name='ClickableSpan'><constructor type='android.text.style.ClickableSpan' name='ClickableSpan'/><method abstract='true' name='onClick'><parameter type='android.view.View' name='widget'/></method><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method></class><class extends='java.lang.Object' name='DrawableMarginSpan'><constructor type='android.text.style.DrawableMarginSpan' name='DrawableMarginSpan'><parameter type='android.graphics.drawable.Drawable' name='b'/></constructor><constructor type='android.text.style.DrawableMarginSpan' name='DrawableMarginSpan'><parameter type='android.graphics.drawable.Drawable' name='b'/><parameter type='int' name='pad'/></constructor><method name='chooseHeight'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='istartv'/><parameter type='int' name='v'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/></method><method name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' name='getLeadingMargin'><parameter type='boolean' name='first'/></method></class><class extends='android.text.style.ReplacementSpan' abstract='true' name='DynamicDrawableSpan'><constructor type='android.text.style.DynamicDrawableSpan' name='DynamicDrawableSpan'/><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='x'/><parameter type='int' name='top'/><parameter type='int' name='y'/><parameter type='int' name='bottom'/><parameter type='android.graphics.Paint' name='paint'/></method><method return='android.graphics.drawable.Drawable' abstract='true' name='getDrawable'/><method return='int' name='getSize'><parameter type='android.graphics.Paint' name='paint'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/></method><method return='int' name='getVerticalAlignment' api_added='3'/></class><class extends='android.text.style.CharacterStyle' name='ForegroundColorSpan'><constructor type='android.text.style.ForegroundColorSpan' name='ForegroundColorSpan'><parameter type='int' name='color'/></constructor><method return='int' name='getForegroundColor'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='IconMarginSpan'><constructor type='android.text.style.IconMarginSpan' name='IconMarginSpan'><parameter type='android.graphics.Bitmap' name='b'/></constructor><constructor type='android.text.style.IconMarginSpan' name='IconMarginSpan'><parameter type='android.graphics.Bitmap' name='b'/><parameter type='int' name='pad'/></constructor><method name='chooseHeight'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='istartv'/><parameter type='int' name='v'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/></method><method name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' name='getLeadingMargin'><parameter type='boolean' name='first'/></method></class><class extends='android.text.style.DynamicDrawableSpan' name='ImageSpan'><constructor deprecated='4' type='android.text.style.ImageSpan' name='ImageSpan'><parameter type='android.graphics.Bitmap' name='b'/></constructor><constructor type='android.text.style.ImageSpan' name='ImageSpan'><parameter type='android.graphics.drawable.Drawable' name='d'/></constructor><constructor type='android.text.style.ImageSpan' name='ImageSpan'><parameter type='android.graphics.drawable.Drawable' name='d'/><parameter type='java.lang.String' name='source'/></constructor><constructor type='android.text.style.ImageSpan' name='ImageSpan'><parameter type='android.content.Context' name='context'/><parameter type='android.net.Uri' name='uri'/></constructor><constructor type='android.text.style.ImageSpan' name='ImageSpan'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceId'/></constructor><constructor type='android.text.style.deprecated ImageSpan' name='deprecated ImageSpan' api_added='14'><parameter type='android.graphics.Bitmap' name='arg0'/></constructor><constructor type='android.text.style.deprecated ImageSpan' name='deprecated ImageSpan' api_added='14'><parameter type='android.graphics.Bitmap' name='arg0'/></constructor><method return='android.graphics.drawable.Drawable' name='getDrawable'/><method return='java.lang.String' name='getSource'/></class><class extends='java.lang.Object' static='true' name='LeadingMarginSpan.Standard'><constructor type='android.text.style.LeadingMarginSpan.Standard' name='LeadingMarginSpan.Standard'><parameter type='int' name='first'/><parameter type='int' name='rest'/></constructor><constructor type='android.text.style.LeadingMarginSpan.Standard' name='LeadingMarginSpan.Standard'><parameter type='int' name='every'/></constructor><method name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' name='getLeadingMargin'><parameter type='boolean' name='first'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.CharacterStyle' name='MaskFilterSpan'><constructor type='android.text.style.MaskFilterSpan' name='MaskFilterSpan'><parameter type='android.graphics.MaskFilter' name='filter'/></constructor><method return='android.graphics.MaskFilter' name='getMaskFilter'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method></class><class extends='android.text.style.CharacterStyle' abstract='true' name='MetricAffectingSpan'><constructor type='android.text.style.MetricAffectingSpan' name='MetricAffectingSpan'/><method abstract='true' name='updateMeasureState'><parameter type='android.text.TextPaint' name='p'/></method></class><class extends='java.lang.Object' name='QuoteSpan'><constructor type='android.text.style.QuoteSpan' name='QuoteSpan'/><constructor type='android.text.style.QuoteSpan' name='QuoteSpan'><parameter type='int' name='color'/></constructor><method name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' name='getColor'/><method return='int' name='getLeadingMargin'><parameter type='boolean' name='first'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.CharacterStyle' name='RasterizerSpan'><constructor type='android.text.style.RasterizerSpan' name='RasterizerSpan'><parameter type='android.graphics.Rasterizer' name='r'/></constructor><method return='android.graphics.Rasterizer' name='getRasterizer'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='RelativeSizeSpan'><constructor type='android.text.style.RelativeSizeSpan' name='RelativeSizeSpan'><parameter type='float' name='proportion'/></constructor><method return='float' name='getSizeChange'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.MetricAffectingSpan' abstract='true' name='ReplacementSpan'><constructor type='android.text.style.ReplacementSpan' name='ReplacementSpan'/><method abstract='true' name='draw'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='x'/><parameter type='int' name='top'/><parameter type='int' name='y'/><parameter type='int' name='bottom'/><parameter type='android.graphics.Paint' name='paint'/></method><method return='int' abstract='true' name='getSize'><parameter type='android.graphics.Paint' name='paint'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/></method><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='p'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='ScaleXSpan'><constructor type='android.text.style.ScaleXSpan' name='ScaleXSpan'><parameter type='float' name='proportion'/></constructor><method return='float' name='getScaleX'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.CharacterStyle' name='StrikethroughSpan'><constructor type='android.text.style.StrikethroughSpan' name='StrikethroughSpan'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='StyleSpan'><constructor type='android.text.style.StyleSpan' name='StyleSpan'><parameter type='int' name='style'/></constructor><method return='int' name='getStyle'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='paint'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='SubscriptSpan'><constructor type='android.text.style.SubscriptSpan' name='SubscriptSpan'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='tp'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='tp'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='SuperscriptSpan'><constructor type='android.text.style.SuperscriptSpan' name='SuperscriptSpan'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='tp'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='tp'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='TabStopSpan.Standard'><constructor type='android.text.style.TabStopSpan.Standard' name='TabStopSpan.Standard'><parameter type='int' name='where'/></constructor><method return='int' name='getTabStop'/></class><class extends='android.text.style.MetricAffectingSpan' name='TextAppearanceSpan'><constructor type='android.text.style.TextAppearanceSpan' name='TextAppearanceSpan'><parameter type='android.content.Context' name='context'/><parameter type='int' name='appearance'/></constructor><constructor type='android.text.style.TextAppearanceSpan' name='TextAppearanceSpan'><parameter type='android.content.Context' name='context'/><parameter type='int' name='appearance'/><parameter type='int' name='colorList'/></constructor><constructor type='android.text.style.TextAppearanceSpan' name='TextAppearanceSpan'><parameter type='java.lang.String' name='family'/><parameter type='int' name='style'/><parameter type='int' name='size'/><parameter type='android.content.res.ColorStateList' name='color'/><parameter type='android.content.res.ColorStateList' name='linkColor'/></constructor><method return='java.lang.String' name='getFamily'/><method return='android.content.res.ColorStateList' name='getLinkTextColor'/><method return='android.content.res.ColorStateList' name='getTextColor'/><method return='int' name='getTextSize'/><method return='int' name='getTextStyle'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.MetricAffectingSpan' name='TypefaceSpan'><constructor type='android.text.style.TypefaceSpan' name='TypefaceSpan'><parameter type='java.lang.String' name='family'/></constructor><method return='java.lang.String' name='getFamily'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method name='updateMeasureState'><parameter type='android.text.TextPaint' name='paint'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.ClickableSpan' name='URLSpan'><constructor type='android.text.style.URLSpan' name='URLSpan'><parameter type='java.lang.String' name='url'/></constructor><method return='java.lang.String' name='getURL'/><method name='onClick'><parameter type='android.view.View' name='widget'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.text.style.CharacterStyle' name='UnderlineSpan'><constructor type='android.text.style.UnderlineSpan' name='UnderlineSpan'/><method name='updateDrawState'><parameter type='android.text.TextPaint' name='ds'/></method><method return='int' name='describeContents' api_added='3'/><method return='int' name='getSpanTypeId' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='EasyEditSpan' api_added='14'><constructor type='android.text.style.EasyEditSpan' name='EasyEditSpan' api_added='14'/><method return='int' name='describeContents' api_added='14'/><method return='int' name='getSpanTypeId' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='android.text.style.CharacterStyle' name='SuggestionSpan' api_added='14'><constructor type='android.text.style.SuggestionSpan' name='SuggestionSpan' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.text.style.SuggestionSpan' name='SuggestionSpan' api_added='14'><parameter type='java.util.Locale' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.text.style.SuggestionSpan' name='SuggestionSpan' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.util.Locale' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/><parameter type='int' name='arg3'/><parameter type='java.lang.Class&lt;?&gt;' name='arg4'/></constructor><constructor type='android.text.style.SuggestionSpan' name='SuggestionSpan' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='int' name='getFlags' api_added='14'/><method return='java.lang.String' name='getLocale' api_added='14'/><method return='int' name='getSpanTypeId' api_added='14'/><method return='java.lang.String[]' name='getSuggestions' api_added='14'/><method name='setFlags' api_added='14'><parameter type='int' name='arg0'/></method><method name='updateDrawState' api_added='14'><parameter type='android.text.TextPaint' name='arg0'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><interface abstract='true' name='AlignmentSpan'><method return='android.text.Layout.Alignment' abstract='true' name='getAlignment'/></interface><interface abstract='true' name='LeadingMarginSpan'><method abstract='true' name='drawLeadingMargin'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='x'/><parameter type='int' name='dir'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='first'/><parameter type='android.text.Layout' name='layout'/></method><method return='int' abstract='true' name='getLeadingMargin'><parameter type='boolean' name='first'/></method></interface><interface abstract='true' name='LineBackgroundSpan'><method abstract='true' name='drawBackground'><parameter type='android.graphics.Canvas' name='c'/><parameter type='android.graphics.Paint' name='p'/><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='top'/><parameter type='int' name='baseline'/><parameter type='int' name='bottom'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='lnum'/></method></interface><interface abstract='true' name='LineHeightSpan'><method abstract='true' name='chooseHeight'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='spanstartv'/><parameter type='int' name='v'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/></method></interface><interface abstract='true' name='ParagraphStyle'/><interface abstract='true' name='TabStopSpan'><method return='int' abstract='true' name='getTabStop'/></interface><interface abstract='true' name='UpdateLayout'/><interface abstract='true' name='WrapTogetherSpan'/><interface abstract='true' name='UpdateAppearance' api_added='3'/><interface abstract='true' static='true' name='LineHeightSpan.WithDensity' api_added='5'><method abstract='true' name='chooseHeight' api_added='5'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='spanstartv'/><parameter type='int' name='v'/><parameter type='android.graphics.Paint.FontMetricsInt' name='fm'/><parameter type='android.text.TextPaint' name='paint'/></method></interface><interface abstract='true' static='true' name='LeadingMarginSpan.LeadingMarginSpan2' api_added='8'><method return='int' abstract='true' name='getLeadingMarginLineCount' api_added='8'/></interface></package><package name='android.text.util'><class extends='java.lang.Object' name='Linkify'><constructor type='android.text.util.Linkify' name='Linkify'/><method return='boolean' static='true' name='addLinks' final='true'><parameter type='android.text.Spannable' name='text'/><parameter type='int' name='mask'/></method><method return='boolean' static='true' name='addLinks' final='true'><parameter type='android.widget.TextView' name='text'/><parameter type='int' name='mask'/></method><method static='true' name='addLinks' final='true'><parameter type='android.widget.TextView' name='text'/><parameter type='java.util.regex.Pattern' name='pattern'/><parameter type='java.lang.String' name='scheme'/></method><method static='true' name='addLinks' final='true'><parameter type='android.widget.TextView' name='text'/><parameter type='java.util.regex.Pattern' name='p'/><parameter type='java.lang.String' name='scheme'/><parameter type='android.text.util.Linkify.MatchFilter' name='matchFilter'/><parameter type='android.text.util.Linkify.TransformFilter' name='transformFilter'/></method><method return='boolean' static='true' name='addLinks' final='true'><parameter type='android.text.Spannable' name='text'/><parameter type='java.util.regex.Pattern' name='pattern'/><parameter type='java.lang.String' name='scheme'/></method><method return='boolean' static='true' name='addLinks' final='true'><parameter type='android.text.Spannable' name='s'/><parameter type='java.util.regex.Pattern' name='p'/><parameter type='java.lang.String' name='scheme'/><parameter type='android.text.util.Linkify.MatchFilter' name='matchFilter'/><parameter type='android.text.util.Linkify.TransformFilter' name='transformFilter'/></method></class><class extends='java.lang.Object' name='Rfc822Token'><constructor type='android.text.util.Rfc822Token' name='Rfc822Token'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='address'/><parameter type='java.lang.String' name='comment'/></constructor><method return='java.lang.String' name='getAddress'/><method return='java.lang.String' name='getComment'/><method return='java.lang.String' name='getName'/><method return='java.lang.String' static='true' name='quoteComment'><parameter type='java.lang.String' name='comment'/></method><method return='java.lang.String' static='true' name='quoteName'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' static='true' name='quoteNameIfNecessary'><parameter type='java.lang.String' name='name'/></method><method name='setAddress'><parameter type='java.lang.String' name='address'/></method><method name='setComment'><parameter type='java.lang.String' name='comment'/></method><method name='setName'><parameter type='java.lang.String' name='name'/></method></class><class extends='java.lang.Object' name='Rfc822Tokenizer'><constructor type='android.text.util.Rfc822Tokenizer' name='Rfc822Tokenizer'/><method return='int' name='findTokenEnd'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='int' name='findTokenStart'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='java.lang.CharSequence' name='terminateToken'><parameter type='java.lang.CharSequence' name='text'/></method><method return='android.text.util.Rfc822Token[]' static='true' name='tokenize'><parameter type='java.lang.CharSequence' name='text'/></method><method static='true' name='tokenize' api_added='8'><parameter type='java.lang.CharSequence' name='text'/><parameter type='java.util.Collection&lt;android.text.util.Rfc822Token&gt;' name='out'/></method></class><interface abstract='true' static='true' name='Linkify.MatchFilter'><method return='boolean' abstract='true' name='acceptMatch'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method></interface><interface abstract='true' static='true' name='Linkify.TransformFilter'><method return='java.lang.String' abstract='true' name='transformUrl'><parameter type='java.util.regex.Matcher' name='match'/><parameter type='java.lang.String' name='url'/></method></interface></package><package name='android.util'><class extends='java.lang.Exception' name='AndroidException'><constructor type='android.util.AndroidException' name='AndroidException'/><constructor type='android.util.AndroidException' name='AndroidException'><parameter type='java.lang.String' name='name'/></constructor><constructor type='android.util.AndroidException' name='AndroidException'><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='java.lang.RuntimeException' name='AndroidRuntimeException'><constructor type='android.util.AndroidRuntimeException' name='AndroidRuntimeException'/><constructor type='android.util.AndroidRuntimeException' name='AndroidRuntimeException'><parameter type='java.lang.String' name='name'/></constructor><constructor type='android.util.AndroidRuntimeException' name='AndroidRuntimeException'><parameter type='java.lang.Exception' name='cause'/></constructor></class><class extends='java.lang.Object' deprecated='14' name='Config' final='true'><constructor api_removed='12' type='android.util.Config' name='Config'/></class><class extends='java.lang.Object' name='DebugUtils'><constructor api_removed='12' type='android.util.DebugUtils' name='DebugUtils'/><method return='boolean' static='true' name='isObjectSelected'><parameter type='java.lang.Object' name='object'/></method></class><class extends='java.lang.Object' name='DisplayMetrics'><constructor type='android.util.DisplayMetrics' name='DisplayMetrics'/><method name='setTo'><parameter type='android.util.DisplayMetrics' name='o'/></method><method name='setToDefaults'/></class><class extends='java.lang.Object' deprecated='8' name='EventLogTags'><constructor type='android.util.EventLogTags' name='EventLogTags'><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='android.util.EventLogTags' name='EventLogTags'><parameter type='java.io.BufferedReader' name='input'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='android.util.EventLogTags.Description' name='get'><parameter type='java.lang.String' name='name'/></method><method return='android.util.EventLogTags.Description' name='get'><parameter type='int' name='tag'/></method></class><class extends='java.lang.Object' static='true' name='EventLogTags.Description'/><class extends='java.lang.Object' name='FloatMath'><method return='float' native='true' static='true' name='ceil'><parameter type='float' name='value'/></method><method return='float' native='true' static='true' name='cos'><parameter type='float' name='angle'/></method><method return='float' native='true' static='true' name='floor'><parameter type='float' name='value'/></method><method return='float' native='true' static='true' name='sin'><parameter type='float' name='angle'/></method><method return='float' native='true' static='true' name='sqrt'><parameter type='float' name='value'/></method></class><class extends='java.lang.Object' name='Log' final='true'><method return='int' static='true' name='d'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='d'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='e'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='e'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='java.lang.String' static='true' name='getStackTraceString'><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='i'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='i'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='boolean' native='true' static='true' name='isLoggable'><parameter type='java.lang.String' name='tag'/><parameter type='int' name='level'/></method><method return='int' native='true' static='true' name='println'><parameter type='int' name='priority'/><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='v'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='v'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='w'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='w'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='w'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='wtf' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/></method><method return='int' static='true' name='wtf' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.Throwable' name='tr'/></method><method return='int' static='true' name='wtf' api_added='8'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='tr'/></method></class><class extends='java.lang.Object' name='LogPrinter'><constructor type='android.util.LogPrinter' name='LogPrinter'><parameter type='int' name='priority'/><parameter type='java.lang.String' name='tag'/></constructor><method name='println'><parameter type='java.lang.String' name='x'/></method></class><class extends='java.lang.Object' name='MonthDisplayHelper'><constructor type='android.util.MonthDisplayHelper' name='MonthDisplayHelper'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='weekStartDay'/></constructor><constructor type='android.util.MonthDisplayHelper' name='MonthDisplayHelper'><parameter type='int' name='year'/><parameter type='int' name='month'/></constructor><method return='int' name='getColumnOf'><parameter type='int' name='day'/></method><method return='int' name='getDayAt'><parameter type='int' name='row'/><parameter type='int' name='column'/></method><method return='int[]' name='getDigitsForRow'><parameter type='int' name='row'/></method><method return='int' name='getFirstDayOfMonth'/><method return='int' name='getMonth'/><method return='int' name='getNumberOfDaysInMonth'/><method return='int' name='getOffset'/><method return='int' name='getRowOf'><parameter type='int' name='day'/></method><method return='int' name='getWeekStartDay'/><method return='int' name='getYear'/><method return='boolean' name='isWithinCurrentMonth'><parameter type='int' name='row'/><parameter type='int' name='column'/></method><method name='nextMonth'/><method name='previousMonth'/></class><class extends='java.lang.Object' name='PrintWriterPrinter'><constructor type='android.util.PrintWriterPrinter' name='PrintWriterPrinter'><parameter type='java.io.PrintWriter' name='pw'/></constructor><method name='println'><parameter type='java.lang.String' name='x'/></method></class><class extends='java.lang.Object' name='SparseArray'><constructor type='android.util.SparseArray' name='SparseArray'/><constructor type='android.util.SparseArray' name='SparseArray'><parameter type='int' name='initialCapacity'/></constructor><method name='append'><parameter type='int' name='key'/><parameter type='E' name='value'/></method><method name='clear'/><method name='delete'><parameter type='int' name='key'/></method><method return='E' name='get'><parameter type='int' name='key'/></method><method return='E' name='get'><parameter type='int' name='key'/><parameter type='E' name='valueIfKeyNotFound'/></method><method return='int' name='indexOfKey'><parameter type='int' name='key'/></method><method return='int' name='indexOfValue'><parameter type='E' name='value'/></method><method return='int' name='keyAt'><parameter type='int' name='index'/></method><method name='put'><parameter type='int' name='key'/><parameter type='E' name='value'/></method><method name='remove'><parameter type='int' name='key'/></method><method name='setValueAt'><parameter type='int' name='index'/><parameter type='E' name='value'/></method><method return='int' name='size'/><method return='E' name='valueAt'><parameter type='int' name='index'/></method><method name='removeAt' api_added='11'><parameter type='int' name='index'/></method><method return='android.util.SparseArray&lt;E&gt;' name='clone' api_added='14'/></class><class extends='java.lang.Object' name='SparseBooleanArray'><constructor type='android.util.SparseBooleanArray' name='SparseBooleanArray'/><constructor type='android.util.SparseBooleanArray' name='SparseBooleanArray'><parameter type='int' name='initialCapacity'/></constructor><method name='append'><parameter type='int' name='key'/><parameter type='boolean' name='value'/></method><method name='clear'/><method name='delete'><parameter type='int' name='key'/></method><method return='boolean' name='get'><parameter type='int' name='key'/></method><method return='boolean' name='get'><parameter type='int' name='key'/><parameter type='boolean' name='valueIfKeyNotFound'/></method><method return='int' name='indexOfKey'><parameter type='int' name='key'/></method><method return='int' name='indexOfValue'><parameter type='boolean' name='value'/></method><method return='int' name='keyAt'><parameter type='int' name='index'/></method><method name='put'><parameter type='int' name='key'/><parameter type='boolean' name='value'/></method><method return='int' name='size'/><method return='boolean' name='valueAt'><parameter type='int' name='index'/></method><method return='android.util.SparseBooleanArray' name='clone' api_added='14'/></class><class extends='java.lang.Object' name='SparseIntArray'><constructor type='android.util.SparseIntArray' name='SparseIntArray'/><constructor type='android.util.SparseIntArray' name='SparseIntArray'><parameter type='int' name='initialCapacity'/></constructor><method name='append'><parameter type='int' name='key'/><parameter type='int' name='value'/></method><method name='clear'/><method name='delete'><parameter type='int' name='key'/></method><method return='int' name='get'><parameter type='int' name='key'/></method><method return='int' name='get'><parameter type='int' name='key'/><parameter type='int' name='valueIfKeyNotFound'/></method><method return='int' name='indexOfKey'><parameter type='int' name='key'/></method><method return='int' name='indexOfValue'><parameter type='int' name='value'/></method><method return='int' name='keyAt'><parameter type='int' name='index'/></method><method name='put'><parameter type='int' name='key'/><parameter type='int' name='value'/></method><method return='int' name='size'/><method return='int' name='valueAt'><parameter type='int' name='index'/></method><method name='removeAt' api_added='3'><parameter type='int' name='index'/></method><method return='android.util.SparseIntArray' name='clone' api_added='14'/></class><class extends='java.lang.Object' name='StateSet'><constructor api_removed='12' type='android.util.StateSet' name='StateSet'/><method return='java.lang.String' static='true' name='dump'><parameter type='int[]' name='states'/></method><method return='boolean' static='true' name='isWildCard'><parameter type='int[]' name='stateSetOrSpec'/></method><method return='boolean' static='true' name='stateSetMatches'><parameter type='int[]' name='stateSpec'/><parameter type='int[]' name='stateSet'/></method><method return='boolean' static='true' name='stateSetMatches'><parameter type='int[]' name='stateSpec'/><parameter type='int' name='state'/></method><method return='int[]' static='true' name='trimStateSet'><parameter type='int[]' name='states'/><parameter type='int' name='newSize'/></method></class><class extends='java.lang.Object' name='StringBuilderPrinter'><constructor type='android.util.StringBuilderPrinter' name='StringBuilderPrinter'><parameter type='java.lang.StringBuilder' name='builder'/></constructor><method name='println'><parameter type='java.lang.String' name='x'/></method></class><class extends='java.lang.RuntimeException' name='TimeFormatException'/><class extends='java.lang.Object' name='TimeUtils'><constructor api_removed='12' type='android.util.TimeUtils' name='TimeUtils'/><method return='java.util.TimeZone' static='true' name='getTimeZone'><parameter type='int' name='offset'/><parameter type='boolean' name='dst'/><parameter type='long' name='when'/><parameter type='java.lang.String' name='country'/></method><method return='java.lang.String' static='true' name='getTimeZoneDatabaseVersion' api_added='3'/></class><class extends='java.lang.Object' name='TimingLogger'><constructor type='android.util.TimingLogger' name='TimingLogger'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='label'/></constructor><method name='addSplit'><parameter type='java.lang.String' name='splitLabel'/></method><method name='dumpToLog'/><method name='reset'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.String' name='label'/></method><method name='reset'/></class><class extends='java.lang.Object' name='TypedValue'><constructor type='android.util.TypedValue' name='TypedValue'/><method return='float' static='true' name='applyDimension'><parameter type='int' name='unit'/><parameter type='float' name='value'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='java.lang.CharSequence' name='coerceToString' final='true'/><method return='java.lang.String' static='true' name='coerceToString' final='true'><parameter type='int' name='type'/><parameter type='int' name='data'/></method><method return='float' static='true' name='complexToDimension'><parameter type='int' name='data'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='float' static='true' name='complexToDimensionNoisy'><parameter type='int' name='data'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='int' static='true' name='complexToDimensionPixelOffset'><parameter type='int' name='data'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='int' static='true' name='complexToDimensionPixelSize'><parameter type='int' name='data'/><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='float' static='true' name='complexToFloat'><parameter type='int' name='complex'/></method><method return='float' static='true' name='complexToFraction'><parameter type='int' name='data'/><parameter type='float' name='base'/><parameter type='float' name='pbase'/></method><method return='float' name='getDimension'><parameter type='android.util.DisplayMetrics' name='metrics'/></method><method return='float' name='getFloat' final='true'/><method return='float' name='getFraction'><parameter type='float' name='base'/><parameter type='float' name='pbase'/></method><method name='setTo'><parameter type='android.util.TypedValue' name='other'/></method></class><class extends='java.lang.Object' name='Xml'><constructor api_removed='12' type='android.util.Xml' name='Xml'/><method return='android.util.AttributeSet' static='true' name='asAttributeSet'><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/></method><method return='android.util.Xml.Encoding' static='true' name='findEncodingByName'><parameter type='java.lang.String' name='encodingName'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method><method return='org.xmlpull.v1.XmlPullParser' static='true' name='newPullParser'/><method return='org.xmlpull.v1.XmlSerializer' static='true' name='newSerializer'/><method static='true' name='parse'><parameter type='java.lang.String' name='xml'/><parameter type='org.xml.sax.ContentHandler' name='contentHandler'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method static='true' name='parse'><parameter type='java.io.Reader' name='in'/><parameter type='org.xml.sax.ContentHandler' name='contentHandler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method static='true' name='parse'><parameter type='java.io.InputStream' name='in'/><parameter type='android.util.Xml.Encoding' name='encoding'/><parameter type='org.xml.sax.ContentHandler' name='contentHandler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Enum' static='true' name='Xml.Encoding' final='true'><method return='android.util.Xml.Encoding' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.util.Xml.Encoding[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='PrintStreamPrinter' api_added='3'><constructor type='android.util.PrintStreamPrinter' name='PrintStreamPrinter' api_added='3'><parameter type='java.io.PrintStream' name='pw'/></constructor><method name='println' api_added='3'><parameter type='java.lang.String' name='x'/></method></class><class extends='java.lang.Object' name='Pair' api_added='5'><constructor type='android.util.Pair' name='Pair' api_added='5'><parameter type='F' name='first'/><parameter type='S' name='second'/></constructor><method return='android.util.Pair&lt;A, B&gt;' static='true' name='create' api_added='5'><parameter type='A' name='a'/><parameter type='B' name='b'/></method></class><class extends='java.lang.Object' name='Base64' api_added='8'><method return='byte[]' static='true' name='decode' api_added='8'><parameter type='java.lang.String' name='str'/><parameter type='int' name='flags'/></method><method return='byte[]' static='true' name='decode' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='flags'/></method><method return='byte[]' static='true' name='decode' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><parameter type='int' name='flags'/></method><method return='byte[]' static='true' name='encode' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='flags'/></method><method return='byte[]' static='true' name='encode' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='encodeToString' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='encodeToString' api_added='8'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><parameter type='int' name='flags'/></method></class><class extends='java.io.FilterInputStream' name='Base64InputStream' api_added='8'><constructor type='android.util.Base64InputStream' name='Base64InputStream' api_added='8'><parameter type='java.io.InputStream' name='in'/><parameter type='int' name='flags'/></constructor></class><class extends='java.io.FilterOutputStream' name='Base64OutputStream' api_added='8'><constructor type='android.util.Base64OutputStream' name='Base64OutputStream' api_added='8'><parameter type='java.io.OutputStream' name='out'/><parameter type='int' name='flags'/></constructor></class><class extends='java.lang.Object' name='EventLog' api_added='8'><constructor api_removed='12' type='android.util.EventLog' name='EventLog' api_added='8'/><method return='int' static='true' name='getTagCode' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' static='true' name='getTagName' api_added='8'><parameter type='int' name='tag'/></method><method native='true' static='true' name='readEvents' api_added='8'><parameter type='int[]' name='tags'/><parameter type='java.util.Collection&lt;android.util.EventLog.Event&gt;' name='output'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' native='true' static='true' name='writeEvent' api_added='8'><parameter type='int' name='tag'/><parameter type='int' name='value'/></method><method return='int' native='true' static='true' name='writeEvent' api_added='8'><parameter type='int' name='tag'/><parameter type='long' name='value'/></method><method return='int' native='true' static='true' name='writeEvent' api_added='8'><parameter type='int' name='tag'/><parameter type='java.lang.String' name='str'/></method><method return='int' native='true' static='true' name='writeEvent' api_added='8'><parameter type='int' name='tag'/><parameter type='java.lang.Object...' name='list'/></method></class><class extends='java.lang.Object' static='true' name='EventLog.Event' api_added='8' final='true'><method return='java.lang.Object' synchronized='true' name='getData' api_added='8'/><method return='int' name='getProcessId' api_added='8'/><method return='int' name='getTag' api_added='8'/><method return='int' name='getThreadId' api_added='8'/><method return='long' name='getTimeNanos' api_added='8'/></class><class extends='java.lang.Object' name='Patterns' api_added='8'><method return='java.lang.String' static='true' name='concatGroups' api_added='8' final='true'><parameter type='java.util.regex.Matcher' name='matcher'/></method><method return='java.lang.String' static='true' name='digitsAndPlusOnly' api_added='8' final='true'><parameter type='java.util.regex.Matcher' name='matcher'/></method></class><class extends='java.io.IOException' name='Base64DataException' api_added='11'><constructor type='android.util.Base64DataException' name='Base64DataException' api_added='11'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='JsonReader' api_added='11' final='true'><constructor type='android.util.JsonReader' name='JsonReader' api_added='11'><parameter type='java.io.Reader' name='in'/></constructor><method name='beginArray' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='beginObject' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='close' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='endArray' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='endObject' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='hasNext' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isLenient' api_added='11'/><method return='boolean' name='nextBoolean' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='double' name='nextDouble' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='nextInt' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='nextLong' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='nextName' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='nextNull' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='nextString' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonToken' name='peek' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='setLenient' api_added='11'><parameter type='boolean' name='lenient'/></method><method name='skipValue' api_added='11'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Enum' name='JsonToken' api_added='11' final='true'><method return='android.util.JsonToken' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.util.JsonToken[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' name='JsonWriter' api_added='11' final='true'><constructor type='android.util.JsonWriter' name='JsonWriter' api_added='11'><parameter type='java.io.Writer' name='out'/></constructor><method return='android.util.JsonWriter' name='beginArray' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='beginObject' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='close' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='endArray' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='endObject' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='flush' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isLenient' api_added='11'/><method return='android.util.JsonWriter' name='name' api_added='11'><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='nullValue' api_added='11'><exception type='java.io.IOException' name='IOException'/></method><method name='setIndent' api_added='11'><parameter type='java.lang.String' name='indent'/></method><method name='setLenient' api_added='11'><parameter type='boolean' name='lenient'/></method><method return='android.util.JsonWriter' name='value' api_added='11'><parameter type='java.lang.String' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='value' api_added='11'><parameter type='boolean' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='value' api_added='11'><parameter type='double' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='value' api_added='11'><parameter type='long' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.util.JsonWriter' name='value' api_added='11'><parameter type='java.lang.Number' name='value'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='MalformedJsonException' api_added='11' final='true'><constructor type='android.util.MalformedJsonException' name='MalformedJsonException' api_added='11'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='LruCache' api_added='12'><constructor type='android.util.LruCache' name='LruCache' api_added='12'><parameter type='int' name='maxSize'/></constructor><method visibility='protected' return='V' name='create' api_added='12'><parameter type='K' name='key'/></method><method return='int' synchronized='true' name='createCount' api_added='12' final='true'/><method visibility='protected' name='entryRemoved' api_added='12'><parameter type='boolean' name='evicted'/><parameter type='K' name='key'/><parameter type='V' name='oldValue'/><parameter type='V' name='newValue'/></method><method name='evictAll' api_added='12' final='true'/><method return='int' synchronized='true' name='evictionCount' api_added='12' final='true'/><method return='V' name='get' api_added='12' final='true'><parameter type='K' name='key'/></method><method return='int' synchronized='true' name='hitCount' api_added='12' final='true'/><method return='int' synchronized='true' name='maxSize' api_added='12' final='true'/><method return='int' synchronized='true' name='missCount' api_added='12' final='true'/><method return='V' name='put' api_added='12' final='true'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='int' synchronized='true' name='putCount' api_added='12' final='true'/><method return='V' name='remove' api_added='12' final='true'><parameter type='K' name='key'/></method><method return='int' synchronized='true' name='size' api_added='12' final='true'/><method visibility='protected' return='int' name='sizeOf' api_added='12'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='java.util.Map&lt;K, V&gt;' synchronized='true' name='snapshot' api_added='12' final='true'/><method return='java.lang.String' synchronized='true' name='toString' api_added='12' final='true'/></class><class extends='java.lang.RuntimeException' name='NoSuchPropertyException' api_added='14'><constructor type='android.util.NoSuchPropertyException' name='NoSuchPropertyException' api_added='14'><parameter type='java.lang.String' name='arg0'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Property' api_added='14'><constructor type='android.util.Property' name='Property' api_added='14'><parameter type='java.lang.Class&lt;V&gt;' name='arg0'/><parameter type='java.lang.String' name='arg1'/></constructor><method return='V' abstract='true' name='get' api_added='14'><parameter type='T' name='arg0'/></method><method return='java.lang.String' name='getName' api_added='14'/><method return='java.lang.Class&lt;V&gt;' name='getType' api_added='14'/><method return='boolean' name='isReadOnly' api_added='14'/><method return='android.util.Property&lt;T, V&gt;' static='true' name='of' api_added='14'><parameter type='java.lang.Class&lt;T&gt;' name='arg0'/><parameter type='java.lang.Class&lt;V&gt;' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method><method name='set' api_added='14'><parameter type='T' name='arg0'/><parameter type='V' name='arg1'/></method></class><class extends='java.lang.Object' name='LongSparseArray' api_added='16'><constructor type='android.util.LongSparseArray' name='LongSparseArray' api_added='16'/><constructor type='android.util.LongSparseArray' name='LongSparseArray' api_added='16'><parameter type='int' name='arg0'/></constructor><method name='append' api_added='16'><parameter type='long' name='arg0'/><parameter type='E' name='arg1'/></method><method name='clear' api_added='16'/><method return='android.util.LongSparseArray&lt;E&gt;' name='clone' api_added='16'/><method name='delete' api_added='16'><parameter type='long' name='arg0'/></method><method return='E' name='get' api_added='16'><parameter type='long' name='arg0'/></method><method return='E' name='get' api_added='16'><parameter type='long' name='arg0'/><parameter type='E' name='arg1'/></method><method return='int' name='indexOfKey' api_added='16'><parameter type='long' name='arg0'/></method><method return='int' name='indexOfValue' api_added='16'><parameter type='E' name='arg0'/></method><method return='long' name='keyAt' api_added='16'><parameter type='int' name='arg0'/></method><method name='put' api_added='16'><parameter type='long' name='arg0'/><parameter type='E' name='arg1'/></method><method name='remove' api_added='16'><parameter type='long' name='arg0'/></method><method name='removeAt' api_added='16'><parameter type='int' name='arg0'/></method><method name='setValueAt' api_added='16'><parameter type='int' name='arg0'/><parameter type='E' name='arg1'/></method><method return='int' name='size' api_added='16'/><method return='E' name='valueAt' api_added='16'><parameter type='int' name='arg0'/></method></class><interface abstract='true' name='AttributeSet'><method return='boolean' abstract='true' name='getAttributeBooleanValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='boolean' name='defaultValue'/></method><method return='boolean' abstract='true' name='getAttributeBooleanValue'><parameter type='int' name='index'/><parameter type='boolean' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeCount'/><method return='float' abstract='true' name='getAttributeFloatValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='float' name='defaultValue'/></method><method return='float' abstract='true' name='getAttributeFloatValue'><parameter type='int' name='index'/><parameter type='float' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeIntValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeIntValue'><parameter type='int' name='index'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeListValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='java.lang.String[]' name='options'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeListValue'><parameter type='int' name='index'/><parameter type='java.lang.String[]' name='options'/><parameter type='int' name='defaultValue'/></method><method return='java.lang.String' abstract='true' name='getAttributeName'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getAttributeNameResource'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getAttributeResourceValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeResourceValue'><parameter type='int' name='index'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeUnsignedIntValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='attribute'/><parameter type='int' name='defaultValue'/></method><method return='int' abstract='true' name='getAttributeUnsignedIntValue'><parameter type='int' name='index'/><parameter type='int' name='defaultValue'/></method><method return='java.lang.String' abstract='true' name='getAttributeValue'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributeValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getClassAttribute'/><method return='java.lang.String' abstract='true' name='getIdAttribute'/><method return='int' abstract='true' name='getIdAttributeResourceValue'><parameter type='int' name='defaultValue'/></method><method return='java.lang.String' abstract='true' name='getPositionDescription'/><method return='int' abstract='true' name='getStyleAttribute'/></interface><interface abstract='true' name='Printer'><method abstract='true' name='println'><parameter type='java.lang.String' name='x'/></method></interface></package><package name='android.view'><class extends='java.lang.Object' abstract='true' name='AbsSavedState'><constructor visibility='protected' type='android.view.AbsSavedState' name='AbsSavedState'><parameter type='android.os.Parcelable' name='superState'/></constructor><constructor visibility='protected' type='android.view.AbsSavedState' name='AbsSavedState'><parameter type='android.os.Parcel' name='source'/></constructor><method return='int' name='describeContents'/><method return='android.os.Parcelable' name='getSuperState' final='true'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.content.ContextWrapper' name='ContextThemeWrapper'><constructor type='android.view.ContextThemeWrapper' name='ContextThemeWrapper'/><constructor type='android.view.ContextThemeWrapper' name='ContextThemeWrapper'><parameter type='android.content.Context' name='base'/><parameter type='int' name='themeres'/></constructor><method visibility='protected' name='onApplyThemeResource'><parameter type='android.content.res.Resources.Theme' name='theme'/><parameter type='int' name='resid'/><parameter type='boolean' name='first'/></method></class><class extends='java.lang.Object' name='Display'><method return='int' name='getDisplayId'/><method deprecated='13' return='int' native='true' name='getHeight'/><method name='getMetrics'><parameter type='android.util.DisplayMetrics' name='outMetrics'/></method><method deprecated='8' return='int' native='true' name='getOrientation'/><method return='int' name='getPixelFormat'/><method return='float' name='getRefreshRate'/><method deprecated='13' return='int' native='true' name='getWidth'/><method return='int' name='getRotation' api_added='8'/><method name='getRectSize' api_added='13'><parameter type='android.graphics.Rect' name='outSize'/></method><method name='getSize' api_added='13'><parameter type='android.graphics.Point' name='outSize'/></method><method name='getCurrentSizeRange' api_added='16'><parameter type='android.graphics.Point' name='arg0'/><parameter type='android.graphics.Point' name='arg1'/></method></class><class extends='java.lang.Object' name='FocusFinder'><method return='android.view.View' name='findNearestTouchable'><parameter type='android.view.ViewGroup' name='root'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='direction'/><parameter type='int[]' name='deltas'/></method><method return='android.view.View' name='findNextFocus' final='true'><parameter type='android.view.ViewGroup' name='root'/><parameter type='android.view.View' name='focused'/><parameter type='int' name='direction'/></method><method return='android.view.View' name='findNextFocusFromRect'><parameter type='android.view.ViewGroup' name='root'/><parameter type='android.graphics.Rect' name='focusedRect'/><parameter type='int' name='direction'/></method><method return='android.view.FocusFinder' static='true' name='getInstance'/></class><class extends='java.lang.Object' name='GestureDetector'><constructor deprecated='3' type='android.view.GestureDetector' name='GestureDetector'><parameter type='android.view.GestureDetector.OnGestureListener' name='listener'/><parameter type='android.os.Handler' name='handler'/></constructor><constructor type='android.view.GestureDetector' name='GestureDetector'><parameter type='android.view.GestureDetector.OnGestureListener' name='listener'/></constructor><constructor type='android.view.deprecated GestureDetector' name='deprecated GestureDetector' api_added='14'><parameter type='android.view.GestureDetector.OnGestureListener' name='arg0'/><parameter type='android.os.Handler' name='arg1'/></constructor><constructor type='android.view.deprecated GestureDetector' name='deprecated GestureDetector' api_added='14'><parameter type='android.view.GestureDetector.OnGestureListener' name='arg0'/><parameter type='android.os.Handler' name='arg1'/></constructor><method return='boolean' name='isLongpressEnabled'/><method return='boolean' name='onTouchEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method name='setIsLongpressEnabled'><parameter type='boolean' name='isLongpressEnabled'/></method><method name='setOnDoubleTapListener' api_added='3'><parameter type='android.view.GestureDetector.OnDoubleTapListener' name='onDoubleTapListener'/></method></class><class extends='java.lang.Object' static='true' name='GestureDetector.SimpleOnGestureListener'><constructor type='android.view.GestureDetector.SimpleOnGestureListener' name='GestureDetector.SimpleOnGestureListener'/><method return='boolean' name='onDown'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onFling'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='velocityX'/><parameter type='float' name='velocityY'/></method><method name='onLongPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onScroll'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='distanceX'/><parameter type='float' name='distanceY'/></method><method name='onShowPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onSingleTapUp'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onDoubleTap' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onDoubleTapEvent' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onSingleTapConfirmed' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method></class><class extends='java.lang.Object' name='Gravity'><constructor type='android.view.Gravity' name='Gravity'/><method static='true' name='apply'><parameter type='int' name='gravity'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='android.graphics.Rect' name='container'/><parameter type='android.graphics.Rect' name='outRect'/></method><method static='true' name='apply'><parameter type='int' name='gravity'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='android.graphics.Rect' name='container'/><parameter type='int' name='xAdj'/><parameter type='int' name='yAdj'/><parameter type='android.graphics.Rect' name='outRect'/></method><method return='boolean' static='true' name='isHorizontal'><parameter type='int' name='gravity'/></method><method return='boolean' static='true' name='isVertical'><parameter type='int' name='gravity'/></method><method static='true' name='applyDisplay' api_added='3'><parameter type='int' name='gravity'/><parameter type='android.graphics.Rect' name='display'/><parameter type='android.graphics.Rect' name='inoutObj'/></method><method return='int' api_removed='16' static='true' name='getAbsoluteGravity' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.RuntimeException' name='InflateException'><constructor type='android.view.InflateException' name='InflateException'/><constructor type='android.view.InflateException' name='InflateException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='throwable'/></constructor><constructor type='android.view.InflateException' name='InflateException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='android.view.InflateException' name='InflateException'><parameter type='java.lang.Throwable' name='throwable'/></constructor></class><class extends='java.lang.Object' name='KeyCharacterMap'><method return='int' name='get'><parameter type='int' name='keyCode'/><parameter type='int' name='meta'/></method><method return='int' static='true' name='getDeadChar'><parameter type='int' name='accent'/><parameter type='int' name='c'/></method><method return='char' name='getDisplayLabel'><parameter type='int' name='keyCode'/></method><method return='android.view.KeyEvent[]' name='getEvents'><parameter type='char[]' name='chars'/></method><method deprecated='11' return='boolean' name='getKeyData'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyCharacterMap.KeyData' name='results'/></method><method return='int' name='getKeyboardType'/><method return='char' name='getMatch'><parameter type='int' name='keyCode'/><parameter type='char[]' name='chars'/></method><method return='char' name='getMatch'><parameter type='int' name='keyCode'/><parameter type='char[]' name='chars'/><parameter type='int' name='modifiers'/></method><method return='char' name='getNumber'><parameter type='int' name='keyCode'/></method><method return='boolean' name='isPrintingKey'><parameter type='int' name='keyCode'/></method><method return='android.view.KeyCharacterMap' static='true' name='load'><parameter type='int' name='keyboard'/></method><method return='boolean' static='true' name='deviceHasKey' api_added='3'><parameter type='int' name='keyCode'/></method><method return='boolean[]' static='true' name='deviceHasKeys' api_added='3'><parameter type='int[]' name='keyCodes'/></method><method return='int' name='getModifierBehavior' api_added='11'/><method return='int' name='describeContents' api_added='16'/><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' deprecated='11' static='true' name='KeyCharacterMap.KeyData'><constructor type='android.view.KeyCharacterMap.KeyData' name='KeyCharacterMap.KeyData'/></class><class extends='java.lang.Object' name='KeyEvent'><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='int' name='action'/><parameter type='int' name='code'/></constructor><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='code'/><parameter type='int' name='repeat'/></constructor><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='code'/><parameter type='int' name='repeat'/><parameter type='int' name='metaState'/></constructor><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='code'/><parameter type='int' name='repeat'/><parameter type='int' name='metaState'/><parameter type='int' name='device'/><parameter type='int' name='scancode'/></constructor><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='code'/><parameter type='int' name='repeat'/><parameter type='int' name='metaState'/><parameter type='int' name='device'/><parameter type='int' name='scancode'/><parameter type='int' name='flags'/></constructor><constructor type='android.view.KeyEvent' name='KeyEvent'><parameter type='android.view.KeyEvent' name='origEvent'/><parameter type='long' name='eventTime'/><parameter type='int' name='newRepeat'/></constructor><constructor type='android.view.deprecated KeyEvent' name='deprecated KeyEvent' api_added='14'><parameter type='android.view.KeyEvent' name='arg0'/><parameter type='long' name='arg1'/><parameter type='int' name='arg2'/></constructor><method return='int' api_removed='9' name='describeContents'/><method deprecated='5' return='boolean' name='dispatch' final='true'><parameter type='android.view.KeyEvent.Callback' name='receiver'/></method><method return='int' name='getAction' final='true'/><method return='int' static='true' name='getDeadChar'><parameter type='int' name='accent'/><parameter type='int' name='c'/></method><method return='int' api_removed='9' name='getDeviceId' final='true'/><method return='char' name='getDisplayLabel'/><method return='long' name='getDownTime' final='true'/><method return='long' name='getEventTime' final='true'/><method return='int' name='getFlags' final='true'/><method return='int' name='getKeyCode' final='true'/><method deprecated='11' return='boolean' name='getKeyData'><parameter type='android.view.KeyCharacterMap.KeyData' name='results'/></method><method return='char' name='getMatch'><parameter type='char[]' name='chars'/></method><method return='char' name='getMatch'><parameter type='char[]' name='chars'/><parameter type='int' name='modifiers'/></method><method return='int' name='getMetaState' final='true'/><method return='char' name='getNumber'/><method return='int' name='getRepeatCount' final='true'/><method return='int' name='getScanCode' final='true'/><method return='int' name='getUnicodeChar'/><method return='int' name='getUnicodeChar'><parameter type='int' name='meta'/></method><method return='boolean' name='isAltPressed' final='true'/><method return='boolean' static='true' name='isModifierKey'><parameter type='int' name='keyCode'/></method><method return='boolean' name='isPrintingKey'/><method return='boolean' name='isShiftPressed' final='true'/><method return='boolean' name='isSymPressed' final='true'/><method return='boolean' name='isSystem' final='true'/><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='android.view.KeyEvent' static='true' name='changeAction' api_added='3'><parameter type='android.view.KeyEvent' name='event'/><parameter type='int' name='action'/></method><method return='android.view.KeyEvent' static='true' name='changeFlags' api_added='3'><parameter type='android.view.KeyEvent' name='event'/><parameter type='int' name='flags'/></method><method return='android.view.KeyEvent' static='true' name='changeTimeRepeat' api_added='3'><parameter type='android.view.KeyEvent' name='event'/><parameter type='long' name='eventTime'/><parameter type='int' name='newRepeat'/></method><method return='java.lang.String' name='getCharacters' api_added='3' final='true'/><method return='int' static='true' name='getMaxKeyCode' api_added='3'/><method return='android.view.KeyEvent' static='true' name='changeTimeRepeat' api_added='5'><parameter type='android.view.KeyEvent' name='event'/><parameter type='long' name='eventTime'/><parameter type='int' name='newRepeat'/><parameter type='int' name='newFlags'/></method><method return='boolean' name='dispatch' api_added='5' final='true'><parameter type='android.view.KeyEvent.Callback' name='receiver'/><parameter type='android.view.KeyEvent.DispatcherState' name='state'/><parameter type='java.lang.Object' name='target'/></method><method return='boolean' name='isCanceled' api_added='5' final='true'/><method return='boolean' name='isLongPress' api_added='5' final='true'/><method return='boolean' name='isTracking' api_added='5' final='true'/><method name='startTracking' api_added='5' final='true'/><method return='android.view.KeyCharacterMap' name='getKeyCharacterMap' api_added='11' final='true'/><method return='int' static='true' name='getModifierMetaStateMask' api_added='11'/><method return='boolean' name='hasModifiers' api_added='11' final='true'><parameter type='int' name='modifiers'/></method><method return='boolean' name='hasNoModifiers' api_added='11' final='true'/><method return='boolean' name='isCapsLockOn' api_added='11' final='true'/><method return='boolean' name='isCtrlPressed' api_added='11' final='true'/><method return='boolean' name='isFunctionPressed' api_added='11' final='true'/><method return='boolean' name='isMetaPressed' api_added='11' final='true'/><method return='boolean' name='isNumLockOn' api_added='11' final='true'/><method return='boolean' name='isScrollLockOn' api_added='11' final='true'/><method return='boolean' static='true' name='metaStateHasModifiers' api_added='11'><parameter type='int' name='metaState'/><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='metaStateHasNoModifiers' api_added='11'><parameter type='int' name='metaState'/></method><method return='int' static='true' name='normalizeMetaState' api_added='11'><parameter type='int' name='metaState'/></method><method return='int' name='getSource' api_added='12' final='true'/><method return='boolean' static='true' name='isGamepadButton' api_added='12' final='true'><parameter type='int' name='keyCode'/></method><method return='int' static='true' name='keyCodeFromString' api_added='12'><parameter type='java.lang.String' name='symbolicName'/></method><method return='java.lang.String' static='true' name='keyCodeToString' api_added='12'><parameter type='int' name='keyCode'/></method><method name='setSource' api_added='12' final='true'><parameter type='int' name='source'/></method><method return='int' name='getModifiers' api_added='13' final='true'/></class><class extends='java.lang.Object' abstract='true' name='LayoutInflater'><constructor visibility='protected' type='android.view.LayoutInflater' name='LayoutInflater'><parameter type='android.content.Context' name='context'/></constructor><constructor visibility='protected' type='android.view.LayoutInflater' name='LayoutInflater'><parameter type='android.view.LayoutInflater' name='original'/><parameter type='android.content.Context' name='newContext'/></constructor><method return='android.view.LayoutInflater' abstract='true' name='cloneInContext'><parameter type='android.content.Context' name='newContext'/></method><method return='android.view.View' name='createView' final='true'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='prefix'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='android.view.InflateException' name='InflateException'/></method><method return='android.view.LayoutInflater' static='true' name='from'><parameter type='android.content.Context' name='context'/></method><method return='android.content.Context' name='getContext'/><method return='android.view.LayoutInflater.Factory' name='getFactory' final='true'/><method return='android.view.LayoutInflater.Filter' name='getFilter'/><method return='android.view.View' name='inflate'><parameter type='int' name='resource'/><parameter type='android.view.ViewGroup' name='root'/></method><method return='android.view.View' name='inflate'><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.view.ViewGroup' name='root'/></method><method return='android.view.View' name='inflate'><parameter type='int' name='resource'/><parameter type='android.view.ViewGroup' name='root'/><parameter type='boolean' name='attachToRoot'/></method><method return='android.view.View' name='inflate'><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='android.view.ViewGroup' name='root'/><parameter type='boolean' name='attachToRoot'/></method><method visibility='protected' return='android.view.View' name='onCreateView'><parameter type='java.lang.String' name='name'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method name='setFactory'><parameter type='android.view.LayoutInflater.Factory' name='factory'/></method><method name='setFilter'><parameter type='android.view.LayoutInflater.Filter' name='filter'/></method><method return='android.view.LayoutInflater.Factory2' name='getFactory2' api_added='11' final='true'/><method visibility='protected' return='android.view.View' name='onCreateView' api_added='11'><parameter type='android.view.View' name='parent'/><parameter type='java.lang.String' name='name'/><parameter type='android.util.AttributeSet' name='attrs'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method name='setFactory2' api_added='11'><parameter type='android.view.LayoutInflater.Factory2' name='factory'/></method></class><class extends='java.lang.Object' name='MenuInflater'><constructor type='android.view.MenuInflater' name='MenuInflater'><parameter type='android.content.Context' name='context'/></constructor><method name='inflate'><parameter type='int' name='menuRes'/><parameter type='android.view.Menu' name='menu'/></method></class><class extends='java.lang.Object' name='MotionEvent' final='true'><method name='addBatch' final='true'><parameter type='long' name='eventTime'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='pressure'/><parameter type='float' name='size'/><parameter type='int' name='metaState'/></method><method return='int' api_removed='9' name='describeContents'/><method return='int' name='getAction' final='true'/><method return='int' api_removed='9' name='getDeviceId' final='true'/><method return='long' name='getDownTime' final='true'/><method return='int' name='getEdgeFlags' final='true'/><method return='long' name='getEventTime' final='true'/><method return='long' name='getHistoricalEventTime' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalPressure' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalSize' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalX' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalY' final='true'><parameter type='int' name='pos'/></method><method return='int' name='getHistorySize' final='true'/><method return='int' name='getMetaState' final='true'/><method return='float' name='getPressure' final='true'/><method return='float' name='getRawX' final='true'/><method return='float' name='getRawY' final='true'/><method return='float' name='getSize' final='true'/><method return='float' name='getX' final='true'/><method return='float' name='getXPrecision' final='true'/><method return='float' name='getY' final='true'/><method return='float' name='getYPrecision' final='true'/><method return='android.view.MotionEvent' static='true' name='obtain'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='pressure'/><parameter type='float' name='size'/><parameter type='int' name='metaState'/><parameter type='float' name='xPrecision'/><parameter type='float' name='yPrecision'/><parameter type='int' name='deviceId'/><parameter type='int' name='edgeFlags'/></method><method return='android.view.MotionEvent' static='true' name='obtain'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='int' name='metaState'/></method><method return='android.view.MotionEvent' static='true' name='obtain'><parameter type='android.view.MotionEvent' name='o'/></method><method name='offsetLocation' final='true'><parameter type='float' name='deltaX'/><parameter type='float' name='deltaY'/></method><method name='recycle'/><method name='setAction' final='true'><parameter type='int' name='action'/></method><method name='setEdgeFlags' final='true'><parameter type='int' name='flags'/></method><method name='setLocation' final='true'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='int' name='findPointerIndex' api_added='5' final='true'><parameter type='int' name='pointerId'/></method><method return='float' name='getHistoricalPressure' api_added='5' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalSize' api_added='5' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalX' api_added='5' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalY' api_added='5' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='int' name='getPointerCount' api_added='5' final='true'/><method return='int' name='getPointerId' api_added='5' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getPressure' api_added='5' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getSize' api_added='5' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getX' api_added='5' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getY' api_added='5' final='true'><parameter type='int' name='pointerIndex'/></method><method deprecated='9' return='android.view.MotionEvent' static='true' name='obtain' api_added='5'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='pointers'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='pressure'/><parameter type='float' name='size'/><parameter type='int' name='metaState'/><parameter type='float' name='xPrecision'/><parameter type='float' name='yPrecision'/><parameter type='int' name='deviceId'/><parameter type='int' name='edgeFlags'/></method><method return='android.view.MotionEvent' static='true' name='obtainNoHistory' api_added='5'><parameter type='android.view.MotionEvent' name='o'/></method><method return='int' name='getActionIndex' api_added='8' final='true'/><method return='int' name='getActionMasked' api_added='8' final='true'/><method name='addBatch' api_added='9' final='true'><parameter type='long' name='eventTime'/><parameter type='android.view.MotionEvent.PointerCoords[]' name='pointerCoords'/><parameter type='int' name='metaState'/></method><method return='int' name='getFlags' api_added='9' final='true'/><method return='float' name='getHistoricalOrientation' api_added='9' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalOrientation' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method name='getHistoricalPointerCoords' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/><parameter type='android.view.MotionEvent.PointerCoords' name='outPointerCoords'/></method><method return='float' name='getHistoricalToolMajor' api_added='9' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalToolMajor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalToolMinor' api_added='9' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalToolMinor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalTouchMajor' api_added='9' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalTouchMajor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalTouchMinor' api_added='9' final='true'><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalTouchMinor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='float' name='getOrientation' api_added='9' final='true'/><method return='float' name='getOrientation' api_added='9' final='true'><parameter type='int' name='pointerIndex'/></method><method name='getPointerCoords' api_added='9' final='true'><parameter type='int' name='pointerIndex'/><parameter type='android.view.MotionEvent.PointerCoords' name='outPointerCoords'/></method><method return='float' name='getToolMajor' api_added='9' final='true'/><method return='float' name='getToolMajor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getToolMinor' api_added='9' final='true'/><method return='float' name='getToolMinor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getTouchMajor' api_added='9' final='true'/><method return='float' name='getTouchMajor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/></method><method return='float' name='getTouchMinor' api_added='9' final='true'/><method return='float' name='getTouchMinor' api_added='9' final='true'><parameter type='int' name='pointerIndex'/></method><method deprecated='14' return='android.view.MotionEvent' static='true' name='obtain' api_added='9'><parameter type='long' name='downTime'/><parameter type='long' name='eventTime'/><parameter type='int' name='action'/><parameter type='int' name='pointers'/><parameter type='int[]' name='pointerIds'/><parameter type='android.view.MotionEvent.PointerCoords[]' name='pointerCoords'/><parameter type='int' name='metaState'/><parameter type='float' name='xPrecision'/><parameter type='float' name='yPrecision'/><parameter type='int' name='deviceId'/><parameter type='int' name='edgeFlags'/><parameter type='int' name='source'/><parameter type='int' name='flags'/></method><method name='transform' api_added='11' final='true'><parameter type='android.graphics.Matrix' name='matrix'/></method><method return='int' static='true' name='axisFromString' api_added='12'><parameter type='java.lang.String' name='symbolicName'/></method><method return='java.lang.String' static='true' name='axisToString' api_added='12'><parameter type='int' name='axis'/></method><method return='float' name='getAxisValue' api_added='12' final='true'><parameter type='int' name='axis'/></method><method return='float' name='getAxisValue' api_added='12' final='true'><parameter type='int' name='axis'/><parameter type='int' name='pointerIndex'/></method><method return='float' name='getHistoricalAxisValue' api_added='12' final='true'><parameter type='int' name='axis'/><parameter type='int' name='pos'/></method><method return='float' name='getHistoricalAxisValue' api_added='12' final='true'><parameter type='int' name='axis'/><parameter type='int' name='pointerIndex'/><parameter type='int' name='pos'/></method><method return='int' name='getSource' api_added='12' final='true'/><method name='setSource' api_added='12' final='true'><parameter type='int' name='source'/></method><method return='int' name='getButtonState' api_added='14' final='true'/><method name='getPointerProperties' api_added='14' final='true'><parameter type='int' name='arg0'/><parameter type='android.view.MotionEvent.PointerProperties' name='arg1'/></method><method return='int' name='getToolType' api_added='14' final='true'><parameter type='int' name='arg0'/></method><method return='android.view.MotionEvent' static='true' name='obtain' api_added='14'><parameter type='long' name='arg0'/><parameter type='long' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='android.view.MotionEvent.PointerProperties[]' name='arg4'/><parameter type='android.view.MotionEvent.PointerCoords[]' name='arg5'/><parameter type='int' name='arg6'/><parameter type='int' name='arg7'/><parameter type='float' name='arg8'/><parameter type='float' name='arg9'/><parameter type='int' name='arg10'/><parameter type='int' name='arg11'/><parameter type='int' name='arg12'/><parameter type='int' name='arg13'/></method></class><class extends='java.lang.Object' deprecated='3' abstract='true' name='OrientationListener'><constructor type='android.view.OrientationListener' name='OrientationListener'><parameter type='android.content.Context' name='context'/></constructor><method name='disable'/><method name='enable'/><method name='onAccuracyChanged'><parameter type='int' name='sensor'/><parameter type='int' name='accuracy'/></method><method abstract='true' name='onOrientationChanged'><parameter type='int' name='orientation'/></method><method name='onSensorChanged'><parameter type='int' name='sensor'/><parameter type='float[]' name='values'/></method></class><class extends='java.lang.Object' name='SoundEffectConstants'><method return='int' static='true' name='getContantForFocusDirection'><parameter type='int' name='direction'/></method></class><class extends='java.lang.Object' name='Surface'><constructor type='android.view.Surface' name='Surface' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></constructor><method return='int' name='describeContents'/><method native='true' api_removed='14' name='freeze'/><method native='true' api_removed='14' name='hide'/><method return='boolean' native='true' name='isValid'/><method return='android.graphics.Canvas' name='lockCanvas'><parameter type='android.graphics.Rect' name='dirty'/><exception type='android.view.Surface.OutOfResourcesException' name='Surface.OutOfResourcesException'/></method><method native='true' name='readFromParcel'><parameter type='android.os.Parcel' name='source'/></method><method native='true' api_removed='14' name='setAlpha'><parameter type='float' name='alpha'/></method><method native='true' api_removed='14' name='setFlags'><parameter type='int' name='flags'/><parameter type='int' name='mask'/></method><method native='true' api_removed='14' name='setFreezeTint'><parameter type='int' name='tint'/></method><method native='true' api_removed='14' name='setLayer'><parameter type='int' name='zorder'/></method><method native='true' api_removed='14' name='setMatrix'><parameter type='float' name='dsdx'/><parameter type='float' name='dtdx'/><parameter type='float' name='dsdy'/><parameter type='float' name='dtdy'/></method><method native='true' api_removed='14' static='true' name='setOrientation'><parameter type='int' name='display'/><parameter type='int' name='orientation'/></method><method native='true' api_removed='14' name='setPosition'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method native='true' api_removed='14' name='setSize'><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method native='true' api_removed='14' name='setTransparentRegionHint'><parameter type='android.graphics.Region' name='region'/></method><method native='true' api_removed='14' name='show'/><method native='true' api_removed='14' name='unfreeze'/><method native='true' name='unlockCanvas'><parameter type='android.graphics.Canvas' name='canvas'/></method><method native='true' name='unlockCanvasAndPost'><parameter type='android.graphics.Canvas' name='canvas'/></method><method native='true' name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method name='release' api_added='14'/></class><class extends='java.lang.Exception' static='true' name='Surface.OutOfResourcesException'><constructor type='android.view.Surface.OutOfResourcesException' name='Surface.OutOfResourcesException'/><constructor type='android.view.Surface.OutOfResourcesException' name='Surface.OutOfResourcesException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='java.lang.RuntimeException' static='true' name='SurfaceHolder.BadSurfaceTypeException'><constructor type='android.view.SurfaceHolder.BadSurfaceTypeException' name='SurfaceHolder.BadSurfaceTypeException'/><constructor type='android.view.SurfaceHolder.BadSurfaceTypeException' name='SurfaceHolder.BadSurfaceTypeException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='android.view.View' name='SurfaceView'><constructor type='android.view.SurfaceView' name='SurfaceView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.view.SurfaceView' name='SurfaceView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.SurfaceView' name='SurfaceView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='gatherTransparentRegion'><parameter type='android.graphics.Region' name='region'/></method><method return='android.view.SurfaceHolder' name='getHolder'/><method name='setZOrderMediaOverlay' api_added='5'><parameter type='boolean' name='isMediaOverlay'/></method><method name='setZOrderOnTop' api_added='5'><parameter type='boolean' name='onTop'/></method></class><class extends='java.lang.Object' name='TouchDelegate'><constructor type='android.view.TouchDelegate' name='TouchDelegate'><parameter type='android.graphics.Rect' name='bounds'/><parameter type='android.view.View' name='delegateView'/></constructor><method return='boolean' name='onTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method></class><class extends='java.lang.Object' name='VelocityTracker' final='true'><method name='addMovement'><parameter type='android.view.MotionEvent' name='ev'/></method><method name='clear'/><method name='computeCurrentVelocity'><parameter type='int' name='units'/></method><method return='float' name='getXVelocity'/><method return='float' name='getYVelocity'/><method return='android.view.VelocityTracker' static='true' name='obtain'/><method name='recycle'/><method name='computeCurrentVelocity' api_added='4'><parameter type='int' name='units'/><parameter type='float' name='maxVelocity'/></method><method return='float' name='getXVelocity' api_added='8'><parameter type='int' name='id'/></method><method return='float' name='getYVelocity' api_added='8'><parameter type='int' name='id'/></method></class><class extends='java.lang.Object' name='View'><constructor type='android.view.View' name='View'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.view.View' name='View'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.View' name='View'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='addFocusables'><parameter type='java.util.ArrayList&lt;android.view.View&gt;' name='views'/><parameter type='int' name='direction'/></method><method name='addTouchables'><parameter type='java.util.ArrayList&lt;android.view.View&gt;' name='views'/></method><method name='bringToFront'/><method name='buildDrawingCache'/><method name='cancelLongPress'/><method name='clearAnimation'/><method name='clearFocus'/><method visibility='protected' return='int' name='computeHorizontalScrollExtent'/><method visibility='protected' return='int' name='computeHorizontalScrollOffset'/><method visibility='protected' return='int' name='computeHorizontalScrollRange'/><method name='computeScroll'/><method visibility='protected' return='int' name='computeVerticalScrollExtent'/><method visibility='protected' return='int' name='computeVerticalScrollOffset'/><method visibility='protected' return='int' name='computeVerticalScrollRange'/><method name='createContextMenu'><parameter type='android.view.ContextMenu' name='menu'/></method><method name='destroyDrawingCache'/><method visibility='protected' name='dispatchDraw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method return='boolean' name='dispatchKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='dispatchKeyShortcutEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' name='dispatchRestoreInstanceState'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method visibility='protected' name='dispatchSaveInstanceState'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method visibility='protected' name='dispatchSetPressed'><parameter type='boolean' name='pressed'/></method><method visibility='protected' name='dispatchSetSelected'><parameter type='boolean' name='selected'/></method><method return='boolean' name='dispatchTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='dispatchTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='dispatchUnhandledMove'><parameter type='android.view.View' name='focused'/><parameter type='int' name='direction'/></method><method name='dispatchWindowFocusChanged'><parameter type='boolean' name='hasFocus'/></method><method name='dispatchWindowVisibilityChanged'><parameter type='int' name='visibility'/></method><method name='draw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method visibility='protected' name='drawableStateChanged'/><method return='android.view.View' name='findFocus'/><method return='android.view.View' name='findViewById' final='true'><parameter type='int' name='id'/></method><method return='android.view.View' name='findViewWithTag' final='true'><parameter type='java.lang.Object' name='tag'/></method><method visibility='protected' return='boolean' name='fitSystemWindows'><parameter type='android.graphics.Rect' name='insets'/></method><method return='android.view.View' name='focusSearch'><parameter type='int' name='direction'/></method><method name='forceLayout'/><method return='android.view.animation.Animation' name='getAnimation'/><method return='android.os.IBinder' name='getApplicationWindowToken'/><method return='android.graphics.drawable.Drawable' name='getBackground'/><method return='int' name='getBaseline'/><method return='int' name='getBottom' final='true'/><method visibility='protected' return='float' name='getBottomFadingEdgeStrength'/><method return='android.content.Context' name='getContext' final='true'/><method visibility='protected' return='android.view.ContextMenu.ContextMenuInfo' name='getContextMenuInfo'/><method return='int' static='true' name='getDefaultSize'><parameter type='int' name='size'/><parameter type='int' name='measureSpec'/></method><method return='int[]' name='getDrawableState' final='true'/><method return='android.graphics.Bitmap' name='getDrawingCache'/><method return='int' name='getDrawingCacheBackgroundColor'/><method return='int' name='getDrawingCacheQuality'/><method name='getDrawingRect'><parameter type='android.graphics.Rect' name='outRect'/></method><method return='long' name='getDrawingTime'/><method return='java.util.ArrayList&lt;android.view.View&gt;' name='getFocusables'><parameter type='int' name='direction'/></method><method name='getFocusedRect'><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' name='getGlobalVisibleRect'><parameter type='android.graphics.Rect' name='r'/><parameter type='android.graphics.Point' name='globalOffset'/></method><method return='boolean' name='getGlobalVisibleRect' final='true'><parameter type='android.graphics.Rect' name='r'/></method><method visibility='protected' return='android.os.Handler' name='getHandler'/><method return='int' name='getHeight' final='true'/><method name='getHitRect'><parameter type='android.graphics.Rect' name='outRect'/></method><method return='int' name='getHorizontalFadingEdgeLength'/><method visibility='protected' return='int' name='getHorizontalScrollbarHeight'/><method return='int' name='getId'/><method return='boolean' name='getKeepScreenOn'/><method return='android.view.ViewGroup.LayoutParams' name='getLayoutParams'/><method return='int' name='getLeft' final='true'/><method visibility='protected' return='float' name='getLeftFadingEdgeStrength'/><method return='boolean' name='getLocalVisibleRect' final='true'><parameter type='android.graphics.Rect' name='r'/></method><method name='getLocationInWindow'><parameter type='int[]' name='location'/></method><method name='getLocationOnScreen'><parameter type='int[]' name='location'/></method><method return='int' name='getMeasuredHeight' final='true'/><method return='int' name='getMeasuredWidth' final='true'/><method return='int' name='getNextFocusDownId'/><method return='int' name='getNextFocusLeftId'/><method return='int' name='getNextFocusRightId'/><method return='int' name='getNextFocusUpId'/><method return='android.view.View.OnFocusChangeListener' name='getOnFocusChangeListener'/><method return='int' name='getPaddingBottom'/><method return='int' name='getPaddingLeft'/><method return='int' name='getPaddingRight'/><method return='int' name='getPaddingTop'/><method return='android.view.ViewParent' name='getParent' final='true'/><method return='android.content.res.Resources' name='getResources'/><method return='int' name='getRight' final='true'/><method visibility='protected' return='float' name='getRightFadingEdgeStrength'/><method return='android.view.View' name='getRootView'/><method return='int' name='getScrollBarStyle'/><method return='int' name='getScrollX' final='true'/><method return='int' name='getScrollY' final='true'/><method return='int' name='getSolidColor'/><method visibility='protected' return='int' name='getSuggestedMinimumHeight'/><method visibility='protected' return='int' name='getSuggestedMinimumWidth'/><method return='java.lang.Object' name='getTag'/><method return='int' name='getTop' final='true'/><method visibility='protected' return='float' name='getTopFadingEdgeStrength'/><method return='android.view.TouchDelegate' name='getTouchDelegate'/><method return='java.util.ArrayList&lt;android.view.View&gt;' name='getTouchables'/><method return='int' name='getVerticalFadingEdgeLength'/><method return='int' name='getVerticalScrollbarWidth'/><method return='android.view.ViewTreeObserver' name='getViewTreeObserver'/><method return='int' name='getVisibility'/><method return='int' name='getWidth' final='true'/><method visibility='protected' return='int' name='getWindowAttachCount'/><method return='android.os.IBinder' name='getWindowToken'/><method return='int' name='getWindowVisibility'/><method return='boolean' name='hasFocus'/><method return='boolean' name='hasFocusable'/><method return='boolean' name='hasWindowFocus'/><method return='android.view.View' static='true' name='inflate'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resource'/><parameter type='android.view.ViewGroup' name='root'/></method><method visibility='protected' name='initializeFadingEdge'><parameter type='android.content.res.TypedArray' name='a'/></method><method visibility='protected' name='initializeScrollbars'><parameter type='android.content.res.TypedArray' name='a'/></method><method name='invalidate'><parameter type='android.graphics.Rect' name='dirty'/></method><method name='invalidate'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='invalidate'/><method name='invalidateDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method return='boolean' name='isClickable'/><method return='boolean' name='isDrawingCacheEnabled'/><method return='boolean' name='isDuplicateParentStateEnabled'/><method return='boolean' name='isEnabled'/><method return='boolean' name='isFocusable' final='true'/><method return='boolean' name='isFocusableInTouchMode' final='true'/><method return='boolean' name='isFocused'/><method return='boolean' name='isHorizontalFadingEdgeEnabled'/><method return='boolean' name='isHorizontalScrollBarEnabled'/><method return='boolean' name='isInTouchMode'/><method return='boolean' name='isLayoutRequested'/><method return='boolean' name='isLongClickable'/><method return='boolean' name='isPressed'/><method return='boolean' name='isSaveEnabled'/><method return='boolean' name='isSelected'/><method return='boolean' name='isShown'/><method return='boolean' name='isSoundEffectsEnabled'/><method return='boolean' name='isVerticalFadingEdgeEnabled'/><method return='boolean' name='isVerticalScrollBarEnabled'/><method name='layout' final='true'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='measure' final='true'><parameter type='int' name='widthMeasureSpec'/><parameter type='int' name='heightMeasureSpec'/></method><method visibility='protected' return='int[]' static='true' name='mergeDrawableStates'><parameter type='int[]' name='baseState'/><parameter type='int[]' name='additionalState'/></method><method name='offsetLeftAndRight'><parameter type='int' name='offset'/></method><method name='offsetTopAndBottom'><parameter type='int' name='offset'/></method><method visibility='protected' name='onAnimationEnd'/><method visibility='protected' name='onAnimationStart'/><method visibility='protected' name='onAttachedToWindow'/><method visibility='protected' name='onCreateContextMenu'><parameter type='android.view.ContextMenu' name='menu'/></method><method visibility='protected' return='int[]' name='onCreateDrawableState'><parameter type='int' name='extraSpace'/></method><method visibility='protected' name='onDetachedFromWindow'/><method visibility='protected' name='onDraw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method visibility='protected' name='onFinishInflate'/><method visibility='protected' name='onFocusChanged'><parameter type='boolean' name='gainFocus'/><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method><method return='boolean' name='onKeyDown'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyMultiple'><parameter type='int' name='keyCode'/><parameter type='int' name='repeatCount'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyShortcut'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method visibility='protected' name='onMeasure'><parameter type='int' name='widthMeasureSpec'/><parameter type='int' name='heightMeasureSpec'/></method><method visibility='protected' name='onRestoreInstanceState'><parameter type='android.os.Parcelable' name='state'/></method><method visibility='protected' return='android.os.Parcelable' name='onSaveInstanceState'/><method visibility='protected' name='onScrollChanged'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='oldl'/><parameter type='int' name='oldt'/></method><method visibility='protected' return='boolean' name='onSetAlpha'><parameter type='int' name='alpha'/></method><method visibility='protected' name='onSizeChanged'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int' name='oldw'/><parameter type='int' name='oldh'/></method><method return='boolean' name='onTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='onTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method name='onWindowFocusChanged'><parameter type='boolean' name='hasWindowFocus'/></method><method visibility='protected' name='onWindowVisibilityChanged'><parameter type='int' name='visibility'/></method><method return='boolean' name='performClick'/><method return='boolean' name='performLongClick'/><method visibility='protected' name='playSoundEffect'><parameter type='int' name='soundConstant'/></method><method return='boolean' name='post'><parameter type='java.lang.Runnable' name='action'/></method><method return='boolean' name='postDelayed'><parameter type='java.lang.Runnable' name='action'/><parameter type='long' name='delayMillis'/></method><method name='postInvalidate'/><method name='postInvalidate'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='postInvalidateDelayed'><parameter type='long' name='delayMilliseconds'/></method><method name='postInvalidateDelayed'><parameter type='long' name='delayMilliseconds'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='refreshDrawableState'/><method return='boolean' name='removeCallbacks'><parameter type='java.lang.Runnable' name='action'/></method><method return='boolean' name='requestFocus' final='true'/><method return='boolean' name='requestFocus' final='true'><parameter type='int' name='direction'/></method><method return='boolean' name='requestFocus'><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method><method return='boolean' name='requestFocusFromTouch' final='true'/><method name='requestLayout'/><method return='boolean' name='requestRectangleOnScreen'><parameter type='android.graphics.Rect' name='rectangle'/></method><method return='boolean' name='requestRectangleOnScreen'><parameter type='android.graphics.Rect' name='rectangle'/><parameter type='boolean' name='immediate'/></method><method return='int' static='true' name='resolveSize'><parameter type='int' name='size'/><parameter type='int' name='measureSpec'/></method><method name='restoreHierarchyState'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method name='saveHierarchyState'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method name='scheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/><parameter type='long' name='when'/></method><method name='scrollBy'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='scrollTo'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='setAnimation'><parameter type='android.view.animation.Animation' name='animation'/></method><method name='setBackgroundColor'><parameter type='int' name='color'/></method><method deprecated='16' name='setBackgroundDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setBackgroundResource'><parameter type='int' name='resid'/></method><method name='setClickable'><parameter type='boolean' name='clickable'/></method><method name='setDrawingCacheBackgroundColor'><parameter type='int' name='color'/></method><method name='setDrawingCacheEnabled'><parameter type='boolean' name='enabled'/></method><method name='setDrawingCacheQuality'><parameter type='int' name='quality'/></method><method name='setDuplicateParentStateEnabled'><parameter type='boolean' name='enabled'/></method><method name='setEnabled'><parameter type='boolean' name='enabled'/></method><method name='setFadingEdgeLength'><parameter type='int' name='length'/></method><method name='setFocusable'><parameter type='boolean' name='focusable'/></method><method name='setFocusableInTouchMode'><parameter type='boolean' name='focusableInTouchMode'/></method><method name='setHorizontalFadingEdgeEnabled'><parameter type='boolean' name='horizontalFadingEdgeEnabled'/></method><method name='setHorizontalScrollBarEnabled'><parameter type='boolean' name='horizontalScrollBarEnabled'/></method><method name='setId'><parameter type='int' name='id'/></method><method name='setKeepScreenOn'><parameter type='boolean' name='keepScreenOn'/></method><method name='setLayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='setLongClickable'><parameter type='boolean' name='longClickable'/></method><method visibility='protected' name='setMeasuredDimension' final='true'><parameter type='int' name='measuredWidth'/><parameter type='int' name='measuredHeight'/></method><method name='setMinimumHeight'><parameter type='int' name='minHeight'/></method><method name='setMinimumWidth'><parameter type='int' name='minWidth'/></method><method name='setNextFocusDownId'><parameter type='int' name='nextFocusDownId'/></method><method name='setNextFocusLeftId'><parameter type='int' name='nextFocusLeftId'/></method><method name='setNextFocusRightId'><parameter type='int' name='nextFocusRightId'/></method><method name='setNextFocusUpId'><parameter type='int' name='nextFocusUpId'/></method><method name='setOnClickListener'><parameter type='android.view.View.OnClickListener' name='l'/></method><method name='setOnCreateContextMenuListener'><parameter type='android.view.View.OnCreateContextMenuListener' name='l'/></method><method name='setOnFocusChangeListener'><parameter type='android.view.View.OnFocusChangeListener' name='l'/></method><method name='setOnKeyListener'><parameter type='android.view.View.OnKeyListener' name='l'/></method><method name='setOnLongClickListener'><parameter type='android.view.View.OnLongClickListener' name='l'/></method><method name='setOnTouchListener'><parameter type='android.view.View.OnTouchListener' name='l'/></method><method name='setPadding'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setPressed'><parameter type='boolean' name='pressed'/></method><method name='setSaveEnabled'><parameter type='boolean' name='enabled'/></method><method name='setScrollBarStyle'><parameter type='int' name='style'/></method><method name='setSelected'><parameter type='boolean' name='selected'/></method><method name='setSoundEffectsEnabled'><parameter type='boolean' name='soundEffectsEnabled'/></method><method name='setTag'><parameter type='java.lang.Object' name='tag'/></method><method name='setTouchDelegate'><parameter type='android.view.TouchDelegate' name='delegate'/></method><method name='setVerticalFadingEdgeEnabled'><parameter type='boolean' name='verticalFadingEdgeEnabled'/></method><method name='setVerticalScrollBarEnabled'><parameter type='boolean' name='verticalScrollBarEnabled'/></method><method name='setVisibility'><parameter type='int' name='visibility'/></method><method name='setWillNotCacheDrawing'><parameter type='boolean' name='willNotCacheDrawing'/></method><method name='setWillNotDraw'><parameter type='boolean' name='willNotDraw'/></method><method return='boolean' name='showContextMenu'/><method name='startAnimation'><parameter type='android.view.animation.Animation' name='animation'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/><parameter type='java.lang.Runnable' name='what'/></method><method name='unscheduleDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method visibility='protected' return='boolean' name='verifyDrawable'><parameter type='android.graphics.drawable.Drawable' name='who'/></method><method return='boolean' name='willNotCacheDrawing'/><method return='boolean' name='willNotDraw'/><method visibility='protected' return='int' name='getBottomPaddingOffset' api_added='2'/><method visibility='protected' return='int' name='getLeftPaddingOffset' api_added='2'/><method visibility='protected' return='int' name='getRightPaddingOffset' api_added='2'/><method visibility='protected' return='int' name='getTopPaddingOffset' api_added='2'/><method visibility='protected' return='boolean' name='isPaddingOffsetRequired' api_added='2'/><method return='boolean' name='checkInputConnectionProxy' api_added='3'><parameter type='android.view.View' name='view'/></method><method return='boolean' name='dispatchKeyEventPreIme' api_added='3'><parameter type='android.view.KeyEvent' name='event'/></method><method name='getWindowVisibleDisplayFrame' api_added='3'><parameter type='android.graphics.Rect' name='outRect'/></method><method return='boolean' name='isHapticFeedbackEnabled' api_added='3'/><method return='boolean' name='isInEditMode' api_added='3'/><method return='boolean' name='onCheckIsTextEditor' api_added='3'/><method return='android.view.inputmethod.InputConnection' name='onCreateInputConnection' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='outAttrs'/></method><method name='onFinishTemporaryDetach' api_added='3'/><method return='boolean' name='onKeyPreIme' api_added='3'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='onStartTemporaryDetach' api_added='3'/><method return='boolean' name='performHapticFeedback' api_added='3'><parameter type='int' name='feedbackConstant'/></method><method return='boolean' name='performHapticFeedback' api_added='3'><parameter type='int' name='feedbackConstant'/><parameter type='int' name='flags'/></method><method name='setHapticFeedbackEnabled' api_added='3'><parameter type='boolean' name='hapticFeedbackEnabled'/></method><method name='setScrollContainer' api_added='3'><parameter type='boolean' name='isScrollContainer'/></method><method name='addFocusables' api_added='4'><parameter type='java.util.ArrayList&lt;android.view.View&gt;' name='views'/><parameter type='int' name='direction'/><parameter type='int' name='focusableMode'/></method><method name='buildDrawingCache' api_added='4'><parameter type='boolean' name='autoScale'/></method><method return='boolean' name='dispatchPopulateAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method return='java.lang.CharSequence' name='getContentDescription' api_added='4'/><method return='android.graphics.Bitmap' name='getDrawingCache' api_added='4'><parameter type='boolean' name='autoScale'/></method><method return='java.lang.Object' name='getTag' api_added='4'><parameter type='int' name='key'/></method><method name='sendAccessibilityEvent' api_added='4'><parameter type='int' name='eventType'/></method><method name='sendAccessibilityEventUnchecked' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method name='setContentDescription' api_added='4'><parameter type='java.lang.CharSequence' name='contentDescription'/></method><method name='setTag' api_added='4'><parameter type='int' name='key'/><parameter type='java.lang.Object' name='tag'/></method><method visibility='protected' return='boolean' name='awakenScrollBars' api_added='5'/><method visibility='protected' return='boolean' name='awakenScrollBars' api_added='5'><parameter type='int' name='startDelay'/></method><method visibility='protected' return='boolean' name='awakenScrollBars' api_added='5'><parameter type='int' name='startDelay'/><parameter type='boolean' name='invalidate'/></method><method return='android.view.KeyEvent.DispatcherState' name='getKeyDispatcherState' api_added='5'/><method return='boolean' name='isScrollbarFadingEnabled' api_added='5'/><method return='boolean' name='onKeyLongPress' api_added='5'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='setScrollbarFadingEnabled' api_added='5'><parameter type='boolean' name='fadeScrollbars'/></method><method return='boolean' name='isOpaque' api_added='7'/><method visibility='protected' name='onDrawScrollBars' api_added='7' final='true'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='dispatchConfigurationChanged' api_added='8'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method name='dispatchDisplayHint' api_added='8'><parameter type='int' name='hint'/></method><method visibility='protected' name='dispatchVisibilityChanged' api_added='8'><parameter type='android.view.View' name='changedView'/><parameter type='int' name='visibility'/></method><method visibility='protected' name='onConfigurationChanged' api_added='8'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method visibility='protected' name='onDisplayHint' api_added='8'><parameter type='int' name='hint'/></method><method visibility='protected' name='onVisibilityChanged' api_added='8'><parameter type='android.view.View' name='changedView'/><parameter type='int' name='visibility'/></method><method return='boolean' name='getFilterTouchesWhenObscured' api_added='9'/><method return='int' name='getOverScrollMode' api_added='9'/><method return='boolean' name='onFilterTouchEventForSecurity' api_added='9'><parameter type='android.view.MotionEvent' name='event'/></method><method visibility='protected' name='onOverScrolled' api_added='9'><parameter type='int' name='scrollX'/><parameter type='int' name='scrollY'/><parameter type='boolean' name='clampedX'/><parameter type='boolean' name='clampedY'/></method><method visibility='protected' return='boolean' name='overScrollBy' api_added='9'><parameter type='int' name='deltaX'/><parameter type='int' name='deltaY'/><parameter type='int' name='scrollX'/><parameter type='int' name='scrollY'/><parameter type='int' name='scrollRangeX'/><parameter type='int' name='scrollRangeY'/><parameter type='int' name='maxOverScrollX'/><parameter type='int' name='maxOverScrollY'/><parameter type='boolean' name='isTouchEvent'/></method><method name='setFilterTouchesWhenObscured' api_added='9'><parameter type='boolean' name='enabled'/></method><method name='setOverScrollMode' api_added='9'><parameter type='int' name='overScrollMode'/></method><method name='addOnLayoutChangeListener' api_added='11'><parameter type='android.view.View.OnLayoutChangeListener' name='listener'/></method><method return='int' static='true' name='combineMeasuredStates' api_added='11'><parameter type='int' name='curState'/><parameter type='int' name='newState'/></method><method return='boolean' name='dispatchDragEvent' api_added='11'><parameter type='android.view.DragEvent' name='event'/></method><method visibility='protected' name='dispatchSetActivated' api_added='11'><parameter type='boolean' name='activated'/></method><method name='dispatchSystemUiVisibilityChanged' api_added='11'><parameter type='int' name='visibility'/></method><method return='float' name='getAlpha' api_added='11'/><method return='int' name='getLayerType' api_added='11'/><method return='android.graphics.Matrix' name='getMatrix' api_added='11'/><method return='int' name='getMeasuredHeightAndState' api_added='11' final='true'/><method return='int' name='getMeasuredState' api_added='11' final='true'/><method return='int' name='getMeasuredWidthAndState' api_added='11' final='true'/><method return='int' name='getNextFocusForwardId' api_added='11'/><method return='float' name='getPivotX' api_added='11'/><method return='float' name='getPivotY' api_added='11'/><method return='float' name='getRotation' api_added='11'/><method return='float' name='getRotationX' api_added='11'/><method return='float' name='getRotationY' api_added='11'/><method return='float' name='getScaleX' api_added='11'/><method return='float' name='getScaleY' api_added='11'/><method return='int' name='getSystemUiVisibility' api_added='11'/><method return='float' name='getTranslationX' api_added='11'/><method return='float' name='getTranslationY' api_added='11'/><method return='int' name='getVerticalScrollbarPosition' api_added='11'/><method return='float' name='getX' api_added='11'/><method return='float' name='getY' api_added='11'/><method return='boolean' name='isActivated' api_added='11'/><method return='boolean' name='isDirty' api_added='11'/><method return='boolean' name='isHardwareAccelerated' api_added='11'/><method return='boolean' name='isSaveFromParentEnabled' api_added='11'/><method name='jumpDrawablesToCurrentState' api_added='11'/><method return='boolean' name='onDragEvent' api_added='11'><parameter type='android.view.DragEvent' name='event'/></method><method name='removeOnLayoutChangeListener' api_added='11'><parameter type='android.view.View.OnLayoutChangeListener' name='listener'/></method><method return='int' static='true' name='resolveSizeAndState' api_added='11'><parameter type='int' name='size'/><parameter type='int' name='measureSpec'/><parameter type='int' name='childMeasuredState'/></method><method name='setActivated' api_added='11'><parameter type='boolean' name='activated'/></method><method name='setAlpha' api_added='11'><parameter type='float' name='alpha'/></method><method name='setBottom' api_added='11' final='true'><parameter type='int' name='bottom'/></method><method name='setLayerType' api_added='11'><parameter type='int' name='layerType'/><parameter type='android.graphics.Paint' name='paint'/></method><method name='setLeft' api_added='11' final='true'><parameter type='int' name='left'/></method><method name='setNextFocusForwardId' api_added='11'><parameter type='int' name='nextFocusForwardId'/></method><method name='setOnDragListener' api_added='11'><parameter type='android.view.View.OnDragListener' name='l'/></method><method name='setOnSystemUiVisibilityChangeListener' api_added='11'><parameter type='android.view.View.OnSystemUiVisibilityChangeListener' name='l'/></method><method name='setPivotX' api_added='11'><parameter type='float' name='pivotX'/></method><method name='setPivotY' api_added='11'><parameter type='float' name='pivotY'/></method><method name='setRight' api_added='11' final='true'><parameter type='int' name='right'/></method><method name='setRotation' api_added='11'><parameter type='float' name='rotation'/></method><method name='setRotationX' api_added='11'><parameter type='float' name='rotationX'/></method><method name='setRotationY' api_added='11'><parameter type='float' name='rotationY'/></method><method name='setSaveFromParentEnabled' api_added='11'><parameter type='boolean' name='enabled'/></method><method name='setScaleX' api_added='11'><parameter type='float' name='scaleX'/></method><method name='setScaleY' api_added='11'><parameter type='float' name='scaleY'/></method><method name='setSystemUiVisibility' api_added='11'><parameter type='int' name='visibility'/></method><method name='setTop' api_added='11' final='true'><parameter type='int' name='top'/></method><method name='setTranslationX' api_added='11'><parameter type='float' name='translationX'/></method><method name='setTranslationY' api_added='11'><parameter type='float' name='translationY'/></method><method name='setVerticalScrollbarPosition' api_added='11'><parameter type='int' name='position'/></method><method name='setX' api_added='11'><parameter type='float' name='x'/></method><method name='setY' api_added='11'><parameter type='float' name='y'/></method><method return='android.view.ActionMode' name='startActionMode' api_added='11'><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method return='boolean' name='startDrag' api_added='11' final='true'><parameter type='android.content.ClipData' name='data'/><parameter type='android.view.View.DragShadowBuilder' name='shadowBuilder'/><parameter type='java.lang.Object' name='myLocalState'/><parameter type='int' name='flags'/></method><method name='addOnAttachStateChangeListener' api_added='12'><parameter type='android.view.View.OnAttachStateChangeListener' name='listener'/></method><method return='android.view.ViewPropertyAnimator' name='animate' api_added='12'/><method name='buildLayer' api_added='12'/><method return='boolean' name='dispatchGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' name='onGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method><method name='removeOnAttachStateChangeListener' api_added='12'><parameter type='android.view.View.OnAttachStateChangeListener' name='listener'/></method><method name='setCameraDistance' api_added='12'><parameter type='float' name='distance'/></method><method name='setOnGenericMotionListener' api_added='12'><parameter type='android.view.View.OnGenericMotionListener' name='l'/></method><method return='boolean' name='canScrollHorizontally' api_added='14'><parameter type='int' name='arg0'/></method><method return='boolean' name='canScrollVertically' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' name='createAccessibilityNodeInfo' api_added='14'/><method visibility='protected' return='boolean' name='dispatchGenericFocusedEvent' api_added='14'><parameter type='android.view.MotionEvent' name='arg0'/></method><method visibility='protected' return='boolean' name='dispatchGenericPointerEvent' api_added='14'><parameter type='android.view.MotionEvent' name='arg0'/></method><method visibility='protected' return='boolean' name='dispatchHoverEvent' api_added='14'><parameter type='android.view.MotionEvent' name='arg0'/></method><method name='findViewsWithText' api_added='14'><parameter type='java.util.ArrayList&lt;android.view.View&gt;' name='arg0'/><parameter type='java.lang.CharSequence' name='arg1'/><parameter type='int' name='arg2'/></method><method return='boolean' api_removed='16' name='fitsSystemWindows' api_added='14'/><method return='boolean' name='isHovered' api_added='14'/><method name='onHoverChanged' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='boolean' name='onHoverEvent' api_added='14'><parameter type='android.view.MotionEvent' name='arg0'/></method><method name='onInitializeAccessibilityEvent' api_added='14'><parameter type='android.view.accessibility.AccessibilityEvent' name='arg0'/></method><method name='onInitializeAccessibilityNodeInfo' api_added='14'><parameter type='android.view.accessibility.AccessibilityNodeInfo' name='arg0'/></method><method name='onPopulateAccessibilityEvent' api_added='14'><parameter type='android.view.accessibility.AccessibilityEvent' name='arg0'/></method><method name='setAccessibilityDelegate' api_added='14'><parameter type='android.view.View.AccessibilityDelegate' name='arg0'/></method><method name='setFitsSystemWindows' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setHovered' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setOnHoverListener' api_added='14'><parameter type='android.view.View.OnHoverListener' name='arg0'/></method><method name='setScrollX' api_added='14'><parameter type='int' name='arg0'/></method><method name='setScrollY' api_added='14'><parameter type='int' name='arg0'/></method><method return='boolean' name='callOnClick' api_added='15'/><method return='boolean' name='hasOnClickListeners' api_added='15'/><method name='addChildrenForAccessibility' api_added='16'><parameter type='java.util.ArrayList&lt;android.view.View&gt;' name='arg0'/></method><method name='announceForAccessibility' api_added='16'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='dispatchWindowSystemUiVisiblityChanged' api_added='16'><parameter type='int' name='arg0'/></method><method return='android.view.accessibility.AccessibilityNodeProvider' name='getAccessibilityNodeProvider' api_added='16'/><method return='float' name='getCameraDistance' api_added='16'/><method return='boolean' name='getFitsSystemWindows' api_added='16'/><method return='int' name='getImportantForAccessibility' api_added='16'/><method return='int' name='getMinimumHeight' api_added='16'/><method return='int' name='getMinimumWidth' api_added='16'/><method return='android.view.ViewParent' name='getParentForAccessibility' api_added='16'/><method return='int' name='getScrollBarDefaultDelayBeforeFade' api_added='16'/><method return='int' name='getScrollBarFadeDuration' api_added='16'/><method return='int' name='getScrollBarSize' api_added='16'/><method return='int' name='getWindowSystemUiVisibility' api_added='16'/><method return='boolean' name='hasOverlappingRendering' api_added='16'/><method return='boolean' name='hasTransientState' api_added='16'/><method return='boolean' name='isScrollContainer' api_added='16'/><method name='onScreenStateChanged' api_added='16'><parameter type='int' name='arg0'/></method><method name='onWindowSystemUiVisibilityChanged' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' name='performAccessibilityAction' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='postInvalidateOnAnimation' api_added='16'/><method name='postInvalidateOnAnimation' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method><method name='postOnAnimation' api_added='16'><parameter type='java.lang.Runnable' name='arg0'/></method><method name='postOnAnimationDelayed' api_added='16'><parameter type='java.lang.Runnable' name='arg0'/><parameter type='long' name='arg1'/></method><method name='requestFitSystemWindows' api_added='16'/><method name='setBackground' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setHasTransientState' api_added='16'><parameter type='boolean' name='arg0'/></method><method name='setImportantForAccessibility' api_added='16'><parameter type='int' name='arg0'/></method><method name='setScrollBarDefaultDelayBeforeFade' api_added='16'><parameter type='int' name='arg0'/></method><method name='setScrollBarFadeDuration' api_added='16'><parameter type='int' name='arg0'/></method><method name='setScrollBarSize' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='android.view.AbsSavedState' static='true' name='View.BaseSavedState'><constructor type='android.view.View.BaseSavedState' name='View.BaseSavedState'><parameter type='android.os.Parcel' name='source'/></constructor><constructor type='android.view.View.BaseSavedState' name='View.BaseSavedState'><parameter type='android.os.Parcelable' name='superState'/></constructor></class><class extends='java.lang.Object' static='true' name='View.MeasureSpec'><constructor type='android.view.View.MeasureSpec' name='View.MeasureSpec'/><method return='int' static='true' name='getMode'><parameter type='int' name='measureSpec'/></method><method return='int' static='true' name='getSize'><parameter type='int' name='measureSpec'/></method><method return='int' static='true' name='makeMeasureSpec'><parameter type='int' name='size'/><parameter type='int' name='mode'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='int' name='measureSpec'/></method></class><class extends='java.lang.Object' name='ViewConfiguration'><constructor deprecated='3' api_removed='14' type='android.view.ViewConfiguration' name='ViewConfiguration'/><constructor type='android.view.deprecated ViewConfiguration' name='deprecated ViewConfiguration' api_added='14'/><method deprecated='3' return='int' static='true' name='getEdgeSlop'/><method deprecated='3' return='int' static='true' name='getFadingEdgeLength'/><method return='long' static='true' name='getGlobalActionKeyTimeout'/><method return='int' static='true' name='getJumpTapTimeout'/><method return='int' static='true' name='getLongPressTimeout'/><method deprecated='3' return='int' static='true' name='getMaximumDrawingCacheSize'/><method deprecated='3' return='int' static='true' name='getMinimumFlingVelocity'/><method return='int' static='true' name='getPressedStateDuration'/><method deprecated='3' return='int' static='true' name='getScrollBarSize'/><method return='float' static='true' name='getScrollFriction'/><method return='int' static='true' name='getTapTimeout'/><method deprecated='3' return='int' static='true' name='getTouchSlop'/><method deprecated='3' return='int' static='true' name='getWindowTouchSlop'/><method return='long' static='true' name='getZoomControlsTimeout'/><method return='android.view.ViewConfiguration' static='true' name='get' api_added='3'><parameter type='android.content.Context' name='context'/></method><method return='int' static='true' name='getDoubleTapTimeout' api_added='3'/><method return='int' name='getScaledDoubleTapSlop' api_added='3'/><method return='int' name='getScaledEdgeSlop' api_added='3'/><method return='int' name='getScaledFadingEdgeLength' api_added='3'/><method return='int' name='getScaledMaximumDrawingCacheSize' api_added='3'/><method return='int' name='getScaledMinimumFlingVelocity' api_added='3'/><method return='int' name='getScaledScrollBarSize' api_added='3'/><method return='int' name='getScaledTouchSlop' api_added='3'/><method return='int' name='getScaledWindowTouchSlop' api_added='3'/><method deprecated='4' return='int' static='true' name='getMaximumFlingVelocity' api_added='4'/><method return='int' name='getScaledMaximumFlingVelocity' api_added='4'/><method return='int' static='true' name='getScrollBarFadeDuration' api_added='5'/><method return='int' static='true' name='getScrollDefaultDelay' api_added='5'/><method return='int' name='getScaledPagingTouchSlop' api_added='8'/><method return='int' name='getScaledOverflingDistance' api_added='9'/><method return='int' name='getScaledOverscrollDistance' api_added='9'/><method return='int' static='true' name='getKeyRepeatDelay' api_added='12'/><method return='int' static='true' name='getKeyRepeatTimeout' api_added='12'/><method return='boolean' name='hasPermanentMenuKey' api_added='14'/></class><class extends='java.lang.Object' name='ViewDebug'><constructor type='android.view.ViewDebug' name='ViewDebug'/><method deprecated='16' static='true' name='startHierarchyTracing'><parameter type='java.lang.String' name='prefix'/><parameter type='android.view.View' name='view'/></method><method deprecated='16' static='true' name='startRecyclerTracing'><parameter type='java.lang.String' name='prefix'/><parameter type='android.view.View' name='view'/></method><method deprecated='16' static='true' name='stopHierarchyTracing'/><method deprecated='16' static='true' name='stopRecyclerTracing'/><method deprecated='16' static='true' name='trace'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewDebug.RecyclerTraceType' name='type'/><parameter type='int...' name='parameters'/></method><method deprecated='16' static='true' name='trace'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewDebug.HierarchyTraceType' name='type'/></method><method static='true' name='dumpCapturedView' api_added='3'><parameter type='java.lang.String' name='tag'/><parameter type='java.lang.Object' name='view'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='ViewDebug.ExportedProperty'/><class extends='java.lang.Enum' deprecated='16' static='true' name='ViewDebug.HierarchyTraceType' final='true'><method return='android.view.ViewDebug.HierarchyTraceType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.view.ViewDebug.HierarchyTraceType[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' abstract='true' static='true' name='ViewDebug.IntToString'/><class extends='java.lang.Enum' deprecated='16' static='true' name='ViewDebug.RecyclerTraceType' final='true'><method return='android.view.ViewDebug.RecyclerTraceType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.view.ViewDebug.RecyclerTraceType[]' static='true' name='values' final='true'/></class><class extends='android.view.View' abstract='true' name='ViewGroup'><constructor type='android.view.ViewGroup' name='ViewGroup'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.view.ViewGroup' name='ViewGroup'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.ViewGroup' name='ViewGroup'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='addStatesFromChildren'/><method name='addView'><parameter type='android.view.View' name='child'/></method><method name='addView'><parameter type='android.view.View' name='child'/><parameter type='int' name='index'/></method><method name='addView'><parameter type='android.view.View' name='child'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='addView'><parameter type='android.view.View' name='child'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='addView'><parameter type='android.view.View' name='child'/><parameter type='int' name='index'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method visibility='protected' return='boolean' name='addViewInLayout'><parameter type='android.view.View' name='child'/><parameter type='int' name='index'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method visibility='protected' return='boolean' name='addViewInLayout'><parameter type='android.view.View' name='child'/><parameter type='int' name='index'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/><parameter type='boolean' name='preventRequestLayout'/></method><method visibility='protected' name='attachLayoutAnimationParameters'><parameter type='android.view.View' name='child'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/><parameter type='int' name='index'/><parameter type='int' name='count'/></method><method visibility='protected' name='attachViewToParent'><parameter type='android.view.View' name='child'/><parameter type='int' name='index'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='bringChildToFront'><parameter type='android.view.View' name='child'/></method><method visibility='protected' return='boolean' name='canAnimate'/><method visibility='protected' return='boolean' name='checkLayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></method><method name='childDrawableStateChanged'><parameter type='android.view.View' name='child'/></method><method visibility='protected' name='cleanupLayoutState'><parameter type='android.view.View' name='child'/></method><method name='clearChildFocus'><parameter type='android.view.View' name='child'/></method><method name='clearDisappearingChildren'/><method visibility='protected' name='debug'><parameter type='int' name='depth'/></method><method visibility='protected' name='detachAllViewsFromParent'/><method visibility='protected' name='detachViewFromParent'><parameter type='android.view.View' name='child'/></method><method visibility='protected' name='detachViewFromParent'><parameter type='int' name='index'/></method><method visibility='protected' name='detachViewsFromParent'><parameter type='int' name='start'/><parameter type='int' name='count'/></method><method visibility='protected' name='dispatchFreezeSelfOnly'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method name='dispatchSetSelected'><parameter type='boolean' name='selected'/></method><method visibility='protected' name='dispatchThawSelfOnly'><parameter type='android.util.SparseArray&lt;android.os.Parcelable&gt;' name='container'/></method><method visibility='protected' return='boolean' name='drawChild'><parameter type='android.graphics.Canvas' name='canvas'/><parameter type='android.view.View' name='child'/><parameter type='long' name='drawingTime'/></method><method return='android.view.View' name='focusSearch'><parameter type='android.view.View' name='focused'/><parameter type='int' name='direction'/></method><method name='focusableViewAvailable'><parameter type='android.view.View' name='v'/></method><method return='boolean' name='gatherTransparentRegion'><parameter type='android.graphics.Region' name='region'/></method><method visibility='protected' return='android.view.ViewGroup.LayoutParams' name='generateDefaultLayoutParams'/><method return='android.view.ViewGroup.LayoutParams' name='generateLayoutParams'><parameter type='android.util.AttributeSet' name='attrs'/></method><method visibility='protected' return='android.view.ViewGroup.LayoutParams' name='generateLayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></method><method return='android.view.View' name='getChildAt'><parameter type='int' name='index'/></method><method return='int' name='getChildCount'/><method visibility='protected' return='int' name='getChildDrawingOrder'><parameter type='int' name='childCount'/><parameter type='int' name='i'/></method><method return='int' static='true' name='getChildMeasureSpec'><parameter type='int' name='spec'/><parameter type='int' name='padding'/><parameter type='int' name='childDimension'/></method><method visibility='protected' return='boolean' name='getChildStaticTransformation'><parameter type='android.view.View' name='child'/><parameter type='android.view.animation.Transformation' name='t'/></method><method return='boolean' name='getChildVisibleRect'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='r'/><parameter type='android.graphics.Point' name='offset'/></method><method return='int' name='getDescendantFocusability'/><method return='android.view.View' name='getFocusedChild'/><method return='android.view.animation.LayoutAnimationController' name='getLayoutAnimation'/><method return='android.view.animation.Animation.AnimationListener' name='getLayoutAnimationListener'/><method return='int' name='getPersistentDrawingCache'/><method return='int' name='indexOfChild'><parameter type='android.view.View' name='child'/></method><method name='invalidateChild' final='true'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='dirty'/></method><method return='android.view.ViewParent' name='invalidateChildInParent'><parameter type='int[]' name='location'/><parameter type='android.graphics.Rect' name='dirty'/></method><method return='boolean' name='isAlwaysDrawnWithCacheEnabled'/><method return='boolean' name='isAnimationCacheEnabled'/><method visibility='protected' return='boolean' name='isChildrenDrawnWithCacheEnabled'/><method visibility='protected' name='measureChild'><parameter type='android.view.View' name='child'/><parameter type='int' name='parentWidthMeasureSpec'/><parameter type='int' name='parentHeightMeasureSpec'/></method><method visibility='protected' name='measureChildWithMargins'><parameter type='android.view.View' name='child'/><parameter type='int' name='parentWidthMeasureSpec'/><parameter type='int' name='widthUsed'/><parameter type='int' name='parentHeightMeasureSpec'/><parameter type='int' name='heightUsed'/></method><method visibility='protected' name='measureChildren'><parameter type='int' name='widthMeasureSpec'/><parameter type='int' name='heightMeasureSpec'/></method><method name='offsetDescendantRectToMyCoords' final='true'><parameter type='android.view.View' name='descendant'/><parameter type='android.graphics.Rect' name='rect'/></method><method name='offsetRectIntoDescendantCoords' final='true'><parameter type='android.view.View' name='descendant'/><parameter type='android.graphics.Rect' name='rect'/></method><method return='boolean' name='onInterceptTouchEvent'><parameter type='android.view.MotionEvent' name='ev'/></method><method visibility='protected' abstract='true' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method visibility='protected' return='boolean' name='onRequestFocusInDescendants'><parameter type='int' name='direction'/><parameter type='android.graphics.Rect' name='previouslyFocusedRect'/></method><method name='recomputeViewAttributes'><parameter type='android.view.View' name='child'/></method><method name='removeAllViews'/><method name='removeAllViewsInLayout'/><method visibility='protected' name='removeDetachedView'><parameter type='android.view.View' name='child'/><parameter type='boolean' name='animate'/></method><method name='removeView'><parameter type='android.view.View' name='view'/></method><method name='removeViewAt'><parameter type='int' name='index'/></method><method name='removeViewInLayout'><parameter type='android.view.View' name='view'/></method><method name='removeViews'><parameter type='int' name='start'/><parameter type='int' name='count'/></method><method name='removeViewsInLayout'><parameter type='int' name='start'/><parameter type='int' name='count'/></method><method name='requestChildFocus'><parameter type='android.view.View' name='child'/><parameter type='android.view.View' name='focused'/></method><method return='boolean' name='requestChildRectangleOnScreen'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='rectangle'/><parameter type='boolean' name='immediate'/></method><method name='requestDisallowInterceptTouchEvent'><parameter type='boolean' name='disallowIntercept'/></method><method name='requestTransparentRegion'><parameter type='android.view.View' name='child'/></method><method name='scheduleLayoutAnimation'/><method name='setAddStatesFromChildren'><parameter type='boolean' name='addsStates'/></method><method name='setAlwaysDrawnWithCacheEnabled'><parameter type='boolean' name='always'/></method><method name='setAnimationCacheEnabled'><parameter type='boolean' name='enabled'/></method><method visibility='protected' name='setChildrenDrawingCacheEnabled'><parameter type='boolean' name='enabled'/></method><method visibility='protected' name='setChildrenDrawnWithCacheEnabled'><parameter type='boolean' name='enabled'/></method><method name='setClipChildren'><parameter type='boolean' name='clipChildren'/></method><method name='setClipToPadding'><parameter type='boolean' name='clipToPadding'/></method><method name='setDescendantFocusability'><parameter type='int' name='focusability'/></method><method name='setLayoutAnimation'><parameter type='android.view.animation.LayoutAnimationController' name='controller'/></method><method name='setLayoutAnimationListener'><parameter type='android.view.animation.Animation.AnimationListener' name='animationListener'/></method><method name='setOnHierarchyChangeListener'><parameter type='android.view.ViewGroup.OnHierarchyChangeListener' name='listener'/></method><method name='setPersistentDrawingCache'><parameter type='int' name='drawingCacheToKeep'/></method><method return='boolean' name='showContextMenuForChild'><parameter type='android.view.View' name='originalView'/></method><method name='startLayoutAnimation'/><method name='updateViewLayout'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method visibility='protected' name='setStaticTransformationsEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method><method visibility='protected' return='boolean' name='isChildrenDrawingOrderEnabled' api_added='7'/><method visibility='protected' name='setChildrenDrawingOrderEnabled' api_added='7'><parameter type='boolean' name='enabled'/></method><method name='dispatchSetActivated' api_added='11'><parameter type='boolean' name='activated'/></method><method name='endViewTransition' api_added='11'><parameter type='android.view.View' name='view'/></method><method return='android.animation.LayoutTransition' name='getLayoutTransition' api_added='11'/><method return='boolean' name='isMotionEventSplittingEnabled' api_added='11'/><method name='layout' api_added='11' final='true'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setLayoutTransition' api_added='11'><parameter type='android.animation.LayoutTransition' name='transition'/></method><method name='setMotionEventSplittingEnabled' api_added='11'><parameter type='boolean' name='split'/></method><method return='android.view.ActionMode' name='startActionModeForChild' api_added='11'><parameter type='android.view.View' name='originalView'/><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method name='startViewTransition' api_added='11'><parameter type='android.view.View' name='view'/></method><method return='boolean' name='onInterceptHoverEvent' api_added='14'><parameter type='android.view.MotionEvent' name='arg0'/></method><method return='boolean' name='onRequestSendAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method return='boolean' name='requestSendAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method visibility='protected' api_removed='16' name='resetResolvedLayoutDirection' api_added='14'/><method visibility='protected' api_removed='16' name='resetResolvedTextDirection' api_added='14'/><method return='boolean' name='shouldDelayChildPressedState' api_added='14'/></class><class extends='java.lang.Object' static='true' name='ViewGroup.LayoutParams'><constructor type='android.view.ViewGroup.LayoutParams' name='ViewGroup.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.ViewGroup.LayoutParams' name='ViewGroup.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.view.ViewGroup.LayoutParams' name='ViewGroup.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor><method visibility='protected' name='setBaseAttributes'><parameter type='android.content.res.TypedArray' name='a'/><parameter type='int' name='widthAttr'/><parameter type='int' name='heightAttr'/></method></class><class extends='android.view.ViewGroup.LayoutParams' static='true' name='ViewGroup.MarginLayoutParams'><constructor type='android.view.ViewGroup.MarginLayoutParams' name='ViewGroup.MarginLayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.ViewGroup.MarginLayoutParams' name='ViewGroup.MarginLayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.view.ViewGroup.MarginLayoutParams' name='ViewGroup.MarginLayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor><constructor type='android.view.ViewGroup.MarginLayoutParams' name='ViewGroup.MarginLayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor><method name='setMargins'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method></class><class extends='android.view.View' name='ViewStub' final='true'><constructor type='android.view.ViewStub' name='ViewStub'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.view.ViewStub' name='ViewStub'><parameter type='android.content.Context' name='context'/><parameter type='int' name='layoutResource'/></constructor><constructor type='android.view.ViewStub' name='ViewStub'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.ViewStub' name='ViewStub'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='int' name='getInflatedId'/><method return='int' name='getLayoutResource'/><method return='android.view.View' name='inflate'/><method name='setInflatedId'><parameter type='int' name='inflatedId'/></method><method name='setLayoutResource'><parameter type='int' name='layoutResource'/></method><method name='setOnInflateListener'><parameter type='android.view.ViewStub.OnInflateListener' name='inflateListener'/></method><method return='android.view.LayoutInflater' name='getLayoutInflater' api_added='16'/><method name='setLayoutInflater' api_added='16'><parameter type='android.view.LayoutInflater' name='arg0'/></method></class><class extends='java.lang.Object' name='ViewTreeObserver' final='true'><method name='addOnGlobalFocusChangeListener'><parameter type='android.view.ViewTreeObserver.OnGlobalFocusChangeListener' name='listener'/></method><method name='addOnGlobalLayoutListener'><parameter type='android.view.ViewTreeObserver.OnGlobalLayoutListener' name='listener'/></method><method name='addOnPreDrawListener'><parameter type='android.view.ViewTreeObserver.OnPreDrawListener' name='listener'/></method><method name='addOnTouchModeChangeListener'><parameter type='android.view.ViewTreeObserver.OnTouchModeChangeListener' name='listener'/></method><method name='dispatchOnGlobalLayout' final='true'/><method return='boolean' name='dispatchOnPreDraw' final='true'/><method return='boolean' name='isAlive'/><method deprecated='16' name='removeGlobalOnLayoutListener'><parameter type='android.view.ViewTreeObserver.OnGlobalLayoutListener' name='victim'/></method><method name='removeOnGlobalFocusChangeListener'><parameter type='android.view.ViewTreeObserver.OnGlobalFocusChangeListener' name='victim'/></method><method name='removeOnPreDrawListener'><parameter type='android.view.ViewTreeObserver.OnPreDrawListener' name='victim'/></method><method name='removeOnTouchModeChangeListener'><parameter type='android.view.ViewTreeObserver.OnTouchModeChangeListener' name='victim'/></method><method name='addOnScrollChangedListener' api_added='3'><parameter type='android.view.ViewTreeObserver.OnScrollChangedListener' name='listener'/></method><method name='removeOnScrollChangedListener' api_added='3'><parameter type='android.view.ViewTreeObserver.OnScrollChangedListener' name='victim'/></method><method name='addOnDrawListener' api_added='16'><parameter type='android.view.ViewTreeObserver.OnDrawListener' name='arg0'/></method><method name='dispatchOnDraw' api_added='16' final='true'/><method name='removeOnDrawListener' api_added='16'><parameter type='android.view.ViewTreeObserver.OnDrawListener' name='arg0'/></method><method name='removeOnGlobalLayoutListener' api_added='16'><parameter type='android.view.ViewTreeObserver.OnGlobalLayoutListener' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' name='Window'><constructor type='android.view.Window' name='Window'><parameter type='android.content.Context' name='context'/></constructor><method abstract='true' name='addContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method name='addFlags'><parameter type='int' name='flags'/></method><method name='clearFlags'><parameter type='int' name='flags'/></method><method abstract='true' name='closeAllPanels'/><method abstract='true' name='closePanel'><parameter type='int' name='featureId'/></method><method return='android.view.View' name='findViewById'><parameter type='int' name='id'/></method><method return='android.view.WindowManager.LayoutParams' name='getAttributes' final='true'/><method return='android.view.Window.Callback' name='getCallback' final='true'/><method return='android.view.Window' name='getContainer' final='true'/><method return='android.content.Context' name='getContext' final='true'/><method return='android.view.View' abstract='true' name='getCurrentFocus'/><method return='android.view.View' abstract='true' name='getDecorView'/><method visibility='protected' return='int' name='getFeatures' final='true'/><method visibility='protected' return='int' name='getForcedWindowFlags' final='true'/><method return='android.view.LayoutInflater' abstract='true' name='getLayoutInflater'/><method visibility='protected' return='int' name='getLocalFeatures' final='true'/><method return='int' abstract='true' name='getVolumeControlStream'/><method return='android.view.WindowManager' name='getWindowManager'/><method return='android.content.res.TypedArray' name='getWindowStyle' final='true'/><method return='boolean' name='hasChildren' final='true'/><method return='boolean' name='isActive' final='true'/><method return='boolean' abstract='true' name='isFloating'/><method return='boolean' abstract='true' name='isShortcutKey'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method name='makeActive' final='true'/><method visibility='protected' abstract='true' name='onActive'/><method abstract='true' name='onConfigurationChanged'><parameter type='android.content.res.Configuration' name='newConfig'/></method><method abstract='true' name='openPanel'><parameter type='int' name='featureId'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='android.view.View' abstract='true' name='peekDecorView'/><method return='boolean' abstract='true' name='performContextMenuIdentifierAction'><parameter type='int' name='id'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='performPanelIdentifierAction'><parameter type='int' name='featureId'/><parameter type='int' name='id'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='performPanelShortcut'><parameter type='int' name='featureId'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/><parameter type='int' name='flags'/></method><method return='boolean' name='requestFeature'><parameter type='int' name='featureId'/></method><method abstract='true' name='restoreHierarchyState'><parameter type='android.os.Bundle' name='savedInstanceState'/></method><method return='android.os.Bundle' abstract='true' name='saveHierarchyState'/><method name='setAttributes'><parameter type='android.view.WindowManager.LayoutParams' name='a'/></method><method abstract='true' name='setBackgroundDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setBackgroundDrawableResource'><parameter type='int' name='resid'/></method><method name='setCallback'><parameter type='android.view.Window.Callback' name='callback'/></method><method abstract='true' name='setChildDrawable'><parameter type='int' name='featureId'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method abstract='true' name='setChildInt'><parameter type='int' name='featureId'/><parameter type='int' name='value'/></method><method name='setContainer'><parameter type='android.view.Window' name='container'/></method><method abstract='true' name='setContentView'><parameter type='int' name='layoutResID'/></method><method abstract='true' name='setContentView'><parameter type='android.view.View' name='view'/></method><method abstract='true' name='setContentView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method visibility='protected' name='setDefaultWindowFormat'><parameter type='int' name='format'/></method><method abstract='true' name='setFeatureDrawable'><parameter type='int' name='featureId'/><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method abstract='true' name='setFeatureDrawableAlpha'><parameter type='int' name='featureId'/><parameter type='int' name='alpha'/></method><method abstract='true' name='setFeatureDrawableResource'><parameter type='int' name='featureId'/><parameter type='int' name='resId'/></method><method abstract='true' name='setFeatureDrawableUri'><parameter type='int' name='featureId'/><parameter type='android.net.Uri' name='uri'/></method><method abstract='true' name='setFeatureInt'><parameter type='int' name='featureId'/><parameter type='int' name='value'/></method><method name='setFlags'><parameter type='int' name='flags'/><parameter type='int' name='mask'/></method><method name='setFormat'><parameter type='int' name='format'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setLayout'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method abstract='true' name='setTitleColor'><parameter type='int' name='textColor'/></method><method name='setType'><parameter type='int' name='type'/></method><method abstract='true' name='setVolumeControlStream'><parameter type='int' name='streamType'/></method><method name='setWindowManager'><parameter type='android.view.WindowManager' name='wm'/><parameter type='android.os.IBinder' name='appToken'/><parameter type='java.lang.String' name='appName'/></method><method return='boolean' abstract='true' name='superDispatchKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='superDispatchTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' abstract='true' name='superDispatchTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method abstract='true' name='takeKeyEvents'><parameter type='boolean' name='get'/></method><method abstract='true' name='togglePanel'><parameter type='int' name='featureId'/><parameter type='android.view.KeyEvent' name='event'/></method><method visibility='protected' return='boolean' name='hasSoftInputMode' api_added='3' final='true'/><method name='setSoftInputMode' api_added='3'><parameter type='int' name='mode'/></method><method name='setWindowAnimations' api_added='3'><parameter type='int' name='resId'/></method><method abstract='true' name='takeInputQueue' api_added='9'><parameter type='android.view.InputQueue.Callback' name='callback'/></method><method abstract='true' name='takeSurface' api_added='9'><parameter type='android.view.SurfaceHolder.Callback2' name='callback'/></method><method return='boolean' name='hasFeature' api_added='11'><parameter type='int' name='feature'/></method><method abstract='true' name='invalidatePanelMenu' api_added='11'><parameter type='int' name='featureId'/></method><method name='setWindowManager' api_added='11'><parameter type='android.view.WindowManager' name='wm'/><parameter type='android.os.IBinder' name='appToken'/><parameter type='java.lang.String' name='appName'/><parameter type='boolean' name='hardwareAccelerated'/></method><method return='boolean' abstract='true' name='superDispatchKeyShortcutEvent' api_added='11'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='superDispatchGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method><method name='setDimAmount' api_added='14'><parameter type='float' name='arg0'/></method><method name='setUiOptions' api_added='14'><parameter type='int' name='arg0'/></method><method name='setUiOptions' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.RuntimeException' static='true' name='WindowManager.BadTokenException'><constructor type='android.view.WindowManager.BadTokenException' name='WindowManager.BadTokenException'/><constructor type='android.view.WindowManager.BadTokenException' name='WindowManager.BadTokenException'><parameter type='java.lang.String' name='name'/></constructor></class><class extends='android.view.ViewGroup.LayoutParams' static='true' name='WindowManager.LayoutParams'><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'/><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='int' name='_type'/></constructor><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='int' name='_type'/><parameter type='int' name='_flags'/></constructor><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='int' name='_type'/><parameter type='int' name='_flags'/><parameter type='int' name='_format'/></constructor><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int' name='_type'/><parameter type='int' name='_flags'/><parameter type='int' name='_format'/></constructor><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int' name='xpos'/><parameter type='int' name='ypos'/><parameter type='int' name='_type'/><parameter type='int' name='_flags'/><parameter type='int' name='_format'/></constructor><constructor type='android.view.WindowManager.LayoutParams' name='WindowManager.LayoutParams'><parameter type='android.os.Parcel' name='in'/></constructor><method return='int' name='copyFrom' final='true'><parameter type='android.view.WindowManager.LayoutParams' name='o'/></method><method return='java.lang.String' name='debug'><parameter type='java.lang.String' name='output'/></method><method return='int' name='describeContents'/><method return='java.lang.CharSequence' name='getTitle' final='true'/><method name='setTitle' final='true'><parameter type='java.lang.CharSequence' name='title'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='parcelableFlags'/></method><method return='boolean' static='true' name='mayUseInputMethod' api_added='3'><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='HapticFeedbackConstants' api_added='3'/><class extends='java.lang.Object' abstract='true' name='OrientationEventListener' api_added='3'><constructor type='android.view.OrientationEventListener' name='OrientationEventListener' api_added='3'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.view.OrientationEventListener' name='OrientationEventListener' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='rate'/></constructor><method return='boolean' name='canDetectOrientation' api_added='3'/><method name='disable' api_added='3'/><method name='enable' api_added='3'/><method abstract='true' name='onOrientationChanged' api_added='3'><parameter type='int' name='orientation'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='ViewDebug.CapturedViewProperty' api_added='3'/><class extends='java.lang.Object' abstract='true' static='true' name='ViewDebug.FlagToString' api_added='4'/><class extends='java.lang.Object' static='true' name='KeyEvent.DispatcherState' api_added='5'><constructor type='android.view.KeyEvent.DispatcherState' name='KeyEvent.DispatcherState' api_added='5'/><method name='handleUpEvent' api_added='5'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='isTracking' api_added='5'><parameter type='android.view.KeyEvent' name='event'/></method><method name='performedLongPress' api_added='5'><parameter type='android.view.KeyEvent' name='event'/></method><method name='reset' api_added='5'/><method name='reset' api_added='5'><parameter type='java.lang.Object' name='target'/></method><method name='startTracking' api_added='5'><parameter type='android.view.KeyEvent' name='event'/><parameter type='java.lang.Object' name='target'/></method></class><class extends='java.lang.Object' name='ScaleGestureDetector' api_added='8'><constructor type='android.view.ScaleGestureDetector' name='ScaleGestureDetector' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.view.ScaleGestureDetector.OnScaleGestureListener' name='listener'/></constructor><method return='float' name='getCurrentSpan' api_added='8'/><method return='long' name='getEventTime' api_added='8'/><method return='float' name='getFocusX' api_added='8'/><method return='float' name='getFocusY' api_added='8'/><method return='float' name='getPreviousSpan' api_added='8'/><method return='float' name='getScaleFactor' api_added='8'/><method return='long' name='getTimeDelta' api_added='8'/><method return='boolean' name='isInProgress' api_added='8'/><method return='boolean' name='onTouchEvent' api_added='8'><parameter type='android.view.MotionEvent' name='event'/></method><method return='float' name='getCurrentSpanX' api_added='11'/><method return='float' name='getCurrentSpanY' api_added='11'/><method return='float' name='getPreviousSpanX' api_added='11'/><method return='float' name='getPreviousSpanY' api_added='11'/></class><class extends='java.lang.Object' static='true' name='ScaleGestureDetector.SimpleOnScaleGestureListener' api_added='8'><constructor type='android.view.ScaleGestureDetector.SimpleOnScaleGestureListener' name='ScaleGestureDetector.SimpleOnScaleGestureListener' api_added='8'/><method return='boolean' name='onScale' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method><method return='boolean' name='onScaleBegin' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method><method name='onScaleEnd' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method></class><class extends='java.lang.Object' name='InputDevice' api_added='9' final='true'><method return='int' name='describeContents' api_added='9'/><method return='android.view.InputDevice' static='true' name='getDevice' api_added='9'><parameter type='int' name='id'/></method><method return='int[]' static='true' name='getDeviceIds' api_added='9'/><method return='int' name='getId' api_added='9'/><method return='android.view.KeyCharacterMap' name='getKeyCharacterMap' api_added='9'/><method return='int' name='getKeyboardType' api_added='9'/><method return='android.view.InputDevice.MotionRange' name='getMotionRange' api_added='9'><parameter type='int' name='rangeType'/></method><method return='java.lang.String' name='getName' api_added='9'/><method return='int' name='getSources' api_added='9'/><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='android.view.InputDevice.MotionRange' name='getMotionRange' api_added='12'><parameter type='int' name='axis'/><parameter type='int' name='source'/></method><method return='java.util.List&lt;android.view.InputDevice.MotionRange&gt;' name='getMotionRanges' api_added='12'/><method return='java.lang.String' name='getDescriptor' api_added='16'/><method return='android.os.Vibrator' name='getVibrator' api_added='16'/><method return='boolean' name='isVirtual' api_added='16'/></class><class extends='java.lang.Object' static='true' name='InputDevice.MotionRange' api_added='9' final='true'><method return='float' name='getFlat' api_added='9'/><method return='float' name='getFuzz' api_added='9'/><method return='float' name='getMax' api_added='9'/><method return='float' name='getMin' api_added='9'/><method return='float' name='getRange' api_added='9'/><method return='int' name='getAxis' api_added='12'/><method return='int' name='getSource' api_added='12'/></class><class extends='java.lang.Object' abstract='true' name='InputEvent' api_added='9'><method return='int' name='describeContents' api_added='9'/><method return='android.view.InputDevice' name='getDevice' api_added='9' final='true'/><method return='int' name='getDeviceId' api_added='9' final='true'/><method return='int' name='getSource' api_added='9' final='true'/><method return='long' abstract='true' name='getEventTime' api_added='16'/></class><class extends='java.lang.Object' name='InputQueue' api_added='9' final='true'/><class extends='java.lang.Object' static='true' name='MotionEvent.PointerCoords' api_added='9' final='true'><constructor type='android.view.MotionEvent.PointerCoords' name='MotionEvent.PointerCoords' api_added='9'/><method name='clear' api_added='12'/><method name='copyFrom' api_added='12'><parameter type='android.view.MotionEvent.PointerCoords' name='other'/></method><method return='float' name='getAxisValue' api_added='12'><parameter type='int' name='axis'/></method><method name='setAxisValue' api_added='12'><parameter type='int' name='axis'/><parameter type='float' name='value'/></method></class><class extends='java.lang.Object' abstract='true' name='ActionMode' api_added='11'><constructor type='android.view.ActionMode' name='ActionMode' api_added='11'/><method abstract='true' name='finish' api_added='11'/><method return='android.view.View' abstract='true' name='getCustomView' api_added='11'/><method return='android.view.Menu' abstract='true' name='getMenu' api_added='11'/><method return='android.view.MenuInflater' abstract='true' name='getMenuInflater' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getSubtitle' api_added='11'/><method return='java.lang.CharSequence' abstract='true' name='getTitle' api_added='11'/><method abstract='true' name='invalidate' api_added='11'/><method abstract='true' name='setCustomView' api_added='11'><parameter type='android.view.View' name='view'/></method><method abstract='true' name='setSubtitle' api_added='11'><parameter type='java.lang.CharSequence' name='subtitle'/></method><method abstract='true' name='setSubtitle' api_added='11'><parameter type='int' name='resId'/></method><method abstract='true' name='setTitle' api_added='11'><parameter type='java.lang.CharSequence' name='title'/></method><method abstract='true' name='setTitle' api_added='11'><parameter type='int' name='resId'/></method><method return='java.lang.Object' name='getTag' api_added='14'/><method name='setTag' api_added='14'><parameter type='java.lang.Object' name='arg0'/></method><method return='boolean' name='getTitleOptionalHint' api_added='16'/><method return='boolean' name='isTitleOptional' api_added='16'/><method name='setTitleOptionalHint' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Object' name='DragEvent' api_added='11'><method return='int' name='describeContents' api_added='11'/><method return='int' name='getAction' api_added='11'/><method return='android.content.ClipData' name='getClipData' api_added='11'/><method return='android.content.ClipDescription' name='getClipDescription' api_added='11'/><method return='java.lang.Object' name='getLocalState' api_added='11'/><method return='boolean' name='getResult' api_added='11'/><method return='float' name='getX' api_added='11'/><method return='float' name='getY' api_added='11'/><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.util.AndroidRuntimeException' static='true' name='KeyCharacterMap.UnavailableException' api_added='11'><constructor type='android.view.KeyCharacterMap.UnavailableException' name='KeyCharacterMap.UnavailableException' api_added='11'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='java.lang.Object' static='true' name='View.DragShadowBuilder' api_added='11'><constructor type='android.view.View.DragShadowBuilder' name='View.DragShadowBuilder' api_added='11'><parameter type='android.view.View' name='view'/></constructor><constructor type='android.view.View.DragShadowBuilder' name='View.DragShadowBuilder' api_added='11'/><method return='android.view.View' name='getView' api_added='11' final='true'/><method name='onDrawShadow' api_added='11'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='onProvideShadowMetrics' api_added='11'><parameter type='android.graphics.Point' name='shadowSize'/><parameter type='android.graphics.Point' name='shadowTouchPoint'/></method></class><class extends='java.lang.Object' name='ViewPropertyAnimator' api_added='12'><method return='android.view.ViewPropertyAnimator' name='alpha' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='alphaBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotation' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotationBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotationX' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotationXBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotationY' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='rotationYBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='scaleX' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='scaleXBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='scaleY' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='scaleYBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='setDuration' api_added='12'><parameter type='long' name='duration'/></method><method return='android.view.ViewPropertyAnimator' name='setInterpolator' api_added='12'><parameter type='android.animation.TimeInterpolator' name='interpolator'/></method><method return='android.view.ViewPropertyAnimator' name='setListener' api_added='12'><parameter type='android.animation.Animator.AnimatorListener' name='listener'/></method><method return='android.view.ViewPropertyAnimator' name='translationX' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='translationXBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='translationY' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='translationYBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='x' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='xBy' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='y' api_added='12'><parameter type='float' name='value'/></method><method return='android.view.ViewPropertyAnimator' name='yBy' api_added='12'><parameter type='float' name='value'/></method><method name='cancel' api_added='14'/><method return='long' name='getDuration' api_added='14'/><method return='long' name='getStartDelay' api_added='14'/><method return='android.view.ViewPropertyAnimator' name='setStartDelay' api_added='14'><parameter type='long' name='arg0'/></method><method name='start' api_added='14'/><method return='android.view.ViewPropertyAnimator' name='withEndAction' api_added='16'><parameter type='java.lang.Runnable' name='arg0'/></method><method return='android.view.ViewPropertyAnimator' name='withLayer' api_added='16'/><method return='android.view.ViewPropertyAnimator' name='withStartAction' api_added='16'><parameter type='java.lang.Runnable' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' name='ActionProvider' api_added='14'><constructor type='android.view.ActionProvider' name='ActionProvider' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='boolean' name='hasSubMenu' api_added='14'/><method deprecated='16' return='android.view.View' abstract='true' name='onCreateActionView' api_added='14'/><method return='boolean' name='onPerformDefaultAction' api_added='14'/><method name='onPrepareSubMenu' api_added='14'><parameter type='android.view.SubMenu' name='arg0'/></method><method return='boolean' name='isVisible' api_added='16'/><method return='android.view.View' name='onCreateActionView' api_added='16'><parameter type='android.view.MenuItem' name='arg0'/></method><method return='boolean' name='overridesItemVisibility' api_added='16'/><method name='refreshVisibility' api_added='16'/><method name='setVisibilityListener' api_added='16'><parameter type='android.view.ActionProvider.VisibilityListener' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='MotionEvent.PointerProperties' api_added='14' final='true'><constructor type='android.view.MotionEvent.PointerProperties' name='MotionEvent.PointerProperties' api_added='14'/><constructor type='android.view.MotionEvent.PointerProperties' name='MotionEvent.PointerProperties' api_added='14'><parameter type='android.view.MotionEvent.PointerProperties' name='arg0'/></constructor><method name='clear' api_added='14'/><method name='copyFrom' api_added='14'><parameter type='android.view.MotionEvent.PointerProperties' name='arg0'/></method></class><class extends='android.view.View' name='TextureView' api_added='14'><constructor type='android.view.TextureView' name='TextureView' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.view.TextureView' name='TextureView' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.view.TextureView' name='TextureView' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><method name='draw' api_added='14' final='true'><parameter type='android.graphics.Canvas' name='arg0'/></method><method return='android.graphics.Bitmap' name='getBitmap' api_added='14'/><method return='android.graphics.Bitmap' name='getBitmap' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.graphics.Bitmap' name='getBitmap' api_added='14'><parameter type='android.graphics.Bitmap' name='arg0'/></method><method return='android.graphics.SurfaceTexture' name='getSurfaceTexture' api_added='14'/><method return='android.view.TextureView.SurfaceTextureListener' name='getSurfaceTextureListener' api_added='14'/><method return='android.graphics.Matrix' name='getTransform' api_added='14'><parameter type='android.graphics.Matrix' name='arg0'/></method><method return='boolean' name='isAvailable' api_added='14'/><method return='android.graphics.Canvas' name='lockCanvas' api_added='14'/><method return='android.graphics.Canvas' name='lockCanvas' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/></method><method visibility='protected' name='onDraw' api_added='14' final='true'><parameter type='android.graphics.Canvas' name='arg0'/></method><method name='setOpaque' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setSurfaceTextureListener' api_added='14'><parameter type='android.view.TextureView.SurfaceTextureListener' name='arg0'/></method><method name='setTransform' api_added='14'><parameter type='android.graphics.Matrix' name='arg0'/></method><method name='unlockCanvasAndPost' api_added='14'><parameter type='android.graphics.Canvas' name='arg0'/></method><method name='setSurfaceTexture' api_added='16'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='View.AccessibilityDelegate' api_added='14'><constructor type='android.view.View.AccessibilityDelegate' name='View.AccessibilityDelegate' api_added='14'/><method return='boolean' name='dispatchPopulateAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method name='onInitializeAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method name='onInitializeAccessibilityNodeInfo' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityNodeInfo' name='arg1'/></method><method name='onPopulateAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method return='boolean' name='onRequestSendAccessibilityEvent' api_added='14'><parameter type='android.view.ViewGroup' name='arg0'/><parameter type='android.view.View' name='arg1'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg2'/></method><method name='sendAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method><method name='sendAccessibilityEventUnchecked' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method return='android.view.accessibility.AccessibilityNodeProvider' name='getAccessibilityNodeProvider' api_added='16'><parameter type='android.view.View' name='arg0'/></method><method return='boolean' name='performAccessibilityAction' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method></class><class extends='java.lang.Object' name='Choreographer' api_added='16' final='true'><method return='android.view.Choreographer' static='true' name='getInstance' api_added='16'/><method name='postFrameCallback' api_added='16'><parameter type='android.view.Choreographer.FrameCallback' name='arg0'/></method><method name='postFrameCallbackDelayed' api_added='16'><parameter type='android.view.Choreographer.FrameCallback' name='arg0'/><parameter type='long' name='arg1'/></method><method name='removeFrameCallback' api_added='16'><parameter type='android.view.Choreographer.FrameCallback' name='arg0'/></method></class><interface abstract='true' name='ContextMenu'><method abstract='true' name='clearHeader'/><method return='android.view.ContextMenu' abstract='true' name='setHeaderIcon'><parameter type='int' name='iconRes'/></method><method return='android.view.ContextMenu' abstract='true' name='setHeaderIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='android.view.ContextMenu' abstract='true' name='setHeaderTitle'><parameter type='int' name='titleRes'/></method><method return='android.view.ContextMenu' abstract='true' name='setHeaderTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.ContextMenu' abstract='true' name='setHeaderView'><parameter type='android.view.View' name='view'/></method></interface><interface abstract='true' static='true' name='ContextMenu.ContextMenuInfo'/><interface abstract='true' static='true' name='GestureDetector.OnGestureListener'><method return='boolean' abstract='true' name='onDown'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' abstract='true' name='onFling'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='velocityX'/><parameter type='float' name='velocityY'/></method><method abstract='true' name='onLongPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' abstract='true' name='onScroll'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='distanceX'/><parameter type='float' name='distanceY'/></method><method abstract='true' name='onShowPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' abstract='true' name='onSingleTapUp'><parameter type='android.view.MotionEvent' name='e'/></method></interface><interface abstract='true' static='true' name='KeyEvent.Callback'><method return='boolean' abstract='true' name='onKeyDown'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyMultiple'><parameter type='int' name='keyCode'/><parameter type='int' name='count'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyUp'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='onKeyLongPress' api_added='5'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method></interface><interface abstract='true' static='true' name='LayoutInflater.Factory'><method return='android.view.View' abstract='true' name='onCreateView'><parameter type='java.lang.String' name='name'/><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></method></interface><interface abstract='true' static='true' name='LayoutInflater.Filter'><method return='boolean' abstract='true' name='onLoadClass'><parameter type='java.lang.Class' name='clazz'/></method></interface><interface abstract='true' name='Menu'><method return='android.view.MenuItem' abstract='true' name='add'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.MenuItem' abstract='true' name='add'><parameter type='int' name='titleRes'/></method><method return='android.view.MenuItem' abstract='true' name='add'><parameter type='int' name='groupId'/><parameter type='int' name='itemId'/><parameter type='int' name='order'/><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.MenuItem' abstract='true' name='add'><parameter type='int' name='groupId'/><parameter type='int' name='itemId'/><parameter type='int' name='order'/><parameter type='int' name='titleRes'/></method><method return='int' abstract='true' name='addIntentOptions'><parameter type='int' name='groupId'/><parameter type='int' name='itemId'/><parameter type='int' name='order'/><parameter type='android.content.ComponentName' name='caller'/><parameter type='android.content.Intent[]' name='specifics'/><parameter type='android.content.Intent' name='intent'/><parameter type='int' name='flags'/><parameter type='android.view.MenuItem[]' name='outSpecificItems'/></method><method return='android.view.SubMenu' abstract='true' name='addSubMenu'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.SubMenu' abstract='true' name='addSubMenu'><parameter type='int' name='titleRes'/></method><method return='android.view.SubMenu' abstract='true' name='addSubMenu'><parameter type='int' name='groupId'/><parameter type='int' name='itemId'/><parameter type='int' name='order'/><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.SubMenu' abstract='true' name='addSubMenu'><parameter type='int' name='groupId'/><parameter type='int' name='itemId'/><parameter type='int' name='order'/><parameter type='int' name='titleRes'/></method><method abstract='true' name='clear'/><method return='android.view.MenuItem' abstract='true' name='findItem'><parameter type='int' name='id'/></method><method return='boolean' abstract='true' name='hasVisibleItems'/><method return='boolean' abstract='true' name='isShortcutKey'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='performIdentifierAction'><parameter type='int' name='id'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='performShortcut'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/><parameter type='int' name='flags'/></method><method abstract='true' name='removeGroup'><parameter type='int' name='groupId'/></method><method abstract='true' name='removeItem'><parameter type='int' name='id'/></method><method abstract='true' name='setGroupCheckable'><parameter type='int' name='group'/><parameter type='boolean' name='checkable'/><parameter type='boolean' name='exclusive'/></method><method abstract='true' name='setGroupEnabled'><parameter type='int' name='group'/><parameter type='boolean' name='enabled'/></method><method abstract='true' name='setGroupVisible'><parameter type='int' name='group'/><parameter type='boolean' name='visible'/></method><method abstract='true' name='setQwertyMode'><parameter type='boolean' name='isQwerty'/></method><method return='int' abstract='true' name='size'/><method abstract='true' name='close' api_added='3'/><method return='android.view.MenuItem' abstract='true' name='getItem' api_added='3'><parameter type='int' name='index'/></method></interface><interface abstract='true' name='MenuItem'><method return='char' abstract='true' name='getAlphabeticShortcut'/><method return='int' abstract='true' name='getGroupId'/><method return='android.graphics.drawable.Drawable' abstract='true' name='getIcon'/><method return='android.content.Intent' abstract='true' name='getIntent'/><method return='int' abstract='true' name='getItemId'/><method return='android.view.ContextMenu.ContextMenuInfo' abstract='true' name='getMenuInfo'/><method return='char' abstract='true' name='getNumericShortcut'/><method return='int' abstract='true' name='getOrder'/><method return='android.view.SubMenu' abstract='true' name='getSubMenu'/><method return='java.lang.CharSequence' abstract='true' name='getTitle'/><method return='java.lang.CharSequence' abstract='true' name='getTitleCondensed'/><method return='boolean' abstract='true' name='hasSubMenu'/><method return='boolean' abstract='true' name='isCheckable'/><method return='boolean' abstract='true' name='isChecked'/><method return='boolean' abstract='true' name='isEnabled'/><method return='boolean' abstract='true' name='isVisible'/><method return='android.view.MenuItem' abstract='true' name='setAlphabeticShortcut'><parameter type='char' name='alphaChar'/></method><method return='android.view.MenuItem' abstract='true' name='setCheckable'><parameter type='boolean' name='checkable'/></method><method return='android.view.MenuItem' abstract='true' name='setChecked'><parameter type='boolean' name='checked'/></method><method return='android.view.MenuItem' abstract='true' name='setEnabled'><parameter type='boolean' name='enabled'/></method><method return='android.view.MenuItem' abstract='true' name='setIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='android.view.MenuItem' abstract='true' name='setIcon'><parameter type='int' name='iconRes'/></method><method return='android.view.MenuItem' abstract='true' name='setIntent'><parameter type='android.content.Intent' name='intent'/></method><method return='android.view.MenuItem' abstract='true' name='setNumericShortcut'><parameter type='char' name='numericChar'/></method><method return='android.view.MenuItem' abstract='true' name='setOnMenuItemClickListener'><parameter type='android.view.MenuItem.OnMenuItemClickListener' name='menuItemClickListener'/></method><method return='android.view.MenuItem' abstract='true' name='setShortcut'><parameter type='char' name='numericChar'/><parameter type='char' name='alphaChar'/></method><method return='android.view.MenuItem' abstract='true' name='setTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.MenuItem' abstract='true' name='setTitle'><parameter type='int' name='title'/></method><method return='android.view.MenuItem' abstract='true' name='setTitleCondensed'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.MenuItem' abstract='true' name='setVisible'><parameter type='boolean' name='visible'/></method><method return='android.view.View' abstract='true' name='getActionView' api_added='11'/><method return='android.view.MenuItem' abstract='true' name='setActionView' api_added='11'><parameter type='android.view.View' name='view'/></method><method return='android.view.MenuItem' abstract='true' name='setActionView' api_added='11'><parameter type='int' name='resId'/></method><method abstract='true' name='setShowAsAction' api_added='11'><parameter type='int' name='actionEnum'/></method><method return='boolean' abstract='true' name='collapseActionView' api_added='14'/><method return='boolean' abstract='true' name='expandActionView' api_added='14'/><method return='android.view.ActionProvider' abstract='true' name='getActionProvider' api_added='14'/><method return='boolean' abstract='true' name='isActionViewExpanded' api_added='14'/><method return='android.view.MenuItem' abstract='true' name='setActionProvider' api_added='14'><parameter type='android.view.ActionProvider' name='arg0'/></method><method return='android.view.MenuItem' abstract='true' name='setOnActionExpandListener' api_added='14'><parameter type='android.view.MenuItem.OnActionExpandListener' name='arg0'/></method><method return='android.view.MenuItem' abstract='true' name='setShowAsActionFlags' api_added='14'><parameter type='int' name='arg0'/></method></interface><interface abstract='true' static='true' name='MenuItem.OnMenuItemClickListener'><method return='boolean' abstract='true' name='onMenuItemClick'><parameter type='android.view.MenuItem' name='item'/></method></interface><interface abstract='true' name='SubMenu'><method abstract='true' name='clearHeader'/><method return='android.view.MenuItem' abstract='true' name='getItem'/><method return='android.view.SubMenu' abstract='true' name='setHeaderIcon'><parameter type='int' name='iconRes'/></method><method return='android.view.SubMenu' abstract='true' name='setHeaderIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='android.view.SubMenu' abstract='true' name='setHeaderTitle'><parameter type='int' name='titleRes'/></method><method return='android.view.SubMenu' abstract='true' name='setHeaderTitle'><parameter type='java.lang.CharSequence' name='title'/></method><method return='android.view.SubMenu' abstract='true' name='setHeaderView'><parameter type='android.view.View' name='view'/></method><method return='android.view.SubMenu' abstract='true' name='setIcon'><parameter type='int' name='iconRes'/></method><method return='android.view.SubMenu' abstract='true' name='setIcon'><parameter type='android.graphics.drawable.Drawable' name='icon'/></method></interface><interface abstract='true' name='SurfaceHolder'><method abstract='true' name='addCallback'><parameter type='android.view.SurfaceHolder.Callback' name='callback'/></method><method return='android.view.Surface' abstract='true' name='getSurface'/><method return='android.graphics.Rect' abstract='true' name='getSurfaceFrame'/><method return='boolean' abstract='true' name='isCreating'/><method return='android.graphics.Canvas' abstract='true' name='lockCanvas'/><method return='android.graphics.Canvas' abstract='true' name='lockCanvas'><parameter type='android.graphics.Rect' name='dirty'/></method><method abstract='true' name='removeCallback'><parameter type='android.view.SurfaceHolder.Callback' name='callback'/></method><method abstract='true' name='setFixedSize'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='setFormat'><parameter type='int' name='format'/></method><method abstract='true' name='setKeepScreenOn'><parameter type='boolean' name='screenOn'/></method><method abstract='true' name='setSizeFromLayout'/><method deprecated='11' abstract='true' name='setType'><parameter type='int' name='type'/></method><method abstract='true' name='unlockCanvasAndPost'><parameter type='android.graphics.Canvas' name='canvas'/></method></interface><interface abstract='true' static='true' name='SurfaceHolder.Callback'><method abstract='true' name='surfaceChanged'><parameter type='android.view.SurfaceHolder' name='holder'/><parameter type='int' name='format'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='surfaceCreated'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method abstract='true' name='surfaceDestroyed'><parameter type='android.view.SurfaceHolder' name='holder'/></method></interface><interface abstract='true' static='true' name='View.OnClickListener'><method abstract='true' name='onClick'><parameter type='android.view.View' name='v'/></method></interface><interface abstract='true' static='true' name='View.OnCreateContextMenuListener'><method abstract='true' name='onCreateContextMenu'><parameter type='android.view.ContextMenu' name='menu'/><parameter type='android.view.View' name='v'/><parameter type='android.view.ContextMenu.ContextMenuInfo' name='menuInfo'/></method></interface><interface abstract='true' static='true' name='View.OnFocusChangeListener'><method abstract='true' name='onFocusChange'><parameter type='android.view.View' name='v'/><parameter type='boolean' name='hasFocus'/></method></interface><interface abstract='true' static='true' name='View.OnKeyListener'><method return='boolean' abstract='true' name='onKey'><parameter type='android.view.View' name='v'/><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method></interface><interface abstract='true' static='true' name='View.OnLongClickListener'><method return='boolean' abstract='true' name='onLongClick'><parameter type='android.view.View' name='v'/></method></interface><interface abstract='true' static='true' name='View.OnTouchListener'><method return='boolean' abstract='true' name='onTouch'><parameter type='android.view.View' name='v'/><parameter type='android.view.MotionEvent' name='event'/></method></interface><interface abstract='true' static='true' name='ViewGroup.OnHierarchyChangeListener'><method abstract='true' name='onChildViewAdded'><parameter type='android.view.View' name='parent'/><parameter type='android.view.View' name='child'/></method><method abstract='true' name='onChildViewRemoved'><parameter type='android.view.View' name='parent'/><parameter type='android.view.View' name='child'/></method></interface><interface abstract='true' name='ViewManager'><method abstract='true' name='addView'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method><method abstract='true' name='removeView'><parameter type='android.view.View' name='view'/></method><method abstract='true' name='updateViewLayout'><parameter type='android.view.View' name='view'/><parameter type='android.view.ViewGroup.LayoutParams' name='params'/></method></interface><interface abstract='true' name='ViewParent'><method abstract='true' name='bringChildToFront'><parameter type='android.view.View' name='child'/></method><method abstract='true' name='childDrawableStateChanged'><parameter type='android.view.View' name='child'/></method><method abstract='true' name='clearChildFocus'><parameter type='android.view.View' name='child'/></method><method abstract='true' name='createContextMenu'><parameter type='android.view.ContextMenu' name='menu'/></method><method return='android.view.View' abstract='true' name='focusSearch'><parameter type='android.view.View' name='v'/><parameter type='int' name='direction'/></method><method abstract='true' name='focusableViewAvailable'><parameter type='android.view.View' name='v'/></method><method return='boolean' abstract='true' name='getChildVisibleRect'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='r'/><parameter type='android.graphics.Point' name='offset'/></method><method return='android.view.ViewParent' abstract='true' name='getParent'/><method abstract='true' name='invalidateChild'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='r'/></method><method return='android.view.ViewParent' abstract='true' name='invalidateChildInParent'><parameter type='int[]' name='location'/><parameter type='android.graphics.Rect' name='r'/></method><method return='boolean' abstract='true' name='isLayoutRequested'/><method abstract='true' name='recomputeViewAttributes'><parameter type='android.view.View' name='child'/></method><method abstract='true' name='requestChildFocus'><parameter type='android.view.View' name='child'/><parameter type='android.view.View' name='focused'/></method><method abstract='true' name='requestDisallowInterceptTouchEvent'><parameter type='boolean' name='disallowIntercept'/></method><method abstract='true' name='requestLayout'/><method abstract='true' name='requestTransparentRegion'><parameter type='android.view.View' name='child'/></method><method return='boolean' abstract='true' name='showContextMenuForChild'><parameter type='android.view.View' name='originalView'/></method><method return='boolean' abstract='true' name='requestChildRectangleOnScreen' api_added='3'><parameter type='android.view.View' name='child'/><parameter type='android.graphics.Rect' name='rectangle'/><parameter type='boolean' name='immediate'/></method><method return='android.view.ActionMode' abstract='true' name='startActionModeForChild' api_added='11'><parameter type='android.view.View' name='originalView'/><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method return='boolean' abstract='true' name='requestSendAccessibilityEvent' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.accessibility.AccessibilityEvent' name='arg1'/></method><method return='android.view.ViewParent' abstract='true' name='getParentForAccessibility' api_added='16'/><method abstract='true' name='requestFitSystemWindows' api_added='16'/></interface><interface abstract='true' static='true' name='ViewStub.OnInflateListener'><method abstract='true' name='onInflate'><parameter type='android.view.ViewStub' name='stub'/><parameter type='android.view.View' name='inflated'/></method></interface><interface abstract='true' static='true' name='ViewTreeObserver.OnGlobalFocusChangeListener'><method abstract='true' name='onGlobalFocusChanged'><parameter type='android.view.View' name='oldFocus'/><parameter type='android.view.View' name='newFocus'/></method></interface><interface abstract='true' static='true' name='ViewTreeObserver.OnGlobalLayoutListener'><method abstract='true' name='onGlobalLayout'/></interface><interface abstract='true' static='true' name='ViewTreeObserver.OnPreDrawListener'><method return='boolean' abstract='true' name='onPreDraw'/></interface><interface abstract='true' static='true' name='ViewTreeObserver.OnTouchModeChangeListener'><method abstract='true' name='onTouchModeChanged'><parameter type='boolean' name='isInTouchMode'/></method></interface><interface abstract='true' static='true' name='Window.Callback'><method return='boolean' abstract='true' name='dispatchKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='dispatchTouchEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method return='boolean' abstract='true' name='dispatchTrackballEvent'><parameter type='android.view.MotionEvent' name='event'/></method><method abstract='true' name='onContentChanged'/><method return='boolean' abstract='true' name='onCreatePanelMenu'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='android.view.View' abstract='true' name='onCreatePanelView'><parameter type='int' name='featureId'/></method><method return='boolean' abstract='true' name='onMenuItemSelected'><parameter type='int' name='featureId'/><parameter type='android.view.MenuItem' name='item'/></method><method return='boolean' abstract='true' name='onMenuOpened'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method abstract='true' name='onPanelClosed'><parameter type='int' name='featureId'/><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' abstract='true' name='onPreparePanel'><parameter type='int' name='featureId'/><parameter type='android.view.View' name='view'/><parameter type='android.view.Menu' name='menu'/></method><method return='boolean' abstract='true' name='onSearchRequested'/><method abstract='true' name='onWindowAttributesChanged'><parameter type='android.view.WindowManager.LayoutParams' name='attrs'/></method><method abstract='true' name='onWindowFocusChanged'><parameter type='boolean' name='hasFocus'/></method><method return='boolean' abstract='true' name='dispatchPopulateAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method abstract='true' name='onAttachedToWindow' api_added='5'/><method abstract='true' name='onDetachedFromWindow' api_added='5'/><method return='boolean' abstract='true' name='dispatchKeyShortcutEvent' api_added='11'><parameter type='android.view.KeyEvent' name='event'/></method><method abstract='true' name='onActionModeFinished' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method abstract='true' name='onActionModeStarted' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method return='android.view.ActionMode' abstract='true' name='onWindowStartingActionMode' api_added='11'><parameter type='android.view.ActionMode.Callback' name='callback'/></method><method return='boolean' abstract='true' name='dispatchGenericMotionEvent' api_added='12'><parameter type='android.view.MotionEvent' name='event'/></method></interface><interface abstract='true' name='WindowManager'><method return='android.view.Display' abstract='true' name='getDefaultDisplay'/><method abstract='true' name='removeViewImmediate'><parameter type='android.view.View' name='view'/></method></interface><interface abstract='true' static='true' name='GestureDetector.OnDoubleTapListener' api_added='3'><method return='boolean' abstract='true' name='onDoubleTap' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' abstract='true' name='onDoubleTapEvent' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' abstract='true' name='onSingleTapConfirmed' api_added='3'><parameter type='android.view.MotionEvent' name='e'/></method></interface><interface abstract='true' static='true' name='ViewTreeObserver.OnScrollChangedListener' api_added='3'><method abstract='true' name='onScrollChanged' api_added='3'/></interface><interface abstract='true' static='true' name='ScaleGestureDetector.OnScaleGestureListener' api_added='8'><method return='boolean' abstract='true' name='onScale' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method><method return='boolean' abstract='true' name='onScaleBegin' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method><method abstract='true' name='onScaleEnd' api_added='8'><parameter type='android.view.ScaleGestureDetector' name='detector'/></method></interface><interface abstract='true' static='true' name='InputQueue.Callback' api_added='9'><method abstract='true' name='onInputQueueCreated' api_added='9'><parameter type='android.view.InputQueue' name='queue'/></method><method abstract='true' name='onInputQueueDestroyed' api_added='9'><parameter type='android.view.InputQueue' name='queue'/></method></interface><interface abstract='true' static='true' name='SurfaceHolder.Callback2' api_added='9'><method abstract='true' name='surfaceRedrawNeeded' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/></method></interface><interface abstract='true' static='true' name='ActionMode.Callback' api_added='11'><method return='boolean' abstract='true' name='onActionItemClicked' api_added='11'><parameter type='android.view.ActionMode' name='mode'/><parameter type='android.view.MenuItem' name='item'/></method><method return='boolean' abstract='true' name='onCreateActionMode' api_added='11'><parameter type='android.view.ActionMode' name='mode'/><parameter type='android.view.Menu' name='menu'/></method><method abstract='true' name='onDestroyActionMode' api_added='11'><parameter type='android.view.ActionMode' name='mode'/></method><method return='boolean' abstract='true' name='onPrepareActionMode' api_added='11'><parameter type='android.view.ActionMode' name='mode'/><parameter type='android.view.Menu' name='menu'/></method></interface><interface abstract='true' static='true' name='LayoutInflater.Factory2' api_added='11'><method return='android.view.View' abstract='true' name='onCreateView' api_added='11'><parameter type='android.view.View' name='parent'/><parameter type='java.lang.String' name='name'/><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></method></interface><interface abstract='true' static='true' name='View.OnDragListener' api_added='11'><method return='boolean' abstract='true' name='onDrag' api_added='11'><parameter type='android.view.View' name='v'/><parameter type='android.view.DragEvent' name='event'/></method></interface><interface abstract='true' static='true' name='View.OnLayoutChangeListener' api_added='11'><method abstract='true' name='onLayoutChange' api_added='11'><parameter type='android.view.View' name='v'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='oldLeft'/><parameter type='int' name='oldTop'/><parameter type='int' name='oldRight'/><parameter type='int' name='oldBottom'/></method></interface><interface abstract='true' static='true' name='View.OnSystemUiVisibilityChangeListener' api_added='11'><method abstract='true' name='onSystemUiVisibilityChange' api_added='11'><parameter type='int' name='visibility'/></method></interface><interface abstract='true' static='true' name='View.OnAttachStateChangeListener' api_added='12'><method abstract='true' name='onViewAttachedToWindow' api_added='12'><parameter type='android.view.View' name='v'/></method><method abstract='true' name='onViewDetachedFromWindow' api_added='12'><parameter type='android.view.View' name='v'/></method></interface><interface abstract='true' static='true' name='View.OnGenericMotionListener' api_added='12'><method return='boolean' abstract='true' name='onGenericMotion' api_added='12'><parameter type='android.view.View' name='v'/><parameter type='android.view.MotionEvent' name='event'/></method></interface><interface extends='java.lang.Object' abstract='true' name='CollapsibleActionView' api_added='14'><method abstract='true' name='onActionViewCollapsed' api_added='14'/><method abstract='true' name='onActionViewExpanded' api_added='14'/></interface><interface extends='java.lang.Object' abstract='true' static='true' name='MenuItem.OnActionExpandListener' api_added='14'><method return='boolean' abstract='true' name='onMenuItemActionCollapse' api_added='14'><parameter type='android.view.MenuItem' name='arg0'/></method><method return='boolean' abstract='true' name='onMenuItemActionExpand' api_added='14'><parameter type='android.view.MenuItem' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='TextureView.SurfaceTextureListener' api_added='14'><method abstract='true' name='onSurfaceTextureAvailable' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='boolean' abstract='true' name='onSurfaceTextureDestroyed' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></method><method abstract='true' name='onSurfaceTextureSizeChanged' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method abstract='true' name='onSurfaceTextureUpdated' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='View.OnHoverListener' api_added='14'><method return='boolean' abstract='true' name='onHover' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='android.view.MotionEvent' name='arg1'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='ActionProvider.VisibilityListener' api_added='16'><method abstract='true' name='onActionProviderVisibilityChanged' api_added='16'><parameter type='boolean' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='Choreographer.FrameCallback' api_added='16'><method abstract='true' name='doFrame' api_added='16'><parameter type='long' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='ViewTreeObserver.OnDrawListener' api_added='16'><method abstract='true' name='onDraw' api_added='16'/></interface></package><package name='android.view.animation'><class extends='java.lang.Object' name='AccelerateDecelerateInterpolator'><constructor type='android.view.animation.AccelerateDecelerateInterpolator' name='AccelerateDecelerateInterpolator'/><constructor type='android.view.animation.AccelerateDecelerateInterpolator' name='AccelerateDecelerateInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation'><parameter type='float' name='input'/></method></class><class extends='java.lang.Object' name='AccelerateInterpolator'><constructor type='android.view.animation.AccelerateInterpolator' name='AccelerateInterpolator'/><constructor type='android.view.animation.AccelerateInterpolator' name='AccelerateInterpolator'><parameter type='float' name='factor'/></constructor><constructor type='android.view.animation.AccelerateInterpolator' name='AccelerateInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation'><parameter type='float' name='input'/></method></class><class extends='android.view.animation.Animation' name='AlphaAnimation'><constructor type='android.view.animation.AlphaAnimation' name='AlphaAnimation'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.AlphaAnimation' name='AlphaAnimation'><parameter type='float' name='fromAlpha'/><parameter type='float' name='toAlpha'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Animation'><constructor type='android.view.animation.Animation' name='Animation'/><constructor type='android.view.animation.Animation' name='Animation'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method visibility='protected' name='applyTransformation'><parameter type='float' name='interpolatedTime'/><parameter type='android.view.animation.Transformation' name='t'/></method><method visibility='protected' name='ensureInterpolator'/><method return='long' name='getDuration'/><method return='boolean' name='getFillAfter'/><method return='boolean' name='getFillBefore'/><method return='android.view.animation.Interpolator' name='getInterpolator'/><method return='int' name='getRepeatCount'/><method return='int' name='getRepeatMode'/><method return='long' name='getStartOffset'/><method return='long' name='getStartTime'/><method return='boolean' name='getTransformation'><parameter type='long' name='currentTime'/><parameter type='android.view.animation.Transformation' name='outTransformation'/></method><method return='int' name='getZAdjustment'/><method return='boolean' name='hasEnded'/><method return='boolean' name='hasStarted'/><method name='initialize'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='parentWidth'/><parameter type='int' name='parentHeight'/></method><method return='boolean' name='isInitialized'/><method name='reset'/><method visibility='protected' return='float' name='resolveSize'><parameter type='int' name='type'/><parameter type='float' name='value'/><parameter type='int' name='size'/><parameter type='int' name='parentSize'/></method><method name='restrictDuration'><parameter type='long' name='durationMillis'/></method><method name='scaleCurrentDuration'><parameter type='float' name='scale'/></method><method name='setAnimationListener'><parameter type='android.view.animation.Animation.AnimationListener' name='listener'/></method><method name='setDuration'><parameter type='long' name='durationMillis'/></method><method name='setFillAfter'><parameter type='boolean' name='fillAfter'/></method><method name='setFillBefore'><parameter type='boolean' name='fillBefore'/></method><method name='setInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resID'/></method><method name='setInterpolator'><parameter type='android.view.animation.Interpolator' name='i'/></method><method name='setRepeatCount'><parameter type='int' name='repeatCount'/></method><method name='setRepeatMode'><parameter type='int' name='repeatMode'/></method><method name='setStartOffset'><parameter type='long' name='startOffset'/></method><method name='setStartTime'><parameter type='long' name='startTimeMillis'/></method><method name='setZAdjustment'><parameter type='int' name='zAdjustment'/></method><method name='start'/><method name='startNow'/><method return='boolean' name='willChangeBounds'/><method return='boolean' name='willChangeTransformationMatrix'/><method return='long' name='computeDurationHint' api_added='3'/><method return='boolean' name='isFillEnabled' api_added='3'/><method name='setFillEnabled' api_added='3'><parameter type='boolean' name='fillEnabled'/></method><method return='boolean' name='getDetachWallpaper' api_added='5'/><method name='setDetachWallpaper' api_added='5'><parameter type='boolean' name='detachWallpaper'/></method><method name='cancel' api_added='8'/><method visibility='protected' return='float' name='getScaleFactor' api_added='11'/><method return='boolean' name='getTransformation' api_added='11'><parameter type='long' name='currentTime'/><parameter type='android.view.animation.Transformation' name='outTransformation'/><parameter type='float' name='scale'/></method><method return='int' name='getBackgroundColor' api_added='12'/><method name='setBackgroundColor' api_added='12'><parameter type='int' name='bg'/></method></class><class visibility='protected' extends='java.lang.Object' static='true' name='Animation.Description'><constructor visibility='protected' type='android.view.animation.Animation.Description' name='Animation.Description'/></class><class extends='android.view.animation.Animation' name='AnimationSet'><constructor type='android.view.animation.AnimationSet' name='AnimationSet'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.AnimationSet' name='AnimationSet'><parameter type='boolean' name='shareInterpolator'/></constructor><method name='addAnimation'><parameter type='android.view.animation.Animation' name='a'/></method><method return='java.util.List&lt;android.view.animation.Animation&gt;' name='getAnimations'/></class><class extends='java.lang.Object' name='AnimationUtils'><constructor type='android.view.animation.AnimationUtils' name='AnimationUtils'/><method return='long' static='true' name='currentAnimationTimeMillis'/><method return='android.view.animation.Animation' static='true' name='loadAnimation'><parameter type='android.content.Context' name='context'/><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.view.animation.Interpolator' static='true' name='loadInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.view.animation.LayoutAnimationController' static='true' name='loadLayoutAnimation'><parameter type='android.content.Context' name='context'/><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.view.animation.Animation' static='true' name='makeInAnimation'><parameter type='android.content.Context' name='c'/><parameter type='boolean' name='fromLeft'/></method><method return='android.view.animation.Animation' static='true' name='makeInChildBottomAnimation'><parameter type='android.content.Context' name='c'/></method><method return='android.view.animation.Animation' static='true' name='makeOutAnimation'><parameter type='android.content.Context' name='c'/><parameter type='boolean' name='toRight'/></method></class><class extends='java.lang.Object' name='CycleInterpolator'><constructor type='android.view.animation.CycleInterpolator' name='CycleInterpolator'><parameter type='float' name='cycles'/></constructor><constructor type='android.view.animation.CycleInterpolator' name='CycleInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation'><parameter type='float' name='input'/></method></class><class extends='java.lang.Object' name='DecelerateInterpolator'><constructor type='android.view.animation.DecelerateInterpolator' name='DecelerateInterpolator'/><constructor type='android.view.animation.DecelerateInterpolator' name='DecelerateInterpolator'><parameter type='float' name='factor'/></constructor><constructor type='android.view.animation.DecelerateInterpolator' name='DecelerateInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation'><parameter type='float' name='input'/></method></class><class extends='android.view.animation.LayoutAnimationController' name='GridLayoutAnimationController'><constructor type='android.view.animation.GridLayoutAnimationController' name='GridLayoutAnimationController'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.GridLayoutAnimationController' name='GridLayoutAnimationController'><parameter type='android.view.animation.Animation' name='animation'/></constructor><constructor type='android.view.animation.GridLayoutAnimationController' name='GridLayoutAnimationController'><parameter type='android.view.animation.Animation' name='animation'/><parameter type='float' name='columnDelay'/><parameter type='float' name='rowDelay'/></constructor><method return='float' name='getColumnDelay'/><method return='int' name='getDirection'/><method return='int' name='getDirectionPriority'/><method return='float' name='getRowDelay'/><method name='setColumnDelay'><parameter type='float' name='columnDelay'/></method><method name='setDirection'><parameter type='int' name='direction'/></method><method name='setDirectionPriority'><parameter type='int' name='directionPriority'/></method><method name='setRowDelay'><parameter type='float' name='rowDelay'/></method></class><class extends='android.view.animation.LayoutAnimationController.AnimationParameters' static='true' name='GridLayoutAnimationController.AnimationParameters'><constructor type='android.view.animation.GridLayoutAnimationController.AnimationParameters' name='GridLayoutAnimationController.AnimationParameters'/></class><class extends='java.lang.Object' name='LayoutAnimationController'><constructor type='android.view.animation.LayoutAnimationController' name='LayoutAnimationController'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.LayoutAnimationController' name='LayoutAnimationController'><parameter type='android.view.animation.Animation' name='animation'/></constructor><constructor type='android.view.animation.LayoutAnimationController' name='LayoutAnimationController'><parameter type='android.view.animation.Animation' name='animation'/><parameter type='float' name='delay'/></constructor><method return='android.view.animation.Animation' name='getAnimation'/><method return='android.view.animation.Animation' name='getAnimationForView' final='true'><parameter type='android.view.View' name='view'/></method><method return='float' name='getDelay'/><method visibility='protected' return='long' name='getDelayForView'><parameter type='android.view.View' name='view'/></method><method return='android.view.animation.Interpolator' name='getInterpolator'/><method return='int' name='getOrder'/><method visibility='protected' return='int' name='getTransformedIndex'><parameter type='android.view.animation.LayoutAnimationController.AnimationParameters' name='params'/></method><method return='boolean' name='isDone'/><method name='setAnimation'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='setAnimation'><parameter type='android.view.animation.Animation' name='animation'/></method><method name='setDelay'><parameter type='float' name='delay'/></method><method name='setInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='setInterpolator'><parameter type='android.view.animation.Interpolator' name='interpolator'/></method><method name='setOrder'><parameter type='int' name='order'/></method><method name='start'/><method return='boolean' name='willOverlap'/></class><class extends='java.lang.Object' static='true' name='LayoutAnimationController.AnimationParameters'><constructor type='android.view.animation.LayoutAnimationController.AnimationParameters' name='LayoutAnimationController.AnimationParameters'/></class><class extends='java.lang.Object' name='LinearInterpolator'><constructor type='android.view.animation.LinearInterpolator' name='LinearInterpolator'/><constructor type='android.view.animation.LinearInterpolator' name='LinearInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation'><parameter type='float' name='input'/></method></class><class extends='android.view.animation.Animation' name='RotateAnimation'><constructor type='android.view.animation.RotateAnimation' name='RotateAnimation'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.RotateAnimation' name='RotateAnimation'><parameter type='float' name='fromDegrees'/><parameter type='float' name='toDegrees'/></constructor><constructor type='android.view.animation.RotateAnimation' name='RotateAnimation'><parameter type='float' name='fromDegrees'/><parameter type='float' name='toDegrees'/><parameter type='float' name='pivotX'/><parameter type='float' name='pivotY'/></constructor><constructor type='android.view.animation.RotateAnimation' name='RotateAnimation'><parameter type='float' name='fromDegrees'/><parameter type='float' name='toDegrees'/><parameter type='int' name='pivotXType'/><parameter type='float' name='pivotXValue'/><parameter type='int' name='pivotYType'/><parameter type='float' name='pivotYValue'/></constructor></class><class extends='android.view.animation.Animation' name='ScaleAnimation'><constructor type='android.view.animation.ScaleAnimation' name='ScaleAnimation'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.ScaleAnimation' name='ScaleAnimation'><parameter type='float' name='fromX'/><parameter type='float' name='toX'/><parameter type='float' name='fromY'/><parameter type='float' name='toY'/></constructor><constructor type='android.view.animation.ScaleAnimation' name='ScaleAnimation'><parameter type='float' name='fromX'/><parameter type='float' name='toX'/><parameter type='float' name='fromY'/><parameter type='float' name='toY'/><parameter type='float' name='pivotX'/><parameter type='float' name='pivotY'/></constructor><constructor type='android.view.animation.ScaleAnimation' name='ScaleAnimation'><parameter type='float' name='fromX'/><parameter type='float' name='toX'/><parameter type='float' name='fromY'/><parameter type='float' name='toY'/><parameter type='int' name='pivotXType'/><parameter type='float' name='pivotXValue'/><parameter type='int' name='pivotYType'/><parameter type='float' name='pivotYValue'/></constructor></class><class extends='java.lang.Object' name='Transformation'><constructor type='android.view.animation.Transformation' name='Transformation'/><method name='clear'/><method name='compose'><parameter type='android.view.animation.Transformation' name='t'/></method><method return='float' name='getAlpha'/><method return='android.graphics.Matrix' name='getMatrix'/><method return='int' name='getTransformationType'/><method name='set'><parameter type='android.view.animation.Transformation' name='t'/></method><method name='setAlpha'><parameter type='float' name='alpha'/></method><method name='setTransformationType'><parameter type='int' name='transformationType'/></method><method return='java.lang.String' name='toShortString' api_added='3'/></class><class extends='android.view.animation.Animation' name='TranslateAnimation'><constructor type='android.view.animation.TranslateAnimation' name='TranslateAnimation'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.view.animation.TranslateAnimation' name='TranslateAnimation'><parameter type='float' name='fromXDelta'/><parameter type='float' name='toXDelta'/><parameter type='float' name='fromYDelta'/><parameter type='float' name='toYDelta'/></constructor><constructor type='android.view.animation.TranslateAnimation' name='TranslateAnimation'><parameter type='int' name='fromXType'/><parameter type='float' name='fromXValue'/><parameter type='int' name='toXType'/><parameter type='float' name='toXValue'/><parameter type='int' name='fromYType'/><parameter type='float' name='fromYValue'/><parameter type='int' name='toYType'/><parameter type='float' name='toYValue'/></constructor></class><class extends='java.lang.Object' name='AnticipateInterpolator' api_added='4'><constructor type='android.view.animation.AnticipateInterpolator' name='AnticipateInterpolator' api_added='4'/><constructor type='android.view.animation.AnticipateInterpolator' name='AnticipateInterpolator' api_added='4'><parameter type='float' name='tension'/></constructor><constructor type='android.view.animation.AnticipateInterpolator' name='AnticipateInterpolator' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation' api_added='4'><parameter type='float' name='t'/></method></class><class extends='java.lang.Object' name='AnticipateOvershootInterpolator' api_added='4'><constructor type='android.view.animation.AnticipateOvershootInterpolator' name='AnticipateOvershootInterpolator' api_added='4'/><constructor type='android.view.animation.AnticipateOvershootInterpolator' name='AnticipateOvershootInterpolator' api_added='4'><parameter type='float' name='tension'/></constructor><constructor type='android.view.animation.AnticipateOvershootInterpolator' name='AnticipateOvershootInterpolator' api_added='4'><parameter type='float' name='tension'/><parameter type='float' name='extraTension'/></constructor><constructor type='android.view.animation.AnticipateOvershootInterpolator' name='AnticipateOvershootInterpolator' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation' api_added='4'><parameter type='float' name='t'/></method></class><class extends='java.lang.Object' name='BounceInterpolator' api_added='4'><constructor type='android.view.animation.BounceInterpolator' name='BounceInterpolator' api_added='4'/><constructor type='android.view.animation.BounceInterpolator' name='BounceInterpolator' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation' api_added='4'><parameter type='float' name='t'/></method></class><class extends='java.lang.Object' name='OvershootInterpolator' api_added='4'><constructor type='android.view.animation.OvershootInterpolator' name='OvershootInterpolator' api_added='4'/><constructor type='android.view.animation.OvershootInterpolator' name='OvershootInterpolator' api_added='4'><parameter type='float' name='tension'/></constructor><constructor type='android.view.animation.OvershootInterpolator' name='OvershootInterpolator' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='float' name='getInterpolation' api_added='4'><parameter type='float' name='t'/></method></class><interface abstract='true' static='true' name='Animation.AnimationListener'><method abstract='true' name='onAnimationEnd'><parameter type='android.view.animation.Animation' name='animation'/></method><method abstract='true' name='onAnimationRepeat'><parameter type='android.view.animation.Animation' name='animation'/></method><method abstract='true' name='onAnimationStart'><parameter type='android.view.animation.Animation' name='animation'/></method></interface><interface abstract='true' name='Interpolator'><method return='float' abstract='true' api_removed='11' name='getInterpolation'><parameter type='float' name='input'/></method></interface></package><package name='android.webkit'><class extends='java.lang.Object' deprecated='11' name='CacheManager' final='true'><constructor type='android.webkit.CacheManager' name='CacheManager'/><method deprecated='11' return='boolean' static='true' name='cacheDisabled'/><method deprecated='8' return='boolean' static='true' name='endCacheTransaction'/><method deprecated='11' return='android.webkit.CacheManager.CacheResult' api_removed='14' static='true' name='getCacheFile'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='headers'/></method><method deprecated='11' return='java.io.File' static='true' name='getCacheFileBaseDir'/><method deprecated='11' static='true' name='saveCacheFile'><parameter type='java.lang.String' name='url'/><parameter type='android.webkit.CacheManager.CacheResult' name='cacheRet'/></method><method deprecated='8' return='boolean' static='true' name='startCacheTransaction'/><method deprecated='14' return='android.webkit.CacheManager.CacheResult' static='true' name='getCacheFile' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/></method></class><class extends='java.lang.Object' deprecated='11' static='true' name='CacheManager.CacheResult'><constructor type='android.webkit.CacheManager.CacheResult' name='CacheManager.CacheResult'/><method return='long' name='getContentLength'/><method return='java.lang.String' name='getETag'/><method return='java.lang.String' name='getEncoding'/><method return='long' name='getExpires'/><method return='int' name='getHttpStatusCode'/><method return='java.io.InputStream' name='getInputStream'/><method return='java.lang.String' name='getLastModified'/><method return='java.lang.String' name='getLocalPath'/><method return='java.lang.String' name='getLocation'/><method return='java.lang.String' name='getMimeType'/><method return='java.io.OutputStream' name='getOutputStream'/><method name='setEncoding'><parameter type='java.lang.String' name='encoding'/></method><method name='setInputStream'><parameter type='java.io.InputStream' name='stream'/></method><method return='java.lang.String' name='getContentDisposition' api_added='7'/><method return='java.lang.String' name='getExpiresString' api_added='7'/></class><class visibility='' extends='android.os.Handler' api_removed='8' name='CallbackProxy'><constructor api_removed='8' type='android.webkit.CallbackProxy' name='CallbackProxy'><parameter type='android.content.Context' name='context'/><parameter type='android.webkit.WebView' name='w'/></constructor><method return='android.webkit.WebView' api_removed='8' name='createWindow'><parameter type='boolean' name='dialog'/><parameter type='boolean' name='userGesture'/></method><method api_removed='8' name='doUpdateVisitedHistory'><parameter type='java.lang.String' name='url'/><parameter type='boolean' name='isReload'/></method><method return='android.webkit.WebBackForwardList' api_removed='8' name='getBackForwardList'/><method return='int' api_removed='8' name='getProgress'/><method api_removed='8' name='onCloseWindow'><parameter type='android.webkit.WebView' name='window'/></method><method return='boolean' api_removed='8' name='onDownloadStart'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='userAgent'/><parameter type='java.lang.String' name='contentDisposition'/><parameter type='java.lang.String' name='mimetype'/><parameter type='long' name='contentLength'/></method><method api_removed='8' name='onFormResubmission'><parameter type='android.os.Message' name='dontResend'/><parameter type='android.os.Message' name='resend'/></method><method api_removed='8' name='onJsAlert'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/></method><method return='boolean' api_removed='8' name='onJsBeforeUnload'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/></method><method return='boolean' api_removed='8' name='onJsConfirm'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/></method><method return='java.lang.String' api_removed='8' name='onJsPrompt'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='defaultValue'/></method><method api_removed='8' name='onLoadResource'><parameter type='java.lang.String' name='url'/></method><method api_removed='8' name='onPageFinished'><parameter type='java.lang.String' name='url'/></method><method api_removed='8' name='onPageStarted'><parameter type='java.lang.String' name='url'/><parameter type='android.graphics.Bitmap' name='favicon'/></method><method api_removed='8' name='onProgressChanged'><parameter type='int' name='newProgress'/></method><method api_removed='8' name='onReceivedError'><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='description'/><parameter type='java.lang.String' name='failingUrl'/></method><method api_removed='8' name='onReceivedHttpAuthRequest'><parameter type='android.webkit.HttpAuthHandler' name='handler'/><parameter type='java.lang.String' name='hostName'/><parameter type='java.lang.String' name='realmName'/></method><method api_removed='8' name='onReceivedIcon'><parameter type='android.graphics.Bitmap' name='icon'/></method><method api_removed='8' name='onReceivedTitle'><parameter type='java.lang.String' name='title'/></method><method api_removed='8' name='onRequestFocus'/><method return='boolean' api_removed='8' name='onSavePassword'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='password'/><parameter type='android.os.Message' name='resumeMsg'/></method><method api_removed='8' name='onScaleChanged'><parameter type='float' name='oldScale'/><parameter type='float' name='newScale'/></method><method api_removed='8' name='onTooManyRedirects'><parameter type='android.os.Message' name='cancelMsg'/><parameter type='android.os.Message' name='continueMsg'/></method><method api_removed='8' name='onUnhandledKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method api_removed='8' name='setDownloadListener'><parameter type='android.webkit.DownloadListener' name='client'/></method><method api_removed='8' name='setWebChromeClient'><parameter type='android.webkit.WebChromeClient' name='client'/></method><method api_removed='8' name='setWebViewClient'><parameter type='android.webkit.WebViewClient' name='client'/></method><method return='boolean' api_removed='8' name='shouldOverrideUrlLoading'><parameter type='java.lang.String' name='url'/></method><method return='boolean' api_removed='8' name='uiOverrideKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' api_removed='8' name='uiOverrideUrlLoading'><parameter type='java.lang.String' name='overrideUrl'/></method><method api_removed='8' name='onExceededDatabaseQuota' api_added='5'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='databaseIdentifier'/><parameter type='long' name='currentQuota'/><parameter type='long' name='estimatedSize'/><parameter type='long' name='totalUsedQuota'/><parameter type='android.webkit.WebStorage.QuotaUpdater' name='quotaUpdater'/></method><method api_removed='8' name='addMessageToConsole' api_added='7'><parameter type='java.lang.String' name='message'/><parameter type='int' name='lineNumber'/><parameter type='java.lang.String' name='sourceID'/></method><method api_removed='8' name='getVisitedHistory' api_added='7'><parameter type='android.webkit.ValueCallback&lt;java.lang.String[]&gt;' name='callback'/></method><method return='android.webkit.WebChromeClient' api_removed='8' name='getWebChromeClient' api_added='7'/><method api_removed='8' name='onGeolocationPermissionsHidePrompt' api_added='7'/><method api_removed='8' name='onGeolocationPermissionsShowPrompt' api_added='7'><parameter type='java.lang.String' name='origin'/><parameter type='android.webkit.GeolocationPermissions.Callback' name='callback'/></method><method return='boolean' api_removed='8' name='onJsTimeout' api_added='7'/><method api_removed='8' name='onReachedMaxAppCacheSize' api_added='7'><parameter type='long' name='spaceNeeded'/><parameter type='long' name='totalUsedQuota'/><parameter type='android.webkit.WebStorage.QuotaUpdater' name='quotaUpdater'/></method></class><class extends='java.lang.Object' name='CookieManager' final='true'><method return='boolean' synchronized='true' name='acceptCookie'/><method return='java.lang.String' name='getCookie'><parameter type='java.lang.String' name='url'/></method><method return='android.webkit.CookieManager' static='true' synchronized='true' name='getInstance'/><method return='boolean' synchronized='true' name='hasCookies'/><method synchronized='true' name='removeAllCookie'/><method synchronized='true' name='removeExpiredCookie'/><method synchronized='true' name='removeSessionCookie'/><method synchronized='true' name='setAcceptCookie'><parameter type='boolean' name='accept'/></method><method name='setCookie'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='value'/></method><method return='boolean' static='true' name='allowFileSchemeCookies' api_added='12'/><method static='true' name='setAcceptFileSchemeCookies' api_added='12'><parameter type='boolean' name='accept'/></method></class><class extends='android.webkit.WebSyncManager' name='CookieSyncManager' final='true'><method return='android.webkit.CookieSyncManager' static='true' synchronized='true' name='createInstance'><parameter type='android.content.Context' name='context'/></method><method return='android.webkit.CookieSyncManager' static='true' synchronized='true' name='getInstance'/><method visibility='protected' name='syncFromRamToFlash'/></class><class extends='java.lang.Object' name='DateSorter'><constructor type='android.webkit.DateSorter' name='DateSorter'><parameter type='android.content.Context' name='context'/></constructor><method return='long' name='getBoundary'><parameter type='int' name='index'/></method><method return='int' name='getIndex'><parameter type='long' name='time'/></method><method return='java.lang.String' name='getLabel'><parameter type='int' name='index'/></method></class><class extends='android.os.Handler' name='HttpAuthHandler'><method name='cancel'/><method name='proceed'><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='password'/></method><method return='boolean' name='useHttpAuthUsernamePassword'/></class><class extends='android.webkit.JsResult' name='JsPromptResult'><method name='confirm'><parameter type='java.lang.String' name='result'/></method></class><class extends='java.lang.Object' name='JsResult'><method name='cancel' final='true'/><method name='confirm' final='true'/><method visibility='protected' api_removed='16' name='wakeUp' final='true'/></class><class extends='java.lang.Object' name='MimeTypeMap'><method return='java.lang.String' name='getExtensionFromMimeType'><parameter type='java.lang.String' name='mimeType'/></method><method return='java.lang.String' static='true' name='getFileExtensionFromUrl'><parameter type='java.lang.String' name='url'/></method><method return='java.lang.String' name='getMimeTypeFromExtension'><parameter type='java.lang.String' name='extension'/></method><method return='android.webkit.MimeTypeMap' static='true' name='getSingleton'/><method return='boolean' name='hasExtension'><parameter type='java.lang.String' name='extension'/></method><method return='boolean' name='hasMimeType'><parameter type='java.lang.String' name='mimeType'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='12' name='Plugin'><constructor deprecated='5' api_removed='12' type='android.webkit.Plugin' name='Plugin'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='description'/></constructor><method deprecated='5' api_removed='12' name='dispatchClickEvent'><parameter type='android.content.Context' name='context'/></method><method deprecated='5' return='java.lang.String' api_removed='12' name='getDescription'/><method deprecated='5' return='java.lang.String' api_removed='12' name='getFileName'/><method deprecated='5' return='java.lang.String' api_removed='12' name='getName'/><method deprecated='5' return='java.lang.String' api_removed='12' name='getPath'/><method deprecated='5' api_removed='12' name='setClickHandler'><parameter type='android.webkit.Plugin.PreferencesClickHandler' name='handler'/></method><method deprecated='5' api_removed='12' name='setDescription'><parameter type='java.lang.String' name='description'/></method><method deprecated='5' api_removed='12' name='setFileName'><parameter type='java.lang.String' name='fileName'/></method><method deprecated='5' api_removed='12' name='setName'><parameter type='java.lang.String' name='name'/></method><method deprecated='5' api_removed='12' name='setPath'><parameter type='java.lang.String' name='path'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='12' name='PluginList'><constructor deprecated='5' api_removed='12' type='android.webkit.PluginList' name='PluginList'/><method deprecated='5' api_removed='12' synchronized='true' name='addPlugin'><parameter type='android.webkit.Plugin' name='plugin'/></method><method deprecated='5' api_removed='12' synchronized='true' name='clear'/><method deprecated='5' return='java.util.List' api_removed='12' synchronized='true' name='getList'/><method deprecated='5' api_removed='12' synchronized='true' name='pluginClicked'><parameter type='android.content.Context' name='context'/><parameter type='int' name='position'/></method><method deprecated='5' api_removed='12' synchronized='true' name='removePlugin'><parameter type='android.webkit.Plugin' name='plugin'/></method></class><class extends='android.os.Handler' name='SslErrorHandler'><method name='cancel'/><method name='proceed'/></class><class extends='java.lang.Object' name='URLUtil' final='true'><constructor type='android.webkit.URLUtil' name='URLUtil'/><method return='java.lang.String' static='true' name='composeSearchUrl'><parameter type='java.lang.String' name='inQuery'/><parameter type='java.lang.String' name='template'/><parameter type='java.lang.String' name='queryPlaceHolder'/></method><method return='byte[]' static='true' name='decode'><parameter type='byte[]' name='url'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.String' static='true' name='guessFileName' final='true'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='contentDisposition'/><parameter type='java.lang.String' name='mimeType'/></method><method return='java.lang.String' static='true' name='guessUrl'><parameter type='java.lang.String' name='inUrl'/></method><method return='boolean' static='true' name='isAboutUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isAssetUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isContentUrl'><parameter type='java.lang.String' name='url'/></method><method deprecated='3' return='boolean' static='true' name='isCookielessProxyUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isDataUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isFileUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isHttpUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isHttpsUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isJavaScriptUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isNetworkUrl'><parameter type='java.lang.String' name='url'/></method><method return='boolean' static='true' name='isValidUrl'><parameter type='java.lang.String' name='url'/></method><method return='java.lang.String' static='true' name='stripAnchor'><parameter type='java.lang.String' name='url'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='12' name='UrlInterceptRegistry' final='true'><constructor api_removed='12' type='android.webkit.UrlInterceptRegistry' name='UrlInterceptRegistry'/><method deprecated='3' return='android.webkit.CacheManager.CacheResult' api_removed='12' static='true' synchronized='true' name='getSurrogate'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='headers'/></method><method deprecated='5' return='boolean' api_removed='12' static='true' synchronized='true' name='registerHandler'><parameter type='android.webkit.UrlInterceptHandler' name='handler'/></method><method deprecated='5' api_removed='12' static='true' synchronized='true' name='setUrlInterceptDisabled'><parameter type='boolean' name='disabled'/></method><method deprecated='5' return='boolean' api_removed='12' static='true' synchronized='true' name='unregisterHandler'><parameter type='android.webkit.UrlInterceptHandler' name='handler'/></method><method deprecated='5' return='boolean' api_removed='12' static='true' synchronized='true' name='urlInterceptDisabled'/><method deprecated='5' return='android.webkit.PluginData' api_removed='12' static='true' synchronized='true' name='getPluginData' api_added='3'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='headers'/></method></class><class extends='java.lang.Object' name='WebBackForwardList'><method return='int' synchronized='true' name='getCurrentIndex'/><method return='android.webkit.WebHistoryItem' synchronized='true' name='getCurrentItem'/><method return='android.webkit.WebHistoryItem' synchronized='true' name='getItemAtIndex'><parameter type='int' name='index'/></method><method return='int' synchronized='true' name='getSize'/></class><class extends='java.lang.Object' name='WebChromeClient'><constructor type='android.webkit.WebChromeClient' name='WebChromeClient'/><method name='onCloseWindow'><parameter type='android.webkit.WebView' name='window'/></method><method return='boolean' name='onCreateWindow'><parameter type='android.webkit.WebView' name='view'/><parameter type='boolean' name='dialog'/><parameter type='boolean' name='userGesture'/><parameter type='android.os.Message' name='resultMsg'/></method><method return='boolean' name='onJsAlert'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/><parameter type='android.webkit.JsResult' name='result'/></method><method return='boolean' name='onJsBeforeUnload'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/><parameter type='android.webkit.JsResult' name='result'/></method><method return='boolean' name='onJsConfirm'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/><parameter type='android.webkit.JsResult' name='result'/></method><method return='boolean' name='onJsPrompt'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='defaultValue'/><parameter type='android.webkit.JsPromptResult' name='result'/></method><method name='onProgressChanged'><parameter type='android.webkit.WebView' name='view'/><parameter type='int' name='newProgress'/></method><method name='onReceivedIcon'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.graphics.Bitmap' name='icon'/></method><method name='onReceivedTitle'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='title'/></method><method name='onRequestFocus'><parameter type='android.webkit.WebView' name='view'/></method><method name='onExceededDatabaseQuota' api_added='5'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='databaseIdentifier'/><parameter type='long' name='currentQuota'/><parameter type='long' name='estimatedSize'/><parameter type='long' name='totalUsedQuota'/><parameter type='android.webkit.WebStorage.QuotaUpdater' name='quotaUpdater'/></method><method name='onGeolocationPermissionsHidePrompt' api_added='5'/><method name='onGeolocationPermissionsShowPrompt' api_added='5'><parameter type='java.lang.String' name='origin'/><parameter type='android.webkit.GeolocationPermissions.Callback' name='callback'/></method><method return='android.graphics.Bitmap' name='getDefaultVideoPoster' api_added='7'/><method return='android.view.View' name='getVideoLoadingProgressView' api_added='7'/><method name='getVisitedHistory' api_added='7'><parameter type='android.webkit.ValueCallback&lt;java.lang.String[]&gt;' name='callback'/></method><method deprecated='8' name='onConsoleMessage' api_added='7'><parameter type='java.lang.String' name='message'/><parameter type='int' name='lineNumber'/><parameter type='java.lang.String' name='sourceID'/></method><method name='onHideCustomView' api_added='7'/><method return='boolean' name='onJsTimeout' api_added='7'/><method name='onReachedMaxAppCacheSize' api_added='7'><parameter type='long' name='spaceNeeded'/><parameter type='long' name='totalUsedQuota'/><parameter type='android.webkit.WebStorage.QuotaUpdater' name='quotaUpdater'/></method><method name='onReceivedTouchIconUrl' api_added='7'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='boolean' name='precomposed'/></method><method name='onShowCustomView' api_added='7'><parameter type='android.view.View' name='view'/><parameter type='android.webkit.WebChromeClient.CustomViewCallback' name='callback'/></method><method return='boolean' name='onConsoleMessage' api_added='8'><parameter type='android.webkit.ConsoleMessage' name='consoleMessage'/></method><method name='onShowCustomView' api_added='14'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.webkit.WebChromeClient.CustomViewCallback' name='arg2'/></method></class><class extends='java.lang.Object' name='WebHistoryItem'><method return='android.graphics.Bitmap' name='getFavicon'/><method deprecated='12' return='int' name='getId'/><method return='java.lang.String' name='getTitle'/><method return='java.lang.String' name='getUrl'/><method return='java.lang.String' name='getOriginalUrl' api_added='3'/></class><class extends='java.lang.Object' name='WebIconDatabase' final='true'><method name='close'/><method return='android.webkit.WebIconDatabase' static='true' name='getInstance'/><method name='open'><parameter type='java.lang.String' name='path'/></method><method name='releaseIconForPageUrl'><parameter type='java.lang.String' name='url'/></method><method name='removeAllIcons'/><method name='requestIconForPageUrl'><parameter type='java.lang.String' name='url'/><parameter type='android.webkit.WebIconDatabase.IconListener' name='listener'/></method><method name='retainIconForPageUrl'><parameter type='java.lang.String' name='url'/></method></class><class extends='java.lang.Object' name='WebSettings'><method return='boolean' synchronized='true' name='getBlockNetworkImage'/><method return='int' name='getCacheMode'/><method return='java.lang.String' synchronized='true' name='getCursiveFontFamily'/><method return='int' synchronized='true' name='getDefaultFixedFontSize'/><method return='int' synchronized='true' name='getDefaultFontSize'/><method return='java.lang.String' synchronized='true' name='getDefaultTextEncodingName'/><method return='java.lang.String' synchronized='true' name='getFantasyFontFamily'/><method return='java.lang.String' synchronized='true' name='getFixedFontFamily'/><method return='boolean' synchronized='true' name='getJavaScriptCanOpenWindowsAutomatically'/><method return='boolean' synchronized='true' name='getJavaScriptEnabled'/><method deprecated='12' return='android.webkit.WebSettings.LayoutAlgorithm' synchronized='true' name='getLayoutAlgorithm'/><method return='boolean' name='getLightTouchEnabled'/><method return='boolean' synchronized='true' name='getLoadsImagesAutomatically'/><method return='int' synchronized='true' name='getMinimumFontSize'/><method return='int' synchronized='true' name='getMinimumLogicalFontSize'/><method deprecated='12' return='boolean' name='getNavDump'/><method deprecated='8' return='boolean' synchronized='true' name='getPluginsEnabled'/><method deprecated='9' return='java.lang.String' synchronized='true' name='getPluginsPath'/><method return='java.lang.String' synchronized='true' name='getSansSerifFontFamily'/><method return='boolean' name='getSaveFormData'/><method return='boolean' name='getSavePassword'/><method return='java.lang.String' synchronized='true' name='getSerifFontFamily'/><method return='java.lang.String' synchronized='true' name='getStandardFontFamily'/><method deprecated='14' return='android.webkit.WebSettings.TextSize' synchronized='true' name='getTextSize'/><method deprecated='5' return='boolean' synchronized='true' name='getUseDoubleTree'/><method return='boolean' synchronized='true' name='getUseWideViewPort'/><method deprecated='3' return='int' synchronized='true' name='getUserAgent'/><method synchronized='true' name='setBlockNetworkImage'><parameter type='boolean' name='flag'/></method><method name='setCacheMode'><parameter type='int' name='mode'/></method><method synchronized='true' name='setCursiveFontFamily'><parameter type='java.lang.String' name='font'/></method><method synchronized='true' name='setDefaultFixedFontSize'><parameter type='int' name='size'/></method><method synchronized='true' name='setDefaultFontSize'><parameter type='int' name='size'/></method><method synchronized='true' name='setDefaultTextEncodingName'><parameter type='java.lang.String' name='encoding'/></method><method synchronized='true' name='setFantasyFontFamily'><parameter type='java.lang.String' name='font'/></method><method synchronized='true' name='setFixedFontFamily'><parameter type='java.lang.String' name='font'/></method><method synchronized='true' name='setJavaScriptCanOpenWindowsAutomatically'><parameter type='boolean' name='flag'/></method><method synchronized='true' name='setJavaScriptEnabled'><parameter type='boolean' name='flag'/></method><method deprecated='12' synchronized='true' name='setLayoutAlgorithm'><parameter type='android.webkit.WebSettings.LayoutAlgorithm' name='l'/></method><method name='setLightTouchEnabled'><parameter type='boolean' name='enabled'/></method><method synchronized='true' name='setLoadsImagesAutomatically'><parameter type='boolean' name='flag'/></method><method synchronized='true' name='setMinimumFontSize'><parameter type='int' name='size'/></method><method synchronized='true' name='setMinimumLogicalFontSize'><parameter type='int' name='size'/></method><method deprecated='12' name='setNavDump'><parameter type='boolean' name='enabled'/></method><method name='setNeedInitialFocus'><parameter type='boolean' name='flag'/></method><method deprecated='8' synchronized='true' name='setPluginsEnabled'><parameter type='boolean' name='flag'/></method><method deprecated='9' synchronized='true' name='setPluginsPath'><parameter type='java.lang.String' name='pluginsPath'/></method><method synchronized='true' name='setRenderPriority'><parameter type='android.webkit.WebSettings.RenderPriority' name='priority'/></method><method synchronized='true' name='setSansSerifFontFamily'><parameter type='java.lang.String' name='font'/></method><method name='setSaveFormData'><parameter type='boolean' name='save'/></method><method name='setSavePassword'><parameter type='boolean' name='save'/></method><method synchronized='true' name='setSerifFontFamily'><parameter type='java.lang.String' name='font'/></method><method synchronized='true' name='setStandardFontFamily'><parameter type='java.lang.String' name='font'/></method><method synchronized='true' name='setSupportMultipleWindows'><parameter type='boolean' name='support'/></method><method name='setSupportZoom'><parameter type='boolean' name='support'/></method><method deprecated='14' synchronized='true' name='setTextSize'><parameter type='android.webkit.WebSettings.TextSize' name='t'/></method><method deprecated='5' synchronized='true' name='setUseDoubleTree'><parameter type='boolean' name='use'/></method><method synchronized='true' name='setUseWideViewPort'><parameter type='boolean' name='use'/></method><method deprecated='3' synchronized='true' name='setUserAgent'><parameter type='int' name='ua'/></method><method return='boolean' synchronized='true' name='supportMultipleWindows'/><method return='boolean' name='supportZoom'/><method return='boolean' name='getAllowFileAccess' api_added='3'/><method return='boolean' name='getBuiltInZoomControls' api_added='3'/><method return='java.lang.String' synchronized='true' name='getUserAgentString' api_added='3'/><method name='setAllowFileAccess' api_added='3'><parameter type='boolean' name='allow'/></method><method name='setBuiltInZoomControls' api_added='3'><parameter type='boolean' name='enabled'/></method><method synchronized='true' name='setUserAgentString' api_added='3'><parameter type='java.lang.String' name='ua'/></method><method return='boolean' synchronized='true' name='getDatabaseEnabled' api_added='5'/><method return='java.lang.String' synchronized='true' name='getDatabasePath' api_added='5'/><method synchronized='true' name='setDatabaseEnabled' api_added='5'><parameter type='boolean' name='flag'/></method><method synchronized='true' name='setDatabasePath' api_added='5'><parameter type='java.lang.String' name='databasePath'/></method><method synchronized='true' name='setGeolocationDatabasePath' api_added='5'><parameter type='java.lang.String' name='databasePath'/></method><method synchronized='true' name='setGeolocationEnabled' api_added='5'><parameter type='boolean' name='flag'/></method><method return='android.webkit.WebSettings.ZoomDensity' name='getDefaultZoom' api_added='7'/><method return='boolean' synchronized='true' name='getDomStorageEnabled' api_added='7'/><method return='boolean' name='getLoadWithOverviewMode' api_added='7'/><method synchronized='true' name='setAppCacheEnabled' api_added='7'><parameter type='boolean' name='flag'/></method><method synchronized='true' name='setAppCacheMaxSize' api_added='7'><parameter type='long' name='appCacheMaxSize'/></method><method synchronized='true' name='setAppCachePath' api_added='7'><parameter type='java.lang.String' name='appCachePath'/></method><method name='setDefaultZoom' api_added='7'><parameter type='android.webkit.WebSettings.ZoomDensity' name='zoom'/></method><method synchronized='true' name='setDomStorageEnabled' api_added='7'><parameter type='boolean' name='flag'/></method><method name='setLoadWithOverviewMode' api_added='7'><parameter type='boolean' name='overview'/></method><method return='boolean' synchronized='true' name='getBlockNetworkLoads' api_added='8'/><method return='android.webkit.WebSettings.PluginState' synchronized='true' name='getPluginState' api_added='8'/><method synchronized='true' name='setBlockNetworkLoads' api_added='8'><parameter type='boolean' name='flag'/></method><method synchronized='true' name='setPluginState' api_added='8'><parameter type='android.webkit.WebSettings.PluginState' name='state'/></method><method deprecated='12' return='boolean' name='getUseWebViewBackgroundForOverscrollBackground' api_added='9'/><method deprecated='12' name='setUseWebViewBackgroundForOverscrollBackground' api_added='9'><parameter type='boolean' name='view'/></method><method return='boolean' name='enableSmoothTransition' api_added='11'/><method return='boolean' name='getAllowContentAccess' api_added='11'/><method return='boolean' name='getDisplayZoomControls' api_added='11'/><method name='setAllowContentAccess' api_added='11'><parameter type='boolean' name='allow'/></method><method name='setDisplayZoomControls' api_added='11'><parameter type='boolean' name='enabled'/></method><method name='setEnableSmoothTransition' api_added='11'><parameter type='boolean' name='enable'/></method><method return='int' synchronized='true' name='getTextZoom' api_added='14'/><method synchronized='true' name='setTextZoom' api_added='14'><parameter type='int' name='arg0'/></method><method return='boolean' abstract='true' name='getAllowFileAccessFromFileURLs' api_added='16'/><method return='boolean' abstract='true' name='getAllowUniversalAccessFromFileURLs' api_added='16'/><method abstract='true' name='setAllowFileAccessFromFileURLs' api_added='16'><parameter type='boolean' name='arg0'/></method><method abstract='true' name='setAllowUniversalAccessFromFileURLs' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Enum' deprecated='12' static='true' name='WebSettings.LayoutAlgorithm' final='true'><method return='android.webkit.WebSettings.LayoutAlgorithm' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.WebSettings.LayoutAlgorithm[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='WebSettings.RenderPriority' final='true'><method return='android.webkit.WebSettings.RenderPriority' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.WebSettings.RenderPriority[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' deprecated='14' static='true' name='WebSettings.TextSize' final='true'><method return='android.webkit.WebSettings.TextSize' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.WebSettings.TextSize[]' static='true' name='values' final='true'/></class><class visibility='' extends='java.lang.Object' abstract='true' name='WebSyncManager'><constructor visibility='protected' type='android.webkit.WebSyncManager' name='WebSyncManager'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='name'/></constructor><method visibility='protected' name='onSyncInit'/><method name='resetSync'/><method name='run'/><method name='startSync'/><method name='stopSync'/><method name='sync'/></class><class extends='android.widget.AbsoluteLayout' name='WebView'><constructor type='android.webkit.WebView' name='WebView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.webkit.WebView' name='WebView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.webkit.WebView' name='WebView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='addJavascriptInterface'><parameter type='java.lang.Object' name='obj'/><parameter type='java.lang.String' name='interfaceName'/></method><method return='boolean' name='canGoBack'/><method return='boolean' name='canGoBackOrForward'><parameter type='int' name='steps'/></method><method return='boolean' name='canGoForward'/><method return='android.graphics.Picture' name='capturePicture'/><method name='clearCache'><parameter type='boolean' name='includeDiskFiles'/></method><method name='clearFormData'/><method name='clearHistory'/><method name='clearSslPreferences'/><method name='clearView'/><method return='android.webkit.WebBackForwardList' name='copyBackForwardList'/><method deprecated='12' name='debugDump'/><method name='destroy'/><method deprecated='12' static='true' name='disablePlatformNotifications'/><method name='documentHasImages'><parameter type='android.os.Message' name='response'/></method><method deprecated='12' static='true' name='enablePlatformNotifications'/><method return='java.lang.String' static='true' name='findAddress'><parameter type='java.lang.String' name='addr'/></method><method name='flingScroll'><parameter type='int' name='vx'/><parameter type='int' name='vy'/></method><method return='android.net.http.SslCertificate' name='getCertificate'/><method return='int' name='getContentHeight'/><method return='android.graphics.Bitmap' name='getFavicon'/><method return='android.webkit.WebView.HitTestResult' name='getHitTestResult'/><method return='java.lang.String[]' name='getHttpAuthUsernamePassword'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='realm'/></method><method deprecated='5' return='android.webkit.PluginList' api_removed='12' static='true' synchronized='true' name='getPluginList'/><method return='int' name='getProgress'/><method return='float' name='getScale'/><method return='android.webkit.WebSettings' name='getSettings'/><method return='java.lang.String' name='getTitle'/><method return='java.lang.String' name='getUrl'/><method deprecated='3' return='android.view.View' api_removed='16' name='getZoomControls'/><method name='goBack'/><method name='goBackOrForward'><parameter type='int' name='steps'/></method><method name='goForward'/><method name='invokeZoomPicker'/><method name='loadData'><parameter type='java.lang.String' name='data'/><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='encoding'/></method><method name='loadDataWithBaseURL'><parameter type='java.lang.String' name='baseUrl'/><parameter type='java.lang.String' name='data'/><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='encoding'/><parameter type='java.lang.String' name='failUrl'/></method><method name='loadUrl'><parameter type='java.lang.String' name='url'/></method><method deprecated='8' name='onChildViewAdded'><parameter type='android.view.View' name='parent'/><parameter type='android.view.View' name='child'/></method><method deprecated='8' name='onChildViewRemoved'><parameter type='android.view.View' name='p'/><parameter type='android.view.View' name='child'/></method><method deprecated='3' name='onGlobalFocusChanged'><parameter type='android.view.View' name='oldFocus'/><parameter type='android.view.View' name='newFocus'/></method><method return='boolean' name='overlayHorizontalScrollbar'/><method return='boolean' name='overlayVerticalScrollbar'/><method return='boolean' name='pageDown'><parameter type='boolean' name='bottom'/></method><method return='boolean' name='pageUp'><parameter type='boolean' name='top'/></method><method name='pauseTimers'/><method deprecated='5' api_removed='12' name='refreshPlugins'><parameter type='boolean' name='reloadOpenPages'/></method><method name='reload'/><method name='requestFocusNodeHref'><parameter type='android.os.Message' name='hrefMsg'/></method><method name='requestImageRef'><parameter type='android.os.Message' name='msg'/></method><method return='android.webkit.WebBackForwardList' name='restoreState'><parameter type='android.os.Bundle' name='inState'/></method><method name='resumeTimers'/><method name='savePassword'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='password'/></method><method return='android.webkit.WebBackForwardList' name='saveState'><parameter type='android.os.Bundle' name='outState'/></method><method name='setCertificate'><parameter type='android.net.http.SslCertificate' name='certificate'/></method><method name='setDownloadListener'><parameter type='android.webkit.DownloadListener' name='listener'/></method><method name='setHorizontalScrollbarOverlay'><parameter type='boolean' name='overlay'/></method><method name='setHttpAuthUsernamePassword'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='realm'/><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='password'/></method><method name='setInitialScale'><parameter type='int' name='scaleInPercent'/></method><method name='setMapTrackballToArrowKeys'><parameter type='boolean' name='setMap'/></method><method deprecated='12' name='setPictureListener'><parameter type='android.webkit.WebView.PictureListener' name='listener'/></method><method name='setVerticalScrollbarOverlay'><parameter type='boolean' name='overlay'/></method><method name='setWebChromeClient'><parameter type='android.webkit.WebChromeClient' name='client'/></method><method name='setWebViewClient'><parameter type='android.webkit.WebViewClient' name='client'/></method><method name='stopLoading'/><method return='boolean' name='zoomIn'/><method return='boolean' name='zoomOut'/><method name='clearMatches' api_added='3'/><method deprecated='16' return='int' name='findAll' api_added='3'><parameter type='java.lang.String' name='find'/></method><method name='findNext' api_added='3'><parameter type='boolean' name='forward'/></method><method return='java.lang.String' name='getOriginalUrl' api_added='3'/><method deprecated='12' return='boolean' name='restorePicture' api_added='3'><parameter type='android.os.Bundle' name='b'/><parameter type='java.io.File' name='src'/></method><method deprecated='12' return='boolean' name='savePicture' api_added='3'><parameter type='android.os.Bundle' name='b'/><parameter type='java.io.File' name='dest'/></method><method name='setNetworkAvailable' api_added='3'><parameter type='boolean' name='networkUp'/></method><method name='postUrl' api_added='5'><parameter type='java.lang.String' name='url'/><parameter type='byte[]' name='postData'/></method><method name='freeMemory' api_added='7'/><method deprecated='12' name='emulateShiftHeld' api_added='8'/><method api_removed='14' name='loadUrl' api_added='8'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='extraHeaders'/></method><method return='boolean' name='canZoomIn' api_added='11'/><method return='boolean' name='canZoomOut' api_added='11'/><method deprecated='12' return='int' name='getVisibleTitleHeight' api_added='11'/><method return='boolean' name='isPrivateBrowsingEnabled' api_added='11'/><method name='onPause' api_added='11'/><method name='onResume' api_added='11'/><method name='removeJavascriptInterface' api_added='11'><parameter type='java.lang.String' name='interfaceName'/></method><method name='saveWebArchive' api_added='11'><parameter type='java.lang.String' name='filename'/></method><method name='saveWebArchive' api_added='11'><parameter type='java.lang.String' name='basename'/><parameter type='boolean' name='autoname'/><parameter type='android.webkit.ValueCallback&lt;java.lang.String&gt;' name='callback'/></method><method return='boolean' name='showFindDialog' api_added='11'><parameter type='java.lang.String' name='text'/><parameter type='boolean' name='showIme'/></method><method name='loadUrl' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/></method><method name='findAllAsync' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method name='setFindListener' api_added='16'><parameter type='android.webkit.WebView.FindListener' name='arg0'/></method></class><class extends='java.lang.Object' name='WebView.HitTestResult'><method return='java.lang.String' name='getExtra'/><method return='int' name='getType'/></class><class extends='java.lang.Object' name='WebView.WebViewTransport'><constructor type='android.webkit.WebView.WebViewTransport' name='WebView.WebViewTransport'/><method return='android.webkit.WebView' synchronized='true' name='getWebView'/><method synchronized='true' name='setWebView'><parameter type='android.webkit.WebView' name='webview'/></method></class><class extends='java.lang.Object' name='WebViewClient'><constructor type='android.webkit.WebViewClient' name='WebViewClient'/><method name='doUpdateVisitedHistory'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='boolean' name='isReload'/></method><method name='onFormResubmission'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.os.Message' name='dontResend'/><parameter type='android.os.Message' name='resend'/></method><method name='onLoadResource'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/></method><method name='onPageFinished'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/></method><method name='onPageStarted'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/><parameter type='android.graphics.Bitmap' name='favicon'/></method><method name='onReceivedError'><parameter type='android.webkit.WebView' name='view'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='description'/><parameter type='java.lang.String' name='failingUrl'/></method><method name='onReceivedHttpAuthRequest'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.webkit.HttpAuthHandler' name='handler'/><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='realm'/></method><method name='onScaleChanged'><parameter type='android.webkit.WebView' name='view'/><parameter type='float' name='oldScale'/><parameter type='float' name='newScale'/></method><method deprecated='8' name='onTooManyRedirects'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.os.Message' name='cancelMsg'/><parameter type='android.os.Message' name='continueMsg'/></method><method name='onUnhandledKeyEvent'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='shouldOverrideKeyEvent'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='shouldOverrideUrlLoading'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/></method><method name='onReceivedSslError' api_added='8'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.webkit.SslErrorHandler' name='handler'/><parameter type='android.net.http.SslError' name='error'/></method><method return='android.webkit.WebResourceResponse' name='shouldInterceptRequest' api_added='11'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='url'/></method><method name='onReceivedLoginRequest' api_added='12'><parameter type='android.webkit.WebView' name='view'/><parameter type='java.lang.String' name='realm'/><parameter type='java.lang.String' name='account'/><parameter type='java.lang.String' name='args'/></method></class><class extends='java.lang.Object' name='WebViewDatabase'><method name='clearFormData'/><method name='clearHttpAuthUsernamePassword'/><method name='clearUsernamePassword'/><method return='android.webkit.WebViewDatabase' static='true' synchronized='true' name='getInstance'><parameter type='android.content.Context' name='context'/></method><method return='boolean' name='hasFormData'/><method return='boolean' name='hasHttpAuthUsernamePassword'/><method return='boolean' name='hasUsernamePassword'/></class><class extends='java.lang.Object' deprecated='5' api_removed='12' name='PluginData' api_added='3' final='true'><constructor deprecated='5' api_removed='12' type='android.webkit.PluginData' name='PluginData' api_added='3'><parameter type='java.io.InputStream' name='stream'/><parameter type='long' name='length'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String[]&gt;' name='headers'/><parameter type='int' name='code'/></constructor><method deprecated='5' return='long' api_removed='12' name='getContentLength' api_added='3'/><method deprecated='5' return='java.util.Map&lt;java.lang.String, java.lang.String[]&gt;' api_removed='12' name='getHeaders' api_added='3'/><method deprecated='5' return='java.io.InputStream' api_removed='12' name='getInputStream' api_added='3'/><method deprecated='5' return='int' api_removed='12' name='getStatusCode' api_added='3'/></class><class extends='java.lang.Object' name='GeolocationPermissions' api_added='5' final='true'><constructor api_removed='16' type='android.webkit.GeolocationPermissions' name='GeolocationPermissions' api_added='5'/><method name='allow' api_added='7'><parameter type='java.lang.String' name='origin'/></method><method name='clear' api_added='7'><parameter type='java.lang.String' name='origin'/></method><method name='clearAll' api_added='7'/><method name='getAllowed' api_added='7'><parameter type='java.lang.String' name='origin'/><parameter type='android.webkit.ValueCallback&lt;java.lang.Boolean&gt;' name='callback'/></method><method return='android.webkit.GeolocationPermissions' static='true' name='getInstance' api_added='7'/><method name='getOrigins' api_added='7'><parameter type='android.webkit.ValueCallback&lt;java.util.Set&lt;java.lang.String&gt;&gt;' name='callback'/></method></class><class extends='java.lang.Object' name='WebStorage' api_added='5' final='true'><constructor api_removed='16' type='android.webkit.WebStorage' name='WebStorage' api_added='5'/><method name='deleteAllData' api_added='7'/><method name='deleteOrigin' api_added='7'><parameter type='java.lang.String' name='origin'/></method><method return='android.webkit.WebStorage' static='true' name='getInstance' api_added='7'/><method name='getOrigins' api_added='7'><parameter type='android.webkit.ValueCallback&lt;java.util.Map&gt;' name='callback'/></method><method name='getQuotaForOrigin' api_added='7'><parameter type='java.lang.String' name='origin'/><parameter type='android.webkit.ValueCallback&lt;java.lang.Long&gt;' name='callback'/></method><method name='getUsageForOrigin' api_added='7'><parameter type='java.lang.String' name='origin'/><parameter type='android.webkit.ValueCallback&lt;java.lang.Long&gt;' name='callback'/></method><method name='setQuotaForOrigin' api_added='7'><parameter type='java.lang.String' name='origin'/><parameter type='long' name='quota'/></method></class><class extends='java.lang.Enum' static='true' name='WebSettings.ZoomDensity' api_added='7' final='true'><method return='android.webkit.WebSettings.ZoomDensity' static='true' name='valueOf' api_added='7'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.WebSettings.ZoomDensity[]' static='true' name='values' api_added='7' final='true'/></class><class extends='java.lang.Object' name='ConsoleMessage' api_added='8'><constructor type='android.webkit.ConsoleMessage' name='ConsoleMessage' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='sourceId'/><parameter type='int' name='lineNumber'/><parameter type='android.webkit.ConsoleMessage.MessageLevel' name='msgLevel'/></constructor><method return='int' name='lineNumber' api_added='8'/><method return='java.lang.String' name='message' api_added='8'/><method return='android.webkit.ConsoleMessage.MessageLevel' name='messageLevel' api_added='8'/><method return='java.lang.String' name='sourceId' api_added='8'/></class><class extends='java.lang.Enum' static='true' name='ConsoleMessage.MessageLevel' api_added='8' final='true'><method return='android.webkit.ConsoleMessage.MessageLevel' static='true' name='valueOf' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.ConsoleMessage.MessageLevel[]' static='true' name='values' api_added='8' final='true'/></class><class extends='java.lang.Enum' static='true' name='WebSettings.PluginState' api_added='8' final='true'><method return='android.webkit.WebSettings.PluginState' static='true' name='valueOf' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='android.webkit.WebSettings.PluginState[]' static='true' name='values' api_added='8' final='true'/></class><class extends='java.lang.Object' name='WebResourceResponse' api_added='11'><constructor type='android.webkit.WebResourceResponse' name='WebResourceResponse' api_added='11'><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='encoding'/><parameter type='java.io.InputStream' name='data'/></constructor><method return='java.io.InputStream' name='getData' api_added='11'/><method return='java.lang.String' name='getEncoding' api_added='11'/><method return='java.lang.String' name='getMimeType' api_added='11'/><method name='setData' api_added='11'><parameter type='java.io.InputStream' name='data'/></method><method name='setEncoding' api_added='11'><parameter type='java.lang.String' name='encoding'/></method><method name='setMimeType' api_added='11'><parameter type='java.lang.String' name='mimeType'/></method></class><class extends='java.lang.Object' static='true' name='WebStorage.Origin' api_added='11'><method return='java.lang.String' name='getOrigin' api_added='11'/><method return='long' name='getQuota' api_added='11'/><method return='long' name='getUsage' api_added='11'/></class><class extends='android.app.Fragment' name='WebViewFragment' api_added='11'><constructor type='android.webkit.WebViewFragment' name='WebViewFragment' api_added='11'/><method return='android.webkit.WebView' name='getWebView' api_added='11'/></class><interface abstract='true' name='DownloadListener'><method abstract='true' name='onDownloadStart'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='userAgent'/><parameter type='java.lang.String' name='contentDisposition'/><parameter type='java.lang.String' name='mimetype'/><parameter type='long' name='contentLength'/></method></interface><interface abstract='true' api_removed='12' static='true' name='Plugin.PreferencesClickHandler'><method abstract='true' api_removed='12' name='handleClickEvent'><parameter type='android.content.Context' name='context'/></method></interface><interface deprecated='5' abstract='true' api_removed='12' name='UrlInterceptHandler'><method deprecated='3' return='android.webkit.CacheManager.CacheResult' abstract='true' api_removed='12' name='service'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='headers'/></method><method deprecated='5' return='android.webkit.PluginData' abstract='true' api_removed='12' name='getPluginData' api_added='3'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='headers'/></method></interface><interface abstract='true' static='true' name='WebIconDatabase.IconListener'><method abstract='true' name='onReceivedIcon'><parameter type='java.lang.String' name='url'/><parameter type='android.graphics.Bitmap' name='icon'/></method></interface><interface deprecated='12' abstract='true' static='true' name='WebView.PictureListener'><method deprecated='12' abstract='true' name='onNewPicture'><parameter type='android.webkit.WebView' name='view'/><parameter type='android.graphics.Picture' name='picture'/></method></interface><interface abstract='true' static='true' name='GeolocationPermissions.Callback' api_added='5'><method abstract='true' name='invoke' api_added='5'><parameter type='java.lang.String' name='origin'/><parameter type='boolean' name='allow'/><parameter type='boolean' name='remember'/></method></interface><interface abstract='true' name='PluginStub' api_added='5'><method return='android.view.View' abstract='true' name='getEmbeddedView' api_added='5'><parameter type='int' name='NPP'/><parameter type='android.content.Context' name='context'/></method><method return='android.view.View' abstract='true' name='getFullScreenView' api_added='5'><parameter type='int' name='NPP'/><parameter type='android.content.Context' name='context'/></method></interface><interface abstract='true' static='true' name='WebStorage.QuotaUpdater' api_added='5'><method abstract='true' name='updateQuota' api_added='5'><parameter type='long' name='newQuota'/></method></interface><interface abstract='true' name='ValueCallback' api_added='7'><method abstract='true' name='onReceiveValue' api_added='7'><parameter type='T' name='value'/></method></interface><interface abstract='true' static='true' name='WebChromeClient.CustomViewCallback' api_added='7'><method abstract='true' name='onCustomViewHidden' api_added='7'/></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WebView.FindListener' api_added='16'><method abstract='true' name='onFindResultReceived' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></method></interface></package><package name='android.widget'><class extends='android.widget.AdapterView' abstract='true' name='AbsListView'><constructor type='android.widget.AbsListView' name='AbsListView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AbsListView' name='AbsListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsListView' name='AbsListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='afterTextChanged'><parameter type='android.text.Editable' name='s'/></method><method name='beforeTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='after'/></method><method name='clearTextFilter'/><method return='int' name='getCacheColorHint'/><method return='int' name='getListPaddingBottom'/><method return='int' name='getListPaddingLeft'/><method return='int' name='getListPaddingRight'/><method return='int' name='getListPaddingTop'/><method return='android.view.View' name='getSelectedView'/><method return='android.graphics.drawable.Drawable' name='getSelector'/><method return='int' name='getTranscriptMode'/><method visibility='protected' name='handleDataChanged'/><method return='boolean' name='hasTextFilter'/><method name='invalidateViews'/><method visibility='protected' return='boolean' name='isInFilterMode'/><method return='boolean' name='isScrollingCacheEnabled'/><method return='boolean' name='isStackFromBottom'/><method return='boolean' name='isTextFilterEnabled'/><method visibility='protected' name='layoutChildren'/><method name='onFilterComplete'><parameter type='int' name='count'/></method><method name='onGlobalLayout'/><method name='onRestoreInstanceState'><parameter type='android.os.Parcelable' name='state'/></method><method return='android.os.Parcelable' name='onSaveInstanceState'/><method name='onTextChanged'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='before'/><parameter type='int' name='count'/></method><method name='onTouchModeChanged'><parameter type='boolean' name='isInTouchMode'/></method><method return='int' name='pointToPosition'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='long' name='pointToRowId'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='reclaimViews'><parameter type='java.util.List&lt;android.view.View&gt;' name='views'/></method><method name='setCacheColorHint'><parameter type='int' name='color'/></method><method name='setDrawSelectorOnTop'><parameter type='boolean' name='onTop'/></method><method name='setFilterText'><parameter type='java.lang.String' name='filterText'/></method><method name='setOnScrollListener'><parameter type='android.widget.AbsListView.OnScrollListener' name='l'/></method><method name='setRecyclerListener'><parameter type='android.widget.AbsListView.RecyclerListener' name='listener'/></method><method name='setScrollIndicators'><parameter type='android.view.View' name='up'/><parameter type='android.view.View' name='down'/></method><method name='setScrollingCacheEnabled'><parameter type='boolean' name='enabled'/></method><method name='setSelector'><parameter type='int' name='resID'/></method><method name='setSelector'><parameter type='android.graphics.drawable.Drawable' name='sel'/></method><method name='setStackFromBottom'><parameter type='boolean' name='stackFromBottom'/></method><method name='setTextFilterEnabled'><parameter type='boolean' name='textFilterEnabled'/></method><method name='setTranscriptMode'><parameter type='int' name='mode'/></method><method return='boolean' name='verifyDrawable'><parameter type='android.graphics.drawable.Drawable' name='dr'/></method><method return='java.lang.CharSequence' name='getTextFilter' api_added='3'/><method return='boolean' name='isFastScrollEnabled' api_added='3'/><method return='boolean' name='isSmoothScrollbarEnabled' api_added='3'/><method name='setFastScrollEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method><method name='setSmoothScrollbarEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method><method name='smoothScrollBy' api_added='8'><parameter type='int' name='distance'/><parameter type='int' name='duration'/></method><method name='smoothScrollToPosition' api_added='8'><parameter type='int' name='position'/></method><method name='smoothScrollToPosition' api_added='8'><parameter type='int' name='position'/><parameter type='int' name='boundPosition'/></method><method name='clearChoices' api_added='11'/><method return='int' name='getCheckedItemCount' api_added='11'/><method return='long[]' name='getCheckedItemIds' api_added='11'/><method return='int' name='getCheckedItemPosition' api_added='11'/><method return='android.util.SparseBooleanArray' name='getCheckedItemPositions' api_added='11'/><method return='int' name='getChoiceMode' api_added='11'/><method return='boolean' name='isFastScrollAlwaysVisible' api_added='11'/><method return='boolean' name='isItemChecked' api_added='11'><parameter type='int' name='position'/></method><method return='boolean' name='onRemoteAdapterConnected' api_added='11'/><method name='onRemoteAdapterDisconnected' api_added='11'/><method name='setAdapter' api_added='11'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method name='setChoiceMode' api_added='11'><parameter type='int' name='choiceMode'/></method><method name='setFastScrollAlwaysVisible' api_added='11'><parameter type='boolean' name='alwaysShow'/></method><method name='setFriction' api_added='11'><parameter type='float' name='friction'/></method><method name='setItemChecked' api_added='11'><parameter type='int' name='position'/><parameter type='boolean' name='value'/></method><method name='setMultiChoiceModeListener' api_added='11'><parameter type='android.widget.AbsListView.MultiChoiceModeListener' name='listener'/></method><method name='setRemoteViewsAdapter' api_added='11'><parameter type='android.content.Intent' name='intent'/></method><method name='setVelocityScale' api_added='11'><parameter type='float' name='scale'/></method><method name='smoothScrollToPositionFromTop' api_added='11'><parameter type='int' name='position'/><parameter type='int' name='offset'/><parameter type='int' name='duration'/></method><method name='smoothScrollToPositionFromTop' api_added='11'><parameter type='int' name='position'/><parameter type='int' name='offset'/></method><method name='deferNotifyDataSetChanged' api_added='14'/></class><class extends='android.view.ViewGroup.LayoutParams' static='true' name='AbsListView.LayoutParams'><constructor type='android.widget.AbsListView.LayoutParams' name='AbsListView.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsListView.LayoutParams' name='AbsListView.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.AbsListView.LayoutParams' name='AbsListView.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int' name='viewType'/></constructor><constructor type='android.widget.AbsListView.LayoutParams' name='AbsListView.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor></class><class extends='android.widget.ProgressBar' abstract='true' name='AbsSeekBar'><constructor type='android.widget.AbsSeekBar' name='AbsSeekBar'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AbsSeekBar' name='AbsSeekBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsSeekBar' name='AbsSeekBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='int' name='getThumbOffset'/><method name='setThumb'><parameter type='android.graphics.drawable.Drawable' name='thumb'/></method><method name='setThumbOffset'><parameter type='int' name='thumbOffset'/></method><method return='int' name='getKeyProgressIncrement' api_added='3'/><method name='setKeyProgressIncrement' api_added='3'><parameter type='int' name='increment'/></method><method return='android.graphics.drawable.Drawable' name='getThumb' api_added='16'/></class><class extends='android.widget.AdapterView' abstract='true' name='AbsSpinner'><constructor type='android.widget.AbsSpinner' name='AbsSpinner'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AbsSpinner' name='AbsSpinner'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsSpinner' name='AbsSpinner'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='android.widget.SpinnerAdapter' name='getAdapter'/><method return='android.view.View' name='getSelectedView'/><method name='onRestoreInstanceState'><parameter type='android.os.Parcelable' name='state'/></method><method return='android.os.Parcelable' name='onSaveInstanceState'/><method return='int' name='pointToPosition'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='setAdapter'><parameter type='android.widget.SpinnerAdapter' name='adapter'/></method><method name='setSelection'><parameter type='int' name='position'/><parameter type='boolean' name='animate'/></method><method name='setSelection'><parameter type='int' name='position'/></method></class><class extends='android.view.ViewGroup' deprecated='3' name='AbsoluteLayout'><constructor type='android.widget.AbsoluteLayout' name='AbsoluteLayout'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AbsoluteLayout' name='AbsoluteLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsoluteLayout' name='AbsoluteLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method></class><class extends='android.view.ViewGroup.LayoutParams' static='true' name='AbsoluteLayout.LayoutParams'><constructor type='android.widget.AbsoluteLayout.LayoutParams' name='AbsoluteLayout.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='x'/><parameter type='int' name='y'/></constructor><constructor type='android.widget.AbsoluteLayout.LayoutParams' name='AbsoluteLayout.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AbsoluteLayout.LayoutParams' name='AbsoluteLayout.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor><method return='java.lang.String' name='debug'><parameter type='java.lang.String' name='output'/></method></class><class extends='android.view.ViewGroup' abstract='true' name='AdapterView'><constructor type='android.widget.AdapterView' name='AdapterView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AdapterView' name='AdapterView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AdapterView' name='AdapterView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='T' abstract='true' name='getAdapter'/><method return='int' name='getCount'/><method return='android.view.View' name='getEmptyView'/><method return='int' name='getFirstVisiblePosition'/><method return='java.lang.Object' name='getItemAtPosition'><parameter type='int' name='position'/></method><method return='long' name='getItemIdAtPosition'><parameter type='int' name='position'/></method><method return='int' name='getLastVisiblePosition'/><method return='android.widget.AdapterView.OnItemClickListener' name='getOnItemClickListener' final='true'/><method return='android.widget.AdapterView.OnItemLongClickListener' name='getOnItemLongClickListener' final='true'/><method return='android.widget.AdapterView.OnItemSelectedListener' name='getOnItemSelectedListener' final='true'/><method return='int' name='getPositionForView'><parameter type='android.view.View' name='view'/></method><method return='java.lang.Object' name='getSelectedItem'/><method return='long' name='getSelectedItemId'/><method return='int' name='getSelectedItemPosition'/><method return='android.view.View' abstract='true' name='getSelectedView'/><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method return='boolean' name='performItemClick'><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method><method abstract='true' name='setAdapter'><parameter type='T' name='adapter'/></method><method name='setEmptyView'><parameter type='android.view.View' name='emptyView'/></method><method name='setOnItemClickListener'><parameter type='android.widget.AdapterView.OnItemClickListener' name='listener'/></method><method name='setOnItemLongClickListener'><parameter type='android.widget.AdapterView.OnItemLongClickListener' name='listener'/></method><method name='setOnItemSelectedListener'><parameter type='android.widget.AdapterView.OnItemSelectedListener' name='listener'/></method><method abstract='true' name='setSelection'><parameter type='int' name='position'/></method></class><class extends='java.lang.Object' static='true' name='AdapterView.AdapterContextMenuInfo'><constructor type='android.widget.AdapterView.AdapterContextMenuInfo' name='AdapterView.AdapterContextMenuInfo'><parameter type='android.view.View' name='targetView'/><parameter type='int' name='position'/><parameter type='long' name='id'/></constructor></class><class extends='android.view.View' name='AnalogClock'><constructor type='android.widget.AnalogClock' name='AnalogClock'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AnalogClock' name='AnalogClock'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AnalogClock' name='AnalogClock'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor></class><class extends='android.widget.BaseAdapter' name='ArrayAdapter'><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='textViewResourceId'/></constructor><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resource'/><parameter type='int' name='textViewResourceId'/></constructor><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='textViewResourceId'/><parameter type='T[]' name='objects'/></constructor><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resource'/><parameter type='int' name='textViewResourceId'/><parameter type='T[]' name='objects'/></constructor><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='textViewResourceId'/><parameter type='java.util.List&lt;T&gt;' name='objects'/></constructor><constructor type='android.widget.ArrayAdapter' name='ArrayAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resource'/><parameter type='int' name='textViewResourceId'/><parameter type='java.util.List&lt;T&gt;' name='objects'/></constructor><method name='add'><parameter type='T' name='object'/></method><method name='clear'/><method return='android.widget.ArrayAdapter&lt;java.lang.CharSequence&gt;' static='true' name='createFromResource'><parameter type='android.content.Context' name='context'/><parameter type='int' name='textArrayResId'/><parameter type='int' name='textViewResId'/></method><method return='android.content.Context' name='getContext'/><method return='int' name='getCount'/><method return='android.widget.Filter' name='getFilter'/><method return='T' name='getItem'><parameter type='int' name='position'/></method><method return='long' name='getItemId'><parameter type='int' name='position'/></method><method return='int' name='getPosition'><parameter type='T' name='item'/></method><method return='android.view.View' name='getView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method name='insert'><parameter type='T' name='object'/><parameter type='int' name='index'/></method><method name='remove'><parameter type='T' name='object'/></method><method name='setDropDownViewResource'><parameter type='int' name='resource'/></method><method name='setNotifyOnChange'><parameter type='boolean' name='notifyOnChange'/></method><method name='sort' api_added='3'><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method name='addAll' api_added='11'><parameter type='java.util.Collection&lt;? extends T&gt;' name='collection'/></method><method name='addAll' api_added='11'><parameter type='T...' name='items'/></method></class><class extends='android.widget.EditText' name='AutoCompleteTextView'><constructor type='android.widget.AutoCompleteTextView' name='AutoCompleteTextView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AutoCompleteTextView' name='AutoCompleteTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.AutoCompleteTextView' name='AutoCompleteTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method visibility='protected' return='java.lang.CharSequence' name='convertSelectionToString'><parameter type='java.lang.Object' name='selectedItem'/></method><method name='dismissDropDown'/><method return='boolean' name='enoughToFilter'/><method return='android.widget.ListAdapter' name='getAdapter'/><method visibility='protected' return='android.widget.Filter' name='getFilter'/><method deprecated='3' return='android.widget.AdapterView.OnItemClickListener' name='getItemClickListener'/><method deprecated='3' return='android.widget.AdapterView.OnItemSelectedListener' name='getItemSelectedListener'/><method return='int' name='getThreshold'/><method return='android.widget.AutoCompleteTextView.Validator' name='getValidator'/><method return='boolean' name='isPopupShowing'/><method name='onFilterComplete'><parameter type='int' name='count'/></method><method name='performCompletion'/><method visibility='protected' name='performFiltering'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='keyCode'/></method><method name='performValidation'/><method visibility='protected' name='replaceText'><parameter type='java.lang.CharSequence' name='text'/></method><method name='setAdapter'><parameter type='T' name='adapter'/></method><method name='setCompletionHint'><parameter type='java.lang.CharSequence' name='hint'/></method><method name='setOnItemClickListener'><parameter type='android.widget.AdapterView.OnItemClickListener' name='l'/></method><method name='setOnItemSelectedListener'><parameter type='android.widget.AdapterView.OnItemSelectedListener' name='l'/></method><method name='setThreshold'><parameter type='int' name='threshold'/></method><method name='setValidator'><parameter type='android.widget.AutoCompleteTextView.Validator' name='validator'/></method><method name='showDropDown'/><method name='clearListSelection' api_added='3'/><method return='int' name='getDropDownAnchor' api_added='3'/><method return='int' name='getDropDownWidth' api_added='3'/><method return='int' name='getListSelection' api_added='3'/><method return='android.widget.AdapterView.OnItemClickListener' name='getOnItemClickListener' api_added='3'/><method return='android.widget.AdapterView.OnItemSelectedListener' name='getOnItemSelectedListener' api_added='3'/><method return='boolean' name='isPerformingCompletion' api_added='3'/><method name='setDropDownAnchor' api_added='3'><parameter type='int' name='id'/></method><method name='setDropDownWidth' api_added='3'><parameter type='int' name='width'/></method><method name='setListSelection' api_added='3'><parameter type='int' name='position'/></method><method return='int' name='getDropDownHeight' api_added='4'/><method name='setDropDownHeight' api_added='4'><parameter type='int' name='height'/></method><method return='android.graphics.drawable.Drawable' name='getDropDownBackground' api_added='5'/><method return='int' name='getDropDownHorizontalOffset' api_added='5'/><method return='int' name='getDropDownVerticalOffset' api_added='5'/><method name='setDropDownBackgroundDrawable' api_added='5'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setDropDownBackgroundResource' api_added='5'><parameter type='int' name='id'/></method><method name='setDropDownHorizontalOffset' api_added='5'><parameter type='int' name='offset'/></method><method name='setDropDownVerticalOffset' api_added='5'><parameter type='int' name='offset'/></method><method return='java.lang.CharSequence' name='getCompletionHint' api_added='16'/></class><class extends='java.lang.Object' abstract='true' name='BaseAdapter'><constructor type='android.widget.BaseAdapter' name='BaseAdapter'/><method return='boolean' name='areAllItemsEnabled'/><method return='android.view.View' name='getDropDownView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='getItemViewType'><parameter type='int' name='position'/></method><method return='int' name='getViewTypeCount'/><method return='boolean' name='hasStableIds'/><method return='boolean' name='isEmpty'/><method return='boolean' name='isEnabled'><parameter type='int' name='position'/></method><method name='notifyDataSetChanged'/><method name='notifyDataSetInvalidated'/><method name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method></class><class extends='java.lang.Object' abstract='true' name='BaseExpandableListAdapter'><constructor type='android.widget.BaseExpandableListAdapter' name='BaseExpandableListAdapter'/><method return='boolean' name='areAllItemsEnabled'/><method return='long' name='getCombinedChildId'><parameter type='long' name='groupId'/><parameter type='long' name='childId'/></method><method return='long' name='getCombinedGroupId'><parameter type='long' name='groupId'/></method><method return='boolean' name='isEmpty'/><method name='notifyDataSetChanged'/><method name='notifyDataSetInvalidated'/><method name='onGroupCollapsed'><parameter type='int' name='groupPosition'/></method><method name='onGroupExpanded'><parameter type='int' name='groupPosition'/></method><method name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='int' name='getChildType' api_added='8'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='int' name='getChildTypeCount' api_added='8'/><method return='int' name='getGroupType' api_added='8'><parameter type='int' name='groupPosition'/></method><method return='int' name='getGroupTypeCount' api_added='8'/></class><class extends='android.widget.TextView' name='Button'><constructor type='android.widget.Button' name='Button'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.Button' name='Button'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.Button' name='Button'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor></class><class extends='android.widget.CompoundButton' name='CheckBox'><constructor type='android.widget.CheckBox' name='CheckBox'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.CheckBox' name='CheckBox'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.CheckBox' name='CheckBox'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor></class><class extends='android.widget.TextView' abstract='true' name='CheckedTextView'><constructor type='android.widget.CheckedTextView' name='CheckedTextView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.CheckedTextView' name='CheckedTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.CheckedTextView' name='CheckedTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='isChecked'/><method name='setCheckMarkDrawable'><parameter type='int' name='resid'/></method><method name='setCheckMarkDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setChecked'><parameter type='boolean' name='checked'/></method><method name='toggle'/><method return='android.graphics.drawable.Drawable' name='getCheckMarkDrawable' api_added='16'/><method name='onPaddingChanged' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='android.widget.TextView' name='Chronometer'><constructor type='android.widget.Chronometer' name='Chronometer'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.Chronometer' name='Chronometer'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.Chronometer' name='Chronometer'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='long' name='getBase'/><method return='java.lang.String' name='getFormat'/><method name='setBase'><parameter type='long' name='base'/></method><method name='setFormat'><parameter type='java.lang.String' name='format'/></method><method name='start'/><method name='stop'/><method return='android.widget.Chronometer.OnChronometerTickListener' name='getOnChronometerTickListener' api_added='3'/><method name='setOnChronometerTickListener' api_added='3'><parameter type='android.widget.Chronometer.OnChronometerTickListener' name='listener'/></method></class><class extends='android.widget.Button' abstract='true' name='CompoundButton'><constructor type='android.widget.CompoundButton' name='CompoundButton'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.CompoundButton' name='CompoundButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.CompoundButton' name='CompoundButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='isChecked'/><method name='setButtonDrawable'><parameter type='int' name='resid'/></method><method name='setButtonDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setChecked'><parameter type='boolean' name='checked'/></method><method name='setOnCheckedChangeListener'><parameter type='android.widget.CompoundButton.OnCheckedChangeListener' name='listener'/></method><method name='toggle'/></class><class extends='android.widget.BaseAdapter' abstract='true' name='CursorAdapter'><constructor deprecated='11' type='android.widget.CursorAdapter' name='CursorAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='c'/></constructor><constructor type='android.widget.CursorAdapter' name='CursorAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='c'/><parameter type='boolean' name='autoRequery'/></constructor><constructor type='android.widget.deprecated CursorAdapter' name='deprecated CursorAdapter' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.database.Cursor' name='arg1'/></constructor><method abstract='true' name='bindView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/></method><method name='changeCursor'><parameter type='android.database.Cursor' name='cursor'/></method><method return='java.lang.CharSequence' name='convertToString'><parameter type='android.database.Cursor' name='cursor'/></method><method return='int' name='getCount' final='true'/><method return='android.database.Cursor' name='getCursor'/><method return='android.widget.Filter' name='getFilter'/><method return='android.widget.FilterQueryProvider' name='getFilterQueryProvider'/><method return='java.lang.Object' name='getItem' final='true'><parameter type='int' name='position'/></method><method return='long' name='getItemId' final='true'><parameter type='int' name='position'/></method><method return='android.view.View' name='getView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method visibility='protected' deprecated='11' name='init'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='c'/><parameter type='boolean' name='autoRequery'/></method><method return='android.view.View' name='newDropDownView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='android.view.View' abstract='true' name='newView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='android.database.Cursor' name='runQueryOnBackgroundThread'><parameter type='java.lang.CharSequence' name='constraint'/></method><method name='setFilterQueryProvider'><parameter type='android.widget.FilterQueryProvider' name='filterQueryProvider'/></method><method visibility='protected' name='onContentChanged' api_added='3'/><method return='android.database.Cursor' name='swapCursor' api_added='11'><parameter type='android.database.Cursor' name='newCursor'/></method></class><class extends='android.widget.BaseExpandableListAdapter' abstract='true' name='CursorTreeAdapter'><constructor type='android.widget.CursorTreeAdapter' name='CursorTreeAdapter'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.CursorTreeAdapter' name='CursorTreeAdapter'><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.content.Context' name='context'/><parameter type='boolean' name='autoRequery'/></constructor><method visibility='protected' abstract='true' name='bindChildView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isLastChild'/></method><method visibility='protected' abstract='true' name='bindGroupView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isExpanded'/></method><method name='changeCursor'><parameter type='android.database.Cursor' name='cursor'/></method><method return='java.lang.String' name='convertToString'><parameter type='android.database.Cursor' name='cursor'/></method><method return='android.database.Cursor' name='getChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='long' name='getChildId'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='android.view.View' name='getChildView'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='boolean' name='isLastChild'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='getChildrenCount'><parameter type='int' name='groupPosition'/></method><method visibility='protected' return='android.database.Cursor' abstract='true' name='getChildrenCursor'><parameter type='android.database.Cursor' name='groupCursor'/></method><method return='android.database.Cursor' name='getCursor'/><method return='android.widget.Filter' name='getFilter'/><method return='android.widget.FilterQueryProvider' name='getFilterQueryProvider'/><method return='android.database.Cursor' name='getGroup'><parameter type='int' name='groupPosition'/></method><method return='int' name='getGroupCount'/><method return='long' name='getGroupId'><parameter type='int' name='groupPosition'/></method><method return='android.view.View' name='getGroupView'><parameter type='int' name='groupPosition'/><parameter type='boolean' name='isExpanded'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='boolean' name='hasStableIds'/><method return='boolean' name='isChildSelectable'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method visibility='protected' return='android.view.View' abstract='true' name='newChildView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isLastChild'/><parameter type='android.view.ViewGroup' name='parent'/></method><method visibility='protected' return='android.view.View' abstract='true' name='newGroupView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isExpanded'/><parameter type='android.view.ViewGroup' name='parent'/></method><method name='notifyDataSetChanged'><parameter type='boolean' name='releaseCursors'/></method><method return='android.database.Cursor' name='runQueryOnBackgroundThread'><parameter type='java.lang.CharSequence' name='constraint'/></method><method name='setChildrenCursor'><parameter type='int' name='groupPosition'/><parameter type='android.database.Cursor' name='childrenCursor'/></method><method name='setFilterQueryProvider'><parameter type='android.widget.FilterQueryProvider' name='filterQueryProvider'/></method><method name='setGroupCursor'><parameter type='android.database.Cursor' name='cursor'/></method></class><class extends='android.widget.FrameLayout' name='DatePicker'><constructor type='android.widget.DatePicker' name='DatePicker'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.DatePicker' name='DatePicker'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.DatePicker' name='DatePicker'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='int' name='getDayOfMonth'/><method return='int' name='getMonth'/><method return='int' name='getYear'/><method name='init'><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/><parameter type='android.widget.DatePicker.OnDateChangedListener' name='onDateChangedListener'/></method><method name='updateDate'><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></method><method return='boolean' name='getCalendarViewShown' api_added='11'/><method return='long' name='getMaxDate' api_added='11'/><method return='long' name='getMinDate' api_added='11'/><method return='boolean' name='getSpinnersShown' api_added='11'/><method name='setCalendarViewShown' api_added='11'><parameter type='boolean' name='shown'/></method><method name='setMaxDate' api_added='11'><parameter type='long' name='maxDate'/></method><method name='setMinDate' api_added='11'><parameter type='long' name='minDate'/></method><method name='setSpinnersShown' api_added='11'><parameter type='boolean' name='shown'/></method><method return='android.widget.CalendarView' name='getCalendarView' api_added='12'/></class><class extends='android.widget.RelativeLayout' name='DialerFilter'><constructor type='android.widget.DialerFilter' name='DialerFilter'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.DialerFilter' name='DialerFilter'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='append'><parameter type='java.lang.String' name='text'/></method><method name='clearText'/><method return='java.lang.CharSequence' name='getDigits'/><method return='java.lang.CharSequence' name='getFilterText'/><method return='java.lang.CharSequence' name='getLetters'/><method return='int' name='getMode'/><method return='boolean' name='isQwertyKeyboard'/><method visibility='protected' name='onModeChange'><parameter type='int' name='oldMode'/><parameter type='int' name='newMode'/></method><method name='removeFilterWatcher'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='setDigitsWatcher'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='setFilterWatcher'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='setLettersWatcher'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='setMode'><parameter type='int' name='newMode'/></method></class><class extends='android.widget.TextView' name='DigitalClock'><constructor type='android.widget.DigitalClock' name='DigitalClock'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.DigitalClock' name='DigitalClock'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor></class><class extends='android.widget.TextView' name='EditText'><constructor type='android.widget.EditText' name='EditText'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.EditText' name='EditText'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.EditText' name='EditText'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='extendSelection'><parameter type='int' name='index'/></method><method name='selectAll'/><method name='setSelection'><parameter type='int' name='start'/><parameter type='int' name='stop'/></method><method name='setSelection'><parameter type='int' name='index'/></method></class><class extends='android.widget.ListView' name='ExpandableListView'><constructor type='android.widget.ExpandableListView' name='ExpandableListView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ExpandableListView' name='ExpandableListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ExpandableListView' name='ExpandableListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='collapseGroup'><parameter type='int' name='groupPos'/></method><method return='boolean' name='expandGroup'><parameter type='int' name='groupPos'/></method><method return='android.widget.ExpandableListAdapter' name='getExpandableListAdapter'/><method return='long' name='getExpandableListPosition'><parameter type='int' name='flatListPosition'/></method><method return='int' name='getFlatListPosition'><parameter type='long' name='packedPosition'/></method><method return='int' static='true' name='getPackedPositionChild'><parameter type='long' name='packedPosition'/></method><method return='long' static='true' name='getPackedPositionForChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='long' static='true' name='getPackedPositionForGroup'><parameter type='int' name='groupPosition'/></method><method return='int' static='true' name='getPackedPositionGroup'><parameter type='long' name='packedPosition'/></method><method return='int' static='true' name='getPackedPositionType'><parameter type='long' name='packedPosition'/></method><method return='long' name='getSelectedId'/><method return='long' name='getSelectedPosition'/><method return='boolean' name='isGroupExpanded'><parameter type='int' name='groupPosition'/></method><method name='setAdapter'><parameter type='android.widget.ExpandableListAdapter' name='adapter'/></method><method name='setChildDivider'><parameter type='android.graphics.drawable.Drawable' name='childDivider'/></method><method name='setChildIndicator'><parameter type='android.graphics.drawable.Drawable' name='childIndicator'/></method><method name='setChildIndicatorBounds'><parameter type='int' name='left'/><parameter type='int' name='right'/></method><method name='setGroupIndicator'><parameter type='android.graphics.drawable.Drawable' name='groupIndicator'/></method><method name='setIndicatorBounds'><parameter type='int' name='left'/><parameter type='int' name='right'/></method><method name='setOnChildClickListener'><parameter type='android.widget.ExpandableListView.OnChildClickListener' name='onChildClickListener'/></method><method name='setOnGroupClickListener'><parameter type='android.widget.ExpandableListView.OnGroupClickListener' name='onGroupClickListener'/></method><method name='setOnGroupCollapseListener'><parameter type='android.widget.ExpandableListView.OnGroupCollapseListener' name='onGroupCollapseListener'/></method><method name='setOnGroupExpandListener'><parameter type='android.widget.ExpandableListView.OnGroupExpandListener' name='onGroupExpandListener'/></method><method return='boolean' name='setSelectedChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='boolean' name='shouldExpandGroup'/></method><method name='setSelectedGroup'><parameter type='int' name='groupPosition'/></method><method return='boolean' name='expandGroup' api_added='14'><parameter type='int' name='arg0'/><parameter type='boolean' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='ExpandableListView.ExpandableListContextMenuInfo'><constructor type='android.widget.ExpandableListView.ExpandableListContextMenuInfo' name='ExpandableListView.ExpandableListContextMenuInfo'><parameter type='android.view.View' name='targetView'/><parameter type='long' name='packedPosition'/><parameter type='long' name='id'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Filter'><constructor type='android.widget.Filter' name='Filter'/><method return='java.lang.CharSequence' name='convertResultToString'><parameter type='java.lang.Object' name='resultValue'/></method><method name='filter' final='true'><parameter type='java.lang.CharSequence' name='constraint'/></method><method name='filter' final='true'><parameter type='java.lang.CharSequence' name='constraint'/><parameter type='android.widget.Filter.FilterListener' name='listener'/></method><method visibility='protected' return='android.widget.Filter.FilterResults' abstract='true' name='performFiltering'><parameter type='java.lang.CharSequence' name='constraint'/></method><method visibility='protected' abstract='true' name='publishResults'><parameter type='java.lang.CharSequence' name='constraint'/><parameter type='android.widget.Filter.FilterResults' name='results'/></method></class><class visibility='protected' extends='java.lang.Object' static='true' name='Filter.FilterResults'><constructor type='android.widget.Filter.FilterResults' name='Filter.FilterResults'/></class><class extends='android.view.ViewGroup' name='FrameLayout'><constructor type='android.widget.FrameLayout' name='FrameLayout'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.FrameLayout' name='FrameLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.FrameLayout' name='FrameLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method deprecated='14' return='boolean' name='getConsiderGoneChildrenWhenMeasuring'/><method return='android.graphics.drawable.Drawable' name='getForeground'/><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setForeground'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setForegroundGravity'><parameter type='int' name='foregroundGravity'/></method><method name='setMeasureAllChildren'><parameter type='boolean' name='measureAll'/></method><method return='boolean' name='getMeasureAllChildren' api_added='14'/><method return='int' name='getForegroundGravity' api_added='16'/></class><class extends='android.view.ViewGroup.MarginLayoutParams' static='true' name='FrameLayout.LayoutParams'><constructor type='android.widget.FrameLayout.LayoutParams' name='FrameLayout.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.FrameLayout.LayoutParams' name='FrameLayout.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.widget.FrameLayout.LayoutParams' name='FrameLayout.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='gravity'/></constructor><constructor type='android.widget.FrameLayout.LayoutParams' name='FrameLayout.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor><constructor type='android.widget.FrameLayout.LayoutParams' name='FrameLayout.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor></class><class extends='android.widget.AbsSpinner' deprecated='16' name='Gallery'><constructor type='android.widget.Gallery' name='Gallery'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.Gallery' name='Gallery'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.Gallery' name='Gallery'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='onDown'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onFling'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='velocityX'/><parameter type='float' name='velocityY'/></method><method name='onLongPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onScroll'><parameter type='android.view.MotionEvent' name='e1'/><parameter type='android.view.MotionEvent' name='e2'/><parameter type='float' name='distanceX'/><parameter type='float' name='distanceY'/></method><method name='onShowPress'><parameter type='android.view.MotionEvent' name='e'/></method><method return='boolean' name='onSingleTapUp'><parameter type='android.view.MotionEvent' name='e'/></method><method name='setAnimationDuration'><parameter type='int' name='animationDurationMillis'/></method><method name='setCallbackDuringFling'><parameter type='boolean' name='shouldCallback'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setSpacing'><parameter type='int' name='spacing'/></method><method name='setUnselectedAlpha'><parameter type='float' name='unselectedAlpha'/></method></class><class extends='android.view.ViewGroup.LayoutParams' static='true' name='Gallery.LayoutParams'><constructor type='android.widget.Gallery.LayoutParams' name='Gallery.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.Gallery.LayoutParams' name='Gallery.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.Gallery.LayoutParams' name='Gallery.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor></class><class extends='android.widget.AbsListView' name='GridView'><constructor type='android.widget.GridView' name='GridView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.GridView' name='GridView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.GridView' name='GridView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='android.widget.ListAdapter' name='getAdapter'/><method return='int' name='getStretchMode'/><method api_removed='11' name='setAdapter'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method name='setColumnWidth'><parameter type='int' name='columnWidth'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setHorizontalSpacing'><parameter type='int' name='horizontalSpacing'/></method><method name='setNumColumns'><parameter type='int' name='numColumns'/></method><method name='setSelection'><parameter type='int' name='position'/></method><method name='setStretchMode'><parameter type='int' name='stretchMode'/></method><method name='setVerticalSpacing'><parameter type='int' name='verticalSpacing'/></method><method return='int' name='getNumColumns' api_added='11'/><method name='smoothScrollByOffset' api_added='11'><parameter type='int' name='offset'/></method><method return='int' name='getColumnWidth' api_added='16'/><method return='int' name='getGravity' api_added='16'/><method return='int' name='getHorizontalSpacing' api_added='16'/><method return='int' name='getRequestedColumnWidth' api_added='16'/><method return='int' name='getRequestedHorizontalSpacing' api_added='16'/><method return='int' name='getVerticalSpacing' api_added='16'/></class><class extends='java.lang.Object' name='HeaderViewListAdapter'><constructor type='android.widget.HeaderViewListAdapter' name='HeaderViewListAdapter'><parameter type='java.util.ArrayList&lt;android.widget.ListView.FixedViewInfo&gt;' name='headerViewInfos'/><parameter type='java.util.ArrayList&lt;android.widget.ListView.FixedViewInfo&gt;' name='footerViewInfos'/><parameter type='android.widget.ListAdapter' name='adapter'/></constructor><method return='boolean' name='areAllItemsEnabled'/><method return='int' name='getCount'/><method return='android.widget.Filter' name='getFilter'/><method return='int' name='getFootersCount'/><method return='int' name='getHeadersCount'/><method return='java.lang.Object' name='getItem'><parameter type='int' name='position'/></method><method return='long' name='getItemId'><parameter type='int' name='position'/></method><method return='int' name='getItemViewType'><parameter type='int' name='position'/></method><method return='android.view.View' name='getView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='getViewTypeCount'/><method return='android.widget.ListAdapter' name='getWrappedAdapter'/><method return='boolean' name='hasStableIds'/><method return='boolean' name='isEmpty'/><method return='boolean' name='isEnabled'><parameter type='int' name='position'/></method><method name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method return='boolean' name='removeFooter'><parameter type='android.view.View' name='v'/></method><method return='boolean' name='removeHeader'><parameter type='android.view.View' name='v'/></method><method name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method></class><class extends='android.widget.ImageView' name='ImageButton'><constructor type='android.widget.ImageButton' name='ImageButton'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ImageButton' name='ImageButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ImageButton' name='ImageButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor></class><class extends='android.widget.ViewSwitcher' name='ImageSwitcher'><constructor type='android.widget.ImageSwitcher' name='ImageSwitcher'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ImageSwitcher' name='ImageSwitcher'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='setImageDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setImageResource'><parameter type='int' name='resid'/></method><method name='setImageURI'><parameter type='android.net.Uri' name='uri'/></method></class><class extends='android.view.View' name='ImageView'><constructor type='android.widget.ImageView' name='ImageView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ImageView' name='ImageView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ImageView' name='ImageView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='clearColorFilter' final='true'/><method return='android.graphics.drawable.Drawable' name='getDrawable'/><method return='android.graphics.Matrix' name='getImageMatrix'/><method return='android.widget.ImageView.ScaleType' name='getScaleType'/><method return='int[]' name='onCreateDrawableState'><parameter type='int' name='extraSpace'/></method><method name='setAdjustViewBounds'><parameter type='boolean' name='adjustViewBounds'/></method><method deprecated='16' name='setAlpha'><parameter type='int' name='alpha'/></method><method name='setColorFilter' final='true'><parameter type='int' name='color'/><parameter type='android.graphics.PorterDuff.Mode' name='mode'/></method><method name='setColorFilter'><parameter type='android.graphics.ColorFilter' name='cf'/></method><method visibility='protected' return='boolean' name='setFrame'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setImageBitmap'><parameter type='android.graphics.Bitmap' name='bm'/></method><method name='setImageDrawable'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setImageLevel'><parameter type='int' name='level'/></method><method name='setImageMatrix'><parameter type='android.graphics.Matrix' name='matrix'/></method><method name='setImageResource'><parameter type='int' name='resId'/></method><method name='setImageState'><parameter type='int[]' name='state'/><parameter type='boolean' name='merge'/></method><method name='setImageURI'><parameter type='android.net.Uri' name='uri'/></method><method name='setMaxHeight'><parameter type='int' name='maxHeight'/></method><method name='setMaxWidth'><parameter type='int' name='maxWidth'/></method><method name='setScaleType'><parameter type='android.widget.ImageView.ScaleType' name='scaleType'/></method><method name='setColorFilter' api_added='8' final='true'><parameter type='int' name='color'/></method><method return='boolean' name='getBaselineAlignBottom' api_added='11'/><method name='setBaseline' api_added='11'><parameter type='int' name='baseline'/></method><method name='setBaselineAlignBottom' api_added='11'><parameter type='boolean' name='aligned'/></method><method return='boolean' name='getAdjustViewBounds' api_added='16'/><method return='android.graphics.ColorFilter' name='getColorFilter' api_added='16'/><method return='boolean' name='getCropToPadding' api_added='16'/><method return='int' name='getImageAlpha' api_added='16'/><method return='int' name='getMaxHeight' api_added='16'/><method return='int' name='getMaxWidth' api_added='16'/><method name='setCropToPadding' api_added='16'><parameter type='boolean' name='arg0'/></method><method name='setImageAlpha' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Enum' static='true' name='ImageView.ScaleType' final='true'><method return='android.widget.ImageView.ScaleType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.widget.ImageView.ScaleType[]' static='true' name='values' final='true'/></class><class extends='android.view.ViewGroup' name='LinearLayout'><constructor type='android.widget.LinearLayout' name='LinearLayout'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.LinearLayout' name='LinearLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='int' name='getBaselineAlignedChildIndex'/><method return='int' name='getOrientation'/><method return='float' name='getWeightSum'/><method return='boolean' name='isBaselineAligned'/><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setBaselineAligned'><parameter type='boolean' name='baselineAligned'/></method><method name='setBaselineAlignedChildIndex'><parameter type='int' name='i'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setHorizontalGravity'><parameter type='int' name='horizontalGravity'/></method><method name='setOrientation'><parameter type='int' name='orientation'/></method><method name='setVerticalGravity'><parameter type='int' name='verticalGravity'/></method><method name='setWeightSum'><parameter type='float' name='weightSum'/></method><method return='int' name='getShowDividers' api_added='11'/><method return='boolean' name='isMeasureWithLargestChildEnabled' api_added='11'/><method name='setDividerDrawable' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='divider'/></method><method name='setMeasureWithLargestChildEnabled' api_added='11'><parameter type='boolean' name='enabled'/></method><method name='setShowDividers' api_added='11'><parameter type='int' name='showDividers'/></method><method return='int' name='getDividerPadding' api_added='14'/><method name='setDividerPadding' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.graphics.drawable.Drawable' name='getDividerDrawable' api_added='16'/></class><class extends='android.view.ViewGroup.MarginLayoutParams' static='true' name='LinearLayout.LayoutParams'><constructor type='android.widget.LinearLayout.LayoutParams' name='LinearLayout.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.LinearLayout.LayoutParams' name='LinearLayout.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.widget.LinearLayout.LayoutParams' name='LinearLayout.LayoutParams'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='float' name='weight'/></constructor><constructor type='android.widget.LinearLayout.LayoutParams' name='LinearLayout.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></constructor><constructor type='android.widget.LinearLayout.LayoutParams' name='LinearLayout.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor><method return='java.lang.String' name='debug'><parameter type='java.lang.String' name='output'/></method></class><class extends='android.widget.AbsListView' name='ListView'><constructor type='android.widget.ListView' name='ListView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ListView' name='ListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ListView' name='ListView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='addFooterView'><parameter type='android.view.View' name='v'/><parameter type='java.lang.Object' name='data'/><parameter type='boolean' name='isSelectable'/></method><method name='addFooterView'><parameter type='android.view.View' name='v'/></method><method name='addHeaderView'><parameter type='android.view.View' name='v'/><parameter type='java.lang.Object' name='data'/><parameter type='boolean' name='isSelectable'/></method><method name='addHeaderView'><parameter type='android.view.View' name='v'/></method><method api_removed='11' name='clearChoices'/><method visibility='protected' return='android.view.View' name='findViewTraversal'><parameter type='int' name='id'/></method><method visibility='protected' return='android.view.View' name='findViewWithTagTraversal'><parameter type='java.lang.Object' name='tag'/></method><method return='android.widget.ListAdapter' name='getAdapter'/><method return='int' api_removed='11' name='getCheckedItemPosition'/><method return='android.util.SparseBooleanArray' api_removed='11' name='getCheckedItemPositions'/><method return='int' api_removed='11' name='getChoiceMode'/><method return='android.graphics.drawable.Drawable' name='getDivider'/><method return='int' name='getDividerHeight'/><method return='int' name='getFooterViewsCount'/><method return='int' name='getHeaderViewsCount'/><method return='boolean' name='getItemsCanFocus'/><method return='int' name='getMaxScrollAmount'/><method return='boolean' api_removed='11' name='isItemChecked'><parameter type='int' name='position'/></method><method return='boolean' name='removeFooterView'><parameter type='android.view.View' name='v'/></method><method return='boolean' name='removeHeaderView'><parameter type='android.view.View' name='v'/></method><method api_removed='11' name='setAdapter'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method api_removed='11' name='setChoiceMode'><parameter type='int' name='choiceMode'/></method><method name='setDivider'><parameter type='android.graphics.drawable.Drawable' name='divider'/></method><method name='setDividerHeight'><parameter type='int' name='height'/></method><method api_removed='11' name='setItemChecked'><parameter type='int' name='position'/><parameter type='boolean' name='value'/></method><method name='setItemsCanFocus'><parameter type='boolean' name='itemsCanFocus'/></method><method name='setSelection'><parameter type='int' name='position'/></method><method name='setSelectionAfterHeaderView'/><method name='setSelectionFromTop'><parameter type='int' name='position'/><parameter type='int' name='y'/></method><method name='setFooterDividersEnabled' api_added='3'><parameter type='boolean' name='footerDividersEnabled'/></method><method name='setHeaderDividersEnabled' api_added='3'><parameter type='boolean' name='headerDividersEnabled'/></method><method deprecated='8' return='long[]' name='getCheckItemIds' api_added='4'/><method return='long[]' api_removed='11' name='getCheckedItemIds' api_added='8'/><method return='android.graphics.drawable.Drawable' name='getOverscrollFooter' api_added='9'/><method return='android.graphics.drawable.Drawable' name='getOverscrollHeader' api_added='9'/><method name='setOverscrollFooter' api_added='9'><parameter type='android.graphics.drawable.Drawable' name='footer'/></method><method name='setOverscrollHeader' api_added='9'><parameter type='android.graphics.drawable.Drawable' name='header'/></method><method name='smoothScrollByOffset' api_added='11'><parameter type='int' name='offset'/></method></class><class extends='java.lang.Object' name='ListView.FixedViewInfo'><constructor type='android.widget.ListView.FixedViewInfo' name='ListView.FixedViewInfo'/></class><class extends='android.widget.FrameLayout' name='MediaController'><constructor type='android.widget.MediaController' name='MediaController'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.MediaController' name='MediaController'><parameter type='android.content.Context' name='context'/><parameter type='boolean' name='useFastForward'/></constructor><constructor type='android.widget.MediaController' name='MediaController'><parameter type='android.content.Context' name='context'/></constructor><method name='hide'/><method return='boolean' name='isShowing'/><method name='onFinishInflate'/><method name='setAnchorView'><parameter type='android.view.View' name='view'/></method><method name='setMediaPlayer'><parameter type='android.widget.MediaController.MediaPlayerControl' name='player'/></method><method name='setPrevNextListeners'><parameter type='android.view.View.OnClickListener' name='next'/><parameter type='android.view.View.OnClickListener' name='prev'/></method><method name='show'/><method name='show'><parameter type='int' name='timeout'/></method></class><class extends='android.widget.AutoCompleteTextView' name='MultiAutoCompleteTextView'><constructor type='android.widget.MultiAutoCompleteTextView' name='MultiAutoCompleteTextView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.MultiAutoCompleteTextView' name='MultiAutoCompleteTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.MultiAutoCompleteTextView' name='MultiAutoCompleteTextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method visibility='protected' name='performFiltering'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='keyCode'/></method><method name='setTokenizer'><parameter type='android.widget.MultiAutoCompleteTextView.Tokenizer' name='t'/></method></class><class extends='java.lang.Object' static='true' name='MultiAutoCompleteTextView.CommaTokenizer'><constructor type='android.widget.MultiAutoCompleteTextView.CommaTokenizer' name='MultiAutoCompleteTextView.CommaTokenizer'/><method return='int' name='findTokenEnd'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='int' name='findTokenStart'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='java.lang.CharSequence' name='terminateToken'><parameter type='java.lang.CharSequence' name='text'/></method></class><class extends='java.lang.Object' name='PopupWindow'><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'/><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.view.View' name='contentView'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.view.View' name='contentView'/><parameter type='int' name='width'/><parameter type='int' name='height'/></constructor><constructor type='android.widget.PopupWindow' name='PopupWindow'><parameter type='android.view.View' name='contentView'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='boolean' name='focusable'/></constructor><method name='dismiss'/><method return='int' name='getAnimationStyle'/><method return='android.graphics.drawable.Drawable' name='getBackground'/><method return='android.view.View' name='getContentView'/><method return='int' name='getHeight'/><method return='int' name='getMaxAvailableHeight'><parameter type='android.view.View' name='anchor'/></method><method return='int' name='getWidth'/><method return='boolean' name='isFocusable'/><method return='boolean' name='isShowing'/><method name='setAnimationStyle'><parameter type='int' name='animationStyle'/></method><method name='setBackgroundDrawable'><parameter type='android.graphics.drawable.Drawable' name='background'/></method><method name='setContentView'><parameter type='android.view.View' name='contentView'/></method><method name='setFocusable'><parameter type='boolean' name='focusable'/></method><method name='setHeight'><parameter type='int' name='height'/></method><method name='setIgnoreCheekPress'/><method name='setOnDismissListener'><parameter type='android.widget.PopupWindow.OnDismissListener' name='onDismissListener'/></method><method name='setWidth'><parameter type='int' name='width'/></method><method name='showAsDropDown'><parameter type='android.view.View' name='anchor'/></method><method name='showAsDropDown'><parameter type='android.view.View' name='anchor'/><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/></method><method name='showAtLocation'><parameter type='android.view.View' name='parent'/><parameter type='int' name='gravity'/><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='update'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='update'><parameter type='android.view.View' name='anchor'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='update'><parameter type='android.view.View' name='anchor'/><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='int' name='getInputMethodMode' api_added='3'/><method return='int' name='getMaxAvailableHeight' api_added='3'><parameter type='android.view.View' name='anchor'/><parameter type='int' name='yOffset'/></method><method return='boolean' name='isAboveAnchor' api_added='3'/><method return='boolean' name='isClippingEnabled' api_added='3'/><method return='boolean' name='isOutsideTouchable' api_added='3'/><method return='boolean' name='isTouchable' api_added='3'/><method name='setClippingEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method><method name='setInputMethodMode' api_added='3'><parameter type='int' name='mode'/></method><method name='setOutsideTouchable' api_added='3'><parameter type='boolean' name='touchable'/></method><method name='setTouchInterceptor' api_added='3'><parameter type='android.view.View.OnTouchListener' name='l'/></method><method name='setTouchable' api_added='3'><parameter type='boolean' name='touchable'/></method><method name='setWindowLayoutMode' api_added='3'><parameter type='int' name='widthSpec'/><parameter type='int' name='heightSpec'/></method><method name='update' api_added='3'/><method name='update' api_added='3'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='boolean' name='force'/></method><method return='int' name='getSoftInputMode' api_added='4'/><method name='setSoftInputMode' api_added='4'><parameter type='int' name='mode'/></method><method name='update' api_added='4'><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method return='boolean' name='isSplitTouchEnabled' api_added='11'/><method name='setSplitTouchEnabled' api_added='11'><parameter type='boolean' name='enabled'/></method></class><class extends='android.view.View' name='ProgressBar'><constructor type='android.widget.ProgressBar' name='ProgressBar'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ProgressBar' name='ProgressBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ProgressBar' name='ProgressBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='android.graphics.drawable.Drawable' name='getIndeterminateDrawable'/><method return='android.view.animation.Interpolator' name='getInterpolator'/><method return='int' synchronized='true' name='getMax'/><method return='int' synchronized='true' name='getProgress'/><method return='android.graphics.drawable.Drawable' name='getProgressDrawable'/><method return='int' synchronized='true' name='getSecondaryProgress'/><method synchronized='true' name='incrementProgressBy' final='true'><parameter type='int' name='diff'/></method><method synchronized='true' name='incrementSecondaryProgressBy' final='true'><parameter type='int' name='diff'/></method><method return='boolean' synchronized='true' name='isIndeterminate'/><method synchronized='true' name='setIndeterminate'><parameter type='boolean' name='indeterminate'/></method><method name='setIndeterminateDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setInterpolator'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resID'/></method><method name='setInterpolator'><parameter type='android.view.animation.Interpolator' name='interpolator'/></method><method synchronized='true' name='setMax'><parameter type='int' name='max'/></method><method synchronized='true' name='setProgress'><parameter type='int' name='progress'/></method><method name='setProgressDrawable'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method synchronized='true' name='setSecondaryProgress'><parameter type='int' name='secondaryProgress'/></method><method name='onRestoreInstanceState' api_added='3'><parameter type='android.os.Parcelable' name='state'/></method><method return='android.os.Parcelable' name='onSaveInstanceState' api_added='3'/></class><class extends='android.widget.CompoundButton' name='RadioButton'><constructor type='android.widget.RadioButton' name='RadioButton'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.RadioButton' name='RadioButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.RadioButton' name='RadioButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor></class><class extends='android.widget.LinearLayout' name='RadioGroup'><constructor type='android.widget.RadioGroup' name='RadioGroup'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.RadioGroup' name='RadioGroup'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='check'><parameter type='int' name='id'/></method><method name='clearCheck'/><method return='int' name='getCheckedRadioButtonId'/><method name='setOnCheckedChangeListener'><parameter type='android.widget.RadioGroup.OnCheckedChangeListener' name='listener'/></method></class><class extends='android.widget.LinearLayout.LayoutParams' static='true' name='RadioGroup.LayoutParams'><constructor type='android.widget.RadioGroup.LayoutParams' name='RadioGroup.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.RadioGroup.LayoutParams' name='RadioGroup.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.RadioGroup.LayoutParams' name='RadioGroup.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='float' name='initWeight'/></constructor><constructor type='android.widget.RadioGroup.LayoutParams' name='RadioGroup.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></constructor><constructor type='android.widget.RadioGroup.LayoutParams' name='RadioGroup.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor></class><class extends='android.widget.AbsSeekBar' name='RatingBar'><constructor type='android.widget.RatingBar' name='RatingBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.widget.RatingBar' name='RatingBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.RatingBar' name='RatingBar'><parameter type='android.content.Context' name='context'/></constructor><method return='int' name='getNumStars'/><method return='android.widget.RatingBar.OnRatingBarChangeListener' name='getOnRatingBarChangeListener'/><method return='float' name='getRating'/><method return='float' name='getStepSize'/><method return='boolean' name='isIndicator'/><method name='setIsIndicator'><parameter type='boolean' name='isIndicator'/></method><method name='setNumStars'><parameter type='int' name='numStars'/></method><method name='setOnRatingBarChangeListener'><parameter type='android.widget.RatingBar.OnRatingBarChangeListener' name='listener'/></method><method name='setRating'><parameter type='float' name='rating'/></method><method name='setStepSize'><parameter type='float' name='stepSize'/></method></class><class extends='android.view.ViewGroup' name='RelativeLayout'><constructor type='android.widget.RelativeLayout' name='RelativeLayout'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.RelativeLayout' name='RelativeLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.RelativeLayout' name='RelativeLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method visibility='protected' name='onLayout'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setHorizontalGravity'><parameter type='int' name='horizontalGravity'/></method><method name='setIgnoreGravity'><parameter type='int' name='viewId'/></method><method name='setVerticalGravity'><parameter type='int' name='verticalGravity'/></method><method return='int' name='getGravity' api_added='16'/></class><class extends='android.view.ViewGroup.MarginLayoutParams' static='true' name='RelativeLayout.LayoutParams'><constructor type='android.widget.RelativeLayout.LayoutParams' name='RelativeLayout.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.RelativeLayout.LayoutParams' name='RelativeLayout.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.RelativeLayout.LayoutParams' name='RelativeLayout.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='source'/></constructor><constructor type='android.widget.RelativeLayout.LayoutParams' name='RelativeLayout.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor><method name='addRule'><parameter type='int' name='verb'/></method><method name='addRule'><parameter type='int' name='verb'/><parameter type='int' name='anchor'/></method><method return='java.lang.String' name='debug'><parameter type='java.lang.String' name='output'/></method><method return='int[]' name='getRules'/></class><class extends='java.lang.Object' name='RemoteViews'><constructor type='android.widget.RemoteViews' name='RemoteViews'><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='layoutId'/></constructor><constructor type='android.widget.RemoteViews' name='RemoteViews'><parameter type='android.os.Parcel' name='parcel'/></constructor><method return='android.view.View' name='apply'><parameter type='android.content.Context' name='context'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='describeContents'/><method return='int' name='getLayoutId'/><method return='java.lang.String' name='getPackage'/><method return='boolean' name='onLoadClass'><parameter type='java.lang.Class' name='clazz'/></method><method name='reapply'><parameter type='android.content.Context' name='context'/><parameter type='android.view.View' name='v'/></method><method name='setChronometer'><parameter type='int' name='viewId'/><parameter type='long' name='base'/><parameter type='java.lang.String' name='format'/><parameter type='boolean' name='running'/></method><method name='setImageViewResource'><parameter type='int' name='viewId'/><parameter type='int' name='srcId'/></method><method name='setImageViewUri'><parameter type='int' name='viewId'/><parameter type='android.net.Uri' name='uri'/></method><method name='setProgressBar'><parameter type='int' name='viewId'/><parameter type='int' name='max'/><parameter type='int' name='progress'/><parameter type='boolean' name='indeterminate'/></method><method name='setTextViewText'><parameter type='int' name='viewId'/><parameter type='java.lang.CharSequence' name='text'/></method><method name='setViewVisibility'><parameter type='int' name='viewId'/><parameter type='int' name='visibility'/></method><method name='writeToParcel'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method name='setBitmap' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='android.graphics.Bitmap' name='value'/></method><method name='setBoolean' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='boolean' name='value'/></method><method name='setByte' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='byte' name='value'/></method><method name='setChar' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='char' name='value'/></method><method name='setCharSequence' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='java.lang.CharSequence' name='value'/></method><method name='setDouble' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='double' name='value'/></method><method name='setFloat' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='float' name='value'/></method><method name='setImageViewBitmap' api_added='3'><parameter type='int' name='viewId'/><parameter type='android.graphics.Bitmap' name='bitmap'/></method><method name='setInt' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='int' name='value'/></method><method name='setLong' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='long' name='value'/></method><method name='setOnClickPendingIntent' api_added='3'><parameter type='int' name='viewId'/><parameter type='android.app.PendingIntent' name='pendingIntent'/></method><method name='setShort' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='short' name='value'/></method><method name='setString' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='java.lang.String' name='value'/></method><method name='setTextColor' api_added='3'><parameter type='int' name='viewId'/><parameter type='int' name='color'/></method><method name='setUri' api_added='3'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='android.net.Uri' name='value'/></method><method name='addView' api_added='7'><parameter type='int' name='viewId'/><parameter type='android.widget.RemoteViews' name='nestedView'/></method><method name='removeAllViews' api_added='7'><parameter type='int' name='viewId'/></method><method name='setBundle' api_added='8'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='android.os.Bundle' name='value'/></method><method return='android.widget.RemoteViews' name='clone' api_added='9'/><method name='setEmptyView' api_added='11'><parameter type='int' name='viewId'/><parameter type='int' name='emptyViewId'/></method><method name='setIntent' api_added='11'><parameter type='int' name='viewId'/><parameter type='java.lang.String' name='methodName'/><parameter type='android.content.Intent' name='value'/></method><method name='setOnClickFillInIntent' api_added='11'><parameter type='int' name='viewId'/><parameter type='android.content.Intent' name='fillInIntent'/></method><method name='setPendingIntentTemplate' api_added='11'><parameter type='int' name='viewId'/><parameter type='android.app.PendingIntent' name='pendingIntentTemplate'/></method><method name='setRelativeScrollPosition' api_added='11'><parameter type='int' name='viewId'/><parameter type='int' name='offset'/></method><method deprecated='14' name='setRemoteAdapter' api_added='11'><parameter type='int' name='appWidgetId'/><parameter type='int' name='viewId'/><parameter type='android.content.Intent' name='intent'/></method><method name='setScrollPosition' api_added='11'><parameter type='int' name='viewId'/><parameter type='int' name='position'/></method><method name='showNext' api_added='11'><parameter type='int' name='viewId'/></method><method name='showPrevious' api_added='11'><parameter type='int' name='viewId'/></method><method name='setDisplayedChild' api_added='12'><parameter type='int' name='viewId'/><parameter type='int' name='childIndex'/></method><method name='setRemoteAdapter' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.content.Intent' name='arg1'/></method><method name='setContentDescription' api_added='15'><parameter type='int' name='arg0'/><parameter type='java.lang.CharSequence' name='arg1'/></method><method name='setTextViewCompoundDrawables' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method><method name='setTextViewCompoundDrawablesRelative' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method><method name='setTextViewTextSize' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='float' name='arg2'/></method><method name='setViewPadding' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method></class><class extends='java.lang.RuntimeException' static='true' name='RemoteViews.ActionException'><constructor type='android.widget.RemoteViews.ActionException' name='RemoteViews.ActionException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' abstract='true' static='true' name='RemoteViews.RemoteView'/><class extends='android.widget.CursorAdapter' abstract='true' name='ResourceCursorAdapter'><constructor deprecated='11' type='android.widget.ResourceCursorAdapter' name='ResourceCursorAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='layout'/><parameter type='android.database.Cursor' name='c'/></constructor><constructor type='android.widget.deprecated ResourceCursorAdapter' name='deprecated ResourceCursorAdapter' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.database.Cursor' name='arg2'/></constructor><method return='android.view.View' name='newView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='android.view.ViewGroup' name='parent'/></method><method name='setDropDownViewResource'><parameter type='int' name='dropDownLayout'/></method><method name='setViewResource' api_added='3'><parameter type='int' name='layout'/></method></class><class extends='android.widget.CursorTreeAdapter' abstract='true' name='ResourceCursorTreeAdapter'><constructor type='android.widget.ResourceCursorTreeAdapter' name='ResourceCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='int' name='expandedGroupLayout'/><parameter type='int' name='childLayout'/><parameter type='int' name='lastChildLayout'/></constructor><constructor type='android.widget.ResourceCursorTreeAdapter' name='ResourceCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='int' name='expandedGroupLayout'/><parameter type='int' name='childLayout'/></constructor><constructor type='android.widget.ResourceCursorTreeAdapter' name='ResourceCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='groupLayout'/><parameter type='int' name='childLayout'/></constructor><method return='android.view.View' name='newChildView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isLastChild'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='android.view.View' name='newGroupView'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isExpanded'/><parameter type='android.view.ViewGroup' name='parent'/></method></class><class extends='android.widget.FrameLayout' name='ScrollView'><constructor type='android.widget.ScrollView' name='ScrollView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ScrollView' name='ScrollView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ScrollView' name='ScrollView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='arrowScroll'><parameter type='int' name='direction'/></method><method visibility='protected' return='int' name='computeScrollDeltaToGetChildRectOnScreen'><parameter type='android.graphics.Rect' name='rect'/></method><method return='boolean' name='executeKeyEvent'><parameter type='android.view.KeyEvent' name='event'/></method><method name='fling'><parameter type='int' name='velocityY'/></method><method return='boolean' name='fullScroll'><parameter type='int' name='direction'/></method><method return='int' name='getMaxScrollAmount'/><method return='boolean' name='isFillViewport'/><method return='boolean' name='isSmoothScrollingEnabled'/><method return='boolean' name='pageScroll'><parameter type='int' name='direction'/></method><method name='setFillViewport'><parameter type='boolean' name='fillViewport'/></method><method name='setSmoothScrollingEnabled'><parameter type='boolean' name='smoothScrollingEnabled'/></method><method name='smoothScrollBy' final='true'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='smoothScrollTo' final='true'><parameter type='int' name='x'/><parameter type='int' name='y'/></method></class><class extends='java.lang.Object' name='Scroller'><constructor type='android.widget.Scroller' name='Scroller'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.Scroller' name='Scroller'><parameter type='android.content.Context' name='context'/><parameter type='android.view.animation.Interpolator' name='interpolator'/></constructor><method name='abortAnimation'/><method return='boolean' name='computeScrollOffset'/><method name='extendDuration'><parameter type='int' name='extend'/></method><method name='fling'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='velocityX'/><parameter type='int' name='velocityY'/><parameter type='int' name='minX'/><parameter type='int' name='maxX'/><parameter type='int' name='minY'/><parameter type='int' name='maxY'/></method><method name='forceFinished' final='true'><parameter type='boolean' name='finished'/></method><method return='int' name='getCurrX' final='true'/><method return='int' name='getCurrY' final='true'/><method return='int' name='getDuration' final='true'/><method return='int' name='getFinalX' final='true'/><method return='int' name='getFinalY' final='true'/><method return='boolean' name='isFinished' final='true'/><method name='setFinalX'><parameter type='int' name='newX'/></method><method name='setFinalY'><parameter type='int' name='newY'/></method><method name='startScroll'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='startScroll'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='dx'/><parameter type='int' name='dy'/><parameter type='int' name='duration'/></method><method return='int' name='timePassed'/><method return='int' name='getStartX' api_added='3' final='true'/><method return='int' name='getStartY' api_added='3' final='true'/><method name='setFriction' api_added='11' final='true'><parameter type='float' name='friction'/></method><method return='float' name='getCurrVelocity' api_added='14'/></class><class extends='android.widget.AbsSeekBar' name='SeekBar'><constructor type='android.widget.SeekBar' name='SeekBar'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.SeekBar' name='SeekBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.SeekBar' name='SeekBar'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='setOnSeekBarChangeListener'><parameter type='android.widget.SeekBar.OnSeekBarChangeListener' name='l'/></method></class><class extends='android.widget.BaseAdapter' name='SimpleAdapter'><constructor type='android.widget.SimpleAdapter' name='SimpleAdapter'><parameter type='android.content.Context' name='context'/><parameter type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;' name='data'/><parameter type='int' name='resource'/><parameter type='java.lang.String[]' name='from'/><parameter type='int[]' name='to'/></constructor><method return='int' name='getCount'/><method return='android.widget.Filter' name='getFilter'/><method return='java.lang.Object' name='getItem'><parameter type='int' name='position'/></method><method return='long' name='getItemId'><parameter type='int' name='position'/></method><method return='android.view.View' name='getView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='android.widget.SimpleAdapter.ViewBinder' name='getViewBinder'/><method name='setDropDownViewResource'><parameter type='int' name='resource'/></method><method name='setViewBinder'><parameter type='android.widget.SimpleAdapter.ViewBinder' name='viewBinder'/></method><method name='setViewImage'><parameter type='android.widget.ImageView' name='v'/><parameter type='int' name='value'/></method><method name='setViewImage'><parameter type='android.widget.ImageView' name='v'/><parameter type='java.lang.String' name='value'/></method><method name='setViewText'><parameter type='android.widget.TextView' name='v'/><parameter type='java.lang.String' name='text'/></method></class><class extends='android.widget.ResourceCursorAdapter' name='SimpleCursorAdapter'><constructor deprecated='11' type='android.widget.SimpleCursorAdapter' name='SimpleCursorAdapter'><parameter type='android.content.Context' name='context'/><parameter type='int' name='layout'/><parameter type='android.database.Cursor' name='c'/><parameter type='java.lang.String[]' name='from'/><parameter type='int[]' name='to'/></constructor><constructor type='android.widget.deprecated SimpleCursorAdapter' name='deprecated SimpleCursorAdapter' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.database.Cursor' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/><parameter type='int[]' name='arg4'/></constructor><method name='bindView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/></method><method return='android.widget.SimpleCursorAdapter.CursorToStringConverter' name='getCursorToStringConverter'/><method return='int' name='getStringConversionColumn'/><method return='android.widget.SimpleCursorAdapter.ViewBinder' name='getViewBinder'/><method name='setCursorToStringConverter'><parameter type='android.widget.SimpleCursorAdapter.CursorToStringConverter' name='cursorToStringConverter'/></method><method name='setStringConversionColumn'><parameter type='int' name='stringConversionColumn'/></method><method name='setViewBinder'><parameter type='android.widget.SimpleCursorAdapter.ViewBinder' name='viewBinder'/></method><method name='setViewImage'><parameter type='android.widget.ImageView' name='v'/><parameter type='java.lang.String' name='value'/></method><method name='setViewText'><parameter type='android.widget.TextView' name='v'/><parameter type='java.lang.String' name='text'/></method><method name='changeCursorAndColumns' api_added='3'><parameter type='android.database.Cursor' name='c'/><parameter type='java.lang.String[]' name='from'/><parameter type='int[]' name='to'/></method></class><class extends='android.widget.ResourceCursorTreeAdapter' abstract='true' name='SimpleCursorTreeAdapter'><constructor type='android.widget.SimpleCursorTreeAdapter' name='SimpleCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='int' name='expandedGroupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='int' name='childLayout'/><parameter type='int' name='lastChildLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><constructor type='android.widget.SimpleCursorTreeAdapter' name='SimpleCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='int' name='expandedGroupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='int' name='childLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><constructor type='android.widget.SimpleCursorTreeAdapter' name='SimpleCursorTreeAdapter'><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='groupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='int' name='childLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><method visibility='protected' name='bindChildView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isLastChild'/></method><method visibility='protected' name='bindGroupView'><parameter type='android.view.View' name='view'/><parameter type='android.content.Context' name='context'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='boolean' name='isExpanded'/></method><method visibility='protected' name='setViewImage'><parameter type='android.widget.ImageView' name='v'/><parameter type='java.lang.String' name='value'/></method><method return='android.widget.SimpleCursorTreeAdapter.ViewBinder' name='getViewBinder' api_added='5'/><method name='setViewBinder' api_added='5'><parameter type='android.widget.SimpleCursorTreeAdapter.ViewBinder' name='viewBinder'/></method><method name='setViewText' api_added='5'><parameter type='android.widget.TextView' name='v'/><parameter type='java.lang.String' name='text'/></method></class><class extends='android.widget.BaseExpandableListAdapter' name='SimpleExpandableListAdapter'><constructor type='android.widget.SimpleExpandableListAdapter' name='SimpleExpandableListAdapter'><parameter type='android.content.Context' name='context'/><parameter type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;' name='groupData'/><parameter type='int' name='groupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;' name='childData'/><parameter type='int' name='childLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><constructor type='android.widget.SimpleExpandableListAdapter' name='SimpleExpandableListAdapter'><parameter type='android.content.Context' name='context'/><parameter type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;' name='groupData'/><parameter type='int' name='expandedGroupLayout'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;' name='childData'/><parameter type='int' name='childLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><constructor type='android.widget.SimpleExpandableListAdapter' name='SimpleExpandableListAdapter'><parameter type='android.content.Context' name='context'/><parameter type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;' name='groupData'/><parameter type='int' name='expandedGroupLayout'/><parameter type='int' name='collapsedGroupLayout'/><parameter type='java.lang.String[]' name='groupFrom'/><parameter type='int[]' name='groupTo'/><parameter type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;' name='childData'/><parameter type='int' name='childLayout'/><parameter type='int' name='lastChildLayout'/><parameter type='java.lang.String[]' name='childFrom'/><parameter type='int[]' name='childTo'/></constructor><method return='java.lang.Object' name='getChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='long' name='getChildId'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='android.view.View' name='getChildView'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='boolean' name='isLastChild'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' name='getChildrenCount'><parameter type='int' name='groupPosition'/></method><method return='java.lang.Object' name='getGroup'><parameter type='int' name='groupPosition'/></method><method return='int' name='getGroupCount'/><method return='long' name='getGroupId'><parameter type='int' name='groupPosition'/></method><method return='android.view.View' name='getGroupView'><parameter type='int' name='groupPosition'/><parameter type='boolean' name='isExpanded'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='boolean' name='hasStableIds'/><method return='boolean' name='isChildSelectable'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='android.view.View' name='newChildView'><parameter type='boolean' name='isLastChild'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='android.view.View' name='newGroupView'><parameter type='boolean' name='isExpanded'/><parameter type='android.view.ViewGroup' name='parent'/></method></class><class extends='android.widget.AbsSpinner' name='Spinner'><constructor type='android.widget.Spinner' name='Spinner'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.Spinner' name='Spinner'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.Spinner' name='Spinner'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='java.lang.CharSequence' name='getPrompt'/><method name='onClick'><parameter type='android.content.DialogInterface' name='dialog'/><parameter type='int' name='which'/></method><method name='setPrompt'><parameter type='java.lang.CharSequence' name='prompt'/></method><method name='setPromptId'><parameter type='int' name='promptId'/></method><method name='setGravity' api_added='11'><parameter type='int' name='gravity'/></method><method return='int' name='getDropDownHorizontalOffset' api_added='16'/><method return='int' name='getDropDownVerticalOffset' api_added='16'/><method return='int' name='getDropDownWidth' api_added='16'/><method return='int' name='getGravity' api_added='16'/><method return='android.graphics.drawable.Drawable' name='getPopupBackground' api_added='16'/><method name='setDropDownHorizontalOffset' api_added='16'><parameter type='int' name='arg0'/></method><method name='setDropDownVerticalOffset' api_added='16'><parameter type='int' name='arg0'/></method><method name='setDropDownWidth' api_added='16'><parameter type='int' name='arg0'/></method><method name='setPopupBackgroundDrawable' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setPopupBackgroundResource' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='android.widget.FrameLayout' name='TabHost'><constructor type='android.widget.TabHost' name='TabHost'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TabHost' name='TabHost'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='addTab'><parameter type='android.widget.TabHost.TabSpec' name='tabSpec'/></method><method name='clearAllTabs'/><method return='int' name='getCurrentTab'/><method return='java.lang.String' name='getCurrentTabTag'/><method return='android.view.View' name='getCurrentTabView'/><method return='android.view.View' name='getCurrentView'/><method return='android.widget.FrameLayout' name='getTabContentView'/><method return='android.widget.TabWidget' name='getTabWidget'/><method return='android.widget.TabHost.TabSpec' name='newTabSpec'><parameter type='java.lang.String' name='tag'/></method><method name='onTouchModeChanged'><parameter type='boolean' name='isInTouchMode'/></method><method name='setCurrentTab'><parameter type='int' name='index'/></method><method name='setCurrentTabByTag'><parameter type='java.lang.String' name='tag'/></method><method name='setOnTabChangedListener'><parameter type='android.widget.TabHost.OnTabChangeListener' name='l'/></method><method name='setup'/><method name='setup'><parameter type='android.app.LocalActivityManager' name='activityGroup'/></method></class><class extends='java.lang.Object' name='TabHost.TabSpec'><method return='android.widget.TabHost.TabSpec' name='setContent'><parameter type='int' name='viewId'/></method><method return='android.widget.TabHost.TabSpec' name='setContent'><parameter type='android.widget.TabHost.TabContentFactory' name='contentFactory'/></method><method return='android.widget.TabHost.TabSpec' name='setContent'><parameter type='android.content.Intent' name='intent'/></method><method return='android.widget.TabHost.TabSpec' name='setIndicator'><parameter type='java.lang.CharSequence' name='label'/></method><method return='android.widget.TabHost.TabSpec' name='setIndicator'><parameter type='java.lang.CharSequence' name='label'/><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method return='java.lang.String' name='getTag' api_added='4'/><method return='android.widget.TabHost.TabSpec' name='setIndicator' api_added='4'><parameter type='android.view.View' name='view'/></method></class><class extends='android.widget.LinearLayout' name='TabWidget'><constructor type='android.widget.TabWidget' name='TabWidget'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TabWidget' name='TabWidget'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TabWidget' name='TabWidget'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='dispatchDraw'><parameter type='android.graphics.Canvas' name='canvas'/></method><method name='focusCurrentTab'><parameter type='int' name='index'/></method><method name='onFocusChange'><parameter type='android.view.View' name='v'/><parameter type='boolean' name='hasFocus'/></method><method name='setCurrentTab'><parameter type='int' name='index'/></method><method return='android.view.View' name='getChildTabViewAt' api_added='4'><parameter type='int' name='index'/></method><method return='int' name='getTabCount' api_added='4'/><method api_removed='11' name='setDividerDrawable' api_added='4'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setDividerDrawable' api_added='4'><parameter type='int' name='resId'/></method><method return='boolean' name='isStripEnabled' api_added='8'/><method name='setLeftStripDrawable' api_added='8'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setLeftStripDrawable' api_added='8'><parameter type='int' name='resId'/></method><method name='setRightStripDrawable' api_added='8'><parameter type='android.graphics.drawable.Drawable' name='drawable'/></method><method name='setRightStripDrawable' api_added='8'><parameter type='int' name='resId'/></method><method name='setStripEnabled' api_added='8'><parameter type='boolean' name='stripEnabled'/></method></class><class extends='android.widget.LinearLayout' name='TableLayout'><constructor type='android.widget.TableLayout' name='TableLayout'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TableLayout' name='TableLayout'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='boolean' name='isColumnCollapsed'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='isColumnShrinkable'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='isColumnStretchable'><parameter type='int' name='columnIndex'/></method><method return='boolean' name='isShrinkAllColumns'/><method return='boolean' name='isStretchAllColumns'/><method name='setColumnCollapsed'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isCollapsed'/></method><method name='setColumnShrinkable'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isShrinkable'/></method><method name='setColumnStretchable'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isStretchable'/></method><method name='setShrinkAllColumns'><parameter type='boolean' name='shrinkAllColumns'/></method><method name='setStretchAllColumns'><parameter type='boolean' name='stretchAllColumns'/></method></class><class extends='android.widget.LinearLayout.LayoutParams' static='true' name='TableLayout.LayoutParams'><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='float' name='initWeight'/></constructor><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'/><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></constructor><constructor type='android.widget.TableLayout.LayoutParams' name='TableLayout.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor></class><class extends='android.widget.LinearLayout' name='TableRow'><constructor type='android.widget.TableRow' name='TableRow'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TableRow' name='TableRow'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='android.view.View' name='getVirtualChildAt'><parameter type='int' name='i'/></method><method return='int' name='getVirtualChildCount'/></class><class extends='android.widget.LinearLayout.LayoutParams' static='true' name='TableRow.LayoutParams'><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='android.content.Context' name='c'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/></constructor><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='float' name='initWeight'/></constructor><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'/><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='int' name='column'/></constructor><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='android.view.ViewGroup.LayoutParams' name='p'/></constructor><constructor type='android.widget.TableRow.LayoutParams' name='TableRow.LayoutParams'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='source'/></constructor></class><class extends='android.widget.ViewSwitcher' name='TextSwitcher'><constructor type='android.widget.TextSwitcher' name='TextSwitcher'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TextSwitcher' name='TextSwitcher'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='setCurrentText'><parameter type='java.lang.CharSequence' name='text'/></method><method name='setText'><parameter type='java.lang.CharSequence' name='text'/></method></class><class extends='android.view.View' name='TextView'><constructor type='android.widget.TextView' name='TextView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TextView' name='TextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TextView' name='TextView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='addTextChangedListener'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='append' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method name='append'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='debug'><parameter type='int' name='depth'/></method><method return='int' name='getAutoLinkMask' final='true'/><method return='int' name='getCompoundDrawablePadding'/><method return='android.graphics.drawable.Drawable[]' name='getCompoundDrawables'/><method return='int' name='getCompoundPaddingBottom'/><method return='int' name='getCompoundPaddingLeft'/><method return='int' name='getCompoundPaddingRight'/><method return='int' name='getCompoundPaddingTop'/><method return='int' name='getCurrentHintTextColor' final='true'/><method return='int' name='getCurrentTextColor' final='true'/><method visibility='protected' return='boolean' name='getDefaultEditable'/><method visibility='protected' return='android.text.method.MovementMethod' name='getDefaultMovementMethod'/><method return='android.text.TextUtils.TruncateAt' name='getEllipsize'/><method return='java.lang.CharSequence' name='getError'/><method return='int' name='getExtendedPaddingBottom'/><method return='int' name='getExtendedPaddingTop'/><method return='android.text.InputFilter[]' name='getFilters'/><method return='boolean' name='getFreezesText'/><method return='int' name='getGravity'/><method return='java.lang.CharSequence' name='getHint'/><method return='android.content.res.ColorStateList' name='getHintTextColors' final='true'/><method return='android.text.method.KeyListener' name='getKeyListener' final='true'/><method return='android.text.Layout' name='getLayout' final='true'/><method return='int' name='getLineBounds'><parameter type='int' name='line'/><parameter type='android.graphics.Rect' name='bounds'/></method><method return='int' name='getLineCount'/><method return='int' name='getLineHeight'/><method return='android.content.res.ColorStateList' name='getLinkTextColors' final='true'/><method return='boolean' name='getLinksClickable' final='true'/><method return='android.text.method.MovementMethod' name='getMovementMethod' final='true'/><method return='android.text.TextPaint' name='getPaint'/><method return='int' name='getPaintFlags'/><method return='int' name='getSelectionEnd'/><method return='int' name='getSelectionStart'/><method return='java.lang.CharSequence' name='getText'/><method return='int' static='true' name='getTextColor'><parameter type='android.content.Context' name='context'/><parameter type='android.content.res.TypedArray' name='attrs'/><parameter type='int' name='def'/></method><method return='android.content.res.ColorStateList' name='getTextColors' final='true'/><method return='android.content.res.ColorStateList' static='true' name='getTextColors'><parameter type='android.content.Context' name='context'/><parameter type='android.content.res.TypedArray' name='attrs'/></method><method return='float' name='getTextScaleX'/><method return='float' name='getTextSize'/><method return='int' name='getTotalPaddingBottom'/><method return='int' name='getTotalPaddingLeft'/><method return='int' name='getTotalPaddingRight'/><method return='int' name='getTotalPaddingTop'/><method return='android.text.method.TransformationMethod' name='getTransformationMethod' final='true'/><method return='android.graphics.Typeface' name='getTypeface'/><method return='android.text.style.URLSpan[]' name='getUrls'/><method return='boolean' name='hasSelection'/><method return='int' name='length'/><method return='boolean' name='onPreDraw'/><method name='onRestoreInstanceState'><parameter type='android.os.Parcelable' name='state'/></method><method return='android.os.Parcelable' name='onSaveInstanceState'/><method visibility='protected' name='onTextChanged'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='start'/><parameter type='int' name='before'/><parameter type='int' name='after'/></method><method name='removeTextChangedListener'><parameter type='android.text.TextWatcher' name='watcher'/></method><method name='setAutoLinkMask' final='true'><parameter type='int' name='mask'/></method><method name='setCompoundDrawablePadding'><parameter type='int' name='pad'/></method><method name='setCompoundDrawables'><parameter type='android.graphics.drawable.Drawable' name='left'/><parameter type='android.graphics.drawable.Drawable' name='top'/><parameter type='android.graphics.drawable.Drawable' name='right'/><parameter type='android.graphics.drawable.Drawable' name='bottom'/></method><method name='setCompoundDrawablesWithIntrinsicBounds'><parameter type='android.graphics.drawable.Drawable' name='left'/><parameter type='android.graphics.drawable.Drawable' name='top'/><parameter type='android.graphics.drawable.Drawable' name='right'/><parameter type='android.graphics.drawable.Drawable' name='bottom'/></method><method name='setCursorVisible'><parameter type='boolean' name='visible'/></method><method name='setEditableFactory' final='true'><parameter type='android.text.Editable.Factory' name='factory'/></method><method name='setEllipsize'><parameter type='android.text.TextUtils.TruncateAt' name='where'/></method><method name='setEms'><parameter type='int' name='ems'/></method><method name='setError'><parameter type='java.lang.CharSequence' name='error'/></method><method name='setError'><parameter type='java.lang.CharSequence' name='error'/><parameter type='android.graphics.drawable.Drawable' name='icon'/></method><method name='setFilters'><parameter type='android.text.InputFilter[]' name='filters'/></method><method visibility='protected' return='boolean' name='setFrame'><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='setFreezesText'><parameter type='boolean' name='freezesText'/></method><method name='setGravity'><parameter type='int' name='gravity'/></method><method name='setHeight'><parameter type='int' name='pixels'/></method><method name='setHighlightColor'><parameter type='int' name='color'/></method><method name='setHint' final='true'><parameter type='java.lang.CharSequence' name='hint'/></method><method name='setHint' final='true'><parameter type='int' name='resid'/></method><method name='setHintTextColor' final='true'><parameter type='int' name='color'/></method><method name='setHintTextColor' final='true'><parameter type='android.content.res.ColorStateList' name='colors'/></method><method name='setHorizontallyScrolling'><parameter type='boolean' name='whether'/></method><method name='setIncludeFontPadding'><parameter type='boolean' name='includepad'/></method><method name='setKeyListener'><parameter type='android.text.method.KeyListener' name='input'/></method><method name='setLineSpacing'><parameter type='float' name='add'/><parameter type='float' name='mult'/></method><method name='setLines'><parameter type='int' name='lines'/></method><method name='setLinkTextColor' final='true'><parameter type='int' name='color'/></method><method name='setLinkTextColor' final='true'><parameter type='android.content.res.ColorStateList' name='colors'/></method><method name='setLinksClickable' final='true'><parameter type='boolean' name='whether'/></method><method name='setMaxEms'><parameter type='int' name='maxems'/></method><method name='setMaxHeight'><parameter type='int' name='maxHeight'/></method><method name='setMaxLines'><parameter type='int' name='maxlines'/></method><method name='setMaxWidth'><parameter type='int' name='maxpixels'/></method><method name='setMinEms'><parameter type='int' name='minems'/></method><method name='setMinHeight'><parameter type='int' name='minHeight'/></method><method name='setMinLines'><parameter type='int' name='minlines'/></method><method name='setMinWidth'><parameter type='int' name='minpixels'/></method><method name='setMovementMethod' final='true'><parameter type='android.text.method.MovementMethod' name='movement'/></method><method name='setPaintFlags'><parameter type='int' name='flags'/></method><method name='setScroller'><parameter type='android.widget.Scroller' name='s'/></method><method name='setSelectAllOnFocus'><parameter type='boolean' name='selectAllOnFocus'/></method><method name='setShadowLayer'><parameter type='float' name='radius'/><parameter type='float' name='dx'/><parameter type='float' name='dy'/><parameter type='int' name='color'/></method><method name='setSingleLine'/><method name='setSingleLine'><parameter type='boolean' name='singleLine'/></method><method name='setSpannableFactory' final='true'><parameter type='android.text.Spannable.Factory' name='factory'/></method><method name='setText' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method name='setText'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.widget.TextView.BufferType' name='type'/></method><method name='setText' final='true'><parameter type='char[]' name='text'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method><method name='setText' final='true'><parameter type='int' name='resid'/></method><method name='setText' final='true'><parameter type='int' name='resid'/><parameter type='android.widget.TextView.BufferType' name='type'/></method><method name='setTextAppearance'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resid'/></method><method name='setTextColor'><parameter type='int' name='color'/></method><method name='setTextColor'><parameter type='android.content.res.ColorStateList' name='colors'/></method><method name='setTextKeepState' final='true'><parameter type='java.lang.CharSequence' name='text'/></method><method name='setTextKeepState' final='true'><parameter type='java.lang.CharSequence' name='text'/><parameter type='android.widget.TextView.BufferType' name='type'/></method><method name='setTextScaleX'><parameter type='float' name='size'/></method><method name='setTextSize'><parameter type='float' name='size'/></method><method name='setTextSize'><parameter type='int' name='unit'/><parameter type='float' name='size'/></method><method name='setTransformationMethod' final='true'><parameter type='android.text.method.TransformationMethod' name='method'/></method><method name='setTypeface'><parameter type='android.graphics.Typeface' name='tf'/><parameter type='int' name='style'/></method><method name='setTypeface'><parameter type='android.graphics.Typeface' name='tf'/></method><method name='setWidth'><parameter type='int' name='pixels'/></method><method name='setMarqueeRepeatLimit' api_added='2'><parameter type='int' name='marqueeLimit'/></method><method name='beginBatchEdit' api_added='3'/><method return='boolean' name='bringPointIntoView' api_added='3'><parameter type='int' name='offset'/></method><method name='clearComposingText' api_added='3'/><method return='boolean' name='didTouchFocusSelect' api_added='3'/><method name='endBatchEdit' api_added='3'/><method return='boolean' name='extractText' api_added='3'><parameter type='android.view.inputmethod.ExtractedTextRequest' name='request'/><parameter type='android.view.inputmethod.ExtractedText' name='outText'/></method><method return='android.text.Editable' name='getEditableText' api_added='3'/><method return='int' name='getImeActionId' api_added='3'/><method return='java.lang.CharSequence' name='getImeActionLabel' api_added='3'/><method return='int' name='getImeOptions' api_added='3'/><method return='android.os.Bundle' name='getInputExtras' api_added='3'><parameter type='boolean' name='create'/></method><method return='int' name='getInputType' api_added='3'/><method return='java.lang.String' name='getPrivateImeOptions' api_added='3'/><method return='boolean' name='isInputMethodTarget' api_added='3'/><method return='boolean' name='moveCursorToVisibleOffset' api_added='3'/><method name='onBeginBatchEdit' api_added='3'/><method name='onCommitCompletion' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo' name='text'/></method><method name='onEditorAction' api_added='3'><parameter type='int' name='actionCode'/></method><method name='onEndBatchEdit' api_added='3'/><method return='boolean' name='onPrivateIMECommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method visibility='protected' name='onSelectionChanged' api_added='3'><parameter type='int' name='selStart'/><parameter type='int' name='selEnd'/></method><method return='boolean' name='onTextContextMenuItem' api_added='3'><parameter type='int' name='id'/></method><method name='setCompoundDrawablesWithIntrinsicBounds' api_added='3'><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='setExtractedText' api_added='3'><parameter type='android.view.inputmethod.ExtractedText' name='text'/></method><method name='setImeActionLabel' api_added='3'><parameter type='java.lang.CharSequence' name='label'/><parameter type='int' name='actionId'/></method><method name='setImeOptions' api_added='3'><parameter type='int' name='imeOptions'/></method><method name='setInputExtras' api_added='3'><parameter type='int' name='xmlResId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method name='setInputType' api_added='3'><parameter type='int' name='type'/></method><method name='setOnEditorActionListener' api_added='3'><parameter type='android.widget.TextView.OnEditorActionListener' name='l'/></method><method name='setPrivateImeOptions' api_added='3'><parameter type='java.lang.String' name='type'/></method><method name='setRawInputType' api_added='3'><parameter type='int' name='type'/></method><method return='android.view.ActionMode.Callback' name='getCustomSelectionActionModeCallback' api_added='11'/><method return='boolean' name='isTextSelectable' api_added='11'/><method name='onCommitCorrection' api_added='11'><parameter type='android.view.inputmethod.CorrectionInfo' name='info'/></method><method name='setCustomSelectionActionModeCallback' api_added='11'><parameter type='android.view.ActionMode.Callback' name='actionModeCallback'/></method><method name='setTextIsSelectable' api_added='11'><parameter type='boolean' name='selectable'/></method><method return='int' name='getOffsetForPosition' api_added='14'><parameter type='float' name='arg0'/><parameter type='float' name='arg1'/></method><method return='boolean' name='isSuggestionsEnabled' api_added='14'/><method visibility='protected' name='resetResolvedDrawables' api_added='14'/><method visibility='protected' api_removed='16' name='resetResolvedLayoutDirection' api_added='14'/><method visibility='protected' name='resolveDrawables' api_added='14'/><method visibility='protected' api_removed='16' name='resolveTextDirection' api_added='14'/><method name='setAllCaps' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='int' name='getHighlightColor' api_added='16'/><method return='boolean' name='getIncludeFontPadding' api_added='16'/><method return='float' name='getLineSpacingExtra' api_added='16'/><method return='float' name='getLineSpacingMultiplier' api_added='16'/><method return='int' name='getMarqueeRepeatLimit' api_added='16'/><method return='int' name='getMaxEms' api_added='16'/><method return='int' name='getMaxHeight' api_added='16'/><method return='int' name='getMaxLines' api_added='16'/><method return='int' name='getMaxWidth' api_added='16'/><method return='int' name='getMinEms' api_added='16'/><method return='int' name='getMinHeight' api_added='16'/><method return='int' name='getMinLines' api_added='16'/><method return='int' name='getMinWidth' api_added='16'/><method return='int' name='getShadowColor' api_added='16'/><method return='float' name='getShadowDx' api_added='16'/><method return='float' name='getShadowDy' api_added='16'/><method return='float' name='getShadowRadius' api_added='16'/><method return='boolean' name='isCursorVisible' api_added='16'/><method name='setPaddingRelative' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method></class><class extends='java.lang.Enum' static='true' name='TextView.BufferType' final='true'><method return='android.widget.TextView.BufferType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='android.widget.TextView.BufferType[]' static='true' name='values' final='true'/></class><class extends='android.view.View.BaseSavedState' static='true' name='TextView.SavedState'/><class extends='android.widget.FrameLayout' name='TimePicker'><constructor type='android.widget.TimePicker' name='TimePicker'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TimePicker' name='TimePicker'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TimePicker' name='TimePicker'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='java.lang.Integer' name='getCurrentHour'/><method return='java.lang.Integer' name='getCurrentMinute'/><method return='boolean' name='is24HourView'/><method name='setCurrentHour'><parameter type='java.lang.Integer' name='currentHour'/></method><method name='setCurrentMinute'><parameter type='java.lang.Integer' name='currentMinute'/></method><method name='setIs24HourView'><parameter type='java.lang.Boolean' name='is24HourView'/></method><method name='setOnTimeChangedListener'><parameter type='android.widget.TimePicker.OnTimeChangedListener' name='onTimeChangedListener'/></method></class><class extends='java.lang.Object' name='Toast'><constructor type='android.widget.Toast' name='Toast'><parameter type='android.content.Context' name='context'/></constructor><method name='cancel'/><method return='int' name='getDuration'/><method return='int' name='getGravity'/><method return='float' name='getHorizontalMargin'/><method return='float' name='getVerticalMargin'/><method return='android.view.View' name='getView'/><method return='int' name='getXOffset'/><method return='int' name='getYOffset'/><method return='android.widget.Toast' static='true' name='makeText'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='duration'/></method><method return='android.widget.Toast' static='true' name='makeText'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resId'/><parameter type='int' name='duration'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method name='setDuration'><parameter type='int' name='duration'/></method><method name='setGravity'><parameter type='int' name='gravity'/><parameter type='int' name='xOffset'/><parameter type='int' name='yOffset'/></method><method name='setMargin'><parameter type='float' name='horizontalMargin'/><parameter type='float' name='verticalMargin'/></method><method name='setText'><parameter type='int' name='resId'/></method><method name='setText'><parameter type='java.lang.CharSequence' name='s'/></method><method name='setView'><parameter type='android.view.View' name='view'/></method><method name='show'/></class><class extends='android.widget.CompoundButton' name='ToggleButton'><constructor type='android.widget.ToggleButton' name='ToggleButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><constructor type='android.widget.ToggleButton' name='ToggleButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ToggleButton' name='ToggleButton'><parameter type='android.content.Context' name='context'/></constructor><method return='java.lang.CharSequence' name='getTextOff'/><method return='java.lang.CharSequence' name='getTextOn'/><method name='setTextOff'><parameter type='java.lang.CharSequence' name='textOff'/></method><method name='setTextOn'><parameter type='java.lang.CharSequence' name='textOn'/></method></class><class extends='android.widget.RelativeLayout' name='TwoLineListItem'><constructor type='android.widget.TwoLineListItem' name='TwoLineListItem'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.TwoLineListItem' name='TwoLineListItem'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.TwoLineListItem' name='TwoLineListItem'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='android.widget.TextView' name='getText1'/><method return='android.widget.TextView' name='getText2'/></class><class extends='android.view.SurfaceView' name='VideoView'><constructor type='android.widget.VideoView' name='VideoView'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.VideoView' name='VideoView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.VideoView' name='VideoView'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='int' name='getBufferPercentage'/><method return='int' name='getCurrentPosition'/><method return='int' name='getDuration'/><method return='boolean' name='isPlaying'/><method name='pause'/><method return='int' name='resolveAdjustedSize'><parameter type='int' name='desiredSize'/><parameter type='int' name='measureSpec'/></method><method name='seekTo'><parameter type='int' name='msec'/></method><method name='setMediaController'><parameter type='android.widget.MediaController' name='controller'/></method><method name='setOnCompletionListener'><parameter type='android.media.MediaPlayer.OnCompletionListener' name='l'/></method><method name='setOnErrorListener'><parameter type='android.media.MediaPlayer.OnErrorListener' name='l'/></method><method name='setOnPreparedListener'><parameter type='android.media.MediaPlayer.OnPreparedListener' name='l'/></method><method name='setVideoPath'><parameter type='java.lang.String' name='path'/></method><method name='setVideoURI'><parameter type='android.net.Uri' name='uri'/></method><method name='start'/><method name='stopPlayback'/><method return='boolean' name='canPause' api_added='5'/><method return='boolean' name='canSeekBackward' api_added='5'/><method return='boolean' name='canSeekForward' api_added='5'/><method name='resume' api_added='8'/><method name='suspend' api_added='8'/></class><class extends='android.widget.FrameLayout' name='ViewAnimator'><constructor type='android.widget.ViewAnimator' name='ViewAnimator'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ViewAnimator' name='ViewAnimator'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='android.view.View' name='getCurrentView'/><method return='int' name='getDisplayedChild'/><method return='android.view.animation.Animation' name='getInAnimation'/><method return='android.view.animation.Animation' name='getOutAnimation'/><method name='setAnimateFirstView'><parameter type='boolean' name='animate'/></method><method name='setDisplayedChild'><parameter type='int' name='whichChild'/></method><method name='setInAnimation'><parameter type='android.view.animation.Animation' name='inAnimation'/></method><method name='setInAnimation'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='setOutAnimation'><parameter type='android.view.animation.Animation' name='outAnimation'/></method><method name='setOutAnimation'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='showNext'/><method name='showPrevious'/></class><class extends='android.widget.ViewAnimator' name='ViewFlipper'><constructor type='android.widget.ViewFlipper' name='ViewFlipper'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ViewFlipper' name='ViewFlipper'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='boolean' name='isFlipping'/><method name='setFlipInterval'><parameter type='int' name='milliseconds'/></method><method name='startFlipping'/><method name='stopFlipping'/><method return='boolean' name='isAutoStart' api_added='7'/><method name='setAutoStart' api_added='7'><parameter type='boolean' name='autoStart'/></method></class><class extends='android.widget.ViewAnimator' name='ViewSwitcher'><constructor type='android.widget.ViewSwitcher' name='ViewSwitcher'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ViewSwitcher' name='ViewSwitcher'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='android.view.View' name='getNextView'/><method name='reset'/><method name='setFactory'><parameter type='android.widget.ViewSwitcher.ViewFactory' name='factory'/></method></class><class extends='android.widget.ImageButton' name='ZoomButton'><constructor type='android.widget.ZoomButton' name='ZoomButton'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ZoomButton' name='ZoomButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ZoomButton' name='ZoomButton'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='onLongClick'><parameter type='android.view.View' name='v'/></method><method name='setZoomSpeed'><parameter type='long' name='speed'/></method></class><class extends='android.widget.LinearLayout' name='ZoomControls'><constructor type='android.widget.ZoomControls' name='ZoomControls'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ZoomControls' name='ZoomControls'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='hide'/><method name='setIsZoomInEnabled'><parameter type='boolean' name='isEnabled'/></method><method name='setIsZoomOutEnabled'><parameter type='boolean' name='isEnabled'/></method><method name='setOnZoomInClickListener'><parameter type='android.view.View.OnClickListener' name='listener'/></method><method name='setOnZoomOutClickListener'><parameter type='android.view.View.OnClickListener' name='listener'/></method><method name='setZoomSpeed'><parameter type='long' name='speed'/></method><method name='show'/></class><class extends='android.database.DataSetObserver' name='AlphabetIndexer' api_added='3'><constructor type='android.widget.AlphabetIndexer' name='AlphabetIndexer' api_added='3'><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='sortedColumnIndex'/><parameter type='java.lang.CharSequence' name='alphabet'/></constructor><method visibility='protected' return='int' name='compare' api_added='3'><parameter type='java.lang.String' name='word'/><parameter type='java.lang.String' name='letter'/></method><method return='int' name='getPositionForSection' api_added='3'><parameter type='int' name='sectionIndex'/></method><method return='int' name='getSectionForPosition' api_added='3'><parameter type='int' name='position'/></method><method return='java.lang.Object[]' name='getSections' api_added='3'/><method name='setCursor' api_added='3'><parameter type='android.database.Cursor' name='cursor'/></method></class><class extends='android.widget.FrameLayout' name='HorizontalScrollView' api_added='3'><constructor type='android.widget.HorizontalScrollView' name='HorizontalScrollView' api_added='3'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.HorizontalScrollView' name='HorizontalScrollView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.HorizontalScrollView' name='HorizontalScrollView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='boolean' name='arrowScroll' api_added='3'><parameter type='int' name='direction'/></method><method visibility='protected' return='int' name='computeScrollDeltaToGetChildRectOnScreen' api_added='3'><parameter type='android.graphics.Rect' name='rect'/></method><method return='boolean' name='executeKeyEvent' api_added='3'><parameter type='android.view.KeyEvent' name='event'/></method><method name='fling' api_added='3'><parameter type='int' name='velocityX'/></method><method return='boolean' name='fullScroll' api_added='3'><parameter type='int' name='direction'/></method><method return='int' name='getMaxScrollAmount' api_added='3'/><method return='boolean' name='isFillViewport' api_added='3'/><method return='boolean' name='isSmoothScrollingEnabled' api_added='3'/><method return='boolean' name='pageScroll' api_added='3'><parameter type='int' name='direction'/></method><method name='setFillViewport' api_added='3'><parameter type='boolean' name='fillViewport'/></method><method name='setSmoothScrollingEnabled' api_added='3'><parameter type='boolean' name='smoothScrollingEnabled'/></method><method name='smoothScrollBy' api_added='3' final='true'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='smoothScrollTo' api_added='3' final='true'><parameter type='int' name='x'/><parameter type='int' name='y'/></method></class><class extends='android.view.ViewGroup' name='SlidingDrawer' api_added='3'><constructor type='android.widget.SlidingDrawer' name='SlidingDrawer' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.SlidingDrawer' name='SlidingDrawer' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='animateClose' api_added='3'/><method name='animateOpen' api_added='3'/><method name='animateToggle' api_added='3'/><method name='close' api_added='3'/><method return='android.view.View' name='getContent' api_added='3'/><method return='android.view.View' name='getHandle' api_added='3'/><method return='boolean' name='isMoving' api_added='3'/><method return='boolean' name='isOpened' api_added='3'/><method name='lock' api_added='3'/><method visibility='protected' name='onLayout' api_added='3'><parameter type='boolean' name='changed'/><parameter type='int' name='l'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='b'/></method><method name='open' api_added='3'/><method name='setOnDrawerCloseListener' api_added='3'><parameter type='android.widget.SlidingDrawer.OnDrawerCloseListener' name='onDrawerCloseListener'/></method><method name='setOnDrawerOpenListener' api_added='3'><parameter type='android.widget.SlidingDrawer.OnDrawerOpenListener' name='onDrawerOpenListener'/></method><method name='setOnDrawerScrollListener' api_added='3'><parameter type='android.widget.SlidingDrawer.OnDrawerScrollListener' name='onDrawerScrollListener'/></method><method name='toggle' api_added='3'/><method name='unlock' api_added='3'/></class><class extends='java.lang.Object' name='ZoomButtonsController' api_added='4'><constructor type='android.widget.ZoomButtonsController' name='ZoomButtonsController' api_added='4'><parameter type='android.view.View' name='ownerView'/></constructor><method return='android.view.ViewGroup' name='getContainer' api_added='4'/><method return='android.view.View' name='getZoomControls' api_added='4'/><method return='boolean' name='isAutoDismissed' api_added='4'/><method return='boolean' name='isVisible' api_added='4'/><method return='boolean' name='onTouch' api_added='4'><parameter type='android.view.View' name='v'/><parameter type='android.view.MotionEvent' name='event'/></method><method name='setAutoDismissed' api_added='4'><parameter type='boolean' name='autoDismiss'/></method><method name='setFocusable' api_added='4'><parameter type='boolean' name='focusable'/></method><method name='setOnZoomListener' api_added='4'><parameter type='android.widget.ZoomButtonsController.OnZoomListener' name='listener'/></method><method name='setVisible' api_added='4'><parameter type='boolean' name='visible'/></method><method name='setZoomInEnabled' api_added='4'><parameter type='boolean' name='enabled'/></method><method name='setZoomOutEnabled' api_added='4'><parameter type='boolean' name='enabled'/></method><method name='setZoomSpeed' api_added='4'><parameter type='long' name='speed'/></method></class><class extends='android.widget.ImageView' name='QuickContactBadge' api_added='5'><constructor type='android.widget.QuickContactBadge' name='QuickContactBadge' api_added='5'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.QuickContactBadge' name='QuickContactBadge' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.QuickContactBadge' name='QuickContactBadge' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='assignContactFromEmail' api_added='5'><parameter type='java.lang.String' name='emailAddress'/><parameter type='boolean' name='lazyLookup'/></method><method name='assignContactFromPhone' api_added='5'><parameter type='java.lang.String' name='phoneNumber'/><parameter type='boolean' name='lazyLookup'/></method><method name='assignContactUri' api_added='5'><parameter type='android.net.Uri' name='contactUri'/></method><method name='onClick' api_added='5'><parameter type='android.view.View' name='v'/></method><method name='setExcludeMimes' api_added='5'><parameter type='java.lang.String[]' name='excludeMimes'/></method><method name='setMode' api_added='5'><parameter type='int' name='size'/></method><method name='setImageToDefault' api_added='11'/></class><class extends='java.lang.Object' name='OverScroller' api_added='9'><constructor type='android.widget.OverScroller' name='OverScroller' api_added='9'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.OverScroller' name='OverScroller' api_added='9'><parameter type='android.content.Context' name='context'/><parameter type='android.view.animation.Interpolator' name='interpolator'/></constructor><constructor type='android.widget.OverScroller' name='OverScroller' api_added='9'><parameter type='android.content.Context' name='context'/><parameter type='android.view.animation.Interpolator' name='interpolator'/><parameter type='float' name='bounceCoefficientX'/><parameter type='float' name='bounceCoefficientY'/></constructor><method name='abortAnimation' api_added='9'/><method return='boolean' name='computeScrollOffset' api_added='9'/><method name='fling' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='velocityX'/><parameter type='int' name='velocityY'/><parameter type='int' name='minX'/><parameter type='int' name='maxX'/><parameter type='int' name='minY'/><parameter type='int' name='maxY'/></method><method name='fling' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='velocityX'/><parameter type='int' name='velocityY'/><parameter type='int' name='minX'/><parameter type='int' name='maxX'/><parameter type='int' name='minY'/><parameter type='int' name='maxY'/><parameter type='int' name='overX'/><parameter type='int' name='overY'/></method><method name='forceFinished' api_added='9' final='true'><parameter type='boolean' name='finished'/></method><method return='int' name='getCurrX' api_added='9' final='true'/><method return='int' name='getCurrY' api_added='9' final='true'/><method return='int' name='getFinalX' api_added='9' final='true'/><method return='int' name='getFinalY' api_added='9' final='true'/><method return='int' name='getStartX' api_added='9' final='true'/><method return='int' name='getStartY' api_added='9' final='true'/><method return='boolean' name='isFinished' api_added='9' final='true'/><method return='boolean' name='isOverScrolled' api_added='9'/><method name='notifyHorizontalEdgeReached' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='finalX'/><parameter type='int' name='overX'/></method><method name='notifyVerticalEdgeReached' api_added='9'><parameter type='int' name='startY'/><parameter type='int' name='finalY'/><parameter type='int' name='overY'/></method><method return='boolean' name='springBack' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='minX'/><parameter type='int' name='maxX'/><parameter type='int' name='minY'/><parameter type='int' name='maxY'/></method><method name='startScroll' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='startScroll' api_added='9'><parameter type='int' name='startX'/><parameter type='int' name='startY'/><parameter type='int' name='dx'/><parameter type='int' name='dy'/><parameter type='int' name='duration'/></method><method name='setFriction' api_added='11' final='true'><parameter type='float' name='friction'/></method><method return='float' name='getCurrVelocity' api_added='14'/></class><class extends='android.widget.AdapterView' abstract='true' name='AdapterViewAnimator' api_added='11'><constructor type='android.widget.AdapterViewAnimator' name='AdapterViewAnimator' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AdapterViewAnimator' name='AdapterViewAnimator' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method name='advance' api_added='11'/><method name='fyiWillBeAdvancedByHostKThx' api_added='11'/><method return='android.widget.Adapter' name='getAdapter' api_added='11'/><method return='android.view.View' name='getCurrentView' api_added='11'/><method return='int' name='getDisplayedChild' api_added='11'/><method return='android.animation.ObjectAnimator' name='getInAnimation' api_added='11'/><method return='android.animation.ObjectAnimator' name='getOutAnimation' api_added='11'/><method return='android.view.View' name='getSelectedView' api_added='11'/><method return='boolean' name='onRemoteAdapterConnected' api_added='11'/><method name='onRemoteAdapterDisconnected' api_added='11'/><method name='onRestoreInstanceState' api_added='11'><parameter type='android.os.Parcelable' name='state'/></method><method return='android.os.Parcelable' name='onSaveInstanceState' api_added='11'/><method name='setAdapter' api_added='11'><parameter type='android.widget.Adapter' name='adapter'/></method><method name='setAnimateFirstView' api_added='11'><parameter type='boolean' name='animate'/></method><method name='setDisplayedChild' api_added='11'><parameter type='int' name='whichChild'/></method><method name='setInAnimation' api_added='11'><parameter type='android.animation.ObjectAnimator' name='inAnimation'/></method><method name='setInAnimation' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='setOutAnimation' api_added='11'><parameter type='android.animation.ObjectAnimator' name='outAnimation'/></method><method name='setOutAnimation' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceID'/></method><method name='setRemoteViewsAdapter' api_added='11'><parameter type='android.content.Intent' name='intent'/></method><method name='setSelection' api_added='11'><parameter type='int' name='position'/></method><method name='showNext' api_added='11'/><method name='showPrevious' api_added='11'/><method name='deferNotifyDataSetChanged' api_added='14'/></class><class extends='android.widget.AdapterViewAnimator' name='AdapterViewFlipper' api_added='11'><constructor type='android.widget.AdapterViewFlipper' name='AdapterViewFlipper' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.AdapterViewFlipper' name='AdapterViewFlipper' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='boolean' name='isAutoStart' api_added='11'/><method return='boolean' name='isFlipping' api_added='11'/><method name='setAutoStart' api_added='11'><parameter type='boolean' name='autoStart'/></method><method name='setFlipInterval' api_added='11'><parameter type='int' name='milliseconds'/></method><method name='startFlipping' api_added='11'/><method name='stopFlipping' api_added='11'/><method return='int' name='getFlipInterval' api_added='16'/></class><class extends='android.widget.FrameLayout' name='CalendarView' api_added='11'><constructor type='android.widget.CalendarView' name='CalendarView' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.CalendarView' name='CalendarView' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.CalendarView' name='CalendarView' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='long' name='getDate' api_added='11'/><method return='int' name='getFirstDayOfWeek' api_added='11'/><method return='long' name='getMaxDate' api_added='11'/><method return='long' name='getMinDate' api_added='11'/><method return='boolean' name='getShowWeekNumber' api_added='11'/><method name='setDate' api_added='11'><parameter type='long' name='date'/></method><method name='setDate' api_added='11'><parameter type='long' name='date'/><parameter type='boolean' name='animate'/><parameter type='boolean' name='center'/></method><method name='setFirstDayOfWeek' api_added='11'><parameter type='int' name='firstDayOfWeek'/></method><method name='setMaxDate' api_added='11'><parameter type='long' name='maxDate'/></method><method name='setMinDate' api_added='11'><parameter type='long' name='minDate'/></method><method name='setOnDateChangeListener' api_added='11'><parameter type='android.widget.CalendarView.OnDateChangeListener' name='listener'/></method><method name='setShowWeekNumber' api_added='11'><parameter type='boolean' name='showWeekNumber'/></method><method return='int' name='getDateTextAppearance' api_added='16'/><method return='int' name='getFocusedMonthDateColor' api_added='16'/><method return='android.graphics.drawable.Drawable' name='getSelectedDateVerticalBar' api_added='16'/><method return='int' name='getSelectedWeekBackgroundColor' api_added='16'/><method return='int' name='getShownWeekCount' api_added='16'/><method return='int' name='getUnfocusedMonthDateColor' api_added='16'/><method return='int' name='getWeekDayTextAppearance' api_added='16'/><method return='int' name='getWeekNumberColor' api_added='16'/><method return='int' name='getWeekSeparatorLineColor' api_added='16'/><method name='setDateTextAppearance' api_added='16'><parameter type='int' name='arg0'/></method><method name='setFocusedMonthDateColor' api_added='16'><parameter type='int' name='arg0'/></method><method name='setSelectedDateVerticalBar' api_added='16'><parameter type='int' name='arg0'/></method><method name='setSelectedDateVerticalBar' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setSelectedWeekBackgroundColor' api_added='16'><parameter type='int' name='arg0'/></method><method name='setShownWeekCount' api_added='16'><parameter type='int' name='arg0'/></method><method name='setUnfocusedMonthDateColor' api_added='16'><parameter type='int' name='arg0'/></method><method name='setWeekDayTextAppearance' api_added='16'><parameter type='int' name='arg0'/></method><method name='setWeekNumberColor' api_added='16'><parameter type='int' name='arg0'/></method><method name='setWeekSeparatorLineColor' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='ListPopupWindow' api_added='11'><constructor type='android.widget.ListPopupWindow' name='ListPopupWindow' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.ListPopupWindow' name='ListPopupWindow' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.ListPopupWindow' name='ListPopupWindow' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyleAttr'/></constructor><constructor type='android.widget.ListPopupWindow' name='ListPopupWindow' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyleAttr'/><parameter type='int' name='defStyleRes'/></constructor><method name='clearListSelection' api_added='11'/><method name='dismiss' api_added='11'/><method return='android.view.View' name='getAnchorView' api_added='11'/><method return='int' name='getAnimationStyle' api_added='11'/><method return='android.graphics.drawable.Drawable' name='getBackground' api_added='11'/><method return='int' name='getHeight' api_added='11'/><method return='int' name='getHorizontalOffset' api_added='11'/><method return='int' name='getInputMethodMode' api_added='11'/><method return='android.widget.ListView' name='getListView' api_added='11'/><method return='int' name='getPromptPosition' api_added='11'/><method return='java.lang.Object' name='getSelectedItem' api_added='11'/><method return='long' name='getSelectedItemId' api_added='11'/><method return='int' name='getSelectedItemPosition' api_added='11'/><method return='android.view.View' name='getSelectedView' api_added='11'/><method return='int' name='getSoftInputMode' api_added='11'/><method return='int' name='getVerticalOffset' api_added='11'/><method return='int' name='getWidth' api_added='11'/><method return='boolean' name='isInputMethodNotNeeded' api_added='11'/><method return='boolean' name='isModal' api_added='11'/><method return='boolean' name='isShowing' api_added='11'/><method return='boolean' name='onKeyDown' api_added='11'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyPreIme' api_added='11'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp' api_added='11'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='performItemClick' api_added='11'><parameter type='int' name='position'/></method><method name='postShow' api_added='11'/><method name='setAdapter' api_added='11'><parameter type='android.widget.ListAdapter' name='adapter'/></method><method name='setAnchorView' api_added='11'><parameter type='android.view.View' name='anchor'/></method><method name='setAnimationStyle' api_added='11'><parameter type='int' name='animationStyle'/></method><method name='setBackgroundDrawable' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='d'/></method><method name='setContentWidth' api_added='11'><parameter type='int' name='width'/></method><method name='setHeight' api_added='11'><parameter type='int' name='height'/></method><method name='setHorizontalOffset' api_added='11'><parameter type='int' name='offset'/></method><method name='setInputMethodMode' api_added='11'><parameter type='int' name='mode'/></method><method name='setListSelector' api_added='11'><parameter type='android.graphics.drawable.Drawable' name='selector'/></method><method name='setModal' api_added='11'><parameter type='boolean' name='modal'/></method><method name='setOnDismissListener' api_added='11'><parameter type='android.widget.PopupWindow.OnDismissListener' name='listener'/></method><method name='setOnItemClickListener' api_added='11'><parameter type='android.widget.AdapterView.OnItemClickListener' name='clickListener'/></method><method name='setOnItemSelectedListener' api_added='11'><parameter type='android.widget.AdapterView.OnItemSelectedListener' name='selectedListener'/></method><method name='setPromptPosition' api_added='11'><parameter type='int' name='position'/></method><method name='setPromptView' api_added='11'><parameter type='android.view.View' name='prompt'/></method><method name='setSelection' api_added='11'><parameter type='int' name='position'/></method><method name='setSoftInputMode' api_added='11'><parameter type='int' name='mode'/></method><method name='setVerticalOffset' api_added='11'><parameter type='int' name='offset'/></method><method name='setWidth' api_added='11'><parameter type='int' name='width'/></method><method name='show' api_added='11'/></class><class extends='android.widget.LinearLayout' name='NumberPicker' api_added='11'><constructor type='android.widget.NumberPicker' name='NumberPicker' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.NumberPicker' name='NumberPicker' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.widget.NumberPicker' name='NumberPicker' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method return='java.lang.String[]' name='getDisplayedValues' api_added='11'/><method return='int' name='getMaxValue' api_added='11'/><method return='int' name='getMinValue' api_added='11'/><method return='int' name='getValue' api_added='11'/><method return='boolean' name='getWrapSelectorWheel' api_added='11'/><method name='setDisplayedValues' api_added='11'><parameter type='java.lang.String[]' name='displayedValues'/></method><method name='setFormatter' api_added='11'><parameter type='android.widget.NumberPicker.Formatter' name='formatter'/></method><method name='setMaxValue' api_added='11'><parameter type='int' name='maxValue'/></method><method name='setMinValue' api_added='11'><parameter type='int' name='minValue'/></method><method name='setOnLongPressUpdateInterval' api_added='11'><parameter type='long' name='intervalMillis'/></method><method name='setOnScrollListener' api_added='11'><parameter type='android.widget.NumberPicker.OnScrollListener' name='onScrollListener'/></method><method name='setOnValueChangedListener' api_added='11'><parameter type='android.widget.NumberPicker.OnValueChangeListener' name='onValueChangedListener'/></method><method name='setValue' api_added='11'><parameter type='int' name='value'/></method><method name='setWrapSelectorWheel' api_added='11'><parameter type='boolean' name='wrapSelector'/></method></class><class extends='java.lang.Object' name='PopupMenu' api_added='11'><constructor type='android.widget.PopupMenu' name='PopupMenu' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.view.View' name='anchor'/></constructor><method name='dismiss' api_added='11'/><method return='android.view.Menu' name='getMenu' api_added='11'/><method return='android.view.MenuInflater' name='getMenuInflater' api_added='11'/><method name='setOnMenuItemClickListener' api_added='11'><parameter type='android.widget.PopupMenu.OnMenuItemClickListener' name='listener'/></method><method name='show' api_added='11'/><method name='inflate' api_added='14'><parameter type='int' name='arg0'/></method><method name='setOnDismissListener' api_added='14'><parameter type='android.widget.PopupMenu.OnDismissListener' name='arg0'/></method></class><class extends='android.app.Service' abstract='true' name='RemoteViewsService' api_added='11'><constructor type='android.widget.RemoteViewsService' name='RemoteViewsService' api_added='11'/><method return='android.os.IBinder' name='onBind' api_added='11'><parameter type='android.content.Intent' name='intent'/></method><method return='android.widget.RemoteViewsService.RemoteViewsFactory' abstract='true' name='onGetViewFactory' api_added='11'><parameter type='android.content.Intent' name='intent'/></method></class><class extends='android.widget.LinearLayout' name='SearchView' api_added='11'><constructor type='android.widget.SearchView' name='SearchView' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.SearchView' name='SearchView' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><method return='java.lang.CharSequence' name='getQuery' api_added='11'/><method return='android.widget.CursorAdapter' name='getSuggestionsAdapter' api_added='11'/><method return='boolean' name='isIconfiedByDefault' api_added='11'/><method return='boolean' name='isIconified' api_added='11'/><method return='boolean' name='isQueryRefinementEnabled' api_added='11'/><method return='boolean' name='isSubmitButtonEnabled' api_added='11'/><method name='setIconified' api_added='11'><parameter type='boolean' name='iconify'/></method><method name='setIconifiedByDefault' api_added='11'><parameter type='boolean' name='iconified'/></method><method name='setMaxWidth' api_added='11'><parameter type='int' name='maxpixels'/></method><method name='setOnCloseListener' api_added='11'><parameter type='android.widget.SearchView.OnCloseListener' name='listener'/></method><method name='setOnQueryTextFocusChangeListener' api_added='11'><parameter type='android.view.View.OnFocusChangeListener' name='listener'/></method><method name='setOnQueryTextListener' api_added='11'><parameter type='android.widget.SearchView.OnQueryTextListener' name='listener'/></method><method name='setOnSearchClickListener' api_added='11'><parameter type='android.view.View.OnClickListener' name='listener'/></method><method name='setOnSuggestionListener' api_added='11'><parameter type='android.widget.SearchView.OnSuggestionListener' name='listener'/></method><method name='setQuery' api_added='11'><parameter type='java.lang.CharSequence' name='query'/><parameter type='boolean' name='submit'/></method><method name='setQueryHint' api_added='11'><parameter type='java.lang.CharSequence' name='hint'/></method><method name='setQueryRefinementEnabled' api_added='11'><parameter type='boolean' name='enable'/></method><method name='setSearchableInfo' api_added='11'><parameter type='android.app.SearchableInfo' name='searchable'/></method><method name='setSubmitButtonEnabled' api_added='11'><parameter type='boolean' name='enabled'/></method><method name='setSuggestionsAdapter' api_added='11'><parameter type='android.widget.CursorAdapter' name='adapter'/></method><method name='onActionViewCollapsed' api_added='14'/><method name='onActionViewExpanded' api_added='14'/><method name='setImeOptions' api_added='14'><parameter type='int' name='arg0'/></method><method name='setInputType' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getImeOptions' api_added='16'/><method return='int' name='getInputType' api_added='16'/><method return='int' name='getMaxWidth' api_added='16'/><method return='java.lang.CharSequence' name='getQueryHint' api_added='16'/></class><class extends='android.widget.AdapterViewAnimator' name='StackView' api_added='11'><constructor type='android.widget.StackView' name='StackView' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.widget.StackView' name='StackView' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor></class><class extends='java.lang.Object' name='EdgeEffect' api_added='14'><constructor type='android.widget.EdgeEffect' name='EdgeEffect' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='boolean' name='draw' api_added='14'><parameter type='android.graphics.Canvas' name='arg0'/></method><method name='finish' api_added='14'/><method return='boolean' name='isFinished' api_added='14'/><method name='onAbsorb' api_added='14'><parameter type='int' name='arg0'/></method><method name='onPull' api_added='14'><parameter type='float' name='arg0'/></method><method name='onRelease' api_added='14'/><method name='setSize' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='android.view.ViewGroup' name='GridLayout' api_added='14'><constructor type='android.widget.GridLayout' name='GridLayout' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.widget.GridLayout' name='GridLayout' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.widget.GridLayout' name='GridLayout' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='int' name='getAlignmentMode' api_added='14'/><method return='int' name='getColumnCount' api_added='14'/><method return='int' name='getOrientation' api_added='14'/><method return='int' name='getRowCount' api_added='14'/><method return='boolean' name='getUseDefaultMargins' api_added='14'/><method return='boolean' name='isColumnOrderPreserved' api_added='14'/><method return='boolean' name='isRowOrderPreserved' api_added='14'/><method visibility='protected' name='onLayout' api_added='14'><parameter type='boolean' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method><method name='setAlignmentMode' api_added='14'><parameter type='int' name='arg0'/></method><method name='setColumnCount' api_added='14'><parameter type='int' name='arg0'/></method><method name='setColumnOrderPreserved' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setOrientation' api_added='14'><parameter type='int' name='arg0'/></method><method name='setRowCount' api_added='14'><parameter type='int' name='arg0'/></method><method name='setRowOrderPreserved' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setUseDefaultMargins' api_added='14'><parameter type='boolean' name='arg0'/></method><method return='android.widget.GridLayout.Spec' static='true' name='spec' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.widget.GridLayout.Alignment' name='arg2'/></method><method return='android.widget.GridLayout.Spec' static='true' name='spec' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.widget.GridLayout.Alignment' name='arg1'/></method><method return='android.widget.GridLayout.Spec' static='true' name='spec' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.widget.GridLayout.Spec' static='true' name='spec' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='GridLayout.Alignment' api_added='14'/><class extends='android.view.ViewGroup.MarginLayoutParams' static='true' name='GridLayout.LayoutParams' api_added='14'><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'><parameter type='android.widget.GridLayout.Spec' name='arg0'/><parameter type='android.widget.GridLayout.Spec' name='arg1'/></constructor><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'/><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'><parameter type='android.view.ViewGroup.LayoutParams' name='arg0'/></constructor><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'><parameter type='android.view.ViewGroup.MarginLayoutParams' name='arg0'/></constructor><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'><parameter type='android.widget.GridLayout.LayoutParams' name='arg0'/></constructor><constructor type='android.widget.GridLayout.LayoutParams' name='GridLayout.LayoutParams' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><method name='setGravity' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='GridLayout.Spec' api_added='14'/><class extends='android.view.ActionProvider' name='ShareActionProvider' api_added='14'><constructor type='android.widget.ShareActionProvider' name='ShareActionProvider' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><method return='android.view.View' name='onCreateActionView' api_added='14'/><method name='setOnShareTargetSelectedListener' api_added='14'><parameter type='android.widget.ShareActionProvider.OnShareTargetSelectedListener' name='arg0'/></method><method name='setShareHistoryFileName' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method name='setShareIntent' api_added='14'><parameter type='android.content.Intent' name='arg0'/></method></class><class extends='android.view.View' name='Space' api_added='14' final='true'><constructor type='android.widget.Space' name='Space' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.widget.Space' name='Space' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.widget.Space' name='Space' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor></class><class extends='android.widget.CompoundButton' name='Switch' api_added='14'><constructor type='android.widget.Switch' name='Switch' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.widget.Switch' name='Switch' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.widget.Switch' name='Switch' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/><parameter type='int' name='arg2'/></constructor><method return='java.lang.CharSequence' name='getTextOff' api_added='14'/><method return='java.lang.CharSequence' name='getTextOn' api_added='14'/><method name='onMeasure' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setSwitchTextAppearance' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setSwitchTypeface' api_added='14'><parameter type='android.graphics.Typeface' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setSwitchTypeface' api_added='14'><parameter type='android.graphics.Typeface' name='arg0'/></method><method name='setTextOff' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setTextOn' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method return='int' name='getSwitchMinWidth' api_added='16'/><method return='int' name='getSwitchPadding' api_added='16'/><method return='android.graphics.drawable.Drawable' name='getThumbDrawable' api_added='16'/><method return='int' name='getThumbTextPadding' api_added='16'/><method return='android.graphics.drawable.Drawable' name='getTrackDrawable' api_added='16'/><method name='setSwitchMinWidth' api_added='16'><parameter type='int' name='arg0'/></method><method name='setSwitchPadding' api_added='16'><parameter type='int' name='arg0'/></method><method name='setThumbDrawable' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setThumbResource' api_added='16'><parameter type='int' name='arg0'/></method><method name='setThumbTextPadding' api_added='16'><parameter type='int' name='arg0'/></method><method name='setTrackDrawable' api_added='16'><parameter type='android.graphics.drawable.Drawable' name='arg0'/></method><method name='setTrackResource' api_added='16'><parameter type='int' name='arg0'/></method></class><interface abstract='true' static='true' name='AbsListView.OnScrollListener'><method abstract='true' name='onScroll'><parameter type='android.widget.AbsListView' name='view'/><parameter type='int' name='firstVisibleItem'/><parameter type='int' name='visibleItemCount'/><parameter type='int' name='totalItemCount'/></method><method abstract='true' name='onScrollStateChanged'><parameter type='android.widget.AbsListView' name='view'/><parameter type='int' name='scrollState'/></method></interface><interface abstract='true' static='true' name='AbsListView.RecyclerListener'><method abstract='true' name='onMovedToScrapHeap'><parameter type='android.view.View' name='view'/></method></interface><interface abstract='true' name='Adapter'><method return='int' abstract='true' name='getCount'/><method return='java.lang.Object' abstract='true' name='getItem'><parameter type='int' name='position'/></method><method return='long' abstract='true' name='getItemId'><parameter type='int' name='position'/></method><method return='int' abstract='true' name='getItemViewType'><parameter type='int' name='position'/></method><method return='android.view.View' abstract='true' name='getView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' abstract='true' name='getViewTypeCount'/><method return='boolean' abstract='true' name='hasStableIds'/><method return='boolean' abstract='true' name='isEmpty'/><method abstract='true' name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method abstract='true' name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method></interface><interface abstract='true' static='true' name='AdapterView.OnItemClickListener'><method abstract='true' name='onItemClick'><parameter type='android.widget.AdapterView&lt;?&gt;' name='parent'/><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method></interface><interface abstract='true' static='true' name='AdapterView.OnItemLongClickListener'><method return='boolean' abstract='true' name='onItemLongClick'><parameter type='android.widget.AdapterView&lt;?&gt;' name='parent'/><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method></interface><interface abstract='true' static='true' name='AdapterView.OnItemSelectedListener'><method abstract='true' name='onItemSelected'><parameter type='android.widget.AdapterView&lt;?&gt;' name='parent'/><parameter type='android.view.View' name='view'/><parameter type='int' name='position'/><parameter type='long' name='id'/></method><method abstract='true' name='onNothingSelected'><parameter type='android.widget.AdapterView&lt;?&gt;' name='parent'/></method></interface><interface abstract='true' static='true' name='AutoCompleteTextView.Validator'><method return='java.lang.CharSequence' abstract='true' name='fixText'><parameter type='java.lang.CharSequence' name='invalidText'/></method><method return='boolean' abstract='true' name='isValid'><parameter type='java.lang.CharSequence' name='text'/></method></interface><interface abstract='true' name='Checkable'><method return='boolean' abstract='true' name='isChecked'/><method abstract='true' name='setChecked'><parameter type='boolean' name='checked'/></method><method abstract='true' name='toggle'/></interface><interface abstract='true' static='true' name='CompoundButton.OnCheckedChangeListener'><method abstract='true' name='onCheckedChanged'><parameter type='android.widget.CompoundButton' name='buttonView'/><parameter type='boolean' name='isChecked'/></method></interface><interface abstract='true' static='true' name='DatePicker.OnDateChangedListener'><method abstract='true' name='onDateChanged'><parameter type='android.widget.DatePicker' name='view'/><parameter type='int' name='year'/><parameter type='int' name='monthOfYear'/><parameter type='int' name='dayOfMonth'/></method></interface><interface abstract='true' name='ExpandableListAdapter'><method return='boolean' abstract='true' name='areAllItemsEnabled'/><method return='java.lang.Object' abstract='true' name='getChild'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='long' abstract='true' name='getChildId'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='android.view.View' abstract='true' name='getChildView'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='boolean' name='isLastChild'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='int' abstract='true' name='getChildrenCount'><parameter type='int' name='groupPosition'/></method><method return='long' abstract='true' name='getCombinedChildId'><parameter type='long' name='groupId'/><parameter type='long' name='childId'/></method><method return='long' abstract='true' name='getCombinedGroupId'><parameter type='long' name='groupId'/></method><method return='java.lang.Object' abstract='true' name='getGroup'><parameter type='int' name='groupPosition'/></method><method return='int' abstract='true' name='getGroupCount'/><method return='long' abstract='true' name='getGroupId'><parameter type='int' name='groupPosition'/></method><method return='android.view.View' abstract='true' name='getGroupView'><parameter type='int' name='groupPosition'/><parameter type='boolean' name='isExpanded'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method><method return='boolean' abstract='true' name='hasStableIds'/><method return='boolean' abstract='true' name='isChildSelectable'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='boolean' abstract='true' name='isEmpty'/><method abstract='true' name='onGroupCollapsed'><parameter type='int' name='groupPosition'/></method><method abstract='true' name='onGroupExpanded'><parameter type='int' name='groupPosition'/></method><method abstract='true' name='registerDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method><method abstract='true' name='unregisterDataSetObserver'><parameter type='android.database.DataSetObserver' name='observer'/></method></interface><interface abstract='true' static='true' name='ExpandableListView.OnChildClickListener'><method return='boolean' abstract='true' name='onChildClick'><parameter type='android.widget.ExpandableListView' name='parent'/><parameter type='android.view.View' name='v'/><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/><parameter type='long' name='id'/></method></interface><interface abstract='true' static='true' name='ExpandableListView.OnGroupClickListener'><method return='boolean' abstract='true' name='onGroupClick'><parameter type='android.widget.ExpandableListView' name='parent'/><parameter type='android.view.View' name='v'/><parameter type='int' name='groupPosition'/><parameter type='long' name='id'/></method></interface><interface abstract='true' static='true' name='ExpandableListView.OnGroupCollapseListener'><method abstract='true' name='onGroupCollapse'><parameter type='int' name='groupPosition'/></method></interface><interface abstract='true' static='true' name='ExpandableListView.OnGroupExpandListener'><method abstract='true' name='onGroupExpand'><parameter type='int' name='groupPosition'/></method></interface><interface abstract='true' static='true' name='Filter.FilterListener'><method abstract='true' name='onFilterComplete'><parameter type='int' name='count'/></method></interface><interface abstract='true' name='FilterQueryProvider'><method return='android.database.Cursor' abstract='true' name='runQuery'><parameter type='java.lang.CharSequence' name='constraint'/></method></interface><interface abstract='true' name='Filterable'><method return='android.widget.Filter' abstract='true' name='getFilter'/></interface><interface abstract='true' name='ListAdapter'><method return='boolean' abstract='true' name='areAllItemsEnabled'/><method return='boolean' abstract='true' name='isEnabled'><parameter type='int' name='position'/></method></interface><interface abstract='true' static='true' name='MediaController.MediaPlayerControl'><method return='int' abstract='true' name='getBufferPercentage'/><method return='int' abstract='true' name='getCurrentPosition'/><method return='int' abstract='true' name='getDuration'/><method return='boolean' abstract='true' name='isPlaying'/><method abstract='true' name='pause'/><method abstract='true' name='seekTo'><parameter type='int' name='pos'/></method><method abstract='true' name='start'/><method return='boolean' abstract='true' name='canPause' api_added='5'/><method return='boolean' abstract='true' name='canSeekBackward' api_added='5'/><method return='boolean' abstract='true' name='canSeekForward' api_added='5'/></interface><interface abstract='true' static='true' name='MultiAutoCompleteTextView.Tokenizer'><method return='int' abstract='true' name='findTokenEnd'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='int' abstract='true' name='findTokenStart'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='cursor'/></method><method return='java.lang.CharSequence' abstract='true' name='terminateToken'><parameter type='java.lang.CharSequence' name='text'/></method></interface><interface visibility='' abstract='true' static='true' name='PopupWindow.OnDismissListener'><method abstract='true' name='onDismiss'/></interface><interface abstract='true' static='true' name='RadioGroup.OnCheckedChangeListener'><method abstract='true' name='onCheckedChanged'><parameter type='android.widget.RadioGroup' name='group'/><parameter type='int' name='checkedId'/></method></interface><interface abstract='true' static='true' name='RatingBar.OnRatingBarChangeListener'><method abstract='true' name='onRatingChanged'><parameter type='android.widget.RatingBar' name='ratingBar'/><parameter type='float' name='rating'/><parameter type='boolean' name='fromTouch'/></method></interface><interface abstract='true' static='true' name='SeekBar.OnSeekBarChangeListener'><method abstract='true' name='onProgressChanged'><parameter type='android.widget.SeekBar' name='seekBar'/><parameter type='int' name='progress'/><parameter type='boolean' name='fromTouch'/></method><method abstract='true' name='onStartTrackingTouch'><parameter type='android.widget.SeekBar' name='seekBar'/></method><method abstract='true' name='onStopTrackingTouch'><parameter type='android.widget.SeekBar' name='seekBar'/></method></interface><interface abstract='true' static='true' name='SimpleAdapter.ViewBinder'><method return='boolean' abstract='true' name='setViewValue'><parameter type='android.view.View' name='view'/><parameter type='java.lang.Object' name='data'/><parameter type='java.lang.String' name='textRepresentation'/></method></interface><interface abstract='true' static='true' name='SimpleCursorAdapter.CursorToStringConverter'><method return='java.lang.CharSequence' abstract='true' name='convertToString'><parameter type='android.database.Cursor' name='cursor'/></method></interface><interface abstract='true' static='true' name='SimpleCursorAdapter.ViewBinder'><method return='boolean' abstract='true' name='setViewValue'><parameter type='android.view.View' name='view'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='columnIndex'/></method></interface><interface abstract='true' name='SpinnerAdapter'><method return='android.view.View' abstract='true' name='getDropDownView'><parameter type='int' name='position'/><parameter type='android.view.View' name='convertView'/><parameter type='android.view.ViewGroup' name='parent'/></method></interface><interface abstract='true' static='true' name='TabHost.OnTabChangeListener'><method abstract='true' name='onTabChanged'><parameter type='java.lang.String' name='tabId'/></method></interface><interface abstract='true' static='true' name='TabHost.TabContentFactory'><method return='android.view.View' abstract='true' name='createTabContent'><parameter type='java.lang.String' name='tag'/></method></interface><interface abstract='true' static='true' name='TimePicker.OnTimeChangedListener'><method abstract='true' name='onTimeChanged'><parameter type='android.widget.TimePicker' name='view'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/></method></interface><interface abstract='true' static='true' name='ViewSwitcher.ViewFactory'><method return='android.view.View' abstract='true' name='makeView'/></interface><interface abstract='true' name='WrapperListAdapter'><method return='android.widget.ListAdapter' abstract='true' name='getWrappedAdapter'/></interface><interface abstract='true' static='true' name='Chronometer.OnChronometerTickListener' api_added='3'><method abstract='true' name='onChronometerTick' api_added='3'><parameter type='android.widget.Chronometer' name='chronometer'/></method></interface><interface abstract='true' name='SectionIndexer' api_added='3'><method return='int' abstract='true' name='getPositionForSection' api_added='3'><parameter type='int' name='section'/></method><method return='int' abstract='true' name='getSectionForPosition' api_added='3'><parameter type='int' name='position'/></method><method return='java.lang.Object[]' abstract='true' name='getSections' api_added='3'/></interface><interface abstract='true' static='true' name='SlidingDrawer.OnDrawerCloseListener' api_added='3'><method abstract='true' name='onDrawerClosed' api_added='3'/></interface><interface abstract='true' static='true' name='SlidingDrawer.OnDrawerOpenListener' api_added='3'><method abstract='true' name='onDrawerOpened' api_added='3'/></interface><interface abstract='true' static='true' name='SlidingDrawer.OnDrawerScrollListener' api_added='3'><method abstract='true' name='onScrollEnded' api_added='3'/><method abstract='true' name='onScrollStarted' api_added='3'/></interface><interface abstract='true' static='true' name='TextView.OnEditorActionListener' api_added='3'><method return='boolean' abstract='true' name='onEditorAction' api_added='3'><parameter type='android.widget.TextView' name='v'/><parameter type='int' name='actionId'/><parameter type='android.view.KeyEvent' name='event'/></method></interface><interface abstract='true' static='true' name='ZoomButtonsController.OnZoomListener' api_added='4'><method abstract='true' name='onVisibilityChanged' api_added='4'><parameter type='boolean' name='visible'/></method><method abstract='true' name='onZoom' api_added='4'><parameter type='boolean' name='zoomIn'/></method></interface><interface abstract='true' static='true' name='SimpleCursorTreeAdapter.ViewBinder' api_added='5'><method return='boolean' abstract='true' name='setViewValue' api_added='5'><parameter type='android.view.View' name='view'/><parameter type='android.database.Cursor' name='cursor'/><parameter type='int' name='columnIndex'/></method></interface><interface abstract='true' name='HeterogeneousExpandableList' api_added='8'><method return='int' abstract='true' name='getChildType' api_added='8'><parameter type='int' name='groupPosition'/><parameter type='int' name='childPosition'/></method><method return='int' abstract='true' name='getChildTypeCount' api_added='8'/><method return='int' abstract='true' name='getGroupType' api_added='8'><parameter type='int' name='groupPosition'/></method><method return='int' abstract='true' name='getGroupTypeCount' api_added='8'/></interface><interface abstract='true' static='true' name='AbsListView.MultiChoiceModeListener' api_added='11'><method abstract='true' name='onItemCheckedStateChanged' api_added='11'><parameter type='android.view.ActionMode' name='mode'/><parameter type='int' name='position'/><parameter type='long' name='id'/><parameter type='boolean' name='checked'/></method></interface><interface abstract='true' static='true' name='AbsListView.SelectionBoundsAdjuster' api_added='11'><method abstract='true' name='adjustListItemSelectionBounds' api_added='11'><parameter type='android.graphics.Rect' name='bounds'/></method></interface><interface abstract='true' static='true' name='CalendarView.OnDateChangeListener' api_added='11'><method abstract='true' name='onSelectedDayChange' api_added='11'><parameter type='android.widget.CalendarView' name='view'/><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='dayOfMonth'/></method></interface><interface abstract='true' static='true' name='NumberPicker.Formatter' api_added='11'><method return='java.lang.String' abstract='true' name='format' api_added='11'><parameter type='int' name='value'/></method></interface><interface abstract='true' static='true' name='NumberPicker.OnScrollListener' api_added='11'><method abstract='true' name='onScrollStateChange' api_added='11'><parameter type='android.widget.NumberPicker' name='view'/><parameter type='int' name='scrollState'/></method></interface><interface abstract='true' static='true' name='NumberPicker.OnValueChangeListener' api_added='11'><method abstract='true' name='onValueChange' api_added='11'><parameter type='android.widget.NumberPicker' name='picker'/><parameter type='int' name='oldVal'/><parameter type='int' name='newVal'/></method></interface><interface abstract='true' static='true' name='PopupMenu.OnMenuItemClickListener' api_added='11'><method return='boolean' abstract='true' name='onMenuItemClick' api_added='11'><parameter type='android.view.MenuItem' name='item'/></method></interface><interface abstract='true' static='true' name='RemoteViewsService.RemoteViewsFactory' api_added='11'><method return='int' abstract='true' name='getCount' api_added='11'/><method return='long' abstract='true' name='getItemId' api_added='11'><parameter type='int' name='position'/></method><method return='android.widget.RemoteViews' abstract='true' name='getLoadingView' api_added='11'/><method return='android.widget.RemoteViews' abstract='true' name='getViewAt' api_added='11'><parameter type='int' name='position'/></method><method return='int' abstract='true' name='getViewTypeCount' api_added='11'/><method return='boolean' abstract='true' name='hasStableIds' api_added='11'/><method abstract='true' name='onCreate' api_added='11'/><method abstract='true' name='onDataSetChanged' api_added='11'/><method abstract='true' name='onDestroy' api_added='11'/></interface><interface abstract='true' static='true' name='SearchView.OnCloseListener' api_added='11'><method return='boolean' abstract='true' name='onClose' api_added='11'/></interface><interface abstract='true' static='true' name='SearchView.OnQueryTextListener' api_added='11'><method return='boolean' abstract='true' name='onQueryTextChange' api_added='11'><parameter type='java.lang.String' name='newText'/></method><method return='boolean' abstract='true' name='onQueryTextSubmit' api_added='11'><parameter type='java.lang.String' name='query'/></method></interface><interface abstract='true' static='true' name='SearchView.OnSuggestionListener' api_added='11'><method return='boolean' abstract='true' name='onSuggestionClick' api_added='11'><parameter type='int' name='position'/></method><method return='boolean' abstract='true' name='onSuggestionSelect' api_added='11'><parameter type='int' name='position'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='PopupMenu.OnDismissListener' api_added='14'><method abstract='true' name='onDismiss' api_added='14'><parameter type='android.widget.PopupMenu' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='ShareActionProvider.OnShareTargetSelectedListener' api_added='14'><method return='boolean' abstract='true' name='onShareTargetSelected' api_added='14'><parameter type='android.widget.ShareActionProvider' name='arg0'/><parameter type='android.content.Intent' name='arg1'/></method></interface><interface extends='java.lang.Object' abstract='true' name='Advanceable' api_added='16'><method abstract='true' name='advance' api_added='16'/><method abstract='true' name='fyiWillBeAdvancedByHostKThx' api_added='16'/></interface></package><package name='com.android.internal.util'><interface abstract='true' name='Predicate'><method return='boolean' abstract='true' name='apply'><parameter type='T' name='t'/></method></interface></package><package name='dalvik.annotation'><class extends='java.lang.Object' deprecated='14' abstract='true' name='TestTarget'/><class extends='java.lang.Object' deprecated='14' abstract='true' name='TestTargetClass'/></package><package name='dalvik.bytecode'><class extends='java.lang.Object' name='OpcodeInfo' api_added='11' final='true'/><interface abstract='true' name='Opcodes'/></package><package name='dalvik.system'><class extends='java.lang.VirtualMachineError' deprecated='5' api_removed='9' name='AllocationLimitError'><constructor api_removed='9' type='dalvik.system.AllocationLimitError' name='AllocationLimitError'/><constructor api_removed='9' type='dalvik.system.AllocationLimitError' name='AllocationLimitError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='DexFile' final='true'><constructor type='dalvik.system.DexFile' name='DexFile'><parameter type='java.io.File' name='file'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='dalvik.system.DexFile' name='DexFile'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.Enumeration&lt;java.lang.String&gt;' name='entries'/><method return='java.lang.String' name='getName'/><method return='boolean' native='true' static='true' name='isDexOptNeeded'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Class' name='loadClass'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='dalvik.system.DexFile' static='true' name='loadDex' api_added='3'><parameter type='java.lang.String' name='sourcePathName'/><parameter type='java.lang.String' name='outputPathName'/><parameter type='int' name='flags'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.ClassLoader' name='PathClassLoader'><constructor type='dalvik.system.PathClassLoader' name='PathClassLoader'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.ClassLoader' name='parent'/></constructor><constructor type='dalvik.system.PathClassLoader' name='PathClassLoader'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='libPath'/><parameter type='java.lang.ClassLoader' name='parent'/></constructor><method return='java.lang.String' api_removed='14' name='findLibrary' api_added='9'><parameter type='java.lang.String' name='libname'/></method></class><class extends='java.lang.VirtualMachineError' deprecated='5' api_removed='9' name='PotentialDeadlockError'><constructor api_removed='9' type='dalvik.system.PotentialDeadlockError' name='PotentialDeadlockError'/><constructor api_removed='9' type='dalvik.system.PotentialDeadlockError' name='PotentialDeadlockError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.VirtualMachineError' deprecated='5' api_removed='9' name='StaleDexCacheError'><constructor api_removed='9' type='dalvik.system.StaleDexCacheError' name='StaleDexCacheError'/><constructor api_removed='9' type='dalvik.system.StaleDexCacheError' name='StaleDexCacheError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='TemporaryDirectory'><constructor api_removed='9' type='dalvik.system.TemporaryDirectory' name='TemporaryDirectory'/><method api_removed='9' static='true' name='setUpDirectory'><parameter type='java.lang.String' name='baseDir'/></method><method api_removed='9' static='true' synchronized='true' name='setUpDirectory'><parameter type='java.io.File' name='baseDir'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='TouchDex'><constructor api_removed='9' type='dalvik.system.TouchDex' name='TouchDex'/><method api_removed='9' static='true' name='main'><parameter type='java.lang.String[]' name='args'/></method><method return='int' api_removed='9' static='true' name='start'><parameter type='java.lang.String' name='dexFiles'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='VMDebug' final='true'><method return='int' native='true' api_removed='9' static='true' name='getAllocCount'><parameter type='int' name='kind'/></method><method native='true' api_removed='9' static='true' name='getInstructionCount'><parameter type='int[]' name='counts'/></method><method return='int' native='true' api_removed='9' static='true' name='getLoadedClassCount'/><method return='boolean' native='true' api_removed='9' static='true' name='isDebuggerConnected'/><method return='long' native='true' api_removed='9' static='true' name='lastDebuggerActivity'/><method native='true' api_removed='9' static='true' name='printLoadedClasses'><parameter type='int' name='flags'/></method><method native='true' api_removed='9' static='true' name='resetAllocCount'><parameter type='int' name='kinds'/></method><method native='true' api_removed='9' static='true' name='resetInstructionCount'/><method return='int' native='true' api_removed='9' static='true' name='setAllocationLimit'><parameter type='int' name='limit'/></method><method return='int' native='true' api_removed='9' static='true' name='setGlobalAllocationLimit'><parameter type='int' name='limit'/></method><method native='true' api_removed='9' static='true' name='startAllocCounting'/><method native='true' api_removed='9' static='true' name='startEmulatorTracing'/><method native='true' api_removed='9' static='true' name='startInstructionCounting'/><method deprecated='8' api_removed='9' static='true' name='startMethodTracing'/><method native='true' api_removed='9' static='true' name='startMethodTracing'><parameter type='java.lang.String' name='traceFileName'/><parameter type='int' name='bufferSize'/><parameter type='int' name='flags'/></method><method native='true' api_removed='9' static='true' name='stopAllocCounting'/><method native='true' api_removed='9' static='true' name='stopEmulatorTracing'/><method native='true' api_removed='9' static='true' name='stopInstructionCounting'/><method native='true' api_removed='9' static='true' name='stopMethodTracing'/><method return='long' native='true' api_removed='9' static='true' name='threadCpuTimeNanos'/><method native='true' api_removed='9' static='true' name='dumpHprofData' api_added='3'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' native='true' api_removed='9' static='true' name='isDebuggingEnabled' api_added='3'/></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='VMRuntime' final='true'><method native='true' api_removed='9' name='gcSoftReferences'/><method return='long' native='true' api_removed='9' name='getExternalBytesAllocated'/><method return='long' api_removed='9' name='getMinimumHeapSize'/><method return='dalvik.system.VMRuntime' api_removed='9' static='true' name='getRuntime'/><method return='float' native='true' api_removed='9' name='getTargetHeapUtilization'/><method native='true' api_removed='9' name='runFinalizationSync'/><method return='long' api_removed='9' synchronized='true' name='setMinimumHeapSize'><parameter type='long' name='size'/></method><method return='float' api_removed='9' name='setTargetHeapUtilization'><parameter type='float' name='newTarget'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='VMStack' final='true'><constructor api_removed='9' type='dalvik.system.VMStack' name='VMStack'/><method return='java.lang.ClassLoader' native='true' api_removed='9' static='true' name='getCallingClassLoader'/><method return='java.lang.ClassLoader' native='true' api_removed='9' static='true' name='getCallingClassLoader2'/><method return='java.lang.Class&lt;?&gt;[]' native='true' api_removed='9' static='true' name='getClasses'><parameter type='int' name='maxDepth'/><parameter type='boolean' name='stopAtPrivileged'/></method><method return='java.lang.StackTraceElement[]' native='true' api_removed='9' static='true' name='getThreadStackTrace'><parameter type='java.lang.Thread' name='t'/></method></class><class extends='java.lang.Object' deprecated='5' api_removed='9' name='Zygote'><method return='int' native='true' api_removed='9' static='true' name='fork'/><method deprecated='3' return='int' native='true' api_removed='9' static='true' name='forkAndSpecialize'><parameter type='int' name='uid'/><parameter type='int' name='gid'/><parameter type='int[]' name='gids'/><parameter type='boolean' name='enableDebugger'/><parameter type='int[][]' name='rlimits'/></method><method deprecated='3' return='int' native='true' api_removed='9' static='true' name='forkSystemServer'><parameter type='int' name='uid'/><parameter type='int' name='gid'/><parameter type='int[]' name='gids'/><parameter type='boolean' name='enableDebugger'/><parameter type='int[][]' name='rlimits'/></method><method return='int' native='true' api_removed='9' static='true' name='forkAndSpecialize' api_added='3'><parameter type='int' name='uid'/><parameter type='int' name='gid'/><parameter type='int[]' name='gids'/><parameter type='int' name='debugFlags'/><parameter type='int[][]' name='rlimits'/></method><method return='int' native='true' api_removed='9' static='true' name='forkSystemServer' api_added='3'><parameter type='int' name='uid'/><parameter type='int' name='gid'/><parameter type='int[]' name='gids'/><parameter type='int' name='debugFlags'/><parameter type='int[][]' name='rlimits'/></method></class><class extends='java.lang.ClassLoader' name='DexClassLoader' api_added='3'><constructor type='dalvik.system.DexClassLoader' name='DexClassLoader' api_added='3'><parameter type='java.lang.String' name='dexPath'/><parameter type='java.lang.String' name='dexOutputDir'/><parameter type='java.lang.String' name='libPath'/><parameter type='java.lang.ClassLoader' name='parent'/></constructor></class><class extends='java.lang.ClassLoader' name='BaseDexClassLoader' api_added='14'><constructor type='dalvik.system.BaseDexClassLoader' name='BaseDexClassLoader' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.io.File' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.ClassLoader' name='arg3'/></constructor><method return='java.lang.String' name='findLibrary' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></class></package><package name='java.awt.font'><class extends='java.lang.Object' name='NumericShaper' final='true'><method return='java.awt.font.NumericShaper' static='true' name='getContextualShaper'><parameter type='int' name='ranges'/><parameter type='int' name='defaultContext'/></method><method return='java.awt.font.NumericShaper' static='true' name='getContextualShaper'><parameter type='int' name='ranges'/></method><method return='int' name='getRanges'/><method return='java.awt.font.NumericShaper' static='true' name='getShaper'><parameter type='int' name='singleRange'/></method><method return='boolean' name='isContextual'/><method name='shape'><parameter type='char[]' name='text'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='context'/></method><method name='shape'><parameter type='char[]' name='text'/><parameter type='int' name='start'/><parameter type='int' name='count'/></method></class><class extends='java.text.AttributedCharacterIterator.Attribute' name='TextAttribute' final='true'><constructor visibility='protected' type='java.awt.font.TextAttribute' name='TextAttribute'><parameter type='java.lang.String' name='name'/></constructor></class></package><package name='java.io'><class extends='java.io.FilterInputStream' name='BufferedInputStream'><constructor type='java.io.BufferedInputStream' name='BufferedInputStream'><parameter type='java.io.InputStream' name='in'/></constructor><constructor type='java.io.BufferedInputStream' name='BufferedInputStream'><parameter type='java.io.InputStream' name='in'/><parameter type='int' name='size'/></constructor></class><class extends='java.io.FilterOutputStream' name='BufferedOutputStream'><constructor type='java.io.BufferedOutputStream' name='BufferedOutputStream'><parameter type='java.io.OutputStream' name='out'/></constructor><constructor type='java.io.BufferedOutputStream' name='BufferedOutputStream'><parameter type='java.io.OutputStream' name='out'/><parameter type='int' name='size'/></constructor></class><class extends='java.io.Reader' name='BufferedReader'><constructor type='java.io.BufferedReader' name='BufferedReader'><parameter type='java.io.Reader' name='in'/></constructor><constructor type='java.io.BufferedReader' name='BufferedReader'><parameter type='java.io.Reader' name='in'/><parameter type='int' name='size'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readLine'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' name='BufferedWriter'><constructor type='java.io.BufferedWriter' name='BufferedWriter'><parameter type='java.io.Writer' name='out'/></constructor><constructor type='java.io.BufferedWriter' name='BufferedWriter'><parameter type='java.io.Writer' name='out'/><parameter type='int' name='size'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method name='newLine'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='char[]' name='cbuf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='ByteArrayInputStream'><constructor type='java.io.ByteArrayInputStream' name='ByteArrayInputStream'><parameter type='byte[]' name='buf'/></constructor><constructor type='java.io.ByteArrayInputStream' name='ByteArrayInputStream'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></constructor><method return='int' synchronized='true' name='read'/></class><class extends='java.io.OutputStream' name='ByteArrayOutputStream'><constructor type='java.io.ByteArrayOutputStream' name='ByteArrayOutputStream'/><constructor type='java.io.ByteArrayOutputStream' name='ByteArrayOutputStream'><parameter type='int' name='size'/></constructor><method synchronized='true' name='reset'/><method return='int' name='size'/><method return='byte[]' synchronized='true' name='toByteArray'/><method deprecated='1' return='java.lang.String' name='toString'><parameter type='int' name='hibyte'/></method><method return='java.lang.String' name='toString'><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method><method synchronized='true' name='write'><parameter type='int' name='oneByte'/></method><method synchronized='true' name='writeTo'><parameter type='java.io.OutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Reader' name='CharArrayReader'><constructor type='java.io.CharArrayReader' name='CharArrayReader'><parameter type='char[]' name='buf'/></constructor><constructor type='java.io.CharArrayReader' name='CharArrayReader'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></constructor><method name='close'/><method return='int' name='read'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' name='CharArrayWriter'><constructor type='java.io.CharArrayWriter' name='CharArrayWriter'/><constructor type='java.io.CharArrayWriter' name='CharArrayWriter'><parameter type='int' name='initialSize'/></constructor><method name='close'/><method name='flush'/><method name='reset'/><method return='int' name='size'/><method return='char[]' name='toCharArray'/><method name='write'><parameter type='char[]' name='c'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method name='writeTo'><parameter type='java.io.Writer' name='out'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='CharConversionException'><constructor type='java.io.CharConversionException' name='CharConversionException'/><constructor type='java.io.CharConversionException' name='CharConversionException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.FilterInputStream' name='DataInputStream'><constructor type='java.io.DataInputStream' name='DataInputStream'><parameter type='java.io.InputStream' name='in'/></constructor><method return='int' name='read' final='true'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read' final='true'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='readBoolean' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='byte' name='readByte' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='char' name='readChar' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='double' name='readDouble' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='float' name='readFloat' final='true'><exception type='java.io.IOException' name='IOException'/></method><method name='readFully' final='true'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='readFully' final='true'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readInt' final='true'><exception type='java.io.IOException' name='IOException'/></method><method deprecated='1' return='java.lang.String' name='readLine' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='readLong' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='short' name='readShort' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readUTF' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' static='true' name='readUTF' final='true'><parameter type='java.io.DataInput' name='in'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedByte' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedShort' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='skipBytes' final='true'><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.FilterOutputStream' name='DataOutputStream'><constructor type='java.io.DataOutputStream' name='DataOutputStream'><parameter type='java.io.OutputStream' name='out'/></constructor><method return='int' name='size' final='true'/><method name='writeBoolean' final='true'><parameter type='boolean' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeByte' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBytes' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChar' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChars' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeDouble' final='true'><parameter type='double' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeFloat' final='true'><parameter type='float' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeInt' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLong' final='true'><parameter type='long' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeShort' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeUTF' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='EOFException'><constructor type='java.io.EOFException' name='EOFException'/><constructor type='java.io.EOFException' name='EOFException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='File'><constructor type='java.io.File' name='File'><parameter type='java.io.File' name='dir'/><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.io.File' name='File'><parameter type='java.lang.String' name='path'/></constructor><constructor type='java.io.File' name='File'><parameter type='java.lang.String' name='dirPath'/><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.io.File' name='File'><parameter type='java.net.URI' name='uri'/></constructor><method return='boolean' name='canRead'/><method return='boolean' name='canWrite'/><method return='int' name='compareTo'><parameter type='java.io.File' name='another'/></method><method return='boolean' name='createNewFile'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.File' static='true' name='createTempFile'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='suffix'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.File' static='true' name='createTempFile'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='suffix'/><parameter type='java.io.File' name='directory'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='delete'/><method name='deleteOnExit'/><method return='boolean' name='exists'/><method return='java.io.File' name='getAbsoluteFile'/><method return='java.lang.String' name='getAbsolutePath'/><method return='java.io.File' name='getCanonicalFile'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getCanonicalPath'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getParent'/><method return='java.io.File' name='getParentFile'/><method return='java.lang.String' name='getPath'/><method return='boolean' name='isAbsolute'/><method return='boolean' name='isDirectory'/><method return='boolean' name='isFile'/><method return='boolean' name='isHidden'/><method return='long' name='lastModified'/><method return='long' name='length'/><method return='java.lang.String[]' name='list'/><method return='java.lang.String[]' name='list'><parameter type='java.io.FilenameFilter' name='filter'/></method><method return='java.io.File[]' name='listFiles'/><method return='java.io.File[]' name='listFiles'><parameter type='java.io.FilenameFilter' name='filter'/></method><method return='java.io.File[]' name='listFiles'><parameter type='java.io.FileFilter' name='filter'/></method><method return='java.io.File[]' static='true' name='listRoots'/><method return='boolean' name='mkdir'/><method return='boolean' name='mkdirs'/><method return='boolean' name='renameTo'><parameter type='java.io.File' name='dest'/></method><method return='boolean' name='setLastModified'><parameter type='long' name='time'/></method><method return='boolean' name='setReadOnly'/><method return='java.net.URI' name='toURI'/><method deprecated='9' return='java.net.URL' name='toURL'><exception type='java.net.MalformedURLException' name='MalformedURLException'/></method><method return='boolean' name='canExecute' api_added='9'/><method return='long' name='getFreeSpace' api_added='9'/><method return='long' name='getTotalSpace' api_added='9'/><method return='long' name='getUsableSpace' api_added='9'/><method return='boolean' name='setExecutable' api_added='9'><parameter type='boolean' name='executable'/><parameter type='boolean' name='ownerOnly'/></method><method return='boolean' name='setExecutable' api_added='9'><parameter type='boolean' name='executable'/></method><method return='boolean' name='setReadable' api_added='9'><parameter type='boolean' name='readable'/><parameter type='boolean' name='ownerOnly'/></method><method return='boolean' name='setReadable' api_added='9'><parameter type='boolean' name='readable'/></method><method return='boolean' name='setWritable' api_added='9'><parameter type='boolean' name='writable'/><parameter type='boolean' name='ownerOnly'/></method><method return='boolean' name='setWritable' api_added='9'><parameter type='boolean' name='writable'/></method></class><class extends='java.lang.Object' name='FileDescriptor' final='true'><constructor type='java.io.FileDescriptor' name='FileDescriptor'/><method name='sync'><exception type='java.io.SyncFailedException' name='SyncFailedException'/></method><method return='boolean' native='true' name='valid'/></class><class extends='java.io.InputStream' name='FileInputStream'><constructor type='java.io.FileInputStream' name='FileInputStream'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.FileInputStream' name='FileInputStream'><parameter type='java.io.FileDescriptor' name='fd'/></constructor><constructor type='java.io.FileInputStream' name='FileInputStream'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><method return='java.nio.channels.FileChannel' name='getChannel'/><method return='java.io.FileDescriptor' name='getFD' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='FileNotFoundException'><constructor type='java.io.FileNotFoundException' name='FileNotFoundException'/><constructor type='java.io.FileNotFoundException' name='FileNotFoundException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.OutputStream' name='FileOutputStream'><constructor type='java.io.FileOutputStream' name='FileOutputStream'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.FileOutputStream' name='FileOutputStream'><parameter type='java.io.File' name='file'/><parameter type='boolean' name='append'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.FileOutputStream' name='FileOutputStream'><parameter type='java.io.FileDescriptor' name='fd'/></constructor><constructor type='java.io.FileOutputStream' name='FileOutputStream'><parameter type='java.lang.String' name='filename'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.FileOutputStream' name='FileOutputStream'><parameter type='java.lang.String' name='filename'/><parameter type='boolean' name='append'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><method return='java.nio.channels.FileChannel' name='getChannel'/><method return='java.io.FileDescriptor' name='getFD' final='true'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.security.Permission' name='FilePermission' final='true'><constructor type='java.io.FilePermission' name='FilePermission'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='actions'/></constructor><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getActions'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='p'/></method></class><class extends='java.io.InputStreamReader' name='FileReader'><constructor type='java.io.FileReader' name='FileReader'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.FileReader' name='FileReader'><parameter type='java.io.FileDescriptor' name='fd'/></constructor><constructor type='java.io.FileReader' name='FileReader'><parameter type='java.lang.String' name='filename'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor></class><class extends='java.io.OutputStreamWriter' name='FileWriter'><constructor type='java.io.FileWriter' name='FileWriter'><parameter type='java.io.File' name='file'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.io.FileWriter' name='FileWriter'><parameter type='java.io.File' name='file'/><parameter type='boolean' name='append'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.io.FileWriter' name='FileWriter'><parameter type='java.io.FileDescriptor' name='fd'/></constructor><constructor type='java.io.FileWriter' name='FileWriter'><parameter type='java.lang.String' name='filename'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.io.FileWriter' name='FileWriter'><parameter type='java.lang.String' name='filename'/><parameter type='boolean' name='append'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.io.InputStream' name='FilterInputStream'><constructor visibility='protected' type='java.io.FilterInputStream' name='FilterInputStream'><parameter type='java.io.InputStream' name='in'/></constructor><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.OutputStream' name='FilterOutputStream'><constructor type='java.io.FilterOutputStream' name='FilterOutputStream'><parameter type='java.io.OutputStream' name='out'/></constructor><method name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Reader' abstract='true' name='FilterReader'><constructor visibility='protected' type='java.io.FilterReader' name='FilterReader'><parameter type='java.io.Reader' name='in'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' abstract='true' name='FilterWriter'><constructor visibility='protected' type='java.io.FilterWriter' name='FilterWriter'><parameter type='java.io.Writer' name='out'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Exception' name='IOException'><constructor type='java.io.IOException' name='IOException'/><constructor type='java.io.IOException' name='IOException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='InputStream'><constructor type='java.io.InputStream' name='InputStream'/><method return='int' name='available'><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='mark'><parameter type='int' name='readlimit'/></method><method return='boolean' name='markSupported'/><method return='int' abstract='true' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='reset'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='skip'><parameter type='long' name='n'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Reader' name='InputStreamReader'><constructor type='java.io.InputStreamReader' name='InputStreamReader'><parameter type='java.io.InputStream' name='in'/></constructor><constructor type='java.io.InputStreamReader' name='InputStreamReader'><parameter type='java.io.InputStream' name='in'/><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.io.InputStreamReader' name='InputStreamReader'><parameter type='java.io.InputStream' name='in'/><parameter type='java.nio.charset.CharsetDecoder' name='dec'/></constructor><constructor type='java.io.InputStreamReader' name='InputStreamReader'><parameter type='java.io.InputStream' name='in'/><parameter type='java.nio.charset.Charset' name='charset'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getEncoding'/><method return='int' name='read'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='InterruptedIOException'><constructor type='java.io.InterruptedIOException' name='InterruptedIOException'/><constructor type='java.io.InterruptedIOException' name='InterruptedIOException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.ObjectStreamException' name='InvalidClassException'><constructor type='java.io.InvalidClassException' name='InvalidClassException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.io.InvalidClassException' name='InvalidClassException'><parameter type='java.lang.String' name='className'/><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.ObjectStreamException' name='InvalidObjectException'><constructor type='java.io.InvalidObjectException' name='InvalidObjectException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.FilterInputStream' deprecated='1' name='LineNumberInputStream'><constructor type='java.io.LineNumberInputStream' name='LineNumberInputStream'><parameter type='java.io.InputStream' name='in'/></constructor><method return='int' name='getLineNumber'/><method name='setLineNumber'><parameter type='int' name='lineNumber'/></method></class><class extends='java.io.BufferedReader' name='LineNumberReader'><constructor type='java.io.LineNumberReader' name='LineNumberReader'><parameter type='java.io.Reader' name='in'/></constructor><constructor type='java.io.LineNumberReader' name='LineNumberReader'><parameter type='java.io.Reader' name='in'/><parameter type='int' name='size'/></constructor><method return='int' name='getLineNumber'/><method name='setLineNumber'><parameter type='int' name='lineNumber'/></method></class><class extends='java.io.ObjectStreamException' name='NotActiveException'><constructor type='java.io.NotActiveException' name='NotActiveException'/><constructor type='java.io.NotActiveException' name='NotActiveException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.ObjectStreamException' name='NotSerializableException'><constructor type='java.io.NotSerializableException' name='NotSerializableException'/><constructor type='java.io.NotSerializableException' name='NotSerializableException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.InputStream' name='ObjectInputStream'><constructor visibility='protected' type='java.io.ObjectInputStream' name='ObjectInputStream'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.SecurityException' name='SecurityException'/></constructor><constructor type='java.io.ObjectInputStream' name='ObjectInputStream'><parameter type='java.io.InputStream' name='input'/><exception type='java.io.IOException' name='IOException'/><exception type='java.io.StreamCorruptedException' name='StreamCorruptedException'/></constructor><method name='defaultReadObject'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.io.NotActiveException' name='NotActiveException'/></method><method visibility='protected' return='boolean' name='enableResolveObject'><parameter type='boolean' name='enable'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='readBoolean'><exception type='java.io.IOException' name='IOException'/></method><method return='byte' name='readByte'><exception type='java.io.IOException' name='IOException'/></method><method return='char' name='readChar'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.io.ObjectStreamClass' name='readClassDescriptor'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='double' name='readDouble'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.ObjectInputStream.GetField' name='readFields'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.io.NotActiveException' name='NotActiveException'/></method><method return='float' name='readFloat'><exception type='java.io.IOException' name='IOException'/></method><method name='readFully'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='readFully'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readInt'><exception type='java.io.IOException' name='IOException'/></method><method deprecated='1' return='java.lang.String' name='readLine'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='readLong'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='readObject' final='true'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.io.OptionalDataException' name='OptionalDataException'/></method><method visibility='protected' return='java.lang.Object' name='readObjectOverride'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.io.OptionalDataException' name='OptionalDataException'/></method><method return='short' name='readShort'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='readStreamHeader'><exception type='java.io.IOException' name='IOException'/><exception type='java.io.StreamCorruptedException' name='StreamCorruptedException'/></method><method return='java.lang.String' name='readUTF'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='readUnshared'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedByte'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedShort'><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='registerValidation'><parameter type='java.io.ObjectInputValidation' name='object'/><parameter type='int' name='priority'/><exception type='java.io.InvalidObjectException' name='InvalidObjectException'/><exception type='java.io.NotActiveException' name='NotActiveException'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='resolveClass'><parameter type='java.io.ObjectStreamClass' name='osClass'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.lang.Object' name='resolveObject'><parameter type='java.lang.Object' name='object'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='resolveProxyClass'><parameter type='java.lang.String[]' name='interfaceNames'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='skipBytes'><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='ObjectInputStream.GetField'><constructor type='java.io.ObjectInputStream.GetField' name='ObjectInputStream.GetField'/><method return='boolean' abstract='true' name='defaulted'><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='boolean' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='char' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='char' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='byte' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='byte' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='short' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='short' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='int' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='long' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='long' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='float' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='float' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='double' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='double' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Object' abstract='true' name='get'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='defaultValue'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.io.ObjectStreamClass' abstract='true' name='getObjectStreamClass'/></class><class extends='java.io.OutputStream' name='ObjectOutputStream'><constructor visibility='protected' type='java.io.ObjectOutputStream' name='ObjectOutputStream'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.SecurityException' name='SecurityException'/></constructor><constructor type='java.io.ObjectOutputStream' name='ObjectOutputStream'><parameter type='java.io.OutputStream' name='output'/><exception type='java.io.IOException' name='IOException'/></constructor><method visibility='protected' name='annotateClass'><parameter type='java.lang.Class&lt;?&gt;' name='aClass'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='annotateProxyClass'><parameter type='java.lang.Class&lt;?&gt;' name='aClass'/><exception type='java.io.IOException' name='IOException'/></method><method name='defaultWriteObject'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='drain'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='boolean' name='enableReplaceObject'><parameter type='boolean' name='enable'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.io.ObjectOutputStream.PutField' name='putFields'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.lang.Object' name='replaceObject'><parameter type='java.lang.Object' name='object'/><exception type='java.io.IOException' name='IOException'/></method><method name='reset'><exception type='java.io.IOException' name='IOException'/></method><method name='useProtocolVersion'><parameter type='int' name='version'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBoolean'><parameter type='boolean' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeByte'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBytes'><parameter type='java.lang.String' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChar'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChars'><parameter type='java.lang.String' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='writeClassDescriptor'><parameter type='java.io.ObjectStreamClass' name='classDesc'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeDouble'><parameter type='double' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeFields'><exception type='java.io.IOException' name='IOException'/></method><method name='writeFloat'><parameter type='float' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeInt'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLong'><parameter type='long' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeObject' final='true'><parameter type='java.lang.Object' name='object'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='writeObjectOverride'><parameter type='java.lang.Object' name='object'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeShort'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='writeStreamHeader'><exception type='java.io.IOException' name='IOException'/></method><method name='writeUTF'><parameter type='java.lang.String' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeUnshared'><parameter type='java.lang.Object' name='object'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='ObjectOutputStream.PutField'><constructor type='java.io.ObjectOutputStream.PutField' name='ObjectOutputStream.PutField'/><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='char' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='byte' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='short' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='float' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='double' name='value'/></method><method abstract='true' name='put'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method deprecated='1' abstract='true' name='write'><parameter type='java.io.ObjectOutput' name='out'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ObjectStreamClass'><method return='java.lang.Class&lt;?&gt;' name='forClass'/><method return='java.io.ObjectStreamField' name='getField'><parameter type='java.lang.String' name='name'/></method><method return='java.io.ObjectStreamField[]' name='getFields'/><method return='java.lang.String' name='getName'/><method return='long' name='getSerialVersionUID'/><method return='java.io.ObjectStreamClass' static='true' name='lookup'><parameter type='java.lang.Class&lt;?&gt;' name='cl'/></method><method return='java.io.ObjectStreamClass' static='true' name='lookupAny' api_added='9'><parameter type='java.lang.Class&lt;?&gt;' name='cl'/></method></class><class extends='java.io.IOException' abstract='true' name='ObjectStreamException'><constructor visibility='protected' type='java.io.ObjectStreamException' name='ObjectStreamException'/><constructor visibility='protected' type='java.io.ObjectStreamException' name='ObjectStreamException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='ObjectStreamField'><constructor type='java.io.ObjectStreamField' name='ObjectStreamField'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class&lt;?&gt;' name='cl'/></constructor><constructor type='java.io.ObjectStreamField' name='ObjectStreamField'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class&lt;?&gt;' name='cl'/><parameter type='boolean' name='unshared'/></constructor><method return='int' name='compareTo'><parameter type='java.lang.Object' name='o'/></method><method return='java.lang.String' name='getName'/><method return='int' name='getOffset'/><method return='java.lang.Class&lt;?&gt;' name='getType'/><method return='char' name='getTypeCode'/><method return='java.lang.String' name='getTypeString'/><method return='boolean' name='isPrimitive'/><method return='boolean' name='isUnshared'/><method visibility='protected' name='setOffset'><parameter type='int' name='newValue'/></method></class><class extends='java.io.ObjectStreamException' name='OptionalDataException'/><class extends='java.lang.Object' abstract='true' name='OutputStream'><constructor type='java.io.OutputStream' name='OutputStream'/><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' name='OutputStreamWriter'><constructor type='java.io.OutputStreamWriter' name='OutputStreamWriter'><parameter type='java.io.OutputStream' name='out'/></constructor><constructor type='java.io.OutputStreamWriter' name='OutputStreamWriter'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.io.OutputStreamWriter' name='OutputStreamWriter'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.nio.charset.Charset' name='cs'/></constructor><constructor type='java.io.OutputStreamWriter' name='OutputStreamWriter'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.nio.charset.CharsetEncoder' name='enc'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getEncoding'/><method name='write'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='PipedInputStream'><constructor type='java.io.PipedInputStream' name='PipedInputStream'/><constructor type='java.io.PipedInputStream' name='PipedInputStream'><parameter type='java.io.PipedOutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='connect'><parameter type='java.io.PipedOutputStream' name='src'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' synchronized='true' name='read'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' synchronized='true' name='receive'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.OutputStream' name='PipedOutputStream'><constructor type='java.io.PipedOutputStream' name='PipedOutputStream'/><constructor type='java.io.PipedOutputStream' name='PipedOutputStream'><parameter type='java.io.PipedInputStream' name='dest'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='connect'><parameter type='java.io.PipedInputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Reader' name='PipedReader'><constructor type='java.io.PipedReader' name='PipedReader'/><constructor type='java.io.PipedReader' name='PipedReader'><parameter type='java.io.PipedWriter' name='out'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='java.io.PipedWriter' name='src'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' name='PipedWriter'><constructor type='java.io.PipedWriter' name='PipedWriter'/><constructor type='java.io.PipedWriter' name='PipedWriter'><parameter type='java.io.PipedReader' name='dest'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='java.io.PipedReader' name='stream'/><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.FilterOutputStream' name='PrintStream'><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.io.OutputStream' name='out'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.io.OutputStream' name='out'/><parameter type='boolean' name='autoflush'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.io.OutputStream' name='out'/><parameter type='boolean' name='autoflush'/><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.PrintStream' name='PrintStream'><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><method return='java.io.PrintStream' name='append'><parameter type='char' name='c'/></method><method return='java.io.PrintStream' name='append'><parameter type='java.lang.CharSequence' name='csq'/></method><method return='java.io.PrintStream' name='append'><parameter type='java.lang.CharSequence' name='csq'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='boolean' name='checkError'/><method return='java.io.PrintStream' name='format'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.PrintStream' name='format'><parameter type='java.util.Locale' name='l'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method name='print'><parameter type='char[]' name='charArray'/></method><method name='print'><parameter type='char' name='ch'/></method><method name='print'><parameter type='double' name='dnum'/></method><method name='print'><parameter type='float' name='fnum'/></method><method name='print'><parameter type='int' name='inum'/></method><method name='print'><parameter type='long' name='lnum'/></method><method name='print'><parameter type='java.lang.Object' name='obj'/></method><method synchronized='true' name='print'><parameter type='java.lang.String' name='str'/></method><method name='print'><parameter type='boolean' name='bool'/></method><method return='java.io.PrintStream' name='printf'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.PrintStream' name='printf'><parameter type='java.util.Locale' name='l'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method name='println'/><method name='println'><parameter type='char[]' name='charArray'/></method><method name='println'><parameter type='char' name='ch'/></method><method name='println'><parameter type='double' name='dnum'/></method><method name='println'><parameter type='float' name='fnum'/></method><method name='println'><parameter type='int' name='inum'/></method><method name='println'><parameter type='long' name='lnum'/></method><method name='println'><parameter type='java.lang.Object' name='obj'/></method><method synchronized='true' name='println'><parameter type='java.lang.String' name='str'/></method><method name='println'><parameter type='boolean' name='bool'/></method><method visibility='protected' name='setError'/><method visibility='protected' name='clearError' api_added='9'/></class><class extends='java.io.Writer' name='PrintWriter'><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.OutputStream' name='out'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.OutputStream' name='out'/><parameter type='boolean' name='autoflush'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.Writer' name='wr'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.Writer' name='wr'/><parameter type='boolean' name='autoflush'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.PrintWriter' name='PrintWriter'><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><method return='boolean' name='checkError'/><method name='close'/><method name='flush'/><method return='java.io.PrintWriter' name='format'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.PrintWriter' name='format'><parameter type='java.util.Locale' name='l'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method name='print'><parameter type='char[]' name='charArray'/></method><method name='print'><parameter type='char' name='ch'/></method><method name='print'><parameter type='double' name='dnum'/></method><method name='print'><parameter type='float' name='fnum'/></method><method name='print'><parameter type='int' name='inum'/></method><method name='print'><parameter type='long' name='lnum'/></method><method name='print'><parameter type='java.lang.Object' name='obj'/></method><method name='print'><parameter type='java.lang.String' name='str'/></method><method name='print'><parameter type='boolean' name='bool'/></method><method return='java.io.PrintWriter' name='printf'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.PrintWriter' name='printf'><parameter type='java.util.Locale' name='l'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method name='println'/><method name='println'><parameter type='char[]' name='charArray'/></method><method name='println'><parameter type='char' name='ch'/></method><method name='println'><parameter type='double' name='dnum'/></method><method name='println'><parameter type='float' name='fnum'/></method><method name='println'><parameter type='int' name='inum'/></method><method name='println'><parameter type='long' name='lnum'/></method><method name='println'><parameter type='java.lang.Object' name='obj'/></method><method name='println'><parameter type='java.lang.String' name='str'/></method><method name='println'><parameter type='boolean' name='bool'/></method><method visibility='protected' name='setError'/><method name='write'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/></method><method visibility='protected' name='clearError' api_added='9'/></class><class extends='java.io.FilterInputStream' name='PushbackInputStream'><constructor type='java.io.PushbackInputStream' name='PushbackInputStream'><parameter type='java.io.InputStream' name='in'/></constructor><constructor type='java.io.PushbackInputStream' name='PushbackInputStream'><parameter type='java.io.InputStream' name='in'/><parameter type='int' name='size'/></constructor><method name='unread'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='unread'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method name='unread'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.FilterReader' name='PushbackReader'><constructor type='java.io.PushbackReader' name='PushbackReader'><parameter type='java.io.Reader' name='in'/></constructor><constructor type='java.io.PushbackReader' name='PushbackReader'><parameter type='java.io.Reader' name='in'/><parameter type='int' name='size'/></constructor><method name='unread'><parameter type='char[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='unread'><parameter type='char[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method name='unread'><parameter type='int' name='oneChar'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RandomAccessFile'><constructor type='java.io.RandomAccessFile' name='RandomAccessFile'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.io.RandomAccessFile' name='RandomAccessFile'><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='mode'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileChannel' synchronized='true' name='getChannel' final='true'/><method return='java.io.FileDescriptor' name='getFD' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='getFilePointer'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='length'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='readBoolean' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='byte' name='readByte' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='char' name='readChar' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='double' name='readDouble' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='float' name='readFloat' final='true'><exception type='java.io.IOException' name='IOException'/></method><method name='readFully' final='true'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='readFully' final='true'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readInt' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readLine' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='readLong' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='short' name='readShort' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readUTF' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedByte' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readUnsignedShort' final='true'><exception type='java.io.IOException' name='IOException'/></method><method name='seek'><parameter type='long' name='pos'/><exception type='java.io.IOException' name='IOException'/></method><method name='setLength'><parameter type='long' name='newLength'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='skipBytes'><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBoolean' final='true'><parameter type='boolean' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeByte' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBytes' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChar' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeChars' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeDouble' final='true'><parameter type='double' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeFloat' final='true'><parameter type='float' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeInt' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLong' final='true'><parameter type='long' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeShort' final='true'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeUTF' final='true'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='Reader'><constructor visibility='protected' type='java.io.Reader' name='Reader'/><constructor visibility='protected' type='java.io.Reader' name='Reader'><parameter type='java.lang.Object' name='lock'/></constructor><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='mark'><parameter type='int' name='readLimit'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='markSupported'/><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='char[]' name='buf'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='java.nio.CharBuffer' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='ready'><exception type='java.io.IOException' name='IOException'/></method><method name='reset'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='skip'><parameter type='long' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='SequenceInputStream'><constructor type='java.io.SequenceInputStream' name='SequenceInputStream'><parameter type='java.io.InputStream' name='s1'/><parameter type='java.io.InputStream' name='s2'/></constructor><constructor type='java.io.SequenceInputStream' name='SequenceInputStream'><parameter type='java.util.Enumeration&lt;? extends java.io.InputStream&gt;' name='e'/></constructor><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.security.BasicPermission' name='SerializablePermission' final='true'><constructor type='java.io.SerializablePermission' name='SerializablePermission'><parameter type='java.lang.String' name='permissionName'/></constructor><constructor type='java.io.SerializablePermission' name='SerializablePermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.io.ObjectStreamException' name='StreamCorruptedException'><constructor type='java.io.StreamCorruptedException' name='StreamCorruptedException'/><constructor type='java.io.StreamCorruptedException' name='StreamCorruptedException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='StreamTokenizer'><constructor deprecated='1' type='java.io.StreamTokenizer' name='StreamTokenizer'><parameter type='java.io.InputStream' name='is'/></constructor><constructor type='java.io.StreamTokenizer' name='StreamTokenizer'><parameter type='java.io.Reader' name='r'/></constructor><constructor type='java.io.deprecated StreamTokenizer' name='deprecated StreamTokenizer' api_added='14'><parameter type='java.io.InputStream' name='arg0'/></constructor><method name='commentChar'><parameter type='int' name='ch'/></method><method name='eolIsSignificant'><parameter type='boolean' name='flag'/></method><method return='int' name='lineno'/><method name='lowerCaseMode'><parameter type='boolean' name='flag'/></method><method return='int' name='nextToken'><exception type='java.io.IOException' name='IOException'/></method><method name='ordinaryChar'><parameter type='int' name='ch'/></method><method name='ordinaryChars'><parameter type='int' name='low'/><parameter type='int' name='hi'/></method><method name='parseNumbers'/><method name='pushBack'/><method name='quoteChar'><parameter type='int' name='ch'/></method><method name='resetSyntax'/><method name='slashSlashComments'><parameter type='boolean' name='flag'/></method><method name='slashStarComments'><parameter type='boolean' name='flag'/></method><method name='whitespaceChars'><parameter type='int' name='low'/><parameter type='int' name='hi'/></method><method name='wordChars'><parameter type='int' name='low'/><parameter type='int' name='hi'/></method></class><class extends='java.io.InputStream' deprecated='1' name='StringBufferInputStream'><constructor type='java.io.StringBufferInputStream' name='StringBufferInputStream'><parameter type='java.lang.String' name='str'/></constructor><method return='int' synchronized='true' name='read'/></class><class extends='java.io.Reader' name='StringReader'><constructor type='java.io.StringReader' name='StringReader'><parameter type='java.lang.String' name='str'/></constructor><method name='close'/><method return='int' name='read'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.Writer' name='StringWriter'><constructor type='java.io.StringWriter' name='StringWriter'/><constructor type='java.io.StringWriter' name='StringWriter'><parameter type='int' name='initialSize'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'/><method return='java.lang.StringBuffer' name='getBuffer'/><method name='write'><parameter type='char[]' name='cbuf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/></method></class><class extends='java.io.IOException' name='SyncFailedException'><constructor type='java.io.SyncFailedException' name='SyncFailedException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.IOException' name='UTFDataFormatException'><constructor type='java.io.UTFDataFormatException' name='UTFDataFormatException'/><constructor type='java.io.UTFDataFormatException' name='UTFDataFormatException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.IOException' name='UnsupportedEncodingException'><constructor type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/><constructor type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.ObjectStreamException' name='WriteAbortedException'><constructor type='java.io.WriteAbortedException' name='WriteAbortedException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Exception' name='rootCause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Writer'><constructor visibility='protected' type='java.io.Writer' name='Writer'/><constructor visibility='protected' type='java.io.Writer' name='Writer'><parameter type='java.lang.Object' name='lock'/></constructor><method return='java.io.Writer' name='append'><parameter type='char' name='c'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.Writer' name='append'><parameter type='java.lang.CharSequence' name='csq'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.Writer' name='append'><parameter type='java.lang.CharSequence' name='csq'/><parameter type='int' name='start'/><parameter type='int' name='end'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='char[]' name='buf'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='char[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='oneChar'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='java.lang.String' name='str'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='Console' api_added='9' final='true'><method name='flush' api_added='9'/><method return='java.io.Console' name='format' api_added='9'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.Console' name='printf' api_added='9'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.lang.String' name='readLine' api_added='9'/><method return='java.lang.String' name='readLine' api_added='9'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='char[]' name='readPassword' api_added='9'/><method return='char[]' name='readPassword' api_added='9'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.Reader' name='reader' api_added='9'/><method return='java.io.PrintWriter' name='writer' api_added='9'/></class><class extends='java.lang.Error' name='IOError' api_added='9'><constructor type='java.io.IOError' name='IOError' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='Closeable'><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='DataInput'><method return='boolean' abstract='true' name='readBoolean'><exception type='java.io.IOException' name='IOException'/></method><method return='byte' abstract='true' name='readByte'><exception type='java.io.IOException' name='IOException'/></method><method return='char' abstract='true' name='readChar'><exception type='java.io.IOException' name='IOException'/></method><method return='double' abstract='true' name='readDouble'><exception type='java.io.IOException' name='IOException'/></method><method return='float' abstract='true' name='readFloat'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='readFully'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='readFully'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='readInt'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' abstract='true' name='readLine'><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='readLong'><exception type='java.io.IOException' name='IOException'/></method><method return='short' abstract='true' name='readShort'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' abstract='true' name='readUTF'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='readUnsignedByte'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='readUnsignedShort'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='skipBytes'><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='DataOutput'><method abstract='true' name='write'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeBoolean'><parameter type='boolean' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeByte'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeBytes'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeChar'><parameter type='int' name='oneByte'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeChars'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeDouble'><parameter type='double' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeFloat'><parameter type='float' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeInt'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeLong'><parameter type='long' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeShort'><parameter type='int' name='val'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeUTF'><parameter type='java.lang.String' name='str'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='Externalizable'><method abstract='true' name='readExternal'><parameter type='java.io.ObjectInput' name='input'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeExternal'><parameter type='java.io.ObjectOutput' name='output'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='FileFilter'><method return='boolean' abstract='true' name='accept'><parameter type='java.io.File' name='pathname'/></method></interface><interface abstract='true' name='FilenameFilter'><method return='boolean' abstract='true' name='accept'><parameter type='java.io.File' name='dir'/><parameter type='java.lang.String' name='filename'/></method></interface><interface abstract='true' name='Flushable'><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ObjectInput'><method return='int' abstract='true' name='available'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' abstract='true' name='readObject'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='skip'><parameter type='long' name='toSkip'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ObjectInputValidation'><method abstract='true' name='validateObject'><exception type='java.io.InvalidObjectException' name='InvalidObjectException'/></method></interface><interface abstract='true' name='ObjectOutput'><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='byte[]' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='byte[]' name='buffer'/><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeObject'><parameter type='java.lang.Object' name='obj'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ObjectStreamConstants'/><interface abstract='true' name='Serializable'/></package><package name='java.lang'><class extends='java.lang.IncompatibleClassChangeError' name='AbstractMethodError'><constructor type='java.lang.AbstractMethodError' name='AbstractMethodError'/><constructor type='java.lang.AbstractMethodError' name='AbstractMethodError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class visibility='' extends='java.lang.Object' abstract='true' name='AbstractStringBuilder'><method return='int' name='capacity'/><method return='char' name='charAt'><parameter type='int' name='index'/></method><method return='int' name='codePointAt'><parameter type='int' name='index'/></method><method return='int' name='codePointBefore'><parameter type='int' name='index'/></method><method return='int' name='codePointCount'><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method name='ensureCapacity'><parameter type='int' name='min'/></method><method name='getChars'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='dest'/><parameter type='int' name='destStart'/></method><method return='int' name='indexOf'><parameter type='java.lang.String' name='string'/></method><method return='int' name='indexOf'><parameter type='java.lang.String' name='subString'/><parameter type='int' name='start'/></method><method return='int' name='lastIndexOf'><parameter type='java.lang.String' name='string'/></method><method return='int' name='lastIndexOf'><parameter type='java.lang.String' name='subString'/><parameter type='int' name='start'/></method><method return='int' name='length'/><method return='int' name='offsetByCodePoints'><parameter type='int' name='index'/><parameter type='int' name='codePointOffset'/></method><method name='setCharAt'><parameter type='int' name='index'/><parameter type='char' name='ch'/></method><method name='setLength'><parameter type='int' name='length'/></method><method return='java.lang.CharSequence' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.String' name='substring'><parameter type='int' name='start'/></method><method return='java.lang.String' name='substring'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='trimToSize'/></class><class extends='java.lang.RuntimeException' name='ArithmeticException'><constructor type='java.lang.ArithmeticException' name='ArithmeticException'/><constructor type='java.lang.ArithmeticException' name='ArithmeticException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.IndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'><constructor type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><constructor type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'><parameter type='int' name='index'/></constructor><constructor type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='ArrayStoreException'><constructor type='java.lang.ArrayStoreException' name='ArrayStoreException'/><constructor type='java.lang.ArrayStoreException' name='ArrayStoreException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Error' name='AssertionError'><constructor type='java.lang.AssertionError' name='AssertionError'/><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='java.lang.Object' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='boolean' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='char' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='int' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='long' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='float' name='detailMessage'/></constructor><constructor type='java.lang.AssertionError' name='AssertionError'><parameter type='double' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Boolean' final='true'><constructor type='java.lang.Boolean' name='Boolean'><parameter type='java.lang.String' name='string'/></constructor><constructor type='java.lang.Boolean' name='Boolean'><parameter type='boolean' name='value'/></constructor><method return='boolean' name='booleanValue'/><method return='int' name='compareTo'><parameter type='java.lang.Boolean' name='that'/></method><method return='boolean' static='true' name='getBoolean'><parameter type='java.lang.String' name='string'/></method><method return='boolean' static='true' name='parseBoolean'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='boolean' name='value'/></method><method return='java.lang.Boolean' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.Boolean' static='true' name='valueOf'><parameter type='boolean' name='b'/></method></class><class extends='java.lang.Number' name='Byte' final='true'><constructor type='java.lang.Byte' name='Byte'><parameter type='byte' name='value'/></constructor><constructor type='java.lang.Byte' name='Byte'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><method return='int' name='compareTo'><parameter type='java.lang.Byte' name='object'/></method><method return='java.lang.Byte' static='true' name='decode'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='int' name='intValue'/><method return='long' name='longValue'/><method return='byte' static='true' name='parseByte'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='byte' static='true' name='parseByte'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='byte' name='value'/></method><method return='java.lang.Byte' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Byte' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Byte' static='true' name='valueOf'><parameter type='byte' name='b'/></method></class><class extends='java.lang.Object' name='Character' final='true'><constructor type='java.lang.Character' name='Character'><parameter type='char' name='value'/></constructor><method return='int' static='true' name='charCount'><parameter type='int' name='codePoint'/></method><method return='char' name='charValue'/><method return='int' static='true' name='codePointAt'><parameter type='java.lang.CharSequence' name='seq'/><parameter type='int' name='index'/></method><method return='int' static='true' name='codePointAt'><parameter type='char[]' name='seq'/><parameter type='int' name='index'/></method><method return='int' static='true' name='codePointAt'><parameter type='char[]' name='seq'/><parameter type='int' name='index'/><parameter type='int' name='limit'/></method><method return='int' static='true' name='codePointBefore'><parameter type='java.lang.CharSequence' name='seq'/><parameter type='int' name='index'/></method><method return='int' static='true' name='codePointBefore'><parameter type='char[]' name='seq'/><parameter type='int' name='index'/></method><method return='int' static='true' name='codePointBefore'><parameter type='char[]' name='seq'/><parameter type='int' name='index'/><parameter type='int' name='start'/></method><method return='int' static='true' name='codePointCount'><parameter type='java.lang.CharSequence' name='seq'/><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method return='int' static='true' name='codePointCount'><parameter type='char[]' name='seq'/><parameter type='int' name='offset'/><parameter type='int' name='count'/></method><method return='int' name='compareTo'><parameter type='java.lang.Character' name='c'/></method><method return='int' static='true' name='digit'><parameter type='char' name='c'/><parameter type='int' name='radix'/></method><method return='int' static='true' name='digit'><parameter type='int' name='codePoint'/><parameter type='int' name='radix'/></method><method return='char' static='true' name='forDigit'><parameter type='int' name='digit'/><parameter type='int' name='radix'/></method><method return='byte' static='true' name='getDirectionality'><parameter type='char' name='c'/></method><method return='byte' static='true' name='getDirectionality'><parameter type='int' name='codePoint'/></method><method return='int' static='true' name='getNumericValue'><parameter type='char' name='c'/></method><method return='int' static='true' name='getNumericValue'><parameter type='int' name='codePoint'/></method><method return='int' static='true' name='getType'><parameter type='char' name='c'/></method><method return='int' static='true' name='getType'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isDefined'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isDefined'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isDigit'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isDigit'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isHighSurrogate'><parameter type='char' name='ch'/></method><method return='boolean' static='true' name='isISOControl'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isISOControl'><parameter type='int' name='c'/></method><method return='boolean' static='true' name='isIdentifierIgnorable'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isIdentifierIgnorable'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isJavaIdentifierPart'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isJavaIdentifierPart'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isJavaIdentifierStart'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isJavaIdentifierStart'><parameter type='int' name='codePoint'/></method><method deprecated='1' return='boolean' static='true' name='isJavaLetter'><parameter type='char' name='c'/></method><method deprecated='1' return='boolean' static='true' name='isJavaLetterOrDigit'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isLetter'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isLetter'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isLetterOrDigit'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isLetterOrDigit'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isLowSurrogate'><parameter type='char' name='ch'/></method><method return='boolean' static='true' name='isLowerCase'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isLowerCase'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isMirrored'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isMirrored'><parameter type='int' name='codePoint'/></method><method deprecated='1' return='boolean' static='true' name='isSpace'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isSpaceChar'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isSpaceChar'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isSupplementaryCodePoint'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isSurrogatePair'><parameter type='char' name='high'/><parameter type='char' name='low'/></method><method return='boolean' static='true' name='isTitleCase'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isTitleCase'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isUnicodeIdentifierPart'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isUnicodeIdentifierPart'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isUnicodeIdentifierStart'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isUnicodeIdentifierStart'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isUpperCase'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isUpperCase'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isValidCodePoint'><parameter type='int' name='codePoint'/></method><method return='boolean' static='true' name='isWhitespace'><parameter type='char' name='c'/></method><method return='boolean' static='true' name='isWhitespace'><parameter type='int' name='codePoint'/></method><method return='int' static='true' name='offsetByCodePoints'><parameter type='java.lang.CharSequence' name='seq'/><parameter type='int' name='index'/><parameter type='int' name='codePointOffset'/></method><method return='int' static='true' name='offsetByCodePoints'><parameter type='char[]' name='seq'/><parameter type='int' name='start'/><parameter type='int' name='count'/><parameter type='int' name='index'/><parameter type='int' name='codePointOffset'/></method><method return='char' static='true' name='reverseBytes'><parameter type='char' name='c'/></method><method return='int' static='true' name='toChars'><parameter type='int' name='codePoint'/><parameter type='char[]' name='dst'/><parameter type='int' name='dstIndex'/></method><method return='char[]' static='true' name='toChars'><parameter type='int' name='codePoint'/></method><method return='int' static='true' name='toCodePoint'><parameter type='char' name='high'/><parameter type='char' name='low'/></method><method return='char' static='true' name='toLowerCase'><parameter type='char' name='c'/></method><method return='int' static='true' name='toLowerCase'><parameter type='int' name='codePoint'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='char' name='value'/></method><method return='char' static='true' name='toTitleCase'><parameter type='char' name='c'/></method><method return='int' static='true' name='toTitleCase'><parameter type='int' name='codePoint'/></method><method return='char' static='true' name='toUpperCase'><parameter type='char' name='c'/></method><method return='int' static='true' name='toUpperCase'><parameter type='int' name='codePoint'/></method><method return='java.lang.Character' static='true' name='valueOf'><parameter type='char' name='c'/></method></class><class extends='java.lang.Object' static='true' name='Character.Subset'><constructor visibility='protected' type='java.lang.Character.Subset' name='Character.Subset'><parameter type='java.lang.String' name='string'/></constructor><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='object'/></method><method return='int' name='hashCode' final='true'/><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Character.Subset' static='true' name='Character.UnicodeBlock' final='true'><method return='java.lang.Character.UnicodeBlock' static='true' name='forName'><parameter type='java.lang.String' name='blockName'/></method><method return='java.lang.Character.UnicodeBlock' static='true' name='of'><parameter type='char' name='c'/></method><method return='java.lang.Character.UnicodeBlock' static='true' name='of'><parameter type='int' name='codePoint'/></method></class><class extends='java.lang.Object' name='Class' final='true'><method return='java.lang.Class&lt;? extends U&gt;' name='asSubclass'><parameter type='java.lang.Class&lt;U&gt;' name='clazz'/></method><method return='T' name='cast'><parameter type='java.lang.Object' name='obj'/></method><method return='boolean' native='true' name='desiredAssertionStatus'/><method return='java.lang.Class&lt;?&gt;' static='true' name='forName'><parameter type='java.lang.String' name='className'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method return='java.lang.Class&lt;?&gt;' static='true' name='forName'><parameter type='java.lang.String' name='className'/><parameter type='boolean' name='initializeBoolean'/><parameter type='java.lang.ClassLoader' name='classLoader'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method return='A' name='getAnnotation'><parameter type='java.lang.Class&lt;A&gt;' name='annotationClass'/></method><method return='java.lang.annotation.Annotation[]' name='getAnnotations'/><method return='java.lang.String' name='getCanonicalName'/><method return='java.lang.ClassLoader' name='getClassLoader'/><method return='java.lang.Class&lt;?&gt;[]' name='getClasses'/><method return='java.lang.Class&lt;?&gt;' native='true' name='getComponentType'/><method return='java.lang.reflect.Constructor&lt;T&gt;' api_removed='9' name='getConstructor'><parameter type='java.lang.Class...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Constructor&lt;T&gt;[]' name='getConstructors'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.annotation.Annotation[]' native='true' name='getDeclaredAnnotations'/><method return='java.lang.Class&lt;?&gt;[]' name='getDeclaredClasses'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Constructor&lt;T&gt;' api_removed='9' name='getDeclaredConstructor'><parameter type='java.lang.Class...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Constructor&lt;T&gt;[]' name='getDeclaredConstructors'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Field' name='getDeclaredField'><parameter type='java.lang.String' name='name'/><exception type='java.lang.NoSuchFieldException' name='NoSuchFieldException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Field[]' name='getDeclaredFields'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Method' api_removed='9' name='getDeclaredMethod'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Method[]' name='getDeclaredMethods'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.Class&lt;?&gt;' native='true' name='getDeclaringClass'/><method return='java.lang.Class&lt;?&gt;' native='true' name='getEnclosingClass'/><method return='java.lang.reflect.Constructor&lt;?&gt;' native='true' name='getEnclosingConstructor'/><method return='java.lang.reflect.Method' native='true' name='getEnclosingMethod'/><method return='T[]' name='getEnumConstants'/><method return='java.lang.reflect.Field' name='getField'><parameter type='java.lang.String' name='name'/><exception type='java.lang.NoSuchFieldException' name='NoSuchFieldException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Field[]' name='getFields'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Type[]' name='getGenericInterfaces'/><method return='java.lang.reflect.Type' name='getGenericSuperclass'/><method return='java.lang.Class&lt;?&gt;[]' native='true' name='getInterfaces'/><method return='java.lang.reflect.Method' api_removed='9' name='getMethod'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Method[]' name='getMethods'><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='int' name='getModifiers'/><method return='java.lang.String' native='true' name='getName'/><method return='java.lang.Package' name='getPackage'/><method return='java.security.ProtectionDomain' name='getProtectionDomain'/><method return='java.net.URL' name='getResource'><parameter type='java.lang.String' name='resName'/></method><method return='java.io.InputStream' name='getResourceAsStream'><parameter type='java.lang.String' name='resName'/></method><method return='java.lang.Object[]' name='getSigners'/><method return='java.lang.String' name='getSimpleName'/><method return='java.lang.Class&lt;? super T&gt;' native='true' name='getSuperclass'/><method return='java.lang.reflect.TypeVariable&lt;java.lang.Class&lt;T&gt;&gt;[]' synchronized='true' name='getTypeParameters'/><method return='boolean' name='isAnnotation'/><method return='boolean' name='isAnnotationPresent'><parameter type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationClass'/></method><method return='boolean' native='true' name='isAnonymousClass'/><method return='boolean' name='isArray'/><method return='boolean' native='true' name='isAssignableFrom'><parameter type='java.lang.Class&lt;?&gt;' name='cls'/></method><method return='boolean' name='isEnum'/><method return='boolean' native='true' name='isInstance'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' native='true' name='isInterface'/><method return='boolean' name='isLocalClass'/><method return='boolean' name='isMemberClass'/><method return='boolean' native='true' name='isPrimitive'/><method return='boolean' name='isSynthetic'/><method return='T' native='true' name='newInstance'><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='java.lang.reflect.Constructor&lt;T&gt;' name='getConstructor' api_added='9'><parameter type='java.lang.Class&lt;?&gt;...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Constructor&lt;T&gt;' name='getDeclaredConstructor' api_added='9'><parameter type='java.lang.Class&lt;?&gt;...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Method' name='getDeclaredMethod' api_added='9'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class&lt;?&gt;...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='java.lang.reflect.Method' name='getMethod' api_added='9'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Class&lt;?&gt;...' name='parameterTypes'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><exception type='java.lang.SecurityException' name='SecurityException'/></method></class><class extends='java.lang.RuntimeException' name='ClassCastException'><constructor type='java.lang.ClassCastException' name='ClassCastException'/><constructor type='java.lang.ClassCastException' name='ClassCastException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.LinkageError' name='ClassCircularityError'><constructor type='java.lang.ClassCircularityError' name='ClassCircularityError'/><constructor type='java.lang.ClassCircularityError' name='ClassCircularityError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.LinkageError' name='ClassFormatError'><constructor type='java.lang.ClassFormatError' name='ClassFormatError'/><constructor type='java.lang.ClassFormatError' name='ClassFormatError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='ClassLoader'><constructor visibility='protected' type='java.lang.ClassLoader' name='ClassLoader'/><constructor visibility='protected' type='java.lang.ClassLoader' name='ClassLoader'><parameter type='java.lang.ClassLoader' name='parentLoader'/></constructor><method name='clearAssertionStatus'/><method visibility='protected' deprecated='1' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='byte[]' name='classRep'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.lang.ClassFormatError' name='ClassFormatError'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='java.lang.String' name='className'/><parameter type='byte[]' name='classRep'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.lang.ClassFormatError' name='ClassFormatError'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='java.lang.String' name='className'/><parameter type='byte[]' name='classRep'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='java.security.ProtectionDomain' name='protectionDomain'/><exception type='java.lang.ClassFormatError' name='ClassFormatError'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='java.lang.String' name='name'/><parameter type='java.nio.ByteBuffer' name='b'/><parameter type='java.security.ProtectionDomain' name='protectionDomain'/><exception type='java.lang.ClassFormatError' name='ClassFormatError'/></method><method visibility='protected' return='java.lang.Package' name='definePackage'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='specTitle'/><parameter type='java.lang.String' name='specVersion'/><parameter type='java.lang.String' name='specVendor'/><parameter type='java.lang.String' name='implTitle'/><parameter type='java.lang.String' name='implVersion'/><parameter type='java.lang.String' name='implVendor'/><parameter type='java.net.URL' name='sealBase'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='findClass'><parameter type='java.lang.String' name='className'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method visibility='protected' return='java.lang.String' name='findLibrary'><parameter type='java.lang.String' name='libName'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='findLoadedClass' final='true'><parameter type='java.lang.String' name='className'/></method><method visibility='protected' return='java.net.URL' name='findResource'><parameter type='java.lang.String' name='resName'/></method><method visibility='protected' return='java.util.Enumeration&lt;java.net.URL&gt;' name='findResources'><parameter type='java.lang.String' name='resName'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='findSystemClass' final='true'><parameter type='java.lang.String' name='className'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method visibility='protected' return='java.lang.Package' name='getPackage'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' return='java.lang.Package[]' name='getPackages'/><method return='java.lang.ClassLoader' name='getParent' final='true'/><method return='java.net.URL' name='getResource'><parameter type='java.lang.String' name='resName'/></method><method return='java.io.InputStream' name='getResourceAsStream'><parameter type='java.lang.String' name='resName'/></method><method return='java.util.Enumeration&lt;java.net.URL&gt;' name='getResources'><parameter type='java.lang.String' name='resName'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.ClassLoader' static='true' name='getSystemClassLoader'/><method return='java.net.URL' static='true' name='getSystemResource'><parameter type='java.lang.String' name='resName'/></method><method return='java.io.InputStream' static='true' name='getSystemResourceAsStream'><parameter type='java.lang.String' name='resName'/></method><method return='java.util.Enumeration&lt;java.net.URL&gt;' static='true' name='getSystemResources'><parameter type='java.lang.String' name='resName'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Class&lt;?&gt;' name='loadClass'><parameter type='java.lang.String' name='className'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='loadClass'><parameter type='java.lang.String' name='className'/><parameter type='boolean' name='resolve'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method visibility='protected' name='resolveClass' final='true'><parameter type='java.lang.Class&lt;?&gt;' name='clazz'/></method><method name='setClassAssertionStatus'><parameter type='java.lang.String' name='cname'/><parameter type='boolean' name='enable'/></method><method name='setDefaultAssertionStatus'><parameter type='boolean' name='enable'/></method><method name='setPackageAssertionStatus'><parameter type='java.lang.String' name='pname'/><parameter type='boolean' name='enable'/></method><method visibility='protected' name='setSigners' final='true'><parameter type='java.lang.Class&lt;?&gt;' name='c'/><parameter type='java.lang.Object[]' name='signers'/></method></class><class extends='java.lang.Exception' name='ClassNotFoundException'><constructor type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><constructor type='java.lang.ClassNotFoundException' name='ClassNotFoundException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.ClassNotFoundException' name='ClassNotFoundException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='exception'/></constructor><method return='java.lang.Throwable' name='getException'/></class><class extends='java.lang.Exception' name='CloneNotSupportedException'><constructor type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/><constructor type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Compiler' final='true'><method return='java.lang.Object' static='true' name='command'><parameter type='java.lang.Object' name='cmd'/></method><method return='boolean' static='true' name='compileClass'><parameter type='java.lang.Class&lt;?&gt;' name='classToCompile'/></method><method return='boolean' static='true' name='compileClasses'><parameter type='java.lang.String' name='nameRoot'/></method><method static='true' name='disable'/><method static='true' name='enable'/></class><class extends='java.lang.Object' abstract='true' name='Deprecated'/><class extends='java.lang.Number' name='Double' final='true'><constructor type='java.lang.Double' name='Double'><parameter type='double' name='value'/></constructor><constructor type='java.lang.Double' name='Double'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><method return='int' static='true' name='compare'><parameter type='double' name='double1'/><parameter type='double' name='double2'/></method><method return='int' name='compareTo'><parameter type='java.lang.Double' name='object'/></method><method return='long' native='true' static='true' name='doubleToLongBits'><parameter type='double' name='value'/></method><method return='long' native='true' static='true' name='doubleToRawLongBits'><parameter type='double' name='value'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='int' name='intValue'/><method return='boolean' name='isInfinite'/><method return='boolean' static='true' name='isInfinite'><parameter type='double' name='d'/></method><method return='boolean' name='isNaN'/><method return='boolean' static='true' name='isNaN'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='longBitsToDouble'><parameter type='long' name='bits'/></method><method return='long' name='longValue'/><method return='double' static='true' name='parseDouble'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.String' static='true' name='toHexString'><parameter type='double' name='d'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='double' name='d'/></method><method return='java.lang.Double' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Double' static='true' name='valueOf'><parameter type='double' name='d'/></method></class><class extends='java.lang.Object' abstract='true' name='Enum'><constructor visibility='protected' type='java.lang.Enum' name='Enum'><parameter type='java.lang.String' name='name'/><parameter type='int' name='ordinal'/></constructor><method visibility='protected' return='java.lang.Object' name='clone' final='true'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='int' name='compareTo' final='true'><parameter type='E' name='o'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='other'/></method><method return='java.lang.Class&lt;E&gt;' name='getDeclaringClass' final='true'/><method return='int' name='hashCode' final='true'/><method return='java.lang.String' name='name' final='true'/><method return='int' name='ordinal' final='true'/><method return='T' static='true' name='valueOf'><parameter type='java.lang.Class&lt;T&gt;' name='enumType'/><parameter type='java.lang.String' name='name'/></method><method visibility='protected' name='finalize' api_added='9' final='true'/></class><class extends='java.lang.RuntimeException' name='EnumConstantNotPresentException'><constructor type='java.lang.EnumConstantNotPresentException' name='EnumConstantNotPresentException'><parameter type='java.lang.Class&lt;? extends java.lang.Enum&gt;' name='enumType'/><parameter type='java.lang.String' name='constantName'/></constructor><method return='java.lang.String' name='constantName'/><method return='java.lang.Class&lt;? extends java.lang.Enum&gt;' name='enumType'/></class><class extends='java.lang.Throwable' name='Error'><constructor type='java.lang.Error' name='Error'/><constructor type='java.lang.Error' name='Error'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.Error' name='Error'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='throwable'/></constructor><constructor type='java.lang.Error' name='Error'><parameter type='java.lang.Throwable' name='throwable'/></constructor></class><class extends='java.lang.Throwable' name='Exception'><constructor type='java.lang.Exception' name='Exception'/><constructor type='java.lang.Exception' name='Exception'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.Exception' name='Exception'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='throwable'/></constructor><constructor type='java.lang.Exception' name='Exception'><parameter type='java.lang.Throwable' name='throwable'/></constructor></class><class extends='java.lang.LinkageError' name='ExceptionInInitializerError'><constructor type='java.lang.ExceptionInInitializerError' name='ExceptionInInitializerError'/><constructor type='java.lang.ExceptionInInitializerError' name='ExceptionInInitializerError'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.ExceptionInInitializerError' name='ExceptionInInitializerError'><parameter type='java.lang.Throwable' name='exception'/></constructor><method return='java.lang.Throwable' name='getException'/></class><class extends='java.lang.Number' name='Float' final='true'><constructor type='java.lang.Float' name='Float'><parameter type='float' name='value'/></constructor><constructor type='java.lang.Float' name='Float'><parameter type='double' name='value'/></constructor><constructor type='java.lang.Float' name='Float'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><method return='int' static='true' name='compare'><parameter type='float' name='float1'/><parameter type='float' name='float2'/></method><method return='int' name='compareTo'><parameter type='java.lang.Float' name='object'/></method><method return='double' name='doubleValue'/><method return='int' native='true' static='true' name='floatToIntBits'><parameter type='float' name='value'/></method><method return='int' native='true' static='true' name='floatToRawIntBits'><parameter type='float' name='value'/></method><method return='float' name='floatValue'/><method return='float' native='true' static='true' name='intBitsToFloat'><parameter type='int' name='bits'/></method><method return='int' name='intValue'/><method return='boolean' name='isInfinite'/><method return='boolean' static='true' name='isInfinite'><parameter type='float' name='f'/></method><method return='boolean' name='isNaN'/><method return='boolean' static='true' name='isNaN'><parameter type='float' name='f'/></method><method return='long' name='longValue'/><method return='float' static='true' name='parseFloat'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.String' static='true' name='toHexString'><parameter type='float' name='f'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='float' name='f'/></method><method return='java.lang.Float' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Float' static='true' name='valueOf'><parameter type='float' name='f'/></method></class><class extends='java.lang.IncompatibleClassChangeError' name='IllegalAccessError'><constructor type='java.lang.IllegalAccessError' name='IllegalAccessError'/><constructor type='java.lang.IllegalAccessError' name='IllegalAccessError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Exception' name='IllegalAccessException'><constructor type='java.lang.IllegalAccessException' name='IllegalAccessException'/><constructor type='java.lang.IllegalAccessException' name='IllegalAccessException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='IllegalArgumentException'><constructor type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><constructor type='java.lang.IllegalArgumentException' name='IllegalArgumentException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.IllegalArgumentException' name='IllegalArgumentException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.lang.IllegalArgumentException' name='IllegalArgumentException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.RuntimeException' name='IllegalMonitorStateException'><constructor type='java.lang.IllegalMonitorStateException' name='IllegalMonitorStateException'/><constructor type='java.lang.IllegalMonitorStateException' name='IllegalMonitorStateException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='IllegalStateException'><constructor type='java.lang.IllegalStateException' name='IllegalStateException'/><constructor type='java.lang.IllegalStateException' name='IllegalStateException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.IllegalStateException' name='IllegalStateException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.lang.IllegalStateException' name='IllegalStateException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.IllegalArgumentException' name='IllegalThreadStateException'><constructor type='java.lang.IllegalThreadStateException' name='IllegalThreadStateException'/><constructor type='java.lang.IllegalThreadStateException' name='IllegalThreadStateException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.LinkageError' name='IncompatibleClassChangeError'><constructor type='java.lang.IncompatibleClassChangeError' name='IncompatibleClassChangeError'/><constructor type='java.lang.IncompatibleClassChangeError' name='IncompatibleClassChangeError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='IndexOutOfBoundsException'><constructor type='java.lang.IndexOutOfBoundsException' name='IndexOutOfBoundsException'/><constructor type='java.lang.IndexOutOfBoundsException' name='IndexOutOfBoundsException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.ThreadLocal' name='InheritableThreadLocal'><constructor type='java.lang.InheritableThreadLocal' name='InheritableThreadLocal'/><method visibility='protected' return='T' name='childValue'><parameter type='T' name='parentValue'/></method></class><class extends='java.lang.IncompatibleClassChangeError' name='InstantiationError'><constructor type='java.lang.InstantiationError' name='InstantiationError'/><constructor type='java.lang.InstantiationError' name='InstantiationError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Exception' name='InstantiationException'><constructor type='java.lang.InstantiationException' name='InstantiationException'/><constructor type='java.lang.InstantiationException' name='InstantiationException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Number' name='Integer' final='true'><constructor type='java.lang.Integer' name='Integer'><parameter type='int' name='value'/></constructor><constructor type='java.lang.Integer' name='Integer'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><method return='int' static='true' name='bitCount'><parameter type='int' name='i'/></method><method return='int' name='compareTo'><parameter type='java.lang.Integer' name='object'/></method><method return='java.lang.Integer' static='true' name='decode'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='java.lang.Integer' static='true' name='getInteger'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.Integer' static='true' name='getInteger'><parameter type='java.lang.String' name='string'/><parameter type='int' name='defaultValue'/></method><method return='java.lang.Integer' static='true' name='getInteger'><parameter type='java.lang.String' name='string'/><parameter type='java.lang.Integer' name='defaultValue'/></method><method return='int' static='true' name='highestOneBit'><parameter type='int' name='i'/></method><method return='int' name='intValue'/><method return='long' name='longValue'/><method return='int' static='true' name='lowestOneBit'><parameter type='int' name='i'/></method><method return='int' static='true' name='numberOfLeadingZeros'><parameter type='int' name='i'/></method><method return='int' static='true' name='numberOfTrailingZeros'><parameter type='int' name='i'/></method><method return='int' static='true' name='parseInt'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='int' static='true' name='parseInt'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='int' static='true' name='reverse'><parameter type='int' name='i'/></method><method return='int' static='true' name='reverseBytes'><parameter type='int' name='i'/></method><method return='int' static='true' name='rotateLeft'><parameter type='int' name='i'/><parameter type='int' name='distance'/></method><method return='int' static='true' name='rotateRight'><parameter type='int' name='i'/><parameter type='int' name='distance'/></method><method return='int' static='true' name='signum'><parameter type='int' name='i'/></method><method return='java.lang.String' static='true' name='toBinaryString'><parameter type='int' name='i'/></method><method return='java.lang.String' static='true' name='toHexString'><parameter type='int' name='i'/></method><method return='java.lang.String' static='true' name='toOctalString'><parameter type='int' name='i'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='int' name='i'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='int' name='i'/><parameter type='int' name='radix'/></method><method return='java.lang.Integer' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Integer' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Integer' static='true' name='valueOf'><parameter type='int' name='i'/></method></class><class extends='java.lang.VirtualMachineError' name='InternalError'><constructor type='java.lang.InternalError' name='InternalError'/><constructor type='java.lang.InternalError' name='InternalError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Exception' name='InterruptedException'><constructor type='java.lang.InterruptedException' name='InterruptedException'/><constructor type='java.lang.InterruptedException' name='InterruptedException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Error' name='LinkageError'><constructor type='java.lang.LinkageError' name='LinkageError'/><constructor type='java.lang.LinkageError' name='LinkageError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Number' name='Long' final='true'><constructor type='java.lang.Long' name='Long'><parameter type='long' name='value'/></constructor><constructor type='java.lang.Long' name='Long'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><method return='int' static='true' name='bitCount'><parameter type='long' name='lng'/></method><method return='int' name='compareTo'><parameter type='java.lang.Long' name='object'/></method><method return='java.lang.Long' static='true' name='decode'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='java.lang.Long' static='true' name='getLong'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.Long' static='true' name='getLong'><parameter type='java.lang.String' name='string'/><parameter type='long' name='defaultValue'/></method><method return='java.lang.Long' static='true' name='getLong'><parameter type='java.lang.String' name='string'/><parameter type='java.lang.Long' name='defaultValue'/></method><method return='long' static='true' name='highestOneBit'><parameter type='long' name='lng'/></method><method return='int' name='intValue'/><method return='long' name='longValue'/><method return='long' static='true' name='lowestOneBit'><parameter type='long' name='lng'/></method><method return='int' static='true' name='numberOfLeadingZeros'><parameter type='long' name='lng'/></method><method return='int' static='true' name='numberOfTrailingZeros'><parameter type='long' name='lng'/></method><method return='long' static='true' name='parseLong'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='long' static='true' name='parseLong'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='long' static='true' name='reverse'><parameter type='long' name='lng'/></method><method return='long' static='true' name='reverseBytes'><parameter type='long' name='lng'/></method><method return='long' static='true' name='rotateLeft'><parameter type='long' name='lng'/><parameter type='int' name='distance'/></method><method return='long' static='true' name='rotateRight'><parameter type='long' name='lng'/><parameter type='int' name='distance'/></method><method return='int' static='true' name='signum'><parameter type='long' name='lng'/></method><method return='java.lang.String' static='true' name='toBinaryString'><parameter type='long' name='l'/></method><method return='java.lang.String' static='true' name='toHexString'><parameter type='long' name='l'/></method><method return='java.lang.String' static='true' name='toOctalString'><parameter type='long' name='l'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='long' name='l'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='long' name='l'/><parameter type='int' name='radix'/></method><method return='java.lang.Long' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Long' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Long' static='true' name='valueOf'><parameter type='long' name='lng'/></method></class><class extends='java.lang.Object' name='Math' final='true'><method return='double' native='true' static='true' name='IEEEremainder'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' static='true' name='abs'><parameter type='double' name='d'/></method><method return='float' static='true' name='abs'><parameter type='float' name='f'/></method><method return='int' static='true' name='abs'><parameter type='int' name='i'/></method><method return='long' static='true' name='abs'><parameter type='long' name='l'/></method><method return='double' native='true' static='true' name='acos'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='asin'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='atan'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='atan2'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' native='true' static='true' name='cbrt'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='ceil'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='cos'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='cosh'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='exp'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='expm1'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='floor'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='hypot'><parameter type='double' name='x'/><parameter type='double' name='y'/></method><method return='double' native='true' static='true' name='log'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='log10'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='log1p'><parameter type='double' name='d'/></method><method return='double' static='true' name='max'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='float' static='true' name='max'><parameter type='float' name='f1'/><parameter type='float' name='f2'/></method><method return='int' static='true' name='max'><parameter type='int' name='i1'/><parameter type='int' name='i2'/></method><method return='long' static='true' name='max'><parameter type='long' name='l1'/><parameter type='long' name='l2'/></method><method return='double' static='true' name='min'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='float' static='true' name='min'><parameter type='float' name='f1'/><parameter type='float' name='f2'/></method><method return='int' static='true' name='min'><parameter type='int' name='i1'/><parameter type='int' name='i2'/></method><method return='long' static='true' name='min'><parameter type='long' name='l1'/><parameter type='long' name='l2'/></method><method return='double' native='true' static='true' name='pow'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' static='true' name='random'/><method return='double' native='true' static='true' name='rint'><parameter type='double' name='d'/></method><method return='long' static='true' name='round'><parameter type='double' name='d'/></method><method return='int' static='true' name='round'><parameter type='float' name='f'/></method><method return='double' static='true' name='signum'><parameter type='double' name='d'/></method><method return='float' static='true' name='signum'><parameter type='float' name='f'/></method><method return='double' native='true' static='true' name='sin'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='sinh'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='sqrt'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='tan'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='tanh'><parameter type='double' name='d'/></method><method return='double' static='true' name='toDegrees'><parameter type='double' name='angrad'/></method><method return='double' static='true' name='toRadians'><parameter type='double' name='angdeg'/></method><method return='double' static='true' name='ulp'><parameter type='double' name='d'/></method><method return='float' static='true' name='ulp'><parameter type='float' name='f'/></method><method return='double' static='true' name='copySign' api_added='9'><parameter type='double' name='magnitude'/><parameter type='double' name='sign'/></method><method return='float' static='true' name='copySign' api_added='9'><parameter type='float' name='magnitude'/><parameter type='float' name='sign'/></method><method return='int' static='true' name='getExponent' api_added='9'><parameter type='float' name='f'/></method><method return='int' static='true' name='getExponent' api_added='9'><parameter type='double' name='d'/></method><method return='double' static='true' name='nextAfter' api_added='9'><parameter type='double' name='start'/><parameter type='double' name='direction'/></method><method return='float' static='true' name='nextAfter' api_added='9'><parameter type='float' name='start'/><parameter type='double' name='direction'/></method><method return='double' static='true' name='nextUp' api_added='9'><parameter type='double' name='d'/></method><method return='float' static='true' name='nextUp' api_added='9'><parameter type='float' name='f'/></method><method return='double' static='true' name='scalb' api_added='9'><parameter type='double' name='d'/><parameter type='int' name='scaleFactor'/></method><method return='float' static='true' name='scalb' api_added='9'><parameter type='float' name='d'/><parameter type='int' name='scaleFactor'/></method></class><class extends='java.lang.RuntimeException' name='NegativeArraySizeException'><constructor type='java.lang.NegativeArraySizeException' name='NegativeArraySizeException'/><constructor type='java.lang.NegativeArraySizeException' name='NegativeArraySizeException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.LinkageError' name='NoClassDefFoundError'><constructor type='java.lang.NoClassDefFoundError' name='NoClassDefFoundError'/><constructor type='java.lang.NoClassDefFoundError' name='NoClassDefFoundError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.IncompatibleClassChangeError' name='NoSuchFieldError'><constructor type='java.lang.NoSuchFieldError' name='NoSuchFieldError'/><constructor type='java.lang.NoSuchFieldError' name='NoSuchFieldError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Exception' name='NoSuchFieldException'><constructor type='java.lang.NoSuchFieldException' name='NoSuchFieldException'/><constructor type='java.lang.NoSuchFieldException' name='NoSuchFieldException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.IncompatibleClassChangeError' name='NoSuchMethodError'><constructor type='java.lang.NoSuchMethodError' name='NoSuchMethodError'/><constructor type='java.lang.NoSuchMethodError' name='NoSuchMethodError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Exception' name='NoSuchMethodException'><constructor type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/><constructor type='java.lang.NoSuchMethodException' name='NoSuchMethodException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='NullPointerException'><constructor type='java.lang.NullPointerException' name='NullPointerException'/><constructor type='java.lang.NullPointerException' name='NullPointerException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Number'><constructor type='java.lang.Number' name='Number'/><method return='byte' name='byteValue'/><method return='double' abstract='true' name='doubleValue'/><method return='float' abstract='true' name='floatValue'/><method return='int' abstract='true' name='intValue'/><method return='long' abstract='true' name='longValue'/><method return='short' name='shortValue'/></class><class extends='java.lang.IllegalArgumentException' name='NumberFormatException'><constructor type='java.lang.NumberFormatException' name='NumberFormatException'/><constructor type='java.lang.NumberFormatException' name='NumberFormatException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class name='Object'><constructor type='java.lang.Object' name='Object'/><method visibility='protected' return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='boolean' name='equals'><parameter type='java.lang.Object' name='o'/></method><method visibility='protected' name='finalize'><exception type='java.lang.Throwable' name='Throwable'/></method><method return='java.lang.Class&lt;? extends java.lang.Object&gt;' native='true' name='getClass' final='true'/><method return='int' native='true' name='hashCode'/><method native='true' name='notify' final='true'/><method native='true' name='notifyAll' final='true'/><method return='java.lang.String' name='toString'/><method name='wait' final='true'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='wait' final='true'><parameter type='long' name='time'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method native='true' name='wait' final='true'><parameter type='long' name='time'/><parameter type='int' name='frac'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.VirtualMachineError' name='OutOfMemoryError'><constructor type='java.lang.OutOfMemoryError' name='OutOfMemoryError'/><constructor type='java.lang.OutOfMemoryError' name='OutOfMemoryError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Override'/><class extends='java.lang.Object' name='Package'><method return='T' api_removed='9' name='getAnnotation'><parameter type='java.lang.Class&lt;T&gt;' name='annotationType'/></method><method return='java.lang.annotation.Annotation[]' name='getAnnotations'/><method return='java.lang.annotation.Annotation[]' name='getDeclaredAnnotations'/><method return='java.lang.String' name='getImplementationTitle'/><method return='java.lang.String' name='getImplementationVendor'/><method return='java.lang.String' name='getImplementationVersion'/><method return='java.lang.String' name='getName'/><method return='java.lang.Package' static='true' name='getPackage'><parameter type='java.lang.String' name='packageName'/></method><method return='java.lang.Package[]' static='true' name='getPackages'/><method return='java.lang.String' name='getSpecificationTitle'/><method return='java.lang.String' name='getSpecificationVendor'/><method return='java.lang.String' name='getSpecificationVersion'/><method return='boolean' name='isAnnotationPresent'><parameter type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationType'/></method><method return='boolean' name='isCompatibleWith'><parameter type='java.lang.String' name='version'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='boolean' name='isSealed'/><method return='boolean' name='isSealed'><parameter type='java.net.URL' name='url'/></method><method return='A' name='getAnnotation' api_added='9'><parameter type='java.lang.Class&lt;A&gt;' name='annotationType'/></method></class><class extends='java.lang.Object' abstract='true' name='Process'><constructor type='java.lang.Process' name='Process'/><method abstract='true' name='destroy'/><method return='int' abstract='true' name='exitValue'/><method return='java.io.InputStream' abstract='true' name='getErrorStream'/><method return='java.io.InputStream' abstract='true' name='getInputStream'/><method return='java.io.OutputStream' abstract='true' name='getOutputStream'/><method return='int' abstract='true' name='waitFor'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.Object' name='ProcessBuilder' final='true'><constructor type='java.lang.ProcessBuilder' name='ProcessBuilder'><parameter type='java.lang.String...' name='command'/></constructor><constructor type='java.lang.ProcessBuilder' name='ProcessBuilder'><parameter type='java.util.List&lt;java.lang.String&gt;' name='command'/></constructor><method return='java.util.List&lt;java.lang.String&gt;' name='command'/><method return='java.lang.ProcessBuilder' name='command'><parameter type='java.lang.String...' name='command'/></method><method return='java.lang.ProcessBuilder' name='command'><parameter type='java.util.List&lt;java.lang.String&gt;' name='command'/></method><method return='java.io.File' name='directory'/><method return='java.lang.ProcessBuilder' name='directory'><parameter type='java.io.File' name='directory'/></method><method return='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='environment'/><method return='boolean' name='redirectErrorStream'/><method return='java.lang.ProcessBuilder' name='redirectErrorStream'><parameter type='boolean' name='redirectErrorStream'/></method><method return='java.lang.Process' name='start'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='Runtime'><method name='addShutdownHook'><parameter type='java.lang.Thread' name='hook'/></method><method return='int' name='availableProcessors'/><method return='java.lang.Process' name='exec'><parameter type='java.lang.String[]' name='progArray'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Process' name='exec'><parameter type='java.lang.String[]' name='progArray'/><parameter type='java.lang.String[]' name='envp'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Process' name='exec'><parameter type='java.lang.String[]' name='progArray'/><parameter type='java.lang.String[]' name='envp'/><parameter type='java.io.File' name='directory'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Process' name='exec'><parameter type='java.lang.String' name='prog'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Process' name='exec'><parameter type='java.lang.String' name='prog'/><parameter type='java.lang.String[]' name='envp'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Process' name='exec'><parameter type='java.lang.String' name='prog'/><parameter type='java.lang.String[]' name='envp'/><parameter type='java.io.File' name='directory'/><exception type='java.io.IOException' name='IOException'/></method><method name='exit'><parameter type='int' name='code'/></method><method return='long' native='true' name='freeMemory'/><method native='true' name='gc'/><method deprecated='1' return='java.io.InputStream' name='getLocalizedInputStream'><parameter type='java.io.InputStream' name='stream'/></method><method deprecated='1' return='java.io.OutputStream' name='getLocalizedOutputStream'><parameter type='java.io.OutputStream' name='stream'/></method><method return='java.lang.Runtime' static='true' name='getRuntime'/><method name='halt'><parameter type='int' name='code'/></method><method name='load'><parameter type='java.lang.String' name='pathName'/></method><method name='loadLibrary'><parameter type='java.lang.String' name='libName'/></method><method return='long' native='true' name='maxMemory'/><method return='boolean' name='removeShutdownHook'><parameter type='java.lang.Thread' name='hook'/></method><method name='runFinalization'/><method deprecated='1' static='true' name='runFinalizersOnExit'><parameter type='boolean' name='run'/></method><method return='long' native='true' name='totalMemory'/><method name='traceInstructions'><parameter type='boolean' name='enable'/></method><method name='traceMethodCalls'><parameter type='boolean' name='enable'/></method></class><class extends='java.lang.Exception' name='RuntimeException'><constructor type='java.lang.RuntimeException' name='RuntimeException'/><constructor type='java.lang.RuntimeException' name='RuntimeException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.RuntimeException' name='RuntimeException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='throwable'/></constructor><constructor type='java.lang.RuntimeException' name='RuntimeException'><parameter type='java.lang.Throwable' name='throwable'/></constructor></class><class extends='java.security.BasicPermission' name='RuntimePermission' final='true'><constructor type='java.lang.RuntimePermission' name='RuntimePermission'><parameter type='java.lang.String' name='permissionName'/></constructor><constructor type='java.lang.RuntimePermission' name='RuntimePermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.lang.RuntimeException' name='SecurityException'><constructor type='java.lang.SecurityException' name='SecurityException'/><constructor type='java.lang.SecurityException' name='SecurityException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.SecurityException' name='SecurityException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.lang.SecurityException' name='SecurityException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='SecurityManager'><constructor type='java.lang.SecurityManager' name='SecurityManager'/><method name='checkAccept'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></method><method name='checkAccess'><parameter type='java.lang.Thread' name='thread'/></method><method name='checkAccess'><parameter type='java.lang.ThreadGroup' name='group'/></method><method name='checkAwtEventQueueAccess'/><method name='checkConnect'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></method><method name='checkConnect'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.Object' name='context'/></method><method name='checkCreateClassLoader'/><method name='checkDelete'><parameter type='java.lang.String' name='file'/></method><method name='checkExec'><parameter type='java.lang.String' name='cmd'/></method><method name='checkExit'><parameter type='int' name='status'/></method><method name='checkLink'><parameter type='java.lang.String' name='libName'/></method><method name='checkListen'><parameter type='int' name='port'/></method><method name='checkMemberAccess'><parameter type='java.lang.Class&lt;?&gt;' name='cls'/><parameter type='int' name='type'/></method><method name='checkMulticast'><parameter type='java.net.InetAddress' name='maddr'/></method><method deprecated='1' name='checkMulticast'><parameter type='java.net.InetAddress' name='maddr'/><parameter type='byte' name='ttl'/></method><method name='checkPackageAccess'><parameter type='java.lang.String' name='packageName'/></method><method name='checkPackageDefinition'><parameter type='java.lang.String' name='packageName'/></method><method name='checkPermission'><parameter type='java.security.Permission' name='permission'/></method><method name='checkPermission'><parameter type='java.security.Permission' name='permission'/><parameter type='java.lang.Object' name='context'/></method><method name='checkPrintJobAccess'/><method name='checkPropertiesAccess'/><method name='checkPropertyAccess'><parameter type='java.lang.String' name='key'/></method><method name='checkRead'><parameter type='java.io.FileDescriptor' name='fd'/></method><method name='checkRead'><parameter type='java.lang.String' name='file'/></method><method name='checkRead'><parameter type='java.lang.String' name='file'/><parameter type='java.lang.Object' name='context'/></method><method name='checkSecurityAccess'><parameter type='java.lang.String' name='target'/></method><method name='checkSetFactory'/><method name='checkSystemClipboardAccess'/><method return='boolean' name='checkTopLevelWindow'><parameter type='java.lang.Object' name='window'/></method><method name='checkWrite'><parameter type='java.io.FileDescriptor' name='fd'/></method><method name='checkWrite'><parameter type='java.lang.String' name='file'/></method><method visibility='protected' deprecated='1' return='int' name='classDepth'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' deprecated='1' return='int' name='classLoaderDepth'/><method visibility='protected' deprecated='1' return='java.lang.ClassLoader' name='currentClassLoader'/><method visibility='protected' deprecated='1' return='java.lang.Class&lt;?&gt;' name='currentLoadedClass'/><method visibility='protected' return='java.lang.Class[]' name='getClassContext'/><method deprecated='1' return='boolean' name='getInCheck'/><method return='java.lang.Object' name='getSecurityContext'/><method return='java.lang.ThreadGroup' name='getThreadGroup'/><method visibility='protected' deprecated='1' return='boolean' name='inClass'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' deprecated='1' return='boolean' name='inClassLoader'/></class><class extends='java.lang.Number' name='Short' final='true'><constructor type='java.lang.Short' name='Short'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></constructor><constructor type='java.lang.Short' name='Short'><parameter type='short' name='value'/></constructor><method return='int' name='compareTo'><parameter type='java.lang.Short' name='object'/></method><method return='java.lang.Short' static='true' name='decode'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='int' name='intValue'/><method return='long' name='longValue'/><method return='short' static='true' name='parseShort'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='short' static='true' name='parseShort'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='short' static='true' name='reverseBytes'><parameter type='short' name='s'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='short' name='value'/></method><method return='java.lang.Short' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Short' static='true' name='valueOf'><parameter type='java.lang.String' name='string'/><parameter type='int' name='radix'/><exception type='java.lang.NumberFormatException' name='NumberFormatException'/></method><method return='java.lang.Short' static='true' name='valueOf'><parameter type='short' name='s'/></method></class><class extends='java.lang.VirtualMachineError' name='StackOverflowError'><constructor type='java.lang.StackOverflowError' name='StackOverflowError'/><constructor type='java.lang.StackOverflowError' name='StackOverflowError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='StackTraceElement' final='true'><constructor type='java.lang.StackTraceElement' name='StackTraceElement'><parameter type='java.lang.String' name='cls'/><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='file'/><parameter type='int' name='line'/></constructor><method return='java.lang.String' name='getClassName'/><method return='java.lang.String' name='getFileName'/><method return='int' name='getLineNumber'/><method return='java.lang.String' name='getMethodName'/><method return='boolean' name='isNativeMethod'/></class><class extends='java.lang.Object' name='StrictMath' final='true'><method return='double' native='true' static='true' name='IEEEremainder'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' static='true' name='abs'><parameter type='double' name='d'/></method><method return='float' static='true' name='abs'><parameter type='float' name='f'/></method><method return='int' static='true' name='abs'><parameter type='int' name='i'/></method><method return='long' static='true' name='abs'><parameter type='long' name='l'/></method><method return='double' native='true' static='true' name='acos'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='asin'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='atan'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='atan2'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' native='true' static='true' name='cbrt'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='ceil'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='cos'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='cosh'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='exp'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='expm1'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='floor'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='hypot'><parameter type='double' name='x'/><parameter type='double' name='y'/></method><method return='double' native='true' static='true' name='log'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='log10'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='log1p'><parameter type='double' name='d'/></method><method return='double' static='true' name='max'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='float' static='true' name='max'><parameter type='float' name='f1'/><parameter type='float' name='f2'/></method><method return='int' static='true' name='max'><parameter type='int' name='i1'/><parameter type='int' name='i2'/></method><method return='long' static='true' name='max'><parameter type='long' name='l1'/><parameter type='long' name='l2'/></method><method return='double' static='true' name='min'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='float' static='true' name='min'><parameter type='float' name='f1'/><parameter type='float' name='f2'/></method><method return='int' static='true' name='min'><parameter type='int' name='i1'/><parameter type='int' name='i2'/></method><method return='long' static='true' name='min'><parameter type='long' name='l1'/><parameter type='long' name='l2'/></method><method return='double' native='true' static='true' name='pow'><parameter type='double' name='d1'/><parameter type='double' name='d2'/></method><method return='double' static='true' name='random'/><method return='double' native='true' static='true' name='rint'><parameter type='double' name='d'/></method><method return='long' static='true' name='round'><parameter type='double' name='d'/></method><method return='int' static='true' name='round'><parameter type='float' name='f'/></method><method return='double' static='true' name='signum'><parameter type='double' name='d'/></method><method return='float' static='true' name='signum'><parameter type='float' name='f'/></method><method return='double' native='true' static='true' name='sin'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='sinh'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='sqrt'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='tan'><parameter type='double' name='d'/></method><method return='double' native='true' static='true' name='tanh'><parameter type='double' name='d'/></method><method return='double' static='true' name='toDegrees'><parameter type='double' name='angrad'/></method><method return='double' static='true' name='toRadians'><parameter type='double' name='angdeg'/></method><method return='double' static='true' name='ulp'><parameter type='double' name='d'/></method><method return='float' static='true' name='ulp'><parameter type='float' name='f'/></method><method return='double' static='true' name='copySign' api_added='9'><parameter type='double' name='magnitude'/><parameter type='double' name='sign'/></method><method return='float' static='true' name='copySign' api_added='9'><parameter type='float' name='magnitude'/><parameter type='float' name='sign'/></method><method return='int' static='true' name='getExponent' api_added='9'><parameter type='float' name='f'/></method><method return='int' static='true' name='getExponent' api_added='9'><parameter type='double' name='d'/></method><method return='double' static='true' name='nextAfter' api_added='9'><parameter type='double' name='start'/><parameter type='double' name='direction'/></method><method return='float' static='true' name='nextAfter' api_added='9'><parameter type='float' name='start'/><parameter type='double' name='direction'/></method><method return='double' static='true' name='nextUp' api_added='9'><parameter type='double' name='d'/></method><method return='float' static='true' name='nextUp' api_added='9'><parameter type='float' name='f'/></method><method return='double' static='true' name='scalb' api_added='9'><parameter type='double' name='d'/><parameter type='int' name='scaleFactor'/></method><method return='float' static='true' name='scalb' api_added='9'><parameter type='float' name='d'/><parameter type='int' name='scaleFactor'/></method></class><class extends='java.lang.Object' name='String' final='true'><constructor type='java.lang.String' name='String'/><constructor type='java.lang.String' name='String'><parameter type='byte[]' name='data'/></constructor><constructor deprecated='1' type='java.lang.String' name='String'><parameter type='byte[]' name='data'/><parameter type='int' name='high'/></constructor><constructor type='java.lang.String' name='String'><parameter type='byte[]' name='data'/><parameter type='int' name='start'/><parameter type='int' name='length'/></constructor><constructor deprecated='1' type='java.lang.String' name='String'><parameter type='byte[]' name='data'/><parameter type='int' name='high'/><parameter type='int' name='start'/><parameter type='int' name='length'/></constructor><constructor type='java.lang.String' name='String'><parameter type='byte[]' name='data'/><parameter type='int' name='start'/><parameter type='int' name='length'/><parameter type='java.lang.String' name='encoding'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.lang.String' name='String'><parameter type='byte[]' name='data'/><parameter type='java.lang.String' name='encoding'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.lang.String' name='String'><parameter type='char[]' name='data'/></constructor><constructor type='java.lang.String' name='String'><parameter type='char[]' name='data'/><parameter type='int' name='start'/><parameter type='int' name='length'/></constructor><constructor type='java.lang.String' name='String'><parameter type='java.lang.String' name='string'/></constructor><constructor type='java.lang.String' name='String'><parameter type='java.lang.StringBuffer' name='stringbuffer'/></constructor><constructor type='java.lang.String' name='String'><parameter type='int[]' name='codePoints'/><parameter type='int' name='offset'/><parameter type='int' name='count'/></constructor><constructor type='java.lang.String' name='String'><parameter type='java.lang.StringBuilder' name='sb'/></constructor><constructor type='java.lang.deprecated String' name='deprecated String' api_added='14'><parameter type='byte[]' name='arg0'/><parameter type='int' name='arg1'/></constructor><constructor type='java.lang.deprecated String' name='deprecated String' api_added='14'><parameter type='byte[]' name='arg0'/><parameter type='int' name='arg1'/></constructor><method return='char' name='charAt'><parameter type='int' name='index'/></method><method return='int' name='codePointAt'><parameter type='int' name='index'/></method><method return='int' name='codePointBefore'><parameter type='int' name='index'/></method><method return='int' name='codePointCount'><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method return='int' name='compareTo'><parameter type='java.lang.String' name='string'/></method><method return='int' name='compareToIgnoreCase'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.String' name='concat'><parameter type='java.lang.String' name='string'/></method><method return='boolean' name='contains'><parameter type='java.lang.CharSequence' name='cs'/></method><method return='boolean' name='contentEquals'><parameter type='java.lang.StringBuffer' name='strbuf'/></method><method return='boolean' name='contentEquals'><parameter type='java.lang.CharSequence' name='cs'/></method><method return='java.lang.String' static='true' name='copyValueOf'><parameter type='char[]' name='data'/></method><method return='java.lang.String' static='true' name='copyValueOf'><parameter type='char[]' name='data'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='boolean' name='endsWith'><parameter type='java.lang.String' name='suffix'/></method><method return='boolean' name='equalsIgnoreCase'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.String' static='true' name='format'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.lang.String' static='true' name='format'><parameter type='java.util.Locale' name='loc'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='byte[]' name='getBytes'/><method deprecated='1' name='getBytes'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='byte[]' name='data'/><parameter type='int' name='index'/></method><method return='byte[]' name='getBytes'><parameter type='java.lang.String' name='encoding'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method><method name='getChars'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char[]' name='buffer'/><parameter type='int' name='index'/></method><method return='int' name='indexOf'><parameter type='int' name='c'/></method><method return='int' name='indexOf'><parameter type='int' name='c'/><parameter type='int' name='start'/></method><method return='int' name='indexOf'><parameter type='java.lang.String' name='string'/></method><method return='int' name='indexOf'><parameter type='java.lang.String' name='subString'/><parameter type='int' name='start'/></method><method return='java.lang.String' native='true' name='intern'/><method return='int' name='lastIndexOf'><parameter type='int' name='c'/></method><method return='int' name='lastIndexOf'><parameter type='int' name='c'/><parameter type='int' name='start'/></method><method return='int' name='lastIndexOf'><parameter type='java.lang.String' name='string'/></method><method return='int' name='lastIndexOf'><parameter type='java.lang.String' name='subString'/><parameter type='int' name='start'/></method><method return='int' name='length'/><method return='boolean' name='matches'><parameter type='java.lang.String' name='expr'/></method><method return='int' name='offsetByCodePoints'><parameter type='int' name='index'/><parameter type='int' name='codePointOffset'/></method><method return='boolean' name='regionMatches'><parameter type='int' name='thisStart'/><parameter type='java.lang.String' name='string'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='boolean' name='regionMatches'><parameter type='boolean' name='ignoreCase'/><parameter type='int' name='thisStart'/><parameter type='java.lang.String' name='string'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='java.lang.String' name='replace'><parameter type='char' name='oldChar'/><parameter type='char' name='newChar'/></method><method return='java.lang.String' name='replace'><parameter type='java.lang.CharSequence' name='target'/><parameter type='java.lang.CharSequence' name='replacement'/></method><method return='java.lang.String' name='replaceAll'><parameter type='java.lang.String' name='expr'/><parameter type='java.lang.String' name='substitute'/></method><method return='java.lang.String' name='replaceFirst'><parameter type='java.lang.String' name='expr'/><parameter type='java.lang.String' name='substitute'/></method><method return='java.lang.String[]' name='split'><parameter type='java.lang.String' name='expr'/></method><method return='java.lang.String[]' name='split'><parameter type='java.lang.String' name='expr'/><parameter type='int' name='max'/></method><method return='boolean' name='startsWith'><parameter type='java.lang.String' name='prefix'/></method><method return='boolean' name='startsWith'><parameter type='java.lang.String' name='prefix'/><parameter type='int' name='start'/></method><method return='java.lang.CharSequence' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.String' name='substring'><parameter type='int' name='start'/></method><method return='java.lang.String' name='substring'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='char[]' name='toCharArray'/><method return='java.lang.String' name='toLowerCase'/><method return='java.lang.String' name='toLowerCase'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='toUpperCase'/><method return='java.lang.String' name='toUpperCase'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='trim'/><method return='java.lang.String' static='true' name='valueOf'><parameter type='char[]' name='data'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='char[]' name='data'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='char' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='double' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='float' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='int' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='long' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='java.lang.Object' name='value'/></method><method return='java.lang.String' static='true' name='valueOf'><parameter type='boolean' name='value'/></method><method return='byte[]' name='getBytes' api_added='9'><parameter type='java.nio.charset.Charset' name='charset'/></method><method return='boolean' name='isEmpty' api_added='9'/></class><class extends='java.lang.AbstractStringBuilder' name='StringBuffer' final='true'><constructor type='java.lang.StringBuffer' name='StringBuffer'/><constructor type='java.lang.StringBuffer' name='StringBuffer'><parameter type='int' name='capacity'/></constructor><constructor type='java.lang.StringBuffer' name='StringBuffer'><parameter type='java.lang.String' name='string'/></constructor><constructor type='java.lang.StringBuffer' name='StringBuffer'><parameter type='java.lang.CharSequence' name='cs'/></constructor><method return='java.lang.StringBuffer' name='append'><parameter type='boolean' name='b'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='char' name='ch'/></method><method return='java.lang.StringBuffer' name='append'><parameter type='double' name='d'/></method><method return='java.lang.StringBuffer' name='append'><parameter type='float' name='f'/></method><method return='java.lang.StringBuffer' name='append'><parameter type='int' name='i'/></method><method return='java.lang.StringBuffer' name='append'><parameter type='long' name='l'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='java.lang.StringBuffer' name='sb'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='char[]' name='chars'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='char[]' name='chars'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='java.lang.CharSequence' name='s'/></method><method return='java.lang.StringBuffer' synchronized='true' name='append'><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuffer' name='appendCodePoint'><parameter type='int' name='codePoint'/></method><method return='java.lang.StringBuffer' synchronized='true' name='delete'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuffer' synchronized='true' name='deleteCharAt'><parameter type='int' name='location'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='char' name='ch'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='boolean' name='b'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='int' name='i'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='long' name='l'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='double' name='d'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='float' name='f'/></method><method return='java.lang.StringBuffer' name='insert'><parameter type='int' name='index'/><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='java.lang.String' name='string'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='char[]' name='chars'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='char[]' name='chars'/><parameter type='int' name='start'/><parameter type='int' name='length'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='java.lang.CharSequence' name='s'/></method><method return='java.lang.StringBuffer' synchronized='true' name='insert'><parameter type='int' name='index'/><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuffer' synchronized='true' name='replace'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.String' name='string'/></method><method return='java.lang.StringBuffer' synchronized='true' name='reverse'/></class><class extends='java.lang.AbstractStringBuilder' name='StringBuilder' final='true'><constructor type='java.lang.StringBuilder' name='StringBuilder'/><constructor type='java.lang.StringBuilder' name='StringBuilder'><parameter type='int' name='capacity'/></constructor><constructor type='java.lang.StringBuilder' name='StringBuilder'><parameter type='java.lang.CharSequence' name='seq'/></constructor><constructor type='java.lang.StringBuilder' name='StringBuilder'><parameter type='java.lang.String' name='str'/></constructor><method return='java.lang.StringBuilder' name='append'><parameter type='boolean' name='b'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='char' name='c'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='int' name='i'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='long' name='lng'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='float' name='f'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='double' name='d'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='java.lang.String' name='str'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='java.lang.StringBuffer' name='sb'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='char[]' name='ch'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='char[]' name='str'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='java.lang.CharSequence' name='csq'/></method><method return='java.lang.StringBuilder' name='append'><parameter type='java.lang.CharSequence' name='csq'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuilder' name='appendCodePoint'><parameter type='int' name='codePoint'/></method><method return='java.lang.StringBuilder' name='delete'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuilder' name='deleteCharAt'><parameter type='int' name='index'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='boolean' name='b'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='char' name='c'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='int' name='i'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='long' name='l'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='float' name='f'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='double' name='d'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='str'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='char[]' name='ch'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='char[]' name='str'/><parameter type='int' name='strOffset'/><parameter type='int' name='strLen'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='java.lang.CharSequence' name='s'/></method><method return='java.lang.StringBuilder' name='insert'><parameter type='int' name='offset'/><parameter type='java.lang.CharSequence' name='s'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.StringBuilder' name='replace'><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.String' name='str'/></method><method return='java.lang.StringBuilder' name='reverse'/></class><class extends='java.lang.IndexOutOfBoundsException' name='StringIndexOutOfBoundsException'><constructor type='java.lang.StringIndexOutOfBoundsException' name='StringIndexOutOfBoundsException'/><constructor type='java.lang.StringIndexOutOfBoundsException' name='StringIndexOutOfBoundsException'><parameter type='int' name='index'/></constructor><constructor type='java.lang.StringIndexOutOfBoundsException' name='StringIndexOutOfBoundsException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SuppressWarnings'/><class extends='java.lang.Object' name='System' final='true'><method native='true' static='true' name='arraycopy'><parameter type='java.lang.Object' name='array1'/><parameter type='int' name='start1'/><parameter type='java.lang.Object' name='array2'/><parameter type='int' name='start2'/><parameter type='int' name='length'/></method><method return='java.lang.String' static='true' name='clearProperty'><parameter type='java.lang.String' name='key'/></method><method return='long' native='true' static='true' name='currentTimeMillis'/><method static='true' name='exit'><parameter type='int' name='code'/></method><method static='true' name='gc'/><method return='java.util.Properties' static='true' name='getProperties'/><method return='java.lang.String' static='true' name='getProperty'><parameter type='java.lang.String' name='prop'/></method><method return='java.lang.String' static='true' name='getProperty'><parameter type='java.lang.String' name='prop'/><parameter type='java.lang.String' name='defaultValue'/></method><method return='java.lang.SecurityManager' static='true' name='getSecurityManager'/><method return='java.lang.String' static='true' name='getenv'><parameter type='java.lang.String' name='var'/></method><method return='java.util.Map&lt;java.lang.String, java.lang.String&gt;' static='true' name='getenv'/><method return='int' native='true' static='true' name='identityHashCode'><parameter type='java.lang.Object' name='anObject'/></method><method return='java.nio.channels.Channel' static='true' name='inheritedChannel'><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='load'><parameter type='java.lang.String' name='pathName'/></method><method static='true' name='loadLibrary'><parameter type='java.lang.String' name='libName'/></method><method return='java.lang.String' native='true' static='true' name='mapLibraryName'><parameter type='java.lang.String' name='userLibName'/></method><method return='long' native='true' static='true' name='nanoTime'/><method static='true' name='runFinalization'/><method deprecated='1' static='true' name='runFinalizersOnExit'><parameter type='boolean' name='flag'/></method><method static='true' name='setErr'><parameter type='java.io.PrintStream' name='newErr'/></method><method static='true' name='setIn'><parameter type='java.io.InputStream' name='newIn'/></method><method static='true' name='setOut'><parameter type='java.io.PrintStream' name='newOut'/></method><method static='true' name='setProperties'><parameter type='java.util.Properties' name='p'/></method><method return='java.lang.String' static='true' name='setProperty'><parameter type='java.lang.String' name='prop'/><parameter type='java.lang.String' name='value'/></method><method static='true' name='setSecurityManager'><parameter type='java.lang.SecurityManager' name='sm'/></method><method return='java.io.Console' static='true' name='console' api_added='9'/></class><class extends='java.lang.Object' name='Thread'><constructor type='java.lang.Thread' name='Thread'/><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.Runnable' name='runnable'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.Runnable' name='runnable'/><parameter type='java.lang.String' name='threadName'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.String' name='threadName'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.ThreadGroup' name='group'/><parameter type='java.lang.Runnable' name='runnable'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.ThreadGroup' name='group'/><parameter type='java.lang.Runnable' name='runnable'/><parameter type='java.lang.String' name='threadName'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.ThreadGroup' name='group'/><parameter type='java.lang.String' name='threadName'/></constructor><constructor type='java.lang.Thread' name='Thread'><parameter type='java.lang.ThreadGroup' name='group'/><parameter type='java.lang.Runnable' name='runnable'/><parameter type='java.lang.String' name='threadName'/><parameter type='long' name='stackSize'/></constructor><method return='int' static='true' name='activeCount'/><method name='checkAccess' final='true'/><method deprecated='1' return='int' name='countStackFrames'/><method return='java.lang.Thread' static='true' name='currentThread'/><method deprecated='1' name='destroy'/><method static='true' name='dumpStack'/><method return='int' static='true' name='enumerate'><parameter type='java.lang.Thread[]' name='threads'/></method><method return='java.util.Map&lt;java.lang.Thread, java.lang.StackTraceElement[]&gt;' static='true' name='getAllStackTraces'/><method return='java.lang.ClassLoader' name='getContextClassLoader'/><method return='java.lang.Thread.UncaughtExceptionHandler' static='true' name='getDefaultUncaughtExceptionHandler'/><method return='long' name='getId'/><method return='java.lang.String' name='getName' final='true'/><method return='int' name='getPriority' final='true'/><method return='java.lang.StackTraceElement[]' name='getStackTrace'/><method return='java.lang.Thread.State' name='getState'/><method return='java.lang.ThreadGroup' name='getThreadGroup' final='true'/><method return='java.lang.Thread.UncaughtExceptionHandler' name='getUncaughtExceptionHandler'/><method return='boolean' static='true' name='holdsLock'><parameter type='java.lang.Object' name='object'/></method><method name='interrupt'/><method return='boolean' static='true' name='interrupted'/><method return='boolean' name='isAlive' final='true'/><method return='boolean' name='isDaemon' final='true'/><method return='boolean' name='isInterrupted'/><method name='join' final='true'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='join' final='true'><parameter type='long' name='millis'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='join' final='true'><parameter type='long' name='millis'/><parameter type='int' name='nanos'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method deprecated='1' name='resume' final='true'/><method name='run'/><method name='setContextClassLoader'><parameter type='java.lang.ClassLoader' name='cl'/></method><method name='setDaemon' final='true'><parameter type='boolean' name='isDaemon'/></method><method static='true' name='setDefaultUncaughtExceptionHandler'><parameter type='java.lang.Thread.UncaughtExceptionHandler' name='handler'/></method><method name='setName' final='true'><parameter type='java.lang.String' name='threadName'/></method><method name='setPriority' final='true'><parameter type='int' name='priority'/></method><method name='setUncaughtExceptionHandler'><parameter type='java.lang.Thread.UncaughtExceptionHandler' name='handler'/></method><method static='true' name='sleep'><parameter type='long' name='time'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method static='true' name='sleep'><parameter type='long' name='time'/><parameter type='int' name='nanos'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method synchronized='true' name='start'/><method deprecated='1' name='stop' final='true'/><method deprecated='1' synchronized='true' name='stop' final='true'><parameter type='java.lang.Throwable' name='throwable'/></method><method deprecated='1' name='suspend' final='true'/><method static='true' name='yield'/></class><class extends='java.lang.Enum' static='true' name='Thread.State' final='true'><method return='java.lang.Thread.State' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.Thread.State[]' static='true' name='values' final='true'/></class><class extends='java.lang.Error' name='ThreadDeath'><constructor type='java.lang.ThreadDeath' name='ThreadDeath'/></class><class extends='java.lang.Object' name='ThreadGroup'><constructor type='java.lang.ThreadGroup' name='ThreadGroup'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.lang.ThreadGroup' name='ThreadGroup'><parameter type='java.lang.ThreadGroup' name='parent'/><parameter type='java.lang.String' name='name'/></constructor><method return='int' name='activeCount'/><method return='int' name='activeGroupCount'/><method deprecated='1' return='boolean' name='allowThreadSuspension'><parameter type='boolean' name='b'/></method><method name='checkAccess' final='true'/><method name='destroy' final='true'/><method return='int' name='enumerate'><parameter type='java.lang.Thread[]' name='threads'/></method><method return='int' name='enumerate'><parameter type='java.lang.Thread[]' name='threads'/><parameter type='boolean' name='recurse'/></method><method return='int' name='enumerate'><parameter type='java.lang.ThreadGroup[]' name='groups'/></method><method return='int' name='enumerate'><parameter type='java.lang.ThreadGroup[]' name='groups'/><parameter type='boolean' name='recurse'/></method><method return='int' name='getMaxPriority' final='true'/><method return='java.lang.String' name='getName' final='true'/><method return='java.lang.ThreadGroup' name='getParent' final='true'/><method name='interrupt' final='true'/><method return='boolean' name='isDaemon' final='true'/><method return='boolean' synchronized='true' name='isDestroyed'/><method name='list'/><method return='boolean' name='parentOf' final='true'><parameter type='java.lang.ThreadGroup' name='g'/></method><method deprecated='1' name='resume' final='true'/><method name='setDaemon' final='true'><parameter type='boolean' name='isDaemon'/></method><method name='setMaxPriority' final='true'><parameter type='int' name='newMax'/></method><method deprecated='1' name='stop' final='true'/><method deprecated='1' name='suspend' final='true'/><method name='uncaughtException'><parameter type='java.lang.Thread' name='t'/><parameter type='java.lang.Throwable' name='e'/></method></class><class extends='java.lang.Object' name='ThreadLocal'><constructor type='java.lang.ThreadLocal' name='ThreadLocal'/><method return='T' name='get'/><method visibility='protected' return='T' name='initialValue'/><method name='remove'/><method name='set'><parameter type='T' name='value'/></method></class><class extends='java.lang.Object' name='Throwable'><constructor type='java.lang.Throwable' name='Throwable'/><constructor type='java.lang.Throwable' name='Throwable'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.Throwable' name='Throwable'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.Throwable' name='throwable'/></constructor><constructor type='java.lang.Throwable' name='Throwable'><parameter type='java.lang.Throwable' name='throwable'/></constructor><method return='java.lang.Throwable' name='fillInStackTrace'/><method return='java.lang.Throwable' name='getCause'/><method return='java.lang.String' name='getLocalizedMessage'/><method return='java.lang.String' name='getMessage'/><method return='java.lang.StackTraceElement[]' name='getStackTrace'/><method return='java.lang.Throwable' name='initCause'><parameter type='java.lang.Throwable' name='throwable'/></method><method name='printStackTrace'/><method name='printStackTrace'><parameter type='java.io.PrintStream' name='err'/></method><method name='printStackTrace'><parameter type='java.io.PrintWriter' name='err'/></method><method name='setStackTrace'><parameter type='java.lang.StackTraceElement[]' name='trace'/></method></class><class extends='java.lang.RuntimeException' name='TypeNotPresentException'><constructor type='java.lang.TypeNotPresentException' name='TypeNotPresentException'><parameter type='java.lang.String' name='typeName'/><parameter type='java.lang.Throwable' name='cause'/></constructor><method return='java.lang.String' name='typeName'/></class><class extends='java.lang.VirtualMachineError' name='UnknownError'><constructor type='java.lang.UnknownError' name='UnknownError'/><constructor type='java.lang.UnknownError' name='UnknownError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.LinkageError' name='UnsatisfiedLinkError'><constructor type='java.lang.UnsatisfiedLinkError' name='UnsatisfiedLinkError'/><constructor type='java.lang.UnsatisfiedLinkError' name='UnsatisfiedLinkError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.ClassFormatError' name='UnsupportedClassVersionError'><constructor type='java.lang.UnsupportedClassVersionError' name='UnsupportedClassVersionError'/><constructor type='java.lang.UnsupportedClassVersionError' name='UnsupportedClassVersionError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.RuntimeException' name='UnsupportedOperationException'><constructor type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/><constructor type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'><parameter type='java.lang.String' name='detailMessage'/></constructor><constructor type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.LinkageError' name='VerifyError'><constructor type='java.lang.VerifyError' name='VerifyError'/><constructor type='java.lang.VerifyError' name='VerifyError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Error' abstract='true' name='VirtualMachineError'><constructor type='java.lang.VirtualMachineError' name='VirtualMachineError'/><constructor type='java.lang.VirtualMachineError' name='VirtualMachineError'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Void' final='true'/><interface abstract='true' name='Appendable'><method return='java.lang.Appendable' abstract='true' name='append'><parameter type='char' name='c'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Appendable' abstract='true' name='append'><parameter type='java.lang.CharSequence' name='csq'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Appendable' abstract='true' name='append'><parameter type='java.lang.CharSequence' name='csq'/><parameter type='int' name='start'/><parameter type='int' name='end'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='CharSequence'><method return='char' abstract='true' name='charAt'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='length'/><method return='java.lang.CharSequence' abstract='true' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.String' abstract='true' name='toString'/></interface><interface abstract='true' name='Cloneable'/><interface abstract='true' name='Comparable'><method return='int' abstract='true' name='compareTo'><parameter type='T' name='another'/></method></interface><interface abstract='true' name='Iterable'><method return='java.util.Iterator&lt;T&gt;' abstract='true' name='iterator'/></interface><interface abstract='true' name='Readable'><method return='int' abstract='true' name='read'><parameter type='java.nio.CharBuffer' name='cb'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='Runnable'><method abstract='true' name='run'/></interface><interface abstract='true' static='true' name='Thread.UncaughtExceptionHandler'><method abstract='true' name='uncaughtException'><parameter type='java.lang.Thread' name='thread'/><parameter type='java.lang.Throwable' name='ex'/></method></interface></package><package name='java.lang.annotation'><class extends='java.lang.Error' name='AnnotationFormatError'><constructor type='java.lang.annotation.AnnotationFormatError' name='AnnotationFormatError'><parameter type='java.lang.String' name='message'/></constructor><constructor type='java.lang.annotation.AnnotationFormatError' name='AnnotationFormatError'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.lang.annotation.AnnotationFormatError' name='AnnotationFormatError'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.RuntimeException' name='AnnotationTypeMismatchException'><constructor type='java.lang.annotation.AnnotationTypeMismatchException' name='AnnotationTypeMismatchException'><parameter type='java.lang.reflect.Method' name='element'/><parameter type='java.lang.String' name='foundType'/></constructor><method return='java.lang.reflect.Method' name='element'/><method return='java.lang.String' name='foundType'/></class><class extends='java.lang.Object' abstract='true' name='Documented'/><class extends='java.lang.Enum' name='ElementType' final='true'><method return='java.lang.annotation.ElementType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.annotation.ElementType[]' static='true' name='values' final='true'/></class><class extends='java.lang.RuntimeException' name='IncompleteAnnotationException'><constructor type='java.lang.annotation.IncompleteAnnotationException' name='IncompleteAnnotationException'><parameter type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationType'/><parameter type='java.lang.String' name='elementName'/></constructor><method return='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationType'/><method return='java.lang.String' name='elementName'/></class><class extends='java.lang.Object' abstract='true' name='Inherited'/><class extends='java.lang.Object' abstract='true' name='Retention'/><class extends='java.lang.Enum' name='RetentionPolicy' final='true'><method return='java.lang.annotation.RetentionPolicy' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.annotation.RetentionPolicy[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' abstract='true' name='Target'/><interface abstract='true' name='Annotation'><method return='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' abstract='true' name='annotationType'/><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='int' abstract='true' name='hashCode'/><method return='java.lang.String' abstract='true' name='toString'/></interface></package><package name='java.lang.ref'><class extends='java.lang.ref.Reference' name='PhantomReference'><constructor type='java.lang.ref.PhantomReference' name='PhantomReference'><parameter type='T' name='r'/><parameter type='java.lang.ref.ReferenceQueue&lt;? super T&gt;' name='q'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Reference'><method name='clear'/><method return='boolean' name='enqueue'/><method return='T' name='get'/><method return='boolean' name='isEnqueued'/></class><class extends='java.lang.Object' name='ReferenceQueue'><constructor type='java.lang.ref.ReferenceQueue' name='ReferenceQueue'/><method return='java.lang.ref.Reference&lt;? extends T&gt;' synchronized='true' name='poll'/><method return='java.lang.ref.Reference&lt;? extends T&gt;' name='remove'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.lang.ref.Reference&lt;? extends T&gt;' synchronized='true' name='remove'><parameter type='long' name='timeout'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.ref.Reference' name='SoftReference'><constructor type='java.lang.ref.SoftReference' name='SoftReference'><parameter type='T' name='r'/></constructor><constructor type='java.lang.ref.SoftReference' name='SoftReference'><parameter type='T' name='r'/><parameter type='java.lang.ref.ReferenceQueue&lt;? super T&gt;' name='q'/></constructor></class><class extends='java.lang.ref.Reference' name='WeakReference'><constructor type='java.lang.ref.WeakReference' name='WeakReference'><parameter type='T' name='r'/></constructor><constructor type='java.lang.ref.WeakReference' name='WeakReference'><parameter type='T' name='r'/><parameter type='java.lang.ref.ReferenceQueue&lt;? super T&gt;' name='q'/></constructor></class></package><package name='java.lang.reflect'><class extends='java.lang.Object' name='AccessibleObject'><constructor visibility='protected' type='java.lang.reflect.AccessibleObject' name='AccessibleObject'/><method return='T' name='getAnnotation'><parameter type='java.lang.Class&lt;T&gt;' name='annotationType'/></method><method return='java.lang.annotation.Annotation[]' name='getAnnotations'/><method return='java.lang.annotation.Annotation[]' name='getDeclaredAnnotations'/><method return='boolean' name='isAccessible'/><method return='boolean' name='isAnnotationPresent'><parameter type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationType'/></method><method static='true' name='setAccessible'><parameter type='java.lang.reflect.AccessibleObject[]' name='objects'/><parameter type='boolean' name='flag'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method name='setAccessible'><parameter type='boolean' name='flag'/><exception type='java.lang.SecurityException' name='SecurityException'/></method></class><class extends='java.lang.Object' name='Array' final='true'><method return='java.lang.Object' static='true' name='get'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='boolean' static='true' name='getBoolean'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='byte' static='true' name='getByte'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='char' static='true' name='getChar'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='double' static='true' name='getDouble'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='float' static='true' name='getFloat'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' static='true' name='getInt'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' static='true' name='getLength'><parameter type='java.lang.Object' name='array'/></method><method return='long' static='true' name='getLong'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='short' static='true' name='getShort'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Object' api_removed='9' static='true' name='newInstance'><parameter type='java.lang.Class&lt;?&gt;' name='componentType'/><parameter type='int[]' name='dimensions'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.NegativeArraySizeException' name='NegativeArraySizeException'/></method><method return='java.lang.Object' static='true' name='newInstance'><parameter type='java.lang.Class&lt;?&gt;' name='componentType'/><parameter type='int' name='size'/><exception type='java.lang.NegativeArraySizeException' name='NegativeArraySizeException'/></method><method static='true' name='set'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='java.lang.Object' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setBoolean'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='boolean' name='value'/></method><method static='true' name='setByte'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='byte' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setChar'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='char' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setDouble'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='double' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setFloat'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='float' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setInt'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='int' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setLong'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='long' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method static='true' name='setShort'><parameter type='java.lang.Object' name='array'/><parameter type='int' name='index'/><parameter type='short' name='value'/><exception type='java.lang.ArrayIndexOutOfBoundsException' name='ArrayIndexOutOfBoundsException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Object' static='true' name='newInstance' api_added='9'><parameter type='java.lang.Class&lt;?&gt;' name='componentType'/><parameter type='int...' name='dimensions'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.NegativeArraySizeException' name='NegativeArraySizeException'/></method></class><class extends='java.lang.reflect.AccessibleObject' name='Constructor' final='true'><method return='java.lang.Class&lt;T&gt;' name='getDeclaringClass'/><method return='java.lang.Class&lt;?&gt;[]' name='getExceptionTypes'/><method return='java.lang.reflect.Type[]' name='getGenericExceptionTypes'/><method return='java.lang.reflect.Type[]' name='getGenericParameterTypes'/><method return='int' name='getModifiers'/><method return='java.lang.String' name='getName'/><method return='java.lang.annotation.Annotation[][]' name='getParameterAnnotations'/><method return='java.lang.Class&lt;?&gt;[]' name='getParameterTypes'/><method return='java.lang.reflect.TypeVariable&lt;java.lang.reflect.Constructor&lt;T&gt;&gt;[]' name='getTypeParameters'/><method return='boolean' name='isSynthetic'/><method return='boolean' name='isVarArgs'/><method return='T' name='newInstance'><parameter type='java.lang.Object...' name='args'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/><exception type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'/></method><method return='java.lang.String' name='toGenericString'/><method return='A' name='getAnnotation' api_added='14'><parameter type='java.lang.Class&lt;A&gt;' name='arg0'/></method></class><class extends='java.lang.reflect.AccessibleObject' name='Field' final='true'><method return='java.lang.Object' name='get'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='boolean' name='getBoolean'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='byte' name='getByte'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='char' name='getChar'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Class&lt;?&gt;' name='getDeclaringClass'/><method return='double' name='getDouble'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='float' name='getFloat'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.reflect.Type' name='getGenericType'/><method return='int' name='getInt'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='long' name='getLong'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' name='getModifiers'/><method return='java.lang.String' name='getName'/><method return='short' name='getShort'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Class&lt;?&gt;' name='getType'/><method return='boolean' name='isEnumConstant'/><method return='boolean' name='isSynthetic'/><method name='set'><parameter type='java.lang.Object' name='object'/><parameter type='java.lang.Object' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setBoolean'><parameter type='java.lang.Object' name='object'/><parameter type='boolean' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setByte'><parameter type='java.lang.Object' name='object'/><parameter type='byte' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setChar'><parameter type='java.lang.Object' name='object'/><parameter type='char' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setDouble'><parameter type='java.lang.Object' name='object'/><parameter type='double' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setFloat'><parameter type='java.lang.Object' name='object'/><parameter type='float' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setInt'><parameter type='java.lang.Object' name='object'/><parameter type='int' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setLong'><parameter type='java.lang.Object' name='object'/><parameter type='long' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setShort'><parameter type='java.lang.Object' name='object'/><parameter type='short' name='value'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.String' name='toGenericString'/><method return='A' name='getAnnotation' api_added='14'><parameter type='java.lang.Class&lt;A&gt;' name='arg0'/></method></class><class extends='java.lang.ClassFormatError' name='GenericSignatureFormatError'><constructor type='java.lang.reflect.GenericSignatureFormatError' name='GenericSignatureFormatError'/></class><class extends='java.lang.Exception' name='InvocationTargetException'><constructor visibility='protected' type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'/><constructor type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'><parameter type='java.lang.Throwable' name='exception'/></constructor><constructor type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'><parameter type='java.lang.Throwable' name='exception'/><parameter type='java.lang.String' name='detailMessage'/></constructor><method return='java.lang.Throwable' name='getTargetException'/></class><class extends='java.lang.RuntimeException' name='MalformedParameterizedTypeException'><constructor type='java.lang.reflect.MalformedParameterizedTypeException' name='MalformedParameterizedTypeException'/></class><class extends='java.lang.reflect.AccessibleObject' name='Method' final='true'><method return='java.lang.Class&lt;?&gt;' name='getDeclaringClass'/><method return='java.lang.Object' name='getDefaultValue'/><method return='java.lang.Class&lt;?&gt;[]' name='getExceptionTypes'/><method return='java.lang.reflect.Type[]' name='getGenericExceptionTypes'/><method return='java.lang.reflect.Type[]' name='getGenericParameterTypes'/><method return='java.lang.reflect.Type' name='getGenericReturnType'/><method return='int' name='getModifiers'/><method return='java.lang.String' name='getName'/><method return='java.lang.annotation.Annotation[][]' name='getParameterAnnotations'/><method return='java.lang.Class&lt;?&gt;[]' name='getParameterTypes'/><method return='java.lang.Class&lt;?&gt;' name='getReturnType'/><method return='java.lang.reflect.TypeVariable&lt;java.lang.reflect.Method&gt;[]' name='getTypeParameters'/><method return='java.lang.Object' name='invoke'><parameter type='java.lang.Object' name='receiver'/><parameter type='java.lang.Object...' name='args'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.reflect.InvocationTargetException' name='InvocationTargetException'/></method><method return='boolean' name='isBridge'/><method return='boolean' name='isSynthetic'/><method return='boolean' name='isVarArgs'/><method return='java.lang.String' name='toGenericString'/><method return='A' name='getAnnotation' api_added='14'><parameter type='java.lang.Class&lt;A&gt;' name='arg0'/></method></class><class extends='java.lang.Object' name='Modifier'><constructor type='java.lang.reflect.Modifier' name='Modifier'/><method return='boolean' static='true' name='isAbstract'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isFinal'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isInterface'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isNative'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isPrivate'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isProtected'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isPublic'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isStatic'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isStrict'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isSynchronized'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isTransient'><parameter type='int' name='modifiers'/></method><method return='boolean' static='true' name='isVolatile'><parameter type='int' name='modifiers'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='int' name='modifiers'/></method></class><class extends='java.lang.Object' name='Proxy'><constructor visibility='protected' type='java.lang.reflect.Proxy' name='Proxy'><parameter type='java.lang.reflect.InvocationHandler' name='h'/></constructor><method return='java.lang.reflect.InvocationHandler' static='true' name='getInvocationHandler'><parameter type='java.lang.Object' name='proxy'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Class&lt;?&gt;' static='true' name='getProxyClass'><parameter type='java.lang.ClassLoader' name='loader'/><parameter type='java.lang.Class&lt;?&gt;...' name='interfaces'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='boolean' static='true' name='isProxyClass'><parameter type='java.lang.Class&lt;?&gt;' name='cl'/></method><method return='java.lang.Object' static='true' name='newProxyInstance'><parameter type='java.lang.ClassLoader' name='loader'/><parameter type='java.lang.Class&lt;?&gt;[]' name='interfaces'/><parameter type='java.lang.reflect.InvocationHandler' name='h'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></class><class extends='java.security.BasicPermission' name='ReflectPermission' final='true'><constructor type='java.lang.reflect.ReflectPermission' name='ReflectPermission'><parameter type='java.lang.String' name='permissionName'/></constructor><constructor type='java.lang.reflect.ReflectPermission' name='ReflectPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.lang.RuntimeException' name='UndeclaredThrowableException'><constructor type='java.lang.reflect.UndeclaredThrowableException' name='UndeclaredThrowableException'><parameter type='java.lang.Throwable' name='exception'/></constructor><constructor type='java.lang.reflect.UndeclaredThrowableException' name='UndeclaredThrowableException'><parameter type='java.lang.Throwable' name='exception'/><parameter type='java.lang.String' name='detailMessage'/></constructor><method return='java.lang.Throwable' name='getUndeclaredThrowable'/></class><interface abstract='true' name='AnnotatedElement'><method return='T' abstract='true' name='getAnnotation'><parameter type='java.lang.Class&lt;T&gt;' name='annotationType'/></method><method return='java.lang.annotation.Annotation[]' abstract='true' name='getAnnotations'/><method return='java.lang.annotation.Annotation[]' abstract='true' name='getDeclaredAnnotations'/><method return='boolean' abstract='true' name='isAnnotationPresent'><parameter type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;' name='annotationType'/></method></interface><interface abstract='true' name='GenericArrayType'><method return='java.lang.reflect.Type' abstract='true' name='getGenericComponentType'/></interface><interface abstract='true' name='GenericDeclaration'><method return='java.lang.reflect.TypeVariable&lt;?&gt;[]' abstract='true' name='getTypeParameters'/></interface><interface abstract='true' name='InvocationHandler'><method return='java.lang.Object' abstract='true' name='invoke'><parameter type='java.lang.Object' name='proxy'/><parameter type='java.lang.reflect.Method' name='method'/><parameter type='java.lang.Object[]' name='args'/><exception type='java.lang.Throwable' name='Throwable'/></method></interface><interface abstract='true' name='Member'><method return='java.lang.Class' abstract='true' name='getDeclaringClass'/><method return='int' abstract='true' name='getModifiers'/><method return='java.lang.String' abstract='true' name='getName'/><method return='boolean' abstract='true' name='isSynthetic'/></interface><interface abstract='true' name='ParameterizedType'><method return='java.lang.reflect.Type[]' abstract='true' name='getActualTypeArguments'/><method return='java.lang.reflect.Type' abstract='true' name='getOwnerType'/><method return='java.lang.reflect.Type' abstract='true' name='getRawType'/></interface><interface abstract='true' name='Type'/><interface abstract='true' name='TypeVariable'><method return='java.lang.reflect.Type[]' abstract='true' name='getBounds'/><method return='D' abstract='true' name='getGenericDeclaration'/><method return='java.lang.String' abstract='true' name='getName'/></interface><interface abstract='true' name='WildcardType'><method return='java.lang.reflect.Type[]' abstract='true' name='getLowerBounds'/><method return='java.lang.reflect.Type[]' abstract='true' name='getUpperBounds'/></interface></package><package name='java.math'><class extends='java.lang.Number' name='BigDecimal'><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='char[]' name='in'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='char[]' name='in'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='char[]' name='in'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='char[]' name='in'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.lang.String' name='val'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.lang.String' name='val'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='double' name='val'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='double' name='val'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.math.BigInteger' name='val'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.math.BigInteger' name='val'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.math.BigInteger' name='unscaledVal'/><parameter type='int' name='scale'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='java.math.BigInteger' name='unscaledVal'/><parameter type='int' name='scale'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='int' name='val'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='int' name='val'/><parameter type='java.math.MathContext' name='mc'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='long' name='val'/></constructor><constructor type='java.math.BigDecimal' name='BigDecimal'><parameter type='long' name='val'/><parameter type='java.math.MathContext' name='mc'/></constructor><method return='java.math.BigDecimal' name='abs'/><method return='java.math.BigDecimal' name='abs'><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='add'><parameter type='java.math.BigDecimal' name='augend'/></method><method return='java.math.BigDecimal' name='add'><parameter type='java.math.BigDecimal' name='augend'/><parameter type='java.math.MathContext' name='mc'/></method><method return='byte' name='byteValueExact'/><method return='int' name='compareTo'><parameter type='java.math.BigDecimal' name='val'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='int' name='scale'/><parameter type='int' name='roundingMode'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='int' name='scale'/><parameter type='java.math.RoundingMode' name='roundingMode'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='int' name='roundingMode'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='java.math.RoundingMode' name='roundingMode'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/></method><method return='java.math.BigDecimal' name='divide'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal[]' name='divideAndRemainder'><parameter type='java.math.BigDecimal' name='divisor'/></method><method return='java.math.BigDecimal[]' name='divideAndRemainder'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='divideToIntegralValue'><parameter type='java.math.BigDecimal' name='divisor'/></method><method return='java.math.BigDecimal' name='divideToIntegralValue'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='java.math.MathContext' name='mc'/></method><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='int' name='intValue'/><method return='int' name='intValueExact'/><method return='long' name='longValue'/><method return='long' name='longValueExact'/><method return='java.math.BigDecimal' name='max'><parameter type='java.math.BigDecimal' name='val'/></method><method return='java.math.BigDecimal' name='min'><parameter type='java.math.BigDecimal' name='val'/></method><method return='java.math.BigDecimal' name='movePointLeft'><parameter type='int' name='n'/></method><method return='java.math.BigDecimal' name='movePointRight'><parameter type='int' name='n'/></method><method return='java.math.BigDecimal' name='multiply'><parameter type='java.math.BigDecimal' name='multiplicand'/></method><method return='java.math.BigDecimal' name='multiply'><parameter type='java.math.BigDecimal' name='multiplicand'/><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='negate'/><method return='java.math.BigDecimal' name='negate'><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='plus'/><method return='java.math.BigDecimal' name='plus'><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='pow'><parameter type='int' name='n'/></method><method return='java.math.BigDecimal' name='pow'><parameter type='int' name='n'/><parameter type='java.math.MathContext' name='mc'/></method><method return='int' name='precision'/><method return='java.math.BigDecimal' name='remainder'><parameter type='java.math.BigDecimal' name='divisor'/></method><method return='java.math.BigDecimal' name='remainder'><parameter type='java.math.BigDecimal' name='divisor'/><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigDecimal' name='round'><parameter type='java.math.MathContext' name='mc'/></method><method return='int' name='scale'/><method return='java.math.BigDecimal' name='scaleByPowerOfTen'><parameter type='int' name='n'/></method><method return='java.math.BigDecimal' name='setScale'><parameter type='int' name='newScale'/><parameter type='java.math.RoundingMode' name='roundingMode'/></method><method return='java.math.BigDecimal' name='setScale'><parameter type='int' name='newScale'/><parameter type='int' name='roundingMode'/></method><method return='java.math.BigDecimal' name='setScale'><parameter type='int' name='newScale'/></method><method return='short' name='shortValueExact'/><method return='int' name='signum'/><method return='java.math.BigDecimal' name='stripTrailingZeros'/><method return='java.math.BigDecimal' name='subtract'><parameter type='java.math.BigDecimal' name='subtrahend'/></method><method return='java.math.BigDecimal' name='subtract'><parameter type='java.math.BigDecimal' name='subtrahend'/><parameter type='java.math.MathContext' name='mc'/></method><method return='java.math.BigInteger' name='toBigInteger'/><method return='java.math.BigInteger' name='toBigIntegerExact'/><method return='java.lang.String' name='toEngineeringString'/><method return='java.lang.String' name='toPlainString'/><method return='java.math.BigDecimal' name='ulp'/><method return='java.math.BigInteger' name='unscaledValue'/><method return='java.math.BigDecimal' static='true' name='valueOf'><parameter type='long' name='unscaledVal'/><parameter type='int' name='scale'/></method><method return='java.math.BigDecimal' static='true' name='valueOf'><parameter type='long' name='unscaledVal'/></method><method return='java.math.BigDecimal' static='true' name='valueOf'><parameter type='double' name='val'/></method></class><class extends='java.lang.Number' name='BigInteger'><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='int' name='numBits'/><parameter type='java.util.Random' name='rnd'/></constructor><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='int' name='bitLength'/><parameter type='int' name='certainty'/><parameter type='java.util.Random' name='rnd'/></constructor><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='java.lang.String' name='val'/></constructor><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='java.lang.String' name='val'/><parameter type='int' name='radix'/></constructor><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='int' name='signum'/><parameter type='byte[]' name='magnitude'/></constructor><constructor type='java.math.BigInteger' name='BigInteger'><parameter type='byte[]' name='val'/></constructor><method return='java.math.BigInteger' name='abs'/><method return='java.math.BigInteger' name='add'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='and'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='andNot'><parameter type='java.math.BigInteger' name='val'/></method><method return='int' name='bitCount'/><method return='int' name='bitLength'/><method return='java.math.BigInteger' name='clearBit'><parameter type='int' name='n'/></method><method return='int' name='compareTo'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='divide'><parameter type='java.math.BigInteger' name='divisor'/></method><method return='java.math.BigInteger[]' name='divideAndRemainder'><parameter type='java.math.BigInteger' name='divisor'/></method><method return='double' name='doubleValue'/><method return='java.math.BigInteger' name='flipBit'><parameter type='int' name='n'/></method><method return='float' name='floatValue'/><method return='java.math.BigInteger' name='gcd'><parameter type='java.math.BigInteger' name='val'/></method><method return='int' name='getLowestSetBit'/><method return='int' name='intValue'/><method return='boolean' name='isProbablePrime'><parameter type='int' name='certainty'/></method><method return='long' name='longValue'/><method return='java.math.BigInteger' name='max'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='min'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='mod'><parameter type='java.math.BigInteger' name='m'/></method><method return='java.math.BigInteger' name='modInverse'><parameter type='java.math.BigInteger' name='m'/></method><method return='java.math.BigInteger' name='modPow'><parameter type='java.math.BigInteger' name='exponent'/><parameter type='java.math.BigInteger' name='m'/></method><method return='java.math.BigInteger' name='multiply'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='negate'/><method return='java.math.BigInteger' name='nextProbablePrime'/><method return='java.math.BigInteger' name='not'/><method return='java.math.BigInteger' name='or'><parameter type='java.math.BigInteger' name='val'/></method><method return='java.math.BigInteger' name='pow'><parameter type='int' name='exp'/></method><method return='java.math.BigInteger' static='true' name='probablePrime'><parameter type='int' name='bitLength'/><parameter type='java.util.Random' name='rnd'/></method><method return='java.math.BigInteger' name='remainder'><parameter type='java.math.BigInteger' name='divisor'/></method><method return='java.math.BigInteger' name='setBit'><parameter type='int' name='n'/></method><method return='java.math.BigInteger' name='shiftLeft'><parameter type='int' name='n'/></method><method return='java.math.BigInteger' name='shiftRight'><parameter type='int' name='n'/></method><method return='int' name='signum'/><method return='java.math.BigInteger' name='subtract'><parameter type='java.math.BigInteger' name='val'/></method><method return='boolean' name='testBit'><parameter type='int' name='n'/></method><method return='byte[]' name='toByteArray'/><method return='java.lang.String' name='toString'><parameter type='int' name='radix'/></method><method return='java.math.BigInteger' static='true' name='valueOf'><parameter type='long' name='val'/></method><method return='java.math.BigInteger' name='xor'><parameter type='java.math.BigInteger' name='val'/></method></class><class extends='java.lang.Object' name='MathContext' final='true'><constructor type='java.math.MathContext' name='MathContext'><parameter type='int' name='precision'/></constructor><constructor type='java.math.MathContext' name='MathContext'><parameter type='int' name='precision'/><parameter type='java.math.RoundingMode' name='roundingMode'/></constructor><constructor type='java.math.MathContext' name='MathContext'><parameter type='java.lang.String' name='val'/></constructor><method return='int' name='getPrecision'/><method return='java.math.RoundingMode' name='getRoundingMode'/></class><class extends='java.lang.Enum' name='RoundingMode' final='true'><method return='java.math.RoundingMode' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.math.RoundingMode' static='true' name='valueOf'><parameter type='int' name='rM'/></method><method return='java.math.RoundingMode[]' static='true' name='values' final='true'/></class></package><package name='java.net'><class extends='java.lang.Object' abstract='true' name='Authenticator'><constructor type='java.net.Authenticator' name='Authenticator'/><method visibility='protected' return='java.net.PasswordAuthentication' name='getPasswordAuthentication'/><method visibility='protected' return='java.lang.String' name='getRequestingHost' final='true'/><method visibility='protected' return='int' name='getRequestingPort' final='true'/><method visibility='protected' return='java.lang.String' name='getRequestingPrompt' final='true'/><method visibility='protected' return='java.lang.String' name='getRequestingProtocol' final='true'/><method visibility='protected' return='java.lang.String' name='getRequestingScheme' final='true'/><method visibility='protected' return='java.net.InetAddress' name='getRequestingSite' final='true'/><method visibility='protected' return='java.net.URL' name='getRequestingURL'/><method visibility='protected' return='java.net.Authenticator.RequestorType' name='getRequestorType'/><method return='java.net.PasswordAuthentication' static='true' synchronized='true' name='requestPasswordAuthentication'><parameter type='java.net.InetAddress' name='rAddr'/><parameter type='int' name='rPort'/><parameter type='java.lang.String' name='rProtocol'/><parameter type='java.lang.String' name='rPrompt'/><parameter type='java.lang.String' name='rScheme'/></method><method return='java.net.PasswordAuthentication' static='true' synchronized='true' name='requestPasswordAuthentication'><parameter type='java.lang.String' name='rHost'/><parameter type='java.net.InetAddress' name='rAddr'/><parameter type='int' name='rPort'/><parameter type='java.lang.String' name='rProtocol'/><parameter type='java.lang.String' name='rPrompt'/><parameter type='java.lang.String' name='rScheme'/></method><method return='java.net.PasswordAuthentication' static='true' name='requestPasswordAuthentication'><parameter type='java.lang.String' name='rHost'/><parameter type='java.net.InetAddress' name='rAddr'/><parameter type='int' name='rPort'/><parameter type='java.lang.String' name='rProtocol'/><parameter type='java.lang.String' name='rPrompt'/><parameter type='java.lang.String' name='rScheme'/><parameter type='java.net.URL' name='rURL'/><parameter type='java.net.Authenticator.RequestorType' name='reqType'/></method><method static='true' name='setDefault'><parameter type='java.net.Authenticator' name='a'/></method></class><class extends='java.lang.Enum' static='true' name='Authenticator.RequestorType' final='true'><method return='java.net.Authenticator.RequestorType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.net.Authenticator.RequestorType[]' static='true' name='values' final='true'/></class><class extends='java.net.SocketException' name='BindException'><constructor type='java.net.BindException' name='BindException'/><constructor type='java.net.BindException' name='BindException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='CacheRequest'><constructor type='java.net.CacheRequest' name='CacheRequest'/><method abstract='true' name='abort'/><method return='java.io.OutputStream' abstract='true' name='getBody'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='CacheResponse'><constructor type='java.net.CacheResponse' name='CacheResponse'/><method return='java.io.InputStream' abstract='true' name='getBody'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' abstract='true' name='getHeaders'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.net.SocketException' name='ConnectException'><constructor type='java.net.ConnectException' name='ConnectException'/><constructor type='java.net.ConnectException' name='ConnectException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='ContentHandler'><constructor type='java.net.ContentHandler' name='ContentHandler'/><method return='java.lang.Object' abstract='true' name='getContent'><parameter type='java.net.URLConnection' name='uConn'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='getContent'><parameter type='java.net.URLConnection' name='uConn'/><parameter type='java.lang.Class[]' name='types'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='CookieHandler'><constructor type='java.net.CookieHandler' name='CookieHandler'/><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' abstract='true' api_removed='14' name='get'><parameter type='java.net.URI' name='uri'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='requestHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.CookieHandler' static='true' name='getDefault'/><method abstract='true' api_removed='14' name='put'><parameter type='java.net.URI' name='uri'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='responseHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='setDefault'><parameter type='java.net.CookieHandler' name='cHandler'/></method><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' abstract='true' name='get' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg2'/></method><method abstract='true' name='put' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg2'/></method></class><class extends='java.lang.Object' name='DatagramPacket' final='true'><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='length'/></constructor><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></constructor><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='java.net.InetAddress' name='host'/><parameter type='int' name='aPort'/></constructor><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='length'/><parameter type='java.net.InetAddress' name='host'/><parameter type='int' name='port'/></constructor><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='length'/><parameter type='java.net.SocketAddress' name='sockAddr'/><exception type='java.net.SocketException' name='SocketException'/></constructor><constructor type='java.net.DatagramPacket' name='DatagramPacket'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='java.net.SocketAddress' name='sockAddr'/><exception type='java.net.SocketException' name='SocketException'/></constructor><method return='java.net.InetAddress' synchronized='true' name='getAddress'/><method return='byte[]' synchronized='true' name='getData'/><method return='int' synchronized='true' name='getLength'/><method return='int' synchronized='true' name='getOffset'/><method return='int' synchronized='true' name='getPort'/><method return='java.net.SocketAddress' synchronized='true' name='getSocketAddress'/><method synchronized='true' name='setAddress'><parameter type='java.net.InetAddress' name='addr'/></method><method synchronized='true' name='setData'><parameter type='byte[]' name='buf'/><parameter type='int' name='anOffset'/><parameter type='int' name='aLength'/></method><method synchronized='true' name='setData'><parameter type='byte[]' name='buf'/></method><method synchronized='true' name='setLength'><parameter type='int' name='len'/></method><method synchronized='true' name='setPort'><parameter type='int' name='aPort'/></method><method synchronized='true' name='setSocketAddress'><parameter type='java.net.SocketAddress' name='sockAddr'/></method></class><class extends='java.lang.Object' name='DatagramSocket'><constructor type='java.net.DatagramSocket' name='DatagramSocket'><exception type='java.net.SocketException' name='SocketException'/></constructor><constructor type='java.net.DatagramSocket' name='DatagramSocket'><parameter type='int' name='aPort'/><exception type='java.net.SocketException' name='SocketException'/></constructor><constructor type='java.net.DatagramSocket' name='DatagramSocket'><parameter type='int' name='aPort'/><parameter type='java.net.InetAddress' name='addr'/><exception type='java.net.SocketException' name='SocketException'/></constructor><constructor visibility='protected' type='java.net.DatagramSocket' name='DatagramSocket'><parameter type='java.net.DatagramSocketImpl' name='socketImpl'/></constructor><constructor type='java.net.DatagramSocket' name='DatagramSocket'><parameter type='java.net.SocketAddress' name='localAddr'/><exception type='java.net.SocketException' name='SocketException'/></constructor><method name='bind'><parameter type='java.net.SocketAddress' name='localAddr'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='close'/><method name='connect'><parameter type='java.net.InetAddress' name='anAddress'/><parameter type='int' name='aPort'/></method><method name='connect'><parameter type='java.net.SocketAddress' name='remoteAddr'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='disconnect'/><method return='boolean' name='getBroadcast'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.nio.channels.DatagramChannel' name='getChannel'/><method return='java.net.InetAddress' name='getInetAddress'/><method return='java.net.InetAddress' name='getLocalAddress'/><method return='int' name='getLocalPort'/><method return='java.net.SocketAddress' name='getLocalSocketAddress'/><method return='int' name='getPort'/><method return='int' synchronized='true' name='getReceiveBufferSize'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.SocketAddress' name='getRemoteSocketAddress'/><method return='boolean' name='getReuseAddress'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' synchronized='true' name='getSendBufferSize'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' synchronized='true' name='getSoTimeout'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' name='getTrafficClass'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='isBound'/><method return='boolean' name='isClosed'/><method return='boolean' name='isConnected'/><method synchronized='true' name='receive'><parameter type='java.net.DatagramPacket' name='pack'/><exception type='java.io.IOException' name='IOException'/></method><method name='send'><parameter type='java.net.DatagramPacket' name='pack'/><exception type='java.io.IOException' name='IOException'/></method><method name='setBroadcast'><parameter type='boolean' name='broadcast'/><exception type='java.net.SocketException' name='SocketException'/></method><method static='true' synchronized='true' name='setDatagramSocketImplFactory'><parameter type='java.net.DatagramSocketImplFactory' name='fac'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='setReceiveBufferSize'><parameter type='int' name='size'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setReuseAddress'><parameter type='boolean' name='reuse'/><exception type='java.net.SocketException' name='SocketException'/></method><method synchronized='true' name='setSendBufferSize'><parameter type='int' name='size'/><exception type='java.net.SocketException' name='SocketException'/></method><method synchronized='true' name='setSoTimeout'><parameter type='int' name='timeout'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setTrafficClass'><parameter type='int' name='value'/><exception type='java.net.SocketException' name='SocketException'/></method></class><class extends='java.lang.Object' abstract='true' name='DatagramSocketImpl'><constructor type='java.net.DatagramSocketImpl' name='DatagramSocketImpl'/><method visibility='protected' abstract='true' name='bind'><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='addr'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' abstract='true' name='close'/><method visibility='protected' name='connect'><parameter type='java.net.InetAddress' name='inetAddr'/><parameter type='int' name='port'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' abstract='true' name='create'><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' name='disconnect'/><method visibility='protected' return='java.io.FileDescriptor' name='getFileDescriptor'/><method visibility='protected' return='int' name='getLocalPort'/><method return='java.lang.Object' abstract='true' api_removed='5' name='getOption'><parameter type='int' name='optID'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' deprecated='1' return='byte' abstract='true' name='getTTL'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' abstract='true' name='getTimeToLive'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='join'><parameter type='java.net.InetAddress' name='addr'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='joinGroup'><parameter type='java.net.SocketAddress' name='addr'/><parameter type='java.net.NetworkInterface' name='netInterface'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='leave'><parameter type='java.net.InetAddress' name='addr'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='leaveGroup'><parameter type='java.net.SocketAddress' name='addr'/><parameter type='java.net.NetworkInterface' name='netInterface'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' abstract='true' name='peek'><parameter type='java.net.InetAddress' name='sender'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' abstract='true' name='peekData'><parameter type='java.net.DatagramPacket' name='pack'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='receive'><parameter type='java.net.DatagramPacket' name='pack'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='send'><parameter type='java.net.DatagramPacket' name='pack'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' api_removed='5' name='setOption'><parameter type='int' name='optID'/><parameter type='java.lang.Object' name='val'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' deprecated='1' abstract='true' name='setTTL'><parameter type='byte' name='ttl'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='setTimeToLive'><parameter type='int' name='ttl'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='HttpRetryException'><constructor type='java.net.HttpRetryException' name='HttpRetryException'><parameter type='java.lang.String' name='detail'/><parameter type='int' name='code'/></constructor><constructor type='java.net.HttpRetryException' name='HttpRetryException'><parameter type='java.lang.String' name='detail'/><parameter type='int' name='code'/><parameter type='java.lang.String' name='location'/></constructor><method return='java.lang.String' name='getLocation'/><method return='java.lang.String' name='getReason'/><method return='int' name='responseCode'/></class><class extends='java.net.URLConnection' abstract='true' name='HttpURLConnection'><constructor visibility='protected' type='java.net.HttpURLConnection' name='HttpURLConnection'><parameter type='java.net.URL' name='url'/></constructor><method abstract='true' name='disconnect'/><method return='java.io.InputStream' name='getErrorStream'/><method return='boolean' static='true' name='getFollowRedirects'/><method return='boolean' name='getInstanceFollowRedirects'/><method return='java.lang.String' name='getRequestMethod'/><method return='int' name='getResponseCode'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getResponseMessage'><exception type='java.io.IOException' name='IOException'/></method><method name='setChunkedStreamingMode'><parameter type='int' name='chunklen'/></method><method name='setFixedLengthStreamingMode'><parameter type='int' name='contentLength'/></method><method static='true' name='setFollowRedirects'><parameter type='boolean' name='auto'/></method><method name='setInstanceFollowRedirects'><parameter type='boolean' name='followRedirects'/></method><method name='setRequestMethod'><parameter type='java.lang.String' name='method'/><exception type='java.net.ProtocolException' name='ProtocolException'/></method><method return='boolean' abstract='true' name='usingProxy'/></class><class extends='java.net.InetAddress' name='Inet4Address' final='true'/><class extends='java.net.InetAddress' name='Inet6Address' final='true'><method return='java.net.Inet6Address' static='true' name='getByAddress'><parameter type='java.lang.String' name='host'/><parameter type='byte[]' name='addr'/><parameter type='int' name='scope_id'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.Inet6Address' static='true' name='getByAddress'><parameter type='java.lang.String' name='host'/><parameter type='byte[]' name='addr'/><parameter type='java.net.NetworkInterface' name='nif'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='int' name='getScopeId'/><method return='java.net.NetworkInterface' name='getScopedInterface'/><method return='boolean' name='isIPv4CompatibleAddress'/></class><class extends='java.lang.Object' name='InetAddress'><method return='byte[]' name='getAddress'/><method return='java.net.InetAddress[]' static='true' name='getAllByName'><parameter type='java.lang.String' name='host'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.InetAddress' static='true' name='getByAddress'><parameter type='byte[]' name='ipAddress'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.InetAddress' static='true' name='getByAddress'><parameter type='java.lang.String' name='hostName'/><parameter type='byte[]' name='ipAddress'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.InetAddress' static='true' name='getByName'><parameter type='java.lang.String' name='host'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.lang.String' name='getCanonicalHostName'/><method return='java.lang.String' name='getHostAddress'/><method return='java.lang.String' name='getHostName'/><method return='java.net.InetAddress' static='true' name='getLocalHost'><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='boolean' name='isAnyLocalAddress'/><method return='boolean' name='isLinkLocalAddress'/><method return='boolean' name='isLoopbackAddress'/><method return='boolean' name='isMCGlobal'/><method return='boolean' name='isMCLinkLocal'/><method return='boolean' name='isMCNodeLocal'/><method return='boolean' name='isMCOrgLocal'/><method return='boolean' name='isMCSiteLocal'/><method return='boolean' name='isMulticastAddress'/><method return='boolean' name='isReachable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isReachable'><parameter type='java.net.NetworkInterface' name='netif'/><parameter type='int' name='ttl'/><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isSiteLocalAddress'/></class><class extends='java.net.SocketAddress' name='InetSocketAddress'><constructor type='java.net.InetSocketAddress' name='InetSocketAddress'><parameter type='int' name='port'/></constructor><constructor type='java.net.InetSocketAddress' name='InetSocketAddress'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/></constructor><constructor type='java.net.InetSocketAddress' name='InetSocketAddress'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></constructor><method return='java.net.InetSocketAddress' static='true' name='createUnresolved'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='socketAddr'/></method><method return='java.net.InetAddress' name='getAddress' final='true'/><method return='java.lang.String' name='getHostName' final='true'/><method return='int' name='getPort' final='true'/><method return='int' name='hashCode' final='true'/><method return='boolean' name='isUnresolved' final='true'/></class><class extends='java.net.URLConnection' abstract='true' name='JarURLConnection'><constructor visibility='protected' type='java.net.JarURLConnection' name='JarURLConnection'><parameter type='java.net.URL' name='url'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><method return='java.util.jar.Attributes' name='getAttributes'><exception type='java.io.IOException' name='IOException'/></method><method return='java.security.cert.Certificate[]' name='getCertificates'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getEntryName'/><method return='java.util.jar.JarEntry' name='getJarEntry'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.jar.JarFile' abstract='true' name='getJarFile'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.URL' name='getJarFileURL'/><method return='java.util.jar.Attributes' name='getMainAttributes'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.jar.Manifest' name='getManifest'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.IOException' name='MalformedURLException'><constructor type='java.net.MalformedURLException' name='MalformedURLException'/><constructor type='java.net.MalformedURLException' name='MalformedURLException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.net.DatagramSocket' name='MulticastSocket'><constructor type='java.net.MulticastSocket' name='MulticastSocket'><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.MulticastSocket' name='MulticastSocket'><parameter type='int' name='aPort'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.MulticastSocket' name='MulticastSocket'><parameter type='java.net.SocketAddress' name='localAddr'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.net.InetAddress' name='getInterface'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='getLoopbackMode'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.NetworkInterface' name='getNetworkInterface'><exception type='java.net.SocketException' name='SocketException'/></method><method deprecated='1' return='byte' name='getTTL'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getTimeToLive'><exception type='java.io.IOException' name='IOException'/></method><method name='joinGroup'><parameter type='java.net.InetAddress' name='groupAddr'/><exception type='java.io.IOException' name='IOException'/></method><method name='joinGroup'><parameter type='java.net.SocketAddress' name='groupAddress'/><parameter type='java.net.NetworkInterface' name='netInterface'/><exception type='java.io.IOException' name='IOException'/></method><method name='leaveGroup'><parameter type='java.net.InetAddress' name='groupAddr'/><exception type='java.io.IOException' name='IOException'/></method><method name='leaveGroup'><parameter type='java.net.SocketAddress' name='groupAddress'/><parameter type='java.net.NetworkInterface' name='netInterface'/><exception type='java.io.IOException' name='IOException'/></method><method deprecated='1' name='send'><parameter type='java.net.DatagramPacket' name='pack'/><parameter type='byte' name='ttl'/><exception type='java.io.IOException' name='IOException'/></method><method name='setInterface'><parameter type='java.net.InetAddress' name='addr'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setLoopbackMode'><parameter type='boolean' name='loop'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setNetworkInterface'><parameter type='java.net.NetworkInterface' name='netInterface'/><exception type='java.net.SocketException' name='SocketException'/></method><method deprecated='1' name='setTTL'><parameter type='byte' name='ttl'/><exception type='java.io.IOException' name='IOException'/></method><method name='setTimeToLive'><parameter type='int' name='ttl'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.security.BasicPermission' name='NetPermission' final='true'><constructor type='java.net.NetPermission' name='NetPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.net.NetPermission' name='NetPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.lang.Object' name='NetworkInterface' final='true'><method return='java.net.NetworkInterface' static='true' name='getByInetAddress'><parameter type='java.net.InetAddress' name='address'/><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.NetworkInterface' static='true' name='getByName'><parameter type='java.lang.String' name='interfaceName'/><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.lang.String' name='getDisplayName'/><method return='java.util.Enumeration&lt;java.net.InetAddress&gt;' name='getInetAddresses'/><method return='java.lang.String' name='getName'/><method return='java.util.Enumeration&lt;java.net.NetworkInterface&gt;' static='true' name='getNetworkInterfaces'><exception type='java.net.SocketException' name='SocketException'/></method><method return='byte[]' name='getHardwareAddress' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.util.List&lt;java.net.InterfaceAddress&gt;' name='getInterfaceAddresses' api_added='9'/><method return='int' name='getMTU' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.NetworkInterface' name='getParent' api_added='9'/><method return='java.util.Enumeration&lt;java.net.NetworkInterface&gt;' name='getSubInterfaces' api_added='9'/><method return='boolean' name='isLoopback' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='isPointToPoint' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='isUp' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='isVirtual' api_added='9'/><method return='boolean' name='supportsMulticast' api_added='9'><exception type='java.net.SocketException' name='SocketException'/></method></class><class extends='java.net.SocketException' name='NoRouteToHostException'><constructor type='java.net.NoRouteToHostException' name='NoRouteToHostException'/><constructor type='java.net.NoRouteToHostException' name='NoRouteToHostException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='PasswordAuthentication' final='true'><constructor type='java.net.PasswordAuthentication' name='PasswordAuthentication'><parameter type='java.lang.String' name='userName'/><parameter type='char[]' name='password'/></constructor><method return='char[]' name='getPassword'/><method return='java.lang.String' name='getUserName'/></class><class extends='java.net.SocketException' name='PortUnreachableException'><constructor type='java.net.PortUnreachableException' name='PortUnreachableException'/><constructor type='java.net.PortUnreachableException' name='PortUnreachableException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.IOException' name='ProtocolException'><constructor type='java.net.ProtocolException' name='ProtocolException'/><constructor type='java.net.ProtocolException' name='ProtocolException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Proxy'><constructor type='java.net.Proxy' name='Proxy'><parameter type='java.net.Proxy.Type' name='type'/><parameter type='java.net.SocketAddress' name='sa'/></constructor><method return='java.net.SocketAddress' name='address'/><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='obj'/></method><method return='int' name='hashCode' final='true'/><method return='java.net.Proxy.Type' name='type'/></class><class extends='java.lang.Enum' static='true' name='Proxy.Type' final='true'><method return='java.net.Proxy.Type' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.net.Proxy.Type[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' abstract='true' name='ProxySelector'><constructor type='java.net.ProxySelector' name='ProxySelector'/><method abstract='true' name='connectFailed'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.SocketAddress' name='sa'/><parameter type='java.io.IOException' name='ioe'/></method><method return='java.net.ProxySelector' static='true' name='getDefault'/><method return='java.util.List&lt;java.net.Proxy&gt;' abstract='true' name='select'><parameter type='java.net.URI' name='uri'/></method><method static='true' name='setDefault'><parameter type='java.net.ProxySelector' name='selector'/></method></class><class extends='java.lang.Object' abstract='true' name='ResponseCache'><constructor type='java.net.ResponseCache' name='ResponseCache'/><method return='java.net.CacheResponse' abstract='true' api_removed='14' name='get'><parameter type='java.net.URI' name='uri'/><parameter type='java.lang.String' name='rqstMethod'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='rqstHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.ResponseCache' static='true' name='getDefault'/><method return='java.net.CacheRequest' abstract='true' name='put'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.URLConnection' name='conn'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='setDefault'><parameter type='java.net.ResponseCache' name='responseCache'/></method><method return='java.net.CacheResponse' abstract='true' name='get' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg3'/></method></class><class extends='java.net.CacheResponse' abstract='true' name='SecureCacheResponse'><constructor type='java.net.SecureCacheResponse' name='SecureCacheResponse'/><method return='java.lang.String' abstract='true' name='getCipherSuite'/><method return='java.util.List&lt;java.security.cert.Certificate&gt;' abstract='true' name='getLocalCertificateChain'/><method return='java.security.Principal' abstract='true' name='getLocalPrincipal'/><method return='java.security.Principal' abstract='true' name='getPeerPrincipal'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.util.List&lt;java.security.cert.Certificate&gt;' abstract='true' name='getServerCertificateChain'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method></class><class extends='java.lang.Object' name='ServerSocket'><constructor type='java.net.ServerSocket' name='ServerSocket'><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='java.net.ServerSocket' name='ServerSocket'><parameter type='java.net.SocketImpl' name='impl'/></constructor><constructor type='java.net.ServerSocket' name='ServerSocket'><parameter type='int' name='aport'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.ServerSocket' name='ServerSocket'><parameter type='int' name='aport'/><parameter type='int' name='backlog'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.ServerSocket' name='ServerSocket'><parameter type='int' name='aport'/><parameter type='int' name='backlog'/><parameter type='java.net.InetAddress' name='localAddr'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.net.Socket' name='accept'><exception type='java.io.IOException' name='IOException'/></method><method name='bind'><parameter type='java.net.SocketAddress' name='localAddr'/><exception type='java.io.IOException' name='IOException'/></method><method name='bind'><parameter type='java.net.SocketAddress' name='localAddr'/><parameter type='int' name='backlog'/><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.ServerSocketChannel' name='getChannel'/><method return='java.net.InetAddress' name='getInetAddress'/><method return='int' name='getLocalPort'/><method return='java.net.SocketAddress' name='getLocalSocketAddress'/><method return='int' name='getReceiveBufferSize'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='getReuseAddress'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' synchronized='true' name='getSoTimeout'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='implAccept' final='true'><parameter type='java.net.Socket' name='aSocket'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isBound'/><method return='boolean' name='isClosed'/><method name='setPerformancePreferences'><parameter type='int' name='connectionTime'/><parameter type='int' name='latency'/><parameter type='int' name='bandwidth'/></method><method name='setReceiveBufferSize'><parameter type='int' name='size'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setReuseAddress'><parameter type='boolean' name='reuse'/><exception type='java.net.SocketException' name='SocketException'/></method><method synchronized='true' name='setSoTimeout'><parameter type='int' name='timeout'/><exception type='java.net.SocketException' name='SocketException'/></method><method static='true' synchronized='true' name='setSocketFactory'><parameter type='java.net.SocketImplFactory' name='aFactory'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='Socket'><constructor type='java.net.Socket' name='Socket'/><constructor type='java.net.Socket' name='Socket'><parameter type='java.net.Proxy' name='proxy'/></constructor><constructor type='java.net.Socket' name='Socket'><parameter type='java.lang.String' name='dstName'/><parameter type='int' name='dstPort'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></constructor><constructor type='java.net.Socket' name='Socket'><parameter type='java.lang.String' name='dstName'/><parameter type='int' name='dstPort'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor deprecated='1' type='java.net.Socket' name='Socket'><parameter type='java.lang.String' name='hostName'/><parameter type='int' name='port'/><parameter type='boolean' name='streaming'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.Socket' name='Socket'><parameter type='java.net.InetAddress' name='dstAddress'/><parameter type='int' name='dstPort'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.net.Socket' name='Socket'><parameter type='java.net.InetAddress' name='dstAddress'/><parameter type='int' name='dstPort'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor deprecated='1' type='java.net.Socket' name='Socket'><parameter type='java.net.InetAddress' name='addr'/><parameter type='int' name='port'/><parameter type='boolean' name='streaming'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='java.net.Socket' name='Socket'><parameter type='java.net.SocketImpl' name='anImpl'/><exception type='java.net.SocketException' name='SocketException'/></constructor><constructor type='java.net.deprecated Socket' name='deprecated Socket' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></constructor><constructor type='java.net.deprecated Socket' name='deprecated Socket' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></constructor><method name='bind'><parameter type='java.net.SocketAddress' name='localAddr'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='java.net.SocketAddress' name='remoteAddr'/><exception type='java.io.IOException' name='IOException'/></method><method name='connect'><parameter type='java.net.SocketAddress' name='remoteAddr'/><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.SocketChannel' name='getChannel'/><method return='java.net.InetAddress' name='getInetAddress'/><method return='java.io.InputStream' name='getInputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='getKeepAlive'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.InetAddress' name='getLocalAddress'/><method return='int' name='getLocalPort'/><method return='java.net.SocketAddress' name='getLocalSocketAddress'/><method return='boolean' name='getOOBInline'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.io.OutputStream' name='getOutputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getPort'/><method return='int' synchronized='true' name='getReceiveBufferSize'><exception type='java.net.SocketException' name='SocketException'/></method><method return='java.net.SocketAddress' name='getRemoteSocketAddress'/><method return='boolean' name='getReuseAddress'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' synchronized='true' name='getSendBufferSize'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' name='getSoLinger'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' synchronized='true' name='getSoTimeout'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='getTcpNoDelay'><exception type='java.net.SocketException' name='SocketException'/></method><method return='int' name='getTrafficClass'><exception type='java.net.SocketException' name='SocketException'/></method><method return='boolean' name='isBound'/><method return='boolean' name='isClosed'/><method return='boolean' name='isConnected'/><method return='boolean' name='isInputShutdown'/><method return='boolean' name='isOutputShutdown'/><method name='sendUrgentData'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method name='setKeepAlive'><parameter type='boolean' name='value'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setOOBInline'><parameter type='boolean' name='oobinline'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setPerformancePreferences'><parameter type='int' name='connectionTime'/><parameter type='int' name='latency'/><parameter type='int' name='bandwidth'/></method><method synchronized='true' name='setReceiveBufferSize'><parameter type='int' name='size'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setReuseAddress'><parameter type='boolean' name='reuse'/><exception type='java.net.SocketException' name='SocketException'/></method><method synchronized='true' name='setSendBufferSize'><parameter type='int' name='size'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setSoLinger'><parameter type='boolean' name='on'/><parameter type='int' name='timeout'/><exception type='java.net.SocketException' name='SocketException'/></method><method synchronized='true' name='setSoTimeout'><parameter type='int' name='timeout'/><exception type='java.net.SocketException' name='SocketException'/></method><method static='true' synchronized='true' name='setSocketImplFactory'><parameter type='java.net.SocketImplFactory' name='fac'/><exception type='java.io.IOException' name='IOException'/></method><method name='setTcpNoDelay'><parameter type='boolean' name='on'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='setTrafficClass'><parameter type='int' name='value'/><exception type='java.net.SocketException' name='SocketException'/></method><method name='shutdownInput'><exception type='java.io.IOException' name='IOException'/></method><method name='shutdownOutput'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='SocketAddress'><constructor type='java.net.SocketAddress' name='SocketAddress'/></class><class extends='java.io.IOException' name='SocketException'><constructor type='java.net.SocketException' name='SocketException'/><constructor type='java.net.SocketException' name='SocketException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SocketImpl'><constructor type='java.net.SocketImpl' name='SocketImpl'/><method visibility='protected' abstract='true' name='accept'><parameter type='java.net.SocketImpl' name='newSocket'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' abstract='true' name='available'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='bind'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='connect'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='connect'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='connect'><parameter type='java.net.SocketAddress' name='remoteAddr'/><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='create'><parameter type='boolean' name='isStreaming'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.io.FileDescriptor' name='getFileDescriptor'/><method visibility='protected' return='java.net.InetAddress' name='getInetAddress'/><method visibility='protected' return='java.io.InputStream' abstract='true' name='getInputStream'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' name='getLocalPort'/><method return='java.lang.Object' abstract='true' api_removed='9' name='getOption'><parameter type='int' name='optID'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' return='java.io.OutputStream' abstract='true' name='getOutputStream'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='int' name='getPort'/><method visibility='protected' abstract='true' name='listen'><parameter type='int' name='backlog'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='sendUrgentData'><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' api_removed='9' name='setOption'><parameter type='int' name='optID'/><parameter type='java.lang.Object' name='val'/><exception type='java.net.SocketException' name='SocketException'/></method><method visibility='protected' name='setPerformancePreferences'><parameter type='int' name='connectionTime'/><parameter type='int' name='latency'/><parameter type='int' name='bandwidth'/></method><method visibility='protected' name='shutdownInput'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='shutdownOutput'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='boolean' name='supportsUrgentData'/></class><class extends='java.security.Permission' name='SocketPermission' final='true'><constructor type='java.net.SocketPermission' name='SocketPermission'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='action'/></constructor><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='o'/></method><method return='java.lang.String' name='getActions'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='p'/></method></class><class extends='java.io.InterruptedIOException' name='SocketTimeoutException'><constructor type='java.net.SocketTimeoutException' name='SocketTimeoutException'/><constructor type='java.net.SocketTimeoutException' name='SocketTimeoutException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='URI' final='true'><constructor type='java.net.URI' name='URI'><parameter type='java.lang.String' name='uri'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></constructor><constructor type='java.net.URI' name='URI'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='ssp'/><parameter type='java.lang.String' name='frag'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></constructor><constructor type='java.net.URI' name='URI'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='userinfo'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String' name='fragment'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></constructor><constructor type='java.net.URI' name='URI'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='fragment'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></constructor><constructor type='java.net.URI' name='URI'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String' name='fragment'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></constructor><method return='int' name='compareTo'><parameter type='java.net.URI' name='uri'/></method><method return='java.net.URI' static='true' name='create'><parameter type='java.lang.String' name='uri'/></method><method return='java.lang.String' name='getAuthority'/><method return='java.lang.String' name='getFragment'/><method return='java.lang.String' name='getHost'/><method return='java.lang.String' name='getPath'/><method return='int' name='getPort'/><method return='java.lang.String' name='getQuery'/><method return='java.lang.String' name='getRawAuthority'/><method return='java.lang.String' name='getRawFragment'/><method return='java.lang.String' name='getRawPath'/><method return='java.lang.String' name='getRawQuery'/><method return='java.lang.String' name='getRawSchemeSpecificPart'/><method return='java.lang.String' name='getRawUserInfo'/><method return='java.lang.String' name='getScheme'/><method return='java.lang.String' name='getSchemeSpecificPart'/><method return='java.lang.String' name='getUserInfo'/><method return='boolean' name='isAbsolute'/><method return='boolean' name='isOpaque'/><method return='java.net.URI' name='normalize'/><method return='java.net.URI' name='parseServerAuthority'><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='java.net.URI' name='relativize'><parameter type='java.net.URI' name='relative'/></method><method return='java.net.URI' name='resolve'><parameter type='java.net.URI' name='relative'/></method><method return='java.net.URI' name='resolve'><parameter type='java.lang.String' name='relative'/></method><method return='java.lang.String' name='toASCIIString'/><method return='java.net.URL' name='toURL'><exception type='java.net.MalformedURLException' name='MalformedURLException'/></method></class><class extends='java.lang.Exception' name='URISyntaxException'><constructor type='java.net.URISyntaxException' name='URISyntaxException'><parameter type='java.lang.String' name='input'/><parameter type='java.lang.String' name='reason'/><parameter type='int' name='index'/></constructor><constructor type='java.net.URISyntaxException' name='URISyntaxException'><parameter type='java.lang.String' name='input'/><parameter type='java.lang.String' name='reason'/></constructor><method return='int' name='getIndex'/><method return='java.lang.String' name='getInput'/><method return='java.lang.String' name='getReason'/></class><class extends='java.lang.Object' name='URL' final='true'><constructor type='java.net.URL' name='URL'><parameter type='java.lang.String' name='spec'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><constructor type='java.net.URL' name='URL'><parameter type='java.net.URL' name='context'/><parameter type='java.lang.String' name='spec'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><constructor type='java.net.URL' name='URL'><parameter type='java.net.URL' name='context'/><parameter type='java.lang.String' name='spec'/><parameter type='java.net.URLStreamHandler' name='handler'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><constructor type='java.net.URL' name='URL'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='file'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><constructor type='java.net.URL' name='URL'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='file'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><constructor type='java.net.URL' name='URL'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='file'/><parameter type='java.net.URLStreamHandler' name='handler'/><exception type='java.net.MalformedURLException' name='MalformedURLException'/></constructor><method return='java.lang.String' name='getAuthority'/><method return='java.lang.Object' name='getContent' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='getContent' final='true'><parameter type='java.lang.Class[]' name='types'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getDefaultPort'/><method return='java.lang.String' name='getFile'/><method return='java.lang.String' name='getHost'/><method return='java.lang.String' name='getPath'/><method return='int' name='getPort'/><method return='java.lang.String' name='getProtocol'/><method return='java.lang.String' name='getQuery'/><method return='java.lang.String' name='getRef'/><method return='java.lang.String' name='getUserInfo'/><method return='java.net.URLConnection' name='openConnection'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.URLConnection' name='openConnection'><parameter type='java.net.Proxy' name='proxy'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' name='openStream' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='sameFile'><parameter type='java.net.URL' name='otherURL'/></method><method visibility='protected' name='set'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='file'/><parameter type='java.lang.String' name='ref'/></method><method visibility='protected' name='set'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='userInfo'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String' name='ref'/></method><method static='true' synchronized='true' name='setURLStreamHandlerFactory'><parameter type='java.net.URLStreamHandlerFactory' name='streamFactory'/></method><method return='java.lang.String' name='toExternalForm'/><method return='java.net.URI' name='toURI'><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method></class><class extends='java.security.SecureClassLoader' name='URLClassLoader'><constructor type='java.net.URLClassLoader' name='URLClassLoader'><parameter type='java.net.URL[]' name='urls'/></constructor><constructor type='java.net.URLClassLoader' name='URLClassLoader'><parameter type='java.net.URL[]' name='urls'/><parameter type='java.lang.ClassLoader' name='parent'/></constructor><constructor type='java.net.URLClassLoader' name='URLClassLoader'><parameter type='java.net.URL[]' name='searchUrls'/><parameter type='java.lang.ClassLoader' name='parent'/><parameter type='java.net.URLStreamHandlerFactory' name='factory'/></constructor><method visibility='protected' name='addURL'><parameter type='java.net.URL' name='url'/></method><method visibility='protected' return='java.lang.Package' name='definePackage'><parameter type='java.lang.String' name='packageName'/><parameter type='java.util.jar.Manifest' name='manifest'/><parameter type='java.net.URL' name='url'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.net.URL' name='findResource'><parameter type='java.lang.String' name='name'/></method><method return='java.util.Enumeration&lt;java.net.URL&gt;' name='findResources'><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.URL[]' name='getURLs'/><method return='java.net.URLClassLoader' static='true' name='newInstance'><parameter type='java.net.URL[]' name='urls'/></method><method return='java.net.URLClassLoader' static='true' name='newInstance'><parameter type='java.net.URL[]' name='urls'/><parameter type='java.lang.ClassLoader' name='parentCl'/></method></class><class extends='java.lang.Object' abstract='true' name='URLConnection'><constructor visibility='protected' type='java.net.URLConnection' name='URLConnection'><parameter type='java.net.URL' name='url'/></constructor><method name='addRequestProperty'><parameter type='java.lang.String' name='field'/><parameter type='java.lang.String' name='newValue'/></method><method abstract='true' name='connect'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='getAllowUserInteraction'/><method return='int' name='getConnectTimeout'/><method return='java.lang.Object' name='getContent'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='getContent'><parameter type='java.lang.Class[]' name='types'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getContentEncoding'/><method return='int' name='getContentLength'/><method return='java.lang.String' name='getContentType'/><method return='long' name='getDate'/><method return='boolean' static='true' name='getDefaultAllowUserInteraction'/><method deprecated='1' return='java.lang.String' static='true' name='getDefaultRequestProperty'><parameter type='java.lang.String' name='field'/></method><method return='boolean' name='getDefaultUseCaches'/><method return='boolean' name='getDoInput'/><method return='boolean' name='getDoOutput'/><method return='long' name='getExpiration'/><method return='java.net.FileNameMap' static='true' name='getFileNameMap'/><method return='java.lang.String' name='getHeaderField'><parameter type='int' name='pos'/></method><method return='java.lang.String' name='getHeaderField'><parameter type='java.lang.String' name='key'/></method><method return='long' name='getHeaderFieldDate'><parameter type='java.lang.String' name='field'/><parameter type='long' name='defaultValue'/></method><method return='int' name='getHeaderFieldInt'><parameter type='java.lang.String' name='field'/><parameter type='int' name='defaultValue'/></method><method return='java.lang.String' name='getHeaderFieldKey'><parameter type='int' name='posn'/></method><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='getHeaderFields'/><method return='long' name='getIfModifiedSince'/><method return='java.io.InputStream' name='getInputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='getLastModified'/><method return='java.io.OutputStream' name='getOutputStream'><exception type='java.io.IOException' name='IOException'/></method><method return='java.security.Permission' name='getPermission'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getReadTimeout'/><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='getRequestProperties'/><method return='java.lang.String' name='getRequestProperty'><parameter type='java.lang.String' name='field'/></method><method return='java.net.URL' name='getURL'/><method return='boolean' name='getUseCaches'/><method return='java.lang.String' static='true' name='guessContentTypeFromName'><parameter type='java.lang.String' name='url'/></method><method return='java.lang.String' static='true' name='guessContentTypeFromStream'><parameter type='java.io.InputStream' name='is'/><exception type='java.io.IOException' name='IOException'/></method><method name='setAllowUserInteraction'><parameter type='boolean' name='newValue'/></method><method name='setConnectTimeout'><parameter type='int' name='timeout'/></method><method static='true' synchronized='true' name='setContentHandlerFactory'><parameter type='java.net.ContentHandlerFactory' name='contentFactory'/></method><method static='true' name='setDefaultAllowUserInteraction'><parameter type='boolean' name='allows'/></method><method deprecated='1' static='true' name='setDefaultRequestProperty'><parameter type='java.lang.String' name='field'/><parameter type='java.lang.String' name='value'/></method><method name='setDefaultUseCaches'><parameter type='boolean' name='newValue'/></method><method name='setDoInput'><parameter type='boolean' name='newValue'/></method><method name='setDoOutput'><parameter type='boolean' name='newValue'/></method><method static='true' name='setFileNameMap'><parameter type='java.net.FileNameMap' name='map'/></method><method name='setIfModifiedSince'><parameter type='long' name='newValue'/></method><method name='setReadTimeout'><parameter type='int' name='timeout'/></method><method name='setRequestProperty'><parameter type='java.lang.String' name='field'/><parameter type='java.lang.String' name='newValue'/></method><method name='setUseCaches'><parameter type='boolean' name='newValue'/></method></class><class extends='java.lang.Object' name='URLDecoder'><constructor type='java.net.URLDecoder' name='URLDecoder'/><method deprecated='1' return='java.lang.String' static='true' name='decode'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String' static='true' name='decode'><parameter type='java.lang.String' name='s'/><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method></class><class extends='java.lang.Object' name='URLEncoder'><method deprecated='1' return='java.lang.String' static='true' name='encode'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String' static='true' name='encode'><parameter type='java.lang.String' name='s'/><parameter type='java.lang.String' name='enc'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method></class><class extends='java.lang.Object' abstract='true' name='URLStreamHandler'><constructor type='java.net.URLStreamHandler' name='URLStreamHandler'/><method visibility='protected' return='boolean' name='equals'><parameter type='java.net.URL' name='url1'/><parameter type='java.net.URL' name='url2'/></method><method visibility='protected' return='int' name='getDefaultPort'/><method visibility='protected' return='java.net.InetAddress' name='getHostAddress'><parameter type='java.net.URL' name='url'/></method><method visibility='protected' return='int' name='hashCode'><parameter type='java.net.URL' name='url'/></method><method visibility='protected' return='boolean' name='hostsEqual'><parameter type='java.net.URL' name='url1'/><parameter type='java.net.URL' name='url2'/></method><method visibility='protected' return='java.net.URLConnection' abstract='true' name='openConnection'><parameter type='java.net.URL' name='u'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.net.URLConnection' name='openConnection'><parameter type='java.net.URL' name='u'/><parameter type='java.net.Proxy' name='proxy'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='parseURL'><parameter type='java.net.URL' name='u'/><parameter type='java.lang.String' name='str'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method visibility='protected' return='boolean' name='sameFile'><parameter type='java.net.URL' name='url1'/><parameter type='java.net.URL' name='url2'/></method><method visibility='protected' deprecated='1' name='setURL'><parameter type='java.net.URL' name='u'/><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='file'/><parameter type='java.lang.String' name='ref'/></method><method visibility='protected' name='setURL'><parameter type='java.net.URL' name='u'/><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='authority'/><parameter type='java.lang.String' name='userInfo'/><parameter type='java.lang.String' name='file'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String' name='ref'/></method><method visibility='protected' return='java.lang.String' name='toExternalForm'><parameter type='java.net.URL' name='url'/></method></class><class extends='java.io.IOException' name='UnknownHostException'><constructor type='java.net.UnknownHostException' name='UnknownHostException'/><constructor type='java.net.UnknownHostException' name='UnknownHostException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.io.IOException' name='UnknownServiceException'><constructor type='java.net.UnknownServiceException' name='UnknownServiceException'/><constructor type='java.net.UnknownServiceException' name='UnknownServiceException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.net.CookieHandler' name='CookieManager' api_added='9'><constructor type='java.net.CookieManager' name='CookieManager' api_added='9'/><constructor type='java.net.CookieManager' name='CookieManager' api_added='9'><parameter type='java.net.CookieStore' name='store'/><parameter type='java.net.CookiePolicy' name='cookiePolicy'/></constructor><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' api_removed='14' name='get' api_added='9'><parameter type='java.net.URI' name='uri'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='requestHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.CookieStore' name='getCookieStore' api_added='9'/><method api_removed='14' name='put' api_added='9'><parameter type='java.net.URI' name='uri'/><parameter type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='responseHeaders'/><exception type='java.io.IOException' name='IOException'/></method><method name='setCookiePolicy' api_added='9'><parameter type='java.net.CookiePolicy' name='cookiePolicy'/></method><method return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;' name='get' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg2'/></method><method name='put' api_added='14'><parameter type='java.net.URI' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.util.List&lt;java.lang.String&gt;&gt;' name='arg2'/></method></class><class extends='java.lang.Object' name='HttpCookie' api_added='9' final='true'><constructor type='java.net.HttpCookie' name='HttpCookie' api_added='9'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.Object' name='clone' api_added='9'/><method return='boolean' static='true' name='domainMatches' api_added='9'><parameter type='java.lang.String' name='domainPattern'/><parameter type='java.lang.String' name='host'/></method><method return='java.lang.String' name='getComment' api_added='9'/><method return='java.lang.String' name='getCommentURL' api_added='9'/><method return='boolean' name='getDiscard' api_added='9'/><method return='java.lang.String' name='getDomain' api_added='9'/><method return='long' name='getMaxAge' api_added='9'/><method return='java.lang.String' name='getName' api_added='9'/><method return='java.lang.String' name='getPath' api_added='9'/><method return='java.lang.String' name='getPortlist' api_added='9'/><method return='boolean' name='getSecure' api_added='9'/><method return='java.lang.String' name='getValue' api_added='9'/><method return='int' name='getVersion' api_added='9'/><method return='boolean' name='hasExpired' api_added='9'/><method return='java.util.List&lt;java.net.HttpCookie&gt;' static='true' name='parse' api_added='9'><parameter type='java.lang.String' name='header'/></method><method name='setComment' api_added='9'><parameter type='java.lang.String' name='comment'/></method><method name='setCommentURL' api_added='9'><parameter type='java.lang.String' name='commentURL'/></method><method name='setDiscard' api_added='9'><parameter type='boolean' name='discard'/></method><method name='setDomain' api_added='9'><parameter type='java.lang.String' name='pattern'/></method><method name='setMaxAge' api_added='9'><parameter type='long' name='deltaSeconds'/></method><method name='setPath' api_added='9'><parameter type='java.lang.String' name='path'/></method><method name='setPortlist' api_added='9'><parameter type='java.lang.String' name='portList'/></method><method name='setSecure' api_added='9'><parameter type='boolean' name='secure'/></method><method name='setValue' api_added='9'><parameter type='java.lang.String' name='value'/></method><method name='setVersion' api_added='9'><parameter type='int' name='v'/></method></class><class extends='java.lang.Object' name='IDN' api_added='9' final='true'><method return='java.lang.String' static='true' name='toASCII' api_added='9'><parameter type='java.lang.String' name='input'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='toASCII' api_added='9'><parameter type='java.lang.String' name='input'/></method><method return='java.lang.String' static='true' name='toUnicode' api_added='9'><parameter type='java.lang.String' name='input'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='toUnicode' api_added='9'><parameter type='java.lang.String' name='input'/></method></class><class extends='java.lang.Object' name='InterfaceAddress' api_added='9'><method return='java.net.InetAddress' name='getAddress' api_added='9'/><method return='java.net.InetAddress' name='getBroadcast' api_added='9'/><method return='short' name='getNetworkPrefixLength' api_added='9'/></class><interface abstract='true' name='ContentHandlerFactory'><method return='java.net.ContentHandler' abstract='true' name='createContentHandler'><parameter type='java.lang.String' name='contentType'/></method></interface><interface abstract='true' name='DatagramSocketImplFactory'><method return='java.net.DatagramSocketImpl' abstract='true' name='createDatagramSocketImpl'/></interface><interface abstract='true' name='FileNameMap'><method return='java.lang.String' abstract='true' name='getContentTypeFor'><parameter type='java.lang.String' name='fileName'/></method></interface><interface abstract='true' name='SocketImplFactory'><method return='java.net.SocketImpl' abstract='true' name='createSocketImpl'/></interface><interface abstract='true' name='SocketOptions'><method return='java.lang.Object' abstract='true' name='getOption'><parameter type='int' name='optID'/><exception type='java.net.SocketException' name='SocketException'/></method><method abstract='true' name='setOption'><parameter type='int' name='optID'/><parameter type='java.lang.Object' name='val'/><exception type='java.net.SocketException' name='SocketException'/></method></interface><interface abstract='true' name='URLStreamHandlerFactory'><method return='java.net.URLStreamHandler' abstract='true' name='createURLStreamHandler'><parameter type='java.lang.String' name='protocol'/></method></interface><interface abstract='true' name='CookiePolicy' api_added='9'><method return='boolean' abstract='true' name='shouldAccept' api_added='9'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.HttpCookie' name='cookie'/></method></interface><interface abstract='true' name='CookieStore' api_added='9'><method abstract='true' name='add' api_added='9'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.HttpCookie' name='cookie'/></method><method return='java.util.List&lt;java.net.HttpCookie&gt;' abstract='true' name='get' api_added='9'><parameter type='java.net.URI' name='uri'/></method><method return='java.util.List&lt;java.net.HttpCookie&gt;' abstract='true' name='getCookies' api_added='9'/><method return='java.util.List&lt;java.net.URI&gt;' abstract='true' name='getURIs' api_added='9'/><method return='boolean' abstract='true' name='remove' api_added='9'><parameter type='java.net.URI' name='uri'/><parameter type='java.net.HttpCookie' name='cookie'/></method><method return='boolean' abstract='true' name='removeAll' api_added='9'/></interface></package><package name='java.nio'><class extends='java.lang.Object' abstract='true' name='Buffer'><method return='int' name='capacity' final='true'/><method return='java.nio.Buffer' name='clear' final='true'/><method return='java.nio.Buffer' name='flip' final='true'/><method return='boolean' name='hasRemaining' final='true'/><method return='boolean' abstract='true' name='isReadOnly'/><method return='int' name='limit' final='true'/><method return='java.nio.Buffer' name='limit' final='true'><parameter type='int' name='newLimit'/></method><method return='java.nio.Buffer' name='mark' final='true'/><method return='int' name='position' final='true'/><method return='java.nio.Buffer' name='position' final='true'><parameter type='int' name='newPosition'/></method><method return='int' name='remaining' final='true'/><method return='java.nio.Buffer' name='reset' final='true'/><method return='java.nio.Buffer' name='rewind' final='true'/><method return='java.lang.Object' abstract='true' name='array' api_added='9'/><method return='int' abstract='true' name='arrayOffset' api_added='9'/><method return='boolean' abstract='true' name='hasArray' api_added='9'/><method return='boolean' abstract='true' name='isDirect' api_added='9'/></class><class extends='java.lang.RuntimeException' name='BufferOverflowException'><constructor type='java.nio.BufferOverflowException' name='BufferOverflowException'/></class><class extends='java.lang.RuntimeException' name='BufferUnderflowException'><constructor type='java.nio.BufferUnderflowException' name='BufferUnderflowException'/></class><class extends='java.nio.Buffer' abstract='true' name='ByteBuffer'><method return='java.nio.ByteBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='java.nio.ByteBuffer' static='true' name='allocateDirect'><parameter type='int' name='capacity'/></method><method return='byte[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.CharBuffer' abstract='true' name='asCharBuffer'/><method return='java.nio.DoubleBuffer' abstract='true' name='asDoubleBuffer'/><method return='java.nio.FloatBuffer' abstract='true' name='asFloatBuffer'/><method return='java.nio.IntBuffer' abstract='true' name='asIntBuffer'/><method return='java.nio.LongBuffer' abstract='true' name='asLongBuffer'/><method return='java.nio.ByteBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.ShortBuffer' abstract='true' name='asShortBuffer'/><method return='java.nio.ByteBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.ByteBuffer' name='otherBuffer'/></method><method return='java.nio.ByteBuffer' abstract='true' name='duplicate'/><method return='byte' abstract='true' name='get'/><method return='java.nio.ByteBuffer' name='get'><parameter type='byte[]' name='dest'/></method><method return='java.nio.ByteBuffer' name='get'><parameter type='byte[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='byte' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='char' abstract='true' name='getChar'/><method return='char' abstract='true' name='getChar'><parameter type='int' name='index'/></method><method return='double' abstract='true' name='getDouble'/><method return='double' abstract='true' name='getDouble'><parameter type='int' name='index'/></method><method return='float' abstract='true' name='getFloat'/><method return='float' abstract='true' name='getFloat'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getInt'/><method return='int' abstract='true' name='getInt'><parameter type='int' name='index'/></method><method return='long' abstract='true' name='getLong'/><method return='long' abstract='true' name='getLong'><parameter type='int' name='index'/></method><method return='short' abstract='true' name='getShort'/><method return='short' abstract='true' name='getShort'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' name='order' final='true'/><method return='java.nio.ByteBuffer' name='order' final='true'><parameter type='java.nio.ByteOrder' name='byteOrder'/></method><method return='java.nio.ByteBuffer' abstract='true' name='put'><parameter type='byte' name='b'/></method><method return='java.nio.ByteBuffer' name='put' final='true'><parameter type='byte[]' name='src'/></method><method return='java.nio.ByteBuffer' name='put'><parameter type='byte[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.ByteBuffer' name='put'><parameter type='java.nio.ByteBuffer' name='src'/></method><method return='java.nio.ByteBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='byte' name='b'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putChar'><parameter type='char' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putChar'><parameter type='int' name='index'/><parameter type='char' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putDouble'><parameter type='double' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putDouble'><parameter type='int' name='index'/><parameter type='double' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putFloat'><parameter type='float' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putFloat'><parameter type='int' name='index'/><parameter type='float' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putInt'><parameter type='int' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putInt'><parameter type='int' name='index'/><parameter type='int' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putLong'><parameter type='long' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putLong'><parameter type='int' name='index'/><parameter type='long' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putShort'><parameter type='short' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='putShort'><parameter type='int' name='index'/><parameter type='short' name='value'/></method><method return='java.nio.ByteBuffer' abstract='true' name='slice'/><method return='java.nio.ByteBuffer' static='true' name='wrap'><parameter type='byte[]' name='array'/></method><method return='java.nio.ByteBuffer' static='true' name='wrap'><parameter type='byte[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class><class extends='java.lang.Object' name='ByteOrder' final='true'><method return='java.nio.ByteOrder' static='true' name='nativeOrder'/></class><class extends='java.nio.Buffer' abstract='true' name='CharBuffer'><method return='java.nio.CharBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='java.nio.CharBuffer' name='append'><parameter type='char' name='c'/></method><method return='java.nio.CharBuffer' name='append'><parameter type='java.lang.CharSequence' name='csq'/></method><method return='java.nio.CharBuffer' name='append'><parameter type='java.lang.CharSequence' name='csq'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='char[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.CharBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='char' name='charAt' final='true'><parameter type='int' name='index'/></method><method return='java.nio.CharBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.CharBuffer' name='otherBuffer'/></method><method return='java.nio.CharBuffer' abstract='true' name='duplicate'/><method return='char' abstract='true' name='get'/><method return='java.nio.CharBuffer' name='get'><parameter type='char[]' name='dest'/></method><method return='java.nio.CharBuffer' name='get'><parameter type='char[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='char' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='int' name='length' final='true'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.CharBuffer' abstract='true' name='put'><parameter type='char' name='c'/></method><method return='java.nio.CharBuffer' name='put' final='true'><parameter type='char[]' name='src'/></method><method return='java.nio.CharBuffer' name='put'><parameter type='char[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.CharBuffer' name='put'><parameter type='java.nio.CharBuffer' name='src'/></method><method return='java.nio.CharBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='char' name='c'/></method><method return='java.nio.CharBuffer' name='put' final='true'><parameter type='java.lang.String' name='str'/></method><method return='java.nio.CharBuffer' name='put'><parameter type='java.lang.String' name='str'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' name='read'><parameter type='java.nio.CharBuffer' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.CharBuffer' abstract='true' name='slice'/><method return='java.lang.CharSequence' abstract='true' name='subSequence'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.nio.CharBuffer' static='true' name='wrap'><parameter type='char[]' name='array'/></method><method return='java.nio.CharBuffer' static='true' name='wrap'><parameter type='char[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method><method return='java.nio.CharBuffer' static='true' name='wrap'><parameter type='java.lang.CharSequence' name='chseq'/></method><method return='java.nio.CharBuffer' static='true' name='wrap'><parameter type='java.lang.CharSequence' name='chseq'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method></class><class extends='java.nio.Buffer' abstract='true' name='DoubleBuffer'><method return='java.nio.DoubleBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='double[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.DoubleBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.DoubleBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.DoubleBuffer' name='otherBuffer'/></method><method return='java.nio.DoubleBuffer' abstract='true' name='duplicate'/><method return='double' abstract='true' name='get'/><method return='java.nio.DoubleBuffer' name='get'><parameter type='double[]' name='dest'/></method><method return='java.nio.DoubleBuffer' name='get'><parameter type='double[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='double' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.DoubleBuffer' abstract='true' name='put'><parameter type='double' name='d'/></method><method return='java.nio.DoubleBuffer' name='put' final='true'><parameter type='double[]' name='src'/></method><method return='java.nio.DoubleBuffer' name='put'><parameter type='double[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.DoubleBuffer' name='put'><parameter type='java.nio.DoubleBuffer' name='src'/></method><method return='java.nio.DoubleBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='double' name='d'/></method><method return='java.nio.DoubleBuffer' abstract='true' name='slice'/><method return='java.nio.DoubleBuffer' static='true' name='wrap'><parameter type='double[]' name='array'/></method><method return='java.nio.DoubleBuffer' static='true' name='wrap'><parameter type='double[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class><class extends='java.nio.Buffer' abstract='true' name='FloatBuffer'><method return='java.nio.FloatBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='float[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.FloatBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.FloatBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.FloatBuffer' name='otherBuffer'/></method><method return='java.nio.FloatBuffer' abstract='true' name='duplicate'/><method return='float' abstract='true' name='get'/><method return='java.nio.FloatBuffer' name='get'><parameter type='float[]' name='dest'/></method><method return='java.nio.FloatBuffer' name='get'><parameter type='float[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='float' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.FloatBuffer' abstract='true' name='put'><parameter type='float' name='f'/></method><method return='java.nio.FloatBuffer' name='put' final='true'><parameter type='float[]' name='src'/></method><method return='java.nio.FloatBuffer' name='put'><parameter type='float[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.FloatBuffer' name='put'><parameter type='java.nio.FloatBuffer' name='src'/></method><method return='java.nio.FloatBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='float' name='f'/></method><method return='java.nio.FloatBuffer' abstract='true' name='slice'/><method return='java.nio.FloatBuffer' static='true' name='wrap'><parameter type='float[]' name='array'/></method><method return='java.nio.FloatBuffer' static='true' name='wrap'><parameter type='float[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class><class extends='java.nio.Buffer' abstract='true' name='IntBuffer'><method return='java.nio.IntBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='int[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.IntBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.IntBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.IntBuffer' name='otherBuffer'/></method><method return='java.nio.IntBuffer' abstract='true' name='duplicate'/><method return='int' abstract='true' name='get'/><method return='java.nio.IntBuffer' name='get'><parameter type='int[]' name='dest'/></method><method return='java.nio.IntBuffer' name='get'><parameter type='int[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='int' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.IntBuffer' abstract='true' name='put'><parameter type='int' name='i'/></method><method return='java.nio.IntBuffer' name='put' final='true'><parameter type='int[]' name='src'/></method><method return='java.nio.IntBuffer' name='put'><parameter type='int[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.IntBuffer' name='put'><parameter type='java.nio.IntBuffer' name='src'/></method><method return='java.nio.IntBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='int' name='i'/></method><method return='java.nio.IntBuffer' abstract='true' name='slice'/><method return='java.nio.IntBuffer' static='true' name='wrap'><parameter type='int[]' name='array'/></method><method return='java.nio.IntBuffer' static='true' name='wrap'><parameter type='int[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class><class extends='java.lang.IllegalStateException' name='InvalidMarkException'><constructor type='java.nio.InvalidMarkException' name='InvalidMarkException'/></class><class extends='java.nio.Buffer' abstract='true' name='LongBuffer'><method return='java.nio.LongBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='long[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.LongBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.LongBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.LongBuffer' name='otherBuffer'/></method><method return='java.nio.LongBuffer' abstract='true' name='duplicate'/><method return='long' abstract='true' name='get'/><method return='java.nio.LongBuffer' name='get'><parameter type='long[]' name='dest'/></method><method return='java.nio.LongBuffer' name='get'><parameter type='long[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='long' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.LongBuffer' abstract='true' name='put'><parameter type='long' name='l'/></method><method return='java.nio.LongBuffer' name='put' final='true'><parameter type='long[]' name='src'/></method><method return='java.nio.LongBuffer' name='put'><parameter type='long[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.LongBuffer' name='put'><parameter type='java.nio.LongBuffer' name='src'/></method><method return='java.nio.LongBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='long' name='l'/></method><method return='java.nio.LongBuffer' abstract='true' name='slice'/><method return='java.nio.LongBuffer' static='true' name='wrap'><parameter type='long[]' name='array'/></method><method return='java.nio.LongBuffer' static='true' name='wrap'><parameter type='long[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class><class extends='java.nio.ByteBuffer' abstract='true' name='MappedByteBuffer'><method return='java.nio.MappedByteBuffer' name='force' final='true'/><method return='boolean' name='isLoaded' final='true'/><method return='java.nio.MappedByteBuffer' name='load' final='true'/></class><class extends='java.lang.UnsupportedOperationException' name='ReadOnlyBufferException'><constructor type='java.nio.ReadOnlyBufferException' name='ReadOnlyBufferException'/></class><class extends='java.nio.Buffer' abstract='true' name='ShortBuffer'><method return='java.nio.ShortBuffer' static='true' name='allocate'><parameter type='int' name='capacity'/></method><method return='short[]' name='array' final='true'/><method return='int' name='arrayOffset' final='true'/><method return='java.nio.ShortBuffer' abstract='true' name='asReadOnlyBuffer'/><method return='java.nio.ShortBuffer' abstract='true' name='compact'/><method return='int' name='compareTo'><parameter type='java.nio.ShortBuffer' name='otherBuffer'/></method><method return='java.nio.ShortBuffer' abstract='true' name='duplicate'/><method return='short' abstract='true' name='get'/><method return='java.nio.ShortBuffer' name='get'><parameter type='short[]' name='dest'/></method><method return='java.nio.ShortBuffer' name='get'><parameter type='short[]' name='dest'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='short' abstract='true' name='get'><parameter type='int' name='index'/></method><method return='boolean' name='hasArray' final='true'/><method return='boolean' abstract='true' name='isDirect'/><method return='java.nio.ByteOrder' abstract='true' name='order'/><method return='java.nio.ShortBuffer' abstract='true' name='put'><parameter type='short' name='s'/></method><method return='java.nio.ShortBuffer' name='put' final='true'><parameter type='short[]' name='src'/></method><method return='java.nio.ShortBuffer' name='put'><parameter type='short[]' name='src'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='java.nio.ShortBuffer' name='put'><parameter type='java.nio.ShortBuffer' name='src'/></method><method return='java.nio.ShortBuffer' abstract='true' name='put'><parameter type='int' name='index'/><parameter type='short' name='s'/></method><method return='java.nio.ShortBuffer' abstract='true' name='slice'/><method return='java.nio.ShortBuffer' static='true' name='wrap'><parameter type='short[]' name='array'/></method><method return='java.nio.ShortBuffer' static='true' name='wrap'><parameter type='short[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='len'/></method></class></package><package name='java.nio.channels'><class extends='java.lang.IllegalStateException' name='AlreadyConnectedException'><constructor type='java.nio.channels.AlreadyConnectedException' name='AlreadyConnectedException'/></class><class extends='java.nio.channels.ClosedChannelException' name='AsynchronousCloseException'><constructor type='java.nio.channels.AsynchronousCloseException' name='AsynchronousCloseException'/></class><class extends='java.lang.IllegalStateException' name='CancelledKeyException'><constructor type='java.nio.channels.CancelledKeyException' name='CancelledKeyException'/></class><class extends='java.lang.Object' name='Channels' final='true'><method return='java.nio.channels.ReadableByteChannel' static='true' name='newChannel'><parameter type='java.io.InputStream' name='inputStream'/></method><method return='java.nio.channels.WritableByteChannel' static='true' name='newChannel'><parameter type='java.io.OutputStream' name='outputStream'/></method><method return='java.io.InputStream' static='true' name='newInputStream'><parameter type='java.nio.channels.ReadableByteChannel' name='channel'/></method><method return='java.io.OutputStream' static='true' name='newOutputStream'><parameter type='java.nio.channels.WritableByteChannel' name='channel'/></method><method return='java.io.Reader' static='true' name='newReader'><parameter type='java.nio.channels.ReadableByteChannel' name='channel'/><parameter type='java.nio.charset.CharsetDecoder' name='decoder'/><parameter type='int' name='minBufferCapacity'/></method><method return='java.io.Reader' static='true' name='newReader'><parameter type='java.nio.channels.ReadableByteChannel' name='channel'/><parameter type='java.lang.String' name='charsetName'/></method><method return='java.io.Writer' static='true' name='newWriter'><parameter type='java.nio.channels.WritableByteChannel' name='channel'/><parameter type='java.nio.charset.CharsetEncoder' name='encoder'/><parameter type='int' name='minBufferCapacity'/></method><method return='java.io.Writer' static='true' name='newWriter'><parameter type='java.nio.channels.WritableByteChannel' name='channel'/><parameter type='java.lang.String' name='charsetName'/></method></class><class extends='java.nio.channels.AsynchronousCloseException' name='ClosedByInterruptException'><constructor type='java.nio.channels.ClosedByInterruptException' name='ClosedByInterruptException'/></class><class extends='java.io.IOException' name='ClosedChannelException'><constructor type='java.nio.channels.ClosedChannelException' name='ClosedChannelException'/></class><class extends='java.lang.IllegalStateException' name='ClosedSelectorException'><constructor type='java.nio.channels.ClosedSelectorException' name='ClosedSelectorException'/></class><class extends='java.lang.IllegalStateException' name='ConnectionPendingException'><constructor type='java.nio.channels.ConnectionPendingException' name='ConnectionPendingException'/></class><class extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' name='DatagramChannel'><constructor visibility='protected' type='java.nio.channels.DatagramChannel' name='DatagramChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='selectorProvider'/></constructor><method return='java.nio.channels.DatagramChannel' abstract='true' name='connect'><parameter type='java.net.SocketAddress' name='address'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.DatagramChannel' abstract='true' name='disconnect'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isConnected'/><method return='java.nio.channels.DatagramChannel' static='true' name='open'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='java.nio.ByteBuffer' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='read'><parameter type='java.nio.ByteBuffer[]' name='targets'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' synchronized='true' name='read' final='true'><parameter type='java.nio.ByteBuffer[]' name='targets'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.SocketAddress' abstract='true' name='receive'><parameter type='java.nio.ByteBuffer' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='send'><parameter type='java.nio.ByteBuffer' name='source'/><parameter type='java.net.SocketAddress' name='address'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.DatagramSocket' abstract='true' name='socket'/><method return='int' name='validOps' final='true'/><method return='int' abstract='true' name='write'><parameter type='java.nio.ByteBuffer' name='source'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='write'><parameter type='java.nio.ByteBuffer[]' name='sources'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' synchronized='true' name='write' final='true'><parameter type='java.nio.ByteBuffer[]' name='sources'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.nio.channels.spi.AbstractInterruptibleChannel' abstract='true' name='FileChannel'><constructor visibility='protected' type='java.nio.channels.FileChannel' name='FileChannel'/><method abstract='true' name='force'><parameter type='boolean' name='metadata'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileLock' name='lock' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileLock' abstract='true' name='lock'><parameter type='long' name='position'/><parameter type='long' name='size'/><parameter type='boolean' name='shared'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.MappedByteBuffer' abstract='true' name='map'><parameter type='java.nio.channels.FileChannel.MapMode' name='mode'/><parameter type='long' name='position'/><parameter type='long' name='size'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='position'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileChannel' abstract='true' name='position'><parameter type='long' name='offset'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='java.nio.ByteBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='java.nio.ByteBuffer' name='buffer'/><parameter type='long' name='position'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='read' final='true'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='read'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><parameter type='int' name='start'/><parameter type='int' name='number'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='size'><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='transferFrom'><parameter type='java.nio.channels.ReadableByteChannel' name='src'/><parameter type='long' name='position'/><parameter type='long' name='count'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='transferTo'><parameter type='long' name='position'/><parameter type='long' name='count'/><parameter type='java.nio.channels.WritableByteChannel' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileChannel' abstract='true' name='truncate'><parameter type='long' name='size'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileLock' name='tryLock' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.FileLock' abstract='true' name='tryLock'><parameter type='long' name='position'/><parameter type='long' name='size'/><parameter type='boolean' name='shared'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='write'><parameter type='java.nio.ByteBuffer' name='src'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='write'><parameter type='java.nio.ByteBuffer' name='buffer'/><parameter type='long' name='position'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='write' final='true'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='write'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' static='true' name='FileChannel.MapMode'/><class extends='java.lang.Object' abstract='true' name='FileLock'><constructor visibility='protected' type='java.nio.channels.FileLock' name='FileLock'><parameter type='java.nio.channels.FileChannel' name='channel'/><parameter type='long' name='position'/><parameter type='long' name='size'/><parameter type='boolean' name='shared'/></constructor><method return='java.nio.channels.FileChannel' name='channel' final='true'/><method return='boolean' name='isShared' final='true'/><method return='boolean' abstract='true' name='isValid'/><method return='boolean' name='overlaps' final='true'><parameter type='long' name='start'/><parameter type='long' name='length'/></method><method return='long' name='position' final='true'/><method abstract='true' name='release'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='size' final='true'/><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.io.IOException' name='FileLockInterruptionException'><constructor type='java.nio.channels.FileLockInterruptionException' name='FileLockInterruptionException'/></class><class extends='java.lang.IllegalStateException' name='IllegalBlockingModeException'><constructor type='java.nio.channels.IllegalBlockingModeException' name='IllegalBlockingModeException'/></class><class extends='java.lang.IllegalArgumentException' name='IllegalSelectorException'><constructor type='java.nio.channels.IllegalSelectorException' name='IllegalSelectorException'/></class><class extends='java.lang.IllegalStateException' name='NoConnectionPendingException'><constructor type='java.nio.channels.NoConnectionPendingException' name='NoConnectionPendingException'/></class><class extends='java.lang.IllegalStateException' name='NonReadableChannelException'><constructor type='java.nio.channels.NonReadableChannelException' name='NonReadableChannelException'/></class><class extends='java.lang.IllegalStateException' name='NonWritableChannelException'><constructor type='java.nio.channels.NonWritableChannelException' name='NonWritableChannelException'/></class><class extends='java.lang.IllegalStateException' name='NotYetBoundException'><constructor type='java.nio.channels.NotYetBoundException' name='NotYetBoundException'/></class><class extends='java.lang.IllegalStateException' name='NotYetConnectedException'><constructor type='java.nio.channels.NotYetConnectedException' name='NotYetConnectedException'/></class><class extends='java.lang.IllegalStateException' name='OverlappingFileLockException'><constructor type='java.nio.channels.OverlappingFileLockException' name='OverlappingFileLockException'/></class><class extends='java.lang.Object' abstract='true' name='Pipe'><constructor visibility='protected' type='java.nio.channels.Pipe' name='Pipe'/><method return='java.nio.channels.Pipe' static='true' name='open'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.Pipe.SinkChannel' abstract='true' name='sink'/><method return='java.nio.channels.Pipe.SourceChannel' abstract='true' name='source'/></class><class extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' static='true' name='Pipe.SinkChannel'><constructor visibility='protected' type='java.nio.channels.Pipe.SinkChannel' name='Pipe.SinkChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='provider'/></constructor><method return='int' name='validOps' final='true'/></class><class extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' static='true' name='Pipe.SourceChannel'><constructor visibility='protected' type='java.nio.channels.Pipe.SourceChannel' name='Pipe.SourceChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='provider'/></constructor><method return='int' name='validOps' final='true'/></class><class extends='java.nio.channels.spi.AbstractInterruptibleChannel' abstract='true' name='SelectableChannel'><constructor visibility='protected' type='java.nio.channels.SelectableChannel' name='SelectableChannel'/><method return='java.lang.Object' abstract='true' name='blockingLock'/><method return='java.nio.channels.SelectableChannel' abstract='true' name='configureBlocking'><parameter type='boolean' name='block'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isBlocking'/><method return='boolean' abstract='true' name='isRegistered'/><method return='java.nio.channels.SelectionKey' abstract='true' name='keyFor'><parameter type='java.nio.channels.Selector' name='sel'/></method><method return='java.nio.channels.spi.SelectorProvider' abstract='true' name='provider'/><method return='java.nio.channels.SelectionKey' name='register' final='true'><parameter type='java.nio.channels.Selector' name='selector'/><parameter type='int' name='operations'/><exception type='java.nio.channels.ClosedChannelException' name='ClosedChannelException'/></method><method return='java.nio.channels.SelectionKey' abstract='true' name='register'><parameter type='java.nio.channels.Selector' name='sel'/><parameter type='int' name='ops'/><parameter type='java.lang.Object' name='att'/><exception type='java.nio.channels.ClosedChannelException' name='ClosedChannelException'/></method><method return='int' abstract='true' name='validOps'/></class><class extends='java.lang.Object' abstract='true' name='SelectionKey'><constructor visibility='protected' type='java.nio.channels.SelectionKey' name='SelectionKey'/><method return='java.lang.Object' name='attach' final='true'><parameter type='java.lang.Object' name='anObject'/></method><method return='java.lang.Object' name='attachment' final='true'/><method abstract='true' name='cancel'/><method return='java.nio.channels.SelectableChannel' abstract='true' name='channel'/><method return='int' abstract='true' name='interestOps'/><method return='java.nio.channels.SelectionKey' abstract='true' name='interestOps'><parameter type='int' name='operations'/></method><method return='boolean' name='isAcceptable' final='true'/><method return='boolean' name='isConnectable' final='true'/><method return='boolean' name='isReadable' final='true'/><method return='boolean' abstract='true' name='isValid'/><method return='boolean' name='isWritable' final='true'/><method return='int' abstract='true' name='readyOps'/><method return='java.nio.channels.Selector' abstract='true' name='selector'/></class><class extends='java.lang.Object' abstract='true' name='Selector'><constructor visibility='protected' type='java.nio.channels.Selector' name='Selector'/><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isOpen'/><method return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;' abstract='true' name='keys'/><method return='java.nio.channels.Selector' static='true' name='open'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.spi.SelectorProvider' abstract='true' name='provider'/><method return='int' abstract='true' name='select'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='select'><parameter type='long' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='selectNow'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;' abstract='true' name='selectedKeys'/><method return='java.nio.channels.Selector' abstract='true' name='wakeup'/></class><class extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' name='ServerSocketChannel'><constructor visibility='protected' type='java.nio.channels.ServerSocketChannel' name='ServerSocketChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='selectorProvider'/></constructor><method return='java.nio.channels.SocketChannel' abstract='true' name='accept'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.ServerSocketChannel' static='true' name='open'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.ServerSocket' abstract='true' name='socket'/><method return='int' name='validOps' final='true'/></class><class extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' name='SocketChannel'><constructor visibility='protected' type='java.nio.channels.SocketChannel' name='SocketChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='selectorProvider'/></constructor><method return='boolean' abstract='true' name='connect'><parameter type='java.net.SocketAddress' name='address'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='finishConnect'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isConnected'/><method return='boolean' abstract='true' name='isConnectionPending'/><method return='java.nio.channels.SocketChannel' static='true' name='open'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.SocketChannel' static='true' name='open'><parameter type='java.net.SocketAddress' name='address'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='java.nio.ByteBuffer' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='read'><parameter type='java.nio.ByteBuffer[]' name='targets'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' synchronized='true' name='read' final='true'><parameter type='java.nio.ByteBuffer[]' name='targets'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' abstract='true' name='socket'/><method return='int' name='validOps' final='true'/><method return='int' abstract='true' name='write'><parameter type='java.nio.ByteBuffer' name='source'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='write'><parameter type='java.nio.ByteBuffer[]' name='sources'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' synchronized='true' name='write' final='true'><parameter type='java.nio.ByteBuffer[]' name='sources'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.IllegalArgumentException' name='UnresolvedAddressException'><constructor type='java.nio.channels.UnresolvedAddressException' name='UnresolvedAddressException'/></class><class extends='java.lang.IllegalArgumentException' name='UnsupportedAddressTypeException'><constructor type='java.nio.channels.UnsupportedAddressTypeException' name='UnsupportedAddressTypeException'/></class><interface abstract='true' name='ByteChannel'/><interface abstract='true' name='Channel'><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isOpen'/></interface><interface abstract='true' name='GatheringByteChannel'><method return='long' abstract='true' name='write'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='write'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='InterruptibleChannel'><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ReadableByteChannel'><method return='int' abstract='true' name='read'><parameter type='java.nio.ByteBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ScatteringByteChannel'><method return='long' abstract='true' name='read'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><exception type='java.io.IOException' name='IOException'/></method><method return='long' abstract='true' name='read'><parameter type='java.nio.ByteBuffer[]' name='buffers'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='WritableByteChannel'><method return='int' abstract='true' name='write'><parameter type='java.nio.ByteBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method></interface></package><package name='java.nio.channels.spi'><class extends='java.lang.Object' abstract='true' name='AbstractInterruptibleChannel'><constructor visibility='protected' type='java.nio.channels.spi.AbstractInterruptibleChannel' name='AbstractInterruptibleChannel'/><method visibility='protected' name='begin' final='true'/><method name='close' final='true'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='end' final='true'><parameter type='boolean' name='success'/><exception type='java.nio.channels.AsynchronousCloseException' name='AsynchronousCloseException'/></method><method visibility='protected' abstract='true' name='implCloseChannel'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' synchronized='true' name='isOpen' final='true'/></class><class extends='java.nio.channels.SelectableChannel' abstract='true' name='AbstractSelectableChannel'><constructor visibility='protected' type='java.nio.channels.spi.AbstractSelectableChannel' name='AbstractSelectableChannel'><parameter type='java.nio.channels.spi.SelectorProvider' name='selectorProvider'/></constructor><method return='java.lang.Object' name='blockingLock' final='true'/><method return='java.nio.channels.SelectableChannel' name='configureBlocking' final='true'><parameter type='boolean' name='blockingMode'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' synchronized='true' name='implCloseChannel' final='true'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='implCloseSelectableChannel'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='implConfigureBlocking'><parameter type='boolean' name='blockingMode'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isBlocking' final='true'/><method return='boolean' synchronized='true' name='isRegistered' final='true'/><method return='java.nio.channels.SelectionKey' synchronized='true' name='keyFor' final='true'><parameter type='java.nio.channels.Selector' name='selector'/></method><method return='java.nio.channels.spi.SelectorProvider' name='provider' final='true'/><method return='java.nio.channels.SelectionKey' name='register' final='true'><parameter type='java.nio.channels.Selector' name='selector'/><parameter type='int' name='interestSet'/><parameter type='java.lang.Object' name='attachment'/><exception type='java.nio.channels.ClosedChannelException' name='ClosedChannelException'/></method></class><class extends='java.nio.channels.SelectionKey' abstract='true' name='AbstractSelectionKey'><constructor visibility='protected' type='java.nio.channels.spi.AbstractSelectionKey' name='AbstractSelectionKey'/><method name='cancel' final='true'/><method return='boolean' name='isValid' final='true'/></class><class extends='java.nio.channels.Selector' abstract='true' name='AbstractSelector'><constructor visibility='protected' type='java.nio.channels.spi.AbstractSelector' name='AbstractSelector'><parameter type='java.nio.channels.spi.SelectorProvider' name='selectorProvider'/></constructor><method visibility='protected' name='begin' final='true'/><method visibility='protected' return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;' name='cancelledKeys' final='true'/><method synchronized='true' name='close' final='true'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='deregister' final='true'><parameter type='java.nio.channels.spi.AbstractSelectionKey' name='key'/></method><method visibility='protected' name='end' final='true'/><method visibility='protected' abstract='true' name='implCloseSelector'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isOpen' final='true'/><method return='java.nio.channels.spi.SelectorProvider' name='provider' final='true'/><method visibility='protected' return='java.nio.channels.SelectionKey' abstract='true' name='register'><parameter type='java.nio.channels.spi.AbstractSelectableChannel' name='channel'/><parameter type='int' name='operations'/><parameter type='java.lang.Object' name='attachment'/></method></class><class extends='java.lang.Object' abstract='true' name='SelectorProvider'><constructor visibility='protected' type='java.nio.channels.spi.SelectorProvider' name='SelectorProvider'/><method return='java.nio.channels.Channel' name='inheritedChannel'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.DatagramChannel' abstract='true' name='openDatagramChannel'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.Pipe' abstract='true' name='openPipe'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.spi.AbstractSelector' abstract='true' name='openSelector'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.ServerSocketChannel' abstract='true' name='openServerSocketChannel'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.SocketChannel' abstract='true' name='openSocketChannel'><exception type='java.io.IOException' name='IOException'/></method><method return='java.nio.channels.spi.SelectorProvider' static='true' synchronized='true' name='provider'/></class></package><package name='java.nio.charset'><class extends='java.io.IOException' name='CharacterCodingException'><constructor type='java.nio.charset.CharacterCodingException' name='CharacterCodingException'/></class><class extends='java.lang.Object' abstract='true' name='Charset'><constructor visibility='protected' type='java.nio.charset.Charset' name='Charset'><parameter type='java.lang.String' name='canonicalName'/><parameter type='java.lang.String[]' name='aliases'/><exception type='java.nio.charset.IllegalCharsetNameException' name='IllegalCharsetNameException'/></constructor><method return='java.util.Set&lt;java.lang.String&gt;' name='aliases' final='true'/><method return='java.util.SortedMap&lt;java.lang.String, java.nio.charset.Charset&gt;' static='true' name='availableCharsets'/><method return='boolean' name='canEncode'/><method return='int' name='compareTo' final='true'><parameter type='java.nio.charset.Charset' name='charset'/></method><method return='boolean' abstract='true' name='contains'><parameter type='java.nio.charset.Charset' name='charset'/></method><method return='java.nio.CharBuffer' name='decode' final='true'><parameter type='java.nio.ByteBuffer' name='buffer'/></method><method return='java.nio.charset.Charset' static='true' name='defaultCharset'/><method return='java.lang.String' name='displayName'/><method return='java.lang.String' name='displayName'><parameter type='java.util.Locale' name='l'/></method><method return='java.nio.ByteBuffer' synchronized='true' name='encode' final='true'><parameter type='java.nio.CharBuffer' name='buffer'/></method><method return='java.nio.ByteBuffer' name='encode' final='true'><parameter type='java.lang.String' name='s'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='obj'/></method><method return='java.nio.charset.Charset' static='true' name='forName'><parameter type='java.lang.String' name='charsetName'/><exception type='java.nio.charset.IllegalCharsetNameException' name='IllegalCharsetNameException'/><exception type='java.nio.charset.UnsupportedCharsetException' name='UnsupportedCharsetException'/></method><method return='int' name='hashCode' final='true'/><method return='boolean' name='isRegistered' final='true'/><method return='boolean' static='true' name='isSupported'><parameter type='java.lang.String' name='charsetName'/><exception type='java.nio.charset.IllegalCharsetNameException' name='IllegalCharsetNameException'/></method><method return='java.lang.String' name='name' final='true'/><method return='java.nio.charset.CharsetDecoder' abstract='true' name='newDecoder'/><method return='java.nio.charset.CharsetEncoder' abstract='true' name='newEncoder'/><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Object' abstract='true' name='CharsetDecoder'><constructor visibility='protected' type='java.nio.charset.CharsetDecoder' name='CharsetDecoder'><parameter type='java.nio.charset.Charset' name='charset'/><parameter type='float' name='averageCharsPerByte'/><parameter type='float' name='maxCharsPerByte'/></constructor><method return='float' name='averageCharsPerByte' final='true'/><method return='java.nio.charset.Charset' name='charset' final='true'/><method return='java.nio.CharBuffer' name='decode' final='true'><parameter type='java.nio.ByteBuffer' name='in'/><exception type='java.nio.charset.CharacterCodingException' name='CharacterCodingException'/></method><method return='java.nio.charset.CoderResult' name='decode' final='true'><parameter type='java.nio.ByteBuffer' name='in'/><parameter type='java.nio.CharBuffer' name='out'/><parameter type='boolean' name='endOfInput'/></method><method visibility='protected' return='java.nio.charset.CoderResult' abstract='true' name='decodeLoop'><parameter type='java.nio.ByteBuffer' name='in'/><parameter type='java.nio.CharBuffer' name='out'/></method><method return='java.nio.charset.Charset' name='detectedCharset'/><method return='java.nio.charset.CoderResult' name='flush' final='true'><parameter type='java.nio.CharBuffer' name='out'/></method><method visibility='protected' return='java.nio.charset.CoderResult' name='implFlush'><parameter type='java.nio.CharBuffer' name='out'/></method><method visibility='protected' name='implOnMalformedInput'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method visibility='protected' name='implOnUnmappableCharacter'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method visibility='protected' name='implReplaceWith'><parameter type='java.lang.String' name='newReplacement'/></method><method visibility='protected' name='implReset'/><method return='boolean' name='isAutoDetecting'/><method return='boolean' name='isCharsetDetected'/><method return='java.nio.charset.CodingErrorAction' name='malformedInputAction'/><method return='float' name='maxCharsPerByte' final='true'/><method return='java.nio.charset.CharsetDecoder' name='onMalformedInput' final='true'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method return='java.nio.charset.CharsetDecoder' name='onUnmappableCharacter' final='true'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method return='java.nio.charset.CharsetDecoder' name='replaceWith' final='true'><parameter type='java.lang.String' name='newReplacement'/></method><method return='java.lang.String' name='replacement' final='true'/><method return='java.nio.charset.CharsetDecoder' name='reset' final='true'/><method return='java.nio.charset.CodingErrorAction' name='unmappableCharacterAction'/></class><class extends='java.lang.Object' abstract='true' name='CharsetEncoder'><constructor visibility='protected' type='java.nio.charset.CharsetEncoder' name='CharsetEncoder'><parameter type='java.nio.charset.Charset' name='cs'/><parameter type='float' name='averageBytesPerChar'/><parameter type='float' name='maxBytesPerChar'/></constructor><constructor visibility='protected' type='java.nio.charset.CharsetEncoder' name='CharsetEncoder'><parameter type='java.nio.charset.Charset' name='cs'/><parameter type='float' name='averageBytesPerChar'/><parameter type='float' name='maxBytesPerChar'/><parameter type='byte[]' name='replacement'/></constructor><method return='float' name='averageBytesPerChar' final='true'/><method return='boolean' name='canEncode'><parameter type='char' name='c'/></method><method return='boolean' name='canEncode'><parameter type='java.lang.CharSequence' name='sequence'/></method><method return='java.nio.charset.Charset' name='charset' final='true'/><method return='java.nio.ByteBuffer' name='encode' final='true'><parameter type='java.nio.CharBuffer' name='in'/><exception type='java.nio.charset.CharacterCodingException' name='CharacterCodingException'/></method><method return='java.nio.charset.CoderResult' name='encode' final='true'><parameter type='java.nio.CharBuffer' name='in'/><parameter type='java.nio.ByteBuffer' name='out'/><parameter type='boolean' name='endOfInput'/></method><method visibility='protected' return='java.nio.charset.CoderResult' abstract='true' name='encodeLoop'><parameter type='java.nio.CharBuffer' name='in'/><parameter type='java.nio.ByteBuffer' name='out'/></method><method return='java.nio.charset.CoderResult' name='flush' final='true'><parameter type='java.nio.ByteBuffer' name='out'/></method><method visibility='protected' return='java.nio.charset.CoderResult' name='implFlush'><parameter type='java.nio.ByteBuffer' name='out'/></method><method visibility='protected' name='implOnMalformedInput'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method visibility='protected' name='implOnUnmappableCharacter'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method visibility='protected' name='implReplaceWith'><parameter type='byte[]' name='newReplacement'/></method><method visibility='protected' name='implReset'/><method return='boolean' name='isLegalReplacement'><parameter type='byte[]' name='repl'/></method><method return='java.nio.charset.CodingErrorAction' name='malformedInputAction'/><method return='float' name='maxBytesPerChar' final='true'/><method return='java.nio.charset.CharsetEncoder' name='onMalformedInput' final='true'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method return='java.nio.charset.CharsetEncoder' name='onUnmappableCharacter' final='true'><parameter type='java.nio.charset.CodingErrorAction' name='newAction'/></method><method return='java.nio.charset.CharsetEncoder' name='replaceWith' final='true'><parameter type='byte[]' name='replacement'/></method><method return='byte[]' name='replacement' final='true'/><method return='java.nio.charset.CharsetEncoder' name='reset' final='true'/><method return='java.nio.charset.CodingErrorAction' name='unmappableCharacterAction'/></class><class extends='java.lang.Error' name='CoderMalfunctionError'><constructor type='java.nio.charset.CoderMalfunctionError' name='CoderMalfunctionError'><parameter type='java.lang.Exception' name='ex'/></constructor></class><class extends='java.lang.Object' name='CoderResult'><method return='boolean' name='isError'/><method return='boolean' name='isMalformed'/><method return='boolean' name='isOverflow'/><method return='boolean' name='isUnderflow'/><method return='boolean' name='isUnmappable'/><method return='int' name='length'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='java.nio.charset.CoderResult' static='true' synchronized='true' name='malformedForLength'><parameter type='int' name='length'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='throwException'><exception type='java.nio.BufferOverflowException' name='BufferOverflowException'/><exception type='java.nio.BufferUnderflowException' name='BufferUnderflowException'/><exception type='java.nio.charset.CharacterCodingException' name='CharacterCodingException'/><exception type='java.nio.charset.MalformedInputException' name='MalformedInputException'/><exception type='java.nio.charset.UnmappableCharacterException' name='UnmappableCharacterException'/></method><method return='java.nio.charset.CoderResult' static='true' synchronized='true' name='unmappableForLength'><parameter type='int' name='length'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></class><class extends='java.lang.Object' name='CodingErrorAction'/><class extends='java.lang.IllegalArgumentException' name='IllegalCharsetNameException'><constructor type='java.nio.charset.IllegalCharsetNameException' name='IllegalCharsetNameException'><parameter type='java.lang.String' name='charset'/></constructor><method return='java.lang.String' name='getCharsetName'/></class><class extends='java.nio.charset.CharacterCodingException' name='MalformedInputException'><constructor type='java.nio.charset.MalformedInputException' name='MalformedInputException'><parameter type='int' name='length'/></constructor><method return='int' name='getInputLength'/></class><class extends='java.nio.charset.CharacterCodingException' name='UnmappableCharacterException'><constructor type='java.nio.charset.UnmappableCharacterException' name='UnmappableCharacterException'><parameter type='int' name='length'/></constructor><method return='int' name='getInputLength'/></class><class extends='java.lang.IllegalArgumentException' name='UnsupportedCharsetException'><constructor type='java.nio.charset.UnsupportedCharsetException' name='UnsupportedCharsetException'><parameter type='java.lang.String' name='charset'/></constructor><method return='java.lang.String' name='getCharsetName'/></class></package><package name='java.nio.charset.spi'><class extends='java.lang.Object' abstract='true' name='CharsetProvider'><constructor visibility='protected' type='java.nio.charset.spi.CharsetProvider' name='CharsetProvider'/><method return='java.nio.charset.Charset' abstract='true' name='charsetForName'><parameter type='java.lang.String' name='charsetName'/></method><method return='java.util.Iterator&lt;java.nio.charset.Charset&gt;' abstract='true' name='charsets'/></class></package><package name='java.security'><class extends='java.lang.Object' name='AccessControlContext' final='true'><constructor type='java.security.AccessControlContext' name='AccessControlContext'><parameter type='java.security.AccessControlContext' name='acc'/><parameter type='java.security.DomainCombiner' name='combiner'/></constructor><constructor type='java.security.AccessControlContext' name='AccessControlContext'><parameter type='java.security.ProtectionDomain[]' name='context'/></constructor><method name='checkPermission'><parameter type='java.security.Permission' name='perm'/><exception type='java.security.AccessControlException' name='AccessControlException'/></method><method return='java.security.DomainCombiner' name='getDomainCombiner'/></class><class extends='java.lang.SecurityException' name='AccessControlException'><constructor type='java.security.AccessControlException' name='AccessControlException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='java.security.AccessControlException' name='AccessControlException'><parameter type='java.lang.String' name='message'/><parameter type='java.security.Permission' name='perm'/></constructor><method return='java.security.Permission' name='getPermission'/></class><class extends='java.lang.Object' name='AccessController' final='true'><method static='true' name='checkPermission'><parameter type='java.security.Permission' name='perm'/><exception type='java.security.AccessControlException' name='AccessControlException'/></method><method return='T' static='true' name='doPrivileged'><parameter type='java.security.PrivilegedAction&lt;T&gt;' name='action'/></method><method return='T' static='true' name='doPrivileged'><parameter type='java.security.PrivilegedAction&lt;T&gt;' name='action'/><parameter type='java.security.AccessControlContext' name='context'/></method><method return='T' static='true' name='doPrivileged'><parameter type='java.security.PrivilegedExceptionAction&lt;T&gt;' name='action'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method><method return='T' static='true' name='doPrivileged'><parameter type='java.security.PrivilegedExceptionAction&lt;T&gt;' name='action'/><parameter type='java.security.AccessControlContext' name='context'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method><method return='java.security.AccessControlContext' static='true' name='getContext'/><method return='T' static='true' name='doPrivilegedWithCombiner' api_added='9'><parameter type='java.security.PrivilegedAction&lt;T&gt;' name='action'/></method><method return='T' static='true' name='doPrivilegedWithCombiner' api_added='9'><parameter type='java.security.PrivilegedExceptionAction&lt;T&gt;' name='action'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method></class><class extends='java.lang.Object' name='AlgorithmParameterGenerator'><constructor visibility='protected' type='java.security.AlgorithmParameterGenerator' name='AlgorithmParameterGenerator'><parameter type='java.security.AlgorithmParameterGeneratorSpi' name='paramGenSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.security.AlgorithmParameters' name='generateParameters' final='true'/><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.security.AlgorithmParameterGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.AlgorithmParameterGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.AlgorithmParameterGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='int' name='size'/></method><method name='init' final='true'><parameter type='int' name='size'/><parameter type='java.security.SecureRandom' name='random'/></method><method name='init' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='genParamSpec'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='genParamSpec'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' abstract='true' name='AlgorithmParameterGeneratorSpi'><constructor type='java.security.AlgorithmParameterGeneratorSpi' name='AlgorithmParameterGeneratorSpi'/><method visibility='protected' return='java.security.AlgorithmParameters' abstract='true' name='engineGenerateParameters'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='int' name='size'/><parameter type='java.security.SecureRandom' name='random'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.spec.AlgorithmParameterSpec' name='genParamSpec'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='AlgorithmParameters'><constructor visibility='protected' type='java.security.AlgorithmParameters' name='AlgorithmParameters'><parameter type='java.security.AlgorithmParametersSpi' name='keyFacSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='byte[]' name='getEncoded' final='true'><exception type='java.io.IOException' name='IOException'/></method><method return='byte[]' name='getEncoded' final='true'><parameter type='java.lang.String' name='format'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.security.AlgorithmParameters' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.AlgorithmParameters' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.AlgorithmParameters' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='T' name='getParameterSpec' final='true'><parameter type='java.lang.Class&lt;T&gt;' name='paramSpec'/><exception type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='paramSpec'/><exception type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'/></method><method name='init' final='true'><parameter type='byte[]' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='init' final='true'><parameter type='byte[]' name='params'/><parameter type='java.lang.String' name='format'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Object' abstract='true' name='AlgorithmParametersSpi'><constructor type='java.security.AlgorithmParametersSpi' name='AlgorithmParametersSpi'/><method visibility='protected' return='byte[]' abstract='true' name='engineGetEncoded'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineGetEncoded'><parameter type='java.lang.String' name='format'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='T' abstract='true' name='engineGetParameterSpec'><parameter type='java.lang.Class&lt;T&gt;' name='paramSpec'/><exception type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.spec.AlgorithmParameterSpec' name='paramSpec'/><exception type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='byte[]' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='byte[]' name='params'/><parameter type='java.lang.String' name='format'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.lang.String' abstract='true' name='engineToString'/></class><class extends='java.security.Permission' name='AllPermission' final='true'><constructor type='java.security.AllPermission' name='AllPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor><constructor type='java.security.AllPermission' name='AllPermission'/><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getActions'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.security.Provider' abstract='true' name='AuthProvider'><constructor visibility='protected' type='java.security.AuthProvider' name='AuthProvider'><parameter type='java.lang.String' name='name'/><parameter type='double' name='version'/><parameter type='java.lang.String' name='info'/></constructor><method abstract='true' name='login'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='javax.security.auth.callback.CallbackHandler' name='handler'/><exception type='javax.security.auth.login.LoginException' name='LoginException'/></method><method abstract='true' name='logout'><exception type='javax.security.auth.login.LoginException' name='LoginException'/></method><method abstract='true' name='setCallbackHandler'><parameter type='javax.security.auth.callback.CallbackHandler' name='handler'/></method></class><class extends='java.security.Permission' abstract='true' name='BasicPermission'><constructor type='java.security.BasicPermission' name='BasicPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.security.BasicPermission' name='BasicPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='action'/></constructor><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getActions'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.lang.Object' name='CodeSigner' final='true'><constructor type='java.security.CodeSigner' name='CodeSigner'><parameter type='java.security.cert.CertPath' name='signerCertPath'/><parameter type='java.security.Timestamp' name='timestamp'/></constructor><method return='java.security.cert.CertPath' name='getSignerCertPath'/><method return='java.security.Timestamp' name='getTimestamp'/></class><class extends='java.lang.Object' name='CodeSource'><constructor type='java.security.CodeSource' name='CodeSource'><parameter type='java.net.URL' name='location'/><parameter type='java.security.cert.Certificate[]' name='certs'/></constructor><constructor type='java.security.CodeSource' name='CodeSource'><parameter type='java.net.URL' name='location'/><parameter type='java.security.CodeSigner[]' name='signers'/></constructor><method return='java.security.cert.Certificate[]' name='getCertificates' final='true'/><method return='java.security.CodeSigner[]' name='getCodeSigners' final='true'/><method return='java.net.URL' name='getLocation' final='true'/><method return='boolean' name='implies'><parameter type='java.security.CodeSource' name='cs'/></method></class><class extends='java.security.GeneralSecurityException' name='DigestException'><constructor type='java.security.DigestException' name='DigestException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.DigestException' name='DigestException'/><constructor type='java.security.DigestException' name='DigestException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.DigestException' name='DigestException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.io.FilterInputStream' name='DigestInputStream'><constructor type='java.security.DigestInputStream' name='DigestInputStream'><parameter type='java.io.InputStream' name='stream'/><parameter type='java.security.MessageDigest' name='digest'/></constructor><method return='java.security.MessageDigest' name='getMessageDigest'/><method name='on'><parameter type='boolean' name='on'/></method><method name='setMessageDigest'><parameter type='java.security.MessageDigest' name='digest'/></method></class><class extends='java.io.FilterOutputStream' name='DigestOutputStream'><constructor type='java.security.DigestOutputStream' name='DigestOutputStream'><parameter type='java.io.OutputStream' name='stream'/><parameter type='java.security.MessageDigest' name='digest'/></constructor><method return='java.security.MessageDigest' name='getMessageDigest'/><method name='on'><parameter type='boolean' name='on'/></method><method name='setMessageDigest'><parameter type='java.security.MessageDigest' name='digest'/></method></class><class extends='java.lang.Exception' name='GeneralSecurityException'><constructor type='java.security.GeneralSecurityException' name='GeneralSecurityException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.GeneralSecurityException' name='GeneralSecurityException'/><constructor type='java.security.GeneralSecurityException' name='GeneralSecurityException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.GeneralSecurityException' name='GeneralSecurityException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='GuardedObject'><constructor type='java.security.GuardedObject' name='GuardedObject'><parameter type='java.lang.Object' name='object'/><parameter type='java.security.Guard' name='guard'/></constructor><method return='java.lang.Object' name='getObject'><exception type='java.lang.SecurityException' name='SecurityException'/></method></class><class extends='java.lang.Object' deprecated='1' abstract='true' name='Identity'><constructor visibility='protected' type='java.security.Identity' name='Identity'/><constructor type='java.security.Identity' name='Identity'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.security.Identity' name='Identity'><parameter type='java.lang.String' name='name'/><parameter type='java.security.IdentityScope' name='scope'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></constructor><method name='addCertificate'><parameter type='java.security.Certificate' name='certificate'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method return='java.security.Certificate[]' name='certificates'/><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getInfo'/><method return='java.lang.String' name='getName' final='true'/><method return='java.security.PublicKey' name='getPublicKey'/><method return='java.security.IdentityScope' name='getScope' final='true'/><method visibility='protected' return='boolean' name='identityEquals'><parameter type='java.security.Identity' name='identity'/></method><method name='removeCertificate'><parameter type='java.security.Certificate' name='certificate'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method name='setInfo'><parameter type='java.lang.String' name='info'/></method><method name='setPublicKey'><parameter type='java.security.PublicKey' name='key'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method return='java.lang.String' name='toString'><parameter type='boolean' name='detailed'/></method></class><class extends='java.security.Identity' deprecated='1' abstract='true' name='IdentityScope'><constructor visibility='protected' type='java.security.IdentityScope' name='IdentityScope'/><constructor type='java.security.IdentityScope' name='IdentityScope'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.security.IdentityScope' name='IdentityScope'><parameter type='java.lang.String' name='name'/><parameter type='java.security.IdentityScope' name='scope'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></constructor><method abstract='true' name='addIdentity'><parameter type='java.security.Identity' name='identity'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method return='java.security.Identity' abstract='true' name='getIdentity'><parameter type='java.lang.String' name='name'/></method><method return='java.security.Identity' name='getIdentity'><parameter type='java.security.Principal' name='principal'/></method><method return='java.security.Identity' abstract='true' name='getIdentity'><parameter type='java.security.PublicKey' name='key'/></method><method return='java.security.IdentityScope' static='true' name='getSystemScope'/><method return='java.util.Enumeration&lt;java.security.Identity&gt;' abstract='true' name='identities'/><method abstract='true' name='removeIdentity'><parameter type='java.security.Identity' name='identity'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method visibility='protected' static='true' name='setSystemScope'><parameter type='java.security.IdentityScope' name='scope'/></method><method return='int' abstract='true' name='size'/></class><class extends='java.security.GeneralSecurityException' name='InvalidAlgorithmParameterException'><constructor type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><constructor type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.security.KeyException' name='InvalidKeyException'><constructor type='java.security.InvalidKeyException' name='InvalidKeyException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.InvalidKeyException' name='InvalidKeyException'/><constructor type='java.security.InvalidKeyException' name='InvalidKeyException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.InvalidKeyException' name='InvalidKeyException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.IllegalArgumentException' name='InvalidParameterException'><constructor type='java.security.InvalidParameterException' name='InvalidParameterException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.InvalidParameterException' name='InvalidParameterException'/></class><class extends='java.security.GeneralSecurityException' name='KeyException'><constructor type='java.security.KeyException' name='KeyException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.KeyException' name='KeyException'/><constructor type='java.security.KeyException' name='KeyException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.KeyException' name='KeyException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='KeyFactory'><constructor visibility='protected' type='java.security.KeyFactory' name='KeyFactory'><parameter type='java.security.KeyFactorySpi' name='keyFacSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.security.PrivateKey' name='generatePrivate' final='true'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.security.PublicKey' name='generatePublic' final='true'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.security.KeyFactory' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.KeyFactory' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.KeyFactory' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='T' name='getKeySpec' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.lang.Class&lt;T&gt;' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.security.Key' name='translateKey' final='true'><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' abstract='true' name='KeyFactorySpi'><constructor type='java.security.KeyFactorySpi' name='KeyFactorySpi'/><method visibility='protected' return='java.security.PrivateKey' abstract='true' name='engineGeneratePrivate'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method visibility='protected' return='java.security.PublicKey' abstract='true' name='engineGeneratePublic'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method visibility='protected' return='T' abstract='true' name='engineGetKeySpec'><parameter type='java.security.Key' name='key'/><parameter type='java.lang.Class&lt;T&gt;' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method visibility='protected' return='java.security.Key' abstract='true' name='engineTranslateKey'><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.security.KeyException' name='KeyManagementException'><constructor type='java.security.KeyManagementException' name='KeyManagementException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.KeyManagementException' name='KeyManagementException'/><constructor type='java.security.KeyManagementException' name='KeyManagementException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.KeyManagementException' name='KeyManagementException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='KeyPair' final='true'><constructor type='java.security.KeyPair' name='KeyPair'><parameter type='java.security.PublicKey' name='publicKey'/><parameter type='java.security.PrivateKey' name='privateKey'/></constructor><method return='java.security.PrivateKey' name='getPrivate'/><method return='java.security.PublicKey' name='getPublic'/></class><class extends='java.security.KeyPairGeneratorSpi' abstract='true' name='KeyPairGenerator'><constructor visibility='protected' type='java.security.KeyPairGenerator' name='KeyPairGenerator'><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.security.KeyPair' name='genKeyPair' final='true'/><method return='java.security.KeyPair' name='generateKeyPair'/><method return='java.lang.String' name='getAlgorithm'/><method return='java.security.KeyPairGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.KeyPairGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.KeyPairGenerator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='initialize'><parameter type='int' name='keysize'/></method><method name='initialize'><parameter type='java.security.spec.AlgorithmParameterSpec' name='param'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method name='initialize'><parameter type='int' name='keysize'/><parameter type='java.security.SecureRandom' name='random'/></method></class><class extends='java.lang.Object' abstract='true' name='KeyPairGeneratorSpi'><constructor type='java.security.KeyPairGeneratorSpi' name='KeyPairGeneratorSpi'/><method return='java.security.KeyPair' abstract='true' name='generateKeyPair'/><method abstract='true' name='initialize'><parameter type='int' name='keysize'/><parameter type='java.security.SecureRandom' name='random'/></method><method name='initialize'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='KeyRep'><constructor type='java.security.KeyRep' name='KeyRep'><parameter type='java.security.KeyRep.Type' name='type'/><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='format'/><parameter type='byte[]' name='encoded'/></constructor><method visibility='protected' return='java.lang.Object' name='readResolve'><exception type='java.io.ObjectStreamException' name='ObjectStreamException'/></method></class><class extends='java.lang.Enum' static='true' name='KeyRep.Type' final='true'><method return='java.security.KeyRep.Type' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.security.KeyRep.Type[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='KeyStore'><constructor visibility='protected' type='java.security.KeyStore' name='KeyStore'><parameter type='java.security.KeyStoreSpi' name='keyStoreSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='type'/></constructor><method return='java.util.Enumeration&lt;java.lang.String&gt;' name='aliases' final='true'><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='boolean' name='containsAlias' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='deleteEntry' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='boolean' name='entryInstanceOf' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;' name='entryClass'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.cert.Certificate' name='getCertificate' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.lang.String' name='getCertificateAlias' final='true'><parameter type='java.security.cert.Certificate' name='cert'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.cert.Certificate[]' name='getCertificateChain' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.util.Date' name='getCreationDate' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.lang.String' static='true' name='getDefaultType' final='true'/><method return='java.security.KeyStore.Entry' name='getEntry' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.KeyStore.ProtectionParameter' name='param'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableEntryException' name='UnrecoverableEntryException'/></method><method return='java.security.KeyStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.KeyStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.KeyStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.Key' name='getKey' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='char[]' name='password'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.lang.String' name='getType' final='true'/><method return='boolean' name='isCertificateEntry' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='boolean' name='isKeyEntry' final='true'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='load' final='true'><parameter type='java.io.InputStream' name='stream'/><parameter type='char[]' name='password'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method name='load' final='true'><parameter type='java.security.KeyStore.LoadStoreParameter' name='param'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method name='setCertificateEntry' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.cert.Certificate' name='cert'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='setEntry' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.KeyStore.Entry' name='entry'/><parameter type='java.security.KeyStore.ProtectionParameter' name='param'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='setKeyEntry' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.Key' name='key'/><parameter type='char[]' name='password'/><parameter type='java.security.cert.Certificate[]' name='chain'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='setKeyEntry' final='true'><parameter type='java.lang.String' name='alias'/><parameter type='byte[]' name='key'/><parameter type='java.security.cert.Certificate[]' name='chain'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='int' name='size' final='true'><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='store' final='true'><parameter type='java.io.OutputStream' name='stream'/><parameter type='char[]' name='password'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method name='store' final='true'><parameter type='java.security.KeyStore.LoadStoreParameter' name='param'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='KeyStore.Builder'><constructor visibility='protected' type='java.security.KeyStore.Builder' name='KeyStore.Builder'/><method return='java.security.KeyStore' abstract='true' name='getKeyStore'><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.KeyStore.ProtectionParameter' abstract='true' name='getProtectionParameter'><parameter type='java.lang.String' name='alise'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='java.security.KeyStore.Builder' static='true' name='newInstance'><parameter type='java.security.KeyStore' name='keyStore'/><parameter type='java.security.KeyStore.ProtectionParameter' name='protectionParameter'/></method><method return='java.security.KeyStore.Builder' static='true' name='newInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.io.File' name='file'/><parameter type='java.security.KeyStore.ProtectionParameter' name='protectionParameter'/></method><method return='java.security.KeyStore.Builder' static='true' name='newInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.security.KeyStore.ProtectionParameter' name='protectionParameter'/></method></class><class extends='java.lang.Object' static='true' name='KeyStore.CallbackHandlerProtection'><constructor type='java.security.KeyStore.CallbackHandlerProtection' name='KeyStore.CallbackHandlerProtection'><parameter type='javax.security.auth.callback.CallbackHandler' name='handler'/></constructor><method return='javax.security.auth.callback.CallbackHandler' name='getCallbackHandler'/></class><class extends='java.lang.Object' static='true' name='KeyStore.PasswordProtection'><constructor type='java.security.KeyStore.PasswordProtection' name='KeyStore.PasswordProtection'><parameter type='char[]' name='password'/></constructor><method synchronized='true' name='destroy'><exception type='javax.security.auth.DestroyFailedException' name='DestroyFailedException'/></method><method return='char[]' synchronized='true' name='getPassword'/><method return='boolean' synchronized='true' name='isDestroyed'/></class><class extends='java.lang.Object' static='true' name='KeyStore.PrivateKeyEntry' final='true'><constructor type='java.security.KeyStore.PrivateKeyEntry' name='KeyStore.PrivateKeyEntry'><parameter type='java.security.PrivateKey' name='privateKey'/><parameter type='java.security.cert.Certificate[]' name='chain'/></constructor><method return='java.security.cert.Certificate' name='getCertificate'/><method return='java.security.cert.Certificate[]' name='getCertificateChain'/><method return='java.security.PrivateKey' name='getPrivateKey'/></class><class extends='java.lang.Object' static='true' name='KeyStore.SecretKeyEntry' final='true'><constructor type='java.security.KeyStore.SecretKeyEntry' name='KeyStore.SecretKeyEntry'><parameter type='javax.crypto.SecretKey' name='secretKey'/></constructor><method return='javax.crypto.SecretKey' name='getSecretKey'/></class><class extends='java.lang.Object' static='true' name='KeyStore.TrustedCertificateEntry' final='true'><constructor type='java.security.KeyStore.TrustedCertificateEntry' name='KeyStore.TrustedCertificateEntry'><parameter type='java.security.cert.Certificate' name='trustCertificate'/></constructor><method return='java.security.cert.Certificate' name='getTrustedCertificate'/></class><class extends='java.security.GeneralSecurityException' name='KeyStoreException'><constructor type='java.security.KeyStoreException' name='KeyStoreException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.KeyStoreException' name='KeyStoreException'/><constructor type='java.security.KeyStoreException' name='KeyStoreException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.KeyStoreException' name='KeyStoreException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='KeyStoreSpi'><constructor type='java.security.KeyStoreSpi' name='KeyStoreSpi'/><method return='java.util.Enumeration&lt;java.lang.String&gt;' abstract='true' name='engineAliases'/><method return='boolean' abstract='true' name='engineContainsAlias'><parameter type='java.lang.String' name='alias'/></method><method abstract='true' name='engineDeleteEntry'><parameter type='java.lang.String' name='alias'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='boolean' name='engineEntryInstanceOf'><parameter type='java.lang.String' name='alias'/><parameter type='java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;' name='entryClass'/></method><method return='java.security.cert.Certificate' abstract='true' name='engineGetCertificate'><parameter type='java.lang.String' name='alias'/></method><method return='java.lang.String' abstract='true' name='engineGetCertificateAlias'><parameter type='java.security.cert.Certificate' name='cert'/></method><method return='java.security.cert.Certificate[]' abstract='true' name='engineGetCertificateChain'><parameter type='java.lang.String' name='alias'/></method><method return='java.util.Date' abstract='true' name='engineGetCreationDate'><parameter type='java.lang.String' name='alias'/></method><method return='java.security.KeyStore.Entry' name='engineGetEntry'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.KeyStore.ProtectionParameter' name='protParam'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableEntryException' name='UnrecoverableEntryException'/></method><method return='java.security.Key' abstract='true' name='engineGetKey'><parameter type='java.lang.String' name='alias'/><parameter type='char[]' name='password'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></method><method return='boolean' abstract='true' name='engineIsCertificateEntry'><parameter type='java.lang.String' name='alias'/></method><method return='boolean' abstract='true' name='engineIsKeyEntry'><parameter type='java.lang.String' name='alias'/></method><method abstract='true' name='engineLoad'><parameter type='java.io.InputStream' name='stream'/><parameter type='char[]' name='password'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method name='engineLoad'><parameter type='java.security.KeyStore.LoadStoreParameter' name='param'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method abstract='true' name='engineSetCertificateEntry'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.cert.Certificate' name='cert'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='engineSetEntry'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.KeyStore.Entry' name='entry'/><parameter type='java.security.KeyStore.ProtectionParameter' name='protParam'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method abstract='true' name='engineSetKeyEntry'><parameter type='java.lang.String' name='alias'/><parameter type='java.security.Key' name='key'/><parameter type='char[]' name='password'/><parameter type='java.security.cert.Certificate[]' name='chain'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method abstract='true' name='engineSetKeyEntry'><parameter type='java.lang.String' name='alias'/><parameter type='byte[]' name='key'/><parameter type='java.security.cert.Certificate[]' name='chain'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method return='int' abstract='true' name='engineSize'/><method abstract='true' name='engineStore'><parameter type='java.io.OutputStream' name='stream'/><parameter type='char[]' name='password'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method name='engineStore'><parameter type='java.security.KeyStore.LoadStoreParameter' name='param'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method></class><class extends='java.security.MessageDigestSpi' abstract='true' name='MessageDigest'><constructor visibility='protected' type='java.security.MessageDigest' name='MessageDigest'><parameter type='java.lang.String' name='algorithm'/></constructor><method return='byte[]' name='digest'/><method return='int' name='digest'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.security.DigestException' name='DigestException'/></method><method return='byte[]' name='digest'><parameter type='byte[]' name='input'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='int' name='getDigestLength' final='true'/><method return='java.security.MessageDigest' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.MessageDigest' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.MessageDigest' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='boolean' static='true' name='isEqual'><parameter type='byte[]' name='digesta'/><parameter type='byte[]' name='digestb'/></method><method name='reset'/><method name='update'><parameter type='byte' name='arg0'/></method><method name='update'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method name='update'><parameter type='byte[]' name='input'/></method><method name='update' final='true'><parameter type='java.nio.ByteBuffer' name='input'/></method></class><class extends='java.lang.Object' abstract='true' name='MessageDigestSpi'><constructor type='java.security.MessageDigestSpi' name='MessageDigestSpi'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineDigest'/><method visibility='protected' return='int' name='engineDigest'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.security.DigestException' name='DigestException'/></method><method visibility='protected' return='int' name='engineGetDigestLength'/><method visibility='protected' abstract='true' name='engineReset'/><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte' name='input'/></method><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method visibility='protected' name='engineUpdate'><parameter type='java.nio.ByteBuffer' name='input'/></method></class><class extends='java.security.GeneralSecurityException' name='NoSuchAlgorithmException'><constructor type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><constructor type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.security.GeneralSecurityException' name='NoSuchProviderException'><constructor type='java.security.NoSuchProviderException' name='NoSuchProviderException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></class><class extends='java.lang.Object' abstract='true' name='Permission'><constructor type='java.security.Permission' name='Permission'><parameter type='java.lang.String' name='name'/></constructor><method name='checkGuard'><parameter type='java.lang.Object' name='obj'/><exception type='java.lang.SecurityException' name='SecurityException'/></method><method return='boolean' abstract='true' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' abstract='true' name='getActions'/><method return='java.lang.String' name='getName' final='true'/><method return='int' abstract='true' api_removed='14' name='hashCode'/><method return='boolean' abstract='true' name='implies'><parameter type='java.security.Permission' name='permission'/></method><method return='java.security.PermissionCollection' name='newPermissionCollection'/></class><class extends='java.lang.Object' abstract='true' name='PermissionCollection'><constructor type='java.security.PermissionCollection' name='PermissionCollection'/><method abstract='true' name='add'><parameter type='java.security.Permission' name='permission'/></method><method return='java.util.Enumeration&lt;java.security.Permission&gt;' abstract='true' name='elements'/><method return='boolean' abstract='true' name='implies'><parameter type='java.security.Permission' name='permission'/></method><method return='boolean' name='isReadOnly'/><method name='setReadOnly'/></class><class extends='java.security.PermissionCollection' name='Permissions' final='true'><constructor type='java.security.Permissions' name='Permissions'/><method name='add'><parameter type='java.security.Permission' name='permission'/></method><method return='java.util.Enumeration&lt;java.security.Permission&gt;' name='elements'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.lang.Object' abstract='true' name='Policy'><constructor type='java.security.Policy' name='Policy'/><method return='java.security.PermissionCollection' abstract='true' name='getPermissions'><parameter type='java.security.CodeSource' name='cs'/></method><method return='java.security.PermissionCollection' name='getPermissions'><parameter type='java.security.ProtectionDomain' name='domain'/></method><method return='java.security.Policy' static='true' name='getPolicy'/><method return='boolean' name='implies'><parameter type='java.security.ProtectionDomain' name='domain'/><parameter type='java.security.Permission' name='permission'/></method><method abstract='true' name='refresh'/><method static='true' name='setPolicy'><parameter type='java.security.Policy' name='policy'/></method><method return='java.security.Policy' static='true' name='getInstance' api_added='9'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Policy.Parameters' name='params'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Policy' static='true' name='getInstance' api_added='9'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Policy.Parameters' name='params'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.Policy' static='true' name='getInstance' api_added='9'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Policy.Parameters' name='params'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Policy.Parameters' name='getParameters' api_added='9'/><method return='java.security.Provider' name='getProvider' api_added='9'/><method return='java.lang.String' name='getType' api_added='9'/></class><class extends='java.lang.Exception' name='PrivilegedActionException'><constructor type='java.security.PrivilegedActionException' name='PrivilegedActionException'><parameter type='java.lang.Exception' name='ex'/></constructor><method return='java.lang.Exception' name='getException'/></class><class extends='java.lang.Object' name='ProtectionDomain'><constructor type='java.security.ProtectionDomain' name='ProtectionDomain'><parameter type='java.security.CodeSource' name='cs'/><parameter type='java.security.PermissionCollection' name='permissions'/></constructor><constructor type='java.security.ProtectionDomain' name='ProtectionDomain'><parameter type='java.security.CodeSource' name='cs'/><parameter type='java.security.PermissionCollection' name='permissions'/><parameter type='java.lang.ClassLoader' name='cl'/><parameter type='java.security.Principal[]' name='principals'/></constructor><method return='java.lang.ClassLoader' name='getClassLoader' final='true'/><method return='java.security.CodeSource' name='getCodeSource' final='true'/><method return='java.security.PermissionCollection' name='getPermissions' final='true'/><method return='java.security.Principal[]' name='getPrincipals' final='true'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.util.Properties' abstract='true' name='Provider'><constructor visibility='protected' type='java.security.Provider' name='Provider'><parameter type='java.lang.String' name='name'/><parameter type='double' name='version'/><parameter type='java.lang.String' name='info'/></constructor><method return='java.lang.String' name='getInfo'/><method return='java.lang.String' name='getName'/><method return='java.security.Provider.Service' synchronized='true' name='getService'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='algorithm'/></method><method return='java.util.Set&lt;java.security.Provider.Service&gt;' synchronized='true' name='getServices'/><method return='double' name='getVersion'/><method return='java.lang.Object' synchronized='true' name='put'><parameter type='java.lang.Object' name='key'/><parameter type='java.lang.Object' name='value'/></method><method api_removed='14' synchronized='true' name='putAll'><parameter type='java.util.Map&lt;?, ?&gt;' name='t'/></method><method visibility='protected' synchronized='true' name='putService'><parameter type='java.security.Provider.Service' name='s'/></method><method visibility='protected' synchronized='true' name='removeService'><parameter type='java.security.Provider.Service' name='s'/></method><method synchronized='true' name='putAll' api_added='14'><parameter type='java.util.Map&lt;?' name='arg0'/><parameter type='?&gt;' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='Provider.Service'><constructor type='java.security.Provider.Service' name='Provider.Service'><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='className'/><parameter type='java.util.List&lt;java.lang.String&gt;' name='aliases'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='attributes'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.String' name='getAttribute' final='true'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getClassName' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.lang.String' name='getType' final='true'/><method return='java.lang.Object' name='newInstance'><parameter type='java.lang.Object' name='constructorParameter'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='boolean' name='supportsParameter'><parameter type='java.lang.Object' name='parameter'/></method></class><class extends='java.lang.RuntimeException' name='ProviderException'><constructor type='java.security.ProviderException' name='ProviderException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.ProviderException' name='ProviderException'/><constructor type='java.security.ProviderException' name='ProviderException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.ProviderException' name='ProviderException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.ClassLoader' name='SecureClassLoader'><constructor visibility='protected' type='java.security.SecureClassLoader' name='SecureClassLoader'/><constructor visibility='protected' type='java.security.SecureClassLoader' name='SecureClassLoader'><parameter type='java.lang.ClassLoader' name='parent'/></constructor><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='java.lang.String' name='name'/><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><parameter type='java.security.CodeSource' name='cs'/></method><method visibility='protected' return='java.lang.Class&lt;?&gt;' name='defineClass' final='true'><parameter type='java.lang.String' name='name'/><parameter type='java.nio.ByteBuffer' name='b'/><parameter type='java.security.CodeSource' name='cs'/></method><method visibility='protected' return='java.security.PermissionCollection' name='getPermissions'><parameter type='java.security.CodeSource' name='codesource'/></method></class><class extends='java.util.Random' name='SecureRandom'><constructor type='java.security.SecureRandom' name='SecureRandom'/><constructor type='java.security.SecureRandom' name='SecureRandom'><parameter type='byte[]' name='seed'/></constructor><constructor visibility='protected' type='java.security.SecureRandom' name='SecureRandom'><parameter type='java.security.SecureRandomSpi' name='secureRandomSpi'/><parameter type='java.security.Provider' name='provider'/></constructor><method return='byte[]' name='generateSeed'><parameter type='int' name='numBytes'/></method><method return='java.lang.String' name='getAlgorithm'/><method return='java.security.SecureRandom' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.SecureRandom' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.SecureRandom' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='byte[]' static='true' name='getSeed'><parameter type='int' name='numBytes'/></method><method visibility='protected' return='int' name='next' final='true'><parameter type='int' name='numBits'/></method><method synchronized='true' name='setSeed'><parameter type='byte[]' name='seed'/></method></class><class extends='java.lang.Object' abstract='true' name='SecureRandomSpi'><constructor type='java.security.SecureRandomSpi' name='SecureRandomSpi'/><method visibility='protected' return='byte[]' abstract='true' name='engineGenerateSeed'><parameter type='int' name='numBytes'/></method><method visibility='protected' abstract='true' name='engineNextBytes'><parameter type='byte[]' name='bytes'/></method><method visibility='protected' abstract='true' name='engineSetSeed'><parameter type='byte[]' name='seed'/></method></class><class extends='java.lang.Object' name='Security' final='true'><method return='int' static='true' name='addProvider'><parameter type='java.security.Provider' name='provider'/></method><method deprecated='1' return='java.lang.String' static='true' name='getAlgorithmProperty'><parameter type='java.lang.String' name='algName'/><parameter type='java.lang.String' name='propName'/></method><method return='java.util.Set&lt;java.lang.String&gt;' static='true' name='getAlgorithms'><parameter type='java.lang.String' name='serviceName'/></method><method return='java.lang.String' static='true' name='getProperty'><parameter type='java.lang.String' name='key'/></method><method return='java.security.Provider' static='true' synchronized='true' name='getProvider'><parameter type='java.lang.String' name='name'/></method><method return='java.security.Provider[]' static='true' synchronized='true' name='getProviders'/><method return='java.security.Provider[]' static='true' name='getProviders'><parameter type='java.lang.String' name='filter'/></method><method return='java.security.Provider[]' api_removed='14' static='true' synchronized='true' name='getProviders'><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='filter'/></method><method return='int' static='true' synchronized='true' name='insertProviderAt'><parameter type='java.security.Provider' name='provider'/><parameter type='int' name='position'/></method><method static='true' synchronized='true' name='removeProvider'><parameter type='java.lang.String' name='name'/></method><method static='true' name='setProperty'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='datnum'/></method><method return='java.security.Provider[]' static='true' synchronized='true' name='getProviders' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.String&gt;' name='arg1'/></method></class><class extends='java.security.BasicPermission' name='SecurityPermission' final='true'><constructor type='java.security.SecurityPermission' name='SecurityPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.security.SecurityPermission' name='SecurityPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='action'/></constructor></class><class extends='java.security.SignatureSpi' abstract='true' name='Signature'><constructor visibility='protected' type='java.security.Signature' name='Signature'><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.security.Signature' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Signature' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.Signature' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method deprecated='1' return='java.lang.Object' name='getParameter' final='true'><parameter type='java.lang.String' name='param'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method><method return='java.security.AlgorithmParameters' name='getParameters' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method name='initSign' final='true'><parameter type='java.security.PrivateKey' name='privateKey'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='initSign' final='true'><parameter type='java.security.PrivateKey' name='privateKey'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='initVerify' final='true'><parameter type='java.security.PublicKey' name='publicKey'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='initVerify' final='true'><parameter type='java.security.cert.Certificate' name='certificate'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method deprecated='1' name='setParameter' final='true'><parameter type='java.lang.String' name='param'/><parameter type='java.lang.Object' name='value'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method><method name='setParameter' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method return='byte[]' name='sign' final='true'><exception type='java.security.SignatureException' name='SignatureException'/></method><method return='int' name='sign' final='true'><parameter type='byte[]' name='outbuf'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method name='update' final='true'><parameter type='byte' name='b'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method name='update' final='true'><parameter type='byte[]' name='data'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method name='update' final='true'><parameter type='byte[]' name='data'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method name='update' final='true'><parameter type='java.nio.ByteBuffer' name='data'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method return='boolean' name='verify' final='true'><parameter type='byte[]' name='signature'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method return='boolean' name='verify' final='true'><parameter type='byte[]' name='signature'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.security.SignatureException' name='SignatureException'/></method></class><class extends='java.security.GeneralSecurityException' name='SignatureException'><constructor type='java.security.SignatureException' name='SignatureException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.SignatureException' name='SignatureException'/><constructor type='java.security.SignatureException' name='SignatureException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.SignatureException' name='SignatureException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SignatureSpi'><constructor type='java.security.SignatureSpi' name='SignatureSpi'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method visibility='protected' deprecated='1' return='java.lang.Object' abstract='true' name='engineGetParameter'><parameter type='java.lang.String' name='param'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method><method visibility='protected' return='java.security.AlgorithmParameters' name='engineGetParameters'/><method visibility='protected' abstract='true' name='engineInitSign'><parameter type='java.security.PrivateKey' name='privateKey'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' name='engineInitSign'><parameter type='java.security.PrivateKey' name='privateKey'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInitVerify'><parameter type='java.security.PublicKey' name='publicKey'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' deprecated='1' abstract='true' name='engineSetParameter'><parameter type='java.lang.String' name='param'/><parameter type='java.lang.Object' name='value'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method><method visibility='protected' name='engineSetParameter'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineSign'><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' return='int' name='engineSign'><parameter type='byte[]' name='outbuf'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte' name='b'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' name='engineUpdate'><parameter type='java.nio.ByteBuffer' name='input'/></method><method visibility='protected' return='boolean' abstract='true' name='engineVerify'><parameter type='byte[]' name='sigBytes'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' return='boolean' name='engineVerify'><parameter type='byte[]' name='sigBytes'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='java.security.SignatureException' name='SignatureException'/></method></class><class extends='java.lang.Object' name='SignedObject' final='true'><constructor type='java.security.SignedObject' name='SignedObject'><parameter type='java.io.Serializable' name='object'/><parameter type='java.security.PrivateKey' name='signingKey'/><parameter type='java.security.Signature' name='signingEngine'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.SignatureException' name='SignatureException'/></constructor><method return='java.lang.String' name='getAlgorithm'/><method return='java.lang.Object' name='getObject'><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/></method><method return='byte[]' name='getSignature'/><method return='boolean' name='verify'><parameter type='java.security.PublicKey' name='verificationKey'/><parameter type='java.security.Signature' name='verificationEngine'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.SignatureException' name='SignatureException'/></method></class><class extends='java.security.Identity' deprecated='1' abstract='true' name='Signer'><constructor visibility='protected' type='java.security.Signer' name='Signer'/><constructor type='java.security.Signer' name='Signer'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.security.Signer' name='Signer'><parameter type='java.lang.String' name='name'/><parameter type='java.security.IdentityScope' name='scope'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></constructor><method return='java.security.PrivateKey' name='getPrivateKey'/><method name='setKeyPair' final='true'><parameter type='java.security.KeyPair' name='pair'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/><exception type='java.security.KeyException' name='KeyException'/></method></class><class extends='java.lang.Object' name='Timestamp' final='true'><constructor type='java.security.Timestamp' name='Timestamp'><parameter type='java.util.Date' name='timestamp'/><parameter type='java.security.cert.CertPath' name='signerCertPath'/></constructor><method return='java.security.cert.CertPath' name='getSignerCertPath'/><method return='java.util.Date' name='getTimestamp'/></class><class extends='java.security.GeneralSecurityException' name='UnrecoverableEntryException'><constructor type='java.security.UnrecoverableEntryException' name='UnrecoverableEntryException'/><constructor type='java.security.UnrecoverableEntryException' name='UnrecoverableEntryException'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='java.security.GeneralSecurityException' name='UnrecoverableKeyException'><constructor type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></class><class extends='java.security.Permission' name='UnresolvedPermission' final='true'><constructor type='java.security.UnresolvedPermission' name='UnresolvedPermission'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/><parameter type='java.security.cert.Certificate[]' name='certs'/></constructor><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getActions'/><method return='java.lang.String' name='getUnresolvedActions'/><method return='java.security.cert.Certificate[]' name='getUnresolvedCerts'/><method return='java.lang.String' name='getUnresolvedName'/><method return='java.lang.String' name='getUnresolvedType'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.lang.Object' abstract='true' name='PolicySpi' api_added='9'><constructor type='java.security.PolicySpi' name='PolicySpi' api_added='9'/><method visibility='protected' return='java.security.PermissionCollection' name='engineGetPermissions' api_added='9'><parameter type='java.security.CodeSource' name='codesource'/></method><method visibility='protected' return='java.security.PermissionCollection' name='engineGetPermissions' api_added='9'><parameter type='java.security.ProtectionDomain' name='domain'/></method><method visibility='protected' return='boolean' abstract='true' name='engineImplies' api_added='9'><parameter type='java.security.ProtectionDomain' name='domain'/><parameter type='java.security.Permission' name='permission'/></method><method visibility='protected' name='engineRefresh' api_added='9'/></class><interface deprecated='1' abstract='true' name='Certificate'><method abstract='true' name='decode'><parameter type='java.io.InputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.KeyException' name='KeyException'/></method><method abstract='true' name='encode'><parameter type='java.io.OutputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.KeyException' name='KeyException'/></method><method return='java.lang.String' abstract='true' name='getFormat'/><method return='java.security.Principal' abstract='true' name='getGuarantor'/><method return='java.security.Principal' abstract='true' name='getPrincipal'/><method return='java.security.PublicKey' abstract='true' name='getPublicKey'/><method return='java.lang.String' abstract='true' name='toString'><parameter type='boolean' name='detailed'/></method></interface><interface abstract='true' name='DomainCombiner'><method return='java.security.ProtectionDomain[]' abstract='true' name='combine'><parameter type='java.security.ProtectionDomain[]' name='current'/><parameter type='java.security.ProtectionDomain[]' name='assigned'/></method></interface><interface abstract='true' name='Guard'><method abstract='true' name='checkGuard'><parameter type='java.lang.Object' name='object'/><exception type='java.lang.SecurityException' name='SecurityException'/></method></interface><interface abstract='true' name='Key'><method return='java.lang.String' abstract='true' name='getAlgorithm'/><method return='byte[]' abstract='true' name='getEncoded'/><method return='java.lang.String' abstract='true' name='getFormat'/></interface><interface abstract='true' static='true' name='KeyStore.Entry'/><interface abstract='true' static='true' name='KeyStore.LoadStoreParameter'><method return='java.security.KeyStore.ProtectionParameter' abstract='true' name='getProtectionParameter'/></interface><interface abstract='true' static='true' name='KeyStore.ProtectionParameter'/><interface abstract='true' name='Principal'><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' abstract='true' name='getName'/><method return='int' abstract='true' name='hashCode'/><method return='java.lang.String' abstract='true' name='toString'/></interface><interface abstract='true' name='PrivateKey'/><interface abstract='true' name='PrivilegedAction'><method return='T' abstract='true' name='run'/></interface><interface abstract='true' name='PrivilegedExceptionAction'><method return='T' abstract='true' name='run'><exception type='java.lang.Exception' name='Exception'/></method></interface><interface abstract='true' name='PublicKey'/><interface abstract='true' static='true' name='Policy.Parameters' api_added='9'/></package><package name='java.security.acl'><class extends='java.lang.Exception' name='AclNotFoundException'><constructor type='java.security.acl.AclNotFoundException' name='AclNotFoundException'/></class><class extends='java.lang.Exception' name='LastOwnerException'><constructor type='java.security.acl.LastOwnerException' name='LastOwnerException'/></class><class extends='java.lang.Exception' name='NotOwnerException'><constructor type='java.security.acl.NotOwnerException' name='NotOwnerException'/></class><interface abstract='true' name='Acl'><method return='boolean' abstract='true' name='addEntry'><parameter type='java.security.Principal' name='caller'/><parameter type='java.security.acl.AclEntry' name='entry'/><exception type='java.security.acl.NotOwnerException' name='NotOwnerException'/></method><method return='boolean' abstract='true' name='checkPermission'><parameter type='java.security.Principal' name='principal'/><parameter type='java.security.acl.Permission' name='permission'/></method><method return='java.util.Enumeration&lt;java.security.acl.AclEntry&gt;' abstract='true' name='entries'/><method return='java.lang.String' abstract='true' name='getName'/><method return='java.util.Enumeration&lt;java.security.acl.Permission&gt;' abstract='true' name='getPermissions'><parameter type='java.security.Principal' name='user'/></method><method return='boolean' abstract='true' name='removeEntry'><parameter type='java.security.Principal' name='caller'/><parameter type='java.security.acl.AclEntry' name='entry'/><exception type='java.security.acl.NotOwnerException' name='NotOwnerException'/></method><method abstract='true' name='setName'><parameter type='java.security.Principal' name='caller'/><parameter type='java.lang.String' name='name'/><exception type='java.security.acl.NotOwnerException' name='NotOwnerException'/></method><method return='java.lang.String' abstract='true' name='toString'/></interface><interface abstract='true' name='AclEntry'><method return='boolean' abstract='true' name='addPermission'><parameter type='java.security.acl.Permission' name='permission'/></method><method return='boolean' abstract='true' name='checkPermission'><parameter type='java.security.acl.Permission' name='permission'/></method><method return='java.lang.Object' abstract='true' name='clone'/><method return='java.security.Principal' abstract='true' name='getPrincipal'/><method return='boolean' abstract='true' name='isNegative'/><method return='java.util.Enumeration&lt;java.security.acl.Permission&gt;' abstract='true' name='permissions'/><method return='boolean' abstract='true' name='removePermission'><parameter type='java.security.acl.Permission' name='permission'/></method><method abstract='true' name='setNegativePermissions'/><method return='boolean' abstract='true' name='setPrincipal'><parameter type='java.security.Principal' name='user'/></method><method return='java.lang.String' abstract='true' name='toString'/></interface><interface abstract='true' name='Group'><method return='boolean' abstract='true' name='addMember'><parameter type='java.security.Principal' name='user'/></method><method return='boolean' abstract='true' name='isMember'><parameter type='java.security.Principal' name='member'/></method><method return='java.util.Enumeration&lt;? extends java.security.Principal&gt;' abstract='true' name='members'/><method return='boolean' abstract='true' name='removeMember'><parameter type='java.security.Principal' name='user'/></method></interface><interface abstract='true' name='Owner'><method return='boolean' abstract='true' name='addOwner'><parameter type='java.security.Principal' name='caller'/><parameter type='java.security.Principal' name='owner'/><exception type='java.security.acl.NotOwnerException' name='NotOwnerException'/></method><method return='boolean' abstract='true' name='deleteOwner'><parameter type='java.security.Principal' name='caller'/><parameter type='java.security.Principal' name='owner'/><exception type='java.security.acl.LastOwnerException' name='LastOwnerException'/><exception type='java.security.acl.NotOwnerException' name='NotOwnerException'/></method><method return='boolean' abstract='true' name='isOwner'><parameter type='java.security.Principal' name='owner'/></method></interface><interface abstract='true' name='Permission'><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='another'/></method><method return='java.lang.String' abstract='true' name='toString'/></interface></package><package name='java.security.cert'><class extends='java.lang.Object' abstract='true' name='CRL'><constructor visibility='protected' type='java.security.cert.CRL' name='CRL'><parameter type='java.lang.String' name='type'/></constructor><method return='java.lang.String' name='getType' final='true'/><method return='boolean' abstract='true' name='isRevoked'><parameter type='java.security.cert.Certificate' name='cert'/></method><method return='java.lang.String' abstract='true' name='toString'/></class><class extends='java.security.GeneralSecurityException' name='CRLException'><constructor type='java.security.cert.CRLException' name='CRLException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CRLException' name='CRLException'/><constructor type='java.security.cert.CRLException' name='CRLException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CRLException' name='CRLException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='CertPath'><constructor visibility='protected' type='java.security.cert.CertPath' name='CertPath'><parameter type='java.lang.String' name='type'/></constructor><method return='java.util.List&lt;? extends java.security.cert.Certificate&gt;' abstract='true' name='getCertificates'/><method return='byte[]' abstract='true' name='getEncoded'><exception type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></method><method return='byte[]' abstract='true' name='getEncoded'><parameter type='java.lang.String' name='encoding'/><exception type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' abstract='true' name='getEncodings'/><method return='java.lang.String' name='getType'/><method visibility='protected' return='java.lang.Object' name='writeReplace'><exception type='java.io.ObjectStreamException' name='ObjectStreamException'/></method></class><class visibility='protected' extends='java.lang.Object' static='true' name='CertPath.CertPathRep'><constructor visibility='protected' type='java.security.cert.CertPath.CertPathRep' name='CertPath.CertPathRep'><parameter type='java.lang.String' name='type'/><parameter type='byte[]' name='data'/></constructor><method visibility='protected' return='java.lang.Object' name='readResolve'><exception type='java.io.ObjectStreamException' name='ObjectStreamException'/></method></class><class extends='java.lang.Object' name='CertPathBuilder'><constructor visibility='protected' type='java.security.cert.CertPathBuilder' name='CertPathBuilder'><parameter type='java.security.cert.CertPathBuilderSpi' name='builderSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.security.cert.CertPathBuilderResult' name='build' final='true'><parameter type='java.security.cert.CertPathParameters' name='params'/><exception type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.String' static='true' name='getDefaultType' final='true'/><method return='java.security.cert.CertPathBuilder' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.cert.CertPathBuilder' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.cert.CertPathBuilder' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/></class><class extends='java.security.GeneralSecurityException' name='CertPathBuilderException'><constructor type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'/></class><class extends='java.lang.Object' abstract='true' name='CertPathBuilderSpi'><constructor type='java.security.cert.CertPathBuilderSpi' name='CertPathBuilderSpi'/><method return='java.security.cert.CertPathBuilderResult' abstract='true' name='engineBuild'><parameter type='java.security.cert.CertPathParameters' name='params'/><exception type='java.security.cert.CertPathBuilderException' name='CertPathBuilderException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='CertPathValidator'><constructor visibility='protected' type='java.security.cert.CertPathValidator' name='CertPathValidator'><parameter type='java.security.cert.CertPathValidatorSpi' name='validatorSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.String' static='true' name='getDefaultType' final='true'/><method return='java.security.cert.CertPathValidator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.cert.CertPathValidator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.cert.CertPathValidator' static='true' name='getInstance'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.security.cert.CertPathValidatorResult' name='validate' final='true'><parameter type='java.security.cert.CertPath' name='certPath'/><parameter type='java.security.cert.CertPathParameters' name='params'/><exception type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.security.GeneralSecurityException' name='CertPathValidatorException'><constructor type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='cause'/><parameter type='java.security.cert.CertPath' name='certPath'/><parameter type='int' name='index'/></constructor><constructor type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'/><method return='java.security.cert.CertPath' name='getCertPath'/><method return='int' name='getIndex'/></class><class extends='java.lang.Object' abstract='true' name='CertPathValidatorSpi'><constructor type='java.security.cert.CertPathValidatorSpi' name='CertPathValidatorSpi'/><method return='java.security.cert.CertPathValidatorResult' abstract='true' name='engineValidate'><parameter type='java.security.cert.CertPath' name='certPath'/><parameter type='java.security.cert.CertPathParameters' name='params'/><exception type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='CertStore'><constructor visibility='protected' type='java.security.cert.CertStore' name='CertStore'><parameter type='java.security.cert.CertStoreSpi' name='storeSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='type'/><parameter type='java.security.cert.CertStoreParameters' name='params'/></constructor><method return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;' name='getCRLs' final='true'><parameter type='java.security.cert.CRLSelector' name='selector'/><exception type='java.security.cert.CertStoreException' name='CertStoreException'/></method><method return='java.security.cert.CertStoreParameters' name='getCertStoreParameters' final='true'/><method return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;' name='getCertificates' final='true'><parameter type='java.security.cert.CertSelector' name='selector'/><exception type='java.security.cert.CertStoreException' name='CertStoreException'/></method><method return='java.lang.String' static='true' name='getDefaultType' final='true'/><method return='java.security.cert.CertStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.cert.CertStoreParameters' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.cert.CertStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.cert.CertStoreParameters' name='params'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.cert.CertStore' static='true' name='getInstance'><parameter type='java.lang.String' name='type'/><parameter type='java.security.cert.CertStoreParameters' name='params'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.lang.String' name='getType' final='true'/></class><class extends='java.security.GeneralSecurityException' name='CertStoreException'><constructor type='java.security.cert.CertStoreException' name='CertStoreException'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertStoreException' name='CertStoreException'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertStoreException' name='CertStoreException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertStoreException' name='CertStoreException'/></class><class extends='java.lang.Object' abstract='true' name='CertStoreSpi'><constructor type='java.security.cert.CertStoreSpi' name='CertStoreSpi'><parameter type='java.security.cert.CertStoreParameters' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></constructor><method return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;' abstract='true' name='engineGetCRLs'><parameter type='java.security.cert.CRLSelector' name='selector'/><exception type='java.security.cert.CertStoreException' name='CertStoreException'/></method><method return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;' abstract='true' name='engineGetCertificates'><parameter type='java.security.cert.CertSelector' name='selector'/><exception type='java.security.cert.CertStoreException' name='CertStoreException'/></method></class><class extends='java.lang.Object' abstract='true' name='Certificate'><constructor visibility='protected' type='java.security.cert.Certificate' name='Certificate'><parameter type='java.lang.String' name='type'/></constructor><method return='byte[]' abstract='true' name='getEncoded'><exception type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></method><method return='java.security.PublicKey' abstract='true' name='getPublicKey'/><method return='java.lang.String' name='getType' final='true'/><method return='java.lang.String' abstract='true' name='toString'/><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><parameter type='java.lang.String' name='sigProvider'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method visibility='protected' return='java.lang.Object' name='writeReplace'><exception type='java.io.ObjectStreamException' name='ObjectStreamException'/></method></class><class visibility='protected' extends='java.lang.Object' static='true' name='Certificate.CertificateRep'><constructor visibility='protected' type='java.security.cert.Certificate.CertificateRep' name='Certificate.CertificateRep'><parameter type='java.lang.String' name='type'/><parameter type='byte[]' name='data'/></constructor><method visibility='protected' return='java.lang.Object' name='readResolve'><exception type='java.io.ObjectStreamException' name='ObjectStreamException'/></method></class><class extends='java.security.cert.CertificateException' name='CertificateEncodingException'><constructor type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'/><constructor type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.security.GeneralSecurityException' name='CertificateException'><constructor type='java.security.cert.CertificateException' name='CertificateException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertificateException' name='CertificateException'/><constructor type='java.security.cert.CertificateException' name='CertificateException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertificateException' name='CertificateException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.security.cert.CertificateException' name='CertificateExpiredException'><constructor type='java.security.cert.CertificateExpiredException' name='CertificateExpiredException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertificateExpiredException' name='CertificateExpiredException'/></class><class extends='java.lang.Object' name='CertificateFactory'><constructor visibility='protected' type='java.security.cert.CertificateFactory' name='CertificateFactory'><parameter type='java.security.cert.CertificateFactorySpi' name='certFacSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='type'/></constructor><method return='java.security.cert.CRL' name='generateCRL' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;' name='generateCRLs' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.security.cert.CertPath' name='generateCertPath' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.CertPath' name='generateCertPath' final='true'><parameter type='java.io.InputStream' name='inStream'/><parameter type='java.lang.String' name='encoding'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.CertPath' name='generateCertPath' final='true'><parameter type='java.util.List&lt;? extends java.security.cert.Certificate&gt;' name='certificates'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.Certificate' name='generateCertificate' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;' name='generateCertificates' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' name='getCertPathEncodings' final='true'/><method return='java.security.cert.CertificateFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='type'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.CertificateFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.cert.CertificateException' name='CertificateException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.cert.CertificateFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='type'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='java.lang.String' name='getType' final='true'/></class><class extends='java.lang.Object' abstract='true' name='CertificateFactorySpi'><constructor type='java.security.cert.CertificateFactorySpi' name='CertificateFactorySpi'/><method return='java.security.cert.CRL' abstract='true' name='engineGenerateCRL'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;' abstract='true' name='engineGenerateCRLs'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.security.cert.CertPath' name='engineGenerateCertPath'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.CertPath' name='engineGenerateCertPath'><parameter type='java.io.InputStream' name='inStream'/><parameter type='java.lang.String' name='encoding'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.CertPath' name='engineGenerateCertPath'><parameter type='java.util.List&lt;? extends java.security.cert.Certificate&gt;' name='certificates'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.Certificate' abstract='true' name='engineGenerateCertificate'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;' abstract='true' name='engineGenerateCertificates'><parameter type='java.io.InputStream' name='inStream'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' name='engineGetCertPathEncodings'/></class><class extends='java.security.cert.CertificateException' name='CertificateNotYetValidException'><constructor type='java.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></class><class extends='java.security.cert.CertificateException' name='CertificateParsingException'><constructor type='java.security.cert.CertificateParsingException' name='CertificateParsingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.cert.CertificateParsingException' name='CertificateParsingException'/><constructor type='java.security.cert.CertificateParsingException' name='CertificateParsingException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.cert.CertificateParsingException' name='CertificateParsingException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='CollectionCertStoreParameters'><constructor type='java.security.cert.CollectionCertStoreParameters' name='CollectionCertStoreParameters'/><constructor type='java.security.cert.CollectionCertStoreParameters' name='CollectionCertStoreParameters'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Collection&lt;?&gt;' name='getCollection'/></class><class extends='java.lang.Object' name='LDAPCertStoreParameters'><constructor type='java.security.cert.LDAPCertStoreParameters' name='LDAPCertStoreParameters'><parameter type='java.lang.String' name='serverName'/><parameter type='int' name='port'/></constructor><constructor type='java.security.cert.LDAPCertStoreParameters' name='LDAPCertStoreParameters'/><constructor type='java.security.cert.LDAPCertStoreParameters' name='LDAPCertStoreParameters'><parameter type='java.lang.String' name='serverName'/></constructor><method return='java.lang.Object' name='clone'/><method return='int' name='getPort'/><method return='java.lang.String' name='getServerName'/></class><class extends='java.security.cert.PKIXParameters' name='PKIXBuilderParameters'><constructor type='java.security.cert.PKIXBuilderParameters' name='PKIXBuilderParameters'><parameter type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;' name='trustAnchors'/><parameter type='java.security.cert.CertSelector' name='targetConstraints'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></constructor><constructor type='java.security.cert.PKIXBuilderParameters' name='PKIXBuilderParameters'><parameter type='java.security.KeyStore' name='keyStore'/><parameter type='java.security.cert.CertSelector' name='targetConstraints'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></constructor><method return='int' name='getMaxPathLength'/><method name='setMaxPathLength'><parameter type='int' name='maxPathLength'/></method></class><class extends='java.security.cert.PKIXCertPathValidatorResult' name='PKIXCertPathBuilderResult'><constructor type='java.security.cert.PKIXCertPathBuilderResult' name='PKIXCertPathBuilderResult'><parameter type='java.security.cert.CertPath' name='certPath'/><parameter type='java.security.cert.TrustAnchor' name='trustAnchor'/><parameter type='java.security.cert.PolicyNode' name='policyTree'/><parameter type='java.security.PublicKey' name='subjectPublicKey'/></constructor><method return='java.security.cert.CertPath' name='getCertPath'/></class><class extends='java.lang.Object' abstract='true' name='PKIXCertPathChecker'><constructor visibility='protected' type='java.security.cert.PKIXCertPathChecker' name='PKIXCertPathChecker'/><method abstract='true' name='check'><parameter type='java.security.cert.Certificate' name='cert'/><parameter type='java.util.Collection&lt;java.lang.String&gt;' name='unresolvedCritExts'/><exception type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'/></method><method return='java.lang.Object' name='clone'/><method return='java.util.Set&lt;java.lang.String&gt;' abstract='true' name='getSupportedExtensions'/><method abstract='true' name='init'><parameter type='boolean' name='forward'/><exception type='java.security.cert.CertPathValidatorException' name='CertPathValidatorException'/></method><method return='boolean' abstract='true' name='isForwardCheckingSupported'/></class><class extends='java.lang.Object' name='PKIXCertPathValidatorResult'><constructor type='java.security.cert.PKIXCertPathValidatorResult' name='PKIXCertPathValidatorResult'><parameter type='java.security.cert.TrustAnchor' name='trustAnchor'/><parameter type='java.security.cert.PolicyNode' name='policyTree'/><parameter type='java.security.PublicKey' name='subjectPublicKey'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.security.cert.PolicyNode' name='getPolicyTree'/><method return='java.security.PublicKey' name='getPublicKey'/><method return='java.security.cert.TrustAnchor' name='getTrustAnchor'/></class><class extends='java.lang.Object' name='PKIXParameters'><constructor type='java.security.cert.PKIXParameters' name='PKIXParameters'><parameter type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;' name='trustAnchors'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></constructor><constructor type='java.security.cert.PKIXParameters' name='PKIXParameters'><parameter type='java.security.KeyStore' name='keyStore'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></constructor><method name='addCertPathChecker'><parameter type='java.security.cert.PKIXCertPathChecker' name='checker'/></method><method name='addCertStore'><parameter type='java.security.cert.CertStore' name='store'/></method><method return='java.lang.Object' name='clone'/><method return='java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;' name='getCertPathCheckers'/><method return='java.util.List&lt;java.security.cert.CertStore&gt;' name='getCertStores'/><method return='java.util.Date' name='getDate'/><method return='java.util.Set&lt;java.lang.String&gt;' name='getInitialPolicies'/><method return='boolean' name='getPolicyQualifiersRejected'/><method return='java.lang.String' name='getSigProvider'/><method return='java.security.cert.CertSelector' name='getTargetCertConstraints'/><method return='java.util.Set&lt;java.security.cert.TrustAnchor&gt;' name='getTrustAnchors'/><method return='boolean' name='isAnyPolicyInhibited'/><method return='boolean' name='isExplicitPolicyRequired'/><method return='boolean' name='isPolicyMappingInhibited'/><method return='boolean' name='isRevocationEnabled'/><method name='setAnyPolicyInhibited'><parameter type='boolean' name='anyPolicyInhibited'/></method><method name='setCertPathCheckers'><parameter type='java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;' name='certPathCheckers'/></method><method name='setCertStores'><parameter type='java.util.List&lt;java.security.cert.CertStore&gt;' name='certStores'/></method><method name='setDate'><parameter type='java.util.Date' name='date'/></method><method name='setExplicitPolicyRequired'><parameter type='boolean' name='explicitPolicyRequired'/></method><method name='setInitialPolicies'><parameter type='java.util.Set&lt;java.lang.String&gt;' name='initialPolicies'/></method><method name='setPolicyMappingInhibited'><parameter type='boolean' name='policyMappingInhibited'/></method><method name='setPolicyQualifiersRejected'><parameter type='boolean' name='policyQualifiersRejected'/></method><method name='setRevocationEnabled'><parameter type='boolean' name='revocationEnabled'/></method><method name='setSigProvider'><parameter type='java.lang.String' name='sigProvider'/></method><method name='setTargetCertConstraints'><parameter type='java.security.cert.CertSelector' name='targetCertConstraints'/></method><method name='setTrustAnchors'><parameter type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;' name='trustAnchors'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='PolicyQualifierInfo'><constructor type='java.security.cert.PolicyQualifierInfo' name='PolicyQualifierInfo'><parameter type='byte[]' name='encoded'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='byte[]' name='getEncoded' final='true'/><method return='byte[]' name='getPolicyQualifier' final='true'/><method return='java.lang.String' name='getPolicyQualifierId' final='true'/></class><class extends='java.lang.Object' name='TrustAnchor'><constructor type='java.security.cert.TrustAnchor' name='TrustAnchor'><parameter type='java.security.cert.X509Certificate' name='trustedCert'/><parameter type='byte[]' name='nameConstraints'/></constructor><constructor type='java.security.cert.TrustAnchor' name='TrustAnchor'><parameter type='java.lang.String' name='caName'/><parameter type='java.security.PublicKey' name='caPublicKey'/><parameter type='byte[]' name='nameConstraints'/></constructor><constructor type='java.security.cert.TrustAnchor' name='TrustAnchor'><parameter type='javax.security.auth.x500.X500Principal' name='caPrincipal'/><parameter type='java.security.PublicKey' name='caPublicKey'/><parameter type='byte[]' name='nameConstraints'/></constructor><method return='javax.security.auth.x500.X500Principal' name='getCA' final='true'/><method return='java.lang.String' name='getCAName' final='true'/><method return='java.security.PublicKey' name='getCAPublicKey' final='true'/><method return='byte[]' name='getNameConstraints' final='true'/><method return='java.security.cert.X509Certificate' name='getTrustedCert' final='true'/></class><class extends='java.security.cert.CRL' abstract='true' name='X509CRL'><constructor visibility='protected' type='java.security.cert.X509CRL' name='X509CRL'/><method return='byte[]' abstract='true' name='getEncoded'><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.security.Principal' abstract='true' name='getIssuerDN'/><method return='javax.security.auth.x500.X500Principal' name='getIssuerX500Principal'/><method return='java.util.Date' abstract='true' name='getNextUpdate'/><method return='java.security.cert.X509CRLEntry' abstract='true' name='getRevokedCertificate'><parameter type='java.math.BigInteger' name='serialNumber'/></method><method return='java.security.cert.X509CRLEntry' name='getRevokedCertificate'><parameter type='java.security.cert.X509Certificate' name='certificate'/></method><method return='java.util.Set&lt;? extends java.security.cert.X509CRLEntry&gt;' abstract='true' name='getRevokedCertificates'/><method return='java.lang.String' abstract='true' name='getSigAlgName'/><method return='java.lang.String' abstract='true' name='getSigAlgOID'/><method return='byte[]' abstract='true' name='getSigAlgParams'/><method return='byte[]' abstract='true' name='getSignature'/><method return='byte[]' abstract='true' name='getTBSCertList'><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.util.Date' abstract='true' name='getThisUpdate'/><method return='int' abstract='true' name='getVersion'/><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><exception type='java.security.cert.CRLException' name='CRLException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><parameter type='java.lang.String' name='sigProvider'/><exception type='java.security.cert.CRLException' name='CRLException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method></class><class extends='java.lang.Object' abstract='true' name='X509CRLEntry'><constructor type='java.security.cert.X509CRLEntry' name='X509CRLEntry'/><method return='javax.security.auth.x500.X500Principal' name='getCertificateIssuer'/><method return='byte[]' abstract='true' name='getEncoded'><exception type='java.security.cert.CRLException' name='CRLException'/></method><method return='java.util.Date' abstract='true' name='getRevocationDate'/><method return='java.math.BigInteger' abstract='true' name='getSerialNumber'/><method return='boolean' abstract='true' name='hasExtensions'/><method return='java.lang.String' abstract='true' name='toString'/></class><class extends='java.lang.Object' name='X509CRLSelector'><constructor type='java.security.cert.X509CRLSelector' name='X509CRLSelector'/><method name='addIssuer'><parameter type='javax.security.auth.x500.X500Principal' name='issuer'/></method><method name='addIssuerName'><parameter type='java.lang.String' name='iss_name'/><exception type='java.io.IOException' name='IOException'/></method><method name='addIssuerName'><parameter type='byte[]' name='iss_name'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='clone'/><method return='java.security.cert.X509Certificate' name='getCertificateChecking'/><method return='java.util.Date' name='getDateAndTime'/><method return='java.util.Collection&lt;java.lang.Object&gt;' name='getIssuerNames'/><method return='java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt;' name='getIssuers'/><method return='java.math.BigInteger' name='getMaxCRL'/><method return='java.math.BigInteger' name='getMinCRL'/><method return='boolean' name='match'><parameter type='java.security.cert.CRL' name='crl'/></method><method name='setCertificateChecking'><parameter type='java.security.cert.X509Certificate' name='cert'/></method><method name='setDateAndTime'><parameter type='java.util.Date' name='dateAndTime'/></method><method name='setIssuerNames'><parameter type='java.util.Collection&lt;?&gt;' name='names'/><exception type='java.io.IOException' name='IOException'/></method><method name='setIssuers'><parameter type='java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt;' name='issuers'/></method><method name='setMaxCRLNumber'><parameter type='java.math.BigInteger' name='maxCRL'/></method><method name='setMinCRLNumber'><parameter type='java.math.BigInteger' name='minCRL'/></method></class><class extends='java.lang.Object' name='X509CertSelector'><constructor type='java.security.cert.X509CertSelector' name='X509CertSelector'/><method name='addPathToName'><parameter type='int' name='type'/><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method name='addPathToName'><parameter type='int' name='type'/><parameter type='byte[]' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method name='addSubjectAlternativeName'><parameter type='int' name='tag'/><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method name='addSubjectAlternativeName'><parameter type='int' name='tag'/><parameter type='byte[]' name='name'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.Object' name='clone'/><method return='byte[]' name='getAuthorityKeyIdentifier'/><method return='int' name='getBasicConstraints'/><method return='java.security.cert.X509Certificate' name='getCertificate'/><method return='java.util.Date' name='getCertificateValid'/><method return='java.util.Set&lt;java.lang.String&gt;' name='getExtendedKeyUsage'/><method return='javax.security.auth.x500.X500Principal' name='getIssuer'/><method return='byte[]' name='getIssuerAsBytes'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getIssuerAsString'/><method return='boolean[]' name='getKeyUsage'/><method return='boolean' name='getMatchAllSubjectAltNames'/><method return='byte[]' name='getNameConstraints'/><method return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='getPathToNames'/><method return='java.util.Set&lt;java.lang.String&gt;' name='getPolicy'/><method return='java.util.Date' name='getPrivateKeyValid'/><method return='java.math.BigInteger' name='getSerialNumber'/><method return='javax.security.auth.x500.X500Principal' name='getSubject'/><method return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='getSubjectAlternativeNames'/><method return='byte[]' name='getSubjectAsBytes'><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getSubjectAsString'/><method return='byte[]' name='getSubjectKeyIdentifier'/><method return='java.security.PublicKey' name='getSubjectPublicKey'/><method return='java.lang.String' name='getSubjectPublicKeyAlgID'/><method return='boolean' name='match'><parameter type='java.security.cert.Certificate' name='certificate'/></method><method name='setAuthorityKeyIdentifier'><parameter type='byte[]' name='authorityKeyIdentifier'/></method><method name='setBasicConstraints'><parameter type='int' name='pathLen'/></method><method name='setCertificate'><parameter type='java.security.cert.X509Certificate' name='certificate'/></method><method name='setCertificateValid'><parameter type='java.util.Date' name='certificateValid'/></method><method name='setExtendedKeyUsage'><parameter type='java.util.Set&lt;java.lang.String&gt;' name='keyUsage'/><exception type='java.io.IOException' name='IOException'/></method><method name='setIssuer'><parameter type='javax.security.auth.x500.X500Principal' name='issuer'/></method><method name='setIssuer'><parameter type='java.lang.String' name='issuerName'/><exception type='java.io.IOException' name='IOException'/></method><method name='setIssuer'><parameter type='byte[]' name='issuerDN'/><exception type='java.io.IOException' name='IOException'/></method><method name='setKeyUsage'><parameter type='boolean[]' name='keyUsage'/></method><method name='setMatchAllSubjectAltNames'><parameter type='boolean' name='matchAllNames'/></method><method name='setNameConstraints'><parameter type='byte[]' name='bytes'/><exception type='java.io.IOException' name='IOException'/></method><method name='setPathToNames'><parameter type='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='names'/><exception type='java.io.IOException' name='IOException'/></method><method name='setPolicy'><parameter type='java.util.Set&lt;java.lang.String&gt;' name='policies'/><exception type='java.io.IOException' name='IOException'/></method><method name='setPrivateKeyValid'><parameter type='java.util.Date' name='privateKeyValid'/></method><method name='setSerialNumber'><parameter type='java.math.BigInteger' name='serialNumber'/></method><method name='setSubject'><parameter type='javax.security.auth.x500.X500Principal' name='subject'/></method><method name='setSubject'><parameter type='java.lang.String' name='subjectDN'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSubject'><parameter type='byte[]' name='subjectDN'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSubjectAlternativeNames'><parameter type='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='names'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSubjectKeyIdentifier'><parameter type='byte[]' name='subjectKeyIdentifier'/></method><method name='setSubjectPublicKey'><parameter type='java.security.PublicKey' name='key'/></method><method name='setSubjectPublicKey'><parameter type='byte[]' name='key'/><exception type='java.io.IOException' name='IOException'/></method><method name='setSubjectPublicKeyAlgID'><parameter type='java.lang.String' name='oid'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.security.cert.Certificate' abstract='true' name='X509Certificate'><constructor visibility='protected' type='java.security.cert.X509Certificate' name='X509Certificate'/><method abstract='true' name='checkValidity'><exception type='java.security.cert.CertificateExpiredException' name='CertificateExpiredException'/><exception type='java.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></method><method abstract='true' name='checkValidity'><parameter type='java.util.Date' name='date'/><exception type='java.security.cert.CertificateExpiredException' name='CertificateExpiredException'/><exception type='java.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></method><method return='int' abstract='true' name='getBasicConstraints'/><method return='java.util.List&lt;java.lang.String&gt;' name='getExtendedKeyUsage'><exception type='java.security.cert.CertificateParsingException' name='CertificateParsingException'/></method><method return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='getIssuerAlternativeNames'><exception type='java.security.cert.CertificateParsingException' name='CertificateParsingException'/></method><method return='java.security.Principal' abstract='true' name='getIssuerDN'/><method return='boolean[]' abstract='true' name='getIssuerUniqueID'/><method return='javax.security.auth.x500.X500Principal' name='getIssuerX500Principal'/><method return='boolean[]' abstract='true' name='getKeyUsage'/><method return='java.util.Date' abstract='true' name='getNotAfter'/><method return='java.util.Date' abstract='true' name='getNotBefore'/><method return='java.math.BigInteger' abstract='true' name='getSerialNumber'/><method return='java.lang.String' abstract='true' name='getSigAlgName'/><method return='java.lang.String' abstract='true' name='getSigAlgOID'/><method return='byte[]' abstract='true' name='getSigAlgParams'/><method return='byte[]' abstract='true' name='getSignature'/><method return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;' name='getSubjectAlternativeNames'><exception type='java.security.cert.CertificateParsingException' name='CertificateParsingException'/></method><method return='java.security.Principal' abstract='true' name='getSubjectDN'/><method return='boolean[]' abstract='true' name='getSubjectUniqueID'/><method return='javax.security.auth.x500.X500Principal' name='getSubjectX500Principal'/><method return='byte[]' abstract='true' name='getTBSCertificate'><exception type='java.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></method><method return='int' abstract='true' name='getVersion'/></class><interface abstract='true' name='CRLSelector'><method return='java.lang.Object' abstract='true' name='clone'/><method return='boolean' abstract='true' name='match'><parameter type='java.security.cert.CRL' name='crl'/></method></interface><interface abstract='true' name='CertPathBuilderResult'><method return='java.lang.Object' abstract='true' name='clone'/><method return='java.security.cert.CertPath' abstract='true' name='getCertPath'/></interface><interface abstract='true' name='CertPathParameters'><method return='java.lang.Object' abstract='true' name='clone'/></interface><interface abstract='true' name='CertPathValidatorResult'><method return='java.lang.Object' abstract='true' name='clone'/></interface><interface abstract='true' name='CertSelector'><method return='java.lang.Object' abstract='true' name='clone'/><method return='boolean' abstract='true' name='match'><parameter type='java.security.cert.Certificate' name='cert'/></method></interface><interface abstract='true' name='CertStoreParameters'><method return='java.lang.Object' abstract='true' name='clone'/></interface><interface abstract='true' name='PolicyNode'><method return='java.util.Iterator&lt;? extends java.security.cert.PolicyNode&gt;' abstract='true' name='getChildren'/><method return='int' abstract='true' name='getDepth'/><method return='java.util.Set&lt;java.lang.String&gt;' abstract='true' name='getExpectedPolicies'/><method return='java.security.cert.PolicyNode' abstract='true' name='getParent'/><method return='java.util.Set&lt;? extends java.security.cert.PolicyQualifierInfo&gt;' abstract='true' name='getPolicyQualifiers'/><method return='java.lang.String' abstract='true' name='getValidPolicy'/><method return='boolean' abstract='true' name='isCritical'/></interface><interface abstract='true' name='X509Extension'><method return='java.util.Set&lt;java.lang.String&gt;' abstract='true' name='getCriticalExtensionOIDs'/><method return='byte[]' abstract='true' name='getExtensionValue'><parameter type='java.lang.String' name='oid'/></method><method return='java.util.Set&lt;java.lang.String&gt;' abstract='true' name='getNonCriticalExtensionOIDs'/><method return='boolean' abstract='true' name='hasUnsupportedCriticalExtension'/></interface></package><package name='java.security.interfaces'><interface abstract='true' name='DSAKey'><method return='java.security.interfaces.DSAParams' abstract='true' name='getParams'/></interface><interface abstract='true' name='DSAKeyPairGenerator'><method abstract='true' name='initialize'><parameter type='java.security.interfaces.DSAParams' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method><method abstract='true' name='initialize'><parameter type='int' name='modlen'/><parameter type='boolean' name='genParams'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidParameterException' name='InvalidParameterException'/></method></interface><interface abstract='true' name='DSAParams'><method return='java.math.BigInteger' abstract='true' name='getG'/><method return='java.math.BigInteger' abstract='true' name='getP'/><method return='java.math.BigInteger' abstract='true' name='getQ'/></interface><interface abstract='true' name='DSAPrivateKey'><method return='java.math.BigInteger' abstract='true' name='getX'/></interface><interface abstract='true' name='DSAPublicKey'><method return='java.math.BigInteger' abstract='true' name='getY'/></interface><interface abstract='true' name='ECKey'><method return='java.security.spec.ECParameterSpec' abstract='true' name='getParams'/></interface><interface abstract='true' name='ECPrivateKey'><method return='java.math.BigInteger' abstract='true' name='getS'/></interface><interface abstract='true' name='ECPublicKey'><method return='java.security.spec.ECPoint' abstract='true' name='getW'/></interface><interface abstract='true' name='RSAKey'><method return='java.math.BigInteger' abstract='true' name='getModulus'/></interface><interface abstract='true' name='RSAMultiPrimePrivateCrtKey'><method return='java.math.BigInteger' abstract='true' name='getCrtCoefficient'/><method return='java.security.spec.RSAOtherPrimeInfo[]' abstract='true' name='getOtherPrimeInfo'/><method return='java.math.BigInteger' abstract='true' name='getPrimeExponentP'/><method return='java.math.BigInteger' abstract='true' name='getPrimeExponentQ'/><method return='java.math.BigInteger' abstract='true' name='getPrimeP'/><method return='java.math.BigInteger' abstract='true' name='getPrimeQ'/><method return='java.math.BigInteger' abstract='true' name='getPublicExponent'/></interface><interface abstract='true' name='RSAPrivateCrtKey'><method return='java.math.BigInteger' abstract='true' name='getCrtCoefficient'/><method return='java.math.BigInteger' abstract='true' name='getPrimeExponentP'/><method return='java.math.BigInteger' abstract='true' name='getPrimeExponentQ'/><method return='java.math.BigInteger' abstract='true' name='getPrimeP'/><method return='java.math.BigInteger' abstract='true' name='getPrimeQ'/><method return='java.math.BigInteger' abstract='true' name='getPublicExponent'/></interface><interface abstract='true' name='RSAPrivateKey'><method return='java.math.BigInteger' abstract='true' name='getPrivateExponent'/></interface><interface abstract='true' name='RSAPublicKey'><method return='java.math.BigInteger' abstract='true' name='getPublicExponent'/></interface></package><package name='java.security.spec'><class extends='java.lang.Object' name='DSAParameterSpec'><constructor type='java.security.spec.DSAParameterSpec' name='DSAParameterSpec'><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='q'/><parameter type='java.math.BigInteger' name='g'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='java.math.BigInteger' name='getP'/><method return='java.math.BigInteger' name='getQ'/></class><class extends='java.lang.Object' name='DSAPrivateKeySpec'><constructor type='java.security.spec.DSAPrivateKeySpec' name='DSAPrivateKeySpec'><parameter type='java.math.BigInteger' name='x'/><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='q'/><parameter type='java.math.BigInteger' name='g'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='java.math.BigInteger' name='getP'/><method return='java.math.BigInteger' name='getQ'/><method return='java.math.BigInteger' name='getX'/></class><class extends='java.lang.Object' name='DSAPublicKeySpec'><constructor type='java.security.spec.DSAPublicKeySpec' name='DSAPublicKeySpec'><parameter type='java.math.BigInteger' name='y'/><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='q'/><parameter type='java.math.BigInteger' name='g'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='java.math.BigInteger' name='getP'/><method return='java.math.BigInteger' name='getQ'/><method return='java.math.BigInteger' name='getY'/></class><class extends='java.lang.Object' name='ECFieldF2m'><constructor type='java.security.spec.ECFieldF2m' name='ECFieldF2m'><parameter type='int' name='m'/></constructor><constructor type='java.security.spec.ECFieldF2m' name='ECFieldF2m'><parameter type='int' name='m'/><parameter type='java.math.BigInteger' name='rp'/></constructor><constructor type='java.security.spec.ECFieldF2m' name='ECFieldF2m'><parameter type='int' name='m'/><parameter type='int[]' name='ks'/></constructor><method return='int' name='getFieldSize'/><method return='int' name='getM'/><method return='int[]' name='getMidTermsOfReductionPolynomial'/><method return='java.math.BigInteger' name='getReductionPolynomial'/></class><class extends='java.lang.Object' name='ECFieldFp'><constructor type='java.security.spec.ECFieldFp' name='ECFieldFp'><parameter type='java.math.BigInteger' name='p'/></constructor><method return='int' name='getFieldSize'/><method return='java.math.BigInteger' name='getP'/></class><class extends='java.lang.Object' name='ECGenParameterSpec'><constructor type='java.security.spec.ECGenParameterSpec' name='ECGenParameterSpec'><parameter type='java.lang.String' name='name'/></constructor><method return='java.lang.String' name='getName'/></class><class extends='java.lang.Object' name='ECParameterSpec'><constructor type='java.security.spec.ECParameterSpec' name='ECParameterSpec'><parameter type='java.security.spec.EllipticCurve' name='curve'/><parameter type='java.security.spec.ECPoint' name='generator'/><parameter type='java.math.BigInteger' name='order'/><parameter type='int' name='cofactor'/></constructor><method return='int' name='getCofactor'/><method return='java.security.spec.EllipticCurve' name='getCurve'/><method return='java.security.spec.ECPoint' name='getGenerator'/><method return='java.math.BigInteger' name='getOrder'/></class><class extends='java.lang.Object' name='ECPoint'><constructor type='java.security.spec.ECPoint' name='ECPoint'><parameter type='java.math.BigInteger' name='affineX'/><parameter type='java.math.BigInteger' name='affineY'/></constructor><method return='java.math.BigInteger' name='getAffineX'/><method return='java.math.BigInteger' name='getAffineY'/></class><class extends='java.lang.Object' name='ECPrivateKeySpec'><constructor type='java.security.spec.ECPrivateKeySpec' name='ECPrivateKeySpec'><parameter type='java.math.BigInteger' name='s'/><parameter type='java.security.spec.ECParameterSpec' name='params'/></constructor><method return='java.security.spec.ECParameterSpec' name='getParams'/><method return='java.math.BigInteger' name='getS'/></class><class extends='java.lang.Object' name='ECPublicKeySpec'><constructor type='java.security.spec.ECPublicKeySpec' name='ECPublicKeySpec'><parameter type='java.security.spec.ECPoint' name='w'/><parameter type='java.security.spec.ECParameterSpec' name='params'/></constructor><method return='java.security.spec.ECParameterSpec' name='getParams'/><method return='java.security.spec.ECPoint' name='getW'/></class><class extends='java.lang.Object' name='EllipticCurve'><constructor type='java.security.spec.EllipticCurve' name='EllipticCurve'><parameter type='java.security.spec.ECField' name='field'/><parameter type='java.math.BigInteger' name='a'/><parameter type='java.math.BigInteger' name='b'/><parameter type='byte[]' name='seed'/></constructor><constructor type='java.security.spec.EllipticCurve' name='EllipticCurve'><parameter type='java.security.spec.ECField' name='field'/><parameter type='java.math.BigInteger' name='a'/><parameter type='java.math.BigInteger' name='b'/></constructor><method return='java.math.BigInteger' name='getA'/><method return='java.math.BigInteger' name='getB'/><method return='java.security.spec.ECField' name='getField'/><method return='byte[]' name='getSeed'/></class><class extends='java.lang.Object' abstract='true' name='EncodedKeySpec'><constructor type='java.security.spec.EncodedKeySpec' name='EncodedKeySpec'><parameter type='byte[]' name='encodedKey'/></constructor><method return='byte[]' name='getEncoded'/><method return='java.lang.String' abstract='true' name='getFormat'/></class><class extends='java.security.GeneralSecurityException' name='InvalidKeySpecException'><constructor type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/><constructor type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.security.GeneralSecurityException' name='InvalidParameterSpecException'><constructor type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='java.security.spec.InvalidParameterSpecException' name='InvalidParameterSpecException'/></class><class extends='java.lang.Object' name='MGF1ParameterSpec'><constructor type='java.security.spec.MGF1ParameterSpec' name='MGF1ParameterSpec'><parameter type='java.lang.String' name='mdName'/></constructor><method return='java.lang.String' name='getDigestAlgorithm'/></class><class extends='java.security.spec.EncodedKeySpec' name='PKCS8EncodedKeySpec'><constructor type='java.security.spec.PKCS8EncodedKeySpec' name='PKCS8EncodedKeySpec'><parameter type='byte[]' name='encodedKey'/></constructor><method return='java.lang.String' name='getFormat' final='true'/></class><class extends='java.lang.Object' name='PSSParameterSpec'><constructor type='java.security.spec.PSSParameterSpec' name='PSSParameterSpec'><parameter type='int' name='saltLen'/></constructor><constructor type='java.security.spec.PSSParameterSpec' name='PSSParameterSpec'><parameter type='java.lang.String' name='mdName'/><parameter type='java.lang.String' name='mgfName'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='mgfSpec'/><parameter type='int' name='saltLen'/><parameter type='int' name='trailerField'/></constructor><method return='java.lang.String' name='getDigestAlgorithm'/><method return='java.lang.String' name='getMGFAlgorithm'/><method return='java.security.spec.AlgorithmParameterSpec' name='getMGFParameters'/><method return='int' name='getSaltLength'/><method return='int' name='getTrailerField'/></class><class extends='java.lang.Object' name='RSAKeyGenParameterSpec'><constructor type='java.security.spec.RSAKeyGenParameterSpec' name='RSAKeyGenParameterSpec'><parameter type='int' name='keysize'/><parameter type='java.math.BigInteger' name='publicExponent'/></constructor><method return='int' name='getKeysize'/><method return='java.math.BigInteger' name='getPublicExponent'/></class><class extends='java.security.spec.RSAPrivateKeySpec' name='RSAMultiPrimePrivateCrtKeySpec'><constructor type='java.security.spec.RSAMultiPrimePrivateCrtKeySpec' name='RSAMultiPrimePrivateCrtKeySpec'><parameter type='java.math.BigInteger' name='modulus'/><parameter type='java.math.BigInteger' name='publicExponent'/><parameter type='java.math.BigInteger' name='privateExponent'/><parameter type='java.math.BigInteger' name='primeP'/><parameter type='java.math.BigInteger' name='primeQ'/><parameter type='java.math.BigInteger' name='primeExponentP'/><parameter type='java.math.BigInteger' name='primeExponentQ'/><parameter type='java.math.BigInteger' name='crtCoefficient'/><parameter type='java.security.spec.RSAOtherPrimeInfo[]' name='otherPrimeInfo'/></constructor><method return='java.math.BigInteger' name='getCrtCoefficient'/><method return='java.security.spec.RSAOtherPrimeInfo[]' name='getOtherPrimeInfo'/><method return='java.math.BigInteger' name='getPrimeExponentP'/><method return='java.math.BigInteger' name='getPrimeExponentQ'/><method return='java.math.BigInteger' name='getPrimeP'/><method return='java.math.BigInteger' name='getPrimeQ'/><method return='java.math.BigInteger' name='getPublicExponent'/></class><class extends='java.lang.Object' name='RSAOtherPrimeInfo'><constructor type='java.security.spec.RSAOtherPrimeInfo' name='RSAOtherPrimeInfo'><parameter type='java.math.BigInteger' name='prime'/><parameter type='java.math.BigInteger' name='primeExponent'/><parameter type='java.math.BigInteger' name='crtCoefficient'/></constructor><method return='java.math.BigInteger' name='getCrtCoefficient' final='true'/><method return='java.math.BigInteger' name='getExponent' final='true'/><method return='java.math.BigInteger' name='getPrime' final='true'/></class><class extends='java.security.spec.RSAPrivateKeySpec' name='RSAPrivateCrtKeySpec'><constructor type='java.security.spec.RSAPrivateCrtKeySpec' name='RSAPrivateCrtKeySpec'><parameter type='java.math.BigInteger' name='modulus'/><parameter type='java.math.BigInteger' name='publicExponent'/><parameter type='java.math.BigInteger' name='privateExponent'/><parameter type='java.math.BigInteger' name='primeP'/><parameter type='java.math.BigInteger' name='primeQ'/><parameter type='java.math.BigInteger' name='primeExponentP'/><parameter type='java.math.BigInteger' name='primeExponentQ'/><parameter type='java.math.BigInteger' name='crtCoefficient'/></constructor><method return='java.math.BigInteger' name='getCrtCoefficient'/><method return='java.math.BigInteger' name='getPrimeExponentP'/><method return='java.math.BigInteger' name='getPrimeExponentQ'/><method return='java.math.BigInteger' name='getPrimeP'/><method return='java.math.BigInteger' name='getPrimeQ'/><method return='java.math.BigInteger' name='getPublicExponent'/></class><class extends='java.lang.Object' name='RSAPrivateKeySpec'><constructor type='java.security.spec.RSAPrivateKeySpec' name='RSAPrivateKeySpec'><parameter type='java.math.BigInteger' name='modulus'/><parameter type='java.math.BigInteger' name='privateExponent'/></constructor><method return='java.math.BigInteger' name='getModulus'/><method return='java.math.BigInteger' name='getPrivateExponent'/></class><class extends='java.lang.Object' name='RSAPublicKeySpec'><constructor type='java.security.spec.RSAPublicKeySpec' name='RSAPublicKeySpec'><parameter type='java.math.BigInteger' name='modulus'/><parameter type='java.math.BigInteger' name='publicExponent'/></constructor><method return='java.math.BigInteger' name='getModulus'/><method return='java.math.BigInteger' name='getPublicExponent'/></class><class extends='java.security.spec.EncodedKeySpec' name='X509EncodedKeySpec'><constructor type='java.security.spec.X509EncodedKeySpec' name='X509EncodedKeySpec'><parameter type='byte[]' name='encodedKey'/></constructor><method return='java.lang.String' name='getFormat' final='true'/></class><interface abstract='true' name='AlgorithmParameterSpec'/><interface abstract='true' name='ECField'><method return='int' abstract='true' name='getFieldSize'/></interface><interface abstract='true' name='KeySpec'/></package><package name='java.sql'><class extends='java.sql.SQLException' name='BatchUpdateException'><constructor type='java.sql.BatchUpdateException' name='BatchUpdateException'/><constructor type='java.sql.BatchUpdateException' name='BatchUpdateException'><parameter type='int[]' name='updateCounts'/></constructor><constructor type='java.sql.BatchUpdateException' name='BatchUpdateException'><parameter type='java.lang.String' name='reason'/><parameter type='int[]' name='updateCounts'/></constructor><constructor type='java.sql.BatchUpdateException' name='BatchUpdateException'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='SQLState'/><parameter type='int[]' name='updateCounts'/></constructor><constructor type='java.sql.BatchUpdateException' name='BatchUpdateException'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='SQLState'/><parameter type='int' name='vendorCode'/><parameter type='int[]' name='updateCounts'/></constructor><method return='int[]' name='getUpdateCounts'/></class><class extends='java.sql.SQLWarning' name='DataTruncation'><constructor type='java.sql.DataTruncation' name='DataTruncation'><parameter type='int' name='index'/><parameter type='boolean' name='parameter'/><parameter type='boolean' name='read'/><parameter type='int' name='dataSize'/><parameter type='int' name='transferSize'/></constructor><method return='int' name='getDataSize'/><method return='int' name='getIndex'/><method return='boolean' name='getParameter'/><method return='boolean' name='getRead'/><method return='int' name='getTransferSize'/></class><class extends='java.util.Date' name='Date'><constructor deprecated='1' type='java.sql.Date' name='Date'><parameter type='int' name='theYear'/><parameter type='int' name='theMonth'/><parameter type='int' name='theDay'/></constructor><constructor type='java.sql.Date' name='Date'><parameter type='long' name='theDate'/></constructor><constructor type='java.sql.deprecated Date' name='deprecated Date' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><method return='java.sql.Date' static='true' name='valueOf'><parameter type='java.lang.String' name='dateString'/></method></class><class extends='java.lang.Object' name='DriverManager'><method static='true' name='deregisterDriver'><parameter type='java.sql.Driver' name='driver'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' static='true' name='getConnection'><parameter type='java.lang.String' name='url'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' static='true' name='getConnection'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Properties' name='info'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' static='true' name='getConnection'><parameter type='java.lang.String' name='url'/><parameter type='java.lang.String' name='user'/><parameter type='java.lang.String' name='password'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Driver' static='true' name='getDriver'><parameter type='java.lang.String' name='url'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.util.Enumeration&lt;java.sql.Driver&gt;' static='true' name='getDrivers'/><method deprecated='1' return='java.io.PrintStream' static='true' name='getLogStream'/><method return='java.io.PrintWriter' static='true' name='getLogWriter'/><method return='int' static='true' name='getLoginTimeout'/><method static='true' name='println'><parameter type='java.lang.String' name='message'/></method><method static='true' name='registerDriver'><parameter type='java.sql.Driver' name='driver'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' static='true' name='setLogStream'><parameter type='java.io.PrintStream' name='out'/></method><method static='true' name='setLogWriter'><parameter type='java.io.PrintWriter' name='out'/></method><method static='true' name='setLoginTimeout'><parameter type='int' name='seconds'/></method></class><class extends='java.lang.Object' name='DriverPropertyInfo'><constructor type='java.sql.DriverPropertyInfo' name='DriverPropertyInfo'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor></class><class extends='java.lang.Exception' name='SQLException'><constructor type='java.sql.SQLException' name='SQLException'/><constructor type='java.sql.SQLException' name='SQLException'><parameter type='java.lang.String' name='theReason'/></constructor><constructor type='java.sql.SQLException' name='SQLException'><parameter type='java.lang.String' name='theReason'/><parameter type='java.lang.String' name='theSQLState'/></constructor><constructor type='java.sql.SQLException' name='SQLException'><parameter type='java.lang.String' name='theReason'/><parameter type='java.lang.String' name='theSQLState'/><parameter type='int' name='theErrorCode'/></constructor><method return='int' name='getErrorCode'/><method return='java.sql.SQLException' name='getNextException'/><method return='java.lang.String' name='getSQLState'/><method name='setNextException'><parameter type='java.sql.SQLException' name='ex'/></method><method return='java.util.Iterator&lt;java.lang.Throwable&gt;' name='iterator' api_added='9'/></class><class extends='java.security.BasicPermission' name='SQLPermission' final='true'><constructor type='java.sql.SQLPermission' name='SQLPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.sql.SQLPermission' name='SQLPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.sql.SQLException' name='SQLWarning'><constructor type='java.sql.SQLWarning' name='SQLWarning'/><constructor type='java.sql.SQLWarning' name='SQLWarning'><parameter type='java.lang.String' name='theReason'/></constructor><constructor type='java.sql.SQLWarning' name='SQLWarning'><parameter type='java.lang.String' name='theReason'/><parameter type='java.lang.String' name='theSQLState'/></constructor><constructor type='java.sql.SQLWarning' name='SQLWarning'><parameter type='java.lang.String' name='theReason'/><parameter type='java.lang.String' name='theSQLState'/><parameter type='int' name='theErrorCode'/></constructor><method return='java.sql.SQLWarning' name='getNextWarning'/><method name='setNextWarning'><parameter type='java.sql.SQLWarning' name='w'/></method></class><class extends='java.util.Date' name='Time'><constructor deprecated='1' type='java.sql.Time' name='Time'><parameter type='int' name='theHour'/><parameter type='int' name='theMinute'/><parameter type='int' name='theSecond'/></constructor><constructor type='java.sql.Time' name='Time'><parameter type='long' name='theTime'/></constructor><constructor type='java.sql.deprecated Time' name='deprecated Time' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><method return='java.sql.Time' static='true' name='valueOf'><parameter type='java.lang.String' name='timeString'/></method></class><class extends='java.util.Date' name='Timestamp'><constructor deprecated='1' type='java.sql.Timestamp' name='Timestamp'><parameter type='int' name='theYear'/><parameter type='int' name='theMonth'/><parameter type='int' name='theDate'/><parameter type='int' name='theHour'/><parameter type='int' name='theMinute'/><parameter type='int' name='theSecond'/><parameter type='int' name='theNano'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></constructor><constructor type='java.sql.Timestamp' name='Timestamp'><parameter type='long' name='theTime'/></constructor><constructor type='java.sql.deprecated Timestamp' name='deprecated Timestamp' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/><parameter type='int' name='arg5'/><parameter type='int' name='arg6'/></constructor><method return='boolean' name='after'><parameter type='java.sql.Timestamp' name='theTimestamp'/></method><method return='boolean' name='before'><parameter type='java.sql.Timestamp' name='theTimestamp'/></method><method return='int' name='compareTo'><parameter type='java.sql.Timestamp' name='theTimestamp'/></method><method return='boolean' name='equals'><parameter type='java.sql.Timestamp' name='theTimestamp'/></method><method return='int' name='getNanos'/><method name='setNanos'><parameter type='int' name='n'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.sql.Timestamp' static='true' name='valueOf'><parameter type='java.lang.String' name='s'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></class><class extends='java.lang.Object' name='Types'/><class extends='java.lang.Enum' name='ClientInfoStatus' api_added='9' final='true'><method return='java.sql.ClientInfoStatus' static='true' name='valueOf' api_added='9'><parameter type='java.lang.String' name='name'/></method><method return='java.sql.ClientInfoStatus[]' static='true' name='values' api_added='9' final='true'/></class><class extends='java.lang.Enum' name='RowIdLifetime' api_added='9' final='true'><method return='java.sql.RowIdLifetime' static='true' name='valueOf' api_added='9'><parameter type='java.lang.String' name='name'/></method><method return='java.sql.RowIdLifetime[]' static='true' name='values' api_added='9' final='true'/></class><class extends='java.sql.SQLException' name='SQLClientInfoException' api_added='9'><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'/><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/></constructor><constructor type='java.sql.SQLClientInfoException' name='SQLClientInfoException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='failedProperties'/><parameter type='java.lang.Throwable' name='cause'/></constructor><method return='java.util.Map&lt;java.lang.String, java.sql.ClientInfoStatus&gt;' name='getFailedProperties' api_added='9'/></class><class extends='java.sql.SQLNonTransientException' name='SQLDataException' api_added='9'><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'/><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLDataException' name='SQLDataException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLNonTransientException' name='SQLFeatureNotSupportedException' api_added='9'><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'/><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLFeatureNotSupportedException' name='SQLFeatureNotSupportedException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLNonTransientException' name='SQLIntegrityConstraintViolationException' api_added='9'><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'/><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLIntegrityConstraintViolationException' name='SQLIntegrityConstraintViolationException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLNonTransientException' name='SQLInvalidAuthorizationSpecException' api_added='9'><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'/><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLInvalidAuthorizationSpecException' name='SQLInvalidAuthorizationSpecException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLNonTransientException' name='SQLNonTransientConnectionException' api_added='9'><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'/><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientConnectionException' name='SQLNonTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLException' name='SQLNonTransientException' api_added='9'><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'/><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLNonTransientException' name='SQLNonTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLException' name='SQLRecoverableException' api_added='9'><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'/><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLRecoverableException' name='SQLRecoverableException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLNonTransientException' name='SQLSyntaxErrorException' api_added='9'><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'/><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLSyntaxErrorException' name='SQLSyntaxErrorException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLTransientException' name='SQLTimeoutException' api_added='9'><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'/><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTimeoutException' name='SQLTimeoutException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLTransientException' name='SQLTransactionRollbackException' api_added='9'><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'/><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransactionRollbackException' name='SQLTransactionRollbackException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLTransientException' name='SQLTransientConnectionException' api_added='9'><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'/><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientConnectionException' name='SQLTransientConnectionException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.sql.SQLException' name='SQLTransientException' api_added='9'><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'/><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.sql.SQLTransientException' name='SQLTransientException' api_added='9'><parameter type='java.lang.String' name='reason'/><parameter type='java.lang.String' name='sqlState'/><parameter type='int' name='vendorCode'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='Array'><method return='java.lang.Object' abstract='true' name='getArray'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getArray'><parameter type='long' name='index'/><parameter type='int' name='count'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getArray'><parameter type='long' name='index'/><parameter type='int' name='count'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getArray'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getBaseType'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getBaseTypeName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getResultSet'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getResultSet'><parameter type='long' name='index'/><parameter type='int' name='count'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' api_removed='14' name='getResultSet'><parameter type='long' name='index'/><parameter type='int' name='count'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' api_removed='14' name='getResultSet'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='free' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getArray' api_added='14'><parameter type='long' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg3'/></method><method return='java.lang.Object' abstract='true' name='getArray' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method><method return='java.sql.ResultSet' abstract='true' name='getResultSet' api_added='14'><parameter type='long' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg3'/></method><method return='java.sql.ResultSet' abstract='true' name='getResultSet' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method></interface><interface abstract='true' name='Blob'><method return='java.io.InputStream' abstract='true' name='getBinaryStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='getBytes'><parameter type='long' name='pos'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='length'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='position'><parameter type='java.sql.Blob' name='pattern'/><parameter type='long' name='start'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='position'><parameter type='byte[]' name='pattern'/><parameter type='long' name='start'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.OutputStream' abstract='true' name='setBinaryStream'><parameter type='long' name='pos'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='setBytes'><parameter type='long' name='pos'/><parameter type='byte[]' name='theBytes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='setBytes'><parameter type='long' name='pos'/><parameter type='byte[]' name='theBytes'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='truncate'><parameter type='long' name='len'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='free' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getBinaryStream' api_added='9'><parameter type='long' name='pos'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='CallableStatement'><method return='java.sql.Array' abstract='true' name='getArray'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Array' abstract='true' name='getArray'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='int' name='parameterIndex'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='getBlob'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='getBlob'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getBoolean'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getBoolean'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte' abstract='true' name='getByte'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte' abstract='true' name='getByte'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='getBytes'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='getBytes'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='getClob'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='getClob'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='int' name='parameterIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='double' abstract='true' name='getDouble'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='double' abstract='true' name='getDouble'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='float' abstract='true' name='getFloat'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='float' abstract='true' name='getFloat'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getInt'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getInt'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='getLong'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='getLong'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getObject'><parameter type='int' name='parameterIndex'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getObject'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Ref' abstract='true' name='getRef'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Ref' abstract='true' name='getRef'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='short' abstract='true' name='getShort'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='short' abstract='true' name='getShort'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='int' name='parameterIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='int' name='parameterIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.net.URL' abstract='true' name='getURL'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.net.URL' abstract='true' name='getURL'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='int' name='parameterIndex'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='int' name='parameterIndex'/><parameter type='int' name='sqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='int' name='paramIndex'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='registerOutParameter'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBigDecimal'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.math.BigDecimal' name='theBigDecimal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBoolean'><parameter type='java.lang.String' name='parameterName'/><parameter type='boolean' name='theBoolean'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setByte'><parameter type='java.lang.String' name='parameterName'/><parameter type='byte' name='theByte'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBytes'><parameter type='java.lang.String' name='parameterName'/><parameter type='byte[]' name='theBytes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Date' name='theDate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Date' name='theDate'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDouble'><parameter type='java.lang.String' name='parameterName'/><parameter type='double' name='theDouble'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFloat'><parameter type='java.lang.String' name='parameterName'/><parameter type='float' name='theFloat'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setInt'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='theInt'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLong'><parameter type='java.lang.String' name='parameterName'/><parameter type='long' name='theLong'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setShort'><parameter type='java.lang.String' name='parameterName'/><parameter type='short' name='theShort'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setString'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Time' name='theTime'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Time' name='theTime'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setURL'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.net.URL' name='theURL'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='wasNull'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getNCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getNCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='getNClob' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='getNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getNString' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getNString' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowId' abstract='true' name='getRowId' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowId' abstract='true' name='getRowId' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='getSQLXML' api_added='9'><parameter type='int' name='parameterIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='getSQLXML' api_added='9'><parameter type='java.lang.String' name='parameterName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Blob' name='blob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Clob' name='clob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.NClob' name='nclob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNString' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.String' name='string'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRowId' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.RowId' name='rowId'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSQLXML' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.SQLXML' name='sqlXml'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg2'/></method><method return='java.lang.Object' abstract='true' name='getObject' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg2'/></method></interface><interface abstract='true' name='Clob'><method return='java.io.InputStream' abstract='true' name='getAsciiStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSubString'><parameter type='long' name='pos'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='length'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='position'><parameter type='java.sql.Clob' name='searchstr'/><parameter type='long' name='start'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='position'><parameter type='java.lang.String' name='searchstr'/><parameter type='long' name='start'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.OutputStream' abstract='true' name='setAsciiStream'><parameter type='long' name='pos'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Writer' abstract='true' name='setCharacterStream'><parameter type='long' name='pos'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='setString'><parameter type='long' name='pos'/><parameter type='java.lang.String' name='str'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='setString'><parameter type='long' name='pos'/><parameter type='java.lang.String' name='str'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='truncate'><parameter type='long' name='len'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='free' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream' api_added='9'><parameter type='long' name='pos'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Connection'><method abstract='true' name='clearWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='close'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='commit'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Statement' abstract='true' name='createStatement'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Statement' abstract='true' name='createStatement'><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Statement' abstract='true' name='createStatement'><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><parameter type='int' name='resultSetHoldability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getAutoCommit'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getCatalog'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getHoldability'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.DatabaseMetaData' abstract='true' name='getMetaData'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getTransactionIsolation'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' abstract='true' name='getTypeMap'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLWarning' abstract='true' name='getWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isClosed'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isReadOnly'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='nativeSQL'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.CallableStatement' abstract='true' name='prepareCall'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.CallableStatement' abstract='true' name='prepareCall'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.CallableStatement' abstract='true' name='prepareCall'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><parameter type='int' name='resultSetHoldability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='autoGeneratedKeys'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><parameter type='int[]' name='columnIndexes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='resultSetType'/><parameter type='int' name='resultSetConcurrency'/><parameter type='int' name='resultSetHoldability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.PreparedStatement' abstract='true' name='prepareStatement'><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.String[]' name='columnNames'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='releaseSavepoint'><parameter type='java.sql.Savepoint' name='savepoint'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='rollback'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='rollback'><parameter type='java.sql.Savepoint' name='savepoint'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAutoCommit'><parameter type='boolean' name='autoCommit'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCatalog'><parameter type='java.lang.String' name='catalog'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setHoldability'><parameter type='int' name='holdability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setReadOnly'><parameter type='boolean' name='readOnly'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Savepoint' abstract='true' name='setSavepoint'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Savepoint' abstract='true' name='setSavepoint'><parameter type='java.lang.String' name='name'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTransactionIsolation'><parameter type='int' name='level'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='14' name='setTypeMap'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Array' abstract='true' name='createArrayOf' api_added='9'><parameter type='java.lang.String' name='typeName'/><parameter type='java.lang.Object[]' name='elements'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='createBlob' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='createClob' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='createNClob' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='createSQLXML' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Struct' abstract='true' name='createStruct' api_added='9'><parameter type='java.lang.String' name='typeName'/><parameter type='java.lang.Object[]' name='attributes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getClientInfo' api_added='9'><parameter type='java.lang.String' name='name'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.util.Properties' abstract='true' name='getClientInfo' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isValid' api_added='9'><parameter type='int' name='timeout'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClientInfo' api_added='9'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='java.sql.SQLClientInfoException' name='SQLClientInfoException'/></method><method abstract='true' name='setClientInfo' api_added='9'><parameter type='java.util.Properties' name='properties'/><exception type='java.sql.SQLClientInfoException' name='SQLClientInfoException'/></method><method abstract='true' name='setTypeMap' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method></interface><interface abstract='true' name='DatabaseMetaData'><method return='boolean' abstract='true' name='allProceduresAreCallable'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='allTablesAreSelectable'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='dataDefinitionCausesTransactionCommit'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='dataDefinitionIgnoredInTransactions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='deletesAreDetected'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='doesMaxRowSizeIncludeBlobs'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getAttributes'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='typeNamePattern'/><parameter type='java.lang.String' name='attributeNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getBestRowIdentifier'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><parameter type='int' name='scope'/><parameter type='boolean' name='nullable'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getCatalogSeparator'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getCatalogTerm'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getCatalogs'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getColumnPrivileges'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><parameter type='java.lang.String' name='columnNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getColumns'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='tableNamePattern'/><parameter type='java.lang.String' name='columnNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' abstract='true' name='getConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getCrossReference'><parameter type='java.lang.String' name='primaryCatalog'/><parameter type='java.lang.String' name='primarySchema'/><parameter type='java.lang.String' name='primaryTable'/><parameter type='java.lang.String' name='foreignCatalog'/><parameter type='java.lang.String' name='foreignSchema'/><parameter type='java.lang.String' name='foreignTable'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getDatabaseMajorVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getDatabaseMinorVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getDatabaseProductName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getDatabaseProductVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getDefaultTransactionIsolation'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getDriverMajorVersion'/><method return='int' abstract='true' name='getDriverMinorVersion'/><method return='java.lang.String' abstract='true' name='getDriverName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getDriverVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getExportedKeys'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getExtraNameCharacters'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getIdentifierQuoteString'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getImportedKeys'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getIndexInfo'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><parameter type='boolean' name='unique'/><parameter type='boolean' name='approximate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getJDBCMajorVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getJDBCMinorVersion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxBinaryLiteralLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxCatalogNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxCharLiteralLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnsInGroupBy'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnsInIndex'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnsInOrderBy'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnsInSelect'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxColumnsInTable'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxConnections'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxCursorNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxIndexLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxProcedureNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxRowSize'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxSchemaNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxStatementLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxStatements'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxTableNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxTablesInSelect'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxUserNameLength'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getNumericFunctions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getPrimaryKeys'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getProcedureColumns'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='procedureNamePattern'/><parameter type='java.lang.String' name='columnNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getProcedureTerm'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getProcedures'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='procedureNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getResultSetHoldability'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSQLKeywords'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getSQLStateType'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSchemaTerm'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getSchemas'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSearchStringEscape'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getStringFunctions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getSuperTables'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='tableNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getSuperTypes'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='typeNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSystemFunctions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getTablePrivileges'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='tableNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getTableTypes'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getTables'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='tableNamePattern'/><parameter type='java.lang.String[]' name='types'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getTimeDateFunctions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getTypeInfo'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getUDTs'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='typeNamePattern'/><parameter type='int[]' name='types'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getURL'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getUserName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getVersionColumns'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schema'/><parameter type='java.lang.String' name='table'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='insertsAreDetected'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isCatalogAtStart'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isReadOnly'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='locatorsUpdateCopy'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='nullPlusNonNullIsNull'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='nullsAreSortedAtEnd'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='nullsAreSortedAtStart'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='nullsAreSortedHigh'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='nullsAreSortedLow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='othersDeletesAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='othersInsertsAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='othersUpdatesAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='ownDeletesAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='ownInsertsAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='ownUpdatesAreVisible'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesLowerCaseIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesLowerCaseQuotedIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesMixedCaseIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesMixedCaseQuotedIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesUpperCaseIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='storesUpperCaseQuotedIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsANSI92EntryLevelSQL'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsANSI92FullSQL'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsANSI92IntermediateSQL'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsAlterTableWithAddColumn'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsAlterTableWithDropColumn'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsBatchUpdates'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCatalogsInDataManipulation'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCatalogsInIndexDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCatalogsInPrivilegeDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCatalogsInProcedureCalls'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCatalogsInTableDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsColumnAliasing'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsConvert'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsConvert'><parameter type='int' name='fromType'/><parameter type='int' name='toType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCoreSQLGrammar'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsCorrelatedSubqueries'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsDataDefinitionAndDataManipulationTransactions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsDataManipulationTransactionsOnly'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsDifferentTableCorrelationNames'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsExpressionsInOrderBy'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsExtendedSQLGrammar'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsFullOuterJoins'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsGetGeneratedKeys'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsGroupBy'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsGroupByBeyondSelect'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsGroupByUnrelated'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsIntegrityEnhancementFacility'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsLikeEscapeClause'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsLimitedOuterJoins'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMinimumSQLGrammar'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMixedCaseIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMixedCaseQuotedIdentifiers'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMultipleOpenResults'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMultipleResultSets'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsMultipleTransactions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsNamedParameters'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsNonNullableColumns'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOpenCursorsAcrossCommit'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOpenCursorsAcrossRollback'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOpenStatementsAcrossCommit'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOpenStatementsAcrossRollback'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOrderByUnrelated'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsOuterJoins'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsPositionedDelete'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsPositionedUpdate'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsResultSetConcurrency'><parameter type='int' name='type'/><parameter type='int' name='concurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsResultSetHoldability'><parameter type='int' name='holdability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsResultSetType'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSavepoints'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSchemasInDataManipulation'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSchemasInIndexDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSchemasInPrivilegeDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSchemasInProcedureCalls'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSchemasInTableDefinitions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSelectForUpdate'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsStatementPooling'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsStoredProcedures'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSubqueriesInComparisons'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSubqueriesInExists'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSubqueriesInIns'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsSubqueriesInQuantifieds'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsTableCorrelationNames'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsTransactionIsolationLevel'><parameter type='int' name='level'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsTransactions'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsUnion'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsUnionAll'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='updatesAreDetected'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='usesLocalFilePerTable'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='usesLocalFiles'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='autoCommitFailureClosesAllResultSets' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getClientInfoProperties' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getFunctionColumns' api_added='9'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='functionNamePattern'/><parameter type='java.lang.String' name='columnNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getFunctions' api_added='9'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><parameter type='java.lang.String' name='functionNamePattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowIdLifetime' abstract='true' name='getRowIdLifetime' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getSchemas' api_added='9'><parameter type='java.lang.String' name='catalog'/><parameter type='java.lang.String' name='schemaPattern'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='supportsStoredFunctionsUsingCallSyntax' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Driver'><method return='boolean' abstract='true' name='acceptsURL'><parameter type='java.lang.String' name='url'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' abstract='true' name='connect'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Properties' name='info'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMajorVersion'/><method return='int' abstract='true' name='getMinorVersion'/><method return='java.sql.DriverPropertyInfo[]' abstract='true' name='getPropertyInfo'><parameter type='java.lang.String' name='url'/><parameter type='java.util.Properties' name='info'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='jdbcCompliant'/></interface><interface abstract='true' name='ParameterMetaData'><method return='java.lang.String' abstract='true' name='getParameterClassName'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getParameterCount'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getParameterMode'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getParameterType'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getParameterTypeName'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getPrecision'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getScale'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='isNullable'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isSigned'><parameter type='int' name='paramIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='PreparedStatement'><method abstract='true' name='addBatch'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='clearParameters'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='execute'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='executeQuery'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='executeUpdate'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSetMetaData' abstract='true' name='getMetaData'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ParameterMetaData' abstract='true' name='getParameterMetaData'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setArray'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Array' name='theArray'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBigDecimal'><parameter type='int' name='parameterIndex'/><parameter type='java.math.BigDecimal' name='theBigDecimal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Blob' name='theBlob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBoolean'><parameter type='int' name='parameterIndex'/><parameter type='boolean' name='theBoolean'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setByte'><parameter type='int' name='parameterIndex'/><parameter type='byte' name='theByte'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBytes'><parameter type='int' name='parameterIndex'/><parameter type='byte[]' name='theBytes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Clob' name='theClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Date' name='theDate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Date' name='theDate'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDouble'><parameter type='int' name='parameterIndex'/><parameter type='double' name='theDouble'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFloat'><parameter type='int' name='parameterIndex'/><parameter type='float' name='theFloat'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setInt'><parameter type='int' name='parameterIndex'/><parameter type='int' name='theInt'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLong'><parameter type='int' name='parameterIndex'/><parameter type='long' name='theLong'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='int' name='parameterIndex'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='int' name='paramIndex'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRef'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Ref' name='theRef'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setShort'><parameter type='int' name='parameterIndex'/><parameter type='short' name='theShort'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setString'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Time' name='theTime'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Time' name='theTime'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setURL'><parameter type='int' name='parameterIndex'/><parameter type='java.net.URL' name='theURL'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' abstract='true' name='setUnicodeStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.NClob' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNString' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRowId' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.RowId' name='theRowId'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSQLXML' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.SQLXML' name='xmlObject'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Ref'><method return='java.lang.String' abstract='true' name='getBaseTypeName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getObject'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='java.lang.Object' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method></interface><interface abstract='true' name='ResultSet'><method return='boolean' abstract='true' name='absolute'><parameter type='int' name='row'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='afterLast'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='beforeFirst'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='cancelRowUpdates'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='clearWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='close'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='deleteRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='findColumn'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='first'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Array' abstract='true' name='getArray'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Array' abstract='true' name='getArray'><parameter type='java.lang.String' name='colName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getAsciiStream'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getAsciiStream'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='int' name='columnIndex'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' return='java.math.BigDecimal' abstract='true' name='getBigDecimal'><parameter type='java.lang.String' name='columnName'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getBinaryStream'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getBinaryStream'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='getBlob'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='getBlob'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getBoolean'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getBoolean'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte' abstract='true' name='getByte'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte' abstract='true' name='getByte'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='getBytes'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='getBytes'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='getClob'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='getClob'><parameter type='java.lang.String' name='colName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getConcurrency'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getCursorName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='int' name='columnIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='getDate'><parameter type='java.lang.String' name='columnName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='double' abstract='true' name='getDouble'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='double' abstract='true' name='getDouble'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getFetchDirection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getFetchSize'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='float' abstract='true' name='getFloat'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='float' abstract='true' name='getFloat'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getInt'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getInt'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='getLong'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='getLong'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSetMetaData' abstract='true' name='getMetaData'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getObject'><parameter type='int' name='columnIndex'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' api_removed='14' name='getObject'><parameter type='java.lang.String' name='columnName'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='map'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Ref' abstract='true' name='getRef'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Ref' abstract='true' name='getRef'><parameter type='java.lang.String' name='colName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='short' abstract='true' name='getShort'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='short' abstract='true' name='getShort'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Statement' abstract='true' name='getStatement'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getString'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='int' name='columnIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='getTime'><parameter type='java.lang.String' name='columnName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='int' name='columnIndex'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='getTimestamp'><parameter type='java.lang.String' name='columnName'/><parameter type='java.util.Calendar' name='cal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getType'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.net.URL' abstract='true' name='getURL'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.net.URL' abstract='true' name='getURL'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' return='java.io.InputStream' abstract='true' name='getUnicodeStream'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method deprecated='1' return='java.io.InputStream' abstract='true' name='getUnicodeStream'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLWarning' abstract='true' name='getWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='insertRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isAfterLast'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isBeforeFirst'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isFirst'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isLast'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='last'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='moveToCurrentRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='moveToInsertRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='next'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='previous'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='refreshRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='relative'><parameter type='int' name='rows'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='rowDeleted'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='rowInserted'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='rowUpdated'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFetchDirection'><parameter type='int' name='direction'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFetchSize'><parameter type='int' name='rows'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateArray'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Array' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateArray'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Array' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream'><parameter type='java.lang.String' name='columnName'/><parameter type='java.io.InputStream' name='x'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBigDecimal'><parameter type='int' name='columnIndex'/><parameter type='java.math.BigDecimal' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBigDecimal'><parameter type='java.lang.String' name='columnName'/><parameter type='java.math.BigDecimal' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream'><parameter type='java.lang.String' name='columnName'/><parameter type='java.io.InputStream' name='x'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Blob' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Blob' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBoolean'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBoolean'><parameter type='java.lang.String' name='columnName'/><parameter type='boolean' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateByte'><parameter type='int' name='columnIndex'/><parameter type='byte' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateByte'><parameter type='java.lang.String' name='columnName'/><parameter type='byte' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBytes'><parameter type='int' name='columnIndex'/><parameter type='byte[]' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBytes'><parameter type='java.lang.String' name='columnName'/><parameter type='byte[]' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='x'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream'><parameter type='java.lang.String' name='columnName'/><parameter type='java.io.Reader' name='reader'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Clob' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Clob' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateDate'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Date' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateDate'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Date' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateDouble'><parameter type='int' name='columnIndex'/><parameter type='double' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateDouble'><parameter type='java.lang.String' name='columnName'/><parameter type='double' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateFloat'><parameter type='int' name='columnIndex'/><parameter type='float' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateFloat'><parameter type='java.lang.String' name='columnName'/><parameter type='float' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateInt'><parameter type='int' name='columnIndex'/><parameter type='int' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateInt'><parameter type='java.lang.String' name='columnName'/><parameter type='int' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateLong'><parameter type='int' name='columnIndex'/><parameter type='long' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateLong'><parameter type='java.lang.String' name='columnName'/><parameter type='long' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNull'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNull'><parameter type='java.lang.String' name='columnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateObject'><parameter type='int' name='columnIndex'/><parameter type='java.lang.Object' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateObject'><parameter type='int' name='columnIndex'/><parameter type='java.lang.Object' name='x'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateObject'><parameter type='java.lang.String' name='columnName'/><parameter type='java.lang.Object' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateObject'><parameter type='java.lang.String' name='columnName'/><parameter type='java.lang.Object' name='x'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateRef'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Ref' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateRef'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Ref' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateShort'><parameter type='int' name='columnIndex'/><parameter type='short' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateShort'><parameter type='java.lang.String' name='columnName'/><parameter type='short' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateString'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateString'><parameter type='java.lang.String' name='columnName'/><parameter type='java.lang.String' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateTime'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Time' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateTime'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Time' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateTimestamp'><parameter type='int' name='columnIndex'/><parameter type='java.sql.Timestamp' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateTimestamp'><parameter type='java.lang.String' name='columnName'/><parameter type='java.sql.Timestamp' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='wasNull'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getHoldability' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getNCharacterStream' api_added='9'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getNCharacterStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='getNClob' api_added='9'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='getNClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getNString' api_added='9'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getNString' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowId' abstract='true' name='getRowId' api_added='9'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowId' abstract='true' name='getRowId' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='getSQLXML' api_added='9'><parameter type='int' name='columnIndex'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='getSQLXML' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isClosed' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateAsciiStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBinaryStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='inputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateBlob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.InputStream' name='inputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateCharacterStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNCharacterStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='x'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNCharacterStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNCharacterStream' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='x'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNCharacterStream' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.sql.NClob' name='nClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.sql.NClob' name='nClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNClob' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.io.Reader' name='reader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNString' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='nString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateNString' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.lang.String' name='nString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateRowId' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.sql.RowId' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateRowId' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.sql.RowId' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateSQLXML' api_added='9'><parameter type='int' name='columnIndex'/><parameter type='java.sql.SQLXML' name='xmlObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='updateSQLXML' api_added='9'><parameter type='java.lang.String' name='columnLabel'/><parameter type='java.sql.SQLXML' name='xmlObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='getObject' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg2'/></method><method return='java.lang.Object' abstract='true' name='getObject' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg2'/></method></interface><interface abstract='true' name='ResultSetMetaData'><method return='java.lang.String' abstract='true' name='getCatalogName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getColumnClassName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getColumnCount'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getColumnDisplaySize'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getColumnLabel'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getColumnName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getColumnType'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getColumnTypeName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getPrecision'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getScale'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSchemaName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getTableName'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isAutoIncrement'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isCaseSensitive'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isCurrency'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isDefinitelyWritable'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='isNullable'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isReadOnly'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isSearchable'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isSigned'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isWritable'><parameter type='int' name='column'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='SQLData'><method return='java.lang.String' abstract='true' name='getSQLTypeName'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='readSQL'><parameter type='java.sql.SQLInput' name='stream'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeSQL'><parameter type='java.sql.SQLOutput' name='stream'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='SQLInput'><method return='java.sql.Array' abstract='true' name='readArray'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='readAsciiStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.math.BigDecimal' abstract='true' name='readBigDecimal'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='readBinaryStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Blob' abstract='true' name='readBlob'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='readBoolean'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte' abstract='true' name='readByte'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='byte[]' abstract='true' name='readBytes'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='readCharacterStream'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Clob' abstract='true' name='readClob'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Date' abstract='true' name='readDate'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='double' abstract='true' name='readDouble'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='float' abstract='true' name='readFloat'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='readInt'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='long' abstract='true' name='readLong'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object' abstract='true' name='readObject'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Ref' abstract='true' name='readRef'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='short' abstract='true' name='readShort'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='readString'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Time' abstract='true' name='readTime'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Timestamp' abstract='true' name='readTimestamp'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.net.URL' abstract='true' name='readURL'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='wasNull'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.NClob' abstract='true' name='readNClob' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='readNString' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.RowId' abstract='true' name='readRowId' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLXML' abstract='true' name='readSQLXML' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='SQLOutput'><method abstract='true' name='writeArray'><parameter type='java.sql.Array' name='theArray'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeAsciiStream'><parameter type='java.io.InputStream' name='theStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeBigDecimal'><parameter type='java.math.BigDecimal' name='theBigDecimal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeBinaryStream'><parameter type='java.io.InputStream' name='theStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeBlob'><parameter type='java.sql.Blob' name='theBlob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeBoolean'><parameter type='boolean' name='theFlag'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeByte'><parameter type='byte' name='theByte'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeBytes'><parameter type='byte[]' name='theBytes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeCharacterStream'><parameter type='java.io.Reader' name='theStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeClob'><parameter type='java.sql.Clob' name='theClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeDate'><parameter type='java.sql.Date' name='theDate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeDouble'><parameter type='double' name='theDouble'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeFloat'><parameter type='float' name='theFloat'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeInt'><parameter type='int' name='theInt'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeLong'><parameter type='long' name='theLong'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeObject'><parameter type='java.sql.SQLData' name='theObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeRef'><parameter type='java.sql.Ref' name='theRef'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeShort'><parameter type='short' name='theShort'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeString'><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeStruct'><parameter type='java.sql.Struct' name='theStruct'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeTime'><parameter type='java.sql.Time' name='theTime'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeTimestamp'><parameter type='java.sql.Timestamp' name='theTimestamp'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeURL'><parameter type='java.net.URL' name='theURL'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeNClob' api_added='9'><parameter type='java.sql.NClob' name='theNClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeNString' api_added='9'><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeRowId' api_added='9'><parameter type='java.sql.RowId' name='theRowId'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='writeSQLXML' api_added='9'><parameter type='java.sql.SQLXML' name='theXml'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Savepoint'><method return='int' abstract='true' name='getSavepointId'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSavepointName'><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Statement'><method abstract='true' name='addBatch'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='cancel'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='clearBatch'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='clearWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='close'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='execute'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='execute'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='autoGeneratedKeys'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='execute'><parameter type='java.lang.String' name='sql'/><parameter type='int[]' name='columnIndexes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='execute'><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.String[]' name='columnNames'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int[]' abstract='true' name='executeBatch'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='executeQuery'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='executeUpdate'><parameter type='java.lang.String' name='sql'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='executeUpdate'><parameter type='java.lang.String' name='sql'/><parameter type='int' name='autoGeneratedKeys'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='executeUpdate'><parameter type='java.lang.String' name='sql'/><parameter type='int[]' name='columnIndexes'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='executeUpdate'><parameter type='java.lang.String' name='sql'/><parameter type='java.lang.String[]' name='columnNames'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' abstract='true' name='getConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getFetchDirection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getFetchSize'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getGeneratedKeys'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxFieldSize'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxRows'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getMoreResults'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='getMoreResults'><parameter type='int' name='current'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getQueryTimeout'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getResultSet'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getResultSetConcurrency'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getResultSetHoldability'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getResultSetType'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getUpdateCount'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.SQLWarning' abstract='true' name='getWarnings'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCursorName'><parameter type='java.lang.String' name='name'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setEscapeProcessing'><parameter type='boolean' name='enable'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFetchDirection'><parameter type='int' name='direction'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFetchSize'><parameter type='int' name='rows'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setMaxFieldSize'><parameter type='int' name='max'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setMaxRows'><parameter type='int' name='max'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setQueryTimeout'><parameter type='int' name='seconds'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isClosed' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='boolean' abstract='true' name='isPoolable' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setPoolable' api_added='9'><parameter type='boolean' name='poolable'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Struct'><method return='java.lang.Object[]' abstract='true' name='getAttributes'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object[]' abstract='true' api_removed='14' name='getAttributes'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='theMap'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getSQLTypeName'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object[]' abstract='true' name='getAttributes' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method></interface><interface abstract='true' name='NClob' api_added='9'/><interface abstract='true' name='RowId' api_added='9'><method return='boolean' abstract='true' name='equals' api_added='9'><parameter type='java.lang.Object' name='obj'/></method><method return='byte[]' abstract='true' name='getBytes' api_added='9'/><method return='int' abstract='true' name='hashCode' api_added='9'/><method return='java.lang.String' abstract='true' name='toString' api_added='9'/></interface><interface abstract='true' name='SQLXML' api_added='9'><method abstract='true' name='free' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.InputStream' abstract='true' name='getBinaryStream' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Reader' abstract='true' name='getCharacterStream' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='T' abstract='true' name='getSource' api_added='9'><parameter type='java.lang.Class&lt;T&gt;' name='sourceClass'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getString' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.OutputStream' abstract='true' name='setBinaryStream' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.Writer' abstract='true' name='setCharacterStream' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='T' abstract='true' name='setResult' api_added='9'><parameter type='java.lang.Class&lt;T&gt;' name='resultClass'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setString' api_added='9'><parameter type='java.lang.String' name='value'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='Wrapper' api_added='9'><method return='boolean' abstract='true' name='isWrapperFor' api_added='9'><parameter type='java.lang.Class&lt;?&gt;' name='iface'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='T' abstract='true' name='unwrap' api_added='9'><parameter type='java.lang.Class&lt;T&gt;' name='iface'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface></package><package name='java.text'><class extends='java.lang.Object' name='Annotation'><constructor type='java.text.Annotation' name='Annotation'><parameter type='java.lang.Object' name='attribute'/></constructor><method return='java.lang.Object' name='getValue'/></class><class extends='java.lang.Object' static='true' name='AttributedCharacterIterator.Attribute'><constructor visibility='protected' type='java.text.AttributedCharacterIterator.Attribute' name='AttributedCharacterIterator.Attribute'><parameter type='java.lang.String' name='name'/></constructor><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='object'/></method><method visibility='protected' return='java.lang.String' name='getName'/><method return='int' name='hashCode' final='true'/><method visibility='protected' return='java.lang.Object' name='readResolve'><exception type='java.io.InvalidObjectException' name='InvalidObjectException'/></method></class><class extends='java.lang.Object' name='AttributedString'><constructor type='java.text.AttributedString' name='AttributedString'><parameter type='java.text.AttributedCharacterIterator' name='iterator'/></constructor><constructor type='java.text.AttributedString' name='AttributedString'><parameter type='java.text.AttributedCharacterIterator' name='iterator'/><parameter type='int' name='start'/><parameter type='int' name='end'/></constructor><constructor type='java.text.AttributedString' name='AttributedString'><parameter type='java.text.AttributedCharacterIterator' name='iterator'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.text.AttributedCharacterIterator.Attribute[]' name='attributes'/></constructor><constructor type='java.text.AttributedString' name='AttributedString'><parameter type='java.lang.String' name='value'/></constructor><constructor type='java.text.AttributedString' name='AttributedString'><parameter type='java.lang.String' name='value'/><parameter type='java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&gt;' name='attributes'/></constructor><method name='addAttribute'><parameter type='java.text.AttributedCharacterIterator.Attribute' name='attribute'/><parameter type='java.lang.Object' name='value'/></method><method name='addAttribute'><parameter type='java.text.AttributedCharacterIterator.Attribute' name='attribute'/><parameter type='java.lang.Object' name='value'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method api_removed='14' name='addAttributes'><parameter type='java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&gt;' name='attributes'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.text.AttributedCharacterIterator' name='getIterator'/><method return='java.text.AttributedCharacterIterator' name='getIterator'><parameter type='java.text.AttributedCharacterIterator.Attribute[]' name='attributes'/></method><method return='java.text.AttributedCharacterIterator' name='getIterator'><parameter type='java.text.AttributedCharacterIterator.Attribute[]' name='attributes'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='addAttributes' api_added='14'><parameter type='java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute' name='arg0'/><parameter type='?&gt;' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method></class><class extends='java.lang.Object' name='Bidi' final='true'><constructor type='java.text.Bidi' name='Bidi'><parameter type='java.text.AttributedCharacterIterator' name='paragraph'/></constructor><constructor type='java.text.Bidi' name='Bidi'><parameter type='char[]' name='text'/><parameter type='int' name='textStart'/><parameter type='byte[]' name='embeddings'/><parameter type='int' name='embStart'/><parameter type='int' name='paragraphLength'/><parameter type='int' name='flags'/></constructor><constructor type='java.text.Bidi' name='Bidi'><parameter type='java.lang.String' name='paragraph'/><parameter type='int' name='flags'/></constructor><method return='boolean' name='baseIsLeftToRight'/><method return='java.text.Bidi' name='createLineBidi'><parameter type='int' name='lineStart'/><parameter type='int' name='lineLimit'/></method><method return='int' name='getBaseLevel'/><method return='int' name='getLength'/><method return='int' name='getLevelAt'><parameter type='int' name='offset'/></method><method return='int' name='getRunCount'/><method return='int' name='getRunLevel'><parameter type='int' name='run'/></method><method return='int' name='getRunLimit'><parameter type='int' name='run'/></method><method return='int' name='getRunStart'><parameter type='int' name='run'/></method><method return='boolean' name='isLeftToRight'/><method return='boolean' name='isMixed'/><method return='boolean' name='isRightToLeft'/><method static='true' name='reorderVisually'><parameter type='byte[]' name='levels'/><parameter type='int' name='levelStart'/><parameter type='java.lang.Object[]' name='objects'/><parameter type='int' name='objectStart'/><parameter type='int' name='count'/></method><method return='boolean' static='true' name='requiresBidi'><parameter type='char[]' name='text'/><parameter type='int' name='start'/><parameter type='int' name='limit'/></method></class><class extends='java.lang.Object' abstract='true' name='BreakIterator'><constructor visibility='protected' type='java.text.BreakIterator' name='BreakIterator'/><method return='java.lang.Object' name='clone'/><method return='int' abstract='true' name='current'/><method return='int' abstract='true' name='first'/><method return='int' abstract='true' name='following'><parameter type='int' name='offset'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales'/><method return='java.text.BreakIterator' static='true' name='getCharacterInstance'/><method return='java.text.BreakIterator' static='true' name='getCharacterInstance'><parameter type='java.util.Locale' name='where'/></method><method visibility='protected' return='int' api_removed='9' static='true' name='getInt'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/></method><method return='java.text.BreakIterator' static='true' name='getLineInstance'/><method return='java.text.BreakIterator' static='true' name='getLineInstance'><parameter type='java.util.Locale' name='where'/></method><method visibility='protected' return='long' api_removed='9' static='true' name='getLong'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/></method><method return='java.text.BreakIterator' static='true' name='getSentenceInstance'/><method return='java.text.BreakIterator' static='true' name='getSentenceInstance'><parameter type='java.util.Locale' name='where'/></method><method visibility='protected' return='short' api_removed='9' static='true' name='getShort'><parameter type='byte[]' name='buf'/><parameter type='int' name='offset'/></method><method return='java.text.CharacterIterator' abstract='true' name='getText'/><method return='java.text.BreakIterator' static='true' name='getWordInstance'/><method return='java.text.BreakIterator' static='true' name='getWordInstance'><parameter type='java.util.Locale' name='where'/></method><method return='boolean' name='isBoundary'><parameter type='int' name='offset'/></method><method return='int' abstract='true' name='last'/><method return='int' abstract='true' name='next'/><method return='int' abstract='true' name='next'><parameter type='int' name='n'/></method><method return='int' name='preceding'><parameter type='int' name='offset'/></method><method return='int' abstract='true' name='previous'/><method name='setText'><parameter type='java.lang.String' name='newText'/></method><method abstract='true' name='setText'><parameter type='java.text.CharacterIterator' name='newText'/></method></class><class extends='java.text.NumberFormat' name='ChoiceFormat'><constructor type='java.text.ChoiceFormat' name='ChoiceFormat'><parameter type='double[]' name='limits'/><parameter type='java.lang.String[]' name='formats'/></constructor><constructor type='java.text.ChoiceFormat' name='ChoiceFormat'><parameter type='java.lang.String' name='template'/></constructor><method name='applyPattern'><parameter type='java.lang.String' name='template'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='double' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='long' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.Object[]' name='getFormats'/><method return='double[]' name='getLimits'/><method return='double' static='true' name='nextDouble' final='true'><parameter type='double' name='value'/></method><method return='double' static='true' name='nextDouble'><parameter type='double' name='value'/><parameter type='boolean' name='increment'/></method><method return='java.lang.Number' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method return='double' static='true' name='previousDouble' final='true'><parameter type='double' name='value'/></method><method name='setChoices'><parameter type='double[]' name='limits'/><parameter type='java.lang.String[]' name='formats'/></method><method return='java.lang.String' name='toPattern'/></class><class extends='java.lang.Object' name='CollationElementIterator' final='true'><method return='int' name='getMaxExpansion'><parameter type='int' name='order'/></method><method return='int' name='getOffset'/><method return='int' name='next'/><method return='int' name='previous'/><method return='int' static='true' name='primaryOrder' final='true'><parameter type='int' name='order'/></method><method name='reset'/><method return='short' static='true' name='secondaryOrder' final='true'><parameter type='int' name='order'/></method><method name='setOffset'><parameter type='int' name='newOffset'/></method><method name='setText'><parameter type='java.text.CharacterIterator' name='source'/></method><method name='setText'><parameter type='java.lang.String' name='source'/></method><method return='short' static='true' name='tertiaryOrder' final='true'><parameter type='int' name='order'/></method></class><class extends='java.lang.Object' name='CollationKey' final='true'><constructor visibility='protected' type='java.text.CollationKey' name='CollationKey' api_added='9'><parameter type='java.lang.String' name='source'/></constructor><method return='int' name='compareTo'><parameter type='java.text.CollationKey' name='value'/></method><method return='java.lang.String' name='getSourceString'/><method return='byte[]' name='toByteArray'/></class><class extends='java.lang.Object' abstract='true' name='Collator'><constructor visibility='protected' type='java.text.Collator' name='Collator'/><method return='java.lang.Object' name='clone'/><method return='int' name='compare'><parameter type='java.lang.Object' name='object1'/><parameter type='java.lang.Object' name='object2'/></method><method return='int' abstract='true' name='compare'><parameter type='java.lang.String' name='string1'/><parameter type='java.lang.String' name='string2'/></method><method return='boolean' name='equals'><parameter type='java.lang.String' name='string1'/><parameter type='java.lang.String' name='string2'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales'/><method return='java.text.CollationKey' abstract='true' name='getCollationKey'><parameter type='java.lang.String' name='string'/></method><method return='int' name='getDecomposition'/><method return='java.text.Collator' static='true' name='getInstance'/><method return='java.text.Collator' static='true' name='getInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='int' name='getStrength'/><method return='int' abstract='true' name='hashCode'/><method name='setDecomposition'><parameter type='int' name='value'/></method><method name='setStrength'><parameter type='int' name='value'/></method></class><class extends='java.text.Format' abstract='true' name='DateFormat'><constructor visibility='protected' type='java.text.DateFormat' name='DateFormat'/><method return='java.lang.StringBuffer' name='format' final='true'><parameter type='java.lang.Object' name='object'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.String' name='format' final='true'><parameter type='java.util.Date' name='date'/></method><method return='java.lang.StringBuffer' abstract='true' name='format'><parameter type='java.util.Date' name='date'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales'/><method return='java.util.Calendar' name='getCalendar'/><method return='java.text.DateFormat' static='true' name='getDateInstance' final='true'/><method return='java.text.DateFormat' static='true' name='getDateInstance' final='true'><parameter type='int' name='style'/></method><method return='java.text.DateFormat' static='true' name='getDateInstance' final='true'><parameter type='int' name='style'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.text.DateFormat' static='true' name='getDateTimeInstance' final='true'/><method return='java.text.DateFormat' static='true' name='getDateTimeInstance' final='true'><parameter type='int' name='dateStyle'/><parameter type='int' name='timeStyle'/></method><method return='java.text.DateFormat' static='true' name='getDateTimeInstance' final='true'><parameter type='int' name='dateStyle'/><parameter type='int' name='timeStyle'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.text.DateFormat' static='true' name='getInstance' final='true'/><method return='java.text.NumberFormat' name='getNumberFormat'/><method return='java.text.DateFormat' static='true' name='getTimeInstance' final='true'/><method return='java.text.DateFormat' static='true' name='getTimeInstance' final='true'><parameter type='int' name='style'/></method><method return='java.text.DateFormat' static='true' name='getTimeInstance' final='true'><parameter type='int' name='style'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.TimeZone' name='getTimeZone'/><method return='boolean' name='isLenient'/><method return='java.util.Date' name='parse'><parameter type='java.lang.String' name='string'/><exception type='java.text.ParseException' name='ParseException'/></method><method return='java.util.Date' abstract='true' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method return='java.lang.Object' name='parseObject'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method name='setCalendar'><parameter type='java.util.Calendar' name='cal'/></method><method name='setLenient'><parameter type='boolean' name='value'/></method><method name='setNumberFormat'><parameter type='java.text.NumberFormat' name='format'/></method><method name='setTimeZone'><parameter type='java.util.TimeZone' name='timezone'/></method></class><class extends='java.text.Format.Field' static='true' name='DateFormat.Field'><constructor visibility='protected' type='java.text.DateFormat.Field' name='DateFormat.Field'><parameter type='java.lang.String' name='fieldName'/><parameter type='int' name='calendarField'/></constructor><method return='int' name='getCalendarField'/><method return='java.text.DateFormat.Field' static='true' name='ofCalendarField'><parameter type='int' name='calendarField'/></method></class><class extends='java.lang.Object' name='DateFormatSymbols'><constructor type='java.text.DateFormatSymbols' name='DateFormatSymbols'/><constructor type='java.text.DateFormatSymbols' name='DateFormatSymbols'><parameter type='java.util.Locale' name='locale'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.lang.String[]' name='getAmPmStrings'/><method return='java.lang.String[]' name='getEras'/><method return='java.lang.String' name='getLocalPatternChars'/><method return='java.lang.String[]' name='getMonths'/><method return='java.lang.String[]' name='getShortMonths'/><method return='java.lang.String[]' name='getShortWeekdays'/><method return='java.lang.String[]' name='getWeekdays'/><method return='java.lang.String[][]' name='getZoneStrings'/><method name='setAmPmStrings'><parameter type='java.lang.String[]' name='data'/></method><method name='setEras'><parameter type='java.lang.String[]' name='data'/></method><method name='setLocalPatternChars'><parameter type='java.lang.String' name='data'/></method><method name='setMonths'><parameter type='java.lang.String[]' name='data'/></method><method name='setShortMonths'><parameter type='java.lang.String[]' name='data'/></method><method name='setShortWeekdays'><parameter type='java.lang.String[]' name='data'/></method><method name='setWeekdays'><parameter type='java.lang.String[]' name='data'/></method><method name='setZoneStrings'><parameter type='java.lang.String[][]' name='data'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales' api_added='9'/><method return='java.text.DateFormatSymbols' static='true' name='getInstance' api_added='9' final='true'/><method return='java.text.DateFormatSymbols' static='true' name='getInstance' api_added='9' final='true'><parameter type='java.util.Locale' name='locale'/></method></class><class extends='java.text.NumberFormat' name='DecimalFormat'><constructor type='java.text.DecimalFormat' name='DecimalFormat'/><constructor type='java.text.DecimalFormat' name='DecimalFormat'><parameter type='java.lang.String' name='pattern'/></constructor><constructor type='java.text.DecimalFormat' name='DecimalFormat'><parameter type='java.lang.String' name='pattern'/><parameter type='java.text.DecimalFormatSymbols' name='value'/></constructor><method name='applyLocalizedPattern'><parameter type='java.lang.String' name='pattern'/></method><method name='applyPattern'><parameter type='java.lang.String' name='pattern'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='double' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='position'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='long' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='position'/></method><method return='java.lang.StringBuffer' name='format' final='true'><parameter type='java.lang.Object' name='number'/><parameter type='java.lang.StringBuffer' name='toAppendTo'/><parameter type='java.text.FieldPosition' name='pos'/></method><method return='java.text.DecimalFormatSymbols' name='getDecimalFormatSymbols'/><method return='int' name='getGroupingSize'/><method return='int' name='getMultiplier'/><method return='java.lang.String' name='getNegativePrefix'/><method return='java.lang.String' name='getNegativeSuffix'/><method return='java.lang.String' name='getPositivePrefix'/><method return='java.lang.String' name='getPositiveSuffix'/><method return='boolean' name='isDecimalSeparatorAlwaysShown'/><method return='boolean' name='isParseBigDecimal'/><method return='java.lang.Number' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method name='setDecimalFormatSymbols'><parameter type='java.text.DecimalFormatSymbols' name='value'/></method><method name='setDecimalSeparatorAlwaysShown'><parameter type='boolean' name='value'/></method><method name='setGroupingSize'><parameter type='int' name='value'/></method><method name='setMultiplier'><parameter type='int' name='value'/></method><method name='setNegativePrefix'><parameter type='java.lang.String' name='value'/></method><method name='setNegativeSuffix'><parameter type='java.lang.String' name='value'/></method><method name='setParseBigDecimal'><parameter type='boolean' name='newValue'/></method><method name='setPositivePrefix'><parameter type='java.lang.String' name='value'/></method><method name='setPositiveSuffix'><parameter type='java.lang.String' name='value'/></method><method return='java.lang.String' name='toLocalizedPattern'/><method return='java.lang.String' name='toPattern'/></class><class extends='java.lang.Object' name='DecimalFormatSymbols' final='true'><constructor type='java.text.DecimalFormatSymbols' name='DecimalFormatSymbols'/><constructor type='java.text.DecimalFormatSymbols' name='DecimalFormatSymbols'><parameter type='java.util.Locale' name='locale'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Currency' name='getCurrency'/><method return='java.lang.String' name='getCurrencySymbol'/><method return='char' name='getDecimalSeparator'/><method return='char' name='getDigit'/><method return='char' name='getGroupingSeparator'/><method return='java.lang.String' name='getInfinity'/><method return='java.lang.String' name='getInternationalCurrencySymbol'/><method return='char' name='getMinusSign'/><method return='char' name='getMonetaryDecimalSeparator'/><method return='java.lang.String' name='getNaN'/><method return='char' name='getPatternSeparator'/><method return='char' name='getPerMill'/><method return='char' name='getPercent'/><method return='char' name='getZeroDigit'/><method name='setCurrency'><parameter type='java.util.Currency' name='currency'/></method><method name='setCurrencySymbol'><parameter type='java.lang.String' name='value'/></method><method name='setDecimalSeparator'><parameter type='char' name='value'/></method><method name='setDigit'><parameter type='char' name='value'/></method><method name='setGroupingSeparator'><parameter type='char' name='value'/></method><method name='setInfinity'><parameter type='java.lang.String' name='value'/></method><method name='setInternationalCurrencySymbol'><parameter type='java.lang.String' name='value'/></method><method name='setMinusSign'><parameter type='char' name='value'/></method><method name='setMonetaryDecimalSeparator'><parameter type='char' name='value'/></method><method name='setNaN'><parameter type='java.lang.String' name='value'/></method><method name='setPatternSeparator'><parameter type='char' name='value'/></method><method name='setPerMill'><parameter type='char' name='value'/></method><method name='setPercent'><parameter type='char' name='value'/></method><method name='setZeroDigit'><parameter type='char' name='value'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales' api_added='9'/><method return='java.lang.String' name='getExponentSeparator' api_added='9'/><method return='java.text.DecimalFormatSymbols' static='true' name='getInstance' api_added='9'/><method return='java.text.DecimalFormatSymbols' static='true' name='getInstance' api_added='9'><parameter type='java.util.Locale' name='locale'/></method><method name='setExponentSeparator' api_added='9'><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='FieldPosition'><constructor type='java.text.FieldPosition' name='FieldPosition'><parameter type='int' name='field'/></constructor><constructor type='java.text.FieldPosition' name='FieldPosition'><parameter type='java.text.Format.Field' name='attribute'/></constructor><constructor type='java.text.FieldPosition' name='FieldPosition'><parameter type='java.text.Format.Field' name='attribute'/><parameter type='int' name='field'/></constructor><method return='int' name='getBeginIndex'/><method return='int' name='getEndIndex'/><method return='int' name='getField'/><method return='java.text.Format.Field' name='getFieldAttribute'/><method name='setBeginIndex'><parameter type='int' name='index'/></method><method name='setEndIndex'><parameter type='int' name='index'/></method></class><class extends='java.lang.Object' abstract='true' name='Format'><constructor type='java.text.Format' name='Format'/><method return='java.lang.Object' name='clone'/><method return='java.lang.String' name='format' final='true'><parameter type='java.lang.Object' name='object'/></method><method return='java.lang.StringBuffer' abstract='true' name='format'><parameter type='java.lang.Object' name='object'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.text.AttributedCharacterIterator' name='formatToCharacterIterator'><parameter type='java.lang.Object' name='object'/></method><method return='java.lang.Object' name='parseObject'><parameter type='java.lang.String' name='string'/><exception type='java.text.ParseException' name='ParseException'/></method><method return='java.lang.Object' abstract='true' name='parseObject'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method></class><class extends='java.text.AttributedCharacterIterator.Attribute' static='true' name='Format.Field'><constructor visibility='protected' type='java.text.Format.Field' name='Format.Field'><parameter type='java.lang.String' name='fieldName'/></constructor></class><class extends='java.text.Format' name='MessageFormat'><constructor type='java.text.MessageFormat' name='MessageFormat'><parameter type='java.lang.String' name='template'/><parameter type='java.util.Locale' name='locale'/></constructor><constructor type='java.text.MessageFormat' name='MessageFormat'><parameter type='java.lang.String' name='template'/></constructor><method name='applyPattern'><parameter type='java.lang.String' name='template'/></method><method return='java.lang.StringBuffer' name='format' final='true'><parameter type='java.lang.Object[]' name='objects'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.StringBuffer' name='format' final='true'><parameter type='java.lang.Object' name='object'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.String' static='true' name='format'><parameter type='java.lang.String' name='template'/><parameter type='java.lang.Object...' name='objects'/></method><method return='java.text.Format[]' name='getFormats'/><method return='java.text.Format[]' name='getFormatsByArgumentIndex'/><method return='java.util.Locale' name='getLocale'/><method return='java.lang.Object[]' name='parse'><parameter type='java.lang.String' name='string'/><exception type='java.text.ParseException' name='ParseException'/></method><method return='java.lang.Object[]' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method return='java.lang.Object' name='parseObject'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method name='setFormat'><parameter type='int' name='offset'/><parameter type='java.text.Format' name='format'/></method><method name='setFormatByArgumentIndex'><parameter type='int' name='argIndex'/><parameter type='java.text.Format' name='format'/></method><method name='setFormats'><parameter type='java.text.Format[]' name='formats'/></method><method name='setFormatsByArgumentIndex'><parameter type='java.text.Format[]' name='formats'/></method><method name='setLocale'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='toPattern'/></class><class extends='java.text.Format.Field' static='true' name='MessageFormat.Field'><constructor visibility='protected' type='java.text.MessageFormat.Field' name='MessageFormat.Field'><parameter type='java.lang.String' name='fieldName'/></constructor></class><class extends='java.text.Format' abstract='true' name='NumberFormat'><constructor type='java.text.NumberFormat' name='NumberFormat'/><method return='java.lang.String' name='format' final='true'><parameter type='double' name='value'/></method><method return='java.lang.StringBuffer' abstract='true' name='format'><parameter type='double' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.String' name='format' final='true'><parameter type='long' name='value'/></method><method return='java.lang.StringBuffer' abstract='true' name='format'><parameter type='long' name='value'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='java.lang.Object' name='object'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.util.Locale[]' static='true' name='getAvailableLocales'/><method return='java.util.Currency' name='getCurrency'/><method return='java.text.NumberFormat' static='true' name='getCurrencyInstance' final='true'/><method return='java.text.NumberFormat' static='true' name='getCurrencyInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='java.text.NumberFormat' static='true' name='getInstance' final='true'/><method return='java.text.NumberFormat' static='true' name='getInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='java.text.NumberFormat' static='true' name='getIntegerInstance' final='true'/><method return='java.text.NumberFormat' static='true' name='getIntegerInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='int' name='getMaximumFractionDigits'/><method return='int' name='getMaximumIntegerDigits'/><method return='int' name='getMinimumFractionDigits'/><method return='int' name='getMinimumIntegerDigits'/><method return='java.text.NumberFormat' static='true' name='getNumberInstance' final='true'/><method return='java.text.NumberFormat' static='true' name='getNumberInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='java.text.NumberFormat' static='true' name='getPercentInstance' final='true'/><method return='java.text.NumberFormat' static='true' name='getPercentInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='boolean' name='isGroupingUsed'/><method return='boolean' name='isParseIntegerOnly'/><method return='java.lang.Number' name='parse'><parameter type='java.lang.String' name='string'/><exception type='java.text.ParseException' name='ParseException'/></method><method return='java.lang.Number' abstract='true' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method return='java.lang.Object' name='parseObject' final='true'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method name='setCurrency'><parameter type='java.util.Currency' name='currency'/></method><method name='setGroupingUsed'><parameter type='boolean' name='value'/></method><method name='setMaximumFractionDigits'><parameter type='int' name='value'/></method><method name='setMaximumIntegerDigits'><parameter type='int' name='value'/></method><method name='setMinimumFractionDigits'><parameter type='int' name='value'/></method><method name='setMinimumIntegerDigits'><parameter type='int' name='value'/></method><method name='setParseIntegerOnly'><parameter type='boolean' name='value'/></method><method return='java.math.RoundingMode' name='getRoundingMode' api_added='9'/><method name='setRoundingMode' api_added='9'><parameter type='java.math.RoundingMode' name='roundingMode'/></method></class><class extends='java.text.Format.Field' static='true' name='NumberFormat.Field'><constructor visibility='protected' type='java.text.NumberFormat.Field' name='NumberFormat.Field'><parameter type='java.lang.String' name='fieldName'/></constructor></class><class extends='java.lang.Exception' name='ParseException'><constructor type='java.text.ParseException' name='ParseException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='int' name='location'/></constructor><method return='int' name='getErrorOffset'/></class><class extends='java.lang.Object' name='ParsePosition'><constructor type='java.text.ParsePosition' name='ParsePosition'><parameter type='int' name='index'/></constructor><method return='int' name='getErrorIndex'/><method return='int' name='getIndex'/><method name='setErrorIndex'><parameter type='int' name='index'/></method><method name='setIndex'><parameter type='int' name='index'/></method></class><class extends='java.text.Collator' name='RuleBasedCollator'><constructor type='java.text.RuleBasedCollator' name='RuleBasedCollator'><parameter type='java.lang.String' name='rules'/><exception type='java.text.ParseException' name='ParseException'/></constructor><method return='int' name='compare'><parameter type='java.lang.String' name='source'/><parameter type='java.lang.String' name='target'/></method><method return='java.text.CollationElementIterator' name='getCollationElementIterator'><parameter type='java.text.CharacterIterator' name='source'/></method><method return='java.text.CollationElementIterator' name='getCollationElementIterator'><parameter type='java.lang.String' name='source'/></method><method return='java.text.CollationKey' name='getCollationKey'><parameter type='java.lang.String' name='source'/></method><method return='java.lang.String' name='getRules'/><method return='int' name='hashCode'/></class><class extends='java.text.DateFormat' name='SimpleDateFormat'><constructor type='java.text.SimpleDateFormat' name='SimpleDateFormat'/><constructor type='java.text.SimpleDateFormat' name='SimpleDateFormat'><parameter type='java.lang.String' name='pattern'/></constructor><constructor type='java.text.SimpleDateFormat' name='SimpleDateFormat'><parameter type='java.lang.String' name='template'/><parameter type='java.text.DateFormatSymbols' name='value'/></constructor><constructor type='java.text.SimpleDateFormat' name='SimpleDateFormat'><parameter type='java.lang.String' name='template'/><parameter type='java.util.Locale' name='locale'/></constructor><method name='applyLocalizedPattern'><parameter type='java.lang.String' name='template'/></method><method name='applyPattern'><parameter type='java.lang.String' name='template'/></method><method return='java.lang.StringBuffer' name='format'><parameter type='java.util.Date' name='date'/><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.text.FieldPosition' name='field'/></method><method return='java.util.Date' name='get2DigitYearStart'/><method return='java.text.DateFormatSymbols' name='getDateFormatSymbols'/><method return='java.util.Date' name='parse'><parameter type='java.lang.String' name='string'/><parameter type='java.text.ParsePosition' name='position'/></method><method name='set2DigitYearStart'><parameter type='java.util.Date' name='date'/></method><method name='setDateFormatSymbols'><parameter type='java.text.DateFormatSymbols' name='value'/></method><method return='java.lang.String' name='toLocalizedPattern'/><method return='java.lang.String' name='toPattern'/></class><class extends='java.lang.Object' name='StringCharacterIterator' final='true'><constructor type='java.text.StringCharacterIterator' name='StringCharacterIterator'><parameter type='java.lang.String' name='value'/></constructor><constructor type='java.text.StringCharacterIterator' name='StringCharacterIterator'><parameter type='java.lang.String' name='value'/><parameter type='int' name='location'/></constructor><constructor type='java.text.StringCharacterIterator' name='StringCharacterIterator'><parameter type='java.lang.String' name='value'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='location'/></constructor><method return='java.lang.Object' name='clone'/><method return='char' name='current'/><method return='char' name='first'/><method return='int' name='getBeginIndex'/><method return='int' name='getEndIndex'/><method return='int' name='getIndex'/><method return='char' name='last'/><method return='char' name='next'/><method return='char' name='previous'/><method return='char' name='setIndex'><parameter type='int' name='location'/></method><method name='setText'><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='Normalizer' api_added='9' final='true'><method return='boolean' static='true' name='isNormalized' api_added='9'><parameter type='java.lang.CharSequence' name='src'/><parameter type='java.text.Normalizer.Form' name='form'/></method><method return='java.lang.String' static='true' name='normalize' api_added='9'><parameter type='java.lang.CharSequence' name='src'/><parameter type='java.text.Normalizer.Form' name='form'/></method></class><class extends='java.lang.Enum' static='true' name='Normalizer.Form' api_added='9' final='true'><method return='java.text.Normalizer.Form' static='true' name='valueOf' api_added='9'><parameter type='java.lang.String' name='name'/></method><method return='java.text.Normalizer.Form[]' static='true' name='values' api_added='9' final='true'/></class><interface abstract='true' name='AttributedCharacterIterator'><method return='java.util.Set&lt;java.text.AttributedCharacterIterator.Attribute&gt;' abstract='true' name='getAllAttributeKeys'/><method return='java.lang.Object' abstract='true' name='getAttribute'><parameter type='java.text.AttributedCharacterIterator.Attribute' name='attribute'/></method><method return='java.util.Map&lt;java.text.AttributedCharacterIterator.Attribute, java.lang.Object&gt;' abstract='true' name='getAttributes'/><method return='int' abstract='true' name='getRunLimit'/><method return='int' abstract='true' name='getRunLimit'><parameter type='java.text.AttributedCharacterIterator.Attribute' name='attribute'/></method><method return='int' abstract='true' name='getRunLimit'><parameter type='java.util.Set&lt;? extends java.text.AttributedCharacterIterator.Attribute&gt;' name='attributes'/></method><method return='int' abstract='true' name='getRunStart'/><method return='int' abstract='true' name='getRunStart'><parameter type='java.text.AttributedCharacterIterator.Attribute' name='attribute'/></method><method return='int' abstract='true' name='getRunStart'><parameter type='java.util.Set&lt;? extends java.text.AttributedCharacterIterator.Attribute&gt;' name='attributes'/></method></interface><interface abstract='true' name='CharacterIterator'><method return='java.lang.Object' abstract='true' name='clone'/><method return='char' abstract='true' name='current'/><method return='char' abstract='true' name='first'/><method return='int' abstract='true' name='getBeginIndex'/><method return='int' abstract='true' name='getEndIndex'/><method return='int' abstract='true' name='getIndex'/><method return='char' abstract='true' name='last'/><method return='char' abstract='true' name='next'/><method return='char' abstract='true' name='previous'/><method return='char' abstract='true' name='setIndex'><parameter type='int' name='location'/></method></interface></package><package name='java.util'><class extends='java.lang.Object' abstract='true' name='AbstractCollection'><constructor visibility='protected' type='java.util.AbstractCollection' name='AbstractCollection'/><method return='boolean' name='add'><parameter type='E' name='object'/></method><method return='boolean' name='addAll'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method name='clear'/><method return='boolean' name='contains'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' name='containsAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' name='isEmpty'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator'/><method return='boolean' name='remove'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' name='removeAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' name='retainAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='int' abstract='true' name='size'/><method return='java.lang.Object[]' name='toArray'/><method return='T[]' name='toArray'><parameter type='T[]' name='contents'/></method></class><class extends='java.util.AbstractCollection' abstract='true' name='AbstractList'><constructor visibility='protected' type='java.util.AbstractList' name='AbstractList'/><method name='add'><parameter type='int' name='location'/><parameter type='E' name='object'/></method><method return='boolean' name='addAll'><parameter type='int' name='location'/><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method return='E' abstract='true' name='get'><parameter type='int' name='location'/></method><method return='int' name='indexOf'><parameter type='java.lang.Object' name='object'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='int' name='lastIndexOf'><parameter type='java.lang.Object' name='object'/></method><method return='java.util.ListIterator&lt;E&gt;' name='listIterator'/><method return='java.util.ListIterator&lt;E&gt;' name='listIterator'><parameter type='int' name='location'/></method><method return='E' name='remove'><parameter type='int' name='location'/></method><method visibility='protected' name='removeRange'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='E' name='set'><parameter type='int' name='location'/><parameter type='E' name='object'/></method><method return='java.util.List&lt;E&gt;' name='subList'><parameter type='int' name='start'/><parameter type='int' name='end'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractMap'><constructor visibility='protected' type='java.util.AbstractMap' name='AbstractMap'/><method name='clear'/><method return='boolean' name='containsKey'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' name='containsValue'><parameter type='java.lang.Object' name='value'/></method><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' abstract='true' name='entrySet'/><method return='V' name='get'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' name='isEmpty'/><method return='java.util.Set&lt;K&gt;' name='keySet'/><method return='V' name='put'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method api_removed='14' name='putAll'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></method><method return='V' name='remove'><parameter type='java.lang.Object' name='key'/></method><method return='int' name='size'/><method return='java.util.Collection&lt;V&gt;' name='values'/><method name='putAll' api_added='14'><parameter type='java.util.Map&lt;? extends K' name='arg0'/><parameter type='? extends V&gt;' name='arg1'/></method></class><class extends='java.util.AbstractCollection' abstract='true' name='AbstractQueue'><constructor visibility='protected' type='java.util.AbstractQueue' name='AbstractQueue'/><method return='E' name='element'/><method return='E' name='remove'/></class><class extends='java.util.AbstractList' abstract='true' name='AbstractSequentialList'><constructor visibility='protected' type='java.util.AbstractSequentialList' name='AbstractSequentialList'/><method return='E' name='get'><parameter type='int' name='location'/></method><method return='java.util.ListIterator&lt;E&gt;' abstract='true' name='listIterator'><parameter type='int' name='location'/></method></class><class extends='java.util.AbstractCollection' abstract='true' name='AbstractSet'><constructor visibility='protected' type='java.util.AbstractSet' name='AbstractSet'/></class><class extends='java.util.AbstractList' name='ArrayList'><constructor type='java.util.ArrayList' name='ArrayList'/><constructor type='java.util.ArrayList' name='ArrayList'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.ArrayList' name='ArrayList'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor><method return='java.lang.Object' name='clone'/><method name='ensureCapacity'><parameter type='int' name='minimumCapacity'/></method><method return='E' name='get'><parameter type='int' name='location'/></method><method return='int' name='size'/><method name='trimToSize'/></class><class extends='java.lang.Object' name='Arrays'><method return='java.util.List&lt;T&gt;' static='true' name='asList'><parameter type='T...' name='array'/></method><method return='int' static='true' name='binarySearch'><parameter type='byte[]' name='array'/><parameter type='byte' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='char[]' name='array'/><parameter type='char' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='double[]' name='array'/><parameter type='double' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='float[]' name='array'/><parameter type='float' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='int[]' name='array'/><parameter type='int' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='long[]' name='array'/><parameter type='long' name='value'/></method><method return='int' static='true' name='binarySearch'><parameter type='java.lang.Object[]' name='array'/><parameter type='java.lang.Object' name='object'/></method><method return='int' static='true' name='binarySearch'><parameter type='T[]' name='array'/><parameter type='T' name='object'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method return='int' static='true' name='binarySearch'><parameter type='short[]' name='array'/><parameter type='short' name='value'/></method><method return='boolean' static='true' name='deepEquals'><parameter type='java.lang.Object[]' name='array1'/><parameter type='java.lang.Object[]' name='array2'/></method><method return='int' static='true' name='deepHashCode'><parameter type='java.lang.Object[]' name='array'/></method><method return='java.lang.String' static='true' name='deepToString'><parameter type='java.lang.Object[]' name='array'/></method><method return='boolean' static='true' name='equals'><parameter type='byte[]' name='array1'/><parameter type='byte[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='short[]' name='array1'/><parameter type='short[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='char[]' name='array1'/><parameter type='char[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='int[]' name='array1'/><parameter type='int[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='long[]' name='array1'/><parameter type='long[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='float[]' name='array1'/><parameter type='float[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='double[]' name='array1'/><parameter type='double[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='boolean[]' name='array1'/><parameter type='boolean[]' name='array2'/></method><method return='boolean' static='true' name='equals'><parameter type='java.lang.Object[]' name='array1'/><parameter type='java.lang.Object[]' name='array2'/></method><method static='true' name='fill'><parameter type='byte[]' name='array'/><parameter type='byte' name='value'/></method><method static='true' name='fill'><parameter type='byte[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='byte' name='value'/></method><method static='true' name='fill'><parameter type='short[]' name='array'/><parameter type='short' name='value'/></method><method static='true' name='fill'><parameter type='short[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='short' name='value'/></method><method static='true' name='fill'><parameter type='char[]' name='array'/><parameter type='char' name='value'/></method><method static='true' name='fill'><parameter type='char[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='char' name='value'/></method><method static='true' name='fill'><parameter type='int[]' name='array'/><parameter type='int' name='value'/></method><method static='true' name='fill'><parameter type='int[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='int' name='value'/></method><method static='true' name='fill'><parameter type='long[]' name='array'/><parameter type='long' name='value'/></method><method static='true' name='fill'><parameter type='long[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='long' name='value'/></method><method static='true' name='fill'><parameter type='float[]' name='array'/><parameter type='float' name='value'/></method><method static='true' name='fill'><parameter type='float[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='float' name='value'/></method><method static='true' name='fill'><parameter type='double[]' name='array'/><parameter type='double' name='value'/></method><method static='true' name='fill'><parameter type='double[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='double' name='value'/></method><method static='true' name='fill'><parameter type='boolean[]' name='array'/><parameter type='boolean' name='value'/></method><method static='true' name='fill'><parameter type='boolean[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='boolean' name='value'/></method><method static='true' name='fill'><parameter type='java.lang.Object[]' name='array'/><parameter type='java.lang.Object' name='value'/></method><method static='true' name='fill'><parameter type='java.lang.Object[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.Object' name='value'/></method><method return='int' static='true' name='hashCode'><parameter type='boolean[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='int[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='short[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='char[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='byte[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='long[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='float[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='double[]' name='array'/></method><method return='int' static='true' name='hashCode'><parameter type='java.lang.Object[]' name='array'/></method><method static='true' name='sort'><parameter type='byte[]' name='array'/></method><method static='true' name='sort'><parameter type='byte[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='char[]' name='array'/></method><method static='true' name='sort'><parameter type='char[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='double[]' name='array'/></method><method static='true' name='sort'><parameter type='double[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='float[]' name='array'/></method><method static='true' name='sort'><parameter type='float[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='int[]' name='array'/></method><method static='true' name='sort'><parameter type='int[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='long[]' name='array'/></method><method static='true' name='sort'><parameter type='long[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='java.lang.Object[]' name='array'/></method><method static='true' name='sort'><parameter type='java.lang.Object[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method static='true' name='sort'><parameter type='T[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method static='true' name='sort'><parameter type='T[]' name='array'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method static='true' name='sort'><parameter type='short[]' name='array'/></method><method static='true' name='sort'><parameter type='short[]' name='array'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='boolean[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='byte[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='char[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='double[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='float[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='int[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='long[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='short[]' name='array'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='java.lang.Object[]' name='array'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='byte[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='byte' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='char[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='char' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='double[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='double' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='float[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='float' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='int[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='int' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='long[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='long' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='java.lang.Object[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='java.lang.Object' name='value'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='T[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='T' name='value'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method return='int' static='true' name='binarySearch' api_added='9'><parameter type='short[]' name='array'/><parameter type='int' name='startIndex'/><parameter type='int' name='endIndex'/><parameter type='short' name='value'/></method><method return='boolean[]' static='true' name='copyOf' api_added='9'><parameter type='boolean[]' name='original'/><parameter type='int' name='newLength'/></method><method return='byte[]' static='true' name='copyOf' api_added='9'><parameter type='byte[]' name='original'/><parameter type='int' name='newLength'/></method><method return='char[]' static='true' name='copyOf' api_added='9'><parameter type='char[]' name='original'/><parameter type='int' name='newLength'/></method><method return='double[]' static='true' name='copyOf' api_added='9'><parameter type='double[]' name='original'/><parameter type='int' name='newLength'/></method><method return='float[]' static='true' name='copyOf' api_added='9'><parameter type='float[]' name='original'/><parameter type='int' name='newLength'/></method><method return='int[]' static='true' name='copyOf' api_added='9'><parameter type='int[]' name='original'/><parameter type='int' name='newLength'/></method><method return='long[]' static='true' name='copyOf' api_added='9'><parameter type='long[]' name='original'/><parameter type='int' name='newLength'/></method><method return='short[]' static='true' name='copyOf' api_added='9'><parameter type='short[]' name='original'/><parameter type='int' name='newLength'/></method><method return='T[]' static='true' name='copyOf' api_added='9'><parameter type='T[]' name='original'/><parameter type='int' name='newLength'/></method><method return='T[]' static='true' name='copyOf' api_added='9'><parameter type='U[]' name='original'/><parameter type='int' name='newLength'/><parameter type='java.lang.Class&lt;? extends T[]&gt;' name='newType'/></method><method return='boolean[]' static='true' name='copyOfRange' api_added='9'><parameter type='boolean[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='byte[]' static='true' name='copyOfRange' api_added='9'><parameter type='byte[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='char[]' static='true' name='copyOfRange' api_added='9'><parameter type='char[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='double[]' static='true' name='copyOfRange' api_added='9'><parameter type='double[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='float[]' static='true' name='copyOfRange' api_added='9'><parameter type='float[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int[]' static='true' name='copyOfRange' api_added='9'><parameter type='int[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='long[]' static='true' name='copyOfRange' api_added='9'><parameter type='long[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='short[]' static='true' name='copyOfRange' api_added='9'><parameter type='short[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='T[]' static='true' name='copyOfRange' api_added='9'><parameter type='T[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='T[]' static='true' name='copyOfRange' api_added='9'><parameter type='U[]' name='original'/><parameter type='int' name='start'/><parameter type='int' name='end'/><parameter type='java.lang.Class&lt;? extends T[]&gt;' name='newType'/></method></class><class extends='java.lang.Object' name='BitSet'><constructor type='java.util.BitSet' name='BitSet'/><constructor type='java.util.BitSet' name='BitSet'><parameter type='int' name='nbits'/></constructor><method name='and'><parameter type='java.util.BitSet' name='bs'/></method><method name='andNot'><parameter type='java.util.BitSet' name='bs'/></method><method return='int' name='cardinality'/><method name='clear'/><method name='clear'><parameter type='int' name='pos'/></method><method name='clear'><parameter type='int' name='pos1'/><parameter type='int' name='pos2'/></method><method return='java.lang.Object' name='clone'/><method name='flip'><parameter type='int' name='pos'/></method><method name='flip'><parameter type='int' name='pos1'/><parameter type='int' name='pos2'/></method><method return='boolean' name='get'><parameter type='int' name='pos'/></method><method return='java.util.BitSet' name='get'><parameter type='int' name='pos1'/><parameter type='int' name='pos2'/></method><method return='boolean' name='intersects'><parameter type='java.util.BitSet' name='bs'/></method><method return='boolean' name='isEmpty'/><method return='int' name='length'/><method return='int' name='nextClearBit'><parameter type='int' name='pos'/></method><method return='int' name='nextSetBit'><parameter type='int' name='pos'/></method><method name='or'><parameter type='java.util.BitSet' name='bs'/></method><method name='set'><parameter type='int' name='pos'/></method><method name='set'><parameter type='int' name='pos'/><parameter type='boolean' name='val'/></method><method name='set'><parameter type='int' name='pos1'/><parameter type='int' name='pos2'/></method><method name='set'><parameter type='int' name='pos1'/><parameter type='int' name='pos2'/><parameter type='boolean' name='val'/></method><method return='int' name='size'/><method name='xor'><parameter type='java.util.BitSet' name='bs'/></method></class><class extends='java.lang.Object' abstract='true' name='Calendar'><constructor visibility='protected' type='java.util.Calendar' name='Calendar'/><constructor visibility='protected' type='java.util.Calendar' name='Calendar'><parameter type='java.util.TimeZone' name='timezone'/><parameter type='java.util.Locale' name='locale'/></constructor><method abstract='true' name='add'><parameter type='int' name='field'/><parameter type='int' name='value'/></method><method return='boolean' name='after'><parameter type='java.lang.Object' name='calendar'/></method><method return='boolean' name='before'><parameter type='java.lang.Object' name='calendar'/></method><method name='clear' final='true'/><method name='clear' final='true'><parameter type='int' name='field'/></method><method return='java.lang.Object' name='clone'/><method return='int' name='compareTo'><parameter type='java.util.Calendar' name='anotherCalendar'/></method><method visibility='protected' name='complete'/><method visibility='protected' abstract='true' name='computeFields'/><method visibility='protected' abstract='true' name='computeTime'/><method return='int' name='get'><parameter type='int' name='field'/></method><method return='int' name='getActualMaximum'><parameter type='int' name='field'/></method><method return='int' name='getActualMinimum'><parameter type='int' name='field'/></method><method return='java.util.Locale[]' static='true' synchronized='true' name='getAvailableLocales'/><method return='int' name='getFirstDayOfWeek'/><method return='int' abstract='true' name='getGreatestMinimum'><parameter type='int' name='field'/></method><method return='java.util.Calendar' static='true' synchronized='true' name='getInstance'/><method return='java.util.Calendar' static='true' synchronized='true' name='getInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.Calendar' static='true' synchronized='true' name='getInstance'><parameter type='java.util.TimeZone' name='timezone'/></method><method return='java.util.Calendar' static='true' synchronized='true' name='getInstance'><parameter type='java.util.TimeZone' name='timezone'/><parameter type='java.util.Locale' name='locale'/></method><method return='int' abstract='true' name='getLeastMaximum'><parameter type='int' name='field'/></method><method return='int' abstract='true' name='getMaximum'><parameter type='int' name='field'/></method><method return='int' name='getMinimalDaysInFirstWeek'/><method return='int' abstract='true' name='getMinimum'><parameter type='int' name='field'/></method><method return='java.util.Date' name='getTime' final='true'/><method return='long' name='getTimeInMillis'/><method return='java.util.TimeZone' name='getTimeZone'/><method visibility='protected' return='int' name='internalGet' final='true'><parameter type='int' name='field'/></method><method return='boolean' name='isLenient'/><method return='boolean' name='isSet' final='true'><parameter type='int' name='field'/></method><method name='roll'><parameter type='int' name='field'/><parameter type='int' name='value'/></method><method abstract='true' name='roll'><parameter type='int' name='field'/><parameter type='boolean' name='increment'/></method><method name='set'><parameter type='int' name='field'/><parameter type='int' name='value'/></method><method name='set' final='true'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/></method><method name='set' final='true'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/></method><method name='set' final='true'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hourOfDay'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></method><method name='setFirstDayOfWeek'><parameter type='int' name='value'/></method><method name='setLenient'><parameter type='boolean' name='value'/></method><method name='setMinimalDaysInFirstWeek'><parameter type='int' name='value'/></method><method name='setTime' final='true'><parameter type='java.util.Date' name='date'/></method><method name='setTimeInMillis'><parameter type='long' name='milliseconds'/></method><method name='setTimeZone'><parameter type='java.util.TimeZone' name='timezone'/></method><method return='java.lang.String' name='getDisplayName' api_added='9'><parameter type='int' name='field'/><parameter type='int' name='style'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.Map&lt;java.lang.String, java.lang.Integer&gt;' name='getDisplayNames' api_added='9'><parameter type='int' name='field'/><parameter type='int' name='style'/><parameter type='java.util.Locale' name='locale'/></method></class><class extends='java.lang.Object' name='Collections'><method return='boolean' static='true' name='addAll'><parameter type='java.util.Collection&lt;? super T&gt;' name='c'/><parameter type='T...' name='a'/></method><method return='int' static='true' name='binarySearch'><parameter type='java.util.List&lt;? extends java.lang.Comparable&lt;? super T&gt;&gt;' name='list'/><parameter type='T' name='object'/></method><method return='int' static='true' name='binarySearch'><parameter type='java.util.List&lt;? extends T&gt;' name='list'/><parameter type='T' name='object'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method return='java.util.Collection&lt;E&gt;' static='true' name='checkedCollection'><parameter type='java.util.Collection&lt;E&gt;' name='c'/><parameter type='java.lang.Class&lt;E&gt;' name='type'/></method><method return='java.util.List&lt;E&gt;' static='true' name='checkedList'><parameter type='java.util.List&lt;E&gt;' name='list'/><parameter type='java.lang.Class&lt;E&gt;' name='type'/></method><method return='java.util.Map&lt;K, V&gt;' api_removed='14' static='true' name='checkedMap'><parameter type='java.util.Map&lt;K, V&gt;' name='m'/><parameter type='java.lang.Class&lt;K&gt;' name='keyType'/><parameter type='java.lang.Class&lt;V&gt;' name='valueType'/></method><method return='java.util.Set&lt;E&gt;' static='true' name='checkedSet'><parameter type='java.util.Set&lt;E&gt;' name='s'/><parameter type='java.lang.Class&lt;E&gt;' name='type'/></method><method return='java.util.SortedMap&lt;K, V&gt;' api_removed='14' static='true' name='checkedSortedMap'><parameter type='java.util.SortedMap&lt;K, V&gt;' name='m'/><parameter type='java.lang.Class&lt;K&gt;' name='keyType'/><parameter type='java.lang.Class&lt;V&gt;' name='valueType'/></method><method return='java.util.SortedSet&lt;E&gt;' static='true' name='checkedSortedSet'><parameter type='java.util.SortedSet&lt;E&gt;' name='s'/><parameter type='java.lang.Class&lt;E&gt;' name='type'/></method><method static='true' name='copy'><parameter type='java.util.List&lt;? super T&gt;' name='destination'/><parameter type='java.util.List&lt;? extends T&gt;' name='source'/></method><method return='boolean' static='true' name='disjoint'><parameter type='java.util.Collection&lt;?&gt;' name='c1'/><parameter type='java.util.Collection&lt;?&gt;' name='c2'/></method><method return='java.util.List&lt;T&gt;' static='true' name='emptyList' final='true'/><method return='java.util.Map&lt;K, V&gt;' static='true' name='emptyMap' final='true'/><method return='java.util.Set&lt;T&gt;' static='true' name='emptySet' final='true'/><method return='java.util.Enumeration&lt;T&gt;' static='true' name='enumeration'><parameter type='java.util.Collection&lt;T&gt;' name='collection'/></method><method static='true' name='fill'><parameter type='java.util.List&lt;? super T&gt;' name='list'/><parameter type='T' name='object'/></method><method return='int' static='true' name='frequency'><parameter type='java.util.Collection&lt;?&gt;' name='c'/><parameter type='java.lang.Object' name='o'/></method><method return='int' static='true' name='indexOfSubList'><parameter type='java.util.List&lt;?&gt;' name='list'/><parameter type='java.util.List&lt;?&gt;' name='sublist'/></method><method return='int' static='true' name='lastIndexOfSubList'><parameter type='java.util.List&lt;?&gt;' name='list'/><parameter type='java.util.List&lt;?&gt;' name='sublist'/></method><method return='java.util.ArrayList&lt;T&gt;' static='true' name='list'><parameter type='java.util.Enumeration&lt;T&gt;' name='enumeration'/></method><method return='T' static='true' name='max'><parameter type='java.util.Collection&lt;? extends T&gt;' name='collection'/></method><method return='T' static='true' name='max'><parameter type='java.util.Collection&lt;? extends T&gt;' name='collection'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method return='T' static='true' name='min'><parameter type='java.util.Collection&lt;? extends T&gt;' name='collection'/></method><method return='T' static='true' name='min'><parameter type='java.util.Collection&lt;? extends T&gt;' name='collection'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method return='java.util.List&lt;T&gt;' static='true' name='nCopies'><parameter type='int' name='length'/><parameter type='T' name='object'/></method><method return='boolean' static='true' name='replaceAll'><parameter type='java.util.List&lt;T&gt;' name='list'/><parameter type='T' name='obj'/><parameter type='T' name='obj2'/></method><method static='true' name='reverse'><parameter type='java.util.List&lt;?&gt;' name='list'/></method><method return='java.util.Comparator&lt;T&gt;' static='true' name='reverseOrder'/><method return='java.util.Comparator&lt;T&gt;' static='true' name='reverseOrder'><parameter type='java.util.Comparator&lt;T&gt;' name='c'/></method><method static='true' name='rotate'><parameter type='java.util.List&lt;?&gt;' name='lst'/><parameter type='int' name='dist'/></method><method static='true' name='shuffle'><parameter type='java.util.List&lt;?&gt;' name='list'/></method><method static='true' name='shuffle'><parameter type='java.util.List&lt;?&gt;' name='list'/><parameter type='java.util.Random' name='random'/></method><method return='java.util.Set&lt;E&gt;' static='true' name='singleton'><parameter type='E' name='object'/></method><method return='java.util.List&lt;E&gt;' static='true' name='singletonList'><parameter type='E' name='object'/></method><method return='java.util.Map&lt;K, V&gt;' static='true' name='singletonMap'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method static='true' name='sort'><parameter type='java.util.List&lt;T&gt;' name='list'/></method><method static='true' name='sort'><parameter type='java.util.List&lt;T&gt;' name='list'/><parameter type='java.util.Comparator&lt;? super T&gt;' name='comparator'/></method><method static='true' name='swap'><parameter type='java.util.List&lt;?&gt;' name='list'/><parameter type='int' name='index1'/><parameter type='int' name='index2'/></method><method return='java.util.Collection&lt;T&gt;' static='true' name='synchronizedCollection'><parameter type='java.util.Collection&lt;T&gt;' name='collection'/></method><method return='java.util.List&lt;T&gt;' static='true' name='synchronizedList'><parameter type='java.util.List&lt;T&gt;' name='list'/></method><method return='java.util.Map&lt;K, V&gt;' api_removed='14' static='true' name='synchronizedMap'><parameter type='java.util.Map&lt;K, V&gt;' name='map'/></method><method return='java.util.Set&lt;E&gt;' static='true' name='synchronizedSet'><parameter type='java.util.Set&lt;E&gt;' name='set'/></method><method return='java.util.SortedMap&lt;K, V&gt;' api_removed='14' static='true' name='synchronizedSortedMap'><parameter type='java.util.SortedMap&lt;K, V&gt;' name='map'/></method><method return='java.util.SortedSet&lt;E&gt;' static='true' name='synchronizedSortedSet'><parameter type='java.util.SortedSet&lt;E&gt;' name='set'/></method><method return='java.util.Collection&lt;E&gt;' static='true' name='unmodifiableCollection'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method return='java.util.List&lt;E&gt;' static='true' name='unmodifiableList'><parameter type='java.util.List&lt;? extends E&gt;' name='list'/></method><method return='java.util.Map&lt;K, V&gt;' api_removed='14' static='true' name='unmodifiableMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></method><method return='java.util.Set&lt;E&gt;' static='true' name='unmodifiableSet'><parameter type='java.util.Set&lt;? extends E&gt;' name='set'/></method><method return='java.util.SortedMap&lt;K, V&gt;' api_removed='14' static='true' name='unmodifiableSortedMap'><parameter type='java.util.SortedMap&lt;K, ? extends V&gt;' name='map'/></method><method return='java.util.SortedSet&lt;E&gt;' static='true' name='unmodifiableSortedSet'><parameter type='java.util.SortedSet&lt;E&gt;' name='set'/></method><method return='java.util.Queue&lt;T&gt;' static='true' name='asLifoQueue' api_added='9'><parameter type='java.util.Deque&lt;T&gt;' name='deque'/></method><method return='java.util.Set&lt;E&gt;' api_removed='14' static='true' name='newSetFromMap' api_added='9'><parameter type='java.util.Map&lt;E, java.lang.Boolean&gt;' name='map'/></method><method return='java.util.Map&lt;K, V&gt;' static='true' name='checkedMap' api_added='14'><parameter type='java.util.Map&lt;K' name='arg0'/><parameter type='V&gt;' name='arg1'/><parameter type='java.lang.Class&lt;K&gt;' name='arg2'/><parameter type='java.lang.Class&lt;V&gt;' name='arg3'/></method><method return='java.util.SortedMap&lt;K, V&gt;' static='true' name='checkedSortedMap' api_added='14'><parameter type='java.util.SortedMap&lt;K' name='arg0'/><parameter type='V&gt;' name='arg1'/><parameter type='java.lang.Class&lt;K&gt;' name='arg2'/><parameter type='java.lang.Class&lt;V&gt;' name='arg3'/></method><method return='java.util.Set&lt;E&gt;' static='true' name='newSetFromMap' api_added='14'><parameter type='java.util.Map&lt;E' name='arg0'/><parameter type='java.lang.Boolean&gt;' name='arg1'/></method><method return='java.util.Map&lt;K, V&gt;' static='true' name='synchronizedMap' api_added='14'><parameter type='java.util.Map&lt;K' name='arg0'/><parameter type='V&gt;' name='arg1'/></method><method return='java.util.SortedMap&lt;K, V&gt;' static='true' name='synchronizedSortedMap' api_added='14'><parameter type='java.util.SortedMap&lt;K' name='arg0'/><parameter type='V&gt;' name='arg1'/></method><method return='java.util.Map&lt;K, V&gt;' static='true' name='unmodifiableMap' api_added='14'><parameter type='java.util.Map&lt;? extends K' name='arg0'/><parameter type='? extends V&gt;' name='arg1'/></method><method return='java.util.SortedMap&lt;K, V&gt;' static='true' name='unmodifiableSortedMap' api_added='14'><parameter type='java.util.SortedMap&lt;K' name='arg0'/><parameter type='? extends V&gt;' name='arg1'/></method></class><class extends='java.lang.RuntimeException' name='ConcurrentModificationException'><constructor type='java.util.ConcurrentModificationException' name='ConcurrentModificationException'/><constructor type='java.util.ConcurrentModificationException' name='ConcurrentModificationException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Currency' final='true'><method return='java.lang.String' name='getCurrencyCode'/><method return='int' name='getDefaultFractionDigits'/><method return='java.util.Currency' static='true' name='getInstance'><parameter type='java.lang.String' name='currencyCode'/></method><method return='java.util.Currency' static='true' name='getInstance'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getSymbol'/><method return='java.lang.String' name='getSymbol'><parameter type='java.util.Locale' name='locale'/></method></class><class extends='java.lang.Object' name='Date'><constructor type='java.util.Date' name='Date'/><constructor deprecated='1' type='java.util.Date' name='Date'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/></constructor><constructor deprecated='1' type='java.util.Date' name='Date'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/></constructor><constructor deprecated='1' type='java.util.Date' name='Date'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></constructor><constructor type='java.util.Date' name='Date'><parameter type='long' name='milliseconds'/></constructor><constructor deprecated='1' type='java.util.Date' name='Date'><parameter type='java.lang.String' name='string'/></constructor><constructor type='java.util.deprecated Date' name='deprecated Date' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='java.util.deprecated Date' name='deprecated Date' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='java.util.deprecated Date' name='deprecated Date' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='java.util.deprecated Date' name='deprecated Date' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><method deprecated='1' return='long' static='true' name='UTC'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></method><method return='boolean' name='after'><parameter type='java.util.Date' name='date'/></method><method return='boolean' name='before'><parameter type='java.util.Date' name='date'/></method><method return='java.lang.Object' name='clone'/><method return='int' name='compareTo'><parameter type='java.util.Date' name='date'/></method><method deprecated='1' return='int' name='getDate'/><method deprecated='1' return='int' name='getDay'/><method deprecated='1' return='int' name='getHours'/><method deprecated='1' return='int' name='getMinutes'/><method deprecated='1' return='int' name='getMonth'/><method deprecated='1' return='int' name='getSeconds'/><method return='long' name='getTime'/><method deprecated='1' return='int' name='getTimezoneOffset'/><method deprecated='1' return='int' name='getYear'/><method deprecated='1' return='long' static='true' name='parse'><parameter type='java.lang.String' name='string'/></method><method deprecated='1' name='setDate'><parameter type='int' name='day'/></method><method deprecated='1' name='setHours'><parameter type='int' name='hour'/></method><method deprecated='1' name='setMinutes'><parameter type='int' name='minute'/></method><method deprecated='1' name='setMonth'><parameter type='int' name='month'/></method><method deprecated='1' name='setSeconds'><parameter type='int' name='second'/></method><method name='setTime'><parameter type='long' name='milliseconds'/></method><method deprecated='1' name='setYear'><parameter type='int' name='year'/></method><method deprecated='1' return='java.lang.String' name='toGMTString'/><method deprecated='1' return='java.lang.String' name='toLocaleString'/></class><class extends='java.lang.Object' abstract='true' name='Dictionary'><constructor type='java.util.Dictionary' name='Dictionary'/><method return='java.util.Enumeration&lt;V&gt;' abstract='true' name='elements'/><method return='V' abstract='true' name='get'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' abstract='true' name='isEmpty'/><method return='java.util.Enumeration&lt;K&gt;' abstract='true' name='keys'/><method return='V' abstract='true' name='put'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='V' abstract='true' name='remove'><parameter type='java.lang.Object' name='key'/></method><method return='int' abstract='true' name='size'/></class><class extends='java.util.IllegalFormatException' name='DuplicateFormatFlagsException'><constructor type='java.util.DuplicateFormatFlagsException' name='DuplicateFormatFlagsException'><parameter type='java.lang.String' name='f'/></constructor><method return='java.lang.String' name='getFlags'/></class><class extends='java.lang.RuntimeException' name='EmptyStackException'><constructor type='java.util.EmptyStackException' name='EmptyStackException'/></class><class extends='java.util.AbstractMap' name='EnumMap'><constructor type='java.util.EnumMap' name='EnumMap'><parameter type='java.lang.Class&lt;K&gt;' name='keyType'/></constructor><constructor type='java.util.EnumMap' name='EnumMap'><parameter type='java.util.EnumMap&lt;K, ? extends V&gt;' name='map'/></constructor><constructor type='java.util.EnumMap' name='EnumMap'><parameter type='java.util.Map&lt;K, ? extends V&gt;' name='map'/></constructor><method return='java.util.EnumMap&lt;K, V&gt;' name='clone'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/></class><class extends='java.util.AbstractSet' abstract='true' name='EnumSet'><method return='java.util.EnumSet&lt;E&gt;' static='true' name='allOf'><parameter type='java.lang.Class&lt;E&gt;' name='elementType'/></method><method return='java.util.EnumSet&lt;E&gt;' name='clone'/><method return='java.util.EnumSet&lt;E&gt;' static='true' name='complementOf'><parameter type='java.util.EnumSet&lt;E&gt;' name='s'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='copyOf'><parameter type='java.util.EnumSet&lt;E&gt;' name='s'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='copyOf'><parameter type='java.util.Collection&lt;E&gt;' name='c'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='noneOf'><parameter type='java.lang.Class&lt;E&gt;' name='elementType'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='e'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='e1'/><parameter type='E' name='e2'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='e1'/><parameter type='E' name='e2'/><parameter type='E' name='e3'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='e1'/><parameter type='E' name='e2'/><parameter type='E' name='e3'/><parameter type='E' name='e4'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='e1'/><parameter type='E' name='e2'/><parameter type='E' name='e3'/><parameter type='E' name='e4'/><parameter type='E' name='e5'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='of'><parameter type='E' name='start'/><parameter type='E...' name='others'/></method><method return='java.util.EnumSet&lt;E&gt;' static='true' name='range'><parameter type='E' name='start'/><parameter type='E' name='end'/></method></class><class extends='java.lang.Object' abstract='true' name='EventListenerProxy'><constructor type='java.util.EventListenerProxy' name='EventListenerProxy'><parameter type='java.util.EventListener' name='listener'/></constructor><method return='java.util.EventListener' name='getListener'/></class><class extends='java.lang.Object' name='EventObject'><constructor type='java.util.EventObject' name='EventObject'><parameter type='java.lang.Object' name='source'/></constructor><method return='java.lang.Object' name='getSource'/></class><class extends='java.util.IllegalFormatException' name='FormatFlagsConversionMismatchException'><constructor type='java.util.FormatFlagsConversionMismatchException' name='FormatFlagsConversionMismatchException'><parameter type='java.lang.String' name='f'/><parameter type='char' name='c'/></constructor><method return='char' name='getConversion'/><method return='java.lang.String' name='getFlags'/></class><class extends='java.lang.Object' name='FormattableFlags'/><class extends='java.lang.Object' name='Formatter' final='true'><constructor type='java.util.Formatter' name='Formatter'/><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.lang.Appendable' name='a'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.util.Locale' name='l'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.lang.Appendable' name='a'/><parameter type='java.util.Locale' name='l'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.lang.String' name='fileName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.lang.String' name='fileName'/><parameter type='java.lang.String' name='csn'/><parameter type='java.util.Locale' name='l'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.File' name='file'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='csn'/><parameter type='java.util.Locale' name='l'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.OutputStream' name='os'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.lang.String' name='csn'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.lang.String' name='csn'/><parameter type='java.util.Locale' name='l'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='java.util.Formatter' name='Formatter'><parameter type='java.io.PrintStream' name='ps'/></constructor><method name='close'/><method name='flush'/><method return='java.util.Formatter' name='format'><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.util.Formatter' name='format'><parameter type='java.util.Locale' name='l'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.Object...' name='args'/></method><method return='java.io.IOException' name='ioException'/><method return='java.util.Locale' name='locale'/><method return='java.lang.Appendable' name='out'/></class><class extends='java.lang.Enum' static='true' name='Formatter.BigDecimalLayoutForm' final='true'><method return='java.util.Formatter.BigDecimalLayoutForm' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.util.Formatter.BigDecimalLayoutForm[]' static='true' name='values' final='true'/></class><class extends='java.lang.IllegalStateException' name='FormatterClosedException'><constructor type='java.util.FormatterClosedException' name='FormatterClosedException'/></class><class extends='java.util.Calendar' name='GregorianCalendar'><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'/><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/></constructor><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/></constructor><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></constructor><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='java.util.Locale' name='locale'/></constructor><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='java.util.TimeZone' name='timezone'/></constructor><constructor type='java.util.GregorianCalendar' name='GregorianCalendar'><parameter type='java.util.TimeZone' name='timezone'/><parameter type='java.util.Locale' name='locale'/></constructor><method name='add'><parameter type='int' name='field'/><parameter type='int' name='value'/></method><method visibility='protected' name='computeFields'/><method visibility='protected' name='computeTime'/><method return='int' name='getGreatestMinimum'><parameter type='int' name='field'/></method><method return='java.util.Date' name='getGregorianChange' final='true'/><method return='int' name='getLeastMaximum'><parameter type='int' name='field'/></method><method return='int' name='getMaximum'><parameter type='int' name='field'/></method><method return='int' name='getMinimum'><parameter type='int' name='field'/></method><method return='boolean' name='isLeapYear'><parameter type='int' name='year'/></method><method name='roll'><parameter type='int' name='field'/><parameter type='boolean' name='increment'/></method><method name='setGregorianChange'><parameter type='java.util.Date' name='date'/></method></class><class extends='java.util.AbstractMap' name='HashMap'><constructor type='java.util.HashMap' name='HashMap'/><constructor type='java.util.HashMap' name='HashMap'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.HashMap' name='HashMap'><parameter type='int' name='capacity'/><parameter type='float' name='loadFactor'/></constructor><constructor type='java.util.HashMap' name='HashMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/></class><class extends='java.util.AbstractSet' name='HashSet'><constructor type='java.util.HashSet' name='HashSet'/><constructor type='java.util.HashSet' name='HashSet'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.HashSet' name='HashSet'><parameter type='int' name='capacity'/><parameter type='float' name='loadFactor'/></constructor><constructor type='java.util.HashSet' name='HashSet'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='int' name='size'/></class><class extends='java.util.Dictionary' name='Hashtable'><constructor type='java.util.Hashtable' name='Hashtable'/><constructor type='java.util.Hashtable' name='Hashtable'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.Hashtable' name='Hashtable'><parameter type='int' name='capacity'/><parameter type='float' name='loadFactor'/></constructor><constructor type='java.util.Hashtable' name='Hashtable'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></constructor><method synchronized='true' name='clear'/><method return='java.lang.Object' synchronized='true' name='clone'/><method return='boolean' synchronized='true' name='contains'><parameter type='java.lang.Object' name='value'/></method><method return='boolean' synchronized='true' name='containsKey'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' name='containsValue'><parameter type='java.lang.Object' name='value'/></method><method return='java.util.Enumeration&lt;V&gt;' synchronized='true' name='elements'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/><method return='V' synchronized='true' name='get'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' synchronized='true' name='isEmpty'/><method return='java.util.Set&lt;K&gt;' name='keySet'/><method return='java.util.Enumeration&lt;K&gt;' synchronized='true' name='keys'/><method return='V' synchronized='true' name='put'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method api_removed='14' synchronized='true' name='putAll'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></method><method visibility='protected' name='rehash'/><method return='V' synchronized='true' name='remove'><parameter type='java.lang.Object' name='key'/></method><method return='int' synchronized='true' name='size'/><method return='java.util.Collection&lt;V&gt;' name='values'/><method synchronized='true' name='putAll' api_added='14'><parameter type='java.util.Map&lt;? extends K' name='arg0'/><parameter type='? extends V&gt;' name='arg1'/></method></class><class extends='java.util.AbstractMap' name='IdentityHashMap'><constructor type='java.util.IdentityHashMap' name='IdentityHashMap'/><constructor type='java.util.IdentityHashMap' name='IdentityHashMap'><parameter type='int' name='maxSize'/></constructor><constructor type='java.util.IdentityHashMap' name='IdentityHashMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/></class><class extends='java.util.IllegalFormatException' name='IllegalFormatCodePointException'><constructor type='java.util.IllegalFormatCodePointException' name='IllegalFormatCodePointException'><parameter type='int' name='c'/></constructor><method return='int' name='getCodePoint'/></class><class extends='java.util.IllegalFormatException' name='IllegalFormatConversionException'><constructor type='java.util.IllegalFormatConversionException' name='IllegalFormatConversionException'><parameter type='char' name='c'/><parameter type='java.lang.Class&lt;?&gt;' name='arg'/></constructor><method return='java.lang.Class&lt;?&gt;' name='getArgumentClass'/><method return='char' name='getConversion'/></class><class extends='java.lang.IllegalArgumentException' name='IllegalFormatException'/><class extends='java.util.IllegalFormatException' name='IllegalFormatFlagsException'><constructor type='java.util.IllegalFormatFlagsException' name='IllegalFormatFlagsException'><parameter type='java.lang.String' name='f'/></constructor><method return='java.lang.String' name='getFlags'/></class><class extends='java.util.IllegalFormatException' name='IllegalFormatPrecisionException'><constructor type='java.util.IllegalFormatPrecisionException' name='IllegalFormatPrecisionException'><parameter type='int' name='p'/></constructor><method return='int' name='getPrecision'/></class><class extends='java.util.IllegalFormatException' name='IllegalFormatWidthException'><constructor type='java.util.IllegalFormatWidthException' name='IllegalFormatWidthException'><parameter type='int' name='w'/></constructor><method return='int' name='getWidth'/></class><class extends='java.util.NoSuchElementException' name='InputMismatchException'><constructor type='java.util.InputMismatchException' name='InputMismatchException'/><constructor type='java.util.InputMismatchException' name='InputMismatchException'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='java.io.IOException' name='InvalidPropertiesFormatException'><constructor type='java.util.InvalidPropertiesFormatException' name='InvalidPropertiesFormatException'><parameter type='java.lang.String' name='m'/></constructor><constructor type='java.util.InvalidPropertiesFormatException' name='InvalidPropertiesFormatException'><parameter type='java.lang.Throwable' name='c'/></constructor></class><class extends='java.util.HashMap' name='LinkedHashMap'><constructor type='java.util.LinkedHashMap' name='LinkedHashMap'/><constructor type='java.util.LinkedHashMap' name='LinkedHashMap'><parameter type='int' name='s'/></constructor><constructor type='java.util.LinkedHashMap' name='LinkedHashMap'><parameter type='int' name='s'/><parameter type='float' name='lf'/></constructor><constructor type='java.util.LinkedHashMap' name='LinkedHashMap'><parameter type='int' name='s'/><parameter type='float' name='lf'/><parameter type='boolean' name='order'/></constructor><constructor type='java.util.LinkedHashMap' name='LinkedHashMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='m'/></constructor><method visibility='protected' return='boolean' api_removed='14' name='removeEldestEntry'><parameter type='java.util.Map.Entry&lt;K, V&gt;' name='eldest'/></method><method visibility='protected' return='boolean' name='removeEldestEntry' api_added='14'><parameter type='java.util.Map.Entry&lt;K' name='arg0'/><parameter type='V&gt;' name='arg1'/></method></class><class extends='java.util.HashSet' name='LinkedHashSet'><constructor type='java.util.LinkedHashSet' name='LinkedHashSet'/><constructor type='java.util.LinkedHashSet' name='LinkedHashSet'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.LinkedHashSet' name='LinkedHashSet'><parameter type='int' name='capacity'/><parameter type='float' name='loadFactor'/></constructor><constructor type='java.util.LinkedHashSet' name='LinkedHashSet'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor></class><class extends='java.util.AbstractSequentialList' name='LinkedList'><constructor type='java.util.LinkedList' name='LinkedList'/><constructor type='java.util.LinkedList' name='LinkedList'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor><method name='addFirst'><parameter type='E' name='object'/></method><method name='addLast'><parameter type='E' name='object'/></method><method return='java.lang.Object' name='clone'/><method return='E' name='element'/><method return='E' name='getFirst'/><method return='E' name='getLast'/><method return='java.util.ListIterator&lt;E&gt;' name='listIterator'><parameter type='int' name='location'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='E' name='peek'/><method return='E' name='poll'/><method return='E' name='remove'/><method return='E' name='removeFirst'/><method return='E' name='removeLast'/><method return='int' name='size'/><method return='java.util.Iterator&lt;E&gt;' name='descendingIterator' api_added='9'/><method return='boolean' name='offerFirst' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offerLast' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='peekFirst' api_added='9'/><method return='E' name='peekLast' api_added='9'/><method return='E' name='pollFirst' api_added='9'/><method return='E' name='pollLast' api_added='9'/><method return='E' name='pop' api_added='9'/><method name='push' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='removeFirstOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' name='removeLastOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method></class><class extends='java.util.ResourceBundle' abstract='true' name='ListResourceBundle'><constructor type='java.util.ListResourceBundle' name='ListResourceBundle'/><method visibility='protected' return='java.lang.Object[][]' abstract='true' name='getContents'/><method return='java.util.Enumeration&lt;java.lang.String&gt;' name='getKeys'/><method return='java.lang.Object' name='handleGetObject' final='true'><parameter type='java.lang.String' name='key'/></method></class><class extends='java.lang.Object' name='Locale' final='true'><constructor type='java.util.Locale' name='Locale'><parameter type='java.lang.String' name='language'/></constructor><constructor type='java.util.Locale' name='Locale'><parameter type='java.lang.String' name='language'/><parameter type='java.lang.String' name='country'/></constructor><constructor type='java.util.Locale' name='Locale'><parameter type='java.lang.String' name='language'/><parameter type='java.lang.String' name='country'/><parameter type='java.lang.String' name='variant'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Locale[]' static='true' name='getAvailableLocales'/><method return='java.lang.String' name='getCountry'/><method return='java.util.Locale' static='true' name='getDefault'/><method return='java.lang.String' name='getDisplayCountry' final='true'/><method return='java.lang.String' name='getDisplayCountry'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getDisplayLanguage' final='true'/><method return='java.lang.String' name='getDisplayLanguage'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getDisplayName' final='true'/><method return='java.lang.String' name='getDisplayName'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getDisplayVariant' final='true'/><method return='java.lang.String' name='getDisplayVariant'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getISO3Country'><exception type='java.util.MissingResourceException' name='MissingResourceException'/></method><method return='java.lang.String' name='getISO3Language'><exception type='java.util.MissingResourceException' name='MissingResourceException'/></method><method return='java.lang.String[]' static='true' name='getISOCountries'/><method return='java.lang.String[]' static='true' name='getISOLanguages'/><method return='java.lang.String' name='getLanguage'/><method return='java.lang.String' name='getVariant'/><method static='true' synchronized='true' name='setDefault'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.util.IllegalFormatException' name='MissingFormatArgumentException'><constructor type='java.util.MissingFormatArgumentException' name='MissingFormatArgumentException'><parameter type='java.lang.String' name='s'/></constructor><method return='java.lang.String' name='getFormatSpecifier'/></class><class extends='java.util.IllegalFormatException' name='MissingFormatWidthException'><constructor type='java.util.MissingFormatWidthException' name='MissingFormatWidthException'><parameter type='java.lang.String' name='s'/></constructor><method return='java.lang.String' name='getFormatSpecifier'/></class><class extends='java.lang.RuntimeException' name='MissingResourceException'><constructor type='java.util.MissingResourceException' name='MissingResourceException'><parameter type='java.lang.String' name='detailMessage'/><parameter type='java.lang.String' name='className'/><parameter type='java.lang.String' name='resourceName'/></constructor><method return='java.lang.String' name='getClassName'/><method return='java.lang.String' name='getKey'/></class><class extends='java.lang.RuntimeException' name='NoSuchElementException'><constructor type='java.util.NoSuchElementException' name='NoSuchElementException'/><constructor type='java.util.NoSuchElementException' name='NoSuchElementException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Observable'><constructor type='java.util.Observable' name='Observable'/><method synchronized='true' name='addObserver'><parameter type='java.util.Observer' name='observer'/></method><method visibility='protected' synchronized='true' name='clearChanged'/><method return='int' synchronized='true' name='countObservers'/><method synchronized='true' name='deleteObserver'><parameter type='java.util.Observer' name='observer'/></method><method synchronized='true' name='deleteObservers'/><method return='boolean' synchronized='true' name='hasChanged'/><method name='notifyObservers'/><method name='notifyObservers'><parameter type='java.lang.Object' name='data'/></method><method visibility='protected' synchronized='true' name='setChanged'/></class><class extends='java.util.AbstractQueue' name='PriorityQueue'><constructor type='java.util.PriorityQueue' name='PriorityQueue'/><constructor type='java.util.PriorityQueue' name='PriorityQueue'><parameter type='int' name='initialCapacity'/></constructor><constructor type='java.util.PriorityQueue' name='PriorityQueue'><parameter type='int' name='initialCapacity'/><parameter type='java.util.Comparator&lt;? super E&gt;' name='comparator'/></constructor><constructor type='java.util.PriorityQueue' name='PriorityQueue'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><constructor type='java.util.PriorityQueue' name='PriorityQueue'><parameter type='java.util.PriorityQueue&lt;? extends E&gt;' name='c'/></constructor><constructor type='java.util.PriorityQueue' name='PriorityQueue'><parameter type='java.util.SortedSet&lt;? extends E&gt;' name='c'/></constructor><method return='java.util.Comparator&lt;? super E&gt;' name='comparator'/><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='E' name='peek'/><method return='E' name='poll'/><method return='int' name='size'/></class><class extends='java.util.Hashtable' name='Properties'><constructor type='java.util.Properties' name='Properties'/><constructor type='java.util.Properties' name='Properties'><parameter type='java.util.Properties' name='properties'/></constructor><method return='java.lang.String' name='getProperty'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='defaultValue'/></method><method name='list'><parameter type='java.io.PrintStream' name='out'/></method><method name='list'><parameter type='java.io.PrintWriter' name='writer'/></method><method synchronized='true' name='load'><parameter type='java.io.InputStream' name='in'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='loadFromXML'><parameter type='java.io.InputStream' name='in'/><exception type='java.io.IOException' name='IOException'/><exception type='java.util.InvalidPropertiesFormatException' name='InvalidPropertiesFormatException'/></method><method return='java.util.Enumeration&lt;?&gt;' name='propertyNames'/><method deprecated='1' name='save'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.lang.String' name='comment'/></method><method return='java.lang.Object' name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method synchronized='true' name='store'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.lang.String' name='comment'/><exception type='java.io.IOException' name='IOException'/></method><method name='storeToXML'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.lang.String' name='comment'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='storeToXML'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.lang.String' name='comment'/><parameter type='java.lang.String' name='encoding'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='load' api_added='9'><parameter type='java.io.Reader' name='in'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='store' api_added='9'><parameter type='java.io.Writer' name='writer'/><parameter type='java.lang.String' name='comment'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='stringPropertyNames' api_added='9'/></class><class extends='java.security.BasicPermission' name='PropertyPermission' final='true'><constructor type='java.util.PropertyPermission' name='PropertyPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.util.ResourceBundle' name='PropertyResourceBundle'><constructor type='java.util.PropertyResourceBundle' name='PropertyResourceBundle'><parameter type='java.io.InputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.util.Enumeration&lt;java.lang.String&gt;' name='getKeys'/><method return='java.lang.Object' name='handleGetObject'><parameter type='java.lang.String' name='key'/></method></class><class extends='java.lang.Object' name='Random'><constructor type='java.util.Random' name='Random'/><constructor type='java.util.Random' name='Random'><parameter type='long' name='seed'/></constructor><method visibility='protected' return='int' synchronized='true' name='next'><parameter type='int' name='bits'/></method><method return='boolean' name='nextBoolean'/><method name='nextBytes'><parameter type='byte[]' name='buf'/></method><method return='double' name='nextDouble'/><method return='float' name='nextFloat'/><method return='double' synchronized='true' name='nextGaussian'/><method return='int' name='nextInt'/><method return='int' name='nextInt'><parameter type='int' name='n'/></method><method return='long' name='nextLong'/><method synchronized='true' name='setSeed'><parameter type='long' name='seed'/></method></class><class extends='java.lang.Object' abstract='true' name='ResourceBundle'><constructor type='java.util.ResourceBundle' name='ResourceBundle'/><method return='java.util.ResourceBundle' static='true' name='getBundle' final='true'><parameter type='java.lang.String' name='bundleName'/><exception type='java.util.MissingResourceException' name='MissingResourceException'/></method><method return='java.util.ResourceBundle' static='true' name='getBundle' final='true'><parameter type='java.lang.String' name='bundleName'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.ResourceBundle' static='true' name='getBundle'><parameter type='java.lang.String' name='bundleName'/><parameter type='java.util.Locale' name='locale'/><parameter type='java.lang.ClassLoader' name='loader'/><exception type='java.util.MissingResourceException' name='MissingResourceException'/></method><method return='java.util.Enumeration&lt;java.lang.String&gt;' abstract='true' name='getKeys'/><method return='java.util.Locale' name='getLocale'/><method return='java.lang.Object' name='getObject' final='true'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' name='getString' final='true'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String[]' name='getStringArray' final='true'><parameter type='java.lang.String' name='key'/></method><method visibility='protected' return='java.lang.Object' abstract='true' name='handleGetObject'><parameter type='java.lang.String' name='key'/></method><method visibility='protected' name='setParent'><parameter type='java.util.ResourceBundle' name='bundle'/></method><method static='true' name='clearCache' api_added='9' final='true'/><method static='true' name='clearCache' api_added='9' final='true'><parameter type='java.lang.ClassLoader' name='loader'/></method><method return='boolean' name='containsKey' api_added='9'><parameter type='java.lang.String' name='key'/></method><method return='java.util.ResourceBundle' static='true' name='getBundle' api_added='9' final='true'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.ResourceBundle.Control' name='control'/></method><method return='java.util.ResourceBundle' static='true' name='getBundle' api_added='9' final='true'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='targetLocale'/><parameter type='java.util.ResourceBundle.Control' name='control'/></method><method return='java.util.ResourceBundle' static='true' name='getBundle' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='targetLocale'/><parameter type='java.lang.ClassLoader' name='loader'/><parameter type='java.util.ResourceBundle.Control' name='control'/></method><method visibility='protected' return='java.util.Set&lt;java.lang.String&gt;' name='handleKeySet' api_added='9'/><method return='java.util.Set&lt;java.lang.String&gt;' name='keySet' api_added='9'/></class><class extends='java.lang.Object' name='Scanner' final='true'><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.io.File' name='src'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.io.File' name='src'/><parameter type='java.lang.String' name='charsetName'/><exception type='java.io.FileNotFoundException' name='FileNotFoundException'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.lang.String' name='src'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.io.InputStream' name='src'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.io.InputStream' name='src'/><parameter type='java.lang.String' name='charsetName'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.lang.Readable' name='src'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.nio.channels.ReadableByteChannel' name='src'/></constructor><constructor type='java.util.Scanner' name='Scanner'><parameter type='java.nio.channels.ReadableByteChannel' name='src'/><parameter type='java.lang.String' name='charsetName'/></constructor><method name='close'/><method return='java.util.regex.Pattern' name='delimiter'/><method return='java.lang.String' name='findInLine'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.lang.String' name='findInLine'><parameter type='java.lang.String' name='pattern'/></method><method return='java.lang.String' name='findWithinHorizon'><parameter type='java.util.regex.Pattern' name='pattern'/><parameter type='int' name='horizon'/></method><method return='java.lang.String' name='findWithinHorizon'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='horizon'/></method><method return='boolean' name='hasNext'/><method return='boolean' name='hasNext'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='boolean' name='hasNext'><parameter type='java.lang.String' name='pattern'/></method><method return='boolean' name='hasNextBigDecimal'/><method return='boolean' name='hasNextBigInteger'/><method return='boolean' name='hasNextBigInteger'><parameter type='int' name='radix'/></method><method return='boolean' name='hasNextBoolean'/><method return='boolean' name='hasNextByte'/><method return='boolean' name='hasNextByte'><parameter type='int' name='radix'/></method><method return='boolean' name='hasNextDouble'/><method return='boolean' name='hasNextFloat'/><method return='boolean' name='hasNextInt'/><method return='boolean' name='hasNextInt'><parameter type='int' name='radix'/></method><method return='boolean' name='hasNextLine'/><method return='boolean' name='hasNextLong'/><method return='boolean' name='hasNextLong'><parameter type='int' name='radix'/></method><method return='boolean' name='hasNextShort'/><method return='boolean' name='hasNextShort'><parameter type='int' name='radix'/></method><method return='java.io.IOException' name='ioException'/><method return='java.util.Locale' name='locale'/><method return='java.util.regex.MatchResult' name='match'/><method return='java.lang.String' name='next'/><method return='java.lang.String' name='next'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.lang.String' name='next'><parameter type='java.lang.String' name='pattern'/></method><method return='java.math.BigDecimal' name='nextBigDecimal'/><method return='java.math.BigInteger' name='nextBigInteger'/><method return='java.math.BigInteger' name='nextBigInteger'><parameter type='int' name='radix'/></method><method return='boolean' name='nextBoolean'/><method return='byte' name='nextByte'/><method return='byte' name='nextByte'><parameter type='int' name='radix'/></method><method return='double' name='nextDouble'/><method return='float' name='nextFloat'/><method return='int' name='nextInt'/><method return='int' name='nextInt'><parameter type='int' name='radix'/></method><method return='java.lang.String' name='nextLine'/><method return='long' name='nextLong'/><method return='long' name='nextLong'><parameter type='int' name='radix'/></method><method return='short' name='nextShort'/><method return='short' name='nextShort'><parameter type='int' name='radix'/></method><method return='int' name='radix'/><method name='remove'/><method return='java.util.Scanner' name='skip'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.util.Scanner' name='skip'><parameter type='java.lang.String' name='pattern'/></method><method return='java.util.Scanner' name='useDelimiter'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.util.Scanner' name='useDelimiter'><parameter type='java.lang.String' name='pattern'/></method><method return='java.util.Scanner' name='useLocale'><parameter type='java.util.Locale' name='l'/></method><method return='java.util.Scanner' name='useRadix'><parameter type='int' name='radix'/></method><method return='java.util.Scanner' name='reset' api_added='9'/></class><class extends='java.util.TimeZone' name='SimpleTimeZone'><constructor type='java.util.SimpleTimeZone' name='SimpleTimeZone'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.util.SimpleTimeZone' name='SimpleTimeZone'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='startMonth'/><parameter type='int' name='startDay'/><parameter type='int' name='startDayOfWeek'/><parameter type='int' name='startTime'/><parameter type='int' name='endMonth'/><parameter type='int' name='endDay'/><parameter type='int' name='endDayOfWeek'/><parameter type='int' name='endTime'/></constructor><constructor type='java.util.SimpleTimeZone' name='SimpleTimeZone'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='startMonth'/><parameter type='int' name='startDay'/><parameter type='int' name='startDayOfWeek'/><parameter type='int' name='startTime'/><parameter type='int' name='endMonth'/><parameter type='int' name='endDay'/><parameter type='int' name='endDayOfWeek'/><parameter type='int' name='endTime'/><parameter type='int' name='daylightSavings'/></constructor><constructor type='java.util.SimpleTimeZone' name='SimpleTimeZone'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='startMonth'/><parameter type='int' name='startDay'/><parameter type='int' name='startDayOfWeek'/><parameter type='int' name='startTime'/><parameter type='int' name='startTimeMode'/><parameter type='int' name='endMonth'/><parameter type='int' name='endDay'/><parameter type='int' name='endDayOfWeek'/><parameter type='int' name='endTime'/><parameter type='int' name='endTimeMode'/><parameter type='int' name='daylightSavings'/></constructor><method return='int' name='getOffset'><parameter type='int' name='era'/><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/></method><method return='int' name='getRawOffset'/><method return='boolean' name='inDaylightTime'><parameter type='java.util.Date' name='time'/></method><method name='setDSTSavings'><parameter type='int' name='milliseconds'/></method><method name='setEndRule'><parameter type='int' name='month'/><parameter type='int' name='dayOfMonth'/><parameter type='int' name='time'/></method><method name='setEndRule'><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/></method><method name='setEndRule'><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/><parameter type='boolean' name='after'/></method><method name='setRawOffset'><parameter type='int' name='offset'/></method><method name='setStartRule'><parameter type='int' name='month'/><parameter type='int' name='dayOfMonth'/><parameter type='int' name='time'/></method><method name='setStartRule'><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/></method><method name='setStartRule'><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/><parameter type='boolean' name='after'/></method><method name='setStartYear'><parameter type='int' name='year'/></method><method return='boolean' name='useDaylightTime'/></class><class extends='java.util.Vector' name='Stack'><constructor type='java.util.Stack' name='Stack'/><method return='boolean' name='empty'/><method return='E' synchronized='true' name='peek'/><method return='E' synchronized='true' name='pop'/><method return='E' synchronized='true' name='push'><parameter type='E' name='object'/></method><method return='int' synchronized='true' name='search'><parameter type='java.lang.Object' name='o'/></method></class><class extends='java.lang.Object' name='StringTokenizer'><constructor type='java.util.StringTokenizer' name='StringTokenizer'><parameter type='java.lang.String' name='string'/></constructor><constructor type='java.util.StringTokenizer' name='StringTokenizer'><parameter type='java.lang.String' name='string'/><parameter type='java.lang.String' name='delimiters'/></constructor><constructor type='java.util.StringTokenizer' name='StringTokenizer'><parameter type='java.lang.String' name='string'/><parameter type='java.lang.String' name='delimiters'/><parameter type='boolean' name='returnDelimiters'/></constructor><method return='int' name='countTokens'/><method return='boolean' name='hasMoreElements'/><method return='boolean' name='hasMoreTokens'/><method return='java.lang.Object' name='nextElement'/><method return='java.lang.String' name='nextToken'/><method return='java.lang.String' name='nextToken'><parameter type='java.lang.String' name='delims'/></method></class><class extends='java.lang.Object' abstract='true' name='TimeZone'><constructor type='java.util.TimeZone' name='TimeZone'/><method return='java.lang.Object' name='clone'/><method return='java.lang.String[]' static='true' synchronized='true' name='getAvailableIDs'/><method return='java.lang.String[]' static='true' synchronized='true' name='getAvailableIDs'><parameter type='int' name='offset'/></method><method return='int' name='getDSTSavings'/><method return='java.util.TimeZone' static='true' synchronized='true' name='getDefault'/><method return='java.lang.String' name='getDisplayName' final='true'/><method return='java.lang.String' name='getDisplayName' final='true'><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getDisplayName' final='true'><parameter type='boolean' name='daylightTime'/><parameter type='int' name='style'/></method><method return='java.lang.String' name='getDisplayName'><parameter type='boolean' name='daylightTime'/><parameter type='int' name='style'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='getID'/><method return='int' name='getOffset'><parameter type='long' name='time'/></method><method return='int' abstract='true' name='getOffset'><parameter type='int' name='era'/><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='dayOfWeek'/><parameter type='int' name='time'/></method><method return='int' abstract='true' name='getRawOffset'/><method return='java.util.TimeZone' static='true' synchronized='true' name='getTimeZone'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='hasSameRules'><parameter type='java.util.TimeZone' name='zone'/></method><method return='boolean' abstract='true' name='inDaylightTime'><parameter type='java.util.Date' name='time'/></method><method static='true' synchronized='true' name='setDefault'><parameter type='java.util.TimeZone' name='timezone'/></method><method name='setID'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='setRawOffset'><parameter type='int' name='offset'/></method><method return='boolean' abstract='true' name='useDaylightTime'/></class><class extends='java.lang.Object' name='Timer'><constructor type='java.util.Timer' name='Timer'><parameter type='boolean' name='isDaemon'/></constructor><constructor type='java.util.Timer' name='Timer'/><constructor type='java.util.Timer' name='Timer'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='isDaemon'/></constructor><constructor type='java.util.Timer' name='Timer'><parameter type='java.lang.String' name='name'/></constructor><method name='cancel'/><method return='int' name='purge'/><method name='schedule'><parameter type='java.util.TimerTask' name='task'/><parameter type='java.util.Date' name='when'/></method><method name='schedule'><parameter type='java.util.TimerTask' name='task'/><parameter type='long' name='delay'/></method><method name='schedule'><parameter type='java.util.TimerTask' name='task'/><parameter type='long' name='delay'/><parameter type='long' name='period'/></method><method name='schedule'><parameter type='java.util.TimerTask' name='task'/><parameter type='java.util.Date' name='when'/><parameter type='long' name='period'/></method><method name='scheduleAtFixedRate'><parameter type='java.util.TimerTask' name='task'/><parameter type='long' name='delay'/><parameter type='long' name='period'/></method><method name='scheduleAtFixedRate'><parameter type='java.util.TimerTask' name='task'/><parameter type='java.util.Date' name='when'/><parameter type='long' name='period'/></method></class><class extends='java.lang.Object' abstract='true' name='TimerTask'><constructor visibility='protected' type='java.util.TimerTask' name='TimerTask'/><method return='boolean' name='cancel'/><method abstract='true' name='run'/><method return='long' name='scheduledExecutionTime'/></class><class extends='java.lang.Exception' name='TooManyListenersException'><constructor type='java.util.TooManyListenersException' name='TooManyListenersException'/><constructor type='java.util.TooManyListenersException' name='TooManyListenersException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.util.AbstractMap' name='TreeMap'><constructor type='java.util.TreeMap' name='TreeMap'/><constructor type='java.util.TreeMap' name='TreeMap'><parameter type='java.util.Comparator&lt;? super K&gt;' name='comparator'/></constructor><constructor type='java.util.TreeMap' name='TreeMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></constructor><constructor type='java.util.TreeMap' name='TreeMap'><parameter type='java.util.SortedMap&lt;K, ? extends V&gt;' name='map'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Comparator&lt;? super K&gt;' name='comparator'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/><method return='K' name='firstKey'/><method return='java.util.SortedMap&lt;K, V&gt;' name='headMap'><parameter type='K' name='endKey'/></method><method return='K' name='lastKey'/><method return='java.util.SortedMap&lt;K, V&gt;' name='subMap'><parameter type='K' name='startKey'/><parameter type='K' name='endKey'/></method><method return='java.util.SortedMap&lt;K, V&gt;' name='tailMap'><parameter type='K' name='startKey'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' name='ceilingEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='ceilingKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableSet&lt;K&gt;' name='descendingKeySet' api_added='9'/><method return='java.util.NavigableMap&lt;K, V&gt;' name='descendingMap' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='firstEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='floorEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='floorKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableMap&lt;K, V&gt;' name='headMap' api_added='9'><parameter type='K' name='to'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' name='higherEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='higherKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' name='lastEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='lowerEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='lowerKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableSet&lt;K&gt;' name='navigableKeySet' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='pollFirstEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='pollLastEntry' api_added='9'/><method return='java.util.NavigableMap&lt;K, V&gt;' name='subMap' api_added='9'><parameter type='K' name='from'/><parameter type='boolean' name='fromInclusive'/><parameter type='K' name='to'/><parameter type='boolean' name='toInclusive'/></method><method return='java.util.NavigableMap&lt;K, V&gt;' name='tailMap' api_added='9'><parameter type='K' name='from'/><parameter type='boolean' name='inclusive'/></method></class><class extends='java.util.AbstractSet' name='TreeSet'><constructor type='java.util.TreeSet' name='TreeSet'/><constructor type='java.util.TreeSet' name='TreeSet'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor><constructor type='java.util.TreeSet' name='TreeSet'><parameter type='java.util.Comparator&lt;? super E&gt;' name='comparator'/></constructor><constructor type='java.util.TreeSet' name='TreeSet'><parameter type='java.util.SortedSet&lt;E&gt;' name='set'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.util.Comparator&lt;? super E&gt;' name='comparator'/><method return='E' name='first'/><method return='java.util.SortedSet&lt;E&gt;' name='headSet'><parameter type='E' name='end'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='E' name='last'/><method return='int' name='size'/><method return='java.util.SortedSet&lt;E&gt;' name='subSet'><parameter type='E' name='start'/><parameter type='E' name='end'/></method><method return='java.util.SortedSet&lt;E&gt;' name='tailSet'><parameter type='E' name='start'/></method><method return='E' name='ceiling' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.Iterator&lt;E&gt;' name='descendingIterator' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' name='descendingSet' api_added='9'/><method return='E' name='floor' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='headSet' api_added='9'><parameter type='E' name='end'/><parameter type='boolean' name='endInclusive'/></method><method return='E' name='higher' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='lower' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='pollFirst' api_added='9'/><method return='E' name='pollLast' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' name='subSet' api_added='9'><parameter type='E' name='start'/><parameter type='boolean' name='startInclusive'/><parameter type='E' name='end'/><parameter type='boolean' name='endInclusive'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='tailSet' api_added='9'><parameter type='E' name='start'/><parameter type='boolean' name='startInclusive'/></method></class><class extends='java.lang.Object' name='UUID' final='true'><constructor type='java.util.UUID' name='UUID'><parameter type='long' name='mostSigBits'/><parameter type='long' name='leastSigBits'/></constructor><method return='int' name='clockSequence'/><method return='int' name='compareTo'><parameter type='java.util.UUID' name='uuid'/></method><method return='java.util.UUID' static='true' name='fromString'><parameter type='java.lang.String' name='uuid'/></method><method return='long' name='getLeastSignificantBits'/><method return='long' name='getMostSignificantBits'/><method return='java.util.UUID' static='true' name='nameUUIDFromBytes'><parameter type='byte[]' name='name'/></method><method return='long' name='node'/><method return='java.util.UUID' static='true' name='randomUUID'/><method return='long' name='timestamp'/><method return='int' name='variant'/><method return='int' name='version'/></class><class extends='java.util.IllegalFormatException' name='UnknownFormatConversionException'><constructor type='java.util.UnknownFormatConversionException' name='UnknownFormatConversionException'><parameter type='java.lang.String' name='s'/></constructor><method return='java.lang.String' name='getConversion'/></class><class extends='java.util.IllegalFormatException' name='UnknownFormatFlagsException'><constructor type='java.util.UnknownFormatFlagsException' name='UnknownFormatFlagsException'><parameter type='java.lang.String' name='f'/></constructor><method return='java.lang.String' name='getFlags'/></class><class extends='java.util.AbstractList' name='Vector'><constructor type='java.util.Vector' name='Vector'/><constructor type='java.util.Vector' name='Vector'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.Vector' name='Vector'><parameter type='int' name='capacity'/><parameter type='int' name='capacityIncrement'/></constructor><constructor type='java.util.Vector' name='Vector'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></constructor><method synchronized='true' name='addElement'><parameter type='E' name='object'/></method><method return='int' synchronized='true' name='capacity'/><method return='java.lang.Object' synchronized='true' name='clone'/><method synchronized='true' name='copyInto'><parameter type='java.lang.Object[]' name='elements'/></method><method return='E' synchronized='true' name='elementAt'><parameter type='int' name='location'/></method><method return='java.util.Enumeration&lt;E&gt;' name='elements'/><method synchronized='true' name='ensureCapacity'><parameter type='int' name='minimumCapacity'/></method><method return='E' synchronized='true' name='firstElement'/><method return='E' synchronized='true' name='get'><parameter type='int' name='location'/></method><method return='int' synchronized='true' name='indexOf'><parameter type='java.lang.Object' name='object'/><parameter type='int' name='location'/></method><method synchronized='true' name='insertElementAt'><parameter type='E' name='object'/><parameter type='int' name='location'/></method><method return='E' synchronized='true' name='lastElement'/><method return='int' synchronized='true' name='lastIndexOf'><parameter type='java.lang.Object' name='object'/><parameter type='int' name='location'/></method><method synchronized='true' name='removeAllElements'/><method return='boolean' synchronized='true' name='removeElement'><parameter type='java.lang.Object' name='object'/></method><method synchronized='true' name='removeElementAt'><parameter type='int' name='location'/></method><method synchronized='true' name='setElementAt'><parameter type='E' name='object'/><parameter type='int' name='location'/></method><method synchronized='true' name='setSize'><parameter type='int' name='length'/></method><method return='int' synchronized='true' name='size'/><method synchronized='true' name='trimToSize'/></class><class extends='java.util.AbstractMap' name='WeakHashMap'><constructor type='java.util.WeakHashMap' name='WeakHashMap'/><constructor type='java.util.WeakHashMap' name='WeakHashMap'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.WeakHashMap' name='WeakHashMap'><parameter type='int' name='capacity'/><parameter type='float' name='loadFactor'/></constructor><constructor type='java.util.WeakHashMap' name='WeakHashMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></constructor><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/></class><class extends='java.lang.Object' static='true' name='AbstractMap.SimpleEntry' api_added='9'><constructor type='java.util.AbstractMap.SimpleEntry' name='AbstractMap.SimpleEntry' api_added='9'><parameter type='K' name='theKey'/><parameter type='V' name='theValue'/></constructor><constructor type='java.util.AbstractMap.SimpleEntry' name='AbstractMap.SimpleEntry' api_added='9'><parameter type='java.util.Map.Entry&lt;? extends K, ? extends V&gt;' name='copyFrom'/></constructor><method return='K' name='getKey' api_added='9'/><method return='V' name='getValue' api_added='9'/><method return='V' name='setValue' api_added='9'><parameter type='V' name='object'/></method></class><class extends='java.lang.Object' static='true' name='AbstractMap.SimpleImmutableEntry' api_added='9'><constructor type='java.util.AbstractMap.SimpleImmutableEntry' name='AbstractMap.SimpleImmutableEntry' api_added='9'><parameter type='K' name='theKey'/><parameter type='V' name='theValue'/></constructor><constructor type='java.util.AbstractMap.SimpleImmutableEntry' name='AbstractMap.SimpleImmutableEntry' api_added='9'><parameter type='java.util.Map.Entry&lt;? extends K, ? extends V&gt;' name='copyFrom'/></constructor><method return='K' name='getKey' api_added='9'/><method return='V' name='getValue' api_added='9'/><method return='V' name='setValue' api_added='9'><parameter type='V' name='object'/></method></class><class extends='java.util.AbstractCollection' name='ArrayDeque' api_added='9'><constructor type='java.util.ArrayDeque' name='ArrayDeque' api_added='9'/><constructor type='java.util.ArrayDeque' name='ArrayDeque' api_added='9'><parameter type='int' name='minSize'/></constructor><constructor type='java.util.ArrayDeque' name='ArrayDeque' api_added='9'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method name='addFirst' api_added='9'><parameter type='E' name='e'/></method><method name='addLast' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.ArrayDeque&lt;E&gt;' name='clone' api_added='9'/><method return='java.util.Iterator&lt;E&gt;' name='descendingIterator' api_added='9'/><method return='E' name='element' api_added='9'/><method return='E' name='getFirst' api_added='9'/><method return='E' name='getLast' api_added='9'/><method return='java.util.Iterator&lt;E&gt;' name='iterator' api_added='9'/><method return='boolean' name='offer' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offerFirst' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offerLast' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='peek' api_added='9'/><method return='E' name='peekFirst' api_added='9'/><method return='E' name='peekLast' api_added='9'/><method return='E' name='poll' api_added='9'/><method return='E' name='pollFirst' api_added='9'/><method return='E' name='pollLast' api_added='9'/><method return='E' name='pop' api_added='9'/><method name='push' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='remove' api_added='9'/><method return='E' name='removeFirst' api_added='9'/><method return='boolean' name='removeFirstOccurrence' api_added='9'><parameter type='java.lang.Object' name='obj'/></method><method return='E' name='removeLast' api_added='9'/><method return='boolean' name='removeLastOccurrence' api_added='9'><parameter type='java.lang.Object' name='obj'/></method><method return='int' name='size' api_added='9'/></class><class extends='java.lang.Object' static='true' name='ResourceBundle.Control' api_added='9'><constructor visibility='protected' type='java.util.ResourceBundle.Control' name='ResourceBundle.Control' api_added='9'/><method return='java.util.List&lt;java.util.Locale&gt;' name='getCandidateLocales' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.ResourceBundle.Control' static='true' name='getControl' api_added='9' final='true'><parameter type='java.util.List&lt;java.lang.String&gt;' name='formats'/></method><method return='java.util.Locale' name='getFallbackLocale' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.util.List&lt;java.lang.String&gt;' name='getFormats' api_added='9'><parameter type='java.lang.String' name='baseName'/></method><method return='java.util.ResourceBundle.Control' static='true' name='getNoFallbackControl' api_added='9' final='true'><parameter type='java.util.List&lt;java.lang.String&gt;' name='formats'/></method><method return='long' name='getTimeToLive' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/></method><method return='boolean' name='needsReload' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.ClassLoader' name='loader'/><parameter type='java.util.ResourceBundle' name='bundle'/><parameter type='long' name='loadTime'/></method><method return='java.util.ResourceBundle' name='newBundle' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/><parameter type='java.lang.String' name='format'/><parameter type='java.lang.ClassLoader' name='loader'/><parameter type='boolean' name='reload'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method><method return='java.lang.String' name='toBundleName' api_added='9'><parameter type='java.lang.String' name='baseName'/><parameter type='java.util.Locale' name='locale'/></method><method return='java.lang.String' name='toResourceName' api_added='9' final='true'><parameter type='java.lang.String' name='bundleName'/><parameter type='java.lang.String' name='suffix'/></method></class><class extends='java.lang.Error' name='ServiceConfigurationError' api_added='9'><constructor type='java.util.ServiceConfigurationError' name='ServiceConfigurationError' api_added='9'><parameter type='java.lang.String' name='message'/></constructor><constructor type='java.util.ServiceConfigurationError' name='ServiceConfigurationError' api_added='9'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='ServiceLoader' api_added='9' final='true'><method return='java.util.Iterator&lt;S&gt;' name='iterator' api_added='9'/><method return='java.util.ServiceLoader&lt;S&gt;' static='true' name='load' api_added='9'><parameter type='java.lang.Class&lt;S&gt;' name='service'/><parameter type='java.lang.ClassLoader' name='classLoader'/></method><method return='java.util.ServiceLoader&lt;S&gt;' static='true' name='load' api_added='9'><parameter type='java.lang.Class&lt;S&gt;' name='service'/></method><method return='java.util.ServiceLoader&lt;S&gt;' static='true' name='loadInstalled' api_added='9'><parameter type='java.lang.Class&lt;S&gt;' name='service'/></method><method name='reload' api_added='9'/></class><interface abstract='true' name='Collection'><method return='boolean' abstract='true' name='add'><parameter type='E' name='object'/></method><method return='boolean' abstract='true' name='addAll'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method abstract='true' name='clear'/><method return='boolean' abstract='true' name='contains'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='containsAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method><method return='int' abstract='true' name='hashCode'/><method return='boolean' abstract='true' name='isEmpty'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator'/><method return='boolean' abstract='true' name='remove'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='removeAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='retainAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='int' abstract='true' name='size'/><method return='java.lang.Object[]' abstract='true' name='toArray'/><method return='T[]' abstract='true' name='toArray'><parameter type='T[]' name='array'/></method></interface><interface abstract='true' name='Comparator'><method return='int' abstract='true' name='compare'><parameter type='T' name='object1'/><parameter type='T' name='object2'/></method><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method></interface><interface abstract='true' name='Enumeration'><method return='boolean' abstract='true' name='hasMoreElements'/><method return='E' abstract='true' name='nextElement'/></interface><interface abstract='true' name='EventListener'/><interface abstract='true' name='Formattable'><method abstract='true' name='formatTo'><parameter type='java.util.Formatter' name='formatter'/><parameter type='int' name='flags'/><parameter type='int' name='width'/><parameter type='int' name='precision'/><exception type='java.util.IllegalFormatException' name='IllegalFormatException'/></method></interface><interface abstract='true' name='Iterator'><method return='boolean' abstract='true' name='hasNext'/><method return='E' abstract='true' name='next'/><method abstract='true' name='remove'/></interface><interface abstract='true' name='List'><method abstract='true' name='add'><parameter type='int' name='location'/><parameter type='E' name='object'/></method><method return='boolean' abstract='true' name='add'><parameter type='E' name='object'/></method><method return='boolean' abstract='true' name='addAll'><parameter type='int' name='location'/><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method return='boolean' abstract='true' name='addAll'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method abstract='true' name='clear'/><method return='boolean' abstract='true' name='contains'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='containsAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method><method return='E' abstract='true' name='get'><parameter type='int' name='location'/></method><method return='int' abstract='true' name='hashCode'/><method return='int' abstract='true' name='indexOf'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='isEmpty'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator'/><method return='int' abstract='true' name='lastIndexOf'><parameter type='java.lang.Object' name='object'/></method><method return='java.util.ListIterator&lt;E&gt;' abstract='true' name='listIterator'/><method return='java.util.ListIterator&lt;E&gt;' abstract='true' name='listIterator'><parameter type='int' name='location'/></method><method return='E' abstract='true' name='remove'><parameter type='int' name='location'/></method><method return='boolean' abstract='true' name='remove'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='removeAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='retainAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='E' abstract='true' name='set'><parameter type='int' name='location'/><parameter type='E' name='object'/></method><method return='int' abstract='true' name='size'/><method return='java.util.List&lt;E&gt;' abstract='true' name='subList'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.Object[]' abstract='true' name='toArray'/><method return='T[]' abstract='true' name='toArray'><parameter type='T[]' name='array'/></method></interface><interface abstract='true' name='ListIterator'><method abstract='true' name='add'><parameter type='E' name='object'/></method><method return='boolean' abstract='true' name='hasNext'/><method return='boolean' abstract='true' name='hasPrevious'/><method return='E' abstract='true' name='next'/><method return='int' abstract='true' name='nextIndex'/><method return='E' abstract='true' name='previous'/><method return='int' abstract='true' name='previousIndex'/><method abstract='true' name='remove'/><method abstract='true' name='set'><parameter type='E' name='object'/></method></interface><interface abstract='true' name='Map'><method abstract='true' name='clear'/><method return='boolean' abstract='true' name='containsKey'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' abstract='true' name='containsValue'><parameter type='java.lang.Object' name='value'/></method><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' abstract='true' name='entrySet'/><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method><method return='V' abstract='true' name='get'><parameter type='java.lang.Object' name='key'/></method><method return='int' abstract='true' name='hashCode'/><method return='boolean' abstract='true' name='isEmpty'/><method return='java.util.Set&lt;K&gt;' abstract='true' name='keySet'/><method return='V' abstract='true' name='put'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method abstract='true' api_removed='14' name='putAll'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='map'/></method><method return='V' abstract='true' name='remove'><parameter type='java.lang.Object' name='key'/></method><method return='int' abstract='true' name='size'/><method return='java.util.Collection&lt;V&gt;' abstract='true' name='values'/><method abstract='true' name='putAll' api_added='14'><parameter type='java.util.Map&lt;? extends K' name='arg0'/><parameter type='? extends V&gt;' name='arg1'/></method></interface><interface abstract='true' static='true' name='Map.Entry'><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method><method return='K' abstract='true' name='getKey'/><method return='V' abstract='true' name='getValue'/><method return='int' abstract='true' name='hashCode'/><method return='V' abstract='true' name='setValue'><parameter type='V' name='object'/></method></interface><interface abstract='true' name='Observer'><method abstract='true' name='update'><parameter type='java.util.Observable' name='observable'/><parameter type='java.lang.Object' name='data'/></method></interface><interface abstract='true' name='Queue'><method return='E' abstract='true' name='element'/><method return='boolean' abstract='true' name='offer'><parameter type='E' name='o'/></method><method return='E' abstract='true' name='peek'/><method return='E' abstract='true' name='poll'/><method return='E' abstract='true' name='remove'/><method return='boolean' abstract='true' name='add' api_added='11'><parameter type='E' name='e'/></method></interface><interface abstract='true' name='RandomAccess'/><interface abstract='true' name='Set'><method return='boolean' abstract='true' name='add'><parameter type='E' name='object'/></method><method return='boolean' abstract='true' name='addAll'><parameter type='java.util.Collection&lt;? extends E&gt;' name='collection'/></method><method abstract='true' name='clear'/><method return='boolean' abstract='true' name='contains'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='containsAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='equals'><parameter type='java.lang.Object' name='object'/></method><method return='int' abstract='true' name='hashCode'/><method return='boolean' abstract='true' name='isEmpty'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator'/><method return='boolean' abstract='true' name='remove'><parameter type='java.lang.Object' name='object'/></method><method return='boolean' abstract='true' name='removeAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='boolean' abstract='true' name='retainAll'><parameter type='java.util.Collection&lt;?&gt;' name='collection'/></method><method return='int' abstract='true' name='size'/><method return='java.lang.Object[]' abstract='true' name='toArray'/><method return='T[]' abstract='true' name='toArray'><parameter type='T[]' name='array'/></method></interface><interface abstract='true' name='SortedMap'><method return='java.util.Comparator&lt;? super K&gt;' abstract='true' name='comparator'/><method return='K' abstract='true' name='firstKey'/><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='headMap'><parameter type='K' name='endKey'/></method><method return='K' abstract='true' name='lastKey'/><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='subMap'><parameter type='K' name='startKey'/><parameter type='K' name='endKey'/></method><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='tailMap'><parameter type='K' name='startKey'/></method></interface><interface abstract='true' name='SortedSet'><method return='java.util.Comparator&lt;? super E&gt;' abstract='true' name='comparator'/><method return='E' abstract='true' name='first'/><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='headSet'><parameter type='E' name='end'/></method><method return='E' abstract='true' name='last'/><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='subSet'><parameter type='E' name='start'/><parameter type='E' name='end'/></method><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='tailSet'><parameter type='E' name='start'/></method></interface><interface abstract='true' name='Deque' api_added='9'><method abstract='true' name='addFirst' api_added='9'><parameter type='E' name='e'/></method><method abstract='true' name='addLast' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='descendingIterator' api_added='9'/><method return='E' abstract='true' name='getFirst' api_added='9'/><method return='E' abstract='true' name='getLast' api_added='9'/><method return='boolean' abstract='true' name='offerFirst' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='offerLast' api_added='9'><parameter type='E' name='e'/></method><method return='E' abstract='true' name='peekFirst' api_added='9'/><method return='E' abstract='true' name='peekLast' api_added='9'/><method return='E' abstract='true' name='pollFirst' api_added='9'/><method return='E' abstract='true' name='pollLast' api_added='9'/><method return='E' abstract='true' name='pop' api_added='9'/><method abstract='true' name='push' api_added='9'><parameter type='E' name='e'/></method><method return='E' abstract='true' name='removeFirst' api_added='9'/><method return='boolean' abstract='true' name='removeFirstOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='E' abstract='true' name='removeLast' api_added='9'/><method return='boolean' abstract='true' name='removeLastOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' abstract='true' name='add' api_added='11'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='contains' api_added='11'><parameter type='java.lang.Object' name='o'/></method><method return='E' abstract='true' name='element' api_added='11'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator' api_added='11'/><method return='boolean' abstract='true' name='offer' api_added='11'><parameter type='E' name='e'/></method><method return='E' abstract='true' name='peek' api_added='11'/><method return='E' abstract='true' name='poll' api_added='11'/><method return='E' abstract='true' name='remove' api_added='11'/><method return='boolean' abstract='true' name='remove' api_added='11'><parameter type='java.lang.Object' name='o'/></method><method return='int' abstract='true' name='size' api_added='11'/></interface><interface abstract='true' name='NavigableMap' api_added='9'><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='ceilingEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' abstract='true' name='ceilingKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableSet&lt;K&gt;' abstract='true' name='descendingKeySet' api_added='9'/><method return='java.util.NavigableMap&lt;K, V&gt;' abstract='true' name='descendingMap' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='firstEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='floorEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' abstract='true' name='floorKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableMap&lt;K, V&gt;' abstract='true' name='headMap' api_added='9'><parameter type='K' name='endKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='higherEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' abstract='true' name='higherKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='lastEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='lowerEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' abstract='true' name='lowerKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableSet&lt;K&gt;' abstract='true' name='navigableKeySet' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='pollFirstEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' abstract='true' name='pollLastEntry' api_added='9'/><method return='java.util.NavigableMap&lt;K, V&gt;' abstract='true' name='subMap' api_added='9'><parameter type='K' name='startKey'/><parameter type='boolean' name='startInclusive'/><parameter type='K' name='endKey'/><parameter type='boolean' name='endInclusive'/></method><method return='java.util.NavigableMap&lt;K, V&gt;' abstract='true' name='tailMap' api_added='9'><parameter type='K' name='startKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='headMap' api_added='11'><parameter type='K' name='toKey'/></method><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='subMap' api_added='11'><parameter type='K' name='fromKey'/><parameter type='K' name='toKey'/></method><method return='java.util.SortedMap&lt;K, V&gt;' abstract='true' name='tailMap' api_added='11'><parameter type='K' name='fromKey'/></method></interface><interface abstract='true' name='NavigableSet' api_added='9'><method return='E' abstract='true' name='ceiling' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='descendingIterator' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' abstract='true' name='descendingSet' api_added='9'/><method return='E' abstract='true' name='floor' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.NavigableSet&lt;E&gt;' abstract='true' name='headSet' api_added='9'><parameter type='E' name='end'/><parameter type='boolean' name='endInclusive'/></method><method return='E' abstract='true' name='higher' api_added='9'><parameter type='E' name='e'/></method><method return='E' abstract='true' name='lower' api_added='9'><parameter type='E' name='e'/></method><method return='E' abstract='true' name='pollFirst' api_added='9'/><method return='E' abstract='true' name='pollLast' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' abstract='true' name='subSet' api_added='9'><parameter type='E' name='start'/><parameter type='boolean' name='startInclusive'/><parameter type='E' name='end'/><parameter type='boolean' name='endInclusive'/></method><method return='java.util.NavigableSet&lt;E&gt;' abstract='true' name='tailSet' api_added='9'><parameter type='E' name='start'/><parameter type='boolean' name='startInclusive'/></method><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='headSet' api_added='11'><parameter type='E' name='toElement'/></method><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator' api_added='11'/><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='subSet' api_added='11'><parameter type='E' name='fromElement'/><parameter type='E' name='toElement'/></method><method return='java.util.SortedSet&lt;E&gt;' abstract='true' name='tailSet' api_added='11'><parameter type='E' name='fromElement'/></method></interface></package><package name='java.util.concurrent'><class extends='java.lang.Object' abstract='true' name='AbstractExecutorService'><constructor type='java.util.concurrent.AbstractExecutorService' name='AbstractExecutorService'/><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' api_removed='9' name='invokeAll'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' api_removed='9' name='invokeAll'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' api_removed='9' name='invokeAny'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' api_removed='9' name='invokeAny'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='java.util.concurrent.Future&lt;?&gt;' name='submit'><parameter type='java.lang.Runnable' name='task'/></method><method return='java.util.concurrent.Future&lt;T&gt;' name='submit'><parameter type='java.lang.Runnable' name='task'/><parameter type='T' name='result'/></method><method return='java.util.concurrent.Future&lt;T&gt;' name='submit'><parameter type='java.util.concurrent.Callable&lt;T&gt;' name='task'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' name='invokeAll' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' name='invokeAll' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' name='invokeAny' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' name='invokeAny' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method visibility='protected' return='java.util.concurrent.RunnableFuture&lt;T&gt;' name='newTaskFor' api_added='9'><parameter type='java.lang.Runnable' name='runnable'/><parameter type='T' name='value'/></method><method visibility='protected' return='java.util.concurrent.RunnableFuture&lt;T&gt;' name='newTaskFor' api_added='9'><parameter type='java.util.concurrent.Callable&lt;T&gt;' name='callable'/></method></class><class extends='java.util.AbstractQueue' name='ArrayBlockingQueue'><constructor type='java.util.concurrent.ArrayBlockingQueue' name='ArrayBlockingQueue'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.concurrent.ArrayBlockingQueue' name='ArrayBlockingQueue'><parameter type='int' name='capacity'/><parameter type='boolean' name='fair'/></constructor><constructor type='java.util.concurrent.ArrayBlockingQueue' name='ArrayBlockingQueue'><parameter type='int' name='capacity'/><parameter type='boolean' name='fair'/><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='peek'/><method return='E' name='poll'/><method return='E' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='put'><parameter type='E' name='o'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' name='remainingCapacity'/><method return='int' name='size'/><method return='E' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.Exception' name='BrokenBarrierException'><constructor type='java.util.concurrent.BrokenBarrierException' name='BrokenBarrierException'/><constructor type='java.util.concurrent.BrokenBarrierException' name='BrokenBarrierException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.IllegalStateException' name='CancellationException'><constructor type='java.util.concurrent.CancellationException' name='CancellationException'/><constructor type='java.util.concurrent.CancellationException' name='CancellationException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.util.AbstractMap' name='ConcurrentHashMap'><constructor type='java.util.concurrent.ConcurrentHashMap' name='ConcurrentHashMap'><parameter type='int' name='initialCapacity'/><parameter type='float' name='loadFactor'/><parameter type='int' name='concurrencyLevel'/></constructor><constructor type='java.util.concurrent.ConcurrentHashMap' name='ConcurrentHashMap'><parameter type='int' name='initialCapacity'/></constructor><constructor type='java.util.concurrent.ConcurrentHashMap' name='ConcurrentHashMap'/><constructor type='java.util.concurrent.ConcurrentHashMap' name='ConcurrentHashMap'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='t'/></constructor><method return='boolean' name='contains'><parameter type='java.lang.Object' name='value'/></method><method return='java.util.Enumeration&lt;V&gt;' name='elements'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet'/><method return='java.util.Enumeration&lt;K&gt;' name='keys'/><method return='V' name='putIfAbsent'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='boolean' name='remove'><parameter type='java.lang.Object' name='key'/><parameter type='java.lang.Object' name='value'/></method><method return='boolean' name='replace'><parameter type='K' name='key'/><parameter type='V' name='oldValue'/><parameter type='V' name='newValue'/></method><method return='V' name='replace'><parameter type='K' name='key'/><parameter type='V' name='value'/></method></class><class extends='java.util.AbstractQueue' name='ConcurrentLinkedQueue'><constructor type='java.util.concurrent.ConcurrentLinkedQueue' name='ConcurrentLinkedQueue'/><constructor type='java.util.concurrent.ConcurrentLinkedQueue' name='ConcurrentLinkedQueue'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='E' name='peek'/><method return='E' name='poll'/><method return='int' name='size'/></class><class extends='java.lang.Object' name='CopyOnWriteArrayList'><constructor type='java.util.concurrent.CopyOnWriteArrayList' name='CopyOnWriteArrayList'/><constructor type='java.util.concurrent.CopyOnWriteArrayList' name='CopyOnWriteArrayList'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><constructor type='java.util.concurrent.CopyOnWriteArrayList' name='CopyOnWriteArrayList'><parameter type='E[]' name='array'/></constructor><method return='boolean' name='add'><parameter type='E' name='e'/></method><method name='add'><parameter type='int' name='index'/><parameter type='E' name='e'/></method><method return='boolean' name='addAll'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></method><method return='boolean' name='addAll'><parameter type='int' name='index'/><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></method><method return='int' name='addAllAbsent'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></method><method return='boolean' name='addIfAbsent'><parameter type='E' name='e'/></method><method name='clear'/><method return='java.lang.Object' name='clone'/><method return='boolean' name='contains'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' name='containsAll'><parameter type='java.util.Collection&lt;?&gt;' name='c'/></method><method return='E' name='get'><parameter type='int' name='index'/></method><method return='int' name='indexOf'><parameter type='E' name='e'/><parameter type='int' name='index'/></method><method return='int' name='indexOf'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' name='isEmpty'/><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='int' name='lastIndexOf'><parameter type='E' name='e'/><parameter type='int' name='index'/></method><method return='int' name='lastIndexOf'><parameter type='java.lang.Object' name='o'/></method><method return='java.util.ListIterator&lt;E&gt;' name='listIterator'/><method return='java.util.ListIterator&lt;E&gt;' name='listIterator'><parameter type='int' name='index'/></method><method return='E' name='remove'><parameter type='int' name='index'/></method><method return='boolean' name='remove'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' name='removeAll'><parameter type='java.util.Collection&lt;?&gt;' name='c'/></method><method return='boolean' name='retainAll'><parameter type='java.util.Collection&lt;?&gt;' name='c'/></method><method return='E' name='set'><parameter type='int' name='index'/><parameter type='E' name='e'/></method><method return='int' name='size'/><method return='java.util.List&lt;E&gt;' name='subList'><parameter type='int' name='fromIndex'/><parameter type='int' name='toIndex'/></method><method return='java.lang.Object[]' name='toArray'/><method return='T[]' name='toArray'><parameter type='T[]' name='a'/></method></class><class extends='java.util.AbstractSet' name='CopyOnWriteArraySet'><constructor type='java.util.concurrent.CopyOnWriteArraySet' name='CopyOnWriteArraySet'/><constructor type='java.util.concurrent.CopyOnWriteArraySet' name='CopyOnWriteArraySet'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='int' name='size'/></class><class extends='java.lang.Object' name='CountDownLatch'><constructor type='java.util.concurrent.CountDownLatch' name='CountDownLatch'><parameter type='int' name='count'/></constructor><method name='await'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='await'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='countDown'/><method return='long' name='getCount'/></class><class extends='java.lang.Object' name='CyclicBarrier'><constructor type='java.util.concurrent.CyclicBarrier' name='CyclicBarrier'><parameter type='int' name='parties'/><parameter type='java.lang.Runnable' name='barrierAction'/></constructor><constructor type='java.util.concurrent.CyclicBarrier' name='CyclicBarrier'><parameter type='int' name='parties'/></constructor><method return='int' name='await'><exception type='java.util.concurrent.BrokenBarrierException' name='BrokenBarrierException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' name='await'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.BrokenBarrierException' name='BrokenBarrierException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='int' name='getNumberWaiting'/><method return='int' name='getParties'/><method return='boolean' name='isBroken'/><method name='reset'/></class><class extends='java.util.AbstractQueue' name='DelayQueue'><constructor type='java.util.concurrent.DelayQueue' name='DelayQueue'/><constructor type='java.util.concurrent.DelayQueue' name='DelayQueue'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='E' name='peek'/><method return='E' name='poll'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='poll'/><method name='put'><parameter type='E' name='o'/></method><method return='int' name='remainingCapacity'/><method return='int' name='size'/><method return='E' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.Object' name='Exchanger'><constructor type='java.util.concurrent.Exchanger' name='Exchanger'/><method return='V' name='exchange'><parameter type='V' name='x'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='V' name='exchange'><parameter type='V' name='x'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method></class><class extends='java.lang.Exception' name='ExecutionException'><constructor visibility='protected' type='java.util.concurrent.ExecutionException' name='ExecutionException'/><constructor visibility='protected' type='java.util.concurrent.ExecutionException' name='ExecutionException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='java.util.concurrent.ExecutionException' name='ExecutionException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.util.concurrent.ExecutionException' name='ExecutionException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='ExecutorCompletionService'><constructor type='java.util.concurrent.ExecutorCompletionService' name='ExecutorCompletionService'><parameter type='java.util.concurrent.Executor' name='executor'/></constructor><constructor type='java.util.concurrent.ExecutorCompletionService' name='ExecutorCompletionService'><parameter type='java.util.concurrent.Executor' name='executor'/><parameter type='java.util.concurrent.BlockingQueue&lt;java.util.concurrent.Future&lt;V&gt;&gt;' name='completionQueue'/></constructor><method return='java.util.concurrent.Future&lt;V&gt;' name='poll'/><method return='java.util.concurrent.Future&lt;V&gt;' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.Future&lt;V&gt;' name='submit'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='task'/></method><method return='java.util.concurrent.Future&lt;V&gt;' name='submit'><parameter type='java.lang.Runnable' name='task'/><parameter type='V' name='result'/></method><method return='java.util.concurrent.Future&lt;V&gt;' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.Object' name='Executors'><method return='java.util.concurrent.Callable&lt;T&gt;' static='true' name='callable'><parameter type='java.lang.Runnable' name='task'/><parameter type='T' name='result'/></method><method return='java.util.concurrent.Callable&lt;java.lang.Object&gt;' static='true' name='callable'><parameter type='java.lang.Runnable' name='task'/></method><method return='java.util.concurrent.Callable&lt;java.lang.Object&gt;' api_removed='9' static='true' name='callable'><parameter type='java.security.PrivilegedAction' name='action'/></method><method return='java.util.concurrent.Callable&lt;java.lang.Object&gt;' api_removed='9' static='true' name='callable'><parameter type='java.security.PrivilegedExceptionAction' name='action'/></method><method return='java.util.concurrent.ThreadFactory' static='true' name='defaultThreadFactory'/><method return='java.util.concurrent.ExecutorService' static='true' name='newCachedThreadPool'/><method return='java.util.concurrent.ExecutorService' static='true' name='newCachedThreadPool'><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method return='java.util.concurrent.ExecutorService' static='true' name='newFixedThreadPool'><parameter type='int' name='nThreads'/></method><method return='java.util.concurrent.ExecutorService' static='true' name='newFixedThreadPool'><parameter type='int' name='nThreads'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method return='java.util.concurrent.ScheduledExecutorService' static='true' name='newScheduledThreadPool'><parameter type='int' name='corePoolSize'/></method><method return='java.util.concurrent.ScheduledExecutorService' static='true' name='newScheduledThreadPool'><parameter type='int' name='corePoolSize'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method return='java.util.concurrent.ExecutorService' static='true' name='newSingleThreadExecutor'/><method return='java.util.concurrent.ExecutorService' static='true' name='newSingleThreadExecutor'><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method return='java.util.concurrent.ScheduledExecutorService' static='true' name='newSingleThreadScheduledExecutor'/><method return='java.util.concurrent.ScheduledExecutorService' static='true' name='newSingleThreadScheduledExecutor'><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method return='java.util.concurrent.Callable&lt;T&gt;' static='true' name='privilegedCallable'><parameter type='java.util.concurrent.Callable&lt;T&gt;' name='callable'/></method><method return='java.util.concurrent.Callable&lt;T&gt;' static='true' name='privilegedCallableUsingCurrentClassLoader'><parameter type='java.util.concurrent.Callable&lt;T&gt;' name='callable'/></method><method return='java.util.concurrent.ThreadFactory' static='true' name='privilegedThreadFactory'/><method return='java.util.concurrent.ExecutorService' static='true' name='unconfigurableExecutorService'><parameter type='java.util.concurrent.ExecutorService' name='executor'/></method><method return='java.util.concurrent.ScheduledExecutorService' static='true' name='unconfigurableScheduledExecutorService'><parameter type='java.util.concurrent.ScheduledExecutorService' name='executor'/></method><method return='java.util.concurrent.Callable&lt;java.lang.Object&gt;' static='true' name='callable' api_added='9'><parameter type='java.security.PrivilegedAction&lt;?&gt;' name='action'/></method><method return='java.util.concurrent.Callable&lt;java.lang.Object&gt;' static='true' name='callable' api_added='9'><parameter type='java.security.PrivilegedExceptionAction&lt;?&gt;' name='action'/></method></class><class extends='java.lang.Object' name='FutureTask'><constructor type='java.util.concurrent.FutureTask' name='FutureTask'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='callable'/></constructor><constructor type='java.util.concurrent.FutureTask' name='FutureTask'><parameter type='java.lang.Runnable' name='runnable'/><parameter type='V' name='result'/></constructor><method return='boolean' name='cancel'><parameter type='boolean' name='mayInterruptIfRunning'/></method><method visibility='protected' name='done'/><method return='V' name='get'><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='V' name='get'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='boolean' name='isCancelled'/><method return='boolean' name='isDone'/><method name='run'/><method visibility='protected' return='boolean' name='runAndReset'/><method visibility='protected' name='set'><parameter type='V' name='v'/></method><method visibility='protected' name='setException'><parameter type='java.lang.Throwable' name='t'/></method></class><class extends='java.util.AbstractQueue' name='LinkedBlockingQueue'><constructor type='java.util.concurrent.LinkedBlockingQueue' name='LinkedBlockingQueue'/><constructor type='java.util.concurrent.LinkedBlockingQueue' name='LinkedBlockingQueue'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.concurrent.LinkedBlockingQueue' name='LinkedBlockingQueue'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='E' name='peek'/><method return='E' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='poll'/><method name='put'><parameter type='E' name='o'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' name='remainingCapacity'/><method return='int' name='size'/><method return='E' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.util.AbstractQueue' name='PriorityBlockingQueue'><constructor type='java.util.concurrent.PriorityBlockingQueue' name='PriorityBlockingQueue'/><constructor type='java.util.concurrent.PriorityBlockingQueue' name='PriorityBlockingQueue'><parameter type='int' name='initialCapacity'/></constructor><constructor type='java.util.concurrent.PriorityBlockingQueue' name='PriorityBlockingQueue'><parameter type='int' name='initialCapacity'/><parameter type='java.util.Comparator&lt;? super E&gt;' name='comparator'/></constructor><constructor type='java.util.concurrent.PriorityBlockingQueue' name='PriorityBlockingQueue'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method return='java.util.Comparator&lt;? super E&gt;' name='comparator'/><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='E' name='peek'/><method return='E' name='poll'/><method return='E' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='put'><parameter type='E' name='o'/></method><method return='int' name='remainingCapacity'/><method return='int' name='size'/><method return='E' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.lang.RuntimeException' name='RejectedExecutionException'><constructor type='java.util.concurrent.RejectedExecutionException' name='RejectedExecutionException'/><constructor type='java.util.concurrent.RejectedExecutionException' name='RejectedExecutionException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='java.util.concurrent.RejectedExecutionException' name='RejectedExecutionException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='java.util.concurrent.RejectedExecutionException' name='RejectedExecutionException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.util.concurrent.ThreadPoolExecutor' name='ScheduledThreadPoolExecutor'><constructor type='java.util.concurrent.ScheduledThreadPoolExecutor' name='ScheduledThreadPoolExecutor'><parameter type='int' name='corePoolSize'/></constructor><constructor type='java.util.concurrent.ScheduledThreadPoolExecutor' name='ScheduledThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></constructor><constructor type='java.util.concurrent.ScheduledThreadPoolExecutor' name='ScheduledThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='java.util.concurrent.RejectedExecutionHandler' name='handler'/></constructor><constructor type='java.util.concurrent.ScheduledThreadPoolExecutor' name='ScheduledThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/><parameter type='java.util.concurrent.RejectedExecutionHandler' name='handler'/></constructor><method return='boolean' name='getContinueExistingPeriodicTasksAfterShutdownPolicy'/><method return='boolean' name='getExecuteExistingDelayedTasksAfterShutdownPolicy'/><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' name='schedule'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;V&gt;' name='schedule'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='callable'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' name='scheduleAtFixedRate'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='initialDelay'/><parameter type='long' name='period'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' name='scheduleWithFixedDelay'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='initialDelay'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method name='setContinueExistingPeriodicTasksAfterShutdownPolicy'><parameter type='boolean' name='value'/></method><method name='setExecuteExistingDelayedTasksAfterShutdownPolicy'><parameter type='boolean' name='value'/></method><method visibility='protected' return='java.util.concurrent.RunnableScheduledFuture&lt;V&gt;' name='decorateTask' api_added='9'><parameter type='java.lang.Runnable' name='runnable'/><parameter type='java.util.concurrent.RunnableScheduledFuture&lt;V&gt;' name='task'/></method><method visibility='protected' return='java.util.concurrent.RunnableScheduledFuture&lt;V&gt;' name='decorateTask' api_added='9'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='callable'/><parameter type='java.util.concurrent.RunnableScheduledFuture&lt;V&gt;' name='task'/></method></class><class extends='java.lang.Object' name='Semaphore'><constructor type='java.util.concurrent.Semaphore' name='Semaphore'><parameter type='int' name='permits'/></constructor><constructor type='java.util.concurrent.Semaphore' name='Semaphore'><parameter type='int' name='permits'/><parameter type='boolean' name='fair'/></constructor><method name='acquire'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='acquire'><parameter type='int' name='permits'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='acquireUninterruptibly'/><method name='acquireUninterruptibly'><parameter type='int' name='permits'/></method><method return='int' name='availablePermits'/><method return='int' name='drainPermits'/><method return='int' name='getQueueLength' final='true'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedThreads'/><method return='boolean' name='hasQueuedThreads' final='true'/><method return='boolean' name='isFair'/><method visibility='protected' name='reducePermits'><parameter type='int' name='reduction'/></method><method name='release'/><method name='release'><parameter type='int' name='permits'/></method><method return='boolean' name='tryAcquire'/><method return='boolean' name='tryAcquire'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='tryAcquire'><parameter type='int' name='permits'/></method><method return='boolean' name='tryAcquire'><parameter type='int' name='permits'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.util.AbstractQueue' name='SynchronousQueue'><constructor type='java.util.concurrent.SynchronousQueue' name='SynchronousQueue'/><constructor type='java.util.concurrent.SynchronousQueue' name='SynchronousQueue'><parameter type='boolean' name='fair'/></constructor><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator'/><method return='boolean' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='offer'><parameter type='E' name='o'/></method><method return='E' name='peek'/><method return='E' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='poll'/><method name='put'><parameter type='E' name='o'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' name='remainingCapacity'/><method return='int' name='size'/><method return='E' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><class extends='java.util.concurrent.AbstractExecutorService' name='ThreadPoolExecutor'><constructor type='java.util.concurrent.ThreadPoolExecutor' name='ThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='int' name='maximumPoolSize'/><parameter type='long' name='keepAliveTime'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><parameter type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;' name='workQueue'/></constructor><constructor type='java.util.concurrent.ThreadPoolExecutor' name='ThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='int' name='maximumPoolSize'/><parameter type='long' name='keepAliveTime'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><parameter type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;' name='workQueue'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></constructor><constructor type='java.util.concurrent.ThreadPoolExecutor' name='ThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='int' name='maximumPoolSize'/><parameter type='long' name='keepAliveTime'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><parameter type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;' name='workQueue'/><parameter type='java.util.concurrent.RejectedExecutionHandler' name='handler'/></constructor><constructor type='java.util.concurrent.ThreadPoolExecutor' name='ThreadPoolExecutor'><parameter type='int' name='corePoolSize'/><parameter type='int' name='maximumPoolSize'/><parameter type='long' name='keepAliveTime'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><parameter type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;' name='workQueue'/><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/><parameter type='java.util.concurrent.RejectedExecutionHandler' name='handler'/></constructor><method visibility='protected' name='afterExecute'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.lang.Throwable' name='t'/></method><method return='boolean' name='awaitTermination'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' name='beforeExecute'><parameter type='java.lang.Thread' name='t'/><parameter type='java.lang.Runnable' name='r'/></method><method name='execute'><parameter type='java.lang.Runnable' name='command'/></method><method return='int' name='getActiveCount'/><method return='long' name='getCompletedTaskCount'/><method return='int' name='getCorePoolSize'/><method return='long' name='getKeepAliveTime'><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='int' name='getLargestPoolSize'/><method return='int' name='getMaximumPoolSize'/><method return='int' name='getPoolSize'/><method return='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;' name='getQueue'/><method return='java.util.concurrent.RejectedExecutionHandler' name='getRejectedExecutionHandler'/><method return='long' name='getTaskCount'/><method return='java.util.concurrent.ThreadFactory' name='getThreadFactory'/><method return='boolean' name='isShutdown'/><method return='boolean' name='isTerminated'/><method return='boolean' name='isTerminating'/><method return='int' name='prestartAllCoreThreads'/><method return='boolean' name='prestartCoreThread'/><method name='purge'/><method return='boolean' name='remove'><parameter type='java.lang.Runnable' name='task'/></method><method name='setCorePoolSize'><parameter type='int' name='corePoolSize'/></method><method name='setKeepAliveTime'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method name='setMaximumPoolSize'><parameter type='int' name='maximumPoolSize'/></method><method name='setRejectedExecutionHandler'><parameter type='java.util.concurrent.RejectedExecutionHandler' name='handler'/></method><method name='setThreadFactory'><parameter type='java.util.concurrent.ThreadFactory' name='threadFactory'/></method><method name='shutdown'/><method return='java.util.List&lt;java.lang.Runnable&gt;' name='shutdownNow'/><method visibility='protected' name='terminated'/><method name='allowCoreThreadTimeOut' api_added='9'><parameter type='boolean' name='value'/></method><method return='boolean' name='allowsCoreThreadTimeOut' api_added='9'/></class><class extends='java.lang.Object' static='true' name='ThreadPoolExecutor.AbortPolicy'><constructor type='java.util.concurrent.ThreadPoolExecutor.AbortPolicy' name='ThreadPoolExecutor.AbortPolicy'/><method name='rejectedExecution'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.util.concurrent.ThreadPoolExecutor' name='e'/></method></class><class extends='java.lang.Object' static='true' name='ThreadPoolExecutor.CallerRunsPolicy'><constructor type='java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy' name='ThreadPoolExecutor.CallerRunsPolicy'/><method name='rejectedExecution'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.util.concurrent.ThreadPoolExecutor' name='e'/></method></class><class extends='java.lang.Object' static='true' name='ThreadPoolExecutor.DiscardOldestPolicy'><constructor type='java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy' name='ThreadPoolExecutor.DiscardOldestPolicy'/><method name='rejectedExecution'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.util.concurrent.ThreadPoolExecutor' name='e'/></method></class><class extends='java.lang.Object' static='true' name='ThreadPoolExecutor.DiscardPolicy'><constructor type='java.util.concurrent.ThreadPoolExecutor.DiscardPolicy' name='ThreadPoolExecutor.DiscardPolicy'/><method name='rejectedExecution'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.util.concurrent.ThreadPoolExecutor' name='e'/></method></class><class extends='java.lang.Enum' name='TimeUnit' final='true'><method return='long' name='convert'><parameter type='long' name='duration'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method name='sleep'><parameter type='long' name='timeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='timedJoin'><parameter type='java.lang.Thread' name='thread'/><parameter type='long' name='timeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='timedWait'><parameter type='java.lang.Object' name='obj'/><parameter type='long' name='timeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='long' name='toMicros'><parameter type='long' name='duration'/></method><method return='long' name='toMillis'><parameter type='long' name='duration'/></method><method return='long' name='toNanos'><parameter type='long' name='duration'/></method><method return='long' name='toSeconds'><parameter type='long' name='duration'/></method><method return='java.util.concurrent.TimeUnit' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='java.util.concurrent.TimeUnit[]' static='true' name='values' final='true'/><method return='long' name='toDays' api_added='9'><parameter type='long' name='duration'/></method><method return='long' name='toHours' api_added='9'><parameter type='long' name='duration'/></method><method return='long' name='toMinutes' api_added='9'><parameter type='long' name='duration'/></method></class><class extends='java.lang.Exception' name='TimeoutException'><constructor type='java.util.concurrent.TimeoutException' name='TimeoutException'/><constructor type='java.util.concurrent.TimeoutException' name='TimeoutException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.util.AbstractMap' name='ConcurrentSkipListMap' api_added='9'><constructor type='java.util.concurrent.ConcurrentSkipListMap' name='ConcurrentSkipListMap' api_added='9'/><constructor type='java.util.concurrent.ConcurrentSkipListMap' name='ConcurrentSkipListMap' api_added='9'><parameter type='java.util.Comparator&lt;? super K&gt;' name='comparator'/></constructor><constructor type='java.util.concurrent.ConcurrentSkipListMap' name='ConcurrentSkipListMap' api_added='9'><parameter type='java.util.Map&lt;? extends K, ? extends V&gt;' name='m'/></constructor><constructor type='java.util.concurrent.ConcurrentSkipListMap' name='ConcurrentSkipListMap' api_added='9'><parameter type='java.util.SortedMap&lt;K, ? extends V&gt;' name='m'/></constructor><method return='java.util.Map.Entry&lt;K, V&gt;' name='ceilingEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='ceilingKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.concurrent.ConcurrentSkipListMap&lt;K, V&gt;' name='clone' api_added='9'/><method return='java.util.Comparator&lt;? super K&gt;' name='comparator' api_added='9'/><method return='java.util.NavigableSet&lt;K&gt;' name='descendingKeySet' api_added='9'/><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='descendingMap' api_added='9'/><method return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;' name='entrySet' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='firstEntry' api_added='9'/><method return='K' name='firstKey' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='floorEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='floorKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='headMap' api_added='9'><parameter type='K' name='toKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='headMap' api_added='9'><parameter type='K' name='toKey'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' name='higherEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='higherKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.Map.Entry&lt;K, V&gt;' name='lastEntry' api_added='9'/><method return='K' name='lastKey' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='lowerEntry' api_added='9'><parameter type='K' name='key'/></method><method return='K' name='lowerKey' api_added='9'><parameter type='K' name='key'/></method><method return='java.util.NavigableSet&lt;K&gt;' name='navigableKeySet' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='pollFirstEntry' api_added='9'/><method return='java.util.Map.Entry&lt;K, V&gt;' name='pollLastEntry' api_added='9'/><method return='V' name='putIfAbsent' api_added='9'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='boolean' name='remove' api_added='9'><parameter type='java.lang.Object' name='key'/><parameter type='java.lang.Object' name='value'/></method><method return='boolean' name='replace' api_added='9'><parameter type='K' name='key'/><parameter type='V' name='oldValue'/><parameter type='V' name='newValue'/></method><method return='V' name='replace' api_added='9'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='subMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='boolean' name='fromInclusive'/><parameter type='K' name='toKey'/><parameter type='boolean' name='toInclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='subMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='K' name='toKey'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='tailMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' name='tailMap' api_added='9'><parameter type='K' name='fromKey'/></method></class><class extends='java.util.AbstractSet' name='ConcurrentSkipListSet' api_added='9'><constructor type='java.util.concurrent.ConcurrentSkipListSet' name='ConcurrentSkipListSet' api_added='9'/><constructor type='java.util.concurrent.ConcurrentSkipListSet' name='ConcurrentSkipListSet' api_added='9'><parameter type='java.util.Comparator&lt;? super E&gt;' name='comparator'/></constructor><constructor type='java.util.concurrent.ConcurrentSkipListSet' name='ConcurrentSkipListSet' api_added='9'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><constructor type='java.util.concurrent.ConcurrentSkipListSet' name='ConcurrentSkipListSet' api_added='9'><parameter type='java.util.SortedSet&lt;E&gt;' name='s'/></constructor><method return='E' name='ceiling' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.concurrent.ConcurrentSkipListSet&lt;E&gt;' name='clone' api_added='9'/><method return='java.util.Comparator&lt;? super E&gt;' name='comparator' api_added='9'/><method return='java.util.Iterator&lt;E&gt;' name='descendingIterator' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' name='descendingSet' api_added='9'/><method return='E' name='first' api_added='9'/><method return='E' name='floor' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='headSet' api_added='9'><parameter type='E' name='toElement'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='headSet' api_added='9'><parameter type='E' name='toElement'/></method><method return='E' name='higher' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.Iterator&lt;E&gt;' name='iterator' api_added='9'/><method return='E' name='last' api_added='9'/><method return='E' name='lower' api_added='9'><parameter type='E' name='e'/></method><method return='E' name='pollFirst' api_added='9'/><method return='E' name='pollLast' api_added='9'/><method return='int' name='size' api_added='9'/><method return='java.util.NavigableSet&lt;E&gt;' name='subSet' api_added='9'><parameter type='E' name='fromElement'/><parameter type='boolean' name='fromInclusive'/><parameter type='E' name='toElement'/><parameter type='boolean' name='toInclusive'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='subSet' api_added='9'><parameter type='E' name='fromElement'/><parameter type='E' name='toElement'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='tailSet' api_added='9'><parameter type='E' name='fromElement'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.NavigableSet&lt;E&gt;' name='tailSet' api_added='9'><parameter type='E' name='fromElement'/></method></class><class extends='java.util.AbstractQueue' name='LinkedBlockingDeque' api_added='9'><constructor type='java.util.concurrent.LinkedBlockingDeque' name='LinkedBlockingDeque' api_added='9'/><constructor type='java.util.concurrent.LinkedBlockingDeque' name='LinkedBlockingDeque' api_added='9'><parameter type='int' name='capacity'/></constructor><constructor type='java.util.concurrent.LinkedBlockingDeque' name='LinkedBlockingDeque' api_added='9'><parameter type='java.util.Collection&lt;? extends E&gt;' name='c'/></constructor><method name='addFirst' api_added='9'><parameter type='E' name='e'/></method><method name='addLast' api_added='9'><parameter type='E' name='e'/></method><method return='java.util.Iterator&lt;E&gt;' name='descendingIterator' api_added='9'/><method return='int' name='drainTo' api_added='9'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' name='drainTo' api_added='9'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='E' name='getFirst' api_added='9'/><method return='E' name='getLast' api_added='9'/><method return='java.util.Iterator&lt;E&gt;' name='iterator' api_added='9'/><method return='boolean' name='offer' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offer' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='offerFirst' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offerFirst' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='offerLast' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' name='offerLast' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='peek' api_added='9'/><method return='E' name='peekFirst' api_added='9'/><method return='E' name='peekLast' api_added='9'/><method return='E' name='poll' api_added='9'/><method return='E' name='poll' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='pollFirst' api_added='9'/><method return='E' name='pollFirst' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='pollLast' api_added='9'/><method return='E' name='pollLast' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='pop' api_added='9'/><method name='push' api_added='9'><parameter type='E' name='e'/></method><method name='put' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='putFirst' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='putLast' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' name='remainingCapacity' api_added='9'/><method return='E' name='removeFirst' api_added='9'/><method return='boolean' name='removeFirstOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='E' name='removeLast' api_added='9'/><method return='boolean' name='removeLastOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='int' name='size' api_added='9'/><method return='E' name='take' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='takeFirst' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' name='takeLast' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></class><interface abstract='true' name='BlockingQueue'><method return='boolean' abstract='true' name='add'><parameter type='E' name='o'/></method><method return='int' abstract='true' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/></method><method return='int' abstract='true' name='drainTo'><parameter type='java.util.Collection&lt;? super E&gt;' name='c'/><parameter type='int' name='maxElements'/></method><method return='boolean' abstract='true' name='offer'><parameter type='E' name='o'/></method><method return='boolean' abstract='true' name='offer'><parameter type='E' name='o'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='put'><parameter type='E' name='o'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='int' abstract='true' name='remainingCapacity'/><method return='E' abstract='true' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' abstract='true' name='contains' api_added='5'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' abstract='true' name='remove' api_added='5'><parameter type='java.lang.Object' name='o'/></method></interface><interface abstract='true' name='Callable'><method return='V' abstract='true' name='call'><exception type='java.lang.Exception' name='Exception'/></method></interface><interface abstract='true' name='CompletionService'><method return='java.util.concurrent.Future&lt;V&gt;' abstract='true' name='poll'/><method return='java.util.concurrent.Future&lt;V&gt;' abstract='true' name='poll'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.Future&lt;V&gt;' abstract='true' name='submit'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='task'/></method><method return='java.util.concurrent.Future&lt;V&gt;' abstract='true' name='submit'><parameter type='java.lang.Runnable' name='task'/><parameter type='V' name='result'/></method><method return='java.util.concurrent.Future&lt;V&gt;' abstract='true' name='take'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></interface><interface abstract='true' name='ConcurrentMap'><method return='V' abstract='true' name='putIfAbsent'><parameter type='K' name='key'/><parameter type='V' name='value'/></method><method return='boolean' abstract='true' name='remove'><parameter type='java.lang.Object' name='key'/><parameter type='java.lang.Object' name='value'/></method><method return='boolean' abstract='true' name='replace'><parameter type='K' name='key'/><parameter type='V' name='oldValue'/><parameter type='V' name='newValue'/></method><method return='V' abstract='true' name='replace'><parameter type='K' name='key'/><parameter type='V' name='value'/></method></interface><interface abstract='true' name='Delayed'><method return='long' abstract='true' name='getDelay'><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method></interface><interface abstract='true' name='Executor'><method abstract='true' name='execute'><parameter type='java.lang.Runnable' name='command'/></method></interface><interface abstract='true' name='ExecutorService'><method return='boolean' abstract='true' name='awaitTermination'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' abstract='true' api_removed='9' name='invokeAll'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' abstract='true' api_removed='9' name='invokeAll'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' abstract='true' api_removed='9' name='invokeAny'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' abstract='true' api_removed='9' name='invokeAny'><parameter type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='boolean' abstract='true' name='isShutdown'/><method return='boolean' abstract='true' name='isTerminated'/><method abstract='true' name='shutdown'/><method return='java.util.List&lt;java.lang.Runnable&gt;' abstract='true' name='shutdownNow'/><method return='java.util.concurrent.Future&lt;T&gt;' abstract='true' name='submit'><parameter type='java.util.concurrent.Callable&lt;T&gt;' name='task'/></method><method return='java.util.concurrent.Future&lt;T&gt;' abstract='true' name='submit'><parameter type='java.lang.Runnable' name='task'/><parameter type='T' name='result'/></method><method return='java.util.concurrent.Future&lt;?&gt;' abstract='true' name='submit'><parameter type='java.lang.Runnable' name='task'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' abstract='true' name='invokeAll' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;' abstract='true' name='invokeAll' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' abstract='true' name='invokeAny' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='T' abstract='true' name='invokeAny' api_added='9'><parameter type='java.util.Collection&lt;? extends java.util.concurrent.Callable&lt;T&gt;&gt;' name='tasks'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method></interface><interface abstract='true' name='Future'><method return='boolean' abstract='true' name='cancel'><parameter type='boolean' name='mayInterruptIfRunning'/></method><method return='V' abstract='true' name='get'><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='V' abstract='true' name='get'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.util.concurrent.ExecutionException' name='ExecutionException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/><exception type='java.util.concurrent.TimeoutException' name='TimeoutException'/></method><method return='boolean' abstract='true' name='isCancelled'/><method return='boolean' abstract='true' name='isDone'/></interface><interface abstract='true' name='RejectedExecutionHandler'><method abstract='true' name='rejectedExecution'><parameter type='java.lang.Runnable' name='r'/><parameter type='java.util.concurrent.ThreadPoolExecutor' name='executor'/></method></interface><interface abstract='true' name='ScheduledExecutorService'><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' abstract='true' name='schedule'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;V&gt;' abstract='true' name='schedule'><parameter type='java.util.concurrent.Callable&lt;V&gt;' name='callable'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' abstract='true' name='scheduleAtFixedRate'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='initialDelay'/><parameter type='long' name='period'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method return='java.util.concurrent.ScheduledFuture&lt;?&gt;' abstract='true' name='scheduleWithFixedDelay'><parameter type='java.lang.Runnable' name='command'/><parameter type='long' name='initialDelay'/><parameter type='long' name='delay'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method></interface><interface abstract='true' name='ScheduledFuture'/><interface abstract='true' name='ThreadFactory'><method return='java.lang.Thread' abstract='true' name='newThread'><parameter type='java.lang.Runnable' name='r'/></method></interface><interface abstract='true' name='BlockingDeque' api_added='9'><method return='boolean' abstract='true' name='add' api_added='9'><parameter type='E' name='e'/></method><method abstract='true' name='addFirst' api_added='9'><parameter type='E' name='e'/></method><method abstract='true' name='addLast' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='contains' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='E' abstract='true' name='element' api_added='9'/><method return='java.util.Iterator&lt;E&gt;' abstract='true' name='iterator' api_added='9'/><method return='boolean' abstract='true' name='offer' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='offer' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' abstract='true' name='offerFirst' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='offerFirst' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' abstract='true' name='offerLast' api_added='9'><parameter type='E' name='e'/></method><method return='boolean' abstract='true' name='offerLast' api_added='9'><parameter type='E' name='e'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='peek' api_added='9'/><method return='E' abstract='true' name='poll' api_added='9'/><method return='E' abstract='true' name='poll' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='pollFirst' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='pollLast' api_added='9'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='push' api_added='9'><parameter type='E' name='e'/></method><method abstract='true' name='put' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='putFirst' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='putLast' api_added='9'><parameter type='E' name='e'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='remove' api_added='9'/><method return='boolean' abstract='true' name='remove' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' abstract='true' name='removeFirstOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='boolean' abstract='true' name='removeLastOccurrence' api_added='9'><parameter type='java.lang.Object' name='o'/></method><method return='int' abstract='true' name='size' api_added='9'/><method return='E' abstract='true' name='take' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='takeFirst' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='E' abstract='true' name='takeLast' api_added='9'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></interface><interface abstract='true' name='ConcurrentNavigableMap' api_added='9'><method return='java.util.NavigableSet&lt;K&gt;' abstract='true' name='descendingKeySet' api_added='9'/><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='descendingMap' api_added='9'/><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='headMap' api_added='9'><parameter type='K' name='toKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='headMap' api_added='9'><parameter type='K' name='toKey'/></method><method return='java.util.NavigableSet&lt;K&gt;' abstract='true' name='keySet' api_added='9'/><method return='java.util.NavigableSet&lt;K&gt;' abstract='true' name='navigableKeySet' api_added='9'/><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='subMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='boolean' name='fromInclusive'/><parameter type='K' name='toKey'/><parameter type='boolean' name='toInclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='subMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='K' name='toKey'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='tailMap' api_added='9'><parameter type='K' name='fromKey'/><parameter type='boolean' name='inclusive'/></method><method return='java.util.concurrent.ConcurrentNavigableMap&lt;K, V&gt;' abstract='true' name='tailMap' api_added='9'><parameter type='K' name='fromKey'/></method></interface><interface abstract='true' name='RunnableFuture' api_added='9'><method abstract='true' name='run' api_added='9'/></interface><interface abstract='true' name='RunnableScheduledFuture' api_added='9'><method return='boolean' abstract='true' name='isPeriodic' api_added='9'/></interface></package><package name='java.util.concurrent.atomic'><class extends='java.lang.Object' name='AtomicBoolean'><constructor type='java.util.concurrent.atomic.AtomicBoolean' name='AtomicBoolean'><parameter type='boolean' name='initialValue'/></constructor><constructor type='java.util.concurrent.atomic.AtomicBoolean' name='AtomicBoolean'/><method return='boolean' name='compareAndSet' final='true'><parameter type='boolean' name='expect'/><parameter type='boolean' name='update'/></method><method return='boolean' name='get' final='true'/><method return='boolean' name='getAndSet' final='true'><parameter type='boolean' name='newValue'/></method><method name='set' final='true'><parameter type='boolean' name='newValue'/></method><method return='boolean' name='weakCompareAndSet'><parameter type='boolean' name='expect'/><parameter type='boolean' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='boolean' name='newValue'/></method></class><class extends='java.lang.Number' name='AtomicInteger'><constructor type='java.util.concurrent.atomic.AtomicInteger' name='AtomicInteger'><parameter type='int' name='initialValue'/></constructor><constructor type='java.util.concurrent.atomic.AtomicInteger' name='AtomicInteger'/><method return='int' name='addAndGet' final='true'><parameter type='int' name='delta'/></method><method return='boolean' name='compareAndSet' final='true'><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method return='int' name='decrementAndGet' final='true'/><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='int' name='get' final='true'/><method return='int' name='getAndAdd' final='true'><parameter type='int' name='delta'/></method><method return='int' name='getAndDecrement' final='true'/><method return='int' name='getAndIncrement' final='true'/><method return='int' name='getAndSet' final='true'><parameter type='int' name='newValue'/></method><method return='int' name='incrementAndGet' final='true'/><method return='int' name='intValue'/><method return='long' name='longValue'/><method name='set' final='true'><parameter type='int' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='int' name='newValue'/></method></class><class extends='java.lang.Object' name='AtomicIntegerArray'><constructor type='java.util.concurrent.atomic.AtomicIntegerArray' name='AtomicIntegerArray'><parameter type='int' name='length'/></constructor><constructor type='java.util.concurrent.atomic.AtomicIntegerArray' name='AtomicIntegerArray'><parameter type='int[]' name='array'/></constructor><method return='int' name='addAndGet' final='true'><parameter type='int' name='i'/><parameter type='int' name='delta'/></method><method return='boolean' name='compareAndSet' final='true'><parameter type='int' name='i'/><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method return='int' name='decrementAndGet' final='true'><parameter type='int' name='i'/></method><method return='int' name='get' final='true'><parameter type='int' name='i'/></method><method return='int' name='getAndAdd' final='true'><parameter type='int' name='i'/><parameter type='int' name='delta'/></method><method return='int' name='getAndDecrement' final='true'><parameter type='int' name='i'/></method><method return='int' name='getAndIncrement' final='true'><parameter type='int' name='i'/></method><method return='int' name='getAndSet' final='true'><parameter type='int' name='i'/><parameter type='int' name='newValue'/></method><method return='int' name='incrementAndGet' final='true'><parameter type='int' name='i'/></method><method return='int' name='length' final='true'/><method name='set' final='true'><parameter type='int' name='i'/><parameter type='int' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='int' name='i'/><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='int' name='i'/><parameter type='int' name='newValue'/></method></class><class extends='java.lang.Object' abstract='true' name='AtomicIntegerFieldUpdater'><constructor visibility='protected' type='java.util.concurrent.atomic.AtomicIntegerFieldUpdater' name='AtomicIntegerFieldUpdater'/><method return='int' name='addAndGet'><parameter type='T' name='obj'/><parameter type='int' name='delta'/></method><method return='boolean' abstract='true' name='compareAndSet'><parameter type='T' name='obj'/><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method return='int' name='decrementAndGet'><parameter type='T' name='obj'/></method><method return='int' abstract='true' name='get'><parameter type='T' name='obj'/></method><method return='int' name='getAndAdd'><parameter type='T' name='obj'/><parameter type='int' name='delta'/></method><method return='int' name='getAndDecrement'><parameter type='T' name='obj'/></method><method return='int' name='getAndIncrement'><parameter type='T' name='obj'/></method><method return='int' name='getAndSet'><parameter type='T' name='obj'/><parameter type='int' name='newValue'/></method><method return='int' name='incrementAndGet'><parameter type='T' name='obj'/></method><method return='java.util.concurrent.atomic.AtomicIntegerFieldUpdater&lt;U&gt;' static='true' name='newUpdater'><parameter type='java.lang.Class&lt;U&gt;' name='tclass'/><parameter type='java.lang.String' name='fieldName'/></method><method abstract='true' name='set'><parameter type='T' name='obj'/><parameter type='int' name='newValue'/></method><method return='boolean' abstract='true' name='weakCompareAndSet'><parameter type='T' name='obj'/><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method abstract='true' name='lazySet' api_added='9'><parameter type='T' name='obj'/><parameter type='int' name='newValue'/></method></class><class extends='java.lang.Number' name='AtomicLong'><constructor type='java.util.concurrent.atomic.AtomicLong' name='AtomicLong'><parameter type='long' name='initialValue'/></constructor><constructor type='java.util.concurrent.atomic.AtomicLong' name='AtomicLong'/><method return='long' name='addAndGet' final='true'><parameter type='long' name='delta'/></method><method return='boolean' name='compareAndSet' final='true'><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method return='long' name='decrementAndGet' final='true'/><method return='double' name='doubleValue'/><method return='float' name='floatValue'/><method return='long' name='get' final='true'/><method return='long' name='getAndAdd' final='true'><parameter type='long' name='delta'/></method><method return='long' name='getAndDecrement' final='true'/><method return='long' name='getAndIncrement' final='true'/><method return='long' name='getAndSet' final='true'><parameter type='long' name='newValue'/></method><method return='long' name='incrementAndGet' final='true'/><method return='int' name='intValue'/><method return='long' name='longValue'/><method name='set' final='true'><parameter type='long' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='long' name='newValue'/></method></class><class extends='java.lang.Object' name='AtomicLongArray'><constructor type='java.util.concurrent.atomic.AtomicLongArray' name='AtomicLongArray'><parameter type='int' name='length'/></constructor><constructor type='java.util.concurrent.atomic.AtomicLongArray' name='AtomicLongArray'><parameter type='long[]' name='array'/></constructor><method return='long' name='addAndGet'><parameter type='int' name='i'/><parameter type='long' name='delta'/></method><method return='boolean' name='compareAndSet' final='true'><parameter type='int' name='i'/><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method return='long' name='decrementAndGet' final='true'><parameter type='int' name='i'/></method><method return='long' name='get' final='true'><parameter type='int' name='i'/></method><method return='long' name='getAndAdd' final='true'><parameter type='int' name='i'/><parameter type='long' name='delta'/></method><method return='long' name='getAndDecrement' final='true'><parameter type='int' name='i'/></method><method return='long' name='getAndIncrement' final='true'><parameter type='int' name='i'/></method><method return='long' name='getAndSet' final='true'><parameter type='int' name='i'/><parameter type='long' name='newValue'/></method><method return='long' name='incrementAndGet' final='true'><parameter type='int' name='i'/></method><method return='int' name='length' final='true'/><method name='set' final='true'><parameter type='int' name='i'/><parameter type='long' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='int' name='i'/><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='int' name='i'/><parameter type='long' name='newValue'/></method></class><class extends='java.lang.Object' abstract='true' name='AtomicLongFieldUpdater'><constructor visibility='protected' type='java.util.concurrent.atomic.AtomicLongFieldUpdater' name='AtomicLongFieldUpdater'/><method return='long' name='addAndGet'><parameter type='T' name='obj'/><parameter type='long' name='delta'/></method><method return='boolean' abstract='true' name='compareAndSet'><parameter type='T' name='obj'/><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method return='long' name='decrementAndGet'><parameter type='T' name='obj'/></method><method return='long' abstract='true' name='get'><parameter type='T' name='obj'/></method><method return='long' name='getAndAdd'><parameter type='T' name='obj'/><parameter type='long' name='delta'/></method><method return='long' name='getAndDecrement'><parameter type='T' name='obj'/></method><method return='long' name='getAndIncrement'><parameter type='T' name='obj'/></method><method return='long' name='getAndSet'><parameter type='T' name='obj'/><parameter type='long' name='newValue'/></method><method return='long' name='incrementAndGet'><parameter type='T' name='obj'/></method><method return='java.util.concurrent.atomic.AtomicLongFieldUpdater&lt;U&gt;' static='true' name='newUpdater'><parameter type='java.lang.Class&lt;U&gt;' name='tclass'/><parameter type='java.lang.String' name='fieldName'/></method><method abstract='true' name='set'><parameter type='T' name='obj'/><parameter type='long' name='newValue'/></method><method return='boolean' abstract='true' name='weakCompareAndSet'><parameter type='T' name='obj'/><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method abstract='true' name='lazySet' api_added='9'><parameter type='T' name='obj'/><parameter type='long' name='newValue'/></method></class><class extends='java.lang.Object' name='AtomicMarkableReference'><constructor type='java.util.concurrent.atomic.AtomicMarkableReference' name='AtomicMarkableReference'><parameter type='V' name='initialRef'/><parameter type='boolean' name='initialMark'/></constructor><method return='boolean' name='attemptMark'><parameter type='V' name='expectedReference'/><parameter type='boolean' name='newMark'/></method><method return='boolean' name='compareAndSet'><parameter type='V' name='expectedReference'/><parameter type='V' name='newReference'/><parameter type='boolean' name='expectedMark'/><parameter type='boolean' name='newMark'/></method><method return='V' name='get'><parameter type='boolean[]' name='markHolder'/></method><method return='V' name='getReference'/><method return='boolean' name='isMarked'/><method name='set'><parameter type='V' name='newReference'/><parameter type='boolean' name='newMark'/></method><method return='boolean' name='weakCompareAndSet'><parameter type='V' name='expectedReference'/><parameter type='V' name='newReference'/><parameter type='boolean' name='expectedMark'/><parameter type='boolean' name='newMark'/></method></class><class extends='java.lang.Object' name='AtomicReference'><constructor type='java.util.concurrent.atomic.AtomicReference' name='AtomicReference'><parameter type='V' name='initialValue'/></constructor><constructor type='java.util.concurrent.atomic.AtomicReference' name='AtomicReference'/><method return='boolean' name='compareAndSet' final='true'><parameter type='V' name='expect'/><parameter type='V' name='update'/></method><method return='V' name='get' final='true'/><method return='V' name='getAndSet' final='true'><parameter type='V' name='newValue'/></method><method name='set' final='true'><parameter type='V' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='V' name='expect'/><parameter type='V' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='V' name='newValue'/></method></class><class extends='java.lang.Object' name='AtomicReferenceArray'><constructor type='java.util.concurrent.atomic.AtomicReferenceArray' name='AtomicReferenceArray'><parameter type='int' name='length'/></constructor><constructor type='java.util.concurrent.atomic.AtomicReferenceArray' name='AtomicReferenceArray'><parameter type='E[]' name='array'/></constructor><method return='boolean' name='compareAndSet' final='true'><parameter type='int' name='i'/><parameter type='E' name='expect'/><parameter type='E' name='update'/></method><method return='E' name='get' final='true'><parameter type='int' name='i'/></method><method return='E' name='getAndSet' final='true'><parameter type='int' name='i'/><parameter type='E' name='newValue'/></method><method return='int' name='length' final='true'/><method name='set' final='true'><parameter type='int' name='i'/><parameter type='E' name='newValue'/></method><method return='boolean' name='weakCompareAndSet' final='true'><parameter type='int' name='i'/><parameter type='E' name='expect'/><parameter type='E' name='update'/></method><method name='lazySet' api_added='9' final='true'><parameter type='int' name='i'/><parameter type='E' name='newValue'/></method></class><class extends='java.lang.Object' abstract='true' name='AtomicReferenceFieldUpdater'><constructor visibility='protected' type='java.util.concurrent.atomic.AtomicReferenceFieldUpdater' name='AtomicReferenceFieldUpdater'/><method return='boolean' abstract='true' name='compareAndSet'><parameter type='T' name='obj'/><parameter type='V' name='expect'/><parameter type='V' name='update'/></method><method return='V' abstract='true' name='get'><parameter type='T' name='obj'/></method><method return='V' name='getAndSet'><parameter type='T' name='obj'/><parameter type='V' name='newValue'/></method><method return='java.util.concurrent.atomic.AtomicReferenceFieldUpdater&lt;U, W&gt;' static='true' name='newUpdater'><parameter type='java.lang.Class&lt;U&gt;' name='tclass'/><parameter type='java.lang.Class&lt;W&gt;' name='vclass'/><parameter type='java.lang.String' name='fieldName'/></method><method abstract='true' name='set'><parameter type='T' name='obj'/><parameter type='V' name='newValue'/></method><method return='boolean' abstract='true' name='weakCompareAndSet'><parameter type='T' name='obj'/><parameter type='V' name='expect'/><parameter type='V' name='update'/></method><method abstract='true' name='lazySet' api_added='9'><parameter type='T' name='obj'/><parameter type='V' name='newValue'/></method></class><class extends='java.lang.Object' name='AtomicStampedReference'><constructor type='java.util.concurrent.atomic.AtomicStampedReference' name='AtomicStampedReference'><parameter type='V' name='initialRef'/><parameter type='int' name='initialStamp'/></constructor><method return='boolean' name='attemptStamp'><parameter type='V' name='expectedReference'/><parameter type='int' name='newStamp'/></method><method return='boolean' name='compareAndSet'><parameter type='V' name='expectedReference'/><parameter type='V' name='newReference'/><parameter type='int' name='expectedStamp'/><parameter type='int' name='newStamp'/></method><method return='V' name='get'><parameter type='int[]' name='stampHolder'/></method><method return='V' name='getReference'/><method return='int' name='getStamp'/><method name='set'><parameter type='V' name='newReference'/><parameter type='int' name='newStamp'/></method><method return='boolean' name='weakCompareAndSet'><parameter type='V' name='expectedReference'/><parameter type='V' name='newReference'/><parameter type='int' name='expectedStamp'/><parameter type='int' name='newStamp'/></method></class></package><package name='java.util.concurrent.locks'><class extends='java.lang.Object' abstract='true' name='AbstractQueuedSynchronizer'><constructor visibility='protected' type='java.util.concurrent.locks.AbstractQueuedSynchronizer' name='AbstractQueuedSynchronizer'/><method name='acquire' final='true'><parameter type='int' name='arg'/></method><method name='acquireInterruptibly' final='true'><parameter type='int' name='arg'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='acquireShared' final='true'><parameter type='int' name='arg'/></method><method name='acquireSharedInterruptibly' final='true'><parameter type='int' name='arg'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='boolean' name='compareAndSetState' final='true'><parameter type='int' name='expect'/><parameter type='int' name='update'/></method><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getExclusiveQueuedThreads' final='true'/><method return='java.lang.Thread' name='getFirstQueuedThread' final='true'/><method return='int' name='getQueueLength' final='true'/><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedThreads' final='true'/><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getSharedQueuedThreads' final='true'/><method visibility='protected' return='int' name='getState' final='true'/><method return='int' name='getWaitQueueLength' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject' name='condition'/></method><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject' name='condition'/></method><method return='boolean' name='hasContended' final='true'/><method return='boolean' name='hasQueuedThreads' final='true'/><method return='boolean' name='hasWaiters' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject' name='condition'/></method><method visibility='protected' return='boolean' name='isHeldExclusively'/><method return='boolean' name='isQueued' final='true'><parameter type='java.lang.Thread' name='thread'/></method><method return='boolean' name='owns' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject' name='condition'/></method><method return='boolean' name='release' final='true'><parameter type='int' name='arg'/></method><method return='boolean' name='releaseShared' final='true'><parameter type='int' name='arg'/></method><method visibility='protected' name='setState' final='true'><parameter type='int' name='newState'/></method><method visibility='protected' return='boolean' name='tryAcquire'><parameter type='int' name='arg'/></method><method return='boolean' name='tryAcquireNanos' final='true'><parameter type='int' name='arg'/><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='int' name='tryAcquireShared'><parameter type='int' name='arg'/></method><method return='boolean' name='tryAcquireSharedNanos' final='true'><parameter type='int' name='arg'/><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='boolean' name='tryRelease'><parameter type='int' name='arg'/></method><method visibility='protected' return='boolean' name='tryReleaseShared'><parameter type='int' name='arg'/></method></class><class extends='java.lang.Object' name='AbstractQueuedSynchronizer.ConditionObject'><constructor type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject' name='AbstractQueuedSynchronizer.ConditionObject'/><method name='await' final='true'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='await' final='true'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='long' name='awaitNanos' final='true'><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='awaitUninterruptibly' final='true'/><method return='boolean' name='awaitUntil' final='true'><parameter type='java.util.Date' name='deadline'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='int' name='getWaitQueueLength' final='true'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads' final='true'/><method visibility='protected' return='boolean' name='hasWaiters' final='true'/><method name='signal' final='true'/><method name='signalAll' final='true'/></class><class extends='java.lang.Object' name='LockSupport'><method static='true' name='park'/><method static='true' name='parkNanos'><parameter type='long' name='nanos'/></method><method static='true' name='parkUntil'><parameter type='long' name='deadline'/></method><method static='true' name='unpark'><parameter type='java.lang.Thread' name='thread'/></method><method return='java.lang.Object' static='true' name='getBlocker' api_added='9'><parameter type='java.lang.Thread' name='t'/></method><method static='true' name='park' api_added='9'><parameter type='java.lang.Object' name='blocker'/></method><method static='true' name='parkNanos' api_added='9'><parameter type='java.lang.Object' name='blocker'/><parameter type='long' name='nanos'/></method><method static='true' name='parkUntil' api_added='9'><parameter type='java.lang.Object' name='blocker'/><parameter type='long' name='deadline'/></method></class><class extends='java.lang.Object' name='ReentrantLock'><constructor type='java.util.concurrent.locks.ReentrantLock' name='ReentrantLock'/><constructor type='java.util.concurrent.locks.ReentrantLock' name='ReentrantLock'><parameter type='boolean' name='fair'/></constructor><method return='int' name='getHoldCount'/><method visibility='protected' return='java.lang.Thread' name='getOwner'/><method return='int' name='getQueueLength' final='true'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedThreads'/><method return='int' name='getWaitQueueLength'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method return='boolean' name='hasQueuedThread' final='true'><parameter type='java.lang.Thread' name='thread'/></method><method return='boolean' name='hasQueuedThreads' final='true'/><method return='boolean' name='hasWaiters'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method return='boolean' name='isFair' final='true'/><method return='boolean' name='isHeldByCurrentThread'/><method return='boolean' name='isLocked'/><method name='lock'/><method name='lockInterruptibly'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.locks.Condition' name='newCondition'/><method return='boolean' name='tryLock'/><method return='boolean' name='tryLock'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='unlock'/></class><class extends='java.lang.Object' name='ReentrantReadWriteLock'><constructor type='java.util.concurrent.locks.ReentrantReadWriteLock' name='ReentrantReadWriteLock'/><constructor type='java.util.concurrent.locks.ReentrantReadWriteLock' name='ReentrantReadWriteLock'><parameter type='boolean' name='fair'/></constructor><method visibility='protected' return='java.lang.Thread' name='getOwner'/><method return='int' name='getQueueLength' final='true'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedReaderThreads'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedThreads'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedWriterThreads'/><method return='int' name='getReadLockCount'/><method return='int' name='getWaitQueueLength'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method return='int' name='getWriteHoldCount'/><method return='boolean' name='hasQueuedThread' final='true'><parameter type='java.lang.Thread' name='thread'/></method><method return='boolean' name='hasQueuedThreads' final='true'/><method return='boolean' name='hasWaiters'><parameter type='java.util.concurrent.locks.Condition' name='condition'/></method><method return='boolean' name='isFair' final='true'/><method return='boolean' name='isWriteLocked'/><method return='boolean' name='isWriteLockedByCurrentThread'/><method return='java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock' name='readLock'/><method return='java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock' name='writeLock'/><method return='int' name='getReadHoldCount' api_added='9'/></class><class extends='java.lang.Object' static='true' name='ReentrantReadWriteLock.ReadLock'><constructor visibility='protected' type='java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock' name='ReentrantReadWriteLock.ReadLock'><parameter type='java.util.concurrent.locks.ReentrantReadWriteLock' name='lock'/></constructor><method name='lock'/><method name='lockInterruptibly'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.locks.Condition' name='newCondition'/><method return='boolean' name='tryLock'/><method return='boolean' name='tryLock'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='unlock'/></class><class extends='java.lang.Object' static='true' name='ReentrantReadWriteLock.WriteLock'><constructor visibility='protected' type='java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock' name='ReentrantReadWriteLock.WriteLock'><parameter type='java.util.concurrent.locks.ReentrantReadWriteLock' name='lock'/></constructor><method name='lock'/><method name='lockInterruptibly'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.locks.Condition' name='newCondition'/><method return='boolean' name='tryLock'/><method return='boolean' name='tryLock'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='unlock'/><method return='int' name='getHoldCount' api_added='9'/><method return='boolean' name='isHeldByCurrentThread' api_added='9'/></class><class visibility='' extends='java.lang.Object' abstract='true' name='AbstractOwnableSynchronizer' api_added='5'><constructor visibility='protected' type='java.util.concurrent.locks.AbstractOwnableSynchronizer' name='AbstractOwnableSynchronizer' api_added='5'/><method visibility='protected' return='java.lang.Thread' name='getExclusiveOwnerThread' api_added='5' final='true'/><method visibility='protected' name='setExclusiveOwnerThread' api_added='5' final='true'><parameter type='java.lang.Thread' name='t'/></method></class><class extends='java.util.concurrent.locks.AbstractOwnableSynchronizer' abstract='true' name='AbstractQueuedLongSynchronizer' api_added='9'><constructor visibility='protected' type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer' name='AbstractQueuedLongSynchronizer' api_added='9'/><method name='acquire' api_added='9' final='true'><parameter type='long' name='arg'/></method><method name='acquireInterruptibly' api_added='9' final='true'><parameter type='long' name='arg'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='acquireShared' api_added='9' final='true'><parameter type='long' name='arg'/></method><method name='acquireSharedInterruptibly' api_added='9' final='true'><parameter type='long' name='arg'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='boolean' name='compareAndSetState' api_added='9' final='true'><parameter type='long' name='expect'/><parameter type='long' name='update'/></method><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getExclusiveQueuedThreads' api_added='9' final='true'/><method return='java.lang.Thread' name='getFirstQueuedThread' api_added='9' final='true'/><method return='int' name='getQueueLength' api_added='9' final='true'/><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getQueuedThreads' api_added='9' final='true'/><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getSharedQueuedThreads' api_added='9' final='true'/><method visibility='protected' return='long' name='getState' api_added='9' final='true'/><method return='int' name='getWaitQueueLength' api_added='9' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject' name='condition'/></method><method return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads' api_added='9' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject' name='condition'/></method><method return='boolean' name='hasContended' api_added='9' final='true'/><method return='boolean' name='hasQueuedThreads' api_added='9' final='true'/><method return='boolean' name='hasWaiters' api_added='9' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject' name='condition'/></method><method visibility='protected' return='boolean' name='isHeldExclusively' api_added='9'/><method return='boolean' name='isQueued' api_added='9' final='true'><parameter type='java.lang.Thread' name='thread'/></method><method return='boolean' name='owns' api_added='9' final='true'><parameter type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject' name='condition'/></method><method return='boolean' name='release' api_added='9' final='true'><parameter type='long' name='arg'/></method><method return='boolean' name='releaseShared' api_added='9' final='true'><parameter type='long' name='arg'/></method><method visibility='protected' name='setState' api_added='9' final='true'><parameter type='long' name='newState'/></method><method visibility='protected' return='boolean' name='tryAcquire' api_added='9'><parameter type='long' name='arg'/></method><method return='boolean' name='tryAcquireNanos' api_added='9' final='true'><parameter type='long' name='arg'/><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='long' name='tryAcquireShared' api_added='9'><parameter type='long' name='arg'/></method><method return='boolean' name='tryAcquireSharedNanos' api_added='9' final='true'><parameter type='long' name='arg'/><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='boolean' name='tryRelease' api_added='9'><parameter type='long' name='arg'/></method><method visibility='protected' return='boolean' name='tryReleaseShared' api_added='9'><parameter type='long' name='arg'/></method></class><class extends='java.lang.Object' name='AbstractQueuedLongSynchronizer.ConditionObject' api_added='9'><constructor type='java.util.concurrent.locks.AbstractQueuedLongSynchronizer.ConditionObject' name='AbstractQueuedLongSynchronizer.ConditionObject' api_added='9'/><method name='await' api_added='9' final='true'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' name='await' api_added='9' final='true'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='long' name='awaitNanos' api_added='9' final='true'><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method name='awaitUninterruptibly' api_added='9' final='true'/><method return='boolean' name='awaitUntil' api_added='9' final='true'><parameter type='java.util.Date' name='deadline'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='int' name='getWaitQueueLength' api_added='9' final='true'/><method visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;' name='getWaitingThreads' api_added='9' final='true'/><method visibility='protected' return='boolean' name='hasWaiters' api_added='9' final='true'/><method name='signal' api_added='9' final='true'/><method name='signalAll' api_added='9' final='true'/></class><interface abstract='true' name='Condition'><method abstract='true' name='await'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='boolean' abstract='true' name='await'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='long' abstract='true' name='awaitNanos'><parameter type='long' name='nanosTimeout'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='awaitUninterruptibly'/><method return='boolean' abstract='true' name='awaitUntil'><parameter type='java.util.Date' name='deadline'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='signal'/><method abstract='true' name='signalAll'/></interface><interface abstract='true' name='Lock'><method abstract='true' name='lock'/><method abstract='true' name='lockInterruptibly'><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.locks.Condition' abstract='true' name='newCondition'/><method return='boolean' abstract='true' name='tryLock'/><method return='boolean' abstract='true' name='tryLock'><parameter type='long' name='time'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method abstract='true' name='unlock'/></interface><interface abstract='true' name='ReadWriteLock'><method return='java.util.concurrent.locks.Lock' abstract='true' name='readLock'/><method return='java.util.concurrent.locks.Lock' abstract='true' name='writeLock'/></interface></package><package name='java.util.jar'><class extends='java.lang.Object' name='Attributes'><constructor type='java.util.jar.Attributes' name='Attributes'/><constructor type='java.util.jar.Attributes' name='Attributes'><parameter type='java.util.jar.Attributes' name='attrib'/></constructor><constructor type='java.util.jar.Attributes' name='Attributes'><parameter type='int' name='size'/></constructor><method name='clear'/><method return='java.lang.Object' name='clone'/><method return='boolean' name='containsKey'><parameter type='java.lang.Object' name='key'/></method><method return='boolean' name='containsValue'><parameter type='java.lang.Object' name='value'/></method><method return='java.util.Set&lt;java.util.Map.Entry&lt;java.lang.Object, java.lang.Object&gt;&gt;' name='entrySet'/><method return='java.lang.Object' name='get'><parameter type='java.lang.Object' name='key'/></method><method return='java.lang.String' name='getValue'><parameter type='java.util.jar.Attributes.Name' name='name'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='isEmpty'/><method return='java.util.Set&lt;java.lang.Object&gt;' name='keySet'/><method return='java.lang.Object' name='put'><parameter type='java.lang.Object' name='key'/><parameter type='java.lang.Object' name='value'/></method><method api_removed='14' name='putAll'><parameter type='java.util.Map&lt;?, ?&gt;' name='attrib'/></method><method return='java.lang.String' name='putValue'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='val'/></method><method return='java.lang.Object' name='remove'><parameter type='java.lang.Object' name='key'/></method><method return='int' name='size'/><method return='java.util.Collection&lt;java.lang.Object&gt;' name='values'/><method name='putAll' api_added='14'><parameter type='java.util.Map&lt;?' name='arg0'/><parameter type='?&gt;' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='Attributes.Name'><constructor type='java.util.jar.Attributes.Name' name='Attributes.Name'><parameter type='java.lang.String' name='s'/></constructor></class><class extends='java.util.zip.ZipEntry' name='JarEntry'><constructor type='java.util.jar.JarEntry' name='JarEntry'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.util.jar.JarEntry' name='JarEntry'><parameter type='java.util.zip.ZipEntry' name='entry'/></constructor><constructor type='java.util.jar.JarEntry' name='JarEntry'><parameter type='java.util.jar.JarEntry' name='je'/></constructor><method return='java.util.jar.Attributes' name='getAttributes'><exception type='java.io.IOException' name='IOException'/></method><method return='java.security.cert.Certificate[]' name='getCertificates'/><method return='java.security.CodeSigner[]' name='getCodeSigners'/></class><class extends='java.util.zip.ZipException' name='JarException'><constructor type='java.util.jar.JarException' name='JarException'/><constructor type='java.util.jar.JarException' name='JarException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.util.zip.ZipFile' name='JarFile'><constructor type='java.util.jar.JarFile' name='JarFile'><parameter type='java.io.File' name='file'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarFile' name='JarFile'><parameter type='java.io.File' name='file'/><parameter type='boolean' name='verify'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarFile' name='JarFile'><parameter type='java.io.File' name='file'/><parameter type='boolean' name='verify'/><parameter type='int' name='mode'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarFile' name='JarFile'><parameter type='java.lang.String' name='filename'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarFile' name='JarFile'><parameter type='java.lang.String' name='filename'/><parameter type='boolean' name='verify'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.util.jar.JarEntry' name='getJarEntry'><parameter type='java.lang.String' name='name'/></method><method return='java.util.jar.Manifest' name='getManifest'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.util.zip.ZipInputStream' name='JarInputStream'><constructor type='java.util.jar.JarInputStream' name='JarInputStream'><parameter type='java.io.InputStream' name='stream'/><parameter type='boolean' name='verify'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarInputStream' name='JarInputStream'><parameter type='java.io.InputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.util.jar.Manifest' name='getManifest'/><method return='java.util.jar.JarEntry' name='getNextJarEntry'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.util.zip.ZipOutputStream' name='JarOutputStream'><constructor type='java.util.jar.JarOutputStream' name='JarOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.util.jar.Manifest' name='mf'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.JarOutputStream' name='JarOutputStream'><parameter type='java.io.OutputStream' name='os'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.lang.Object' name='Manifest'><constructor type='java.util.jar.Manifest' name='Manifest'/><constructor type='java.util.jar.Manifest' name='Manifest'><parameter type='java.io.InputStream' name='is'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.jar.Manifest' name='Manifest'><parameter type='java.util.jar.Manifest' name='man'/></constructor><method name='clear'/><method return='java.lang.Object' name='clone'/><method return='java.util.jar.Attributes' name='getAttributes'><parameter type='java.lang.String' name='name'/></method><method return='java.util.Map&lt;java.lang.String, java.util.jar.Attributes&gt;' name='getEntries'/><method return='java.util.jar.Attributes' name='getMainAttributes'/><method name='read'><parameter type='java.io.InputStream' name='is'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='java.io.OutputStream' name='os'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='Pack200'><method return='java.util.jar.Pack200.Packer' static='true' name='newPacker'/><method return='java.util.jar.Pack200.Unpacker' static='true' name='newUnpacker'/></class><interface abstract='true' static='true' name='Pack200.Packer'><method abstract='true' name='pack'><parameter type='java.util.jar.JarFile' name='in'/><parameter type='java.io.OutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='pack'><parameter type='java.util.jar.JarInputStream' name='in'/><parameter type='java.io.OutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.SortedMap&lt;java.lang.String, java.lang.String&gt;' abstract='true' name='properties'/><method abstract='true' name='addPropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method><method abstract='true' name='removePropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method></interface><interface abstract='true' static='true' name='Pack200.Unpacker'><method return='java.util.SortedMap&lt;java.lang.String, java.lang.String&gt;' abstract='true' name='properties'/><method abstract='true' name='unpack'><parameter type='java.io.InputStream' name='in'/><parameter type='java.util.jar.JarOutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='unpack'><parameter type='java.io.File' name='in'/><parameter type='java.util.jar.JarOutputStream' name='out'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='addPropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method><method abstract='true' name='removePropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method></interface></package><package name='java.util.logging'><class extends='java.util.logging.StreamHandler' name='ConsoleHandler'><constructor type='java.util.logging.ConsoleHandler' name='ConsoleHandler'/></class><class extends='java.lang.Object' name='ErrorManager'><constructor type='java.util.logging.ErrorManager' name='ErrorManager'/><method name='error'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Exception' name='exception'/><parameter type='int' name='errorCode'/></method></class><class extends='java.util.logging.StreamHandler' name='FileHandler'><constructor type='java.util.logging.FileHandler' name='FileHandler'><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.logging.FileHandler' name='FileHandler'><parameter type='java.lang.String' name='pattern'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.logging.FileHandler' name='FileHandler'><parameter type='java.lang.String' name='pattern'/><parameter type='boolean' name='append'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.logging.FileHandler' name='FileHandler'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='limit'/><parameter type='int' name='count'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.logging.FileHandler' name='FileHandler'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='limit'/><parameter type='int' name='count'/><parameter type='boolean' name='append'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.lang.Object' abstract='true' name='Formatter'><constructor visibility='protected' type='java.util.logging.Formatter' name='Formatter'/><method return='java.lang.String' abstract='true' name='format'><parameter type='java.util.logging.LogRecord' name='r'/></method><method return='java.lang.String' name='formatMessage'><parameter type='java.util.logging.LogRecord' name='r'/></method><method return='java.lang.String' name='getHead'><parameter type='java.util.logging.Handler' name='h'/></method><method return='java.lang.String' name='getTail'><parameter type='java.util.logging.Handler' name='h'/></method></class><class extends='java.lang.Object' abstract='true' name='Handler'><constructor visibility='protected' type='java.util.logging.Handler' name='Handler'/><method abstract='true' name='close'/><method abstract='true' name='flush'/><method return='java.lang.String' name='getEncoding'/><method return='java.util.logging.ErrorManager' name='getErrorManager'/><method return='java.util.logging.Filter' name='getFilter'/><method return='java.util.logging.Formatter' name='getFormatter'/><method return='java.util.logging.Level' name='getLevel'/><method return='boolean' name='isLoggable'><parameter type='java.util.logging.LogRecord' name='record'/></method><method abstract='true' name='publish'><parameter type='java.util.logging.LogRecord' name='record'/></method><method visibility='protected' name='reportError'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Exception' name='ex'/><parameter type='int' name='code'/></method><method name='setEncoding'><parameter type='java.lang.String' name='encoding'/><exception type='java.lang.SecurityException' name='SecurityException'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></method><method name='setErrorManager'><parameter type='java.util.logging.ErrorManager' name='em'/></method><method name='setFilter'><parameter type='java.util.logging.Filter' name='newFilter'/></method><method name='setFormatter'><parameter type='java.util.logging.Formatter' name='newFormatter'/></method><method name='setLevel'><parameter type='java.util.logging.Level' name='newLevel'/></method></class><class extends='java.lang.Object' name='Level'><constructor visibility='protected' type='java.util.logging.Level' name='Level'><parameter type='java.lang.String' name='name'/><parameter type='int' name='level'/></constructor><constructor visibility='protected' type='java.util.logging.Level' name='Level'><parameter type='java.lang.String' name='name'/><parameter type='int' name='level'/><parameter type='java.lang.String' name='resourceBundleName'/></constructor><method return='java.lang.String' name='getLocalizedName'/><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getResourceBundleName'/><method return='int' name='intValue' final='true'/><method return='java.util.logging.Level' static='true' name='parse' final='true'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Object' name='LogManager'><constructor visibility='protected' type='java.util.logging.LogManager' name='LogManager'/><method return='boolean' synchronized='true' name='addLogger'><parameter type='java.util.logging.Logger' name='logger'/></method><method name='checkAccess'/><method return='java.util.logging.LogManager' static='true' name='getLogManager'/><method return='java.util.logging.Logger' synchronized='true' name='getLogger'><parameter type='java.lang.String' name='name'/></method><method return='java.util.Enumeration&lt;java.lang.String&gt;' synchronized='true' name='getLoggerNames'/><method return='java.lang.String' name='getProperty'><parameter type='java.lang.String' name='name'/></method><method name='readConfiguration'><exception type='java.io.IOException' name='IOException'/></method><method name='readConfiguration'><parameter type='java.io.InputStream' name='ins'/><exception type='java.io.IOException' name='IOException'/></method><method name='reset'/><method name='addPropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='l'/></method><method return='java.util.logging.LoggingMXBean' static='true' name='getLoggingMXBean' api_added='3'/><method name='removePropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='l'/></method></class><class extends='java.lang.Object' name='LogRecord'><constructor type='java.util.logging.LogRecord' name='LogRecord'><parameter type='java.util.logging.Level' name='level'/><parameter type='java.lang.String' name='msg'/></constructor><method return='java.util.logging.Level' name='getLevel'/><method return='java.lang.String' name='getLoggerName'/><method return='java.lang.String' name='getMessage'/><method return='long' name='getMillis'/><method return='java.lang.Object[]' name='getParameters'/><method return='java.util.ResourceBundle' name='getResourceBundle'/><method return='java.lang.String' name='getResourceBundleName'/><method return='long' name='getSequenceNumber'/><method return='java.lang.String' name='getSourceClassName'/><method return='java.lang.String' name='getSourceMethodName'/><method return='int' name='getThreadID'/><method return='java.lang.Throwable' name='getThrown'/><method name='setLevel'><parameter type='java.util.logging.Level' name='level'/></method><method name='setLoggerName'><parameter type='java.lang.String' name='loggerName'/></method><method name='setMessage'><parameter type='java.lang.String' name='message'/></method><method name='setMillis'><parameter type='long' name='millis'/></method><method name='setParameters'><parameter type='java.lang.Object[]' name='parameters'/></method><method name='setResourceBundle'><parameter type='java.util.ResourceBundle' name='resourceBundle'/></method><method name='setResourceBundleName'><parameter type='java.lang.String' name='resourceBundleName'/></method><method name='setSequenceNumber'><parameter type='long' name='sequenceNumber'/></method><method name='setSourceClassName'><parameter type='java.lang.String' name='sourceClassName'/></method><method name='setSourceMethodName'><parameter type='java.lang.String' name='sourceMethodName'/></method><method name='setThreadID'><parameter type='int' name='threadID'/></method><method name='setThrown'><parameter type='java.lang.Throwable' name='thrown'/></method></class><class extends='java.lang.Object' name='Logger'><constructor visibility='protected' type='java.util.logging.Logger' name='Logger'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='resourceBundleName'/></constructor><method name='addHandler'><parameter type='java.util.logging.Handler' name='handler'/></method><method name='config'><parameter type='java.lang.String' name='msg'/></method><method name='entering'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/></method><method name='entering'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.Object' name='param'/></method><method name='entering'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.Object[]' name='params'/></method><method name='exiting'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/></method><method name='exiting'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.Object' name='result'/></method><method name='fine'><parameter type='java.lang.String' name='msg'/></method><method name='finer'><parameter type='java.lang.String' name='msg'/></method><method name='finest'><parameter type='java.lang.String' name='msg'/></method><method return='java.util.logging.Logger' static='true' name='getAnonymousLogger'/><method return='java.util.logging.Logger' static='true' name='getAnonymousLogger'><parameter type='java.lang.String' name='resourceBundleName'/></method><method return='java.util.logging.Filter' name='getFilter'/><method return='java.util.logging.Handler[]' name='getHandlers'/><method return='java.util.logging.Level' name='getLevel'/><method return='java.util.logging.Logger' static='true' name='getLogger'><parameter type='java.lang.String' name='name'/></method><method return='java.util.logging.Logger' static='true' name='getLogger'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='resourceBundleName'/></method><method return='java.lang.String' name='getName'/><method return='java.util.logging.Logger' name='getParent'/><method return='java.util.ResourceBundle' name='getResourceBundle'/><method return='java.lang.String' name='getResourceBundleName'/><method return='boolean' name='getUseParentHandlers'/><method name='info'><parameter type='java.lang.String' name='msg'/></method><method return='boolean' name='isLoggable'><parameter type='java.util.logging.Level' name='l'/></method><method name='log'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='msg'/></method><method name='log'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object' name='param'/></method><method name='log'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object[]' name='params'/></method><method name='log'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='thrown'/></method><method name='log'><parameter type='java.util.logging.LogRecord' name='record'/></method><method name='logp'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='msg'/></method><method name='logp'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object' name='param'/></method><method name='logp'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object[]' name='params'/></method><method name='logp'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='thrown'/></method><method name='logrb'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='bundleName'/><parameter type='java.lang.String' name='msg'/></method><method name='logrb'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='bundleName'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object' name='param'/></method><method name='logrb'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='bundleName'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Object[]' name='params'/></method><method name='logrb'><parameter type='java.util.logging.Level' name='logLevel'/><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.String' name='bundleName'/><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='thrown'/></method><method name='removeHandler'><parameter type='java.util.logging.Handler' name='handler'/></method><method name='setFilter'><parameter type='java.util.logging.Filter' name='newFilter'/></method><method name='setLevel'><parameter type='java.util.logging.Level' name='newLevel'/></method><method name='setParent'><parameter type='java.util.logging.Logger' name='parent'/></method><method name='setUseParentHandlers'><parameter type='boolean' name='notifyParentHandlers'/></method><method name='severe'><parameter type='java.lang.String' name='msg'/></method><method name='throwing'><parameter type='java.lang.String' name='sourceClass'/><parameter type='java.lang.String' name='sourceMethod'/><parameter type='java.lang.Throwable' name='thrown'/></method><method name='warning'><parameter type='java.lang.String' name='msg'/></method></class><class extends='java.security.BasicPermission' name='LoggingPermission' final='true'><constructor type='java.util.logging.LoggingPermission' name='LoggingPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.util.logging.Handler' name='MemoryHandler'><constructor type='java.util.logging.MemoryHandler' name='MemoryHandler'/><constructor type='java.util.logging.MemoryHandler' name='MemoryHandler'><parameter type='java.util.logging.Handler' name='target'/><parameter type='int' name='size'/><parameter type='java.util.logging.Level' name='pushLevel'/></constructor><method name='close'/><method name='flush'/><method return='java.util.logging.Level' name='getPushLevel'/><method synchronized='true' name='publish'><parameter type='java.util.logging.LogRecord' name='record'/></method><method name='push'/><method name='setPushLevel'><parameter type='java.util.logging.Level' name='newLevel'/></method></class><class extends='java.util.logging.Formatter' name='SimpleFormatter'><constructor type='java.util.logging.SimpleFormatter' name='SimpleFormatter'/><method return='java.lang.String' name='format'><parameter type='java.util.logging.LogRecord' name='r'/></method></class><class extends='java.util.logging.StreamHandler' name='SocketHandler'><constructor type='java.util.logging.SocketHandler' name='SocketHandler'><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.logging.SocketHandler' name='SocketHandler'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.util.logging.Handler' name='StreamHandler'><constructor type='java.util.logging.StreamHandler' name='StreamHandler'/><constructor type='java.util.logging.StreamHandler' name='StreamHandler'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.util.logging.Formatter' name='formatter'/></constructor><method name='close'/><method name='flush'/><method synchronized='true' name='publish'><parameter type='java.util.logging.LogRecord' name='record'/></method><method visibility='protected' name='setOutputStream'><parameter type='java.io.OutputStream' name='os'/></method></class><class extends='java.util.logging.Formatter' name='XMLFormatter'><constructor type='java.util.logging.XMLFormatter' name='XMLFormatter'/><method return='java.lang.String' name='format'><parameter type='java.util.logging.LogRecord' name='r'/></method></class><interface abstract='true' name='Filter'><method return='boolean' abstract='true' name='isLoggable'><parameter type='java.util.logging.LogRecord' name='record'/></method></interface><interface abstract='true' name='LoggingMXBean'><method return='java.lang.String' abstract='true' name='getLoggerLevel'><parameter type='java.lang.String' name='loggerName'/></method><method return='java.util.List&lt;java.lang.String&gt;' abstract='true' name='getLoggerNames'/><method return='java.lang.String' abstract='true' name='getParentLoggerName'><parameter type='java.lang.String' name='loggerName'/></method><method abstract='true' name='setLoggerLevel'><parameter type='java.lang.String' name='loggerName'/><parameter type='java.lang.String' name='levelName'/></method></interface></package><package name='java.util.prefs'><class extends='java.util.prefs.Preferences' abstract='true' name='AbstractPreferences'><constructor visibility='protected' type='java.util.prefs.AbstractPreferences' name='AbstractPreferences'><parameter type='java.util.prefs.AbstractPreferences' name='parent'/><parameter type='java.lang.String' name='name'/></constructor><method return='java.lang.String' name='absolutePath'/><method name='addNodeChangeListener'><parameter type='java.util.prefs.NodeChangeListener' name='ncl'/></method><method name='addPreferenceChangeListener'><parameter type='java.util.prefs.PreferenceChangeListener' name='pcl'/></method><method visibility='protected' return='java.util.prefs.AbstractPreferences[]' name='cachedChildren' final='true'/><method visibility='protected' return='java.util.prefs.AbstractPreferences' abstract='true' name='childSpi'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String[]' name='childrenNames'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method visibility='protected' return='java.lang.String[]' abstract='true' name='childrenNamesSpi'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method name='clear'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method name='exportNode'><parameter type='java.io.OutputStream' name='ostream'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/><exception type='java.io.IOException' name='IOException'/></method><method name='exportSubtree'><parameter type='java.io.OutputStream' name='ostream'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method visibility='protected' abstract='true' name='flushSpi'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.lang.String' name='get'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='deflt'/></method><method return='boolean' name='getBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='deflt'/></method><method return='byte[]' name='getByteArray'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='deflt'/></method><method visibility='protected' return='java.util.prefs.AbstractPreferences' name='getChild'><parameter type='java.lang.String' name='name'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='double' name='getDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='deflt'/></method><method return='float' name='getFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='deflt'/></method><method return='int' name='getInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='deflt'/></method><method return='long' name='getLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='deflt'/></method><method visibility='protected' return='java.lang.String' abstract='true' name='getSpi'><parameter type='java.lang.String' name='key'/></method><method visibility='protected' return='boolean' name='isRemoved'/><method return='boolean' name='isUserNode'/><method return='java.lang.String[]' name='keys'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method visibility='protected' return='java.lang.String[]' abstract='true' name='keysSpi'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.lang.String' name='name'/><method return='java.util.prefs.Preferences' name='node'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='nodeExists'><parameter type='java.lang.String' name='name'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.util.prefs.Preferences' name='parent'/><method name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method name='putBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='value'/></method><method name='putByteArray'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='value'/></method><method name='putDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='value'/></method><method name='putFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='value'/></method><method name='putInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/></method><method name='putLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='value'/></method><method visibility='protected' abstract='true' name='putSpi'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method name='remove'><parameter type='java.lang.String' name='key'/></method><method name='removeNode'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method name='removeNodeChangeListener'><parameter type='java.util.prefs.NodeChangeListener' name='ncl'/></method><method visibility='protected' abstract='true' name='removeNodeSpi'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method name='removePreferenceChangeListener'><parameter type='java.util.prefs.PreferenceChangeListener' name='pcl'/></method><method visibility='protected' abstract='true' name='removeSpi'><parameter type='java.lang.String' name='key'/></method><method name='sync'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method visibility='protected' abstract='true' name='syncSpi'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.lang.String' name='toString'/></class><class extends='java.lang.Exception' name='BackingStoreException'><constructor type='java.util.prefs.BackingStoreException' name='BackingStoreException'><parameter type='java.lang.String' name='s'/></constructor><constructor type='java.util.prefs.BackingStoreException' name='BackingStoreException'><parameter type='java.lang.Throwable' name='t'/></constructor></class><class extends='java.lang.Exception' name='InvalidPreferencesFormatException'><constructor type='java.util.prefs.InvalidPreferencesFormatException' name='InvalidPreferencesFormatException'><parameter type='java.lang.String' name='s'/></constructor><constructor type='java.util.prefs.InvalidPreferencesFormatException' name='InvalidPreferencesFormatException'><parameter type='java.lang.String' name='s'/><parameter type='java.lang.Throwable' name='t'/></constructor><constructor type='java.util.prefs.InvalidPreferencesFormatException' name='InvalidPreferencesFormatException'><parameter type='java.lang.Throwable' name='t'/></constructor></class><class extends='java.util.EventObject' name='NodeChangeEvent'><constructor type='java.util.prefs.NodeChangeEvent' name='NodeChangeEvent'><parameter type='java.util.prefs.Preferences' name='p'/><parameter type='java.util.prefs.Preferences' name='c'/></constructor><method return='java.util.prefs.Preferences' name='getChild'/><method return='java.util.prefs.Preferences' name='getParent'/></class><class extends='java.util.EventObject' name='PreferenceChangeEvent'><constructor type='java.util.prefs.PreferenceChangeEvent' name='PreferenceChangeEvent'><parameter type='java.util.prefs.Preferences' name='p'/><parameter type='java.lang.String' name='k'/><parameter type='java.lang.String' name='v'/></constructor><method return='java.lang.String' name='getKey'/><method return='java.lang.String' name='getNewValue'/><method return='java.util.prefs.Preferences' name='getNode'/></class><class extends='java.lang.Object' abstract='true' name='Preferences'><constructor visibility='protected' type='java.util.prefs.Preferences' name='Preferences'/><method return='java.lang.String' abstract='true' name='absolutePath'/><method abstract='true' name='addNodeChangeListener'><parameter type='java.util.prefs.NodeChangeListener' name='ncl'/></method><method abstract='true' name='addPreferenceChangeListener'><parameter type='java.util.prefs.PreferenceChangeListener' name='pcl'/></method><method return='java.lang.String[]' abstract='true' name='childrenNames'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method abstract='true' name='clear'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method abstract='true' name='exportNode'><parameter type='java.io.OutputStream' name='ostream'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='exportSubtree'><parameter type='java.io.OutputStream' name='ostream'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='flush'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.lang.String' abstract='true' name='get'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='deflt'/></method><method return='boolean' abstract='true' name='getBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='deflt'/></method><method return='byte[]' abstract='true' name='getByteArray'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='deflt'/></method><method return='double' abstract='true' name='getDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='deflt'/></method><method return='float' abstract='true' name='getFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='deflt'/></method><method return='int' abstract='true' name='getInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='deflt'/></method><method return='long' abstract='true' name='getLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='deflt'/></method><method static='true' name='importPreferences'><parameter type='java.io.InputStream' name='istream'/><exception type='java.io.IOException' name='IOException'/><exception type='java.util.prefs.InvalidPreferencesFormatException' name='InvalidPreferencesFormatException'/></method><method return='boolean' abstract='true' name='isUserNode'/><method return='java.lang.String[]' abstract='true' name='keys'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.lang.String' abstract='true' name='name'/><method return='java.util.prefs.Preferences' abstract='true' name='node'><parameter type='java.lang.String' name='path'/></method><method return='boolean' abstract='true' name='nodeExists'><parameter type='java.lang.String' name='path'/><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.util.prefs.Preferences' abstract='true' name='parent'/><method abstract='true' name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method abstract='true' name='putBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='value'/></method><method abstract='true' name='putByteArray'><parameter type='java.lang.String' name='key'/><parameter type='byte[]' name='value'/></method><method abstract='true' name='putDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='value'/></method><method abstract='true' name='putFloat'><parameter type='java.lang.String' name='key'/><parameter type='float' name='value'/></method><method abstract='true' name='putInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/></method><method abstract='true' name='putLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='value'/></method><method abstract='true' name='remove'><parameter type='java.lang.String' name='key'/></method><method abstract='true' name='removeNode'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method abstract='true' name='removeNodeChangeListener'><parameter type='java.util.prefs.NodeChangeListener' name='ncl'/></method><method abstract='true' name='removePreferenceChangeListener'><parameter type='java.util.prefs.PreferenceChangeListener' name='pcl'/></method><method abstract='true' name='sync'><exception type='java.util.prefs.BackingStoreException' name='BackingStoreException'/></method><method return='java.util.prefs.Preferences' static='true' name='systemNodeForPackage'><parameter type='java.lang.Class&lt;?&gt;' name='c'/></method><method return='java.util.prefs.Preferences' static='true' name='systemRoot'/><method return='java.lang.String' abstract='true' name='toString'/><method return='java.util.prefs.Preferences' static='true' name='userNodeForPackage'><parameter type='java.lang.Class&lt;?&gt;' name='c'/></method><method return='java.util.prefs.Preferences' static='true' name='userRoot'/></class><interface abstract='true' name='NodeChangeListener'><method abstract='true' name='childAdded'><parameter type='java.util.prefs.NodeChangeEvent' name='e'/></method><method abstract='true' name='childRemoved'><parameter type='java.util.prefs.NodeChangeEvent' name='e'/></method></interface><interface abstract='true' name='PreferenceChangeListener'><method abstract='true' name='preferenceChange'><parameter type='java.util.prefs.PreferenceChangeEvent' name='pce'/></method></interface><interface abstract='true' name='PreferencesFactory'><method return='java.util.prefs.Preferences' abstract='true' name='systemRoot'/><method return='java.util.prefs.Preferences' abstract='true' name='userRoot'/></interface></package><package name='java.util.regex'><class extends='java.lang.Object' name='Matcher' final='true'><method return='java.util.regex.Matcher' name='appendReplacement'><parameter type='java.lang.StringBuffer' name='buffer'/><parameter type='java.lang.String' name='replacement'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.lang.StringBuffer' name='appendTail'><parameter type='java.lang.StringBuffer' name='buffer'/></method><method return='int' name='end'/><method return='int' name='end'><parameter type='int' name='group'/></method><method return='boolean' name='find'/><method return='boolean' name='find'><parameter type='int' name='start'/></method><method return='java.lang.String' name='group'/><method return='java.lang.String' name='group'><parameter type='int' name='group'/></method><method return='int' name='groupCount'/><method return='boolean' name='hasAnchoringBounds'/><method return='boolean' name='hasTransparentBounds'/><method return='boolean' name='hitEnd'/><method return='boolean' name='lookingAt'/><method return='boolean' name='matches'/><method return='java.util.regex.Pattern' name='pattern'/><method return='java.lang.String' static='true' name='quoteReplacement'><parameter type='java.lang.String' name='s'/></method><method return='java.util.regex.Matcher' name='region'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='int' name='regionEnd'/><method return='int' name='regionStart'/><method return='java.lang.String' name='replaceAll'><parameter type='java.lang.String' name='replacement'/></method><method return='java.lang.String' name='replaceFirst'><parameter type='java.lang.String' name='replacement'/></method><method return='boolean' name='requireEnd'/><method return='java.util.regex.Matcher' name='reset'/><method return='java.util.regex.Matcher' name='reset'><parameter type='java.lang.CharSequence' name='input'/></method><method return='int' name='start'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='start'><parameter type='int' name='group'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.util.regex.MatchResult' name='toMatchResult'/><method return='java.util.regex.Matcher' name='useAnchoringBounds'><parameter type='boolean' name='value'/></method><method return='java.util.regex.Matcher' name='usePattern'><parameter type='java.util.regex.Pattern' name='pattern'/></method><method return='java.util.regex.Matcher' name='useTransparentBounds'><parameter type='boolean' name='value'/></method></class><class extends='java.lang.Object' name='Pattern' final='true'><method return='java.util.regex.Pattern' static='true' name='compile'><parameter type='java.lang.String' name='pattern'/><exception type='java.util.regex.PatternSyntaxException' name='PatternSyntaxException'/></method><method return='java.util.regex.Pattern' static='true' name='compile'><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='flags'/><exception type='java.util.regex.PatternSyntaxException' name='PatternSyntaxException'/></method><method return='int' name='flags'/><method return='java.util.regex.Matcher' name='matcher'><parameter type='java.lang.CharSequence' name='input'/></method><method return='boolean' static='true' name='matches'><parameter type='java.lang.String' name='regex'/><parameter type='java.lang.CharSequence' name='input'/></method><method return='java.lang.String' name='pattern'/><method return='java.lang.String' static='true' name='quote'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String[]' name='split'><parameter type='java.lang.CharSequence' name='input'/></method><method return='java.lang.String[]' name='split'><parameter type='java.lang.CharSequence' name='inputSeq'/><parameter type='int' name='limit'/></method></class><class extends='java.lang.IllegalArgumentException' name='PatternSyntaxException'><constructor type='java.util.regex.PatternSyntaxException' name='PatternSyntaxException'><parameter type='java.lang.String' name='description'/><parameter type='java.lang.String' name='pattern'/><parameter type='int' name='index'/></constructor><method return='java.lang.String' name='getDescription'/><method return='int' name='getIndex'/><method return='java.lang.String' name='getPattern'/></class><interface abstract='true' name='MatchResult'><method return='int' abstract='true' name='end'/><method return='int' abstract='true' name='end'><parameter type='int' name='group'/></method><method return='java.lang.String' abstract='true' name='group'/><method return='java.lang.String' abstract='true' name='group'><parameter type='int' name='group'/></method><method return='int' abstract='true' name='groupCount'/><method return='int' abstract='true' name='start'/><method return='int' abstract='true' name='start'><parameter type='int' name='group'/></method></interface></package><package name='java.util.zip'><class extends='java.lang.Object' name='Adler32'><constructor type='java.util.zip.Adler32' name='Adler32'/><method return='long' name='getValue'/><method name='reset'/><method name='update'><parameter type='int' name='i'/></method><method name='update'><parameter type='byte[]' name='buf'/></method><method name='update'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method></class><class extends='java.lang.Object' name='CRC32'><constructor type='java.util.zip.CRC32' name='CRC32'/><method return='long' name='getValue'/><method name='reset'/><method name='update'><parameter type='int' name='val'/></method><method name='update'><parameter type='byte[]' name='buf'/></method><method name='update'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method></class><class extends='java.io.FilterInputStream' name='CheckedInputStream'><constructor type='java.util.zip.CheckedInputStream' name='CheckedInputStream'><parameter type='java.io.InputStream' name='is'/><parameter type='java.util.zip.Checksum' name='csum'/></constructor><method return='java.util.zip.Checksum' name='getChecksum'/></class><class extends='java.io.FilterOutputStream' name='CheckedOutputStream'><constructor type='java.util.zip.CheckedOutputStream' name='CheckedOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.util.zip.Checksum' name='cs'/></constructor><method return='java.util.zip.Checksum' name='getChecksum'/></class><class extends='java.lang.Exception' name='DataFormatException'><constructor type='java.util.zip.DataFormatException' name='DataFormatException'/><constructor type='java.util.zip.DataFormatException' name='DataFormatException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='Deflater'><constructor type='java.util.zip.Deflater' name='Deflater'/><constructor type='java.util.zip.Deflater' name='Deflater'><parameter type='int' name='level'/></constructor><constructor type='java.util.zip.Deflater' name='Deflater'><parameter type='int' name='level'/><parameter type='boolean' name='noHeader'/></constructor><method return='int' name='deflate'><parameter type='byte[]' name='buf'/></method><method return='int' synchronized='true' name='deflate'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method><method synchronized='true' name='end'/><method synchronized='true' name='finish'/><method return='boolean' synchronized='true' name='finished'/><method return='int' synchronized='true' name='getAdler'/><method return='long' synchronized='true' name='getBytesRead'/><method return='long' synchronized='true' name='getBytesWritten'/><method return='int' synchronized='true' name='getTotalIn'/><method return='int' synchronized='true' name='getTotalOut'/><method return='boolean' synchronized='true' name='needsInput'/><method synchronized='true' name='reset'/><method name='setDictionary'><parameter type='byte[]' name='buf'/></method><method synchronized='true' name='setDictionary'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method><method name='setInput'><parameter type='byte[]' name='buf'/></method><method synchronized='true' name='setInput'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method><method synchronized='true' name='setLevel'><parameter type='int' name='level'/></method><method synchronized='true' name='setStrategy'><parameter type='int' name='strategy'/></method></class><class extends='java.io.FilterOutputStream' name='DeflaterOutputStream'><constructor type='java.util.zip.DeflaterOutputStream' name='DeflaterOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.util.zip.Deflater' name='def'/></constructor><constructor type='java.util.zip.DeflaterOutputStream' name='DeflaterOutputStream'><parameter type='java.io.OutputStream' name='os'/></constructor><constructor type='java.util.zip.DeflaterOutputStream' name='DeflaterOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.util.zip.Deflater' name='def'/><parameter type='int' name='bsize'/></constructor><method visibility='protected' name='deflate'><exception type='java.io.IOException' name='IOException'/></method><method name='finish'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.util.zip.InflaterInputStream' name='GZIPInputStream'><constructor type='java.util.zip.GZIPInputStream' name='GZIPInputStream'><parameter type='java.io.InputStream' name='is'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.zip.GZIPInputStream' name='GZIPInputStream'><parameter type='java.io.InputStream' name='is'/><parameter type='int' name='size'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.util.zip.DeflaterOutputStream' name='GZIPOutputStream'><constructor type='java.util.zip.GZIPOutputStream' name='GZIPOutputStream'><parameter type='java.io.OutputStream' name='os'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.zip.GZIPOutputStream' name='GZIPOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='int' name='size'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='java.lang.Object' name='Inflater'><constructor type='java.util.zip.Inflater' name='Inflater'/><constructor type='java.util.zip.Inflater' name='Inflater'><parameter type='boolean' name='noHeader'/></constructor><method synchronized='true' name='end'/><method return='boolean' synchronized='true' name='finished'/><method return='int' synchronized='true' name='getAdler'/><method return='long' synchronized='true' name='getBytesRead'/><method return='long' synchronized='true' name='getBytesWritten'/><method return='int' synchronized='true' name='getRemaining'/><method return='int' synchronized='true' name='getTotalIn'/><method return='int' synchronized='true' name='getTotalOut'/><method return='int' name='inflate'><parameter type='byte[]' name='buf'/><exception type='java.util.zip.DataFormatException' name='DataFormatException'/></method><method return='int' synchronized='true' name='inflate'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/><exception type='java.util.zip.DataFormatException' name='DataFormatException'/></method><method return='boolean' synchronized='true' name='needsDictionary'/><method return='boolean' synchronized='true' name='needsInput'/><method synchronized='true' name='reset'/><method synchronized='true' name='setDictionary'><parameter type='byte[]' name='buf'/></method><method synchronized='true' name='setDictionary'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method><method synchronized='true' name='setInput'><parameter type='byte[]' name='buf'/></method><method synchronized='true' name='setInput'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method></class><class extends='java.io.FilterInputStream' name='InflaterInputStream'><constructor type='java.util.zip.InflaterInputStream' name='InflaterInputStream'><parameter type='java.io.InputStream' name='is'/></constructor><constructor type='java.util.zip.InflaterInputStream' name='InflaterInputStream'><parameter type='java.io.InputStream' name='is'/><parameter type='java.util.zip.Inflater' name='inf'/></constructor><constructor type='java.util.zip.InflaterInputStream' name='InflaterInputStream'><parameter type='java.io.InputStream' name='is'/><parameter type='java.util.zip.Inflater' name='inf'/><parameter type='int' name='bsize'/></constructor><method visibility='protected' name='fill'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ZipEntry'><constructor type='java.util.zip.ZipEntry' name='ZipEntry'><parameter type='java.lang.String' name='name'/></constructor><constructor type='java.util.zip.ZipEntry' name='ZipEntry'><parameter type='java.util.zip.ZipEntry' name='ze'/></constructor><method return='java.lang.Object' name='clone'/><method return='java.lang.String' name='getComment'/><method return='long' name='getCompressedSize'/><method return='long' name='getCrc'/><method return='byte[]' name='getExtra'/><method return='int' name='getMethod'/><method return='java.lang.String' name='getName'/><method return='long' name='getSize'/><method return='long' name='getTime'/><method return='boolean' name='isDirectory'/><method name='setComment'><parameter type='java.lang.String' name='string'/></method><method name='setCompressedSize'><parameter type='long' name='value'/></method><method name='setCrc'><parameter type='long' name='value'/></method><method name='setExtra'><parameter type='byte[]' name='data'/></method><method name='setMethod'><parameter type='int' name='value'/></method><method name='setSize'><parameter type='long' name='value'/></method><method name='setTime'><parameter type='long' name='value'/></method></class><class extends='java.io.IOException' name='ZipException'><constructor type='java.util.zip.ZipException' name='ZipException'/><constructor type='java.util.zip.ZipException' name='ZipException'><parameter type='java.lang.String' name='detailMessage'/></constructor></class><class extends='java.lang.Object' name='ZipFile'><constructor type='java.util.zip.ZipFile' name='ZipFile'><parameter type='java.io.File' name='file'/><exception type='java.io.IOException' name='IOException'/><exception type='java.util.zip.ZipException' name='ZipException'/></constructor><constructor type='java.util.zip.ZipFile' name='ZipFile'><parameter type='java.io.File' name='file'/><parameter type='int' name='mode'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='java.util.zip.ZipFile' name='ZipFile'><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.Enumeration&lt;? extends java.util.zip.ZipEntry&gt;' name='entries'/><method return='java.util.zip.ZipEntry' name='getEntry'><parameter type='java.lang.String' name='entryName'/></method><method return='java.io.InputStream' name='getInputStream'><parameter type='java.util.zip.ZipEntry' name='entry'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getName'/><method return='int' name='size'/></class><class extends='java.util.zip.InflaterInputStream' name='ZipInputStream'><constructor type='java.util.zip.ZipInputStream' name='ZipInputStream'><parameter type='java.io.InputStream' name='stream'/></constructor><method name='closeEntry'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='java.util.zip.ZipEntry' name='createZipEntry'><parameter type='java.lang.String' name='name'/></method><method return='java.util.zip.ZipEntry' name='getNextEntry'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.util.zip.DeflaterOutputStream' name='ZipOutputStream'><constructor type='java.util.zip.ZipOutputStream' name='ZipOutputStream'><parameter type='java.io.OutputStream' name='p1'/></constructor><method name='closeEntry'><exception type='java.io.IOException' name='IOException'/></method><method name='putNextEntry'><parameter type='java.util.zip.ZipEntry' name='ze'/><exception type='java.io.IOException' name='IOException'/></method><method name='setComment'><parameter type='java.lang.String' name='comment'/></method><method name='setLevel'><parameter type='int' name='level'/></method><method name='setMethod'><parameter type='int' name='method'/></method></class><class extends='java.io.FilterInputStream' name='DeflaterInputStream' api_added='9'><constructor type='java.util.zip.DeflaterInputStream' name='DeflaterInputStream' api_added='9'><parameter type='java.io.InputStream' name='in'/></constructor><constructor type='java.util.zip.DeflaterInputStream' name='DeflaterInputStream' api_added='9'><parameter type='java.io.InputStream' name='in'/><parameter type='java.util.zip.Deflater' name='deflater'/></constructor><constructor type='java.util.zip.DeflaterInputStream' name='DeflaterInputStream' api_added='9'><parameter type='java.io.InputStream' name='in'/><parameter type='java.util.zip.Deflater' name='deflater'/><parameter type='int' name='bufferSize'/></constructor></class><class extends='java.io.FilterOutputStream' name='InflaterOutputStream' api_added='9'><constructor type='java.util.zip.InflaterOutputStream' name='InflaterOutputStream' api_added='9'><parameter type='java.io.OutputStream' name='out'/></constructor><constructor type='java.util.zip.InflaterOutputStream' name='InflaterOutputStream' api_added='9'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.util.zip.Inflater' name='inf'/></constructor><constructor type='java.util.zip.InflaterOutputStream' name='InflaterOutputStream' api_added='9'><parameter type='java.io.OutputStream' name='out'/><parameter type='java.util.zip.Inflater' name='inf'/><parameter type='int' name='bufferSize'/></constructor><method name='finish' api_added='9'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.InternalError' name='ZipError' api_added='9'><constructor type='java.util.zip.ZipError' name='ZipError' api_added='9'><parameter type='java.lang.String' name='s'/></constructor></class><interface abstract='true' name='Checksum'><method return='long' abstract='true' name='getValue'/><method abstract='true' name='reset'/><method abstract='true' name='update'><parameter type='int' name='val'/></method><method abstract='true' name='update'><parameter type='byte[]' name='buf'/><parameter type='int' name='off'/><parameter type='int' name='nbytes'/></method></interface></package><package name='javax.crypto'><class extends='java.security.GeneralSecurityException' name='BadPaddingException'><constructor type='javax.crypto.BadPaddingException' name='BadPaddingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.crypto.BadPaddingException' name='BadPaddingException'/></class><class extends='java.lang.Object' name='Cipher'><constructor visibility='protected' type='javax.crypto.Cipher' name='Cipher'><parameter type='javax.crypto.CipherSpi' name='cipherSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='transformation'/></constructor><method return='byte[]' name='doFinal' final='true'><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></method><method return='int' name='doFinal' final='true'><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='byte[]' name='doFinal' final='true'><parameter type='byte[]' name='input'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></method><method return='byte[]' name='doFinal' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></method><method return='int' name='doFinal' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='int' name='doFinal' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='int' name='doFinal' final='true'><parameter type='java.nio.ByteBuffer' name='input'/><parameter type='java.nio.ByteBuffer' name='output'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='int' name='getBlockSize' final='true'/><method return='javax.crypto.ExemptionMechanism' name='getExemptionMechanism' final='true'/><method return='byte[]' name='getIV' final='true'/><method return='javax.crypto.Cipher' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='transformation'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'/></method><method return='javax.crypto.Cipher' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='transformation'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.Cipher' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='transformation'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'/></method><method return='int' static='true' name='getMaxAllowedKeyLength' final='true'><parameter type='java.lang.String' name='transformation'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.spec.AlgorithmParameterSpec' static='true' name='getMaxAllowedParameterSpec' final='true'><parameter type='java.lang.String' name='transformation'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='int' name='getOutputSize' final='true'><parameter type='int' name='inputLen'/></method><method return='java.security.AlgorithmParameters' name='getParameters' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.AlgorithmParameters' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.AlgorithmParameters' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.cert.Certificate' name='certificate'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='int' name='opmode'/><parameter type='java.security.cert.Certificate' name='certificate'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method return='java.security.Key' name='unwrap' final='true'><parameter type='byte[]' name='wrappedKey'/><parameter type='java.lang.String' name='wrappedKeyAlgorithm'/><parameter type='int' name='wrappedKeyType'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='byte[]' name='update' final='true'><parameter type='byte[]' name='input'/></method><method return='byte[]' name='update' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/></method><method return='int' name='update' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='int' name='update' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='int' name='update' final='true'><parameter type='java.nio.ByteBuffer' name='input'/><parameter type='java.nio.ByteBuffer' name='output'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='byte[]' name='wrap' final='true'><parameter type='java.security.Key' name='key'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.io.FilterInputStream' name='CipherInputStream'><constructor type='javax.crypto.CipherInputStream' name='CipherInputStream'><parameter type='java.io.InputStream' name='is'/><parameter type='javax.crypto.Cipher' name='c'/></constructor><constructor visibility='protected' type='javax.crypto.CipherInputStream' name='CipherInputStream'><parameter type='java.io.InputStream' name='is'/></constructor></class><class extends='java.io.FilterOutputStream' name='CipherOutputStream'><constructor type='javax.crypto.CipherOutputStream' name='CipherOutputStream'><parameter type='java.io.OutputStream' name='os'/><parameter type='javax.crypto.Cipher' name='c'/></constructor><constructor visibility='protected' type='javax.crypto.CipherOutputStream' name='CipherOutputStream'><parameter type='java.io.OutputStream' name='os'/></constructor></class><class extends='java.lang.Object' abstract='true' name='CipherSpi'><constructor type='javax.crypto.CipherSpi' name='CipherSpi'/><method visibility='protected' return='byte[]' abstract='true' name='engineDoFinal'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></method><method visibility='protected' return='int' abstract='true' name='engineDoFinal'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='int' name='engineDoFinal'><parameter type='java.nio.ByteBuffer' name='input'/><parameter type='java.nio.ByteBuffer' name='output'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='int' abstract='true' name='engineGetBlockSize'/><method visibility='protected' return='byte[]' abstract='true' name='engineGetIV'/><method visibility='protected' return='int' name='engineGetKeySize'><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' return='int' abstract='true' name='engineGetOutputSize'><parameter type='int' name='inputLen'/></method><method visibility='protected' return='java.security.AlgorithmParameters' abstract='true' name='engineGetParameters'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='int' name='opmode'/><parameter type='java.security.Key' name='key'/><parameter type='java.security.AlgorithmParameters' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineSetMode'><parameter type='java.lang.String' name='mode'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method visibility='protected' abstract='true' name='engineSetPadding'><parameter type='java.lang.String' name='padding'/><exception type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'/></method><method visibility='protected' return='java.security.Key' name='engineUnwrap'><parameter type='byte[]' name='wrappedKey'/><parameter type='java.lang.String' name='wrappedKeyAlgorithm'/><parameter type='int' name='wrappedKeyType'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineUpdate'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/></method><method visibility='protected' return='int' abstract='true' name='engineUpdate'><parameter type='byte[]' name='input'/><parameter type='int' name='inputOffset'/><parameter type='int' name='inputLen'/><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='int' name='engineUpdate'><parameter type='java.nio.ByteBuffer' name='input'/><parameter type='java.nio.ByteBuffer' name='output'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='byte[]' name='engineWrap'><parameter type='java.security.Key' name='key'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' name='EncryptedPrivateKeyInfo'><constructor type='javax.crypto.EncryptedPrivateKeyInfo' name='EncryptedPrivateKeyInfo'><parameter type='byte[]' name='encoded'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='javax.crypto.EncryptedPrivateKeyInfo' name='EncryptedPrivateKeyInfo'><parameter type='java.lang.String' name='encrAlgName'/><parameter type='byte[]' name='encryptedData'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></constructor><constructor type='javax.crypto.EncryptedPrivateKeyInfo' name='EncryptedPrivateKeyInfo'><parameter type='java.security.AlgorithmParameters' name='algParams'/><parameter type='byte[]' name='encryptedData'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></constructor><method return='java.lang.String' name='getAlgName'/><method return='java.security.AlgorithmParameters' name='getAlgParameters'/><method return='byte[]' name='getEncoded'><exception type='java.io.IOException' name='IOException'/></method><method return='byte[]' name='getEncryptedData'/><method return='java.security.spec.PKCS8EncodedKeySpec' name='getKeySpec'><parameter type='javax.crypto.Cipher' name='cipher'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.security.spec.PKCS8EncodedKeySpec' name='getKeySpec'><parameter type='java.security.Key' name='decryptKey'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.spec.PKCS8EncodedKeySpec' name='getKeySpec'><parameter type='java.security.Key' name='decryptKey'/><parameter type='java.lang.String' name='providerName'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='java.security.spec.PKCS8EncodedKeySpec' name='getKeySpec'><parameter type='java.security.Key' name='decryptKey'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method></class><class extends='java.lang.Object' name='ExemptionMechanism'><constructor visibility='protected' type='javax.crypto.ExemptionMechanism' name='ExemptionMechanism'><parameter type='javax.crypto.ExemptionMechanismSpi' name='exmechSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='mechanism'/></constructor><method return='byte[]' name='genExemptionBlob' final='true'><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='genExemptionBlob' final='true'><parameter type='byte[]' name='output'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='int' name='genExemptionBlob' final='true'><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='javax.crypto.ExemptionMechanism' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.crypto.ExemptionMechanism' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.ExemptionMechanism' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.lang.String' name='getName' final='true'/><method return='int' name='getOutputSize' final='true'><parameter type='int' name='inputLen'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.Key' name='key'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.AlgorithmParameters' name='param'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='param'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method return='boolean' name='isCryptoAllowed' final='true'><parameter type='java.security.Key' name='key'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/></method></class><class extends='java.security.GeneralSecurityException' name='ExemptionMechanismException'><constructor type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/></class><class extends='java.lang.Object' abstract='true' name='ExemptionMechanismSpi'><constructor type='javax.crypto.ExemptionMechanismSpi' name='ExemptionMechanismSpi'/><method visibility='protected' return='byte[]' abstract='true' name='engineGenExemptionBlob'><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/></method><method visibility='protected' return='int' abstract='true' name='engineGenExemptionBlob'><parameter type='byte[]' name='output'/><parameter type='int' name='outputOffset'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='int' abstract='true' name='engineGetOutputSize'><parameter type='int' name='inputLen'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><parameter type='java.security.AlgorithmParameters' name='params'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='javax.crypto.ExemptionMechanismException' name='ExemptionMechanismException'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.security.GeneralSecurityException' name='IllegalBlockSizeException'><constructor type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></class><class extends='java.lang.Object' name='KeyAgreement'><constructor visibility='protected' type='javax.crypto.KeyAgreement' name='KeyAgreement'><parameter type='javax.crypto.KeyAgreementSpi' name='keyAgreeSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.security.Key' name='doPhase' final='true'><parameter type='java.security.Key' name='key'/><parameter type='boolean' name='lastPhase'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method return='byte[]' name='generateSecret' final='true'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='generateSecret' final='true'><parameter type='byte[]' name='sharedSecret'/><parameter type='int' name='offset'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='javax.crypto.SecretKey' name='generateSecret' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='javax.crypto.KeyAgreement' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.crypto.KeyAgreement' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.KeyAgreement' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' abstract='true' name='KeyAgreementSpi'><constructor type='javax.crypto.KeyAgreementSpi' name='KeyAgreementSpi'/><method visibility='protected' return='java.security.Key' abstract='true' name='engineDoPhase'><parameter type='java.security.Key' name='key'/><parameter type='boolean' name='lastPhase'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineGenerateSecret'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method visibility='protected' return='int' abstract='true' name='engineGenerateSecret'><parameter type='byte[]' name='sharedSecret'/><parameter type='int' name='offset'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method visibility='protected' return='javax.crypto.SecretKey' abstract='true' name='engineGenerateSecret'><parameter type='java.lang.String' name='algorithm'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' name='KeyGenerator'><constructor visibility='protected' type='javax.crypto.KeyGenerator' name='KeyGenerator'><parameter type='javax.crypto.KeyGeneratorSpi' name='keyGenSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='javax.crypto.SecretKey' name='generateKey' final='true'/><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='javax.crypto.KeyGenerator' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.crypto.KeyGenerator' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.KeyGenerator' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter type='int' name='keysize'/></method><method name='init' final='true'><parameter type='int' name='keysize'/><parameter type='java.security.SecureRandom' name='random'/></method><method name='init' final='true'><parameter type='java.security.SecureRandom' name='random'/></method></class><class extends='java.lang.Object' abstract='true' name='KeyGeneratorSpi'><constructor type='javax.crypto.KeyGeneratorSpi' name='KeyGeneratorSpi'/><method visibility='protected' return='javax.crypto.SecretKey' abstract='true' name='engineGenerateKey'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><parameter type='java.security.SecureRandom' name='random'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='int' name='keysize'/><parameter type='java.security.SecureRandom' name='random'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.SecureRandom' name='random'/></method></class><class extends='java.lang.Object' name='Mac'><constructor visibility='protected' type='javax.crypto.Mac' name='Mac'><parameter type='javax.crypto.MacSpi' name='macSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.Object' name='clone' final='true'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='byte[]' name='doFinal' final='true'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='doFinal' final='true'><parameter type='byte[]' name='output'/><parameter type='int' name='outOffset'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='javax.crypto.ShortBufferException' name='ShortBufferException'/></method><method return='byte[]' name='doFinal' final='true'><parameter type='byte[]' name='input'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='javax.crypto.Mac' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.crypto.Mac' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.Mac' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='int' name='getMacLength' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='init' final='true'><parameter type='java.security.Key' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method name='reset' final='true'/><method name='update' final='true'><parameter type='byte' name='input'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='update' final='true'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='update' final='true'><parameter type='byte[]' name='input'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='update' final='true'><parameter type='java.nio.ByteBuffer' name='input'/></method></class><class extends='java.lang.Object' abstract='true' name='MacSpi'><constructor type='javax.crypto.MacSpi' name='MacSpi'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method visibility='protected' return='byte[]' abstract='true' name='engineDoFinal'/><method visibility='protected' return='int' abstract='true' name='engineGetMacLength'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.Key' name='key'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='params'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method visibility='protected' abstract='true' name='engineReset'/><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte' name='input'/></method><method visibility='protected' abstract='true' name='engineUpdate'><parameter type='byte[]' name='input'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></method><method visibility='protected' name='engineUpdate'><parameter type='java.nio.ByteBuffer' name='input'/></method></class><class extends='java.security.GeneralSecurityException' name='NoSuchPaddingException'><constructor type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.crypto.NoSuchPaddingException' name='NoSuchPaddingException'/></class><class extends='javax.crypto.Cipher' name='NullCipher'><constructor type='javax.crypto.NullCipher' name='NullCipher'/></class><class extends='java.lang.Object' name='SealedObject'><constructor type='javax.crypto.SealedObject' name='SealedObject'><parameter type='java.io.Serializable' name='object'/><parameter type='javax.crypto.Cipher' name='c'/><exception type='java.io.IOException' name='IOException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></constructor><constructor visibility='protected' type='javax.crypto.SealedObject' name='SealedObject'><parameter type='javax.crypto.SealedObject' name='so'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.Object' name='getObject' final='true'><parameter type='java.security.Key' name='key'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.lang.Object' name='getObject' final='true'><parameter type='javax.crypto.Cipher' name='c'/><exception type='javax.crypto.BadPaddingException' name='BadPaddingException'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='javax.crypto.IllegalBlockSizeException' name='IllegalBlockSizeException'/></method><method return='java.lang.Object' name='getObject' final='true'><parameter type='java.security.Key' name='key'/><parameter type='java.lang.String' name='provider'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method></class><class extends='java.lang.Object' name='SecretKeyFactory'><constructor visibility='protected' type='javax.crypto.SecretKeyFactory' name='SecretKeyFactory'><parameter type='javax.crypto.SecretKeyFactorySpi' name='keyFacSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='javax.crypto.SecretKey' name='generateSecret' final='true'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='javax.crypto.SecretKeyFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.crypto.SecretKeyFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.crypto.SecretKeyFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.spec.KeySpec' name='getKeySpec' final='true'><parameter type='javax.crypto.SecretKey' name='key'/><parameter type='java.lang.Class' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='javax.crypto.SecretKey' name='translateKey' final='true'><parameter type='javax.crypto.SecretKey' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' abstract='true' name='SecretKeyFactorySpi'><constructor type='javax.crypto.SecretKeyFactorySpi' name='SecretKeyFactorySpi'/><method visibility='protected' return='javax.crypto.SecretKey' abstract='true' name='engineGenerateSecret'><parameter type='java.security.spec.KeySpec' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method visibility='protected' return='java.security.spec.KeySpec' abstract='true' name='engineGetKeySpec'><parameter type='javax.crypto.SecretKey' name='key'/><parameter type='java.lang.Class' name='keySpec'/><exception type='java.security.spec.InvalidKeySpecException' name='InvalidKeySpecException'/></method><method visibility='protected' return='javax.crypto.SecretKey' abstract='true' name='engineTranslateKey'><parameter type='javax.crypto.SecretKey' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.security.GeneralSecurityException' name='ShortBufferException'><constructor type='javax.crypto.ShortBufferException' name='ShortBufferException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.crypto.ShortBufferException' name='ShortBufferException'/></class><interface abstract='true' name='SecretKey'/></package><package name='javax.crypto.interfaces'><interface abstract='true' name='DHKey'><method return='javax.crypto.spec.DHParameterSpec' abstract='true' name='getParams'/></interface><interface abstract='true' name='DHPrivateKey'><method return='java.math.BigInteger' abstract='true' name='getX'/></interface><interface abstract='true' name='DHPublicKey'><method return='java.math.BigInteger' abstract='true' name='getY'/></interface><interface abstract='true' name='PBEKey'><method return='int' abstract='true' name='getIterationCount'/><method return='char[]' abstract='true' name='getPassword'/><method return='byte[]' abstract='true' name='getSalt'/></interface></package><package name='javax.crypto.spec'><class extends='java.lang.Object' name='DESKeySpec'><constructor type='javax.crypto.spec.DESKeySpec' name='DESKeySpec'><parameter type='byte[]' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></constructor><constructor type='javax.crypto.spec.DESKeySpec' name='DESKeySpec'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></constructor><method return='byte[]' name='getKey'/><method return='boolean' static='true' name='isParityAdjusted'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method><method return='boolean' static='true' name='isWeak'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' name='DESedeKeySpec'><constructor type='javax.crypto.spec.DESedeKeySpec' name='DESedeKeySpec'><parameter type='byte[]' name='key'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></constructor><constructor type='javax.crypto.spec.DESedeKeySpec' name='DESedeKeySpec'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></constructor><method return='byte[]' name='getKey'/><method return='boolean' static='true' name='isParityAdjusted'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/></method></class><class extends='java.lang.Object' name='DHGenParameterSpec'><constructor type='javax.crypto.spec.DHGenParameterSpec' name='DHGenParameterSpec'><parameter type='int' name='primeSize'/><parameter type='int' name='exponentSize'/></constructor><method return='int' name='getExponentSize'/><method return='int' name='getPrimeSize'/></class><class extends='java.lang.Object' name='DHParameterSpec'><constructor type='javax.crypto.spec.DHParameterSpec' name='DHParameterSpec'><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='g'/></constructor><constructor type='javax.crypto.spec.DHParameterSpec' name='DHParameterSpec'><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='g'/><parameter type='int' name='l'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='int' name='getL'/><method return='java.math.BigInteger' name='getP'/></class><class extends='java.lang.Object' name='DHPrivateKeySpec'><constructor type='javax.crypto.spec.DHPrivateKeySpec' name='DHPrivateKeySpec'><parameter type='java.math.BigInteger' name='x'/><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='g'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='java.math.BigInteger' name='getP'/><method return='java.math.BigInteger' name='getX'/></class><class extends='java.lang.Object' name='DHPublicKeySpec'><constructor type='javax.crypto.spec.DHPublicKeySpec' name='DHPublicKeySpec'><parameter type='java.math.BigInteger' name='y'/><parameter type='java.math.BigInteger' name='p'/><parameter type='java.math.BigInteger' name='g'/></constructor><method return='java.math.BigInteger' name='getG'/><method return='java.math.BigInteger' name='getP'/><method return='java.math.BigInteger' name='getY'/></class><class extends='java.lang.Object' name='IvParameterSpec'><constructor type='javax.crypto.spec.IvParameterSpec' name='IvParameterSpec'><parameter type='byte[]' name='iv'/></constructor><constructor type='javax.crypto.spec.IvParameterSpec' name='IvParameterSpec'><parameter type='byte[]' name='iv'/><parameter type='int' name='offset'/><parameter type='int' name='len'/></constructor><method return='byte[]' name='getIV'/></class><class extends='java.lang.Object' name='OAEPParameterSpec'><constructor type='javax.crypto.spec.OAEPParameterSpec' name='OAEPParameterSpec'><parameter type='java.lang.String' name='mdName'/><parameter type='java.lang.String' name='mgfName'/><parameter type='java.security.spec.AlgorithmParameterSpec' name='mgfSpec'/><parameter type='javax.crypto.spec.PSource' name='pSrc'/></constructor><method return='java.lang.String' name='getDigestAlgorithm'/><method return='java.lang.String' name='getMGFAlgorithm'/><method return='java.security.spec.AlgorithmParameterSpec' name='getMGFParameters'/><method return='javax.crypto.spec.PSource' name='getPSource'/></class><class extends='java.lang.Object' name='PBEKeySpec'><constructor type='javax.crypto.spec.PBEKeySpec' name='PBEKeySpec'><parameter type='char[]' name='password'/></constructor><constructor type='javax.crypto.spec.PBEKeySpec' name='PBEKeySpec'><parameter type='char[]' name='password'/><parameter type='byte[]' name='salt'/><parameter type='int' name='iterationCount'/><parameter type='int' name='keyLength'/></constructor><constructor type='javax.crypto.spec.PBEKeySpec' name='PBEKeySpec'><parameter type='char[]' name='password'/><parameter type='byte[]' name='salt'/><parameter type='int' name='iterationCount'/></constructor><method name='clearPassword' final='true'/><method return='int' name='getIterationCount' final='true'/><method return='int' name='getKeyLength' final='true'/><method return='char[]' name='getPassword' final='true'/><method return='byte[]' name='getSalt' final='true'/></class><class extends='java.lang.Object' name='PBEParameterSpec'><constructor type='javax.crypto.spec.PBEParameterSpec' name='PBEParameterSpec'><parameter type='byte[]' name='salt'/><parameter type='int' name='iterationCount'/></constructor><method return='int' name='getIterationCount'/><method return='byte[]' name='getSalt'/></class><class extends='java.lang.Object' name='PSource'><constructor visibility='protected' type='javax.crypto.spec.PSource' name='PSource'><parameter type='java.lang.String' name='pSrcName'/></constructor><method return='java.lang.String' name='getAlgorithm'/></class><class extends='javax.crypto.spec.PSource' static='true' name='PSource.PSpecified' final='true'><constructor type='javax.crypto.spec.PSource.PSpecified' name='PSource.PSpecified'><parameter type='byte[]' name='p'/></constructor><method return='byte[]' name='getValue'/></class><class extends='java.lang.Object' name='RC2ParameterSpec'><constructor type='javax.crypto.spec.RC2ParameterSpec' name='RC2ParameterSpec'><parameter type='int' name='effectiveKeyBits'/></constructor><constructor type='javax.crypto.spec.RC2ParameterSpec' name='RC2ParameterSpec'><parameter type='int' name='effectiveKeyBits'/><parameter type='byte[]' name='iv'/></constructor><constructor type='javax.crypto.spec.RC2ParameterSpec' name='RC2ParameterSpec'><parameter type='int' name='effectiveKeyBits'/><parameter type='byte[]' name='iv'/><parameter type='int' name='offset'/></constructor><method return='int' name='getEffectiveKeyBits'/><method return='byte[]' name='getIV'/></class><class extends='java.lang.Object' name='RC5ParameterSpec'><constructor type='javax.crypto.spec.RC5ParameterSpec' name='RC5ParameterSpec'><parameter type='int' name='version'/><parameter type='int' name='rounds'/><parameter type='int' name='wordSize'/></constructor><constructor type='javax.crypto.spec.RC5ParameterSpec' name='RC5ParameterSpec'><parameter type='int' name='version'/><parameter type='int' name='rounds'/><parameter type='int' name='wordSize'/><parameter type='byte[]' name='iv'/></constructor><constructor type='javax.crypto.spec.RC5ParameterSpec' name='RC5ParameterSpec'><parameter type='int' name='version'/><parameter type='int' name='rounds'/><parameter type='int' name='wordSize'/><parameter type='byte[]' name='iv'/><parameter type='int' name='offset'/></constructor><method return='byte[]' name='getIV'/><method return='int' name='getRounds'/><method return='int' name='getVersion'/><method return='int' name='getWordSize'/></class><class extends='java.lang.Object' name='SecretKeySpec'><constructor type='javax.crypto.spec.SecretKeySpec' name='SecretKeySpec'><parameter type='byte[]' name='key'/><parameter type='java.lang.String' name='algorithm'/></constructor><constructor type='javax.crypto.spec.SecretKeySpec' name='SecretKeySpec'><parameter type='byte[]' name='key'/><parameter type='int' name='offset'/><parameter type='int' name='len'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm'/><method return='byte[]' name='getEncoded'/><method return='java.lang.String' name='getFormat'/></class></package><package name='javax.microedition.khronos.egl'><class extends='java.lang.Object' abstract='true' name='EGLConfig'><constructor type='javax.microedition.khronos.egl.EGLConfig' name='EGLConfig'/></class><class extends='java.lang.Object' abstract='true' name='EGLContext'><constructor type='javax.microedition.khronos.egl.EGLContext' name='EGLContext'/><method return='javax.microedition.khronos.egl.EGL' static='true' name='getEGL'/><method return='javax.microedition.khronos.opengles.GL' abstract='true' name='getGL'/></class><class extends='java.lang.Object' abstract='true' name='EGLDisplay'><constructor type='javax.microedition.khronos.egl.EGLDisplay' name='EGLDisplay'/></class><class extends='java.lang.Object' abstract='true' name='EGLSurface'><constructor type='javax.microedition.khronos.egl.EGLSurface' name='EGLSurface'/></class><interface abstract='true' name='EGL'/><interface abstract='true' name='EGL10'><method return='boolean' abstract='true' name='eglChooseConfig'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='int[]' name='attrib_list'/><parameter type='javax.microedition.khronos.egl.EGLConfig[]' name='configs'/><parameter type='int' name='config_size'/><parameter type='int[]' name='num_config'/></method><method return='boolean' abstract='true' name='eglCopyBuffers'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='surface'/><parameter type='java.lang.Object' name='native_pixmap'/></method><method return='javax.microedition.khronos.egl.EGLContext' abstract='true' name='eglCreateContext'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='javax.microedition.khronos.egl.EGLContext' name='share_context'/><parameter type='int[]' name='attrib_list'/></method><method return='javax.microedition.khronos.egl.EGLSurface' abstract='true' name='eglCreatePbufferSurface'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='int[]' name='attrib_list'/></method><method return='javax.microedition.khronos.egl.EGLSurface' abstract='true' name='eglCreatePixmapSurface'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='java.lang.Object' name='native_pixmap'/><parameter type='int[]' name='attrib_list'/></method><method return='javax.microedition.khronos.egl.EGLSurface' abstract='true' name='eglCreateWindowSurface'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='java.lang.Object' name='native_window'/><parameter type='int[]' name='attrib_list'/></method><method return='boolean' abstract='true' name='eglDestroyContext'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLContext' name='context'/></method><method return='boolean' abstract='true' name='eglDestroySurface'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='surface'/></method><method return='boolean' abstract='true' name='eglGetConfigAttrib'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig' name='config'/><parameter type='int' name='attribute'/><parameter type='int[]' name='value'/></method><method return='boolean' abstract='true' name='eglGetConfigs'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLConfig[]' name='configs'/><parameter type='int' name='config_size'/><parameter type='int[]' name='num_config'/></method><method return='javax.microedition.khronos.egl.EGLContext' abstract='true' name='eglGetCurrentContext'/><method return='javax.microedition.khronos.egl.EGLDisplay' abstract='true' name='eglGetCurrentDisplay'/><method return='javax.microedition.khronos.egl.EGLSurface' abstract='true' name='eglGetCurrentSurface'><parameter type='int' name='readdraw'/></method><method return='javax.microedition.khronos.egl.EGLDisplay' abstract='true' name='eglGetDisplay'><parameter type='java.lang.Object' name='native_display'/></method><method return='int' abstract='true' name='eglGetError'/><method return='boolean' abstract='true' name='eglInitialize'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='int[]' name='major_minor'/></method><method return='boolean' abstract='true' name='eglMakeCurrent'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='draw'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='read'/><parameter type='javax.microedition.khronos.egl.EGLContext' name='context'/></method><method return='boolean' abstract='true' name='eglQueryContext'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLContext' name='context'/><parameter type='int' name='attribute'/><parameter type='int[]' name='value'/></method><method return='java.lang.String' abstract='true' name='eglQueryString'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='int' name='name'/></method><method return='boolean' abstract='true' name='eglQuerySurface'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='surface'/><parameter type='int' name='attribute'/><parameter type='int[]' name='value'/></method><method return='boolean' abstract='true' name='eglSwapBuffers'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/><parameter type='javax.microedition.khronos.egl.EGLSurface' name='surface'/></method><method return='boolean' abstract='true' name='eglTerminate'><parameter type='javax.microedition.khronos.egl.EGLDisplay' name='display'/></method><method return='boolean' abstract='true' name='eglWaitGL'/><method return='boolean' abstract='true' name='eglWaitNative'><parameter type='int' name='engine'/><parameter type='java.lang.Object' name='bindTarget'/></method></interface><interface abstract='true' name='EGL11'/></package><package name='javax.microedition.khronos.opengles'><interface abstract='true' name='GL'/><interface abstract='true' name='GL10'><method abstract='true' name='glActiveTexture'><parameter type='int' name='texture'/></method><method abstract='true' name='glAlphaFunc'><parameter type='int' name='func'/><parameter type='float' name='ref'/></method><method abstract='true' name='glAlphaFuncx'><parameter type='int' name='func'/><parameter type='int' name='ref'/></method><method abstract='true' name='glBindTexture'><parameter type='int' name='target'/><parameter type='int' name='texture'/></method><method abstract='true' name='glBlendFunc'><parameter type='int' name='sfactor'/><parameter type='int' name='dfactor'/></method><method abstract='true' name='glClear'><parameter type='int' name='mask'/></method><method abstract='true' name='glClearColor'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method abstract='true' name='glClearColorx'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method abstract='true' name='glClearDepthf'><parameter type='float' name='depth'/></method><method abstract='true' name='glClearDepthx'><parameter type='int' name='depth'/></method><method abstract='true' name='glClearStencil'><parameter type='int' name='s'/></method><method abstract='true' name='glClientActiveTexture'><parameter type='int' name='texture'/></method><method abstract='true' name='glColor4f'><parameter type='float' name='red'/><parameter type='float' name='green'/><parameter type='float' name='blue'/><parameter type='float' name='alpha'/></method><method abstract='true' name='glColor4x'><parameter type='int' name='red'/><parameter type='int' name='green'/><parameter type='int' name='blue'/><parameter type='int' name='alpha'/></method><method abstract='true' name='glColorMask'><parameter type='boolean' name='red'/><parameter type='boolean' name='green'/><parameter type='boolean' name='blue'/><parameter type='boolean' name='alpha'/></method><method abstract='true' name='glColorPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glCompressedTexImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method abstract='true' name='glCompressedTexSubImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method abstract='true' name='glCopyTexImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/></method><method abstract='true' name='glCopyTexSubImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='glCullFace'><parameter type='int' name='mode'/></method><method abstract='true' name='glDeleteTextures'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDeleteTextures'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method abstract='true' name='glDepthFunc'><parameter type='int' name='func'/></method><method abstract='true' name='glDepthMask'><parameter type='boolean' name='flag'/></method><method abstract='true' name='glDepthRangef'><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method abstract='true' name='glDepthRangex'><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method abstract='true' name='glDisable'><parameter type='int' name='cap'/></method><method abstract='true' name='glDisableClientState'><parameter type='int' name='array'/></method><method abstract='true' name='glDrawArrays'><parameter type='int' name='mode'/><parameter type='int' name='first'/><parameter type='int' name='count'/></method><method abstract='true' name='glDrawElements'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='indices'/></method><method abstract='true' name='glEnable'><parameter type='int' name='cap'/></method><method abstract='true' name='glEnableClientState'><parameter type='int' name='array'/></method><method abstract='true' name='glFinish'/><method abstract='true' name='glFlush'/><method abstract='true' name='glFogf'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glFogfv'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glFogfv'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glFogx'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glFogxv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glFogxv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glFrontFace'><parameter type='int' name='mode'/></method><method abstract='true' name='glFrustumf'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method abstract='true' name='glFrustumx'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method abstract='true' name='glGenTextures'><parameter type='int' name='n'/><parameter type='int[]' name='textures'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGenTextures'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='textures'/></method><method return='int' abstract='true' name='glGetError'/><method abstract='true' name='glGetIntegerv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetIntegerv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='java.lang.String' abstract='true' name='glGetString'><parameter type='int' name='name'/></method><method abstract='true' name='glHint'><parameter type='int' name='target'/><parameter type='int' name='mode'/></method><method abstract='true' name='glLightModelf'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glLightModelfv'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLightModelfv'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glLightModelx'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glLightModelxv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLightModelxv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glLightf'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glLightfv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLightfv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glLightx'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glLightxv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLightxv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glLineWidth'><parameter type='float' name='width'/></method><method abstract='true' name='glLineWidthx'><parameter type='int' name='width'/></method><method abstract='true' name='glLoadIdentity'/><method abstract='true' name='glLoadMatrixf'><parameter type='float[]' name='m'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLoadMatrixf'><parameter type='java.nio.FloatBuffer' name='m'/></method><method abstract='true' name='glLoadMatrixx'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method abstract='true' name='glLoadMatrixx'><parameter type='java.nio.IntBuffer' name='m'/></method><method abstract='true' name='glLogicOp'><parameter type='int' name='opcode'/></method><method abstract='true' name='glMaterialf'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glMaterialfv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glMaterialfv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glMaterialx'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glMaterialxv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glMaterialxv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glMatrixMode'><parameter type='int' name='mode'/></method><method abstract='true' name='glMultMatrixf'><parameter type='float[]' name='m'/><parameter type='int' name='offset'/></method><method abstract='true' name='glMultMatrixf'><parameter type='java.nio.FloatBuffer' name='m'/></method><method abstract='true' name='glMultMatrixx'><parameter type='int[]' name='m'/><parameter type='int' name='offset'/></method><method abstract='true' name='glMultMatrixx'><parameter type='java.nio.IntBuffer' name='m'/></method><method abstract='true' name='glMultiTexCoord4f'><parameter type='int' name='target'/><parameter type='float' name='s'/><parameter type='float' name='t'/><parameter type='float' name='r'/><parameter type='float' name='q'/></method><method abstract='true' name='glMultiTexCoord4x'><parameter type='int' name='target'/><parameter type='int' name='s'/><parameter type='int' name='t'/><parameter type='int' name='r'/><parameter type='int' name='q'/></method><method abstract='true' name='glNormal3f'><parameter type='float' name='nx'/><parameter type='float' name='ny'/><parameter type='float' name='nz'/></method><method abstract='true' name='glNormal3x'><parameter type='int' name='nx'/><parameter type='int' name='ny'/><parameter type='int' name='nz'/></method><method abstract='true' name='glNormalPointer'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glOrthof'><parameter type='float' name='left'/><parameter type='float' name='right'/><parameter type='float' name='bottom'/><parameter type='float' name='top'/><parameter type='float' name='zNear'/><parameter type='float' name='zFar'/></method><method abstract='true' name='glOrthox'><parameter type='int' name='left'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/><parameter type='int' name='top'/><parameter type='int' name='zNear'/><parameter type='int' name='zFar'/></method><method abstract='true' name='glPixelStorei'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glPointSize'><parameter type='float' name='size'/></method><method abstract='true' name='glPointSizex'><parameter type='int' name='size'/></method><method abstract='true' name='glPolygonOffset'><parameter type='float' name='factor'/><parameter type='float' name='units'/></method><method abstract='true' name='glPolygonOffsetx'><parameter type='int' name='factor'/><parameter type='int' name='units'/></method><method abstract='true' name='glPopMatrix'/><method abstract='true' name='glPushMatrix'/><method abstract='true' name='glReadPixels'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method abstract='true' name='glRotatef'><parameter type='float' name='angle'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method abstract='true' name='glRotatex'><parameter type='int' name='angle'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method abstract='true' name='glSampleCoverage'><parameter type='float' name='value'/><parameter type='boolean' name='invert'/></method><method abstract='true' name='glSampleCoveragex'><parameter type='int' name='value'/><parameter type='boolean' name='invert'/></method><method abstract='true' name='glScalef'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method abstract='true' name='glScalex'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method abstract='true' name='glScissor'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='glShadeModel'><parameter type='int' name='mode'/></method><method abstract='true' name='glStencilFunc'><parameter type='int' name='func'/><parameter type='int' name='ref'/><parameter type='int' name='mask'/></method><method abstract='true' name='glStencilMask'><parameter type='int' name='mask'/></method><method abstract='true' name='glStencilOp'><parameter type='int' name='fail'/><parameter type='int' name='zfail'/><parameter type='int' name='zpass'/></method><method abstract='true' name='glTexCoordPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glTexEnvf'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glTexEnvfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnvfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glTexEnvx'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexEnvxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnvxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method abstract='true' name='glTexParameterf'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glTexParameterx'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexSubImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='xoffset'/><parameter type='int' name='yoffset'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='format'/><parameter type='int' name='type'/><parameter type='java.nio.Buffer' name='pixels'/></method><method abstract='true' name='glTranslatef'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method abstract='true' name='glTranslatex'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/></method><method abstract='true' name='glVertexPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glViewport'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method></interface><interface abstract='true' name='GL10Ext'><method return='int' abstract='true' name='glQueryMatrixxOES'><parameter type='int[]' name='mantissa'/><parameter type='int' name='mantissaOffset'/><parameter type='int[]' name='exponent'/><parameter type='int' name='exponentOffset'/></method><method return='int' abstract='true' name='glQueryMatrixxOES'><parameter type='java.nio.IntBuffer' name='mantissa'/><parameter type='java.nio.IntBuffer' name='exponent'/></method></interface><interface abstract='true' name='GL11'><method abstract='true' name='glBindBuffer'><parameter type='int' name='target'/><parameter type='int' name='buffer'/></method><method abstract='true' name='glBufferData'><parameter type='int' name='target'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/><parameter type='int' name='usage'/></method><method abstract='true' name='glBufferSubData'><parameter type='int' name='target'/><parameter type='int' name='offset'/><parameter type='int' name='size'/><parameter type='java.nio.Buffer' name='data'/></method><method abstract='true' name='glClipPlanef'><parameter type='int' name='plane'/><parameter type='float[]' name='equation'/><parameter type='int' name='offset'/></method><method abstract='true' name='glClipPlanef'><parameter type='int' name='plane'/><parameter type='java.nio.FloatBuffer' name='equation'/></method><method abstract='true' name='glClipPlanex'><parameter type='int' name='plane'/><parameter type='int[]' name='equation'/><parameter type='int' name='offset'/></method><method abstract='true' name='glClipPlanex'><parameter type='int' name='plane'/><parameter type='java.nio.IntBuffer' name='equation'/></method><method abstract='true' name='glColor4ub'><parameter type='byte' name='red'/><parameter type='byte' name='green'/><parameter type='byte' name='blue'/><parameter type='byte' name='alpha'/></method><method abstract='true' name='glColorPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDeleteBuffers'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDeleteBuffers'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method abstract='true' name='glDrawElements'><parameter type='int' name='mode'/><parameter type='int' name='count'/><parameter type='int' name='type'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGenBuffers'><parameter type='int' name='n'/><parameter type='int[]' name='buffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGenBuffers'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='buffers'/></method><method abstract='true' name='glGetBooleanv'><parameter type='int' name='pname'/><parameter type='boolean[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetBooleanv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetBufferParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetBufferParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetClipPlanef'><parameter type='int' name='pname'/><parameter type='float[]' name='eqn'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetClipPlanef'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='eqn'/></method><method abstract='true' name='glGetClipPlanex'><parameter type='int' name='pname'/><parameter type='int[]' name='eqn'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetClipPlanex'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='eqn'/></method><method abstract='true' name='glGetFixedv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetFixedv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetFloatv'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetFloatv'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glGetLightfv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetLightfv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glGetLightxv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetLightxv'><parameter type='int' name='light'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetMaterialfv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetMaterialfv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glGetMaterialxv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetMaterialxv'><parameter type='int' name='face'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetPointerv'><parameter type='int' name='pname'/><parameter type='java.nio.Buffer[]' name='params'/></method><method abstract='true' name='glGetTexEnviv'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexEnviv'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetTexEnvxv'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexEnvxv'><parameter type='int' name='env'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetTexParameterfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexParameterfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glGetTexParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetTexParameterxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexParameterxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='boolean' abstract='true' name='glIsBuffer'><parameter type='int' name='buffer'/></method><method return='boolean' abstract='true' name='glIsEnabled'><parameter type='int' name='cap'/></method><method return='boolean' abstract='true' name='glIsTexture'><parameter type='int' name='texture'/></method><method abstract='true' name='glNormalPointer'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method abstract='true' name='glPointParameterf'><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glPointParameterfv'><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glPointParameterfv'><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glPointParameterx'><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glPointParameterxv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glPointParameterxv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glPointSizePointerOES'><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glTexCoordPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnvi'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexEnviv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnviv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexParameterfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexParameterfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glTexParameteri'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexParameteriv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexParameterxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexParameterxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glVertexPointer'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method></interface><interface abstract='true' name='GL11Ext'><method abstract='true' name='glCurrentPaletteMatrixOES'><parameter type='int' name='matrixpaletteindex'/></method><method abstract='true' name='glDrawTexfOES'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/><parameter type='float' name='width'/><parameter type='float' name='height'/></method><method abstract='true' name='glDrawTexfvOES'><parameter type='float[]' name='coords'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDrawTexfvOES'><parameter type='java.nio.FloatBuffer' name='coords'/></method><method abstract='true' name='glDrawTexiOES'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='glDrawTexivOES'><parameter type='int[]' name='coords'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDrawTexivOES'><parameter type='java.nio.IntBuffer' name='coords'/></method><method abstract='true' name='glDrawTexsOES'><parameter type='short' name='x'/><parameter type='short' name='y'/><parameter type='short' name='z'/><parameter type='short' name='width'/><parameter type='short' name='height'/></method><method abstract='true' name='glDrawTexsvOES'><parameter type='short[]' name='coords'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDrawTexsvOES'><parameter type='java.nio.ShortBuffer' name='coords'/></method><method abstract='true' name='glDrawTexxOES'><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='glDrawTexxvOES'><parameter type='int[]' name='coords'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDrawTexxvOES'><parameter type='java.nio.IntBuffer' name='coords'/></method><method abstract='true' name='glEnable'><parameter type='int' name='cap'/></method><method abstract='true' name='glEnableClientState'><parameter type='int' name='array'/></method><method abstract='true' name='glLoadPaletteFromModelViewMatrixOES'/><method abstract='true' name='glMatrixIndexPointerOES'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glMatrixIndexPointerOES'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexParameterfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='param'/><parameter type='int' name='offset'/></method><method abstract='true' name='glWeightPointerOES'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='java.nio.Buffer' name='pointer'/></method><method abstract='true' name='glWeightPointerOES'><parameter type='int' name='size'/><parameter type='int' name='type'/><parameter type='int' name='stride'/><parameter type='int' name='offset'/></method></interface><interface abstract='true' name='GL11ExtensionPack'><method abstract='true' name='glBindFramebufferOES'><parameter type='int' name='target'/><parameter type='int' name='framebuffer'/></method><method abstract='true' name='glBindRenderbufferOES'><parameter type='int' name='target'/><parameter type='int' name='renderbuffer'/></method><method abstract='true' name='glBindTexture'><parameter type='int' name='target'/><parameter type='int' name='texture'/></method><method abstract='true' name='glBlendEquation'><parameter type='int' name='mode'/></method><method abstract='true' name='glBlendEquationSeparate'><parameter type='int' name='modeRGB'/><parameter type='int' name='modeAlpha'/></method><method abstract='true' name='glBlendFuncSeparate'><parameter type='int' name='srcRGB'/><parameter type='int' name='dstRGB'/><parameter type='int' name='srcAlpha'/><parameter type='int' name='dstAlpha'/></method><method return='int' abstract='true' name='glCheckFramebufferStatusOES'><parameter type='int' name='target'/></method><method abstract='true' name='glCompressedTexImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/><parameter type='int' name='imageSize'/><parameter type='java.nio.Buffer' name='data'/></method><method abstract='true' name='glCopyTexImage2D'><parameter type='int' name='target'/><parameter type='int' name='level'/><parameter type='int' name='internalformat'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='border'/></method><method abstract='true' name='glDeleteFramebuffersOES'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDeleteFramebuffersOES'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method abstract='true' name='glDeleteRenderbuffersOES'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glDeleteRenderbuffersOES'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method abstract='true' name='glEnable'><parameter type='int' name='cap'/></method><method abstract='true' name='glFramebufferRenderbufferOES'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='renderbuffertarget'/><parameter type='int' name='renderbuffer'/></method><method abstract='true' name='glFramebufferTexture2DOES'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='textarget'/><parameter type='int' name='texture'/><parameter type='int' name='level'/></method><method abstract='true' name='glGenFramebuffersOES'><parameter type='int' name='n'/><parameter type='int[]' name='framebuffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGenFramebuffersOES'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='framebuffers'/></method><method abstract='true' name='glGenRenderbuffersOES'><parameter type='int' name='n'/><parameter type='int[]' name='renderbuffers'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGenRenderbuffersOES'><parameter type='int' name='n'/><parameter type='java.nio.IntBuffer' name='renderbuffers'/></method><method abstract='true' name='glGenerateMipmapOES'><parameter type='int' name='target'/></method><method abstract='true' name='glGetFramebufferAttachmentParameterivOES'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetFramebufferAttachmentParameterivOES'><parameter type='int' name='target'/><parameter type='int' name='attachment'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetIntegerv'><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetIntegerv'><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetRenderbufferParameterivOES'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetRenderbufferParameterivOES'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetTexGenfv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexGenfv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glGetTexGeniv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexGeniv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glGetTexGenxv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glGetTexGenxv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method return='boolean' abstract='true' name='glIsFramebufferOES'><parameter type='int' name='framebuffer'/></method><method return='boolean' abstract='true' name='glIsRenderbufferOES'><parameter type='int' name='renderbuffer'/></method><method abstract='true' name='glRenderbufferStorageOES'><parameter type='int' name='target'/><parameter type='int' name='internalformat'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method abstract='true' name='glStencilOp'><parameter type='int' name='fail'/><parameter type='int' name='zfail'/><parameter type='int' name='zpass'/></method><method abstract='true' name='glTexEnvf'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glTexEnvfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnvfv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glTexEnvx'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexEnvxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexEnvxv'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexGenf'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method><method abstract='true' name='glTexGenfv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='float[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexGenfv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.FloatBuffer' name='params'/></method><method abstract='true' name='glTexGeni'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexGeniv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexGeniv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexGenx'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int' name='param'/></method><method abstract='true' name='glTexGenxv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='int[]' name='params'/><parameter type='int' name='offset'/></method><method abstract='true' name='glTexGenxv'><parameter type='int' name='coord'/><parameter type='int' name='pname'/><parameter type='java.nio.IntBuffer' name='params'/></method><method abstract='true' name='glTexParameterf'><parameter type='int' name='target'/><parameter type='int' name='pname'/><parameter type='float' name='param'/></method></interface></package><package name='javax.net'><class extends='java.lang.Object' abstract='true' name='ServerSocketFactory'><constructor visibility='protected' type='javax.net.ServerSocketFactory' name='ServerSocketFactory'/><method return='java.net.ServerSocket' name='createServerSocket'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.ServerSocket' abstract='true' name='createServerSocket'><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.ServerSocket' abstract='true' name='createServerSocket'><parameter type='int' name='port'/><parameter type='int' name='backlog'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.ServerSocket' abstract='true' name='createServerSocket'><parameter type='int' name='port'/><parameter type='int' name='backlog'/><parameter type='java.net.InetAddress' name='iAddress'/><exception type='java.io.IOException' name='IOException'/></method><method return='javax.net.ServerSocketFactory' static='true' synchronized='true' name='getDefault'/></class><class extends='java.lang.Object' abstract='true' name='SocketFactory'><constructor visibility='protected' type='javax.net.SocketFactory' name='SocketFactory'/><method return='java.net.Socket' name='createSocket'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localHost'/><parameter type='int' name='localPort'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.net.InetAddress' name='host'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><exception type='java.io.IOException' name='IOException'/></method><method return='javax.net.SocketFactory' static='true' synchronized='true' name='getDefault'/></class></package><package name='javax.net.ssl'><class extends='java.lang.Object' name='CertPathTrustManagerParameters'><constructor type='javax.net.ssl.CertPathTrustManagerParameters' name='CertPathTrustManagerParameters'><parameter type='java.security.cert.CertPathParameters' name='parameters'/></constructor><method return='java.security.cert.CertPathParameters' name='getParameters'/></class><class extends='java.util.EventObject' name='HandshakeCompletedEvent'><constructor type='javax.net.ssl.HandshakeCompletedEvent' name='HandshakeCompletedEvent'><parameter type='javax.net.ssl.SSLSocket' name='sock'/><parameter type='javax.net.ssl.SSLSession' name='s'/></constructor><method return='java.lang.String' name='getCipherSuite'/><method return='java.security.cert.Certificate[]' name='getLocalCertificates'/><method return='java.security.Principal' name='getLocalPrincipal'/><method return='javax.security.cert.X509Certificate[]' name='getPeerCertificateChain'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.security.cert.Certificate[]' name='getPeerCertificates'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.security.Principal' name='getPeerPrincipal'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='javax.net.ssl.SSLSession' name='getSession'/><method return='javax.net.ssl.SSLSocket' name='getSocket'/></class><class extends='java.net.HttpURLConnection' abstract='true' name='HttpsURLConnection'><constructor visibility='protected' type='javax.net.ssl.HttpsURLConnection' name='HttpsURLConnection'><parameter type='java.net.URL' name='url'/></constructor><method return='java.lang.String' abstract='true' name='getCipherSuite'/><method return='javax.net.ssl.HostnameVerifier' static='true' name='getDefaultHostnameVerifier'/><method return='javax.net.ssl.SSLSocketFactory' static='true' name='getDefaultSSLSocketFactory'/><method return='javax.net.ssl.HostnameVerifier' name='getHostnameVerifier'/><method return='java.security.cert.Certificate[]' abstract='true' name='getLocalCertificates'/><method return='java.security.Principal' name='getLocalPrincipal'/><method return='java.security.Principal' name='getPeerPrincipal'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='javax.net.ssl.SSLSocketFactory' name='getSSLSocketFactory'/><method return='java.security.cert.Certificate[]' abstract='true' name='getServerCertificates'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method static='true' name='setDefaultHostnameVerifier'><parameter type='javax.net.ssl.HostnameVerifier' name='v'/></method><method static='true' name='setDefaultSSLSocketFactory'><parameter type='javax.net.ssl.SSLSocketFactory' name='sf'/></method><method name='setHostnameVerifier'><parameter type='javax.net.ssl.HostnameVerifier' name='v'/></method><method name='setSSLSocketFactory'><parameter type='javax.net.ssl.SSLSocketFactory' name='sf'/></method></class><class extends='java.lang.Object' name='KeyManagerFactory'><constructor visibility='protected' type='javax.net.ssl.KeyManagerFactory' name='KeyManagerFactory'><parameter type='javax.net.ssl.KeyManagerFactorySpi' name='factorySpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.String' static='true' name='getDefaultAlgorithm' final='true'/><method return='javax.net.ssl.KeyManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.net.ssl.KeyManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.net.ssl.KeyManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.net.ssl.KeyManager[]' name='getKeyManagers' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method name='init' final='true'><parameter type='java.security.KeyStore' name='ks'/><parameter type='char[]' name='password'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></method><method name='init' final='true'><parameter type='javax.net.ssl.ManagerFactoryParameters' name='spec'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' abstract='true' name='KeyManagerFactorySpi'><constructor type='javax.net.ssl.KeyManagerFactorySpi' name='KeyManagerFactorySpi'/><method visibility='protected' return='javax.net.ssl.KeyManager[]' abstract='true' name='engineGetKeyManagers'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.KeyStore' name='ks'/><parameter type='char[]' name='password'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='javax.net.ssl.ManagerFactoryParameters' name='spec'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' name='KeyStoreBuilderParameters'><constructor type='javax.net.ssl.KeyStoreBuilderParameters' name='KeyStoreBuilderParameters'><parameter type='java.security.KeyStore.Builder' name='builder'/></constructor><constructor type='javax.net.ssl.KeyStoreBuilderParameters' name='KeyStoreBuilderParameters'><parameter type='java.util.List' name='parameters'/></constructor><method return='java.util.List' name='getParameters'/></class><class extends='java.lang.Object' name='SSLContext'><constructor visibility='protected' type='javax.net.ssl.SSLContext' name='SSLContext'><parameter type='javax.net.ssl.SSLContextSpi' name='contextSpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='protocol'/></constructor><method return='javax.net.ssl.SSLEngine' name='createSSLEngine' final='true'/><method return='javax.net.ssl.SSLEngine' name='createSSLEngine' final='true'><parameter type='java.lang.String' name='peerHost'/><parameter type='int' name='peerPort'/></method><method return='javax.net.ssl.SSLSessionContext' name='getClientSessionContext' final='true'/><method return='javax.net.ssl.SSLContext' static='true' name='getInstance'><parameter type='java.lang.String' name='protocol'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.net.ssl.SSLContext' static='true' name='getInstance'><parameter type='java.lang.String' name='protocol'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.net.ssl.SSLContext' static='true' name='getInstance'><parameter type='java.lang.String' name='protocol'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.lang.String' name='getProtocol' final='true'/><method return='java.security.Provider' name='getProvider' final='true'/><method return='javax.net.ssl.SSLSessionContext' name='getServerSessionContext' final='true'/><method return='javax.net.ssl.SSLServerSocketFactory' name='getServerSocketFactory' final='true'/><method return='javax.net.ssl.SSLSocketFactory' name='getSocketFactory' final='true'/><method name='init' final='true'><parameter type='javax.net.ssl.KeyManager[]' name='km'/><parameter type='javax.net.ssl.TrustManager[]' name='tm'/><parameter type='java.security.SecureRandom' name='sr'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method return='javax.net.ssl.SSLContext' static='true' name='getDefault' api_added='9'><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.net.ssl.SSLParameters' name='getDefaultSSLParameters' api_added='9' final='true'/><method return='javax.net.ssl.SSLParameters' name='getSupportedSSLParameters' api_added='9' final='true'/><method static='true' name='setDefault' api_added='9'><parameter type='javax.net.ssl.SSLContext' name='sslContext'/></method></class><class extends='java.lang.Object' abstract='true' name='SSLContextSpi'><constructor type='javax.net.ssl.SSLContextSpi' name='SSLContextSpi'/><method visibility='protected' return='javax.net.ssl.SSLEngine' abstract='true' name='engineCreateSSLEngine'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></method><method visibility='protected' return='javax.net.ssl.SSLEngine' abstract='true' name='engineCreateSSLEngine'/><method visibility='protected' return='javax.net.ssl.SSLSessionContext' abstract='true' name='engineGetClientSessionContext'/><method visibility='protected' return='javax.net.ssl.SSLSessionContext' abstract='true' name='engineGetServerSessionContext'/><method visibility='protected' return='javax.net.ssl.SSLServerSocketFactory' abstract='true' name='engineGetServerSocketFactory'/><method visibility='protected' return='javax.net.ssl.SSLSocketFactory' abstract='true' name='engineGetSocketFactory'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='javax.net.ssl.KeyManager[]' name='km'/><parameter type='javax.net.ssl.TrustManager[]' name='tm'/><parameter type='java.security.SecureRandom' name='sr'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/></method><method visibility='protected' return='javax.net.ssl.SSLParameters' name='engineGetDefaultSSLParameters' api_added='9'/><method visibility='protected' return='javax.net.ssl.SSLParameters' name='engineGetSupportedSSLParameters' api_added='9'/></class><class extends='java.lang.Object' abstract='true' name='SSLEngine'><constructor visibility='protected' type='javax.net.ssl.SSLEngine' name='SSLEngine'/><constructor visibility='protected' type='javax.net.ssl.SSLEngine' name='SSLEngine'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></constructor><method abstract='true' name='beginHandshake'><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method abstract='true' name='closeInbound'><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method abstract='true' name='closeOutbound'/><method return='java.lang.Runnable' abstract='true' name='getDelegatedTask'/><method return='boolean' abstract='true' name='getEnableSessionCreation'/><method return='java.lang.String[]' abstract='true' name='getEnabledCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getEnabledProtocols'/><method return='javax.net.ssl.SSLEngineResult.HandshakeStatus' abstract='true' name='getHandshakeStatus'/><method return='boolean' abstract='true' name='getNeedClientAuth'/><method return='java.lang.String' name='getPeerHost'/><method return='int' name='getPeerPort'/><method return='javax.net.ssl.SSLSession' abstract='true' name='getSession'/><method return='java.lang.String[]' abstract='true' name='getSupportedCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getSupportedProtocols'/><method return='boolean' abstract='true' name='getUseClientMode'/><method return='boolean' abstract='true' name='getWantClientAuth'/><method return='boolean' abstract='true' name='isInboundDone'/><method return='boolean' abstract='true' name='isOutboundDone'/><method abstract='true' name='setEnableSessionCreation'><parameter type='boolean' name='flag'/></method><method abstract='true' name='setEnabledCipherSuites'><parameter type='java.lang.String[]' name='suites'/></method><method abstract='true' name='setEnabledProtocols'><parameter type='java.lang.String[]' name='protocols'/></method><method abstract='true' name='setNeedClientAuth'><parameter type='boolean' name='need'/></method><method abstract='true' name='setUseClientMode'><parameter type='boolean' name='mode'/></method><method abstract='true' name='setWantClientAuth'><parameter type='boolean' name='want'/></method><method return='javax.net.ssl.SSLEngineResult' abstract='true' name='unwrap'><parameter type='java.nio.ByteBuffer' name='src'/><parameter type='java.nio.ByteBuffer[]' name='dsts'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLEngineResult' name='unwrap'><parameter type='java.nio.ByteBuffer' name='src'/><parameter type='java.nio.ByteBuffer' name='dst'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLEngineResult' name='unwrap'><parameter type='java.nio.ByteBuffer' name='src'/><parameter type='java.nio.ByteBuffer[]' name='dsts'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLEngineResult' abstract='true' name='wrap'><parameter type='java.nio.ByteBuffer[]' name='srcs'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='java.nio.ByteBuffer' name='dst'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLEngineResult' name='wrap'><parameter type='java.nio.ByteBuffer[]' name='srcs'/><parameter type='java.nio.ByteBuffer' name='dst'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLEngineResult' name='wrap'><parameter type='java.nio.ByteBuffer' name='src'/><parameter type='java.nio.ByteBuffer' name='dst'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method return='javax.net.ssl.SSLParameters' name='getSSLParameters' api_added='9'/><method name='setSSLParameters' api_added='9'><parameter type='javax.net.ssl.SSLParameters' name='p'/></method></class><class extends='java.lang.Object' name='SSLEngineResult'><constructor type='javax.net.ssl.SSLEngineResult' name='SSLEngineResult'><parameter type='javax.net.ssl.SSLEngineResult.Status' name='status'/><parameter type='javax.net.ssl.SSLEngineResult.HandshakeStatus' name='handshakeStatus'/><parameter type='int' name='bytesConsumed'/><parameter type='int' name='bytesProduced'/></constructor><method return='int' name='bytesConsumed' final='true'/><method return='int' name='bytesProduced' final='true'/><method return='javax.net.ssl.SSLEngineResult.HandshakeStatus' name='getHandshakeStatus' final='true'/><method return='javax.net.ssl.SSLEngineResult.Status' name='getStatus' final='true'/></class><class extends='java.lang.Enum' static='true' name='SSLEngineResult.HandshakeStatus' final='true'><method return='javax.net.ssl.SSLEngineResult.HandshakeStatus' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='javax.net.ssl.SSLEngineResult.HandshakeStatus[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='SSLEngineResult.Status' final='true'><method return='javax.net.ssl.SSLEngineResult.Status' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='javax.net.ssl.SSLEngineResult.Status[]' static='true' name='values' final='true'/></class><class extends='java.io.IOException' name='SSLException'><constructor type='javax.net.ssl.SSLException' name='SSLException'><parameter type='java.lang.String' name='reason'/></constructor><constructor type='javax.net.ssl.SSLException' name='SSLException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='javax.net.ssl.SSLException' name='SSLException'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='javax.net.ssl.SSLException' name='SSLHandshakeException'><constructor type='javax.net.ssl.SSLHandshakeException' name='SSLHandshakeException'><parameter type='java.lang.String' name='reason'/></constructor></class><class extends='javax.net.ssl.SSLException' name='SSLKeyException'><constructor type='javax.net.ssl.SSLKeyException' name='SSLKeyException'><parameter type='java.lang.String' name='reason'/></constructor></class><class extends='javax.net.ssl.SSLException' name='SSLPeerUnverifiedException'><constructor type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'><parameter type='java.lang.String' name='reason'/></constructor></class><class extends='java.security.BasicPermission' name='SSLPermission' final='true'><constructor type='javax.net.ssl.SSLPermission' name='SSLPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='javax.net.ssl.SSLPermission' name='SSLPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='javax.net.ssl.SSLException' name='SSLProtocolException'><constructor type='javax.net.ssl.SSLProtocolException' name='SSLProtocolException'><parameter type='java.lang.String' name='reason'/></constructor></class><class extends='java.net.ServerSocket' abstract='true' name='SSLServerSocket'><constructor visibility='protected' type='javax.net.ssl.SSLServerSocket' name='SSLServerSocket'><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLServerSocket' name='SSLServerSocket'><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLServerSocket' name='SSLServerSocket'><parameter type='int' name='port'/><parameter type='int' name='backlog'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLServerSocket' name='SSLServerSocket'><parameter type='int' name='port'/><parameter type='int' name='backlog'/><parameter type='java.net.InetAddress' name='address'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='boolean' abstract='true' name='getEnableSessionCreation'/><method return='java.lang.String[]' abstract='true' name='getEnabledCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getEnabledProtocols'/><method return='boolean' abstract='true' name='getNeedClientAuth'/><method return='java.lang.String[]' abstract='true' name='getSupportedCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getSupportedProtocols'/><method return='boolean' abstract='true' name='getUseClientMode'/><method return='boolean' abstract='true' name='getWantClientAuth'/><method abstract='true' name='setEnableSessionCreation'><parameter type='boolean' name='flag'/></method><method abstract='true' name='setEnabledCipherSuites'><parameter type='java.lang.String[]' name='suites'/></method><method abstract='true' name='setEnabledProtocols'><parameter type='java.lang.String[]' name='protocols'/></method><method abstract='true' name='setNeedClientAuth'><parameter type='boolean' name='need'/></method><method abstract='true' name='setUseClientMode'><parameter type='boolean' name='mode'/></method><method abstract='true' name='setWantClientAuth'><parameter type='boolean' name='want'/></method></class><class extends='javax.net.ServerSocketFactory' abstract='true' name='SSLServerSocketFactory'><constructor visibility='protected' type='javax.net.ssl.SSLServerSocketFactory' name='SSLServerSocketFactory'/><method return='javax.net.ServerSocketFactory' static='true' name='getDefault'/><method return='java.lang.String[]' abstract='true' name='getDefaultCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getSupportedCipherSuites'/></class><class extends='java.util.EventObject' name='SSLSessionBindingEvent'><constructor type='javax.net.ssl.SSLSessionBindingEvent' name='SSLSessionBindingEvent'><parameter type='javax.net.ssl.SSLSession' name='session'/><parameter type='java.lang.String' name='name'/></constructor><method return='java.lang.String' name='getName'/><method return='javax.net.ssl.SSLSession' name='getSession'/></class><class extends='java.net.Socket' abstract='true' name='SSLSocket'><constructor visibility='protected' type='javax.net.ssl.SSLSocket' name='SSLSocket'/><constructor visibility='protected' type='javax.net.ssl.SSLSocket' name='SSLSocket'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLSocket' name='SSLSocket'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLSocket' name='SSLSocket'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='clientAddress'/><parameter type='int' name='clientPort'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></constructor><constructor visibility='protected' type='javax.net.ssl.SSLSocket' name='SSLSocket'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='clientAddress'/><parameter type='int' name='clientPort'/><exception type='java.io.IOException' name='IOException'/></constructor><method abstract='true' name='addHandshakeCompletedListener'><parameter type='javax.net.ssl.HandshakeCompletedListener' name='listener'/></method><method return='boolean' abstract='true' name='getEnableSessionCreation'/><method return='java.lang.String[]' abstract='true' name='getEnabledCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getEnabledProtocols'/><method return='boolean' abstract='true' name='getNeedClientAuth'/><method return='javax.net.ssl.SSLSession' abstract='true' name='getSession'/><method return='java.lang.String[]' abstract='true' name='getSupportedCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getSupportedProtocols'/><method return='boolean' abstract='true' name='getUseClientMode'/><method return='boolean' abstract='true' name='getWantClientAuth'/><method abstract='true' name='removeHandshakeCompletedListener'><parameter type='javax.net.ssl.HandshakeCompletedListener' name='listener'/></method><method abstract='true' name='setEnableSessionCreation'><parameter type='boolean' name='flag'/></method><method abstract='true' name='setEnabledCipherSuites'><parameter type='java.lang.String[]' name='suites'/></method><method abstract='true' name='setEnabledProtocols'><parameter type='java.lang.String[]' name='protocols'/></method><method abstract='true' name='setNeedClientAuth'><parameter type='boolean' name='need'/></method><method abstract='true' name='setUseClientMode'><parameter type='boolean' name='mode'/></method><method abstract='true' name='setWantClientAuth'><parameter type='boolean' name='want'/></method><method abstract='true' name='startHandshake'><exception type='java.io.IOException' name='IOException'/></method><method return='javax.net.ssl.SSLParameters' name='getSSLParameters' api_added='9'/><method name='setSSLParameters' api_added='9'><parameter type='javax.net.ssl.SSLParameters' name='p'/></method></class><class extends='javax.net.SocketFactory' abstract='true' name='SSLSocketFactory'><constructor type='javax.net.ssl.SSLSocketFactory' name='SSLSocketFactory'/><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.net.Socket' name='s'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='boolean' name='autoClose'/><exception type='java.io.IOException' name='IOException'/></method><method return='javax.net.SocketFactory' static='true' name='getDefault'/><method return='java.lang.String[]' abstract='true' name='getDefaultCipherSuites'/><method return='java.lang.String[]' abstract='true' name='getSupportedCipherSuites'/></class><class extends='java.lang.Object' name='TrustManagerFactory'><constructor visibility='protected' type='javax.net.ssl.TrustManagerFactory' name='TrustManagerFactory'><parameter type='javax.net.ssl.TrustManagerFactorySpi' name='factorySpi'/><parameter type='java.security.Provider' name='provider'/><parameter type='java.lang.String' name='algorithm'/></constructor><method return='java.lang.String' name='getAlgorithm' final='true'/><method return='java.lang.String' static='true' name='getDefaultAlgorithm' final='true'/><method return='javax.net.ssl.TrustManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='javax.net.ssl.TrustManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.lang.String' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/></method><method return='javax.net.ssl.TrustManagerFactory' static='true' name='getInstance' final='true'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.Provider' name='provider'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/></method><method return='java.security.Provider' name='getProvider' final='true'/><method return='javax.net.ssl.TrustManager[]' name='getTrustManagers' final='true'/><method name='init' final='true'><parameter type='java.security.KeyStore' name='ks'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method name='init' final='true'><parameter type='javax.net.ssl.ManagerFactoryParameters' name='spec'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' abstract='true' name='TrustManagerFactorySpi'><constructor type='javax.net.ssl.TrustManagerFactorySpi' name='TrustManagerFactorySpi'/><method visibility='protected' return='javax.net.ssl.TrustManager[]' abstract='true' name='engineGetTrustManagers'/><method visibility='protected' abstract='true' name='engineInit'><parameter type='java.security.KeyStore' name='ks'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/></method><method visibility='protected' abstract='true' name='engineInit'><parameter type='javax.net.ssl.ManagerFactoryParameters' name='spec'/><exception type='java.security.InvalidAlgorithmParameterException' name='InvalidAlgorithmParameterException'/></method></class><class extends='java.lang.Object' abstract='true' name='X509ExtendedKeyManager'><constructor visibility='protected' type='javax.net.ssl.X509ExtendedKeyManager' name='X509ExtendedKeyManager'/><method return='java.lang.String' name='chooseEngineClientAlias'><parameter type='java.lang.String[]' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/><parameter type='javax.net.ssl.SSLEngine' name='engine'/></method><method return='java.lang.String' name='chooseEngineServerAlias'><parameter type='java.lang.String' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/><parameter type='javax.net.ssl.SSLEngine' name='engine'/></method></class><class extends='java.lang.Object' name='SSLParameters' api_added='9'><constructor type='javax.net.ssl.SSLParameters' name='SSLParameters' api_added='9'/><constructor type='javax.net.ssl.SSLParameters' name='SSLParameters' api_added='9'><parameter type='java.lang.String[]' name='cipherSuites'/></constructor><constructor type='javax.net.ssl.SSLParameters' name='SSLParameters' api_added='9'><parameter type='java.lang.String[]' name='cipherSuites'/><parameter type='java.lang.String[]' name='protocols'/></constructor><method return='java.lang.String[]' name='getCipherSuites' api_added='9'/><method return='boolean' name='getNeedClientAuth' api_added='9'/><method return='java.lang.String[]' name='getProtocols' api_added='9'/><method return='boolean' name='getWantClientAuth' api_added='9'/><method name='setCipherSuites' api_added='9'><parameter type='java.lang.String[]' name='cipherSuites'/></method><method name='setNeedClientAuth' api_added='9'><parameter type='boolean' name='needClientAuth'/></method><method name='setProtocols' api_added='9'><parameter type='java.lang.String[]' name='protocols'/></method><method name='setWantClientAuth' api_added='9'><parameter type='boolean' name='wantClientAuth'/></method></class><interface abstract='true' name='HandshakeCompletedListener'><method abstract='true' name='handshakeCompleted'><parameter type='javax.net.ssl.HandshakeCompletedEvent' name='event'/></method></interface><interface abstract='true' name='HostnameVerifier'><method return='boolean' abstract='true' name='verify'><parameter type='java.lang.String' name='hostname'/><parameter type='javax.net.ssl.SSLSession' name='session'/></method></interface><interface abstract='true' name='KeyManager'/><interface abstract='true' name='ManagerFactoryParameters'/><interface abstract='true' name='SSLSession'><method return='int' abstract='true' name='getApplicationBufferSize'/><method return='java.lang.String' abstract='true' name='getCipherSuite'/><method return='long' abstract='true' name='getCreationTime'/><method return='byte[]' abstract='true' name='getId'/><method return='long' abstract='true' name='getLastAccessedTime'/><method return='java.security.cert.Certificate[]' abstract='true' name='getLocalCertificates'/><method return='java.security.Principal' abstract='true' name='getLocalPrincipal'/><method return='int' abstract='true' name='getPacketBufferSize'/><method return='javax.security.cert.X509Certificate[]' abstract='true' name='getPeerCertificateChain'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.security.cert.Certificate[]' abstract='true' name='getPeerCertificates'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.lang.String' abstract='true' name='getPeerHost'/><method return='int' abstract='true' name='getPeerPort'/><method return='java.security.Principal' abstract='true' name='getPeerPrincipal'><exception type='javax.net.ssl.SSLPeerUnverifiedException' name='SSLPeerUnverifiedException'/></method><method return='java.lang.String' abstract='true' name='getProtocol'/><method return='javax.net.ssl.SSLSessionContext' abstract='true' name='getSessionContext'/><method return='java.lang.Object' abstract='true' name='getValue'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String[]' abstract='true' name='getValueNames'/><method abstract='true' name='invalidate'/><method return='boolean' abstract='true' name='isValid'/><method abstract='true' name='putValue'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method abstract='true' name='removeValue'><parameter type='java.lang.String' name='name'/></method></interface><interface abstract='true' name='SSLSessionBindingListener'><method abstract='true' name='valueBound'><parameter type='javax.net.ssl.SSLSessionBindingEvent' name='event'/></method><method abstract='true' name='valueUnbound'><parameter type='javax.net.ssl.SSLSessionBindingEvent' name='event'/></method></interface><interface abstract='true' name='SSLSessionContext'><method return='java.util.Enumeration' abstract='true' name='getIds'/><method return='javax.net.ssl.SSLSession' abstract='true' name='getSession'><parameter type='byte[]' name='sessionId'/></method><method return='int' abstract='true' name='getSessionCacheSize'/><method return='int' abstract='true' name='getSessionTimeout'/><method abstract='true' name='setSessionCacheSize'><parameter type='int' name='size'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method abstract='true' name='setSessionTimeout'><parameter type='int' name='seconds'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></interface><interface abstract='true' name='TrustManager'/><interface abstract='true' name='X509KeyManager'><method return='java.lang.String' abstract='true' name='chooseClientAlias'><parameter type='java.lang.String[]' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/><parameter type='java.net.Socket' name='socket'/></method><method return='java.lang.String' abstract='true' name='chooseServerAlias'><parameter type='java.lang.String' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/><parameter type='java.net.Socket' name='socket'/></method><method return='java.security.cert.X509Certificate[]' abstract='true' name='getCertificateChain'><parameter type='java.lang.String' name='alias'/></method><method return='java.lang.String[]' abstract='true' name='getClientAliases'><parameter type='java.lang.String' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/></method><method return='java.security.PrivateKey' abstract='true' name='getPrivateKey'><parameter type='java.lang.String' name='alias'/></method><method return='java.lang.String[]' abstract='true' name='getServerAliases'><parameter type='java.lang.String' name='keyType'/><parameter type='java.security.Principal[]' name='issuers'/></method></interface><interface abstract='true' name='X509TrustManager'><method abstract='true' name='checkClientTrusted'><parameter type='java.security.cert.X509Certificate[]' name='chain'/><parameter type='java.lang.String' name='authType'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method abstract='true' name='checkServerTrusted'><parameter type='java.security.cert.X509Certificate[]' name='chain'/><parameter type='java.lang.String' name='authType'/><exception type='java.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.cert.X509Certificate[]' abstract='true' name='getAcceptedIssuers'/></interface></package><package name='javax.security.auth'><class extends='java.security.BasicPermission' name='AuthPermission' final='true'><constructor type='javax.security.auth.AuthPermission' name='AuthPermission'><parameter type='java.lang.String' name='name'/></constructor><constructor type='javax.security.auth.AuthPermission' name='AuthPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='actions'/></constructor></class><class extends='java.lang.Exception' name='DestroyFailedException'><constructor type='javax.security.auth.DestroyFailedException' name='DestroyFailedException'/><constructor type='javax.security.auth.DestroyFailedException' name='DestroyFailedException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.security.Permission' name='PrivateCredentialPermission' final='true'><constructor type='javax.security.auth.PrivateCredentialPermission' name='PrivateCredentialPermission'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='action'/></constructor><method return='boolean' api_removed='14' name='equals'><parameter type='java.lang.Object' name='obj'/></method><method return='java.lang.String' name='getActions'/><method return='java.lang.String' name='getCredentialClass'/><method return='java.lang.String[][]' name='getPrincipals'/><method return='int' api_removed='14' name='hashCode'/><method return='boolean' name='implies'><parameter type='java.security.Permission' name='permission'/></method></class><class extends='java.lang.Object' name='Subject' final='true'><constructor type='javax.security.auth.Subject' name='Subject'/><constructor type='javax.security.auth.Subject' name='Subject'><parameter type='boolean' name='readOnly'/><parameter type='java.util.Set&lt;? extends java.security.Principal&gt;' name='subjPrincipals'/><parameter type='java.util.Set&lt;?&gt;' name='pubCredentials'/><parameter type='java.util.Set&lt;?&gt;' name='privCredentials'/></constructor><method return='java.lang.Object' api_removed='9' static='true' name='doAs'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedAction' name='action'/></method><method return='java.lang.Object' api_removed='9' static='true' name='doAs'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedExceptionAction' name='action'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method><method return='java.lang.Object' api_removed='9' static='true' name='doAsPrivileged'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedAction' name='action'/><parameter type='java.security.AccessControlContext' name='context'/></method><method return='java.lang.Object' api_removed='9' static='true' name='doAsPrivileged'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedExceptionAction' name='action'/><parameter type='java.security.AccessControlContext' name='context'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method><method return='java.util.Set&lt;java.security.Principal&gt;' name='getPrincipals'/><method return='java.util.Set&lt;T&gt;' name='getPrincipals'><parameter type='java.lang.Class&lt;T&gt;' name='c'/></method><method return='java.util.Set&lt;java.lang.Object&gt;' name='getPrivateCredentials'/><method return='java.util.Set&lt;T&gt;' name='getPrivateCredentials'><parameter type='java.lang.Class&lt;T&gt;' name='c'/></method><method return='java.util.Set&lt;java.lang.Object&gt;' name='getPublicCredentials'/><method return='java.util.Set&lt;T&gt;' name='getPublicCredentials'><parameter type='java.lang.Class&lt;T&gt;' name='c'/></method><method return='javax.security.auth.Subject' static='true' name='getSubject'><parameter type='java.security.AccessControlContext' name='context'/></method><method return='boolean' name='isReadOnly'/><method name='setReadOnly'/><method return='T' static='true' name='doAs' api_added='9'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedAction&lt;T&gt;' name='action'/></method><method return='T' static='true' name='doAs' api_added='9'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedExceptionAction&lt;T&gt;' name='action'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method><method return='T' static='true' name='doAsPrivileged' api_added='9'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedAction&lt;T&gt;' name='action'/><parameter type='java.security.AccessControlContext' name='context'/></method><method return='T' static='true' name='doAsPrivileged' api_added='9'><parameter type='javax.security.auth.Subject' name='subject'/><parameter type='java.security.PrivilegedExceptionAction&lt;T&gt;' name='action'/><parameter type='java.security.AccessControlContext' name='context'/><exception type='java.security.PrivilegedActionException' name='PrivilegedActionException'/></method></class><class extends='java.lang.Object' name='SubjectDomainCombiner'><constructor type='javax.security.auth.SubjectDomainCombiner' name='SubjectDomainCombiner'><parameter type='javax.security.auth.Subject' name='subject'/></constructor><method return='java.security.ProtectionDomain[]' name='combine'><parameter type='java.security.ProtectionDomain[]' name='currentDomains'/><parameter type='java.security.ProtectionDomain[]' name='assignedDomains'/></method><method return='javax.security.auth.Subject' name='getSubject'/></class><interface abstract='true' name='Destroyable'><method abstract='true' name='destroy'><exception type='javax.security.auth.DestroyFailedException' name='DestroyFailedException'/></method><method return='boolean' abstract='true' name='isDestroyed'/></interface></package><package name='javax.security.auth.callback'><class extends='java.lang.Object' name='PasswordCallback'><constructor type='javax.security.auth.callback.PasswordCallback' name='PasswordCallback'><parameter type='java.lang.String' name='prompt'/><parameter type='boolean' name='echoOn'/></constructor><method name='clearPassword'/><method return='char[]' name='getPassword'/><method return='java.lang.String' name='getPrompt'/><method return='boolean' name='isEchoOn'/><method name='setPassword'><parameter type='char[]' name='password'/></method></class><class extends='java.lang.Exception' name='UnsupportedCallbackException'><constructor type='javax.security.auth.callback.UnsupportedCallbackException' name='UnsupportedCallbackException'><parameter type='javax.security.auth.callback.Callback' name='callback'/></constructor><constructor type='javax.security.auth.callback.UnsupportedCallbackException' name='UnsupportedCallbackException'><parameter type='javax.security.auth.callback.Callback' name='callback'/><parameter type='java.lang.String' name='message'/></constructor><method return='javax.security.auth.callback.Callback' name='getCallback'/></class><interface abstract='true' name='Callback'/><interface abstract='true' name='CallbackHandler'><method abstract='true' name='handle'><parameter type='javax.security.auth.callback.Callback[]' name='callbacks'/><exception type='java.io.IOException' name='IOException'/><exception type='javax.security.auth.callback.UnsupportedCallbackException' name='UnsupportedCallbackException'/></method></interface></package><package name='javax.security.auth.login'><class extends='java.security.GeneralSecurityException' name='LoginException'><constructor type='javax.security.auth.login.LoginException' name='LoginException'/><constructor type='javax.security.auth.login.LoginException' name='LoginException'><parameter type='java.lang.String' name='message'/></constructor></class></package><package name='javax.security.auth.x500'><class extends='java.lang.Object' name='X500Principal' final='true'><constructor type='javax.security.auth.x500.X500Principal' name='X500Principal'><parameter type='byte[]' name='name'/></constructor><constructor type='javax.security.auth.x500.X500Principal' name='X500Principal'><parameter type='java.io.InputStream' name='in'/></constructor><constructor type='javax.security.auth.x500.X500Principal' name='X500Principal'><parameter type='java.lang.String' name='name'/></constructor><method return='byte[]' name='getEncoded'/><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getName'><parameter type='java.lang.String' name='format'/></method><method return='java.lang.String' api_removed='14' name='getName' api_added='9'><parameter type='java.lang.String' name='format'/><parameter type='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='oidMap'/></method><method return='java.lang.String' name='getName' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/></method></class></package><package name='javax.security.cert'><class extends='java.lang.Object' abstract='true' name='Certificate'><constructor type='javax.security.cert.Certificate' name='Certificate'/><method return='byte[]' abstract='true' name='getEncoded'><exception type='javax.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></method><method return='java.security.PublicKey' abstract='true' name='getPublicKey'/><method return='java.lang.String' abstract='true' name='toString'/><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><exception type='javax.security.cert.CertificateException' name='CertificateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method><method abstract='true' name='verify'><parameter type='java.security.PublicKey' name='key'/><parameter type='java.lang.String' name='sigProvider'/><exception type='javax.security.cert.CertificateException' name='CertificateException'/><exception type='java.security.InvalidKeyException' name='InvalidKeyException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.NoSuchProviderException' name='NoSuchProviderException'/><exception type='java.security.SignatureException' name='SignatureException'/></method></class><class extends='javax.security.cert.CertificateException' name='CertificateEncodingException'><constructor type='javax.security.cert.CertificateEncodingException' name='CertificateEncodingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.security.cert.CertificateEncodingException' name='CertificateEncodingException'/></class><class extends='java.lang.Exception' name='CertificateException'><constructor type='javax.security.cert.CertificateException' name='CertificateException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.security.cert.CertificateException' name='CertificateException'/></class><class extends='javax.security.cert.CertificateException' name='CertificateExpiredException'><constructor type='javax.security.cert.CertificateExpiredException' name='CertificateExpiredException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.security.cert.CertificateExpiredException' name='CertificateExpiredException'/></class><class extends='javax.security.cert.CertificateException' name='CertificateNotYetValidException'><constructor type='javax.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></class><class extends='javax.security.cert.CertificateException' name='CertificateParsingException'><constructor type='javax.security.cert.CertificateParsingException' name='CertificateParsingException'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.security.cert.CertificateParsingException' name='CertificateParsingException'/></class><class extends='javax.security.cert.Certificate' abstract='true' name='X509Certificate'><constructor type='javax.security.cert.X509Certificate' name='X509Certificate'/><method abstract='true' name='checkValidity'><exception type='javax.security.cert.CertificateExpiredException' name='CertificateExpiredException'/><exception type='javax.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></method><method abstract='true' name='checkValidity'><parameter type='java.util.Date' name='date'/><exception type='javax.security.cert.CertificateExpiredException' name='CertificateExpiredException'/><exception type='javax.security.cert.CertificateNotYetValidException' name='CertificateNotYetValidException'/></method><method return='javax.security.cert.X509Certificate' static='true' name='getInstance' final='true'><parameter type='java.io.InputStream' name='inStream'/><exception type='javax.security.cert.CertificateException' name='CertificateException'/></method><method return='javax.security.cert.X509Certificate' static='true' name='getInstance' final='true'><parameter type='byte[]' name='certData'/><exception type='javax.security.cert.CertificateException' name='CertificateException'/></method><method return='java.security.Principal' abstract='true' name='getIssuerDN'/><method return='java.util.Date' abstract='true' name='getNotAfter'/><method return='java.util.Date' abstract='true' name='getNotBefore'/><method return='java.math.BigInteger' abstract='true' name='getSerialNumber'/><method return='java.lang.String' abstract='true' name='getSigAlgName'/><method return='java.lang.String' abstract='true' name='getSigAlgOID'/><method return='byte[]' abstract='true' name='getSigAlgParams'/><method return='java.security.Principal' abstract='true' name='getSubjectDN'/><method return='int' abstract='true' name='getVersion'/></class></package><package name='javax.sql'><class extends='java.util.EventObject' name='ConnectionEvent'><constructor type='javax.sql.ConnectionEvent' name='ConnectionEvent'><parameter type='javax.sql.PooledConnection' name='theConnection'/></constructor><constructor type='javax.sql.ConnectionEvent' name='ConnectionEvent'><parameter type='javax.sql.PooledConnection' name='theConnection'/><parameter type='java.sql.SQLException' name='theException'/></constructor><method return='java.sql.SQLException' name='getSQLException'/></class><class extends='java.util.EventObject' name='RowSetEvent'><constructor type='javax.sql.RowSetEvent' name='RowSetEvent'><parameter type='javax.sql.RowSet' name='theSource'/></constructor></class><class extends='java.util.EventObject' name='StatementEvent' api_added='9'><constructor type='javax.sql.StatementEvent' name='StatementEvent' api_added='9'><parameter type='javax.sql.PooledConnection' name='con'/><parameter type='java.sql.PreparedStatement' name='statement'/><parameter type='java.sql.SQLException' name='exception'/></constructor><constructor type='javax.sql.StatementEvent' name='StatementEvent' api_added='9'><parameter type='javax.sql.PooledConnection' name='con'/><parameter type='java.sql.PreparedStatement' name='statement'/></constructor><method return='java.sql.SQLException' name='getSQLException' api_added='9'/><method return='java.sql.PreparedStatement' name='getStatement' api_added='9'/></class><interface abstract='true' name='ConnectionEventListener'><method abstract='true' name='connectionClosed'><parameter type='javax.sql.ConnectionEvent' name='theEvent'/></method><method abstract='true' name='connectionErrorOccurred'><parameter type='javax.sql.ConnectionEvent' name='theEvent'/></method></interface><interface abstract='true' name='ConnectionPoolDataSource'><method return='java.io.PrintWriter' abstract='true' api_removed='9' name='getLogWriter'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' api_removed='9' name='getLoginTimeout'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='javax.sql.PooledConnection' abstract='true' name='getPooledConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='javax.sql.PooledConnection' abstract='true' name='getPooledConnection'><parameter type='java.lang.String' name='theUser'/><parameter type='java.lang.String' name='thePassword'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='9' name='setLogWriter'><parameter type='java.io.PrintWriter' name='theWriter'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='9' name='setLoginTimeout'><parameter type='int' name='theTimeout'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='DataSource'><method return='java.sql.Connection' abstract='true' name='getConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' abstract='true' name='getConnection'><parameter type='java.lang.String' name='theUsername'/><parameter type='java.lang.String' name='thePassword'/><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.io.PrintWriter' abstract='true' api_removed='9' name='getLogWriter'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' api_removed='9' name='getLoginTimeout'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='9' name='setLogWriter'><parameter type='java.io.PrintWriter' name='theWriter'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='9' name='setLoginTimeout'><parameter type='int' name='theTimeout'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='PooledConnection'><method abstract='true' name='addConnectionEventListener'><parameter type='javax.sql.ConnectionEventListener' name='theListener'/></method><method abstract='true' name='close'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.Connection' abstract='true' name='getConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='removeConnectionEventListener'><parameter type='javax.sql.ConnectionEventListener' name='theListener'/></method><method abstract='true' name='addStatementEventListener' api_added='9'><parameter type='javax.sql.StatementEventListener' name='listener'/></method><method abstract='true' name='removeStatementEventListener' api_added='9'><parameter type='javax.sql.StatementEventListener' name='listener'/></method></interface><interface abstract='true' name='RowSet'><method abstract='true' name='addRowSetListener'><parameter type='javax.sql.RowSetListener' name='theListener'/></method><method abstract='true' name='clearParameters'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='execute'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getCommand'/><method return='java.lang.String' abstract='true' name='getDataSourceName'/><method return='boolean' abstract='true' name='getEscapeProcessing'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxFieldSize'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getMaxRows'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getPassword'/><method return='int' abstract='true' name='getQueryTimeout'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getTransactionIsolation'/><method return='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' abstract='true' name='getTypeMap'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getUrl'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.String' abstract='true' name='getUsername'/><method return='boolean' abstract='true' name='isReadOnly'/><method abstract='true' name='removeRowSetListener'><parameter type='javax.sql.RowSetListener' name='theListener'/></method><method abstract='true' name='setArray'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Array' name='theArray'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBigDecimal'><parameter type='int' name='parameterIndex'/><parameter type='java.math.BigDecimal' name='theBigDecimal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Blob' name='theBlob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBoolean'><parameter type='int' name='parameterIndex'/><parameter type='boolean' name='theBoolean'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setByte'><parameter type='int' name='parameterIndex'/><parameter type='byte' name='theByte'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBytes'><parameter type='int' name='parameterIndex'/><parameter type='byte[]' name='theByteArray'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Clob' name='theClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCommand'><parameter type='java.lang.String' name='cmd'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setConcurrency'><parameter type='int' name='concurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDataSourceName'><parameter type='java.lang.String' name='name'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Date' name='theDate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Date' name='theDate'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDouble'><parameter type='int' name='parameterIndex'/><parameter type='double' name='theDouble'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setEscapeProcessing'><parameter type='boolean' name='enable'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFloat'><parameter type='int' name='parameterIndex'/><parameter type='float' name='theFloat'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setInt'><parameter type='int' name='parameterIndex'/><parameter type='int' name='theInteger'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLong'><parameter type='int' name='parameterIndex'/><parameter type='long' name='theLong'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setMaxFieldSize'><parameter type='int' name='max'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setMaxRows'><parameter type='int' name='max'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='int' name='parameterIndex'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull'><parameter type='int' name='parameterIndex'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setPassword'><parameter type='java.lang.String' name='password'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setQueryTimeout'><parameter type='int' name='seconds'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setReadOnly'><parameter type='boolean' name='readOnly'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRef'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Ref' name='theRef'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setShort'><parameter type='int' name='parameterIndex'/><parameter type='short' name='theShort'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setString'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Time' name='theTime'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Time' name='theTime'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTransactionIsolation'><parameter type='int' name='level'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setType'><parameter type='int' name='type'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' api_removed='14' name='setTypeMap'><parameter type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;' name='theTypeMap'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setUrl'><parameter type='java.lang.String' name='theURL'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setUsername'><parameter type='java.lang.String' name='theUsername'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setAsciiStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBigDecimal' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.math.BigDecimal' name='theBigDecimal'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBinaryStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.InputStream' name='theInputStream'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBlob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Blob' name='theBlob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBoolean' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='boolean' name='theBoolean'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setByte' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='byte' name='theByte'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setBytes' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='byte[]' name='theByteArray'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><parameter type='int' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Clob' name='theClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Date' name='theDate'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDate' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Date' name='theDate'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setDouble' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='double' name='theDouble'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setFloat' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='float' name='theFloat'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setInt' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='theInteger'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLong' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='long' name='theLong'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNCharacterStream' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.NClob' name='theNClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.NClob' name='theNClob'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNClob' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.io.Reader' name='theReader'/><parameter type='long' name='length'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNString' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.lang.String' name='theNString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNString' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.String' name='theNString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNull' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='int' name='sqlType'/><parameter type='java.lang.String' name='typeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setObject' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.Object' name='theObject'/><parameter type='int' name='targetSqlType'/><parameter type='int' name='scale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRowId' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.RowId' name='theRowId'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setRowId' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.RowId' name='theRowId'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSQLXML' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.sql.SQLXML' name='theSQLXML'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSQLXML' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.SQLXML' name='theSQLXML'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setShort' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='short' name='theShort'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setString' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.lang.String' name='theString'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Time' name='theTime'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTime' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Time' name='theTime'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTimestamp' api_added='9'><parameter type='java.lang.String' name='parameterName'/><parameter type='java.sql.Timestamp' name='theTimestamp'/><parameter type='java.util.Calendar' name='theCalendar'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setURL' api_added='9'><parameter type='int' name='parameterIndex'/><parameter type='java.net.URL' name='theURL'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTypeMap' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='java.lang.Class&lt;?&gt;&gt;' name='arg1'/></method></interface><interface abstract='true' name='RowSetInternal'><method return='java.sql.Connection' abstract='true' name='getConnection'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getOriginal'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.sql.ResultSet' abstract='true' name='getOriginalRow'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='java.lang.Object[]' abstract='true' name='getParams'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setMetaData'><parameter type='javax.sql.RowSetMetaData' name='theMetaData'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='RowSetListener'><method abstract='true' name='cursorMoved'><parameter type='javax.sql.RowSetEvent' name='theEvent'/></method><method abstract='true' name='rowChanged'><parameter type='javax.sql.RowSetEvent' name='theEvent'/></method><method abstract='true' name='rowSetChanged'><parameter type='javax.sql.RowSetEvent' name='theEvent'/></method></interface><interface abstract='true' name='RowSetMetaData'><method abstract='true' name='setAutoIncrement'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='autoIncrement'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCaseSensitive'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='caseSensitive'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCatalogName'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='catalogName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnCount'><parameter type='int' name='columnCount'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnDisplaySize'><parameter type='int' name='columnIndex'/><parameter type='int' name='displaySize'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnLabel'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='theLabel'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnName'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='theColumnName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnType'><parameter type='int' name='columnIndex'/><parameter type='int' name='theSQLType'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setColumnTypeName'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='theTypeName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setCurrency'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isCurrency'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setNullable'><parameter type='int' name='columnIndex'/><parameter type='int' name='nullability'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setPrecision'><parameter type='int' name='columnIndex'/><parameter type='int' name='thePrecision'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setScale'><parameter type='int' name='columnIndex'/><parameter type='int' name='theScale'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSchemaName'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='theSchemaName'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSearchable'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isSearchable'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setSigned'><parameter type='int' name='columnIndex'/><parameter type='boolean' name='isSigned'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setTableName'><parameter type='int' name='columnIndex'/><parameter type='java.lang.String' name='theTableName'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='RowSetReader'><method abstract='true' name='readData'><parameter type='javax.sql.RowSetInternal' name='theCaller'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='RowSetWriter'><method return='boolean' abstract='true' name='writeData'><parameter type='javax.sql.RowSetInternal' name='theRowSet'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='CommonDataSource' api_added='9'><method return='java.io.PrintWriter' abstract='true' name='getLogWriter' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method return='int' abstract='true' name='getLoginTimeout' api_added='9'><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLogWriter' api_added='9'><parameter type='java.io.PrintWriter' name='out'/><exception type='java.sql.SQLException' name='SQLException'/></method><method abstract='true' name='setLoginTimeout' api_added='9'><parameter type='int' name='seconds'/><exception type='java.sql.SQLException' name='SQLException'/></method></interface><interface abstract='true' name='StatementEventListener' api_added='9'><method abstract='true' name='statementClosed' api_added='9'><parameter type='javax.sql.StatementEvent' name='event'/></method><method abstract='true' name='statementErrorOccurred' api_added='9'><parameter type='javax.sql.StatementEvent' name='event'/></method></interface></package><package name='javax.xml'><class extends='java.lang.Object' name='XMLConstants'><constructor api_removed='8' type='javax.xml.XMLConstants' name='XMLConstants'/></class></package><package name='javax.xml.parsers'><class extends='java.lang.Object' abstract='true' name='DocumentBuilder'><constructor visibility='protected' type='javax.xml.parsers.DocumentBuilder' name='DocumentBuilder'/><method return='org.w3c.dom.DOMImplementation' abstract='true' name='getDOMImplementation'/><method return='boolean' abstract='true' name='isNamespaceAware'/><method return='boolean' abstract='true' name='isValidating'/><method return='boolean' name='isXIncludeAware'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='org.w3c.dom.Document' abstract='true' name='newDocument'/><method return='org.w3c.dom.Document' name='parse'><parameter type='java.io.File' name='file'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.w3c.dom.Document' name='parse'><parameter type='java.io.InputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.w3c.dom.Document' name='parse'><parameter type='java.io.InputStream' name='stream'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.w3c.dom.Document' name='parse'><parameter type='java.lang.String' name='uri'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.w3c.dom.Document' abstract='true' name='parse'><parameter type='org.xml.sax.InputSource' name='source'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='reset'/><method abstract='true' name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method abstract='true' name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method return='javax.xml.validation.Schema' name='getSchema' api_added='8'/></class><class extends='java.lang.Object' abstract='true' name='DocumentBuilderFactory'><constructor visibility='protected' type='javax.xml.parsers.DocumentBuilderFactory' name='DocumentBuilderFactory'/><method return='java.lang.Object' abstract='true' name='getAttribute'><parameter type='java.lang.String' name='name'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='boolean' abstract='true' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/></method><method return='boolean' name='isCoalescing'/><method return='boolean' name='isExpandEntityReferences'/><method return='boolean' name='isIgnoringComments'/><method return='boolean' name='isIgnoringElementContentWhitespace'/><method return='boolean' name='isNamespaceAware'/><method return='boolean' name='isValidating'/><method return='boolean' name='isXIncludeAware'/><method return='javax.xml.parsers.DocumentBuilder' abstract='true' name='newDocumentBuilder'><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/></method><method return='javax.xml.parsers.DocumentBuilderFactory' static='true' name='newInstance'><exception type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'/></method><method abstract='true' name='setAttribute'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setCoalescing'><parameter type='boolean' name='value'/></method><method name='setExpandEntityReferences'><parameter type='boolean' name='value'/></method><method abstract='true' name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/></method><method name='setIgnoringComments'><parameter type='boolean' name='value'/></method><method name='setIgnoringElementContentWhitespace'><parameter type='boolean' name='value'/></method><method name='setNamespaceAware'><parameter type='boolean' name='value'/></method><method name='setValidating'><parameter type='boolean' name='value'/></method><method name='setXIncludeAware'><parameter type='boolean' name='value'/></method><method return='javax.xml.validation.Schema' name='getSchema' api_added='8'/><method name='setSchema' api_added='8'><parameter type='javax.xml.validation.Schema' name='schema'/></method><method return='javax.xml.parsers.DocumentBuilderFactory' static='true' name='newInstance' api_added='9'><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/></method></class><class extends='java.lang.Error' name='FactoryConfigurationError'><constructor type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'/><constructor type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'><parameter type='java.lang.Exception' name='cause'/></constructor><constructor type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'><parameter type='java.lang.Exception' name='cause'/><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'><parameter type='java.lang.String' name='message'/></constructor><method return='java.lang.Exception' name='getException'/></class><class extends='java.lang.Exception' name='ParserConfigurationException'><constructor type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/><constructor type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'><parameter type='java.lang.String' name='msg'/></constructor></class><class extends='java.lang.Object' abstract='true' name='SAXParser'><constructor visibility='protected' type='javax.xml.parsers.SAXParser' name='SAXParser'/><method return='org.xml.sax.Parser' abstract='true' name='getParser'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='java.lang.Object' abstract='true' name='getProperty'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='org.xml.sax.XMLReader' abstract='true' name='getXMLReader'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='boolean' abstract='true' name='isNamespaceAware'/><method return='boolean' abstract='true' name='isValidating'/><method return='boolean' name='isXIncludeAware'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='parse'><parameter type='java.io.File' name='file'/><parameter type='org.xml.sax.HandlerBase' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.io.File' name='file'/><parameter type='org.xml.sax.helpers.DefaultHandler' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.io.InputStream' name='stream'/><parameter type='org.xml.sax.HandlerBase' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.io.InputStream' name='stream'/><parameter type='org.xml.sax.HandlerBase' name='handler'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.io.InputStream' name='stream'/><parameter type='org.xml.sax.helpers.DefaultHandler' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.io.InputStream' name='stream'/><parameter type='org.xml.sax.helpers.DefaultHandler' name='handler'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='uri'/><parameter type='org.xml.sax.HandlerBase' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='uri'/><parameter type='org.xml.sax.helpers.DefaultHandler' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='source'/><parameter type='org.xml.sax.HandlerBase' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='source'/><parameter type='org.xml.sax.helpers.DefaultHandler' name='handler'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='reset'/><method abstract='true' name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='javax.xml.validation.Schema' name='getSchema' api_added='8'/></class><class extends='java.lang.Object' abstract='true' name='SAXParserFactory'><constructor visibility='protected' type='javax.xml.parsers.SAXParserFactory' name='SAXParserFactory'/><method return='boolean' abstract='true' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='boolean' name='isNamespaceAware'/><method return='boolean' name='isValidating'/><method return='boolean' name='isXIncludeAware'/><method return='javax.xml.parsers.SAXParserFactory' static='true' name='newInstance'><exception type='javax.xml.parsers.FactoryConfigurationError' name='FactoryConfigurationError'/></method><method return='javax.xml.parsers.SAXParser' abstract='true' name='newSAXParser'><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='javax.xml.parsers.ParserConfigurationException' name='ParserConfigurationException'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setNamespaceAware'><parameter type='boolean' name='value'/></method><method name='setValidating'><parameter type='boolean' name='value'/></method><method name='setXIncludeAware'><parameter type='boolean' name='value'/></method><method return='javax.xml.validation.Schema' name='getSchema' api_added='8'/><method name='setSchema' api_added='8'><parameter type='javax.xml.validation.Schema' name='schema'/></method><method return='javax.xml.parsers.SAXParserFactory' static='true' name='newInstance' api_added='9'><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/></method></class></package><package name='junit.framework'><class extends='java.lang.Object' name='Assert'><constructor visibility='protected' type='junit.framework.Assert' name='Assert'/><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expected'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='expected'/><parameter type='java.lang.String' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='double' name='expected'/><parameter type='double' name='actual'/><parameter type='double' name='delta'/></method><method static='true' name='assertEquals'><parameter type='double' name='expected'/><parameter type='double' name='actual'/><parameter type='double' name='delta'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='float' name='expected'/><parameter type='float' name='actual'/><parameter type='float' name='delta'/></method><method static='true' name='assertEquals'><parameter type='float' name='expected'/><parameter type='float' name='actual'/><parameter type='float' name='delta'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='long' name='expected'/><parameter type='long' name='actual'/></method><method static='true' name='assertEquals'><parameter type='long' name='expected'/><parameter type='long' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='boolean' name='expected'/><parameter type='boolean' name='actual'/></method><method static='true' name='assertEquals'><parameter type='boolean' name='expected'/><parameter type='boolean' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='byte' name='expected'/><parameter type='byte' name='actual'/></method><method static='true' name='assertEquals'><parameter type='byte' name='expected'/><parameter type='byte' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='char' name='expected'/><parameter type='char' name='actual'/></method><method static='true' name='assertEquals'><parameter type='char' name='expected'/><parameter type='char' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='short' name='expected'/><parameter type='short' name='actual'/></method><method static='true' name='assertEquals'><parameter type='short' name='expected'/><parameter type='short' name='actual'/></method><method static='true' name='assertEquals'><parameter type='java.lang.String' name='message'/><parameter type='int' name='expected'/><parameter type='int' name='actual'/></method><method static='true' name='assertEquals'><parameter type='int' name='expected'/><parameter type='int' name='actual'/></method><method static='true' name='assertFalse'><parameter type='java.lang.String' name='message'/><parameter type='boolean' name='condition'/></method><method static='true' name='assertFalse'><parameter type='boolean' name='condition'/></method><method static='true' name='assertNotNull'><parameter type='java.lang.Object' name='object'/></method><method static='true' name='assertNotNull'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='object'/></method><method static='true' name='assertNotSame'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertNotSame'><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertNull'><parameter type='java.lang.Object' name='object'/></method><method static='true' name='assertNull'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='object'/></method><method static='true' name='assertSame'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertSame'><parameter type='java.lang.Object' name='expected'/><parameter type='java.lang.Object' name='actual'/></method><method static='true' name='assertTrue'><parameter type='java.lang.String' name='message'/><parameter type='boolean' name='condition'/></method><method static='true' name='assertTrue'><parameter type='boolean' name='condition'/></method><method static='true' name='fail'><parameter type='java.lang.String' name='message'/></method><method static='true' name='fail'/><method static='true' name='failNotEquals' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Object' name='arg1'/><parameter type='java.lang.Object' name='arg2'/></method><method static='true' name='failNotSame' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Object' name='arg1'/><parameter type='java.lang.Object' name='arg2'/></method><method static='true' name='failSame' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='java.lang.String' static='true' name='format' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Object' name='arg1'/><parameter type='java.lang.Object' name='arg2'/></method></class><class extends='java.lang.Error' name='AssertionFailedError'><constructor type='junit.framework.AssertionFailedError' name='AssertionFailedError'/><constructor type='junit.framework.AssertionFailedError' name='AssertionFailedError'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='junit.framework.AssertionFailedError' name='ComparisonFailure'><constructor type='junit.framework.ComparisonFailure' name='ComparisonFailure'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='expected'/><parameter type='java.lang.String' name='actual'/></constructor><method return='java.lang.String' name='getActual' api_added='16'/><method return='java.lang.String' name='getExpected' api_added='16'/></class><class extends='junit.framework.Assert' abstract='true' name='TestCase'><constructor type='junit.framework.TestCase' name='TestCase'/><constructor type='junit.framework.TestCase' name='TestCase'><parameter type='java.lang.String' name='name'/></constructor><method return='int' name='countTestCases'/><method visibility='protected' return='junit.framework.TestResult' name='createResult'/><method return='java.lang.String' name='getName'/><method return='junit.framework.TestResult' name='run'/><method name='run'><parameter type='junit.framework.TestResult' name='result'/></method><method name='runBare'><exception type='java.lang.Throwable' name='Throwable'/></method><method visibility='protected' name='runTest'><exception type='java.lang.Throwable' name='Throwable'/></method><method name='setName'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' name='setUp'><exception type='java.lang.Exception' name='Exception'/></method><method visibility='protected' name='tearDown'><exception type='java.lang.Exception' name='Exception'/></method></class><class extends='java.lang.Object' name='TestFailure'><constructor type='junit.framework.TestFailure' name='TestFailure'><parameter type='junit.framework.Test' name='failedTest'/><parameter type='java.lang.Throwable' name='thrownException'/></constructor><method return='java.lang.String' name='exceptionMessage'/><method return='junit.framework.Test' name='failedTest'/><method return='boolean' name='isFailure'/><method return='java.lang.Throwable' name='thrownException'/><method return='java.lang.String' name='trace'/></class><class extends='java.lang.Object' name='TestResult'><constructor type='junit.framework.TestResult' name='TestResult'/><method synchronized='true' name='addError'><parameter type='junit.framework.Test' name='test'/><parameter type='java.lang.Throwable' name='t'/></method><method synchronized='true' name='addFailure'><parameter type='junit.framework.Test' name='test'/><parameter type='junit.framework.AssertionFailedError' name='t'/></method><method synchronized='true' name='addListener'><parameter type='junit.framework.TestListener' name='listener'/></method><method name='endTest'><parameter type='junit.framework.Test' name='test'/></method><method return='int' synchronized='true' name='errorCount'/><method return='java.util.Enumeration' synchronized='true' name='errors'/><method return='int' synchronized='true' name='failureCount'/><method return='java.util.Enumeration' synchronized='true' name='failures'/><method synchronized='true' name='removeListener'><parameter type='junit.framework.TestListener' name='listener'/></method><method visibility='protected' name='run'><parameter type='junit.framework.TestCase' name='test'/></method><method return='int' synchronized='true' name='runCount'/><method name='runProtected'><parameter type='junit.framework.Test' name='test'/><parameter type='junit.framework.Protectable' name='p'/></method><method return='boolean' synchronized='true' name='shouldStop'/><method name='startTest'><parameter type='junit.framework.Test' name='test'/></method><method synchronized='true' name='stop'/><method return='boolean' synchronized='true' name='wasSuccessful'/></class><class extends='java.lang.Object' name='TestSuite'><constructor type='junit.framework.TestSuite' name='TestSuite'/><constructor type='junit.framework.TestSuite' name='TestSuite'><parameter type='java.lang.Class' name='theClass'/><parameter type='java.lang.String' name='name'/></constructor><constructor type='junit.framework.TestSuite' name='TestSuite'><parameter type='java.lang.Class' name='theClass'/></constructor><constructor type='junit.framework.TestSuite' name='TestSuite'><parameter type='java.lang.String' name='name'/></constructor><method name='addTest'><parameter type='junit.framework.Test' name='test'/></method><method api_removed='16' name='addTestSuite'><parameter type='java.lang.Class' name='testClass'/></method><method return='int' name='countTestCases'/><method return='junit.framework.Test' api_removed='16' static='true' name='createTest'><parameter type='java.lang.Class' name='theClass'/><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getName'/><method return='java.lang.reflect.Constructor' api_removed='16' static='true' name='getTestConstructor'><parameter type='java.lang.Class' name='theClass'/><exception type='java.lang.NoSuchMethodException' name='NoSuchMethodException'/></method><method name='run'><parameter type='junit.framework.TestResult' name='result'/></method><method name='runTest'><parameter type='junit.framework.Test' name='test'/><parameter type='junit.framework.TestResult' name='result'/></method><method name='setName'><parameter type='java.lang.String' name='name'/></method><method return='junit.framework.Test' name='testAt'><parameter type='int' name='index'/></method><method return='int' name='testCount'/><method return='java.util.Enumeration' name='tests'/><method name='addTestSuite' api_added='16'><parameter type='java.lang.Class&lt;? extends junit.framework.TestCase&gt;' name='arg0'/></method><method return='junit.framework.Test' static='true' name='createTest' api_added='16'><parameter type='java.lang.Class&lt;?&gt;' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method return='java.lang.reflect.Constructor&lt;?&gt;' static='true' name='getTestConstructor' api_added='16'><parameter type='java.lang.Class&lt;?&gt;' name='arg0'/></method><method return='junit.framework.Test' static='true' name='warning' api_added='16'><parameter type='java.lang.String' name='arg0'/></method></class><interface abstract='true' name='Protectable'><method abstract='true' name='protect'><exception type='java.lang.Throwable' name='Throwable'/></method></interface><interface abstract='true' name='Test'><method return='int' abstract='true' name='countTestCases'/><method abstract='true' name='run'><parameter type='junit.framework.TestResult' name='result'/></method></interface><interface abstract='true' name='TestListener'><method abstract='true' name='addError'><parameter type='junit.framework.Test' name='test'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='addFailure'><parameter type='junit.framework.Test' name='test'/><parameter type='junit.framework.AssertionFailedError' name='t'/></method><method abstract='true' name='endTest'><parameter type='junit.framework.Test' name='test'/></method><method abstract='true' name='startTest'><parameter type='junit.framework.Test' name='test'/></method></interface></package><package name='junit.runner'><class extends='java.lang.Object' abstract='true' name='BaseTestRunner'><constructor type='junit.runner.BaseTestRunner' name='BaseTestRunner'/><method synchronized='true' name='addError'><parameter type='junit.framework.Test' name='test'/><parameter type='java.lang.Throwable' name='t'/></method><method synchronized='true' name='addFailure'><parameter type='junit.framework.Test' name='test'/><parameter type='junit.framework.AssertionFailedError' name='t'/></method><method visibility='protected' name='clearStatus'/><method return='java.lang.String' name='elapsedTimeAsString'><parameter type='long' name='runTime'/></method><method synchronized='true' name='endTest'><parameter type='junit.framework.Test' name='test'/></method><method return='java.lang.String' name='extractClassName'><parameter type='java.lang.String' name='className'/></method><method return='java.lang.String' static='true' name='getFilteredTrace'><parameter type='java.lang.Throwable' name='t'/></method><method return='java.lang.String' static='true' name='getFilteredTrace'><parameter type='java.lang.String' name='stack'/></method><method deprecated='16' return='junit.runner.TestSuiteLoader' name='getLoader'/><method return='java.lang.String' static='true' name='getPreference'><parameter type='java.lang.String' name='key'/></method><method return='int' static='true' name='getPreference'><parameter type='java.lang.String' name='key'/><parameter type='int' name='dflt'/></method><method visibility='protected' return='java.util.Properties' static='true' name='getPreferences'/><method return='junit.framework.Test' name='getTest'><parameter type='java.lang.String' name='suiteClassName'/></method><method deprecated='16' return='boolean' static='true' name='inVAJava'/><method visibility='protected' return='java.lang.Class' name='loadSuiteClass'><parameter type='java.lang.String' name='suiteClassName'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method visibility='protected' return='java.lang.String' name='processArguments'><parameter type='java.lang.String[]' name='args'/></method><method visibility='protected' abstract='true' name='runFailed'><parameter type='java.lang.String' name='message'/></method><method static='true' name='savePreferences'><exception type='java.io.IOException' name='IOException'/></method><method name='setLoading'><parameter type='boolean' name='enable'/></method><method name='setPreference'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method visibility='protected' static='true' name='setPreferences'><parameter type='java.util.Properties' name='preferences'/></method><method visibility='protected' return='boolean' static='true' name='showStackRaw'/><method synchronized='true' name='startTest'><parameter type='junit.framework.Test' name='test'/></method><method abstract='true' name='testEnded'><parameter type='java.lang.String' name='testName'/></method><method abstract='true' name='testFailed'><parameter type='int' name='status'/><parameter type='junit.framework.Test' name='test'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='testStarted'><parameter type='java.lang.String' name='testName'/></method><method return='java.lang.String' static='true' name='truncate'><parameter type='java.lang.String' name='s'/></method><method visibility='protected' return='boolean' name='useReloadingTestSuiteLoader'/></class><class extends='java.lang.Object' name='Version'><method return='java.lang.String' static='true' name='id'/></class><interface abstract='true' name='TestSuiteLoader'><method return='java.lang.Class' abstract='true' name='load'><parameter type='java.lang.String' name='suiteClassName'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method><method return='java.lang.Class' abstract='true' name='reload'><parameter type='java.lang.Class' name='aClass'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/></method></interface></package><package name='org.apache.commons.logging'><interface abstract='true' name='Log'><method abstract='true' name='debug'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='debug'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='error'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='error'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='fatal'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='fatal'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='info'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='info'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method><method return='boolean' abstract='true' name='isDebugEnabled'/><method return='boolean' abstract='true' name='isErrorEnabled'/><method return='boolean' abstract='true' name='isFatalEnabled'/><method return='boolean' abstract='true' name='isInfoEnabled'/><method return='boolean' abstract='true' name='isTraceEnabled'/><method return='boolean' abstract='true' name='isWarnEnabled'/><method abstract='true' name='trace'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='trace'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method><method abstract='true' name='warn'><parameter type='java.lang.Object' name='message'/></method><method abstract='true' name='warn'><parameter type='java.lang.Object' name='message'/><parameter type='java.lang.Throwable' name='t'/></method></interface></package><package name='org.apache.http'><class extends='java.io.IOException' name='ConnectionClosedException'><constructor type='org.apache.http.ConnectionClosedException' name='ConnectionClosedException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Exception' name='HttpException'><constructor type='org.apache.http.HttpException' name='HttpException'/><constructor type='org.apache.http.HttpException' name='HttpException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.HttpException' name='HttpException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='HttpHost' final='true'><constructor type='org.apache.http.HttpHost' name='HttpHost'><parameter type='java.lang.String' name='hostname'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='scheme'/></constructor><constructor type='org.apache.http.HttpHost' name='HttpHost'><parameter type='java.lang.String' name='hostname'/><parameter type='int' name='port'/></constructor><constructor type='org.apache.http.HttpHost' name='HttpHost'><parameter type='java.lang.String' name='hostname'/></constructor><constructor type='org.apache.http.HttpHost' name='HttpHost'><parameter type='org.apache.http.HttpHost' name='httphost'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.lang.String' name='getHostName'/><method return='int' name='getPort'/><method return='java.lang.String' name='getSchemeName'/><method return='java.lang.String' name='toHostString'/><method return='java.lang.String' name='toURI'/></class><class extends='org.apache.http.ProtocolVersion' name='HttpVersion' final='true'><constructor type='org.apache.http.HttpVersion' name='HttpVersion'><parameter type='int' name='major'/><parameter type='int' name='minor'/></constructor></class><class extends='java.io.IOException' name='MalformedChunkCodingException'><constructor type='org.apache.http.MalformedChunkCodingException' name='MalformedChunkCodingException'/><constructor type='org.apache.http.MalformedChunkCodingException' name='MalformedChunkCodingException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.apache.http.HttpException' name='MethodNotSupportedException'><constructor type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.io.IOException' name='NoHttpResponseException'><constructor type='org.apache.http.NoHttpResponseException' name='NoHttpResponseException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.RuntimeException' name='ParseException'><constructor type='org.apache.http.ParseException' name='ParseException'/><constructor type='org.apache.http.ParseException' name='ParseException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.apache.http.HttpException' name='ProtocolException'><constructor type='org.apache.http.ProtocolException' name='ProtocolException'/><constructor type='org.apache.http.ProtocolException' name='ProtocolException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.ProtocolException' name='ProtocolException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='ProtocolVersion'><constructor type='org.apache.http.ProtocolVersion' name='ProtocolVersion'><parameter type='java.lang.String' name='protocol'/><parameter type='int' name='major'/><parameter type='int' name='minor'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='int' name='compareToVersion'><parameter type='org.apache.http.ProtocolVersion' name='that'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='obj'/></method><method return='org.apache.http.ProtocolVersion' name='forVersion'><parameter type='int' name='major'/><parameter type='int' name='minor'/></method><method return='int' name='getMajor' final='true'/><method return='int' name='getMinor' final='true'/><method return='java.lang.String' name='getProtocol' final='true'/><method return='boolean' name='greaterEquals' final='true'><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method return='int' name='hashCode' final='true'/><method return='boolean' name='isComparable'><parameter type='org.apache.http.ProtocolVersion' name='that'/></method><method return='boolean' name='lessEquals' final='true'><parameter type='org.apache.http.ProtocolVersion' name='version'/></method></class><class extends='org.apache.http.ProtocolException' name='UnsupportedHttpVersionException'><constructor type='org.apache.http.UnsupportedHttpVersionException' name='UnsupportedHttpVersionException'/><constructor type='org.apache.http.UnsupportedHttpVersionException' name='UnsupportedHttpVersionException'><parameter type='java.lang.String' name='message'/></constructor></class><interface abstract='true' name='ConnectionReuseStrategy'><method return='boolean' abstract='true' name='keepAlive'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface><interface abstract='true' name='FormattedHeader'><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='getBuffer'/><method return='int' abstract='true' name='getValuePos'/></interface><interface abstract='true' name='Header'><method return='org.apache.http.HeaderElement[]' abstract='true' name='getElements'><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='java.lang.String' abstract='true' name='getName'/><method return='java.lang.String' abstract='true' name='getValue'/></interface><interface abstract='true' name='HeaderElement'><method return='java.lang.String' abstract='true' name='getName'/><method return='org.apache.http.NameValuePair' abstract='true' name='getParameter'><parameter type='int' name='index'/></method><method return='org.apache.http.NameValuePair' abstract='true' name='getParameterByName'><parameter type='java.lang.String' name='name'/></method><method return='int' abstract='true' name='getParameterCount'/><method return='org.apache.http.NameValuePair[]' abstract='true' name='getParameters'/><method return='java.lang.String' abstract='true' name='getValue'/></interface><interface abstract='true' name='HeaderElementIterator'><method return='boolean' abstract='true' name='hasNext'/><method return='org.apache.http.HeaderElement' abstract='true' name='nextElement'/></interface><interface abstract='true' name='HeaderIterator'><method return='boolean' abstract='true' name='hasNext'/><method return='org.apache.http.Header' abstract='true' name='nextHeader'/></interface><interface abstract='true' name='HttpClientConnection'><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isResponseAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='receiveResponseEntity'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' abstract='true' name='receiveResponseHeader'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='sendRequestEntity'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='sendRequestHeader'><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpConnection'><method abstract='true' name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpConnectionMetrics' abstract='true' name='getMetrics'/><method return='int' abstract='true' name='getSocketTimeout'/><method return='boolean' abstract='true' name='isOpen'/><method return='boolean' abstract='true' name='isStale'/><method abstract='true' name='setSocketTimeout'><parameter type='int' name='timeout'/></method><method abstract='true' name='shutdown'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpConnectionMetrics'><method return='java.lang.Object' abstract='true' name='getMetric'><parameter type='java.lang.String' name='metricName'/></method><method return='long' abstract='true' name='getReceivedBytesCount'/><method return='long' abstract='true' name='getRequestCount'/><method return='long' abstract='true' name='getResponseCount'/><method return='long' abstract='true' name='getSentBytesCount'/><method abstract='true' name='reset'/></interface><interface abstract='true' name='HttpEntity'><method abstract='true' name='consumeContent'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' abstract='true' name='getContent'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.apache.http.Header' abstract='true' name='getContentEncoding'/><method return='long' abstract='true' name='getContentLength'/><method return='org.apache.http.Header' abstract='true' name='getContentType'/><method return='boolean' abstract='true' name='isChunked'/><method return='boolean' abstract='true' name='isRepeatable'/><method return='boolean' abstract='true' name='isStreaming'/><method abstract='true' name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpEntityEnclosingRequest'><method return='boolean' abstract='true' name='expectContinue'/><method return='org.apache.http.HttpEntity' abstract='true' name='getEntity'/><method abstract='true' name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method></interface><interface abstract='true' name='HttpInetConnection'><method return='java.net.InetAddress' abstract='true' name='getLocalAddress'/><method return='int' abstract='true' name='getLocalPort'/><method return='java.net.InetAddress' abstract='true' name='getRemoteAddress'/><method return='int' abstract='true' name='getRemotePort'/></interface><interface abstract='true' name='HttpMessage'><method abstract='true' name='addHeader'><parameter type='org.apache.http.Header' name='header'/></method><method abstract='true' name='addHeader'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method return='boolean' abstract='true' name='containsHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header[]' abstract='true' name='getAllHeaders'/><method return='org.apache.http.Header' abstract='true' name='getFirstHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header[]' abstract='true' name='getHeaders'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header' abstract='true' name='getLastHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='getParams'/><method return='org.apache.http.ProtocolVersion' abstract='true' name='getProtocolVersion'/><method return='org.apache.http.HeaderIterator' abstract='true' name='headerIterator'/><method return='org.apache.http.HeaderIterator' abstract='true' name='headerIterator'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='removeHeader'><parameter type='org.apache.http.Header' name='header'/></method><method abstract='true' name='removeHeaders'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='setHeader'><parameter type='org.apache.http.Header' name='header'/></method><method abstract='true' name='setHeader'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method abstract='true' name='setHeaders'><parameter type='org.apache.http.Header[]' name='headers'/></method><method abstract='true' name='setParams'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></interface><interface abstract='true' name='HttpRequest'><method return='org.apache.http.RequestLine' abstract='true' name='getRequestLine'/></interface><interface abstract='true' name='HttpRequestFactory'><method return='org.apache.http.HttpRequest' abstract='true' name='newHttpRequest'><parameter type='org.apache.http.RequestLine' name='requestline'/><exception type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'/></method><method return='org.apache.http.HttpRequest' abstract='true' name='newHttpRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><exception type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'/></method></interface><interface abstract='true' name='HttpRequestInterceptor'><method abstract='true' name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpResponse'><method return='org.apache.http.HttpEntity' abstract='true' name='getEntity'/><method return='java.util.Locale' abstract='true' name='getLocale'/><method return='org.apache.http.StatusLine' abstract='true' name='getStatusLine'/><method abstract='true' name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method><method abstract='true' name='setLocale'><parameter type='java.util.Locale' name='loc'/></method><method abstract='true' name='setReasonPhrase'><parameter type='java.lang.String' name='reason'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setStatusCode'><parameter type='int' name='code'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setStatusLine'><parameter type='org.apache.http.StatusLine' name='statusline'/></method><method abstract='true' name='setStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='code'/></method><method abstract='true' name='setStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='code'/><parameter type='java.lang.String' name='reason'/></method></interface><interface abstract='true' name='HttpResponseFactory'><method return='org.apache.http.HttpResponse' abstract='true' name='newHttpResponse'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='status'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method return='org.apache.http.HttpResponse' abstract='true' name='newHttpResponse'><parameter type='org.apache.http.StatusLine' name='statusline'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface><interface abstract='true' name='HttpResponseInterceptor'><method abstract='true' name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpServerConnection'><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='receiveRequestEntity'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpRequest' abstract='true' name='receiveRequestHeader'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='sendResponseEntity'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='sendResponseHeader'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpStatus'/><interface abstract='true' name='NameValuePair'><method return='java.lang.String' abstract='true' name='getName'/><method return='java.lang.String' abstract='true' name='getValue'/></interface><interface abstract='true' name='ReasonPhraseCatalog'><method return='java.lang.String' abstract='true' name='getReason'><parameter type='int' name='status'/><parameter type='java.util.Locale' name='loc'/></method></interface><interface abstract='true' name='RequestLine'><method return='java.lang.String' abstract='true' name='getMethod'/><method return='org.apache.http.ProtocolVersion' abstract='true' name='getProtocolVersion'/><method return='java.lang.String' abstract='true' name='getUri'/></interface><interface abstract='true' name='StatusLine'><method return='org.apache.http.ProtocolVersion' abstract='true' name='getProtocolVersion'/><method return='java.lang.String' abstract='true' name='getReasonPhrase'/><method return='int' abstract='true' name='getStatusCode'/></interface><interface abstract='true' name='TokenIterator'><method return='boolean' abstract='true' name='hasNext'/><method return='java.lang.String' abstract='true' name='nextToken'/></interface></package><package name='org.apache.http.auth'><class extends='java.lang.Object' name='AUTH' final='true'/><class extends='java.lang.Object' name='AuthSchemeRegistry' final='true'><constructor type='org.apache.http.auth.AuthSchemeRegistry' name='AuthSchemeRegistry'/><method return='org.apache.http.auth.AuthScheme' synchronized='true' name='getAuthScheme'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.util.List&lt;java.lang.String&gt;' synchronized='true' name='getSchemeNames'/><method synchronized='true' name='register'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.auth.AuthSchemeFactory' name='factory'/></method><method api_removed='14' synchronized='true' name='setItems'><parameter type='java.util.Map&lt;java.lang.String, org.apache.http.auth.AuthSchemeFactory&gt;' name='map'/></method><method synchronized='true' name='unregister'><parameter type='java.lang.String' name='name'/></method><method synchronized='true' name='setItems' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='org.apache.http.auth.AuthSchemeFactory&gt;' name='arg1'/></method></class><class extends='java.lang.Object' name='AuthScope'><constructor type='org.apache.http.auth.AuthScope' name='AuthScope'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='realm'/><parameter type='java.lang.String' name='scheme'/></constructor><constructor type='org.apache.http.auth.AuthScope' name='AuthScope'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='realm'/></constructor><constructor type='org.apache.http.auth.AuthScope' name='AuthScope'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/></constructor><constructor type='org.apache.http.auth.AuthScope' name='AuthScope'><parameter type='org.apache.http.auth.AuthScope' name='authscope'/></constructor><method return='java.lang.String' name='getHost'/><method return='int' name='getPort'/><method return='java.lang.String' name='getRealm'/><method return='java.lang.String' name='getScheme'/><method return='int' name='match'><parameter type='org.apache.http.auth.AuthScope' name='that'/></method></class><class extends='java.lang.Object' name='AuthState'><constructor type='org.apache.http.auth.AuthState' name='AuthState'/><method return='org.apache.http.auth.AuthScheme' name='getAuthScheme'/><method return='org.apache.http.auth.AuthScope' name='getAuthScope'/><method return='org.apache.http.auth.Credentials' name='getCredentials'/><method name='invalidate'/><method return='boolean' name='isValid'/><method name='setAuthScheme'><parameter type='org.apache.http.auth.AuthScheme' name='authScheme'/></method><method name='setAuthScope'><parameter type='org.apache.http.auth.AuthScope' name='authScope'/></method><method name='setCredentials'><parameter type='org.apache.http.auth.Credentials' name='credentials'/></method></class><class extends='org.apache.http.ProtocolException' name='AuthenticationException'><constructor type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/><constructor type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='BasicUserPrincipal' final='true'><constructor type='org.apache.http.auth.BasicUserPrincipal' name='BasicUserPrincipal'><parameter type='java.lang.String' name='username'/></constructor><method return='java.lang.String' name='getName'/></class><class extends='org.apache.http.auth.AuthenticationException' name='InvalidCredentialsException'><constructor type='org.apache.http.auth.InvalidCredentialsException' name='InvalidCredentialsException'/><constructor type='org.apache.http.auth.InvalidCredentialsException' name='InvalidCredentialsException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.auth.InvalidCredentialsException' name='InvalidCredentialsException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='org.apache.http.ProtocolException' name='MalformedChallengeException'><constructor type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/><constructor type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='NTCredentials'><constructor type='org.apache.http.auth.NTCredentials' name='NTCredentials'><parameter type='java.lang.String' name='usernamePassword'/></constructor><constructor type='org.apache.http.auth.NTCredentials' name='NTCredentials'><parameter type='java.lang.String' name='userName'/><parameter type='java.lang.String' name='password'/><parameter type='java.lang.String' name='workstation'/><parameter type='java.lang.String' name='domain'/></constructor><method return='java.lang.String' name='getDomain'/><method return='java.lang.String' name='getPassword'/><method return='java.lang.String' name='getUserName'/><method return='java.security.Principal' name='getUserPrincipal'/><method return='java.lang.String' name='getWorkstation'/></class><class extends='java.lang.Object' name='NTUserPrincipal'><constructor type='org.apache.http.auth.NTUserPrincipal' name='NTUserPrincipal'><parameter type='java.lang.String' name='domain'/><parameter type='java.lang.String' name='username'/></constructor><method return='java.lang.String' name='getDomain'/><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getUsername'/></class><class extends='java.lang.Object' name='UsernamePasswordCredentials'><constructor type='org.apache.http.auth.UsernamePasswordCredentials' name='UsernamePasswordCredentials'><parameter type='java.lang.String' name='usernamePassword'/></constructor><constructor type='org.apache.http.auth.UsernamePasswordCredentials' name='UsernamePasswordCredentials'><parameter type='java.lang.String' name='userName'/><parameter type='java.lang.String' name='password'/></constructor><method return='java.lang.String' name='getPassword'/><method return='java.lang.String' name='getUserName'/><method return='java.security.Principal' name='getUserPrincipal'/></class><interface abstract='true' name='AuthScheme'><method return='org.apache.http.Header' abstract='true' name='authenticate'><parameter type='org.apache.http.auth.Credentials' name='credentials'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='java.lang.String' abstract='true' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getRealm'/><method return='java.lang.String' abstract='true' name='getSchemeName'/><method return='boolean' abstract='true' name='isComplete'/><method return='boolean' abstract='true' name='isConnectionBased'/><method abstract='true' name='processChallenge'><parameter type='org.apache.http.Header' name='header'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method></interface><interface abstract='true' name='AuthSchemeFactory'><method return='org.apache.http.auth.AuthScheme' abstract='true' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></interface><interface abstract='true' name='Credentials'><method return='java.lang.String' abstract='true' name='getPassword'/><method return='java.security.Principal' abstract='true' name='getUserPrincipal'/></interface></package><package name='org.apache.http.auth.params'><class extends='org.apache.http.params.HttpAbstractParamBean' name='AuthParamBean'><constructor type='org.apache.http.auth.params.AuthParamBean' name='AuthParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setCredentialCharset'><parameter type='java.lang.String' name='charset'/></method></class><class extends='java.lang.Object' name='AuthParams' final='true'><method return='java.lang.String' static='true' name='getCredentialCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setCredentialCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.lang.String' name='charset'/></method></class><interface abstract='true' name='AuthPNames'/></package><package name='org.apache.http.client'><class extends='org.apache.http.client.RedirectException' name='CircularRedirectException'><constructor type='org.apache.http.client.CircularRedirectException' name='CircularRedirectException'/><constructor type='org.apache.http.client.CircularRedirectException' name='CircularRedirectException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.client.CircularRedirectException' name='CircularRedirectException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.io.IOException' name='ClientProtocolException'><constructor type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><constructor type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'><parameter type='java.lang.String' name='s'/></constructor><constructor type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='org.apache.http.client.ClientProtocolException' name='HttpResponseException'><constructor type='org.apache.http.client.HttpResponseException' name='HttpResponseException'><parameter type='int' name='statusCode'/><parameter type='java.lang.String' name='s'/></constructor><method return='int' name='getStatusCode'/></class><class extends='org.apache.http.ProtocolException' name='NonRepeatableRequestException'><constructor type='org.apache.http.client.NonRepeatableRequestException' name='NonRepeatableRequestException'/><constructor type='org.apache.http.client.NonRepeatableRequestException' name='NonRepeatableRequestException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.apache.http.ProtocolException' name='RedirectException'><constructor type='org.apache.http.client.RedirectException' name='RedirectException'/><constructor type='org.apache.http.client.RedirectException' name='RedirectException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.client.RedirectException' name='RedirectException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='AuthenticationHandler'><method return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' abstract='true' name='getChallenges'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method><method return='boolean' abstract='true' name='isAuthenticationRequested'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method return='org.apache.http.auth.AuthScheme' abstract='true' api_removed='14' name='selectScheme'><parameter type='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' name='challenges'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='org.apache.http.auth.AuthScheme' abstract='true' name='selectScheme' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='org.apache.http.Header&gt;' name='arg1'/><parameter type='org.apache.http.HttpResponse' name='arg2'/><parameter type='org.apache.http.protocol.HttpContext' name='arg3'/></method></interface><interface abstract='true' name='CookieStore'><method abstract='true' name='addCookie'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/></method><method abstract='true' name='clear'/><method return='boolean' abstract='true' name='clearExpired'><parameter type='java.util.Date' name='date'/></method><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' abstract='true' name='getCookies'/></interface><interface abstract='true' name='CredentialsProvider'><method abstract='true' name='clear'/><method return='org.apache.http.auth.Credentials' abstract='true' name='getCredentials'><parameter type='org.apache.http.auth.AuthScope' name='authscope'/></method><method abstract='true' name='setCredentials'><parameter type='org.apache.http.auth.AuthScope' name='authscope'/><parameter type='org.apache.http.auth.Credentials' name='credentials'/></method></interface><interface abstract='true' name='HttpClient'><method return='org.apache.http.HttpResponse' abstract='true' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' abstract='true' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' abstract='true' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' abstract='true' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' abstract='true' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' abstract='true' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' abstract='true' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' abstract='true' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.conn.ClientConnectionManager' abstract='true' name='getConnectionManager'/><method return='org.apache.http.params.HttpParams' abstract='true' name='getParams'/></interface><interface abstract='true' name='HttpRequestRetryHandler'><method return='boolean' abstract='true' name='retryRequest'><parameter type='java.io.IOException' name='exception'/><parameter type='int' name='executionCount'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface><interface abstract='true' name='RedirectHandler'><method return='java.net.URI' abstract='true' name='getLocationURI'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.ProtocolException' name='ProtocolException'/></method><method return='boolean' abstract='true' name='isRedirectRequested'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface><interface abstract='true' name='RequestDirector'><method return='org.apache.http.HttpResponse' abstract='true' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ResponseHandler'><method return='T' abstract='true' name='handleResponse'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='UserTokenHandler'><method return='java.lang.Object' abstract='true' name='getUserToken'><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface></package><package name='org.apache.http.client.entity'><class extends='org.apache.http.entity.StringEntity' name='UrlEncodedFormEntity'><constructor type='org.apache.http.client.entity.UrlEncodedFormEntity' name='UrlEncodedFormEntity'><parameter type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;' name='parameters'/><parameter type='java.lang.String' name='encoding'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='org.apache.http.client.entity.UrlEncodedFormEntity' name='UrlEncodedFormEntity'><parameter type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;' name='parameters'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor></class></package><package name='org.apache.http.client.methods'><class extends='org.apache.http.client.methods.HttpRequestBase' name='HttpDelete'><constructor type='org.apache.http.client.methods.HttpDelete' name='HttpDelete'/><constructor type='org.apache.http.client.methods.HttpDelete' name='HttpDelete'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpDelete' name='HttpDelete'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.client.methods.HttpRequestBase' abstract='true' name='HttpEntityEnclosingRequestBase'><constructor type='org.apache.http.client.methods.HttpEntityEnclosingRequestBase' name='HttpEntityEnclosingRequestBase'/><method return='boolean' name='expectContinue'/><method return='org.apache.http.HttpEntity' name='getEntity'/><method name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method></class><class extends='org.apache.http.client.methods.HttpRequestBase' name='HttpGet'><constructor type='org.apache.http.client.methods.HttpGet' name='HttpGet'/><constructor type='org.apache.http.client.methods.HttpGet' name='HttpGet'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpGet' name='HttpGet'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.client.methods.HttpRequestBase' name='HttpHead'><constructor type='org.apache.http.client.methods.HttpHead' name='HttpHead'/><constructor type='org.apache.http.client.methods.HttpHead' name='HttpHead'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpHead' name='HttpHead'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.client.methods.HttpRequestBase' name='HttpOptions'><constructor type='org.apache.http.client.methods.HttpOptions' name='HttpOptions'/><constructor type='org.apache.http.client.methods.HttpOptions' name='HttpOptions'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpOptions' name='HttpOptions'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.util.Set&lt;java.lang.String&gt;' name='getAllowedMethods'><parameter type='org.apache.http.HttpResponse' name='response'/></method><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.client.methods.HttpEntityEnclosingRequestBase' name='HttpPost'><constructor type='org.apache.http.client.methods.HttpPost' name='HttpPost'/><constructor type='org.apache.http.client.methods.HttpPost' name='HttpPost'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpPost' name='HttpPost'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.client.methods.HttpEntityEnclosingRequestBase' name='HttpPut'><constructor type='org.apache.http.client.methods.HttpPut' name='HttpPut'/><constructor type='org.apache.http.client.methods.HttpPut' name='HttpPut'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpPut' name='HttpPut'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><class extends='org.apache.http.message.AbstractHttpMessage' abstract='true' name='HttpRequestBase'><constructor type='org.apache.http.client.methods.HttpRequestBase' name='HttpRequestBase'/><method name='abort'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.lang.String' abstract='true' name='getMethod'/><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method return='org.apache.http.RequestLine' name='getRequestLine'/><method return='java.net.URI' name='getURI'/><method return='boolean' name='isAborted'/><method name='setConnectionRequest'><parameter type='org.apache.http.conn.ClientConnectionRequest' name='connRequest'/><exception type='java.io.IOException' name='IOException'/></method><method name='setReleaseTrigger'><parameter type='org.apache.http.conn.ConnectionReleaseTrigger' name='releaseTrigger'/><exception type='java.io.IOException' name='IOException'/></method><method name='setURI'><parameter type='java.net.URI' name='uri'/></method></class><class extends='org.apache.http.client.methods.HttpRequestBase' name='HttpTrace'><constructor type='org.apache.http.client.methods.HttpTrace' name='HttpTrace'/><constructor type='org.apache.http.client.methods.HttpTrace' name='HttpTrace'><parameter type='java.net.URI' name='uri'/></constructor><constructor type='org.apache.http.client.methods.HttpTrace' name='HttpTrace'><parameter type='java.lang.String' name='uri'/></constructor><method return='java.lang.String' name='getMethod'/></class><interface abstract='true' name='AbortableHttpRequest'><method abstract='true' name='abort'/><method abstract='true' name='setConnectionRequest'><parameter type='org.apache.http.conn.ClientConnectionRequest' name='connRequest'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='setReleaseTrigger'><parameter type='org.apache.http.conn.ConnectionReleaseTrigger' name='releaseTrigger'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpUriRequest'><method abstract='true' name='abort'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='java.lang.String' abstract='true' name='getMethod'/><method return='java.net.URI' abstract='true' name='getURI'/><method return='boolean' abstract='true' name='isAborted'/></interface></package><package name='org.apache.http.client.params'><class extends='java.lang.Object' name='AuthPolicy' final='true'/><class extends='org.apache.http.params.HttpAbstractParamBean' name='ClientParamBean'><constructor type='org.apache.http.client.params.ClientParamBean' name='ClientParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setAllowCircularRedirects'><parameter type='boolean' name='allow'/></method><method name='setConnectionManagerFactory'><parameter type='org.apache.http.conn.ClientConnectionManagerFactory' name='factory'/></method><method name='setConnectionManagerFactoryClassName'><parameter type='java.lang.String' name='factory'/></method><method name='setCookiePolicy'><parameter type='java.lang.String' name='policy'/></method><method name='setDefaultHeaders'><parameter type='java.util.Collection&lt;org.apache.http.Header&gt;' name='headers'/></method><method name='setDefaultHost'><parameter type='org.apache.http.HttpHost' name='host'/></method><method name='setHandleAuthentication'><parameter type='boolean' name='handle'/></method><method name='setHandleRedirects'><parameter type='boolean' name='handle'/></method><method name='setMaxRedirects'><parameter type='int' name='maxRedirects'/></method><method name='setRejectRelativeRedirect'><parameter type='boolean' name='reject'/></method><method name='setVirtualHost'><parameter type='org.apache.http.HttpHost' name='host'/></method></class><class extends='java.lang.Object' name='CookiePolicy' final='true'/><class extends='java.lang.Object' name='HttpClientParams'><method return='java.lang.String' static='true' name='getCookiePolicy'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' static='true' name='isAuthenticating'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' static='true' name='isRedirecting'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setAuthenticating'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='boolean' name='value'/></method><method static='true' name='setCookiePolicy'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.lang.String' name='cookiePolicy'/></method><method static='true' name='setRedirecting'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='boolean' name='value'/></method></class><interface abstract='true' name='AllClientPNames'/><interface abstract='true' name='ClientPNames'/></package><package name='org.apache.http.client.protocol'><class extends='java.lang.Object' name='ClientContextConfigurer'><constructor type='org.apache.http.client.protocol.ClientContextConfigurer' name='ClientContextConfigurer'><parameter type='org.apache.http.protocol.HttpContext' name='context'/></constructor><method name='setAuthSchemePref'><parameter type='java.util.List&lt;java.lang.String&gt;' name='list'/></method><method name='setAuthSchemeRegistry'><parameter type='org.apache.http.auth.AuthSchemeRegistry' name='registry'/></method><method name='setCookieSpecRegistry'><parameter type='org.apache.http.cookie.CookieSpecRegistry' name='registry'/></method><method name='setCookieStore'><parameter type='org.apache.http.client.CookieStore' name='store'/></method><method name='setCredentialsProvider'><parameter type='org.apache.http.client.CredentialsProvider' name='provider'/></method></class><class extends='java.lang.Object' name='RequestAddCookies'><constructor type='org.apache.http.client.protocol.RequestAddCookies' name='RequestAddCookies'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestDefaultHeaders'><constructor type='org.apache.http.client.protocol.RequestDefaultHeaders' name='RequestDefaultHeaders'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestProxyAuthentication'><constructor type='org.apache.http.client.protocol.RequestProxyAuthentication' name='RequestProxyAuthentication'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestTargetAuthentication'><constructor type='org.apache.http.client.protocol.RequestTargetAuthentication' name='RequestTargetAuthentication'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ResponseProcessCookies'><constructor type='org.apache.http.client.protocol.ResponseProcessCookies' name='ResponseProcessCookies'/><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><interface abstract='true' name='ClientContext'/></package><package name='org.apache.http.client.utils'><class extends='java.lang.Object' name='CloneUtils'><method return='java.lang.Object' static='true' name='clone'><parameter type='java.lang.Object' name='obj'/><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method></class><class extends='java.lang.Object' name='URIUtils'><method return='java.net.URI' static='true' name='createURI'><parameter type='java.lang.String' name='scheme'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='query'/><parameter type='java.lang.String' name='fragment'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='java.net.URI' static='true' name='resolve'><parameter type='java.net.URI' name='baseURI'/><parameter type='java.lang.String' name='reference'/></method><method return='java.net.URI' static='true' name='resolve'><parameter type='java.net.URI' name='baseURI'/><parameter type='java.net.URI' name='reference'/></method><method return='java.net.URI' static='true' name='rewriteURI'><parameter type='java.net.URI' name='uri'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='boolean' name='dropFragment'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method><method return='java.net.URI' static='true' name='rewriteURI'><parameter type='java.net.URI' name='uri'/><parameter type='org.apache.http.HttpHost' name='target'/><exception type='java.net.URISyntaxException' name='URISyntaxException'/></method></class><class extends='java.lang.Object' name='URLEncodedUtils'><constructor type='org.apache.http.client.utils.URLEncodedUtils' name='URLEncodedUtils'/><method return='java.lang.String' static='true' name='format'><parameter type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;' name='parameters'/><parameter type='java.lang.String' name='encoding'/></method><method return='boolean' static='true' name='isEncoded'><parameter type='org.apache.http.HttpEntity' name='entity'/></method><method return='java.util.List&lt;org.apache.http.NameValuePair&gt;' static='true' name='parse'><parameter type='java.net.URI' name='uri'/><parameter type='java.lang.String' name='encoding'/></method><method return='java.util.List&lt;org.apache.http.NameValuePair&gt;' static='true' name='parse'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='java.io.IOException' name='IOException'/></method><method static='true' name='parse'><parameter type='java.util.List&lt;org.apache.http.NameValuePair&gt;' name='parameters'/><parameter type='java.util.Scanner' name='scanner'/><parameter type='java.lang.String' name='encoding'/></method></class></package><package name='org.apache.http.conn'><class extends='java.lang.Object' name='BasicEofSensorWatcher'><constructor type='org.apache.http.conn.BasicEofSensorWatcher' name='BasicEofSensorWatcher'><parameter type='org.apache.http.conn.ManagedClientConnection' name='conn'/><parameter type='boolean' name='reuse'/></constructor><method return='boolean' name='eofDetected'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='streamAbort'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='streamClosed'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.HttpEntityWrapper' name='BasicManagedEntity'><constructor type='org.apache.http.conn.BasicManagedEntity' name='BasicManagedEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/><parameter type='org.apache.http.conn.ManagedClientConnection' name='conn'/><parameter type='boolean' name='reuse'/></constructor><method name='abortConnection'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='eofDetected'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method name='releaseConnection'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='releaseManagedConnection'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='streamAbort'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='streamClosed'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InterruptedIOException' name='ConnectTimeoutException'><constructor type='org.apache.http.conn.ConnectTimeoutException' name='ConnectTimeoutException'/><constructor type='org.apache.http.conn.ConnectTimeoutException' name='ConnectTimeoutException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.apache.http.conn.ConnectTimeoutException' name='ConnectionPoolTimeoutException'><constructor type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'/><constructor type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.io.InputStream' name='EofSensorInputStream'><constructor type='org.apache.http.conn.EofSensorInputStream' name='EofSensorInputStream'><parameter type='java.io.InputStream' name='in'/><parameter type='org.apache.http.conn.EofSensorWatcher' name='watcher'/></constructor><method name='abortConnection'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='checkAbort'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='checkClose'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='checkEOF'><parameter type='int' name='eof'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='boolean' name='isReadAllowed'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method name='releaseConnection'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.net.ConnectException' name='HttpHostConnectException'><constructor type='org.apache.http.conn.HttpHostConnectException' name='HttpHostConnectException'><parameter type='org.apache.http.HttpHost' name='host'/><parameter type='java.net.ConnectException' name='cause'/></constructor><method return='org.apache.http.HttpHost' name='getHost'/></class><class extends='java.lang.Object' name='MultihomePlainSocketFactory' final='true'><method return='java.net.Socket' name='connectSocket'><parameter type='java.net.Socket' name='sock'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'/><method return='org.apache.http.conn.MultihomePlainSocketFactory' static='true' name='getSocketFactory'/><method return='boolean' name='isSecure' final='true'><parameter type='java.net.Socket' name='sock'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></class><interface abstract='true' name='ClientConnectionManager'><method abstract='true' name='closeExpiredConnections'/><method abstract='true' name='closeIdleConnections'><parameter type='long' name='idletime'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/></method><method return='org.apache.http.conn.scheme.SchemeRegistry' abstract='true' name='getSchemeRegistry'/><method abstract='true' name='releaseConnection'><parameter type='org.apache.http.conn.ManagedClientConnection' name='conn'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='timeUnit'/></method><method return='org.apache.http.conn.ClientConnectionRequest' abstract='true' name='requestConnection'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method><method abstract='true' name='shutdown'/></interface><interface abstract='true' name='ClientConnectionManagerFactory'><method return='org.apache.http.conn.ClientConnectionManager' abstract='true' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schemeRegistry'/></method></interface><interface abstract='true' name='ClientConnectionOperator'><method return='org.apache.http.conn.OperatedClientConnection' abstract='true' name='createConnection'/><method abstract='true' name='openConnection'><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='updateSecureConnection'><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ClientConnectionRequest'><method abstract='true' name='abortRequest'/><method return='org.apache.http.conn.ManagedClientConnection' abstract='true' name='getConnection'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/><exception type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></interface><interface abstract='true' name='ConnectionKeepAliveStrategy'><method return='long' abstract='true' name='getKeepAliveDuration'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></interface><interface abstract='true' name='ConnectionReleaseTrigger'><method abstract='true' name='abortConnection'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='releaseConnection'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='EofSensorWatcher'><method return='boolean' abstract='true' name='eofDetected'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='streamAbort'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='streamClosed'><parameter type='java.io.InputStream' name='wrapped'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='ManagedClientConnection'><method return='org.apache.http.conn.routing.HttpRoute' abstract='true' name='getRoute'/><method return='javax.net.ssl.SSLSession' abstract='true' name='getSSLSession'/><method return='java.lang.Object' abstract='true' name='getState'/><method return='boolean' abstract='true' name='isMarkedReusable'/><method return='boolean' abstract='true' name='isSecure'/><method abstract='true' name='layerProtocol'><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='markReusable'/><method abstract='true' name='open'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='setIdleDuration'><parameter type='long' name='duration'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method abstract='true' name='setState'><parameter type='java.lang.Object' name='state'/></method><method abstract='true' name='tunnelProxy'><parameter type='org.apache.http.HttpHost' name='next'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='tunnelTarget'><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='unmarkReusable'/></interface><interface abstract='true' name='OperatedClientConnection'><method return='java.net.Socket' abstract='true' name='getSocket'/><method return='org.apache.http.HttpHost' abstract='true' name='getTargetHost'/><method return='boolean' abstract='true' name='isSecure'/><method abstract='true' name='openCompleted'><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='opening'><parameter type='java.net.Socket' name='sock'/><parameter type='org.apache.http.HttpHost' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='update'><parameter type='java.net.Socket' name='sock'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></interface></package><package name='org.apache.http.conn.params'><class extends='org.apache.http.params.HttpAbstractParamBean' name='ConnConnectionParamBean'><constructor type='org.apache.http.conn.params.ConnConnectionParamBean' name='ConnConnectionParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setMaxStatusLineGarbage'><parameter type='int' name='maxStatusLineGarbage'/></method></class><class extends='org.apache.http.params.HttpAbstractParamBean' name='ConnManagerParamBean'><constructor type='org.apache.http.conn.params.ConnManagerParamBean' name='ConnManagerParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setConnectionsPerRoute'><parameter type='org.apache.http.conn.params.ConnPerRouteBean' name='connPerRoute'/></method><method name='setMaxTotalConnections'><parameter type='int' name='maxConnections'/></method><method name='setTimeout'><parameter type='long' name='timeout'/></method></class><class extends='java.lang.Object' name='ConnManagerParams' final='true'><constructor type='org.apache.http.conn.params.ConnManagerParams' name='ConnManagerParams'/><method return='org.apache.http.conn.params.ConnPerRoute' static='true' name='getMaxConnectionsPerRoute'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' static='true' name='getMaxTotalConnections'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='long' static='true' name='getTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setMaxConnectionsPerRoute'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.conn.params.ConnPerRoute' name='connPerRoute'/></method><method static='true' name='setMaxTotalConnections'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='int' name='maxTotalConnections'/></method><method static='true' name='setTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='long' name='timeout'/></method></class><class extends='java.lang.Object' name='ConnPerRouteBean' final='true'><constructor type='org.apache.http.conn.params.ConnPerRouteBean' name='ConnPerRouteBean'><parameter type='int' name='defaultMax'/></constructor><constructor type='org.apache.http.conn.params.ConnPerRouteBean' name='ConnPerRouteBean'/><method return='int' name='getDefaultMax'/><method return='int' name='getMaxForRoute'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method name='setDefaultMaxPerRoute'><parameter type='int' name='max'/></method><method name='setMaxForRoute'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='int' name='max'/></method><method api_removed='14' name='setMaxForRoutes'><parameter type='java.util.Map&lt;org.apache.http.conn.routing.HttpRoute, java.lang.Integer&gt;' name='map'/></method><method name='setMaxForRoutes' api_added='14'><parameter type='java.util.Map&lt;org.apache.http.conn.routing.HttpRoute' name='arg0'/><parameter type='java.lang.Integer&gt;' name='arg1'/></method></class><class extends='org.apache.http.params.HttpAbstractParamBean' name='ConnRouteParamBean'><constructor type='org.apache.http.conn.params.ConnRouteParamBean' name='ConnRouteParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setDefaultProxy'><parameter type='org.apache.http.HttpHost' name='defaultProxy'/></method><method name='setForcedRoute'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method name='setLocalAddress'><parameter type='java.net.InetAddress' name='address'/></method></class><class extends='java.lang.Object' name='ConnRouteParams'><method return='org.apache.http.HttpHost' static='true' name='getDefaultProxy'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='org.apache.http.conn.routing.HttpRoute' static='true' name='getForcedRoute'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='java.net.InetAddress' static='true' name='getLocalAddress'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setDefaultProxy'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.HttpHost' name='proxy'/></method><method static='true' name='setForcedRoute'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method static='true' name='setLocalAddress'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.net.InetAddress' name='local'/></method></class><interface abstract='true' name='ConnConnectionPNames'/><interface abstract='true' name='ConnManagerPNames'/><interface abstract='true' name='ConnPerRoute'><method return='int' abstract='true' name='getMaxForRoute'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method></interface><interface abstract='true' name='ConnRoutePNames'/></package><package name='org.apache.http.conn.routing'><class extends='java.lang.Object' name='BasicRouteDirector'><constructor type='org.apache.http.conn.routing.BasicRouteDirector' name='BasicRouteDirector'/><method visibility='protected' return='int' name='directStep'><parameter type='org.apache.http.conn.routing.RouteInfo' name='plan'/><parameter type='org.apache.http.conn.routing.RouteInfo' name='fact'/></method><method visibility='protected' return='int' name='firstStep'><parameter type='org.apache.http.conn.routing.RouteInfo' name='plan'/></method><method return='int' name='nextStep'><parameter type='org.apache.http.conn.routing.RouteInfo' name='plan'/><parameter type='org.apache.http.conn.routing.RouteInfo' name='fact'/></method><method visibility='protected' return='int' name='proxiedStep'><parameter type='org.apache.http.conn.routing.RouteInfo' name='plan'/><parameter type='org.apache.http.conn.routing.RouteInfo' name='fact'/></method></class><class extends='java.lang.Object' name='HttpRoute' final='true'><constructor type='org.apache.http.conn.routing.HttpRoute' name='HttpRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='org.apache.http.HttpHost[]' name='proxies'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.conn.routing.RouteInfo.TunnelType' name='tunnelled'/><parameter type='org.apache.http.conn.routing.RouteInfo.LayerType' name='layered'/></constructor><constructor type='org.apache.http.conn.routing.HttpRoute' name='HttpRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='org.apache.http.HttpHost' name='proxy'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.conn.routing.RouteInfo.TunnelType' name='tunnelled'/><parameter type='org.apache.http.conn.routing.RouteInfo.LayerType' name='layered'/></constructor><constructor type='org.apache.http.conn.routing.HttpRoute' name='HttpRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='boolean' name='secure'/></constructor><constructor type='org.apache.http.conn.routing.HttpRoute' name='HttpRoute'><parameter type='org.apache.http.HttpHost' name='target'/></constructor><constructor type='org.apache.http.conn.routing.HttpRoute' name='HttpRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='org.apache.http.HttpHost' name='proxy'/><parameter type='boolean' name='secure'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='o'/></method><method return='int' name='getHopCount' final='true'/><method return='org.apache.http.HttpHost' name='getHopTarget' final='true'><parameter type='int' name='hop'/></method><method return='org.apache.http.conn.routing.RouteInfo.LayerType' name='getLayerType' final='true'/><method return='java.net.InetAddress' name='getLocalAddress' final='true'/><method return='org.apache.http.HttpHost' name='getProxyHost' final='true'/><method return='org.apache.http.HttpHost' name='getTargetHost' final='true'/><method return='org.apache.http.conn.routing.RouteInfo.TunnelType' name='getTunnelType' final='true'/><method return='int' name='hashCode' final='true'/><method return='boolean' name='isLayered' final='true'/><method return='boolean' name='isSecure' final='true'/><method return='boolean' name='isTunnelled' final='true'/><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Enum' static='true' name='RouteInfo.LayerType' final='true'><method return='org.apache.http.conn.routing.RouteInfo.LayerType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.conn.routing.RouteInfo.LayerType[]' static='true' name='values' final='true'/></class><class extends='java.lang.Enum' static='true' name='RouteInfo.TunnelType' final='true'><method return='org.apache.http.conn.routing.RouteInfo.TunnelType' static='true' name='valueOf'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.conn.routing.RouteInfo.TunnelType[]' static='true' name='values' final='true'/></class><class extends='java.lang.Object' name='RouteTracker' final='true'><constructor type='org.apache.http.conn.routing.RouteTracker' name='RouteTracker'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/></constructor><constructor type='org.apache.http.conn.routing.RouteTracker' name='RouteTracker'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method name='connectProxy' final='true'><parameter type='org.apache.http.HttpHost' name='proxy'/><parameter type='boolean' name='secure'/></method><method name='connectTarget' final='true'><parameter type='boolean' name='secure'/></method><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='o'/></method><method return='int' name='getHopCount' final='true'/><method return='org.apache.http.HttpHost' name='getHopTarget' final='true'><parameter type='int' name='hop'/></method><method return='org.apache.http.conn.routing.RouteInfo.LayerType' name='getLayerType' final='true'/><method return='java.net.InetAddress' name='getLocalAddress' final='true'/><method return='org.apache.http.HttpHost' name='getProxyHost' final='true'/><method return='org.apache.http.HttpHost' name='getTargetHost' final='true'/><method return='org.apache.http.conn.routing.RouteInfo.TunnelType' name='getTunnelType' final='true'/><method return='int' name='hashCode' final='true'/><method return='boolean' name='isConnected' final='true'/><method return='boolean' name='isLayered' final='true'/><method return='boolean' name='isSecure' final='true'/><method return='boolean' name='isTunnelled' final='true'/><method name='layerProtocol' final='true'><parameter type='boolean' name='secure'/></method><method return='org.apache.http.conn.routing.HttpRoute' name='toRoute' final='true'/><method return='java.lang.String' name='toString' final='true'/><method name='tunnelProxy' final='true'><parameter type='org.apache.http.HttpHost' name='proxy'/><parameter type='boolean' name='secure'/></method><method name='tunnelTarget' final='true'><parameter type='boolean' name='secure'/></method></class><interface abstract='true' name='HttpRouteDirector'><method return='int' abstract='true' name='nextStep'><parameter type='org.apache.http.conn.routing.RouteInfo' name='plan'/><parameter type='org.apache.http.conn.routing.RouteInfo' name='fact'/></method></interface><interface abstract='true' name='HttpRoutePlanner'><method return='org.apache.http.conn.routing.HttpRoute' abstract='true' name='determineRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></interface><interface abstract='true' name='RouteInfo'><method return='int' abstract='true' name='getHopCount'/><method return='org.apache.http.HttpHost' abstract='true' name='getHopTarget'><parameter type='int' name='hop'/></method><method return='org.apache.http.conn.routing.RouteInfo.LayerType' abstract='true' name='getLayerType'/><method return='java.net.InetAddress' abstract='true' name='getLocalAddress'/><method return='org.apache.http.HttpHost' abstract='true' name='getProxyHost'/><method return='org.apache.http.HttpHost' abstract='true' name='getTargetHost'/><method return='org.apache.http.conn.routing.RouteInfo.TunnelType' abstract='true' name='getTunnelType'/><method return='boolean' abstract='true' name='isLayered'/><method return='boolean' abstract='true' name='isSecure'/><method return='boolean' abstract='true' name='isTunnelled'/></interface></package><package name='org.apache.http.conn.scheme'><class extends='java.lang.Object' name='PlainSocketFactory' final='true'><constructor type='org.apache.http.conn.scheme.PlainSocketFactory' name='PlainSocketFactory'><parameter type='org.apache.http.conn.scheme.HostNameResolver' name='nameResolver'/></constructor><constructor type='org.apache.http.conn.scheme.PlainSocketFactory' name='PlainSocketFactory'/><method return='java.net.Socket' name='connectSocket'><parameter type='java.net.Socket' name='sock'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'/><method return='org.apache.http.conn.scheme.PlainSocketFactory' static='true' name='getSocketFactory'/><method return='boolean' name='isSecure' final='true'><parameter type='java.net.Socket' name='sock'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></class><class extends='java.lang.Object' name='Scheme' final='true'><constructor type='org.apache.http.conn.scheme.Scheme' name='Scheme'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.conn.scheme.SocketFactory' name='factory'/><parameter type='int' name='port'/></constructor><method return='boolean' name='equals' final='true'><parameter type='java.lang.Object' name='obj'/></method><method return='int' name='getDefaultPort' final='true'/><method return='java.lang.String' name='getName' final='true'/><method return='org.apache.http.conn.scheme.SocketFactory' name='getSocketFactory' final='true'/><method return='boolean' name='isLayered' final='true'/><method return='int' name='resolvePort' final='true'><parameter type='int' name='port'/></method><method return='java.lang.String' name='toString' final='true'/></class><class extends='java.lang.Object' name='SchemeRegistry' final='true'><constructor type='org.apache.http.conn.scheme.SchemeRegistry' name='SchemeRegistry'/><method return='org.apache.http.conn.scheme.Scheme' synchronized='true' name='get' final='true'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.conn.scheme.Scheme' synchronized='true' name='getScheme' final='true'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.conn.scheme.Scheme' synchronized='true' name='getScheme' final='true'><parameter type='org.apache.http.HttpHost' name='host'/></method><method return='java.util.List&lt;java.lang.String&gt;' synchronized='true' name='getSchemeNames' final='true'/><method return='org.apache.http.conn.scheme.Scheme' synchronized='true' name='register' final='true'><parameter type='org.apache.http.conn.scheme.Scheme' name='sch'/></method><method api_removed='14' synchronized='true' name='setItems'><parameter type='java.util.Map&lt;java.lang.String, org.apache.http.conn.scheme.Scheme&gt;' name='map'/></method><method return='org.apache.http.conn.scheme.Scheme' synchronized='true' name='unregister' final='true'><parameter type='java.lang.String' name='name'/></method><method synchronized='true' name='setItems' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='org.apache.http.conn.scheme.Scheme&gt;' name='arg1'/></method></class><interface abstract='true' name='HostNameResolver'><method return='java.net.InetAddress' abstract='true' name='resolve'><parameter type='java.lang.String' name='hostname'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='LayeredSocketFactory'><method return='java.net.Socket' abstract='true' name='createSocket'><parameter type='java.net.Socket' name='socket'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='boolean' name='autoClose'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method></interface><interface abstract='true' name='SocketFactory'><method return='java.net.Socket' abstract='true' name='connectSocket'><parameter type='java.net.Socket' name='sock'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='org.apache.http.conn.ConnectTimeoutException' name='ConnectTimeoutException'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='java.net.Socket' abstract='true' name='createSocket'><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' abstract='true' name='isSecure'><parameter type='java.net.Socket' name='sock'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method></interface></package><package name='org.apache.http.conn.ssl'><class extends='java.lang.Object' abstract='true' name='AbstractVerifier'><constructor type='org.apache.http.conn.ssl.AbstractVerifier' name='AbstractVerifier'/><method return='boolean' static='true' name='acceptableCountryWildcard'><parameter type='java.lang.String' name='cn'/></method><method return='int' static='true' name='countDots'><parameter type='java.lang.String' name='s'/></method><method return='java.lang.String[]' static='true' name='getCNs'><parameter type='java.security.cert.X509Certificate' name='cert'/></method><method return='java.lang.String[]' static='true' name='getDNSSubjectAlts'><parameter type='java.security.cert.X509Certificate' name='cert'/></method><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='javax.net.ssl.SSLSocket' name='ssl'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='javax.net.ssl.SSLSession' name='session'/></method><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.security.cert.X509Certificate' name='cert'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String[]' name='cns'/><parameter type='java.lang.String[]' name='subjectAlts'/><parameter type='boolean' name='strictWithSubDomains'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method></class><class extends='org.apache.http.conn.ssl.AbstractVerifier' name='AllowAllHostnameVerifier'><constructor type='org.apache.http.conn.ssl.AllowAllHostnameVerifier' name='AllowAllHostnameVerifier'/><method return='java.lang.String' name='toString' final='true'/><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String[]' name='cns'/><parameter type='java.lang.String[]' name='subjectAlts'/></method></class><class extends='org.apache.http.conn.ssl.AbstractVerifier' name='BrowserCompatHostnameVerifier'><constructor type='org.apache.http.conn.ssl.BrowserCompatHostnameVerifier' name='BrowserCompatHostnameVerifier'/><method return='java.lang.String' name='toString' final='true'/><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String[]' name='cns'/><parameter type='java.lang.String[]' name='subjectAlts'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method></class><class extends='java.lang.Object' name='SSLSocketFactory'><constructor type='org.apache.http.conn.ssl.SSLSocketFactory' name='SSLSocketFactory'><parameter type='java.lang.String' name='algorithm'/><parameter type='java.security.KeyStore' name='keystore'/><parameter type='java.lang.String' name='keystorePassword'/><parameter type='java.security.KeyStore' name='truststore'/><parameter type='java.security.SecureRandom' name='random'/><parameter type='org.apache.http.conn.scheme.HostNameResolver' name='nameResolver'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></constructor><constructor type='org.apache.http.conn.ssl.SSLSocketFactory' name='SSLSocketFactory'><parameter type='java.security.KeyStore' name='keystore'/><parameter type='java.lang.String' name='keystorePassword'/><parameter type='java.security.KeyStore' name='truststore'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></constructor><constructor type='org.apache.http.conn.ssl.SSLSocketFactory' name='SSLSocketFactory'><parameter type='java.security.KeyStore' name='keystore'/><parameter type='java.lang.String' name='keystorePassword'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></constructor><constructor type='org.apache.http.conn.ssl.SSLSocketFactory' name='SSLSocketFactory'><parameter type='java.security.KeyStore' name='truststore'/><exception type='java.security.KeyManagementException' name='KeyManagementException'/><exception type='java.security.KeyStoreException' name='KeyStoreException'/><exception type='java.security.NoSuchAlgorithmException' name='NoSuchAlgorithmException'/><exception type='java.security.UnrecoverableKeyException' name='UnrecoverableKeyException'/></constructor><method return='java.net.Socket' name='connectSocket'><parameter type='java.net.Socket' name='sock'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.net.InetAddress' name='localAddress'/><parameter type='int' name='localPort'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.Socket' name='createSocket'><parameter type='java.net.Socket' name='socket'/><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='boolean' name='autoClose'/><exception type='java.io.IOException' name='IOException'/><exception type='java.net.UnknownHostException' name='UnknownHostException'/></method><method return='org.apache.http.conn.ssl.X509HostnameVerifier' name='getHostnameVerifier'/><method return='org.apache.http.conn.ssl.SSLSocketFactory' static='true' name='getSocketFactory'/><method return='boolean' name='isSecure'><parameter type='java.net.Socket' name='sock'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='setHostnameVerifier'><parameter type='org.apache.http.conn.ssl.X509HostnameVerifier' name='hostnameVerifier'/></method></class><class extends='org.apache.http.conn.ssl.AbstractVerifier' name='StrictHostnameVerifier'><constructor type='org.apache.http.conn.ssl.StrictHostnameVerifier' name='StrictHostnameVerifier'/><method return='java.lang.String' name='toString' final='true'/><method name='verify' final='true'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String[]' name='cns'/><parameter type='java.lang.String[]' name='subjectAlts'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method></class><interface abstract='true' name='X509HostnameVerifier'><method return='boolean' abstract='true' name='verify'><parameter type='java.lang.String' name='host'/><parameter type='javax.net.ssl.SSLSession' name='session'/></method><method abstract='true' name='verify'><parameter type='java.lang.String' name='host'/><parameter type='javax.net.ssl.SSLSocket' name='ssl'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='verify'><parameter type='java.lang.String' name='host'/><parameter type='java.security.cert.X509Certificate' name='cert'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method><method abstract='true' name='verify'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String[]' name='cns'/><parameter type='java.lang.String[]' name='subjectAlts'/><exception type='javax.net.ssl.SSLException' name='SSLException'/></method></interface></package><package name='org.apache.http.conn.util'><class extends='java.lang.Object' name='InetAddressUtils'><method return='boolean' static='true' name='isIPv4Address'><parameter type='java.lang.String' name='input'/></method><method return='boolean' static='true' name='isIPv6Address'><parameter type='java.lang.String' name='input'/></method><method return='boolean' static='true' name='isIPv6HexCompressedAddress'><parameter type='java.lang.String' name='input'/></method><method return='boolean' static='true' name='isIPv6StdAddress'><parameter type='java.lang.String' name='input'/></method></class></package><package name='org.apache.http.cookie'><class extends='java.lang.Object' name='CookieIdentityComparator'><constructor type='org.apache.http.cookie.CookieIdentityComparator' name='CookieIdentityComparator'/><method return='int' name='compare'><parameter type='org.apache.http.cookie.Cookie' name='c1'/><parameter type='org.apache.http.cookie.Cookie' name='c2'/></method></class><class extends='java.lang.Object' name='CookieOrigin' final='true'><constructor type='org.apache.http.cookie.CookieOrigin' name='CookieOrigin'><parameter type='java.lang.String' name='host'/><parameter type='int' name='port'/><parameter type='java.lang.String' name='path'/><parameter type='boolean' name='secure'/></constructor><method return='java.lang.String' name='getHost'/><method return='java.lang.String' name='getPath'/><method return='int' name='getPort'/><method return='boolean' name='isSecure'/></class><class extends='java.lang.Object' name='CookiePathComparator'><constructor type='org.apache.http.cookie.CookiePathComparator' name='CookiePathComparator'/><method return='int' name='compare'><parameter type='org.apache.http.cookie.Cookie' name='c1'/><parameter type='org.apache.http.cookie.Cookie' name='c2'/></method></class><class extends='java.lang.Object' name='CookieSpecRegistry' final='true'><constructor type='org.apache.http.cookie.CookieSpecRegistry' name='CookieSpecRegistry'/><method return='org.apache.http.cookie.CookieSpec' synchronized='true' name='getCookieSpec'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.apache.http.cookie.CookieSpec' synchronized='true' name='getCookieSpec'><parameter type='java.lang.String' name='name'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='java.util.List&lt;java.lang.String&gt;' synchronized='true' name='getSpecNames'/><method synchronized='true' name='register'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.cookie.CookieSpecFactory' name='factory'/></method><method api_removed='14' synchronized='true' name='setItems'><parameter type='java.util.Map&lt;java.lang.String, org.apache.http.cookie.CookieSpecFactory&gt;' name='map'/></method><method synchronized='true' name='unregister'><parameter type='java.lang.String' name='id'/></method><method synchronized='true' name='setItems' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='org.apache.http.cookie.CookieSpecFactory&gt;' name='arg1'/></method></class><class extends='org.apache.http.ProtocolException' name='MalformedCookieException'><constructor type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/><constructor type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='ClientCookie'><method return='boolean' abstract='true' name='containsAttribute'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getAttribute'><parameter type='java.lang.String' name='name'/></method></interface><interface abstract='true' name='Cookie'><method return='java.lang.String' abstract='true' name='getComment'/><method return='java.lang.String' abstract='true' name='getCommentURL'/><method return='java.lang.String' abstract='true' name='getDomain'/><method return='java.util.Date' abstract='true' name='getExpiryDate'/><method return='java.lang.String' abstract='true' name='getName'/><method return='java.lang.String' abstract='true' name='getPath'/><method return='int[]' abstract='true' name='getPorts'/><method return='java.lang.String' abstract='true' name='getValue'/><method return='int' abstract='true' name='getVersion'/><method return='boolean' abstract='true' name='isExpired'><parameter type='java.util.Date' name='date'/></method><method return='boolean' abstract='true' name='isPersistent'/><method return='boolean' abstract='true' name='isSecure'/></interface><interface abstract='true' name='CookieAttributeHandler'><method return='boolean' abstract='true' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method abstract='true' name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method abstract='true' name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></interface><interface abstract='true' name='CookieSpec'><method return='java.util.List&lt;org.apache.http.Header&gt;' abstract='true' name='formatCookies'><parameter type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='cookies'/></method><method return='int' abstract='true' name='getVersion'/><method return='org.apache.http.Header' abstract='true' name='getVersionHeader'/><method return='boolean' abstract='true' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' abstract='true' name='parse'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method abstract='true' name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></interface><interface abstract='true' name='CookieSpecFactory'><method return='org.apache.http.cookie.CookieSpec' abstract='true' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></interface><interface abstract='true' name='SM'/><interface abstract='true' name='SetCookie'><method abstract='true' name='setComment'><parameter type='java.lang.String' name='comment'/></method><method abstract='true' name='setDomain'><parameter type='java.lang.String' name='domain'/></method><method abstract='true' name='setExpiryDate'><parameter type='java.util.Date' name='expiryDate'/></method><method abstract='true' name='setPath'><parameter type='java.lang.String' name='path'/></method><method abstract='true' name='setSecure'><parameter type='boolean' name='secure'/></method><method abstract='true' name='setValue'><parameter type='java.lang.String' name='value'/></method><method abstract='true' name='setVersion'><parameter type='int' name='version'/></method></interface><interface abstract='true' name='SetCookie2'><method abstract='true' name='setCommentURL'><parameter type='java.lang.String' name='commentURL'/></method><method abstract='true' name='setDiscard'><parameter type='boolean' name='discard'/></method><method abstract='true' name='setPorts'><parameter type='int[]' name='ports'/></method></interface></package><package name='org.apache.http.cookie.params'><class extends='org.apache.http.params.HttpAbstractParamBean' name='CookieSpecParamBean'><constructor type='org.apache.http.cookie.params.CookieSpecParamBean' name='CookieSpecParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setDatePatterns'><parameter type='java.util.Collection&lt;java.lang.String&gt;' name='patterns'/></method><method name='setSingleHeader'><parameter type='boolean' name='singleHeader'/></method></class><interface abstract='true' name='CookieSpecPNames'/></package><package name='org.apache.http.entity'><class extends='java.lang.Object' abstract='true' name='AbstractHttpEntity'><constructor visibility='protected' type='org.apache.http.entity.AbstractHttpEntity' name='AbstractHttpEntity'/><method name='consumeContent'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='org.apache.http.Header' name='getContentEncoding'/><method return='org.apache.http.Header' name='getContentType'/><method return='boolean' name='isChunked'/><method name='setChunked'><parameter type='boolean' name='b'/></method><method name='setContentEncoding'><parameter type='org.apache.http.Header' name='contentEncoding'/></method><method name='setContentEncoding'><parameter type='java.lang.String' name='ceString'/></method><method name='setContentType'><parameter type='org.apache.http.Header' name='contentType'/></method><method name='setContentType'><parameter type='java.lang.String' name='ctString'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='BasicHttpEntity'><constructor type='org.apache.http.entity.BasicHttpEntity' name='BasicHttpEntity'/><method return='java.io.InputStream' name='getContent'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='setContent'><parameter type='java.io.InputStream' name='instream'/></method><method name='setContentLength'><parameter type='long' name='len'/></method><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.HttpEntityWrapper' name='BufferedHttpEntity'><constructor type='org.apache.http.entity.BufferedHttpEntity' name='BufferedHttpEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='java.io.IOException' name='IOException'/></constructor></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='ByteArrayEntity'><constructor type='org.apache.http.entity.ByteArrayEntity' name='ByteArrayEntity'><parameter type='byte[]' name='b'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.io.InputStream' name='getContent'/><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='EntityTemplate'><constructor type='org.apache.http.entity.EntityTemplate' name='EntityTemplate'><parameter type='org.apache.http.entity.ContentProducer' name='contentproducer'/></constructor><method return='java.io.InputStream' name='getContent'/><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='FileEntity'><constructor type='org.apache.http.entity.FileEntity' name='FileEntity'><parameter type='java.io.File' name='file'/><parameter type='java.lang.String' name='contentType'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.io.InputStream' name='getContent'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='HttpEntityWrapper'><constructor type='org.apache.http.entity.HttpEntityWrapper' name='HttpEntityWrapper'><parameter type='org.apache.http.HttpEntity' name='wrapped'/></constructor><method name='consumeContent'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' name='getContent'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.Header' name='getContentEncoding'/><method return='long' name='getContentLength'/><method return='org.apache.http.Header' name='getContentType'/><method return='boolean' name='isChunked'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='InputStreamEntity'><constructor type='org.apache.http.entity.InputStreamEntity' name='InputStreamEntity'><parameter type='java.io.InputStream' name='instream'/><parameter type='long' name='length'/></constructor><method return='java.io.InputStream' name='getContent'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='SerializableEntity'><constructor type='org.apache.http.entity.SerializableEntity' name='SerializableEntity'><parameter type='java.io.Serializable' name='ser'/><parameter type='boolean' name='bufferize'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='java.io.InputStream' name='getContent'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.entity.AbstractHttpEntity' name='StringEntity'><constructor type='org.apache.http.entity.StringEntity' name='StringEntity'><parameter type='java.lang.String' name='s'/><parameter type='java.lang.String' name='charset'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><constructor type='org.apache.http.entity.StringEntity' name='StringEntity'><parameter type='java.lang.String' name='s'/><exception type='java.io.UnsupportedEncodingException' name='UnsupportedEncodingException'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.io.InputStream' name='getContent'><exception type='java.io.IOException' name='IOException'/></method><method return='long' name='getContentLength'/><method return='boolean' name='isRepeatable'/><method return='boolean' name='isStreaming'/><method name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></class><interface abstract='true' name='ContentLengthStrategy'><method return='long' abstract='true' name='determineLength'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></interface><interface abstract='true' name='ContentProducer'><method abstract='true' name='writeTo'><parameter type='java.io.OutputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method></interface></package><package name='org.apache.http.impl'><class extends='java.lang.Object' abstract='true' name='AbstractHttpClientConnection'><constructor type='org.apache.http.impl.AbstractHttpClientConnection' name='AbstractHttpClientConnection'/><method visibility='protected' abstract='true' name='assertOpen'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method visibility='protected' return='org.apache.http.impl.entity.EntityDeserializer' name='createEntityDeserializer'/><method visibility='protected' return='org.apache.http.impl.entity.EntitySerializer' name='createEntitySerializer'/><method visibility='protected' return='org.apache.http.HttpResponseFactory' name='createHttpResponseFactory'/><method visibility='protected' return='org.apache.http.io.HttpMessageWriter' name='createRequestWriter'><parameter type='org.apache.http.io.SessionOutputBuffer' name='buffer'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method visibility='protected' return='org.apache.http.io.HttpMessageParser' name='createResponseParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.HttpResponseFactory' name='responseFactory'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method visibility='protected' name='doFlush'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpConnectionMetrics' name='getMetrics'/><method visibility='protected' name='init'><parameter type='org.apache.http.io.SessionInputBuffer' name='inbuffer'/><parameter type='org.apache.http.io.SessionOutputBuffer' name='outbuffer'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' name='isResponseAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isStale'/><method name='receiveResponseEntity'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='receiveResponseHeader'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='sendRequestEntity'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='sendRequestHeader'><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractHttpServerConnection'><constructor type='org.apache.http.impl.AbstractHttpServerConnection' name='AbstractHttpServerConnection'/><method visibility='protected' abstract='true' name='assertOpen'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method visibility='protected' return='org.apache.http.impl.entity.EntityDeserializer' name='createEntityDeserializer'/><method visibility='protected' return='org.apache.http.impl.entity.EntitySerializer' name='createEntitySerializer'/><method visibility='protected' return='org.apache.http.HttpRequestFactory' name='createHttpRequestFactory'/><method visibility='protected' return='org.apache.http.io.HttpMessageParser' name='createRequestParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.HttpRequestFactory' name='requestFactory'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method visibility='protected' return='org.apache.http.io.HttpMessageWriter' name='createResponseWriter'><parameter type='org.apache.http.io.SessionOutputBuffer' name='buffer'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method visibility='protected' name='doFlush'><exception type='java.io.IOException' name='IOException'/></method><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpConnectionMetrics' name='getMetrics'/><method visibility='protected' name='init'><parameter type='org.apache.http.io.SessionInputBuffer' name='inbuffer'/><parameter type='org.apache.http.io.SessionOutputBuffer' name='outbuffer'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' name='isStale'/><method name='receiveRequestEntity'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpRequest' name='receiveRequestHeader'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='sendResponseEntity'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='sendResponseHeader'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='DefaultConnectionReuseStrategy'><constructor type='org.apache.http.impl.DefaultConnectionReuseStrategy' name='DefaultConnectionReuseStrategy'/><method visibility='protected' return='org.apache.http.TokenIterator' name='createTokenIterator'><parameter type='org.apache.http.HeaderIterator' name='hit'/></method><method return='boolean' name='keepAlive'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.SocketHttpClientConnection' name='DefaultHttpClientConnection'><constructor type='org.apache.http.impl.DefaultHttpClientConnection' name='DefaultHttpClientConnection'/><method name='bind'><parameter type='java.net.Socket' name='socket'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='DefaultHttpRequestFactory'><constructor type='org.apache.http.impl.DefaultHttpRequestFactory' name='DefaultHttpRequestFactory'/><method return='org.apache.http.HttpRequest' name='newHttpRequest'><parameter type='org.apache.http.RequestLine' name='requestline'/><exception type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'/></method><method return='org.apache.http.HttpRequest' name='newHttpRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><exception type='org.apache.http.MethodNotSupportedException' name='MethodNotSupportedException'/></method></class><class extends='java.lang.Object' name='DefaultHttpResponseFactory'><constructor type='org.apache.http.impl.DefaultHttpResponseFactory' name='DefaultHttpResponseFactory'><parameter type='org.apache.http.ReasonPhraseCatalog' name='catalog'/></constructor><constructor type='org.apache.http.impl.DefaultHttpResponseFactory' name='DefaultHttpResponseFactory'/><method visibility='protected' return='java.util.Locale' name='determineLocale'><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method return='org.apache.http.HttpResponse' name='newHttpResponse'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='status'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method return='org.apache.http.HttpResponse' name='newHttpResponse'><parameter type='org.apache.http.StatusLine' name='statusline'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.SocketHttpServerConnection' name='DefaultHttpServerConnection'><constructor type='org.apache.http.impl.DefaultHttpServerConnection' name='DefaultHttpServerConnection'/><method name='bind'><parameter type='java.net.Socket' name='socket'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='EnglishReasonPhraseCatalog'><constructor visibility='protected' type='org.apache.http.impl.EnglishReasonPhraseCatalog' name='EnglishReasonPhraseCatalog'/><method return='java.lang.String' name='getReason'><parameter type='int' name='status'/><parameter type='java.util.Locale' name='loc'/></method></class><class extends='java.lang.Object' name='HttpConnectionMetricsImpl'><constructor type='org.apache.http.impl.HttpConnectionMetricsImpl' name='HttpConnectionMetricsImpl'><parameter type='org.apache.http.io.HttpTransportMetrics' name='inTransportMetric'/><parameter type='org.apache.http.io.HttpTransportMetrics' name='outTransportMetric'/></constructor><method return='java.lang.Object' name='getMetric'><parameter type='java.lang.String' name='metricName'/></method><method return='long' name='getReceivedBytesCount'/><method return='long' name='getRequestCount'/><method return='long' name='getResponseCount'/><method return='long' name='getSentBytesCount'/><method name='incrementRequestCount'/><method name='incrementResponseCount'/><method name='reset'/><method name='setMetric'><parameter type='java.lang.String' name='metricName'/><parameter type='java.lang.Object' name='obj'/></method></class><class extends='java.lang.Object' name='NoConnectionReuseStrategy'><constructor type='org.apache.http.impl.NoConnectionReuseStrategy' name='NoConnectionReuseStrategy'/><method return='boolean' name='keepAlive'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.AbstractHttpClientConnection' name='SocketHttpClientConnection'><constructor type='org.apache.http.impl.SocketHttpClientConnection' name='SocketHttpClientConnection'/><method visibility='protected' name='assertNotOpen'/><method visibility='protected' name='assertOpen'/><method visibility='protected' name='bind'><parameter type='java.net.Socket' name='socket'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.io.SessionInputBuffer' name='createSessionInputBuffer'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.io.SessionOutputBuffer' name='createSessionOutputBuffer'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.InetAddress' name='getLocalAddress'/><method return='int' name='getLocalPort'/><method return='java.net.InetAddress' name='getRemoteAddress'/><method return='int' name='getRemotePort'/><method visibility='protected' return='java.net.Socket' name='getSocket'/><method return='int' name='getSocketTimeout'/><method return='boolean' name='isOpen'/><method name='setSocketTimeout'><parameter type='int' name='timeout'/></method><method name='shutdown'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.AbstractHttpServerConnection' name='SocketHttpServerConnection'><constructor type='org.apache.http.impl.SocketHttpServerConnection' name='SocketHttpServerConnection'/><method visibility='protected' name='assertNotOpen'/><method visibility='protected' name='assertOpen'/><method visibility='protected' name='bind'><parameter type='java.net.Socket' name='socket'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.io.SessionInputBuffer' name='createHttpDataReceiver'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.io.SessionOutputBuffer' name='createHttpDataTransmitter'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.InetAddress' name='getLocalAddress'/><method return='int' name='getLocalPort'/><method return='java.net.InetAddress' name='getRemoteAddress'/><method return='int' name='getRemotePort'/><method visibility='protected' return='java.net.Socket' name='getSocket'/><method return='int' name='getSocketTimeout'/><method return='boolean' name='isOpen'/><method name='setSocketTimeout'><parameter type='int' name='timeout'/></method><method name='shutdown'><exception type='java.io.IOException' name='IOException'/></method></class></package><package name='org.apache.http.impl.auth'><class extends='java.lang.Object' abstract='true' name='AuthSchemeBase'><constructor type='org.apache.http.impl.auth.AuthSchemeBase' name='AuthSchemeBase'/><method return='boolean' name='isProxy'/><method visibility='protected' abstract='true' name='parseChallenge'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='int' name='pos'/><parameter type='int' name='len'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method><method name='processChallenge'><parameter type='org.apache.http.Header' name='header'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method></class><class extends='org.apache.http.impl.auth.RFC2617Scheme' name='BasicScheme'><constructor type='org.apache.http.impl.auth.BasicScheme' name='BasicScheme'/><method return='org.apache.http.Header' name='authenticate'><parameter type='org.apache.http.auth.Credentials' name='credentials'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='org.apache.http.Header' static='true' name='authenticate'><parameter type='org.apache.http.auth.Credentials' name='credentials'/><parameter type='java.lang.String' name='charset'/><parameter type='boolean' name='proxy'/></method><method return='java.lang.String' name='getSchemeName'/><method return='boolean' name='isComplete'/><method return='boolean' name='isConnectionBased'/></class><class extends='java.lang.Object' name='BasicSchemeFactory'><constructor type='org.apache.http.impl.auth.BasicSchemeFactory' name='BasicSchemeFactory'/><method return='org.apache.http.auth.AuthScheme' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='org.apache.http.impl.auth.RFC2617Scheme' name='DigestScheme'><constructor type='org.apache.http.impl.auth.DigestScheme' name='DigestScheme'/><method return='org.apache.http.Header' name='authenticate'><parameter type='org.apache.http.auth.Credentials' name='credentials'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='java.lang.String' static='true' name='createCnonce'/><method return='java.lang.String' name='getSchemeName'/><method return='boolean' name='isComplete'/><method return='boolean' name='isConnectionBased'/><method name='overrideParamter'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='DigestSchemeFactory'><constructor type='org.apache.http.impl.auth.DigestSchemeFactory' name='DigestSchemeFactory'/><method return='org.apache.http.auth.AuthScheme' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='org.apache.http.auth.AuthenticationException' name='NTLMEngineException'><constructor type='org.apache.http.impl.auth.NTLMEngineException' name='NTLMEngineException'/><constructor type='org.apache.http.impl.auth.NTLMEngineException' name='NTLMEngineException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.impl.auth.NTLMEngineException' name='NTLMEngineException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='org.apache.http.impl.auth.AuthSchemeBase' name='NTLMScheme'><constructor type='org.apache.http.impl.auth.NTLMScheme' name='NTLMScheme'><parameter type='org.apache.http.impl.auth.NTLMEngine' name='engine'/></constructor><method return='org.apache.http.Header' name='authenticate'><parameter type='org.apache.http.auth.Credentials' name='credentials'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='java.lang.String' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getRealm'/><method return='java.lang.String' name='getSchemeName'/><method return='boolean' name='isComplete'/><method return='boolean' name='isConnectionBased'/><method visibility='protected' name='parseChallenge'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='int' name='pos'/><parameter type='int' name='len'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method></class><class extends='org.apache.http.impl.auth.AuthSchemeBase' abstract='true' name='RFC2617Scheme'><constructor type='org.apache.http.impl.auth.RFC2617Scheme' name='RFC2617Scheme'/><method return='java.lang.String' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;' name='getParameters'/><method return='java.lang.String' name='getRealm'/><method visibility='protected' name='parseChallenge'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='int' name='pos'/><parameter type='int' name='len'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method></class><class extends='java.lang.RuntimeException' name='UnsupportedDigestAlgorithmException'><constructor type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException' name='UnsupportedDigestAlgorithmException'/><constructor type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException' name='UnsupportedDigestAlgorithmException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException' name='UnsupportedDigestAlgorithmException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='NTLMEngine'><method return='java.lang.String' abstract='true' name='generateType1Msg'><parameter type='java.lang.String' name='domain'/><parameter type='java.lang.String' name='workstation'/><exception type='org.apache.http.impl.auth.NTLMEngineException' name='NTLMEngineException'/></method><method return='java.lang.String' abstract='true' name='generateType3Msg'><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='password'/><parameter type='java.lang.String' name='domain'/><parameter type='java.lang.String' name='workstation'/><parameter type='java.lang.String' name='challenge'/><exception type='org.apache.http.impl.auth.NTLMEngineException' name='NTLMEngineException'/></method></interface></package><package name='org.apache.http.impl.client'><class extends='java.lang.Object' abstract='true' name='AbstractAuthenticationHandler'><constructor type='org.apache.http.impl.client.AbstractAuthenticationHandler' name='AbstractAuthenticationHandler'/><method visibility='protected' return='java.util.List&lt;java.lang.String&gt;' name='getAuthPreferences'/><method visibility='protected' return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' name='parseChallenges'><parameter type='org.apache.http.Header[]' name='headers'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method><method return='org.apache.http.auth.AuthScheme' api_removed='14' name='selectScheme'><parameter type='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' name='challenges'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.auth.AuthenticationException' name='AuthenticationException'/></method><method return='org.apache.http.auth.AuthScheme' name='selectScheme' api_added='14'><parameter type='java.util.Map&lt;java.lang.String' name='arg0'/><parameter type='org.apache.http.Header&gt;' name='arg1'/><parameter type='org.apache.http.HttpResponse' name='arg2'/><parameter type='org.apache.http.protocol.HttpContext' name='arg3'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractHttpClient'><constructor visibility='protected' type='org.apache.http.impl.client.AbstractHttpClient' name='AbstractHttpClient'><parameter type='org.apache.http.conn.ClientConnectionManager' name='conman'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method synchronized='true' name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/></method><method synchronized='true' name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method synchronized='true' name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/></method><method synchronized='true' name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method synchronized='true' name='clearRequestInterceptors'/><method synchronized='true' name='clearResponseInterceptors'/><method visibility='protected' return='org.apache.http.auth.AuthSchemeRegistry' abstract='true' name='createAuthSchemeRegistry'/><method visibility='protected' return='org.apache.http.conn.ClientConnectionManager' abstract='true' name='createClientConnectionManager'/><method visibility='protected' return='org.apache.http.client.RequestDirector' name='createClientRequestDirector'><parameter type='org.apache.http.protocol.HttpRequestExecutor' name='requestExec'/><parameter type='org.apache.http.conn.ClientConnectionManager' name='conman'/><parameter type='org.apache.http.ConnectionReuseStrategy' name='reustrat'/><parameter type='org.apache.http.conn.ConnectionKeepAliveStrategy' name='kastrat'/><parameter type='org.apache.http.conn.routing.HttpRoutePlanner' name='rouplan'/><parameter type='org.apache.http.protocol.HttpProcessor' name='httpProcessor'/><parameter type='org.apache.http.client.HttpRequestRetryHandler' name='retryHandler'/><parameter type='org.apache.http.client.RedirectHandler' name='redirectHandler'/><parameter type='org.apache.http.client.AuthenticationHandler' name='targetAuthHandler'/><parameter type='org.apache.http.client.AuthenticationHandler' name='proxyAuthHandler'/><parameter type='org.apache.http.client.UserTokenHandler' name='stateHandler'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method visibility='protected' return='org.apache.http.conn.ConnectionKeepAliveStrategy' abstract='true' name='createConnectionKeepAliveStrategy'/><method visibility='protected' return='org.apache.http.ConnectionReuseStrategy' abstract='true' name='createConnectionReuseStrategy'/><method visibility='protected' return='org.apache.http.cookie.CookieSpecRegistry' abstract='true' name='createCookieSpecRegistry'/><method visibility='protected' return='org.apache.http.client.CookieStore' abstract='true' name='createCookieStore'/><method visibility='protected' return='org.apache.http.client.CredentialsProvider' abstract='true' name='createCredentialsProvider'/><method visibility='protected' return='org.apache.http.protocol.HttpContext' abstract='true' name='createHttpContext'/><method visibility='protected' return='org.apache.http.params.HttpParams' abstract='true' name='createHttpParams'/><method visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor' abstract='true' name='createHttpProcessor'/><method visibility='protected' return='org.apache.http.client.HttpRequestRetryHandler' abstract='true' name='createHttpRequestRetryHandler'/><method visibility='protected' return='org.apache.http.conn.routing.HttpRoutePlanner' abstract='true' name='createHttpRoutePlanner'/><method visibility='protected' return='org.apache.http.client.AuthenticationHandler' abstract='true' name='createProxyAuthenticationHandler'/><method visibility='protected' return='org.apache.http.client.RedirectHandler' abstract='true' name='createRedirectHandler'/><method visibility='protected' return='org.apache.http.protocol.HttpRequestExecutor' abstract='true' name='createRequestExecutor'/><method visibility='protected' return='org.apache.http.client.AuthenticationHandler' abstract='true' name='createTargetAuthenticationHandler'/><method visibility='protected' return='org.apache.http.client.UserTokenHandler' abstract='true' name='createUserTokenHandler'/><method visibility='protected' return='org.apache.http.params.HttpParams' name='determineParams'><parameter type='org.apache.http.HttpRequest' name='req'/></method><method return='org.apache.http.HttpResponse' name='execute' final='true'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' final='true'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' final='true'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute' final='true'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute'><parameter type='org.apache.http.client.methods.HttpUriRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='T' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;' name='responseHandler'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.client.ClientProtocolException' name='ClientProtocolException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.auth.AuthSchemeRegistry' synchronized='true' name='getAuthSchemes' final='true'/><method return='org.apache.http.conn.ConnectionKeepAliveStrategy' synchronized='true' name='getConnectionKeepAliveStrategy' final='true'/><method return='org.apache.http.conn.ClientConnectionManager' synchronized='true' name='getConnectionManager' final='true'/><method return='org.apache.http.ConnectionReuseStrategy' synchronized='true' name='getConnectionReuseStrategy' final='true'/><method return='org.apache.http.cookie.CookieSpecRegistry' synchronized='true' name='getCookieSpecs' final='true'/><method return='org.apache.http.client.CookieStore' synchronized='true' name='getCookieStore' final='true'/><method return='org.apache.http.client.CredentialsProvider' synchronized='true' name='getCredentialsProvider' final='true'/><method visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor' synchronized='true' name='getHttpProcessor' final='true'/><method return='org.apache.http.client.HttpRequestRetryHandler' synchronized='true' name='getHttpRequestRetryHandler' final='true'/><method return='org.apache.http.params.HttpParams' synchronized='true' name='getParams' final='true'/><method return='org.apache.http.client.AuthenticationHandler' synchronized='true' name='getProxyAuthenticationHandler' final='true'/><method return='org.apache.http.client.RedirectHandler' synchronized='true' name='getRedirectHandler' final='true'/><method return='org.apache.http.protocol.HttpRequestExecutor' synchronized='true' name='getRequestExecutor' final='true'/><method return='org.apache.http.HttpRequestInterceptor' synchronized='true' name='getRequestInterceptor'><parameter type='int' name='index'/></method><method return='int' synchronized='true' name='getRequestInterceptorCount'/><method return='org.apache.http.HttpResponseInterceptor' synchronized='true' name='getResponseInterceptor'><parameter type='int' name='index'/></method><method return='int' synchronized='true' name='getResponseInterceptorCount'/><method return='org.apache.http.conn.routing.HttpRoutePlanner' synchronized='true' name='getRoutePlanner' final='true'/><method return='org.apache.http.client.AuthenticationHandler' synchronized='true' name='getTargetAuthenticationHandler' final='true'/><method return='org.apache.http.client.UserTokenHandler' synchronized='true' name='getUserTokenHandler' final='true'/><method name='removeRequestInterceptorByClass'><parameter type='java.lang.Class&lt;? extends org.apache.http.HttpRequestInterceptor&gt;' name='clazz'/></method><method name='removeResponseInterceptorByClass'><parameter type='java.lang.Class&lt;? extends org.apache.http.HttpResponseInterceptor&gt;' name='clazz'/></method><method synchronized='true' name='setAuthSchemes'><parameter type='org.apache.http.auth.AuthSchemeRegistry' name='authSchemeRegistry'/></method><method synchronized='true' name='setCookieSpecs'><parameter type='org.apache.http.cookie.CookieSpecRegistry' name='cookieSpecRegistry'/></method><method synchronized='true' name='setCookieStore'><parameter type='org.apache.http.client.CookieStore' name='cookieStore'/></method><method synchronized='true' name='setCredentialsProvider'><parameter type='org.apache.http.client.CredentialsProvider' name='credsProvider'/></method><method synchronized='true' name='setHttpRequestRetryHandler'><parameter type='org.apache.http.client.HttpRequestRetryHandler' name='retryHandler'/></method><method synchronized='true' name='setKeepAliveStrategy'><parameter type='org.apache.http.conn.ConnectionKeepAliveStrategy' name='keepAliveStrategy'/></method><method synchronized='true' name='setParams'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method synchronized='true' name='setProxyAuthenticationHandler'><parameter type='org.apache.http.client.AuthenticationHandler' name='proxyAuthHandler'/></method><method synchronized='true' name='setRedirectHandler'><parameter type='org.apache.http.client.RedirectHandler' name='redirectHandler'/></method><method synchronized='true' name='setReuseStrategy'><parameter type='org.apache.http.ConnectionReuseStrategy' name='reuseStrategy'/></method><method synchronized='true' name='setRoutePlanner'><parameter type='org.apache.http.conn.routing.HttpRoutePlanner' name='routePlanner'/></method><method synchronized='true' name='setTargetAuthenticationHandler'><parameter type='org.apache.http.client.AuthenticationHandler' name='targetAuthHandler'/></method><method synchronized='true' name='setUserTokenHandler'><parameter type='org.apache.http.client.UserTokenHandler' name='userTokenHandler'/></method></class><class extends='java.lang.Object' name='BasicCookieStore'><constructor type='org.apache.http.impl.client.BasicCookieStore' name='BasicCookieStore'/><method synchronized='true' name='addCookie'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/></method><method synchronized='true' name='addCookies'><parameter type='org.apache.http.cookie.Cookie[]' name='cookies'/></method><method synchronized='true' name='clear'/><method return='boolean' synchronized='true' name='clearExpired'><parameter type='java.util.Date' name='date'/></method><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' synchronized='true' name='getCookies'/></class><class extends='java.lang.Object' name='BasicCredentialsProvider'><constructor type='org.apache.http.impl.client.BasicCredentialsProvider' name='BasicCredentialsProvider'/><method synchronized='true' name='clear'/><method return='org.apache.http.auth.Credentials' synchronized='true' name='getCredentials'><parameter type='org.apache.http.auth.AuthScope' name='authscope'/></method><method synchronized='true' name='setCredentials'><parameter type='org.apache.http.auth.AuthScope' name='authscope'/><parameter type='org.apache.http.auth.Credentials' name='credentials'/></method></class><class extends='java.lang.Object' name='BasicResponseHandler'><constructor type='org.apache.http.impl.client.BasicResponseHandler' name='BasicResponseHandler'/><method return='java.lang.String' name='handleResponse'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.client.HttpResponseException' name='HttpResponseException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.params.AbstractHttpParams' name='ClientParamsStack'><constructor type='org.apache.http.impl.client.ClientParamsStack' name='ClientParamsStack'><parameter type='org.apache.http.params.HttpParams' name='aparams'/><parameter type='org.apache.http.params.HttpParams' name='cparams'/><parameter type='org.apache.http.params.HttpParams' name='rparams'/><parameter type='org.apache.http.params.HttpParams' name='oparams'/></constructor><constructor type='org.apache.http.impl.client.ClientParamsStack' name='ClientParamsStack'><parameter type='org.apache.http.impl.client.ClientParamsStack' name='stack'/></constructor><constructor type='org.apache.http.impl.client.ClientParamsStack' name='ClientParamsStack'><parameter type='org.apache.http.impl.client.ClientParamsStack' name='stack'/><parameter type='org.apache.http.params.HttpParams' name='aparams'/><parameter type='org.apache.http.params.HttpParams' name='cparams'/><parameter type='org.apache.http.params.HttpParams' name='rparams'/><parameter type='org.apache.http.params.HttpParams' name='oparams'/></constructor><method return='org.apache.http.params.HttpParams' name='copy'/><method return='org.apache.http.params.HttpParams' name='getApplicationParams' final='true'/><method return='org.apache.http.params.HttpParams' name='getClientParams' final='true'/><method return='org.apache.http.params.HttpParams' name='getOverrideParams' final='true'/><method return='java.lang.Object' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='getRequestParams' final='true'/><method return='boolean' name='removeParameter'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='setParameter'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' name='DefaultConnectionKeepAliveStrategy'><constructor type='org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy' name='DefaultConnectionKeepAliveStrategy'/><method return='long' name='getKeepAliveDuration'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.client.AbstractHttpClient' name='DefaultHttpClient'><constructor type='org.apache.http.impl.client.DefaultHttpClient' name='DefaultHttpClient'><parameter type='org.apache.http.conn.ClientConnectionManager' name='conman'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><constructor type='org.apache.http.impl.client.DefaultHttpClient' name='DefaultHttpClient'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><constructor type='org.apache.http.impl.client.DefaultHttpClient' name='DefaultHttpClient'/><method visibility='protected' return='org.apache.http.auth.AuthSchemeRegistry' name='createAuthSchemeRegistry'/><method visibility='protected' return='org.apache.http.conn.ClientConnectionManager' name='createClientConnectionManager'/><method visibility='protected' return='org.apache.http.conn.ConnectionKeepAliveStrategy' name='createConnectionKeepAliveStrategy'/><method visibility='protected' return='org.apache.http.ConnectionReuseStrategy' name='createConnectionReuseStrategy'/><method visibility='protected' return='org.apache.http.cookie.CookieSpecRegistry' name='createCookieSpecRegistry'/><method visibility='protected' return='org.apache.http.client.CookieStore' name='createCookieStore'/><method visibility='protected' return='org.apache.http.client.CredentialsProvider' name='createCredentialsProvider'/><method visibility='protected' return='org.apache.http.protocol.HttpContext' name='createHttpContext'/><method visibility='protected' return='org.apache.http.params.HttpParams' name='createHttpParams'/><method visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor' name='createHttpProcessor'/><method visibility='protected' return='org.apache.http.client.HttpRequestRetryHandler' name='createHttpRequestRetryHandler'/><method visibility='protected' return='org.apache.http.conn.routing.HttpRoutePlanner' name='createHttpRoutePlanner'/><method visibility='protected' return='org.apache.http.client.AuthenticationHandler' name='createProxyAuthenticationHandler'/><method visibility='protected' return='org.apache.http.client.RedirectHandler' name='createRedirectHandler'/><method visibility='protected' return='org.apache.http.protocol.HttpRequestExecutor' name='createRequestExecutor'/><method visibility='protected' return='org.apache.http.client.AuthenticationHandler' name='createTargetAuthenticationHandler'/><method visibility='protected' return='org.apache.http.client.UserTokenHandler' name='createUserTokenHandler'/></class><class extends='java.lang.Object' name='DefaultHttpRequestRetryHandler'><constructor type='org.apache.http.impl.client.DefaultHttpRequestRetryHandler' name='DefaultHttpRequestRetryHandler'><parameter type='int' name='retryCount'/><parameter type='boolean' name='requestSentRetryEnabled'/></constructor><constructor type='org.apache.http.impl.client.DefaultHttpRequestRetryHandler' name='DefaultHttpRequestRetryHandler'/><method return='int' name='getRetryCount'/><method return='boolean' name='isRequestSentRetryEnabled'/><method return='boolean' name='retryRequest'><parameter type='java.io.IOException' name='exception'/><parameter type='int' name='executionCount'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.client.AbstractAuthenticationHandler' name='DefaultProxyAuthenticationHandler'><constructor type='org.apache.http.impl.client.DefaultProxyAuthenticationHandler' name='DefaultProxyAuthenticationHandler'/><method return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' name='getChallenges'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method><method return='boolean' name='isAuthenticationRequested'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='java.lang.Object' name='DefaultRedirectHandler'><constructor type='org.apache.http.impl.client.DefaultRedirectHandler' name='DefaultRedirectHandler'/><method return='java.net.URI' name='getLocationURI'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.ProtocolException' name='ProtocolException'/></method><method return='boolean' name='isRedirectRequested'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='java.lang.Object' name='DefaultRequestDirector'><constructor type='org.apache.http.impl.client.DefaultRequestDirector' name='DefaultRequestDirector'><parameter type='org.apache.http.protocol.HttpRequestExecutor' name='requestExec'/><parameter type='org.apache.http.conn.ClientConnectionManager' name='conman'/><parameter type='org.apache.http.ConnectionReuseStrategy' name='reustrat'/><parameter type='org.apache.http.conn.ConnectionKeepAliveStrategy' name='kastrat'/><parameter type='org.apache.http.conn.routing.HttpRoutePlanner' name='rouplan'/><parameter type='org.apache.http.protocol.HttpProcessor' name='httpProcessor'/><parameter type='org.apache.http.client.HttpRequestRetryHandler' name='retryHandler'/><parameter type='org.apache.http.client.RedirectHandler' name='redirectHandler'/><parameter type='org.apache.http.client.AuthenticationHandler' name='targetAuthHandler'/><parameter type='org.apache.http.client.AuthenticationHandler' name='proxyAuthHandler'/><parameter type='org.apache.http.client.UserTokenHandler' name='userTokenHandler'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' return='org.apache.http.HttpRequest' name='createConnectRequest'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method visibility='protected' return='boolean' name='createTunnelToProxy'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='int' name='hop'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='boolean' name='createTunnelToTarget'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.conn.routing.HttpRoute' name='determineRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method><method visibility='protected' name='establishRoute'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.impl.client.RoutedRequest' name='handleResponse'><parameter type='org.apache.http.impl.client.RoutedRequest' name='roureq'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='releaseConnection'/><method visibility='protected' name='rewriteRequestURI'><parameter type='org.apache.http.impl.client.RequestWrapper' name='request'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><exception type='org.apache.http.ProtocolException' name='ProtocolException'/></method></class><class extends='org.apache.http.impl.client.AbstractAuthenticationHandler' name='DefaultTargetAuthenticationHandler'><constructor type='org.apache.http.impl.client.DefaultTargetAuthenticationHandler' name='DefaultTargetAuthenticationHandler'/><method return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;' name='getChallenges'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.auth.MalformedChallengeException' name='MalformedChallengeException'/></method><method return='boolean' name='isAuthenticationRequested'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='java.lang.Object' name='DefaultUserTokenHandler'><constructor type='org.apache.http.impl.client.DefaultUserTokenHandler' name='DefaultUserTokenHandler'/><method return='java.lang.Object' name='getUserToken'><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method></class><class extends='org.apache.http.impl.client.RequestWrapper' name='EntityEnclosingRequestWrapper'><constructor type='org.apache.http.impl.client.EntityEnclosingRequestWrapper' name='EntityEnclosingRequestWrapper'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.ProtocolException' name='ProtocolException'/></constructor><method return='boolean' name='expectContinue'/><method return='org.apache.http.HttpEntity' name='getEntity'/><method name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method></class><class extends='java.lang.Object' name='RedirectLocations'><constructor type='org.apache.http.impl.client.RedirectLocations' name='RedirectLocations'/><method name='add'><parameter type='java.net.URI' name='uri'/></method><method return='boolean' name='contains'><parameter type='java.net.URI' name='uri'/></method><method return='boolean' name='remove'><parameter type='java.net.URI' name='uri'/></method></class><class extends='org.apache.http.message.AbstractHttpMessage' name='RequestWrapper'><constructor type='org.apache.http.impl.client.RequestWrapper' name='RequestWrapper'><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.ProtocolException' name='ProtocolException'/></constructor><method name='abort'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int' name='getExecCount'/><method return='java.lang.String' name='getMethod'/><method return='org.apache.http.HttpRequest' name='getOriginal'/><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method return='org.apache.http.RequestLine' name='getRequestLine'/><method return='java.net.URI' name='getURI'/><method name='incrementExecCount'/><method return='boolean' name='isAborted'/><method return='boolean' name='isRepeatable'/><method name='resetHeaders'/><method name='setMethod'><parameter type='java.lang.String' name='method'/></method><method name='setProtocolVersion'><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method name='setURI'><parameter type='java.net.URI' name='uri'/></method></class><class extends='java.lang.Object' name='RoutedRequest'><constructor type='org.apache.http.impl.client.RoutedRequest' name='RoutedRequest'><parameter type='org.apache.http.impl.client.RequestWrapper' name='req'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></constructor><method return='org.apache.http.impl.client.RequestWrapper' name='getRequest' final='true'/><method return='org.apache.http.conn.routing.HttpRoute' name='getRoute' final='true'/></class><class extends='org.apache.http.HttpException' name='TunnelRefusedException'><constructor type='org.apache.http.impl.client.TunnelRefusedException' name='TunnelRefusedException'><parameter type='java.lang.String' name='message'/><parameter type='org.apache.http.HttpResponse' name='response'/></constructor><method return='org.apache.http.HttpResponse' name='getResponse'/></class></package><package name='org.apache.http.impl.conn'><class extends='java.lang.Object' abstract='true' name='AbstractClientConnAdapter'><constructor visibility='protected' type='org.apache.http.impl.conn.AbstractClientConnAdapter' name='AbstractClientConnAdapter'><parameter type='org.apache.http.conn.ClientConnectionManager' name='mgr'/><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/></constructor><method name='abortConnection'/><method visibility='protected' name='assertNotAborted' final='true'><exception type='java.io.InterruptedIOException' name='InterruptedIOException'/></method><method visibility='protected' name='assertValid' final='true'><parameter type='org.apache.http.conn.OperatedClientConnection' name='wrappedConn'/></method><method visibility='protected' name='detach'/><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='java.net.InetAddress' name='getLocalAddress'/><method return='int' name='getLocalPort'/><method visibility='protected' return='org.apache.http.conn.ClientConnectionManager' name='getManager'/><method return='org.apache.http.HttpConnectionMetrics' name='getMetrics'/><method return='java.net.InetAddress' name='getRemoteAddress'/><method return='int' name='getRemotePort'/><method return='javax.net.ssl.SSLSession' name='getSSLSession'/><method return='int' name='getSocketTimeout'/><method visibility='protected' return='org.apache.http.conn.OperatedClientConnection' name='getWrappedConnection'/><method return='boolean' name='isMarkedReusable'/><method return='boolean' name='isOpen'/><method return='boolean' name='isResponseAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='isSecure'/><method return='boolean' name='isStale'/><method name='markReusable'/><method name='receiveResponseEntity'><parameter type='org.apache.http.HttpResponse' name='response'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='receiveResponseHeader'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='releaseConnection'/><method name='sendRequestEntity'><parameter type='org.apache.http.HttpEntityEnclosingRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='sendRequestHeader'><parameter type='org.apache.http.HttpRequest' name='request'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='setIdleDuration'><parameter type='long' name='duration'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method name='setSocketTimeout'><parameter type='int' name='timeout'/></method><method name='unmarkReusable'/></class><class extends='java.lang.Object' abstract='true' name='AbstractPoolEntry'><constructor visibility='protected' type='org.apache.http.impl.conn.AbstractPoolEntry' name='AbstractPoolEntry'><parameter type='org.apache.http.conn.ClientConnectionOperator' name='connOperator'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></constructor><method return='java.lang.Object' name='getState'/><method name='layerProtocol'><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='open'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='setState'><parameter type='java.lang.Object' name='state'/></method><method visibility='protected' name='shutdownEntry'/><method name='tunnelProxy'><parameter type='org.apache.http.HttpHost' name='next'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='tunnelTarget'><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.conn.AbstractClientConnAdapter' abstract='true' name='AbstractPooledConnAdapter'><constructor visibility='protected' type='org.apache.http.impl.conn.AbstractPooledConnAdapter' name='AbstractPooledConnAdapter'><parameter type='org.apache.http.conn.ClientConnectionManager' name='manager'/><parameter type='org.apache.http.impl.conn.AbstractPoolEntry' name='entry'/></constructor><method visibility='protected' name='assertAttached' final='true'/><method name='close'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.conn.routing.HttpRoute' name='getRoute'/><method return='java.lang.Object' name='getState'/><method name='layerProtocol'><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='open'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='setState'><parameter type='java.lang.Object' name='state'/></method><method name='shutdown'><exception type='java.io.IOException' name='IOException'/></method><method name='tunnelProxy'><parameter type='org.apache.http.HttpHost' name='next'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='tunnelTarget'><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.SocketHttpClientConnection' name='DefaultClientConnection'><constructor type='org.apache.http.impl.conn.DefaultClientConnection' name='DefaultClientConnection'/><method return='java.net.Socket' name='getSocket' final='true'/><method return='org.apache.http.HttpHost' name='getTargetHost' final='true'/><method return='boolean' name='isSecure' final='true'/><method name='openCompleted'><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='opening'><parameter type='java.net.Socket' name='sock'/><parameter type='org.apache.http.HttpHost' name='target'/><exception type='java.io.IOException' name='IOException'/></method><method name='update'><parameter type='java.net.Socket' name='sock'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='boolean' name='secure'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='DefaultClientConnectionOperator'><constructor type='org.apache.http.impl.conn.DefaultClientConnectionOperator' name='DefaultClientConnectionOperator'><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schemes'/></constructor><method return='org.apache.http.conn.OperatedClientConnection' name='createConnection'/><method name='openConnection'><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='java.net.InetAddress' name='local'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='prepareSocket'><parameter type='java.net.Socket' name='sock'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method><method name='updateSecureConnection'><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='DefaultHttpRoutePlanner'><constructor type='org.apache.http.impl.conn.DefaultHttpRoutePlanner' name='DefaultHttpRoutePlanner'><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/></constructor><method return='org.apache.http.conn.routing.HttpRoute' name='determineRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></class><class extends='org.apache.http.impl.io.AbstractMessageParser' name='DefaultResponseParser'><constructor type='org.apache.http.impl.conn.DefaultResponseParser' name='DefaultResponseParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineParser' name='parser'/><parameter type='org.apache.http.HttpResponseFactory' name='responseFactory'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' return='org.apache.http.HttpMessage' name='parseHead'><parameter type='org.apache.http.io.SessionInputBuffer' name='sessionBuffer'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='IdleConnectionHandler'><constructor type='org.apache.http.impl.conn.IdleConnectionHandler' name='IdleConnectionHandler'/><method name='add'><parameter type='org.apache.http.HttpConnection' name='connection'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter type='long' name='idleTime'/></method><method return='boolean' name='remove'><parameter type='org.apache.http.HttpConnection' name='connection'/></method><method name='removeAll'/></class><class extends='java.lang.Object' name='LoggingSessionInputBuffer'><constructor type='org.apache.http.impl.conn.LoggingSessionInputBuffer' name='LoggingSessionInputBuffer'><parameter type='org.apache.http.io.SessionInputBuffer' name='in'/><parameter type='org.apache.http.impl.conn.Wire' name='wire'/></constructor><method return='org.apache.http.io.HttpTransportMetrics' name='getMetrics'/><method return='boolean' name='isDataAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readLine'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='LoggingSessionOutputBuffer'><constructor type='org.apache.http.impl.conn.LoggingSessionOutputBuffer' name='LoggingSessionOutputBuffer'><parameter type='org.apache.http.io.SessionOutputBuffer' name='out'/><parameter type='org.apache.http.impl.conn.Wire' name='wire'/></constructor><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.io.HttpTransportMetrics' name='getMetrics'/><method name='write'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLine'><parameter type='java.lang.String' name='s'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ProxySelectorRoutePlanner'><constructor type='org.apache.http.impl.conn.ProxySelectorRoutePlanner' name='ProxySelectorRoutePlanner'><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/><parameter type='java.net.ProxySelector' name='prosel'/></constructor><method visibility='protected' return='java.net.Proxy' name='chooseProxy'><parameter type='java.util.List&lt;java.net.Proxy&gt;' name='proxies'/><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/></method><method visibility='protected' return='org.apache.http.HttpHost' name='determineProxy'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method><method return='org.apache.http.conn.routing.HttpRoute' name='determineRoute'><parameter type='org.apache.http.HttpHost' name='target'/><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method><method visibility='protected' return='java.lang.String' name='getHost'><parameter type='java.net.InetSocketAddress' name='isa'/></method><method return='java.net.ProxySelector' name='getProxySelector'/><method name='setProxySelector'><parameter type='java.net.ProxySelector' name='prosel'/></method></class><class extends='java.lang.Object' name='SingleClientConnManager'><constructor type='org.apache.http.impl.conn.SingleClientConnManager' name='SingleClientConnManager'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/></constructor><method visibility='protected' name='assertStillUp' final='true'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter type='long' name='idletime'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/></method><method visibility='protected' return='org.apache.http.conn.ClientConnectionOperator' name='createConnectionOperator'><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/></method><method return='org.apache.http.conn.ManagedClientConnection' name='getConnection'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method><method return='org.apache.http.conn.scheme.SchemeRegistry' name='getSchemeRegistry'/><method name='releaseConnection'><parameter type='org.apache.http.conn.ManagedClientConnection' name='conn'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='timeUnit'/></method><method return='org.apache.http.conn.ClientConnectionRequest' name='requestConnection' final='true'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method><method visibility='protected' name='revokeConnection'/><method name='shutdown'/></class><class visibility='protected' extends='org.apache.http.impl.conn.AbstractPooledConnAdapter' name='SingleClientConnManager.ConnAdapter'><constructor visibility='protected' type='org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter' name='SingleClientConnManager.ConnAdapter'><parameter type='org.apache.http.impl.conn.SingleClientConnManager.PoolEntry' name='entry'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></constructor></class><class visibility='protected' extends='org.apache.http.impl.conn.AbstractPoolEntry' name='SingleClientConnManager.PoolEntry'><constructor visibility='protected' type='org.apache.http.impl.conn.SingleClientConnManager.PoolEntry' name='SingleClientConnManager.PoolEntry'/><method visibility='protected' name='close'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='shutdown'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='Wire'><constructor type='org.apache.http.impl.conn.Wire' name='Wire'><parameter type='org.apache.commons.logging.Log' name='log'/></constructor><method return='boolean' name='enabled'/><method name='input'><parameter type='java.io.InputStream' name='instream'/><exception type='java.io.IOException' name='IOException'/></method><method name='input'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='input'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='input'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='input'><parameter type='java.lang.String' name='s'/><exception type='java.io.IOException' name='IOException'/></method><method name='output'><parameter type='java.io.InputStream' name='outstream'/><exception type='java.io.IOException' name='IOException'/></method><method name='output'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='output'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='output'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='output'><parameter type='java.lang.String' name='s'/><exception type='java.io.IOException' name='IOException'/></method></class></package><package name='org.apache.http.impl.conn.tsccm'><class extends='java.lang.Object' abstract='true' name='AbstractConnPool'><constructor visibility='protected' type='org.apache.http.impl.conn.tsccm.AbstractConnPool' name='AbstractConnPool'/><method visibility='protected' name='closeConnection'><parameter type='org.apache.http.conn.OperatedClientConnection' name='conn'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter type='long' name='idletime'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/></method><method abstract='true' name='deleteClosedConnections'/><method name='enableConnectionGC'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='freeEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/><parameter type='boolean' name='reusable'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='timeUnit'/></method><method return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='getEntry' final='true'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/><exception type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' abstract='true' name='handleLostEntry'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method name='handleReference'><parameter type='java.lang.ref.Reference' name='ref'/></method><method return='org.apache.http.impl.conn.tsccm.PoolEntryRequest' abstract='true' name='requestPoolEntry'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method><method name='shutdown'/></class><class extends='org.apache.http.impl.conn.AbstractPoolEntry' name='BasicPoolEntry'><constructor type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='BasicPoolEntry'><parameter type='org.apache.http.conn.ClientConnectionOperator' name='op'/><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;' name='queue'/></constructor><method visibility='protected' return='org.apache.http.conn.OperatedClientConnection' name='getConnection' final='true'/><method visibility='protected' return='org.apache.http.conn.routing.HttpRoute' name='getPlannedRoute' final='true'/><method visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntryRef' name='getWeakRef' final='true'/></class><class extends='java.lang.ref.WeakReference' name='BasicPoolEntryRef'><constructor type='org.apache.http.impl.conn.tsccm.BasicPoolEntryRef' name='BasicPoolEntryRef'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/><parameter type='java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;' name='queue'/></constructor><method return='org.apache.http.conn.routing.HttpRoute' name='getRoute' final='true'/></class><class extends='org.apache.http.impl.conn.AbstractPooledConnAdapter' name='BasicPooledConnAdapter'><constructor visibility='protected' type='org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter' name='BasicPooledConnAdapter'><parameter type='org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager' name='tsccm'/><parameter type='org.apache.http.impl.conn.AbstractPoolEntry' name='entry'/></constructor><method visibility='protected' return='org.apache.http.impl.conn.AbstractPoolEntry' name='getPoolEntry'/></class><class extends='org.apache.http.impl.conn.tsccm.AbstractConnPool' name='ConnPoolByRoute'><constructor type='org.apache.http.impl.conn.tsccm.ConnPoolByRoute' name='ConnPoolByRoute'><parameter type='org.apache.http.conn.ClientConnectionOperator' name='operator'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='createEntry'><parameter type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='rospl'/><parameter type='org.apache.http.conn.ClientConnectionOperator' name='op'/></method><method visibility='protected' return='java.util.Queue&lt;org.apache.http.impl.conn.tsccm.BasicPoolEntry&gt;' name='createFreeConnQueue'/><method visibility='protected' return='java.util.Map&lt;org.apache.http.conn.routing.HttpRoute, org.apache.http.impl.conn.tsccm.RouteSpecificPool&gt;' name='createRouteToPoolMap'/><method visibility='protected' return='java.util.Queue&lt;org.apache.http.impl.conn.tsccm.WaitingThread&gt;' name='createWaitingThreadQueue'/><method name='deleteClosedConnections'/><method visibility='protected' name='deleteEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/></method><method visibility='protected' name='deleteLeastUsedEntry'/><method name='freeEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/><parameter type='boolean' name='reusable'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='timeUnit'/></method><method return='int' name='getConnectionsInPool'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='getEntryBlocking'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/><parameter type='org.apache.http.impl.conn.tsccm.WaitingThreadAborter' name='aborter'/><exception type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='getFreeEntry'><parameter type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='rospl'/><parameter type='java.lang.Object' name='state'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='getRoutePool'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='boolean' name='create'/></method><method visibility='protected' name='handleLostEntry'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='newRouteSpecificPool'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.WaitingThread' name='newWaitingThread'><parameter type='java.util.concurrent.locks.Condition' name='cond'/><parameter type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='rospl'/></method><method visibility='protected' name='notifyWaitingThread'><parameter type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='rospl'/></method><method return='org.apache.http.impl.conn.tsccm.PoolEntryRequest' name='requestPoolEntry'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method></class><class extends='java.lang.Object' name='RefQueueWorker'><constructor type='org.apache.http.impl.conn.tsccm.RefQueueWorker' name='RefQueueWorker'><parameter type='java.lang.ref.ReferenceQueue&lt;?&gt;' name='queue'/><parameter type='org.apache.http.impl.conn.tsccm.RefQueueHandler' name='handler'/></constructor><method name='run'/><method name='shutdown'/></class><class extends='java.lang.Object' name='RouteSpecificPool'><constructor type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='RouteSpecificPool'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='int' name='maxEntries'/></constructor><method return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='allocEntry'><parameter type='java.lang.Object' name='state'/></method><method name='createdEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/></method><method return='boolean' name='deleteEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/></method><method name='dropEntry'/><method name='freeEntry'><parameter type='org.apache.http.impl.conn.tsccm.BasicPoolEntry' name='entry'/></method><method return='int' name='getCapacity'/><method return='int' name='getEntryCount' final='true'/><method return='int' name='getMaxEntries' final='true'/><method return='org.apache.http.conn.routing.HttpRoute' name='getRoute' final='true'/><method return='boolean' name='hasThread'/><method return='boolean' name='isUnused'/><method return='org.apache.http.impl.conn.tsccm.WaitingThread' name='nextThread'/><method name='queueThread'><parameter type='org.apache.http.impl.conn.tsccm.WaitingThread' name='wt'/></method><method name='removeThread'><parameter type='org.apache.http.impl.conn.tsccm.WaitingThread' name='wt'/></method></class><class extends='java.lang.Object' name='ThreadSafeClientConnManager'><constructor type='org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager' name='ThreadSafeClientConnManager'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/></constructor><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter type='long' name='idleTimeout'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/></method><method visibility='protected' return='org.apache.http.conn.ClientConnectionOperator' name='createConnectionOperator'><parameter type='org.apache.http.conn.scheme.SchemeRegistry' name='schreg'/></method><method visibility='protected' return='org.apache.http.impl.conn.tsccm.AbstractConnPool' name='createConnectionPool'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' name='getConnectionsInPool'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/></method><method return='int' name='getConnectionsInPool'/><method return='org.apache.http.conn.scheme.SchemeRegistry' name='getSchemeRegistry'/><method name='releaseConnection'><parameter type='org.apache.http.conn.ManagedClientConnection' name='conn'/><parameter type='long' name='validDuration'/><parameter type='java.util.concurrent.TimeUnit' name='timeUnit'/></method><method return='org.apache.http.conn.ClientConnectionRequest' name='requestConnection'><parameter type='org.apache.http.conn.routing.HttpRoute' name='route'/><parameter type='java.lang.Object' name='state'/></method><method name='shutdown'/></class><class extends='java.lang.Object' name='WaitingThread'><constructor type='org.apache.http.impl.conn.tsccm.WaitingThread' name='WaitingThread'><parameter type='java.util.concurrent.locks.Condition' name='cond'/><parameter type='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='pool'/></constructor><method return='boolean' name='await'><parameter type='java.util.Date' name='deadline'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method><method return='java.util.concurrent.locks.Condition' name='getCondition' final='true'/><method return='org.apache.http.impl.conn.tsccm.RouteSpecificPool' name='getPool' final='true'/><method return='java.lang.Thread' name='getThread' final='true'/><method name='interrupt'/><method name='wakeup'/></class><class extends='java.lang.Object' name='WaitingThreadAborter'><constructor type='org.apache.http.impl.conn.tsccm.WaitingThreadAborter' name='WaitingThreadAborter'/><method name='abort'/><method name='setWaitingThread'><parameter type='org.apache.http.impl.conn.tsccm.WaitingThread' name='waitingThread'/></method></class><interface abstract='true' name='PoolEntryRequest'><method abstract='true' name='abortRequest'/><method return='org.apache.http.impl.conn.tsccm.BasicPoolEntry' abstract='true' name='getPoolEntry'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='tunit'/><exception type='org.apache.http.conn.ConnectionPoolTimeoutException' name='ConnectionPoolTimeoutException'/><exception type='java.lang.InterruptedException' name='InterruptedException'/></method></interface><interface abstract='true' name='RefQueueHandler'><method abstract='true' name='handleReference'><parameter type='java.lang.ref.Reference&lt;?&gt;' name='ref'/></method></interface></package><package name='org.apache.http.impl.cookie'><class extends='java.lang.Object' abstract='true' name='AbstractCookieAttributeHandler'><constructor type='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='AbstractCookieAttributeHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractCookieSpec'><constructor type='org.apache.http.impl.cookie.AbstractCookieSpec' name='AbstractCookieSpec'/><method visibility='protected' return='org.apache.http.cookie.CookieAttributeHandler' name='findAttribHandler'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' return='org.apache.http.cookie.CookieAttributeHandler' name='getAttribHandler'><parameter type='java.lang.String' name='name'/></method><method visibility='protected' return='java.util.Collection&lt;org.apache.http.cookie.CookieAttributeHandler&gt;' name='getAttribHandlers'/><method name='registerAttribHandler'><parameter type='java.lang.String' name='name'/><parameter type='org.apache.http.cookie.CookieAttributeHandler' name='handler'/></method></class><class extends='java.lang.Object' name='BasicClientCookie'><constructor type='org.apache.http.impl.cookie.BasicClientCookie' name='BasicClientCookie'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='boolean' name='containsAttribute'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getAttribute'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getComment'/><method return='java.lang.String' name='getCommentURL'/><method return='java.lang.String' name='getDomain'/><method return='java.util.Date' name='getExpiryDate'/><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getPath'/><method return='int[]' name='getPorts'/><method return='java.lang.String' name='getValue'/><method return='int' name='getVersion'/><method return='boolean' name='isExpired'><parameter type='java.util.Date' name='date'/></method><method return='boolean' name='isPersistent'/><method return='boolean' name='isSecure'/><method name='setAttribute'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method name='setComment'><parameter type='java.lang.String' name='comment'/></method><method name='setDomain'><parameter type='java.lang.String' name='domain'/></method><method name='setExpiryDate'><parameter type='java.util.Date' name='expiryDate'/></method><method name='setPath'><parameter type='java.lang.String' name='path'/></method><method name='setSecure'><parameter type='boolean' name='secure'/></method><method name='setValue'><parameter type='java.lang.String' name='value'/></method><method name='setVersion'><parameter type='int' name='version'/></method></class><class extends='org.apache.http.impl.cookie.BasicClientCookie' name='BasicClientCookie2'><constructor type='org.apache.http.impl.cookie.BasicClientCookie2' name='BasicClientCookie2'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method name='setCommentURL'><parameter type='java.lang.String' name='commentURL'/></method><method name='setDiscard'><parameter type='boolean' name='discard'/></method><method name='setPorts'><parameter type='int[]' name='ports'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='BasicCommentHandler'><constructor type='org.apache.http.impl.cookie.BasicCommentHandler' name='BasicCommentHandler'/><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='BasicDomainHandler'><constructor type='org.apache.http.impl.cookie.BasicDomainHandler' name='BasicDomainHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='BasicExpiresHandler'><constructor type='org.apache.http.impl.cookie.BasicExpiresHandler' name='BasicExpiresHandler'><parameter type='java.lang.String[]' name='datepatterns'/></constructor><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='BasicMaxAgeHandler'><constructor type='org.apache.http.impl.cookie.BasicMaxAgeHandler' name='BasicMaxAgeHandler'/><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='BasicPathHandler'><constructor type='org.apache.http.impl.cookie.BasicPathHandler' name='BasicPathHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='BasicSecureHandler'><constructor type='org.apache.http.impl.cookie.BasicSecureHandler' name='BasicSecureHandler'/><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='BestMatchSpec'><constructor type='org.apache.http.impl.cookie.BestMatchSpec' name='BestMatchSpec'><parameter type='java.lang.String[]' name='datepatterns'/><parameter type='boolean' name='oneHeader'/></constructor><constructor type='org.apache.http.impl.cookie.BestMatchSpec' name='BestMatchSpec'/><method return='java.util.List&lt;org.apache.http.Header&gt;' name='formatCookies'><parameter type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='cookies'/></method><method return='int' name='getVersion'/><method return='org.apache.http.Header' name='getVersionHeader'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='parse'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='BestMatchSpecFactory'><constructor type='org.apache.http.impl.cookie.BestMatchSpecFactory' name='BestMatchSpecFactory'/><method return='org.apache.http.cookie.CookieSpec' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='org.apache.http.impl.cookie.CookieSpecBase' name='BrowserCompatSpec'><constructor type='org.apache.http.impl.cookie.BrowserCompatSpec' name='BrowserCompatSpec'><parameter type='java.lang.String[]' name='datepatterns'/></constructor><constructor type='org.apache.http.impl.cookie.BrowserCompatSpec' name='BrowserCompatSpec'/><method return='java.util.List&lt;org.apache.http.Header&gt;' name='formatCookies'><parameter type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='cookies'/></method><method return='int' name='getVersion'/><method return='org.apache.http.Header' name='getVersionHeader'/><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='parse'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='BrowserCompatSpecFactory'><constructor type='org.apache.http.impl.cookie.BrowserCompatSpecFactory' name='BrowserCompatSpecFactory'/><method return='org.apache.http.cookie.CookieSpec' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieSpec' abstract='true' name='CookieSpecBase'><constructor type='org.apache.http.impl.cookie.CookieSpecBase' name='CookieSpecBase'/><method visibility='protected' return='java.lang.String' static='true' name='getDefaultDomain'><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method visibility='protected' return='java.lang.String' static='true' name='getDefaultPath'><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method visibility='protected' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='parse'><parameter type='org.apache.http.HeaderElement[]' name='elems'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Exception' name='DateParseException'><constructor type='org.apache.http.impl.cookie.DateParseException' name='DateParseException'/><constructor type='org.apache.http.impl.cookie.DateParseException' name='DateParseException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='DateUtils' final='true'><method return='java.lang.String' static='true' name='formatDate'><parameter type='java.util.Date' name='date'/></method><method return='java.lang.String' static='true' name='formatDate'><parameter type='java.util.Date' name='date'/><parameter type='java.lang.String' name='pattern'/></method><method return='java.util.Date' static='true' name='parseDate'><parameter type='java.lang.String' name='dateValue'/><exception type='org.apache.http.impl.cookie.DateParseException' name='DateParseException'/></method><method return='java.util.Date' static='true' name='parseDate'><parameter type='java.lang.String' name='dateValue'/><parameter type='java.lang.String[]' name='dateFormats'/><exception type='org.apache.http.impl.cookie.DateParseException' name='DateParseException'/></method><method return='java.util.Date' static='true' name='parseDate'><parameter type='java.lang.String' name='dateValue'/><parameter type='java.lang.String[]' name='dateFormats'/><parameter type='java.util.Date' name='startDate'/><exception type='org.apache.http.impl.cookie.DateParseException' name='DateParseException'/></method></class><class extends='org.apache.http.impl.cookie.BasicDomainHandler' name='NetscapeDomainHandler'><constructor type='org.apache.http.impl.cookie.NetscapeDomainHandler' name='NetscapeDomainHandler'/></class><class extends='java.lang.Object' name='NetscapeDraftHeaderParser'><constructor type='org.apache.http.impl.cookie.NetscapeDraftHeaderParser' name='NetscapeDraftHeaderParser'/><method return='org.apache.http.HeaderElement' name='parseHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></class><class extends='org.apache.http.impl.cookie.CookieSpecBase' name='NetscapeDraftSpec'><constructor type='org.apache.http.impl.cookie.NetscapeDraftSpec' name='NetscapeDraftSpec'><parameter type='java.lang.String[]' name='datepatterns'/></constructor><constructor type='org.apache.http.impl.cookie.NetscapeDraftSpec' name='NetscapeDraftSpec'/><method return='java.util.List&lt;org.apache.http.Header&gt;' name='formatCookies'><parameter type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='cookies'/></method><method return='int' name='getVersion'/><method return='org.apache.http.Header' name='getVersionHeader'/><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='parse'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='NetscapeDraftSpecFactory'><constructor type='org.apache.http.impl.cookie.NetscapeDraftSpecFactory' name='NetscapeDraftSpecFactory'/><method return='org.apache.http.cookie.CookieSpec' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='java.lang.Object' name='RFC2109DomainHandler'><constructor type='org.apache.http.impl.cookie.RFC2109DomainHandler' name='RFC2109DomainHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='org.apache.http.impl.cookie.CookieSpecBase' name='RFC2109Spec'><constructor type='org.apache.http.impl.cookie.RFC2109Spec' name='RFC2109Spec'><parameter type='java.lang.String[]' name='datepatterns'/><parameter type='boolean' name='oneHeader'/></constructor><constructor type='org.apache.http.impl.cookie.RFC2109Spec' name='RFC2109Spec'/><method visibility='protected' name='formatCookieAsVer'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='int' name='version'/></method><method return='java.util.List&lt;org.apache.http.Header&gt;' name='formatCookies'><parameter type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='cookies'/></method><method visibility='protected' name='formatParamAsVer'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><parameter type='int' name='version'/></method><method return='int' name='getVersion'/><method return='org.apache.http.Header' name='getVersionHeader'/><method return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;' name='parse'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='RFC2109SpecFactory'><constructor type='org.apache.http.impl.cookie.RFC2109SpecFactory' name='RFC2109SpecFactory'/><method return='org.apache.http.cookie.CookieSpec' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler' name='RFC2109VersionHandler'><constructor type='org.apache.http.impl.cookie.RFC2109VersionHandler' name='RFC2109VersionHandler'/><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='RFC2965CommentUrlAttributeHandler'><constructor type='org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler' name='RFC2965CommentUrlAttributeHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='commenturl'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='RFC2965DiscardAttributeHandler'><constructor type='org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler' name='RFC2965DiscardAttributeHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='commenturl'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='RFC2965DomainAttributeHandler'><constructor type='org.apache.http.impl.cookie.RFC2965DomainAttributeHandler' name='RFC2965DomainAttributeHandler'/><method return='boolean' name='domainMatch'><parameter type='java.lang.String' name='host'/><parameter type='java.lang.String' name='domain'/></method><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='domain'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='java.lang.Object' name='RFC2965PortAttributeHandler'><constructor type='org.apache.http.impl.cookie.RFC2965PortAttributeHandler' name='RFC2965PortAttributeHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='portValue'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class><class extends='org.apache.http.impl.cookie.RFC2109Spec' name='RFC2965Spec'><constructor type='org.apache.http.impl.cookie.RFC2965Spec' name='RFC2965Spec'/><constructor type='org.apache.http.impl.cookie.RFC2965Spec' name='RFC2965Spec'><parameter type='java.lang.String[]' name='datepatterns'/><parameter type='boolean' name='oneHeader'/></constructor></class><class extends='java.lang.Object' name='RFC2965SpecFactory'><constructor type='org.apache.http.impl.cookie.RFC2965SpecFactory' name='RFC2965SpecFactory'/><method return='org.apache.http.cookie.CookieSpec' name='newInstance'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='java.lang.Object' name='RFC2965VersionAttributeHandler'><constructor type='org.apache.http.impl.cookie.RFC2965VersionAttributeHandler' name='RFC2965VersionAttributeHandler'/><method return='boolean' name='match'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/></method><method name='parse'><parameter type='org.apache.http.cookie.SetCookie' name='cookie'/><parameter type='java.lang.String' name='value'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method><method name='validate'><parameter type='org.apache.http.cookie.Cookie' name='cookie'/><parameter type='org.apache.http.cookie.CookieOrigin' name='origin'/><exception type='org.apache.http.cookie.MalformedCookieException' name='MalformedCookieException'/></method></class></package><package name='org.apache.http.impl.entity'><class extends='java.lang.Object' name='EntityDeserializer'><constructor type='org.apache.http.impl.entity.EntityDeserializer' name='EntityDeserializer'><parameter type='org.apache.http.entity.ContentLengthStrategy' name='lenStrategy'/></constructor><method return='org.apache.http.HttpEntity' name='deserialize'><parameter type='org.apache.http.io.SessionInputBuffer' name='inbuffer'/><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.entity.BasicHttpEntity' name='doDeserialize'><parameter type='org.apache.http.io.SessionInputBuffer' name='inbuffer'/><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='EntitySerializer'><constructor type='org.apache.http.impl.entity.EntitySerializer' name='EntitySerializer'><parameter type='org.apache.http.entity.ContentLengthStrategy' name='lenStrategy'/></constructor><method visibility='protected' return='java.io.OutputStream' name='doSerialize'><parameter type='org.apache.http.io.SessionOutputBuffer' name='outbuffer'/><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='serialize'><parameter type='org.apache.http.io.SessionOutputBuffer' name='outbuffer'/><parameter type='org.apache.http.HttpMessage' name='message'/><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='LaxContentLengthStrategy'><constructor type='org.apache.http.impl.entity.LaxContentLengthStrategy' name='LaxContentLengthStrategy'/><method return='long' name='determineLength'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></class><class extends='java.lang.Object' name='StrictContentLengthStrategy'><constructor type='org.apache.http.impl.entity.StrictContentLengthStrategy' name='StrictContentLengthStrategy'/><method return='long' name='determineLength'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></class></package><package name='org.apache.http.impl.io'><class extends='java.lang.Object' abstract='true' name='AbstractMessageParser'><constructor type='org.apache.http.impl.io.AbstractMessageParser' name='AbstractMessageParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineParser' name='parser'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method return='org.apache.http.HttpMessage' name='parse'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.HttpMessage' abstract='true' name='parseHead'><parameter type='org.apache.http.io.SessionInputBuffer' name='sessionBuffer'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.Header[]' static='true' name='parseHeaders'><parameter type='org.apache.http.io.SessionInputBuffer' name='inbuffer'/><parameter type='int' name='maxHeaderCount'/><parameter type='int' name='maxLineLen'/><parameter type='org.apache.http.message.LineParser' name='parser'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractMessageWriter'><constructor type='org.apache.http.impl.io.AbstractMessageWriter' name='AbstractMessageWriter'><parameter type='org.apache.http.io.SessionOutputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='write'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' abstract='true' name='writeHeadLine'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractSessionInputBuffer'><constructor type='org.apache.http.impl.io.AbstractSessionInputBuffer' name='AbstractSessionInputBuffer'/><method visibility='protected' return='int' name='fillBuffer'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.io.HttpTransportMetrics' name='getMetrics'/><method visibility='protected' return='boolean' name='hasBufferedData'/><method visibility='protected' name='init'><parameter type='java.io.InputStream' name='instream'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='read'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='readLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='charbuffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='readLine'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractSessionOutputBuffer'><constructor type='org.apache.http.impl.io.AbstractSessionOutputBuffer' name='AbstractSessionOutputBuffer'/><method name='flush'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='flushBuffer'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.io.HttpTransportMetrics' name='getMetrics'/><method visibility='protected' name='init'><parameter type='java.io.OutputStream' name='outstream'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method name='write'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLine'><parameter type='java.lang.String' name='s'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='s'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='ChunkedInputStream'><constructor type='org.apache.http.impl.io.ChunkedInputStream' name='ChunkedInputStream'><parameter type='org.apache.http.io.SessionInputBuffer' name='in'/></constructor><method return='org.apache.http.Header[]' name='getFooters'/><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.OutputStream' name='ChunkedOutputStream'><constructor type='org.apache.http.impl.io.ChunkedOutputStream' name='ChunkedOutputStream'><parameter type='org.apache.http.io.SessionOutputBuffer' name='out'/><parameter type='int' name='bufferSize'/><exception type='java.io.IOException' name='IOException'/></constructor><constructor type='org.apache.http.impl.io.ChunkedOutputStream' name='ChunkedOutputStream'><parameter type='org.apache.http.io.SessionOutputBuffer' name='out'/><exception type='java.io.IOException' name='IOException'/></constructor><method name='finish'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='flushCache'><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='flushCacheWithAppend'><parameter type='byte[]' name='bufferToAppend'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' name='writeClosingChunk'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='ContentLengthInputStream'><constructor type='org.apache.http.impl.io.ContentLengthInputStream' name='ContentLengthInputStream'><parameter type='org.apache.http.io.SessionInputBuffer' name='in'/><parameter type='long' name='contentLength'/></constructor><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.OutputStream' name='ContentLengthOutputStream'><constructor type='org.apache.http.impl.io.ContentLengthOutputStream' name='ContentLengthOutputStream'><parameter type='org.apache.http.io.SessionOutputBuffer' name='out'/><parameter type='long' name='contentLength'/></constructor><method name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.io.AbstractMessageParser' name='HttpRequestParser'><constructor type='org.apache.http.impl.io.HttpRequestParser' name='HttpRequestParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineParser' name='parser'/><parameter type='org.apache.http.HttpRequestFactory' name='requestFactory'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' return='org.apache.http.HttpMessage' name='parseHead'><parameter type='org.apache.http.io.SessionInputBuffer' name='sessionBuffer'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></class><class extends='org.apache.http.impl.io.AbstractMessageWriter' name='HttpRequestWriter'><constructor type='org.apache.http.impl.io.HttpRequestWriter' name='HttpRequestWriter'><parameter type='org.apache.http.io.SessionOutputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' name='writeHeadLine'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.io.AbstractMessageParser' name='HttpResponseParser'><constructor type='org.apache.http.impl.io.HttpResponseParser' name='HttpResponseParser'><parameter type='org.apache.http.io.SessionInputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineParser' name='parser'/><parameter type='org.apache.http.HttpResponseFactory' name='responseFactory'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' return='org.apache.http.HttpMessage' name='parseHead'><parameter type='org.apache.http.io.SessionInputBuffer' name='sessionBuffer'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></class><class extends='org.apache.http.impl.io.AbstractMessageWriter' name='HttpResponseWriter'><constructor type='org.apache.http.impl.io.HttpResponseWriter' name='HttpResponseWriter'><parameter type='org.apache.http.io.SessionOutputBuffer' name='buffer'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method visibility='protected' name='writeHeadLine'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='HttpTransportMetricsImpl'><constructor type='org.apache.http.impl.io.HttpTransportMetricsImpl' name='HttpTransportMetricsImpl'/><method return='long' name='getBytesTransferred'/><method name='incrementBytesTransferred'><parameter type='long' name='count'/></method><method name='reset'/><method name='setBytesTransferred'><parameter type='long' name='count'/></method></class><class extends='java.io.InputStream' name='IdentityInputStream'><constructor type='org.apache.http.impl.io.IdentityInputStream' name='IdentityInputStream'><parameter type='org.apache.http.io.SessionInputBuffer' name='in'/></constructor><method return='int' name='read'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.OutputStream' name='IdentityOutputStream'><constructor type='org.apache.http.impl.io.IdentityOutputStream' name='IdentityOutputStream'><parameter type='org.apache.http.io.SessionOutputBuffer' name='out'/></constructor><method name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.io.AbstractSessionInputBuffer' name='SocketInputBuffer'><constructor type='org.apache.http.impl.io.SocketInputBuffer' name='SocketInputBuffer'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></constructor><method return='boolean' name='isDataAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.impl.io.AbstractSessionOutputBuffer' name='SocketOutputBuffer'><constructor type='org.apache.http.impl.io.SocketOutputBuffer' name='SocketOutputBuffer'><parameter type='java.net.Socket' name='socket'/><parameter type='int' name='buffersize'/><parameter type='org.apache.http.params.HttpParams' name='params'/><exception type='java.io.IOException' name='IOException'/></constructor></class></package><package name='org.apache.http.io'><interface abstract='true' name='HttpMessageParser'><method return='org.apache.http.HttpMessage' abstract='true' name='parse'><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpMessageWriter'><method abstract='true' name='write'><parameter type='org.apache.http.HttpMessage' name='message'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpTransportMetrics'><method return='long' abstract='true' name='getBytesTransferred'/><method abstract='true' name='reset'/></interface><interface abstract='true' name='SessionInputBuffer'><method return='org.apache.http.io.HttpTransportMetrics' abstract='true' name='getMetrics'/><method return='boolean' abstract='true' name='isDataAvailable'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='read'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='readLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' abstract='true' name='readLine'><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='SessionOutputBuffer'><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.io.HttpTransportMetrics' abstract='true' name='getMetrics'/><method abstract='true' name='write'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='byte[]' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='write'><parameter type='int' name='b'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeLine'><parameter type='java.lang.String' name='s'/><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='writeLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='java.io.IOException' name='IOException'/></method></interface></package><package name='org.apache.http.message'><class extends='java.lang.Object' abstract='true' name='AbstractHttpMessage'><constructor visibility='protected' type='org.apache.http.message.AbstractHttpMessage' name='AbstractHttpMessage'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><constructor visibility='protected' type='org.apache.http.message.AbstractHttpMessage' name='AbstractHttpMessage'/><method name='addHeader'><parameter type='org.apache.http.Header' name='header'/></method><method name='addHeader'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method return='boolean' name='containsHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header[]' name='getAllHeaders'/><method return='org.apache.http.Header' name='getFirstHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header[]' name='getHeaders'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header' name='getLastHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='getParams'/><method return='org.apache.http.HeaderIterator' name='headerIterator'/><method return='org.apache.http.HeaderIterator' name='headerIterator'><parameter type='java.lang.String' name='name'/></method><method name='removeHeader'><parameter type='org.apache.http.Header' name='header'/></method><method name='removeHeaders'><parameter type='java.lang.String' name='name'/></method><method name='setHeader'><parameter type='org.apache.http.Header' name='header'/></method><method name='setHeader'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method name='setHeaders'><parameter type='org.apache.http.Header[]' name='headers'/></method><method name='setParams'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><class extends='java.lang.Object' name='BasicHeader'><constructor type='org.apache.http.message.BasicHeader' name='BasicHeader'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='org.apache.http.HeaderElement[]' name='getElements'><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getValue'/></class><class extends='java.lang.Object' name='BasicHeaderElement'><constructor type='org.apache.http.message.BasicHeaderElement' name='BasicHeaderElement'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.NameValuePair[]' name='parameters'/></constructor><constructor type='org.apache.http.message.BasicHeaderElement' name='BasicHeaderElement'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.lang.String' name='getName'/><method return='org.apache.http.NameValuePair' name='getParameter'><parameter type='int' name='index'/></method><method return='org.apache.http.NameValuePair' name='getParameterByName'><parameter type='java.lang.String' name='name'/></method><method return='int' name='getParameterCount'/><method return='org.apache.http.NameValuePair[]' name='getParameters'/><method return='java.lang.String' name='getValue'/></class><class extends='java.lang.Object' name='BasicHeaderElementIterator'><constructor type='org.apache.http.message.BasicHeaderElementIterator' name='BasicHeaderElementIterator'><parameter type='org.apache.http.HeaderIterator' name='headerIterator'/><parameter type='org.apache.http.message.HeaderValueParser' name='parser'/></constructor><constructor type='org.apache.http.message.BasicHeaderElementIterator' name='BasicHeaderElementIterator'><parameter type='org.apache.http.HeaderIterator' name='headerIterator'/></constructor><method return='boolean' name='hasNext'/><method return='java.lang.Object' name='next' final='true'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method return='org.apache.http.HeaderElement' name='nextElement'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method name='remove'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' name='BasicHeaderIterator'><constructor type='org.apache.http.message.BasicHeaderIterator' name='BasicHeaderIterator'><parameter type='org.apache.http.Header[]' name='headers'/><parameter type='java.lang.String' name='name'/></constructor><method visibility='protected' return='boolean' name='filterHeader'><parameter type='int' name='index'/></method><method visibility='protected' return='int' name='findNext'><parameter type='int' name='from'/></method><method return='boolean' name='hasNext'/><method return='java.lang.Object' name='next' final='true'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method return='org.apache.http.Header' name='nextHeader'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method name='remove'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' name='BasicHeaderValueFormatter'><constructor type='org.apache.http.message.BasicHeaderValueFormatter' name='BasicHeaderValueFormatter'/><method visibility='protected' name='doFormatValue'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='java.lang.String' name='value'/><parameter type='boolean' name='quote'/></method><method visibility='protected' return='int' name='estimateElementsLen'><parameter type='org.apache.http.HeaderElement[]' name='elems'/></method><method visibility='protected' return='int' name='estimateHeaderElementLen'><parameter type='org.apache.http.HeaderElement' name='elem'/></method><method visibility='protected' return='int' name='estimateNameValuePairLen'><parameter type='org.apache.http.NameValuePair' name='nvp'/></method><method visibility='protected' return='int' name='estimateParametersLen'><parameter type='org.apache.http.NameValuePair[]' name='nvps'/></method><method return='java.lang.String' static='true' name='formatElements' final='true'><parameter type='org.apache.http.HeaderElement[]' name='elems'/><parameter type='boolean' name='quote'/><parameter type='org.apache.http.message.HeaderValueFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatElements'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.HeaderElement[]' name='elems'/><parameter type='boolean' name='quote'/></method><method return='java.lang.String' static='true' name='formatHeaderElement' final='true'><parameter type='org.apache.http.HeaderElement' name='elem'/><parameter type='boolean' name='quote'/><parameter type='org.apache.http.message.HeaderValueFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatHeaderElement'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.HeaderElement' name='elem'/><parameter type='boolean' name='quote'/></method><method return='java.lang.String' static='true' name='formatNameValuePair' final='true'><parameter type='org.apache.http.NameValuePair' name='nvp'/><parameter type='boolean' name='quote'/><parameter type='org.apache.http.message.HeaderValueFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatNameValuePair'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.NameValuePair' name='nvp'/><parameter type='boolean' name='quote'/></method><method return='java.lang.String' static='true' name='formatParameters' final='true'><parameter type='org.apache.http.NameValuePair[]' name='nvps'/><parameter type='boolean' name='quote'/><parameter type='org.apache.http.message.HeaderValueFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatParameters'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.NameValuePair[]' name='nvps'/><parameter type='boolean' name='quote'/></method><method visibility='protected' return='boolean' name='isSeparator'><parameter type='char' name='ch'/></method><method visibility='protected' return='boolean' name='isUnsafe'><parameter type='char' name='ch'/></method></class><class extends='java.lang.Object' name='BasicHeaderValueParser'><constructor type='org.apache.http.message.BasicHeaderValueParser' name='BasicHeaderValueParser'/><method visibility='protected' return='org.apache.http.HeaderElement' name='createHeaderElement'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.NameValuePair[]' name='params'/></method><method visibility='protected' return='org.apache.http.NameValuePair' name='createNameValuePair'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></method><method return='org.apache.http.HeaderElement[]' static='true' name='parseElements' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.HeaderValueParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.HeaderElement[]' name='parseElements'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method><method return='org.apache.http.HeaderElement' static='true' name='parseHeaderElement' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.HeaderValueParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.HeaderElement' name='parseHeaderElement'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method><method return='org.apache.http.NameValuePair' static='true' name='parseNameValuePair' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.HeaderValueParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.NameValuePair' name='parseNameValuePair'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method><method return='org.apache.http.NameValuePair' name='parseNameValuePair'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><parameter type='char[]' name='delimiters'/></method><method return='org.apache.http.NameValuePair[]' static='true' name='parseParameters' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.HeaderValueParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.NameValuePair[]' name='parseParameters'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method></class><class extends='org.apache.http.message.BasicHttpRequest' name='BasicHttpEntityEnclosingRequest'><constructor type='org.apache.http.message.BasicHttpEntityEnclosingRequest' name='BasicHttpEntityEnclosingRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/></constructor><constructor type='org.apache.http.message.BasicHttpEntityEnclosingRequest' name='BasicHttpEntityEnclosingRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><parameter type='org.apache.http.ProtocolVersion' name='ver'/></constructor><constructor type='org.apache.http.message.BasicHttpEntityEnclosingRequest' name='BasicHttpEntityEnclosingRequest'><parameter type='org.apache.http.RequestLine' name='requestline'/></constructor><method return='boolean' name='expectContinue'/><method return='org.apache.http.HttpEntity' name='getEntity'/><method name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method></class><class extends='org.apache.http.message.AbstractHttpMessage' name='BasicHttpRequest'><constructor type='org.apache.http.message.BasicHttpRequest' name='BasicHttpRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/></constructor><constructor type='org.apache.http.message.BasicHttpRequest' name='BasicHttpRequest'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><parameter type='org.apache.http.ProtocolVersion' name='ver'/></constructor><constructor type='org.apache.http.message.BasicHttpRequest' name='BasicHttpRequest'><parameter type='org.apache.http.RequestLine' name='requestline'/></constructor><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method return='org.apache.http.RequestLine' name='getRequestLine'/></class><class extends='org.apache.http.message.AbstractHttpMessage' name='BasicHttpResponse'><constructor type='org.apache.http.message.BasicHttpResponse' name='BasicHttpResponse'><parameter type='org.apache.http.StatusLine' name='statusline'/><parameter type='org.apache.http.ReasonPhraseCatalog' name='catalog'/><parameter type='java.util.Locale' name='locale'/></constructor><constructor type='org.apache.http.message.BasicHttpResponse' name='BasicHttpResponse'><parameter type='org.apache.http.StatusLine' name='statusline'/></constructor><constructor type='org.apache.http.message.BasicHttpResponse' name='BasicHttpResponse'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='code'/><parameter type='java.lang.String' name='reason'/></constructor><method return='org.apache.http.HttpEntity' name='getEntity'/><method return='java.util.Locale' name='getLocale'/><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method visibility='protected' return='java.lang.String' name='getReason'><parameter type='int' name='code'/></method><method return='org.apache.http.StatusLine' name='getStatusLine'/><method name='setEntity'><parameter type='org.apache.http.HttpEntity' name='entity'/></method><method name='setLocale'><parameter type='java.util.Locale' name='loc'/></method><method name='setReasonPhrase'><parameter type='java.lang.String' name='reason'/></method><method name='setStatusCode'><parameter type='int' name='code'/></method><method name='setStatusLine'><parameter type='org.apache.http.StatusLine' name='statusline'/></method><method name='setStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='code'/></method><method name='setStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='code'/><parameter type='java.lang.String' name='reason'/></method></class><class extends='java.lang.Object' name='BasicLineFormatter'><constructor type='org.apache.http.message.BasicLineFormatter' name='BasicLineFormatter'/><method return='org.apache.http.util.CharArrayBuffer' name='appendProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method visibility='protected' name='doFormatHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.Header' name='header'/></method><method visibility='protected' name='doFormatRequestLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.RequestLine' name='reqline'/></method><method visibility='protected' name='doFormatStatusLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.StatusLine' name='statline'/></method><method visibility='protected' return='int' name='estimateProtocolVersionLen'><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method return='java.lang.String' static='true' name='formatHeader' final='true'><parameter type='org.apache.http.Header' name='header'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.Header' name='header'/></method><method return='java.lang.String' static='true' name='formatProtocolVersion' final='true'><parameter type='org.apache.http.ProtocolVersion' name='version'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/></method><method return='java.lang.String' static='true' name='formatRequestLine' final='true'><parameter type='org.apache.http.RequestLine' name='reqline'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatRequestLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.RequestLine' name='reqline'/></method><method return='java.lang.String' static='true' name='formatStatusLine' final='true'><parameter type='org.apache.http.StatusLine' name='statline'/><parameter type='org.apache.http.message.LineFormatter' name='formatter'/></method><method return='org.apache.http.util.CharArrayBuffer' name='formatStatusLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.StatusLine' name='statline'/></method><method visibility='protected' return='org.apache.http.util.CharArrayBuffer' name='initBuffer'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/></method></class><class extends='java.lang.Object' name='BasicLineParser'><constructor type='org.apache.http.message.BasicLineParser' name='BasicLineParser'><parameter type='org.apache.http.ProtocolVersion' name='proto'/></constructor><constructor type='org.apache.http.message.BasicLineParser' name='BasicLineParser'/><method visibility='protected' return='org.apache.http.ProtocolVersion' name='createProtocolVersion'><parameter type='int' name='major'/><parameter type='int' name='minor'/></method><method visibility='protected' return='org.apache.http.RequestLine' name='createRequestLine'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><parameter type='org.apache.http.ProtocolVersion' name='ver'/></method><method visibility='protected' return='org.apache.http.StatusLine' name='createStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='ver'/><parameter type='int' name='status'/><parameter type='java.lang.String' name='reason'/></method><method return='boolean' name='hasProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method><method return='org.apache.http.Header' static='true' name='parseHeader' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.LineParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.Header' name='parseHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.ProtocolVersion' static='true' name='parseProtocolVersion' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.LineParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.ProtocolVersion' name='parseProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.RequestLine' static='true' name='parseRequestLine' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.LineParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.RequestLine' name='parseRequestLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.StatusLine' static='true' name='parseStatusLine' final='true'><parameter type='java.lang.String' name='value'/><parameter type='org.apache.http.message.LineParser' name='parser'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.StatusLine' name='parseStatusLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method visibility='protected' name='skipWhitespace'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method></class><class extends='java.lang.Object' name='BasicListHeaderIterator'><constructor type='org.apache.http.message.BasicListHeaderIterator' name='BasicListHeaderIterator'><parameter type='java.util.List' name='headers'/><parameter type='java.lang.String' name='name'/></constructor><method visibility='protected' return='boolean' name='filterHeader'><parameter type='int' name='index'/></method><method visibility='protected' return='int' name='findNext'><parameter type='int' name='from'/></method><method return='boolean' name='hasNext'/><method return='java.lang.Object' name='next' final='true'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method return='org.apache.http.Header' name='nextHeader'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/></method><method name='remove'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' name='BasicNameValuePair'><constructor type='org.apache.http.message.BasicNameValuePair' name='BasicNameValuePair'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getValue'/></class><class extends='java.lang.Object' name='BasicRequestLine'><constructor type='org.apache.http.message.BasicRequestLine' name='BasicRequestLine'><parameter type='java.lang.String' name='method'/><parameter type='java.lang.String' name='uri'/><parameter type='org.apache.http.ProtocolVersion' name='version'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='java.lang.String' name='getMethod'/><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method return='java.lang.String' name='getUri'/></class><class extends='java.lang.Object' name='BasicStatusLine'><constructor type='org.apache.http.message.BasicStatusLine' name='BasicStatusLine'><parameter type='org.apache.http.ProtocolVersion' name='version'/><parameter type='int' name='statusCode'/><parameter type='java.lang.String' name='reasonPhrase'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='org.apache.http.ProtocolVersion' name='getProtocolVersion'/><method return='java.lang.String' name='getReasonPhrase'/><method return='int' name='getStatusCode'/></class><class extends='java.lang.Object' name='BasicTokenIterator'><constructor type='org.apache.http.message.BasicTokenIterator' name='BasicTokenIterator'><parameter type='org.apache.http.HeaderIterator' name='headerIterator'/></constructor><method visibility='protected' return='java.lang.String' name='createToken'><parameter type='java.lang.String' name='value'/><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method visibility='protected' return='int' name='findNext'><parameter type='int' name='from'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method visibility='protected' return='int' name='findTokenEnd'><parameter type='int' name='from'/></method><method visibility='protected' return='int' name='findTokenSeparator'><parameter type='int' name='from'/></method><method visibility='protected' return='int' name='findTokenStart'><parameter type='int' name='from'/></method><method return='boolean' name='hasNext'/><method visibility='protected' return='boolean' name='isHttpSeparator'><parameter type='char' name='ch'/></method><method visibility='protected' return='boolean' name='isTokenChar'><parameter type='char' name='ch'/></method><method visibility='protected' return='boolean' name='isTokenSeparator'><parameter type='char' name='ch'/></method><method visibility='protected' return='boolean' name='isWhitespace'><parameter type='char' name='ch'/></method><method return='java.lang.Object' name='next' final='true'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='java.lang.String' name='nextToken'><exception type='java.util.NoSuchElementException' name='NoSuchElementException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method name='remove' final='true'><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' name='BufferedHeader'><constructor type='org.apache.http.message.BufferedHeader' name='BufferedHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='org.apache.http.ParseException' name='ParseException'/></constructor><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='org.apache.http.util.CharArrayBuffer' name='getBuffer'/><method return='org.apache.http.HeaderElement[]' name='getElements'><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='java.lang.String' name='getName'/><method return='java.lang.String' name='getValue'/><method return='int' name='getValuePos'/></class><class extends='java.lang.Object' name='HeaderGroup'><constructor type='org.apache.http.message.HeaderGroup' name='HeaderGroup'/><method name='addHeader'><parameter type='org.apache.http.Header' name='header'/></method><method name='clear'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='boolean' name='containsHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.message.HeaderGroup' name='copy'/><method return='org.apache.http.Header[]' name='getAllHeaders'/><method return='org.apache.http.Header' name='getCondensedHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header' name='getFirstHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header[]' name='getHeaders'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.Header' name='getLastHeader'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.HeaderIterator' name='iterator'/><method return='org.apache.http.HeaderIterator' name='iterator'><parameter type='java.lang.String' name='name'/></method><method name='removeHeader'><parameter type='org.apache.http.Header' name='header'/></method><method name='setHeaders'><parameter type='org.apache.http.Header[]' name='headers'/></method><method name='updateHeader'><parameter type='org.apache.http.Header' name='header'/></method></class><class extends='java.lang.Object' name='ParserCursor'><constructor type='org.apache.http.message.ParserCursor' name='ParserCursor'><parameter type='int' name='lowerBound'/><parameter type='int' name='upperBound'/></constructor><method return='boolean' name='atEnd'/><method return='int' name='getLowerBound'/><method return='int' name='getPos'/><method return='int' name='getUpperBound'/><method name='updatePos'><parameter type='int' name='pos'/></method></class><interface abstract='true' name='HeaderValueFormatter'><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatElements'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.HeaderElement[]' name='elems'/><parameter type='boolean' name='quote'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatHeaderElement'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.HeaderElement' name='elem'/><parameter type='boolean' name='quote'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatNameValuePair'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.NameValuePair' name='nvp'/><parameter type='boolean' name='quote'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatParameters'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.NameValuePair[]' name='nvps'/><parameter type='boolean' name='quote'/></method></interface><interface abstract='true' name='HeaderValueParser'><method return='org.apache.http.HeaderElement[]' abstract='true' name='parseElements'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.HeaderElement' abstract='true' name='parseHeaderElement'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.NameValuePair' abstract='true' name='parseNameValuePair'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.NameValuePair[]' abstract='true' name='parseParameters'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></interface><interface abstract='true' name='LineFormatter'><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='appendProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.Header' name='header'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatRequestLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.RequestLine' name='reqline'/></method><method return='org.apache.http.util.CharArrayBuffer' abstract='true' name='formatStatusLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.StatusLine' name='statline'/></method></interface><interface abstract='true' name='LineParser'><method return='boolean' abstract='true' name='hasProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/></method><method return='org.apache.http.Header' abstract='true' name='parseHeader'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.ProtocolVersion' abstract='true' name='parseProtocolVersion'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.RequestLine' abstract='true' name='parseRequestLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='org.apache.http.StatusLine' abstract='true' name='parseStatusLine'><parameter type='org.apache.http.util.CharArrayBuffer' name='buffer'/><parameter type='org.apache.http.message.ParserCursor' name='cursor'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></interface></package><package name='org.apache.http.params'><class extends='java.lang.Object' abstract='true' name='AbstractHttpParams'><constructor visibility='protected' type='org.apache.http.params.AbstractHttpParams' name='AbstractHttpParams'/><method return='boolean' name='getBooleanParameter'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='defaultValue'/></method><method return='double' name='getDoubleParameter'><parameter type='java.lang.String' name='name'/><parameter type='double' name='defaultValue'/></method><method return='int' name='getIntParameter'><parameter type='java.lang.String' name='name'/><parameter type='int' name='defaultValue'/></method><method return='long' name='getLongParameter'><parameter type='java.lang.String' name='name'/><parameter type='long' name='defaultValue'/></method><method return='boolean' name='isParameterFalse'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='isParameterTrue'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='setBooleanParameter'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/></method><method return='org.apache.http.params.HttpParams' name='setDoubleParameter'><parameter type='java.lang.String' name='name'/><parameter type='double' name='value'/></method><method return='org.apache.http.params.HttpParams' name='setIntParameter'><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method return='org.apache.http.params.HttpParams' name='setLongParameter'><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method></class><class extends='org.apache.http.params.AbstractHttpParams' name='BasicHttpParams' final='true'><constructor type='org.apache.http.params.BasicHttpParams' name='BasicHttpParams'/><method name='clear'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='org.apache.http.params.HttpParams' name='copy'/><method visibility='protected' name='copyParams'><parameter type='org.apache.http.params.HttpParams' name='target'/></method><method return='java.lang.Object' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='isParameterSet'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='isParameterSetLocally'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='removeParameter'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='setParameter'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method name='setParameters'><parameter type='java.lang.String[]' name='names'/><parameter type='java.lang.Object' name='value'/></method></class><class extends='org.apache.http.params.AbstractHttpParams' name='DefaultedHttpParams' final='true'><constructor type='org.apache.http.params.DefaultedHttpParams' name='DefaultedHttpParams'><parameter type='org.apache.http.params.HttpParams' name='local'/><parameter type='org.apache.http.params.HttpParams' name='defaults'/></constructor><method return='org.apache.http.params.HttpParams' name='copy'/><method return='org.apache.http.params.HttpParams' name='getDefaults'/><method return='java.lang.Object' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='removeParameter'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' name='setParameter'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method></class><class extends='java.lang.Object' abstract='true' name='HttpAbstractParamBean'><constructor type='org.apache.http.params.HttpAbstractParamBean' name='HttpAbstractParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor></class><class extends='org.apache.http.params.HttpAbstractParamBean' name='HttpConnectionParamBean'><constructor type='org.apache.http.params.HttpConnectionParamBean' name='HttpConnectionParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setConnectionTimeout'><parameter type='int' name='connectionTimeout'/></method><method name='setLinger'><parameter type='int' name='linger'/></method><method name='setSoTimeout'><parameter type='int' name='soTimeout'/></method><method name='setSocketBufferSize'><parameter type='int' name='socketBufferSize'/></method><method name='setStaleCheckingEnabled'><parameter type='boolean' name='staleCheckingEnabled'/></method><method name='setTcpNoDelay'><parameter type='boolean' name='tcpNoDelay'/></method></class><class extends='java.lang.Object' name='HttpConnectionParams' final='true'><method return='int' static='true' name='getConnectionTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' static='true' name='getLinger'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' static='true' name='getSoTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='int' static='true' name='getSocketBufferSize'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' static='true' name='getTcpNoDelay'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='boolean' static='true' name='isStaleCheckingEnabled'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setConnectionTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='int' name='timeout'/></method><method static='true' name='setLinger'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='int' name='value'/></method><method static='true' name='setSoTimeout'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='int' name='timeout'/></method><method static='true' name='setSocketBufferSize'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='int' name='size'/></method><method static='true' name='setStaleCheckingEnabled'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='boolean' name='value'/></method><method static='true' name='setTcpNoDelay'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='boolean' name='value'/></method></class><class extends='org.apache.http.params.HttpAbstractParamBean' name='HttpProtocolParamBean'><constructor type='org.apache.http.params.HttpProtocolParamBean' name='HttpProtocolParamBean'><parameter type='org.apache.http.params.HttpParams' name='params'/></constructor><method name='setContentCharset'><parameter type='java.lang.String' name='contentCharset'/></method><method name='setHttpElementCharset'><parameter type='java.lang.String' name='httpElementCharset'/></method><method name='setUseExpectContinue'><parameter type='boolean' name='useExpectContinue'/></method><method name='setUserAgent'><parameter type='java.lang.String' name='userAgent'/></method><method name='setVersion'><parameter type='org.apache.http.HttpVersion' name='version'/></method></class><class extends='java.lang.Object' name='HttpProtocolParams' final='true'><method return='java.lang.String' static='true' name='getContentCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='java.lang.String' static='true' name='getHttpElementCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='java.lang.String' static='true' name='getUserAgent'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method return='org.apache.http.ProtocolVersion' static='true' name='getVersion'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method static='true' name='setContentCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.lang.String' name='charset'/></method><method static='true' name='setHttpElementCharset'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.lang.String' name='charset'/></method><method static='true' name='setUseExpectContinue'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='boolean' name='b'/></method><method static='true' name='setUserAgent'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='java.lang.String' name='useragent'/></method><method static='true' name='setVersion'><parameter type='org.apache.http.params.HttpParams' name='params'/><parameter type='org.apache.http.ProtocolVersion' name='version'/></method><method return='boolean' static='true' name='useExpectContinue'><parameter type='org.apache.http.params.HttpParams' name='params'/></method></class><interface abstract='true' name='CoreConnectionPNames'/><interface abstract='true' name='CoreProtocolPNames'/><interface abstract='true' name='HttpParams'><method return='org.apache.http.params.HttpParams' abstract='true' name='copy'/><method return='boolean' abstract='true' name='getBooleanParameter'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='defaultValue'/></method><method return='double' abstract='true' name='getDoubleParameter'><parameter type='java.lang.String' name='name'/><parameter type='double' name='defaultValue'/></method><method return='int' abstract='true' name='getIntParameter'><parameter type='java.lang.String' name='name'/><parameter type='int' name='defaultValue'/></method><method return='long' abstract='true' name='getLongParameter'><parameter type='java.lang.String' name='name'/><parameter type='long' name='defaultValue'/></method><method return='java.lang.Object' abstract='true' name='getParameter'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='isParameterFalse'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='isParameterTrue'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='removeParameter'><parameter type='java.lang.String' name='name'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='setBooleanParameter'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='setDoubleParameter'><parameter type='java.lang.String' name='name'/><parameter type='double' name='value'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='setIntParameter'><parameter type='java.lang.String' name='name'/><parameter type='int' name='value'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='setLongParameter'><parameter type='java.lang.String' name='name'/><parameter type='long' name='value'/></method><method return='org.apache.http.params.HttpParams' abstract='true' name='setParameter'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method></interface></package><package name='org.apache.http.protocol'><class extends='java.lang.Object' name='BasicHttpContext'><constructor type='org.apache.http.protocol.BasicHttpContext' name='BasicHttpContext'/><constructor type='org.apache.http.protocol.BasicHttpContext' name='BasicHttpContext'><parameter type='org.apache.http.protocol.HttpContext' name='parentContext'/></constructor><method return='java.lang.Object' name='getAttribute'><parameter type='java.lang.String' name='id'/></method><method return='java.lang.Object' name='removeAttribute'><parameter type='java.lang.String' name='id'/></method><method name='setAttribute'><parameter type='java.lang.String' name='id'/><parameter type='java.lang.Object' name='obj'/></method></class><class extends='java.lang.Object' name='BasicHttpProcessor' final='true'><constructor type='org.apache.http.protocol.BasicHttpProcessor' name='BasicHttpProcessor'/><method name='addInterceptor' final='true'><parameter type='org.apache.http.HttpRequestInterceptor' name='interceptor'/></method><method name='addInterceptor' final='true'><parameter type='org.apache.http.HttpRequestInterceptor' name='interceptor'/><parameter type='int' name='index'/></method><method name='addInterceptor' final='true'><parameter type='org.apache.http.HttpResponseInterceptor' name='interceptor'/></method><method name='addInterceptor' final='true'><parameter type='org.apache.http.HttpResponseInterceptor' name='interceptor'/><parameter type='int' name='index'/></method><method name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/></method><method name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/></method><method name='clearInterceptors'/><method name='clearRequestInterceptors'/><method name='clearResponseInterceptors'/><method return='java.lang.Object' name='clone'><exception type='java.lang.CloneNotSupportedException' name='CloneNotSupportedException'/></method><method return='org.apache.http.protocol.BasicHttpProcessor' name='copy'/><method visibility='protected' name='copyInterceptors'><parameter type='org.apache.http.protocol.BasicHttpProcessor' name='target'/></method><method return='org.apache.http.HttpRequestInterceptor' name='getRequestInterceptor'><parameter type='int' name='index'/></method><method return='int' name='getRequestInterceptorCount'/><method return='org.apache.http.HttpResponseInterceptor' name='getResponseInterceptor'><parameter type='int' name='index'/></method><method return='int' name='getResponseInterceptorCount'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='removeRequestInterceptorByClass'><parameter type='java.lang.Class' name='clazz'/></method><method name='removeResponseInterceptorByClass'><parameter type='java.lang.Class' name='clazz'/></method><method name='setInterceptors'><parameter type='java.util.List' name='list'/></method></class><class extends='java.lang.Object' name='DefaultedHttpContext' final='true'><constructor type='org.apache.http.protocol.DefaultedHttpContext' name='DefaultedHttpContext'><parameter type='org.apache.http.protocol.HttpContext' name='local'/><parameter type='org.apache.http.protocol.HttpContext' name='defaults'/></constructor><method return='java.lang.Object' name='getAttribute'><parameter type='java.lang.String' name='id'/></method><method return='org.apache.http.protocol.HttpContext' name='getDefaults'/><method return='java.lang.Object' name='removeAttribute'><parameter type='java.lang.String' name='id'/></method><method name='setAttribute'><parameter type='java.lang.String' name='id'/><parameter type='java.lang.Object' name='obj'/></method></class><class extends='java.lang.Object' name='HTTP' final='true'><method return='boolean' static='true' name='isWhitespace'><parameter type='char' name='ch'/></method></class><class extends='java.lang.Object' name='HttpDateGenerator'><constructor type='org.apache.http.protocol.HttpDateGenerator' name='HttpDateGenerator'/><method return='java.lang.String' synchronized='true' name='getCurrentDate'/></class><class extends='java.lang.Object' name='HttpRequestExecutor'><constructor type='org.apache.http.protocol.HttpRequestExecutor' name='HttpRequestExecutor'/><method visibility='protected' return='boolean' name='canResponseHaveBody'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpResponse' name='response'/></method><method visibility='protected' return='org.apache.http.HttpResponse' name='doReceiveResponse'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpClientConnection' name='conn'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method visibility='protected' return='org.apache.http.HttpResponse' name='doSendRequest'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpClientConnection' name='conn'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.HttpResponse' name='execute'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpClientConnection' name='conn'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='postProcess'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpProcessor' name='processor'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='preProcess'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpProcessor' name='processor'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='HttpRequestHandlerRegistry'><constructor type='org.apache.http.protocol.HttpRequestHandlerRegistry' name='HttpRequestHandlerRegistry'/><method return='org.apache.http.protocol.HttpRequestHandler' name='lookup'><parameter type='java.lang.String' name='requestURI'/></method><method visibility='protected' deprecated='1' return='boolean' name='matchUriRequestPattern'><parameter type='java.lang.String' name='pattern'/><parameter type='java.lang.String' name='requestUri'/></method><method name='register'><parameter type='java.lang.String' name='pattern'/><parameter type='org.apache.http.protocol.HttpRequestHandler' name='handler'/></method><method name='setHandlers'><parameter type='java.util.Map' name='map'/></method><method name='unregister'><parameter type='java.lang.String' name='pattern'/></method></class><class extends='java.lang.Object' name='HttpService'><constructor type='org.apache.http.protocol.HttpService' name='HttpService'><parameter type='org.apache.http.protocol.HttpProcessor' name='proc'/><parameter type='org.apache.http.ConnectionReuseStrategy' name='connStrategy'/><parameter type='org.apache.http.HttpResponseFactory' name='responseFactory'/></constructor><method visibility='protected' name='doService'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method return='org.apache.http.params.HttpParams' name='getParams'/><method visibility='protected' name='handleException'><parameter type='org.apache.http.HttpException' name='ex'/><parameter type='org.apache.http.HttpResponse' name='response'/></method><method name='handleRequest'><parameter type='org.apache.http.HttpServerConnection' name='conn'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method><method name='setConnReuseStrategy'><parameter type='org.apache.http.ConnectionReuseStrategy' name='connStrategy'/></method><method name='setExpectationVerifier'><parameter type='org.apache.http.protocol.HttpExpectationVerifier' name='expectationVerifier'/></method><method name='setHandlerResolver'><parameter type='org.apache.http.protocol.HttpRequestHandlerResolver' name='handlerResolver'/></method><method name='setHttpProcessor'><parameter type='org.apache.http.protocol.HttpProcessor' name='processor'/></method><method name='setParams'><parameter type='org.apache.http.params.HttpParams' name='params'/></method><method name='setResponseFactory'><parameter type='org.apache.http.HttpResponseFactory' name='responseFactory'/></method></class><class extends='java.lang.Object' name='RequestConnControl'><constructor type='org.apache.http.protocol.RequestConnControl' name='RequestConnControl'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestContent'><constructor type='org.apache.http.protocol.RequestContent' name='RequestContent'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestDate'><constructor type='org.apache.http.protocol.RequestDate' name='RequestDate'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestExpectContinue'><constructor type='org.apache.http.protocol.RequestExpectContinue' name='RequestExpectContinue'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestTargetHost'><constructor type='org.apache.http.protocol.RequestTargetHost' name='RequestTargetHost'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='RequestUserAgent'><constructor type='org.apache.http.protocol.RequestUserAgent' name='RequestUserAgent'/><method name='process'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ResponseConnControl'><constructor type='org.apache.http.protocol.ResponseConnControl' name='ResponseConnControl'/><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ResponseContent'><constructor type='org.apache.http.protocol.ResponseContent' name='ResponseContent'/><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ResponseDate'><constructor type='org.apache.http.protocol.ResponseDate' name='ResponseDate'/><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='ResponseServer'><constructor type='org.apache.http.protocol.ResponseServer' name='ResponseServer'/><method name='process'><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='org.apache.http.protocol.BasicHttpContext' name='SyncBasicHttpContext'><constructor type='org.apache.http.protocol.SyncBasicHttpContext' name='SyncBasicHttpContext'><parameter type='org.apache.http.protocol.HttpContext' name='parentContext'/></constructor></class><class extends='java.lang.Object' name='UriPatternMatcher'><constructor type='org.apache.http.protocol.UriPatternMatcher' name='UriPatternMatcher'/><method return='java.lang.Object' name='lookup'><parameter type='java.lang.String' name='requestURI'/></method><method visibility='protected' return='boolean' name='matchUriRequestPattern'><parameter type='java.lang.String' name='pattern'/><parameter type='java.lang.String' name='requestUri'/></method><method name='register'><parameter type='java.lang.String' name='pattern'/><parameter type='java.lang.Object' name='handler'/></method><method name='setHandlers'><parameter type='java.util.Map' name='map'/></method><method name='unregister'><parameter type='java.lang.String' name='pattern'/></method></class><interface abstract='true' name='ExecutionContext'/><interface abstract='true' name='HttpContext'><method return='java.lang.Object' abstract='true' name='getAttribute'><parameter type='java.lang.String' name='id'/></method><method return='java.lang.Object' abstract='true' name='removeAttribute'><parameter type='java.lang.String' name='id'/></method><method abstract='true' name='setAttribute'><parameter type='java.lang.String' name='id'/><parameter type='java.lang.Object' name='obj'/></method></interface><interface abstract='true' name='HttpExpectationVerifier'><method abstract='true' name='verify'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/></method></interface><interface abstract='true' name='HttpProcessor'/><interface abstract='true' name='HttpRequestHandler'><method abstract='true' name='handle'><parameter type='org.apache.http.HttpRequest' name='request'/><parameter type='org.apache.http.HttpResponse' name='response'/><parameter type='org.apache.http.protocol.HttpContext' name='context'/><exception type='org.apache.http.HttpException' name='HttpException'/><exception type='java.io.IOException' name='IOException'/></method></interface><interface abstract='true' name='HttpRequestHandlerResolver'><method return='org.apache.http.protocol.HttpRequestHandler' abstract='true' name='lookup'><parameter type='java.lang.String' name='requestURI'/></method></interface><interface abstract='true' name='HttpRequestInterceptorList'><method abstract='true' name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/></method><method abstract='true' name='addRequestInterceptor'><parameter type='org.apache.http.HttpRequestInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method abstract='true' name='clearRequestInterceptors'/><method return='org.apache.http.HttpRequestInterceptor' abstract='true' name='getRequestInterceptor'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getRequestInterceptorCount'/><method abstract='true' name='removeRequestInterceptorByClass'><parameter type='java.lang.Class' name='clazz'/></method><method abstract='true' name='setInterceptors'><parameter type='java.util.List' name='itcps'/></method></interface><interface abstract='true' name='HttpResponseInterceptorList'><method abstract='true' name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/></method><method abstract='true' name='addResponseInterceptor'><parameter type='org.apache.http.HttpResponseInterceptor' name='itcp'/><parameter type='int' name='index'/></method><method abstract='true' name='clearResponseInterceptors'/><method return='org.apache.http.HttpResponseInterceptor' abstract='true' name='getResponseInterceptor'><parameter type='int' name='index'/></method><method return='int' abstract='true' name='getResponseInterceptorCount'/><method abstract='true' name='removeResponseInterceptorByClass'><parameter type='java.lang.Class' name='clazz'/></method><method abstract='true' name='setInterceptors'><parameter type='java.util.List' name='itcps'/></method></interface></package><package name='org.apache.http.util'><class extends='java.lang.Object' name='ByteArrayBuffer' final='true'><constructor type='org.apache.http.util.ByteArrayBuffer' name='ByteArrayBuffer'><parameter type='int' name='capacity'/></constructor><method name='append'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='int' name='b'/></method><method name='append'><parameter type='char[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='org.apache.http.util.CharArrayBuffer' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method return='byte[]' name='buffer'/><method return='int' name='byteAt'><parameter type='int' name='i'/></method><method return='int' name='capacity'/><method name='clear'/><method return='boolean' name='isEmpty'/><method return='boolean' name='isFull'/><method return='int' name='length'/><method name='setLength'><parameter type='int' name='len'/></method><method return='byte[]' name='toByteArray'/></class><class extends='java.lang.Object' name='CharArrayBuffer' final='true'><constructor type='org.apache.http.util.CharArrayBuffer' name='CharArrayBuffer'><parameter type='int' name='capacity'/></constructor><method name='append'><parameter type='char[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='java.lang.String' name='str'/></method><method name='append'><parameter type='org.apache.http.util.CharArrayBuffer' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='org.apache.http.util.CharArrayBuffer' name='b'/></method><method name='append'><parameter type='char' name='ch'/></method><method name='append'><parameter type='byte[]' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='org.apache.http.util.ByteArrayBuffer' name='b'/><parameter type='int' name='off'/><parameter type='int' name='len'/></method><method name='append'><parameter type='java.lang.Object' name='obj'/></method><method return='char[]' name='buffer'/><method return='int' name='capacity'/><method return='char' name='charAt'><parameter type='int' name='i'/></method><method name='clear'/><method name='ensureCapacity'><parameter type='int' name='required'/></method><method return='int' name='indexOf'><parameter type='int' name='ch'/><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method return='int' name='indexOf'><parameter type='int' name='ch'/></method><method return='boolean' name='isEmpty'/><method return='boolean' name='isFull'/><method return='int' name='length'/><method name='setLength'><parameter type='int' name='len'/></method><method return='java.lang.String' name='substring'><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method return='java.lang.String' name='substringTrimmed'><parameter type='int' name='beginIndex'/><parameter type='int' name='endIndex'/></method><method return='char[]' name='toCharArray'/></class><class extends='java.lang.Object' name='EncodingUtils' final='true'><method return='byte[]' static='true' name='getAsciiBytes'><parameter type='java.lang.String' name='data'/></method><method return='java.lang.String' static='true' name='getAsciiString'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/></method><method return='java.lang.String' static='true' name='getAsciiString'><parameter type='byte[]' name='data'/></method><method return='byte[]' static='true' name='getBytes'><parameter type='java.lang.String' name='data'/><parameter type='java.lang.String' name='charset'/></method><method return='java.lang.String' static='true' name='getString'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='length'/><parameter type='java.lang.String' name='charset'/></method><method return='java.lang.String' static='true' name='getString'><parameter type='byte[]' name='data'/><parameter type='java.lang.String' name='charset'/></method></class><class extends='java.lang.Object' name='EntityUtils' final='true'><method return='java.lang.String' static='true' name='getContentCharSet'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='byte[]' static='true' name='toByteArray'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='org.apache.http.HttpEntity' name='entity'/><parameter type='java.lang.String' name='defaultCharset'/><exception type='java.io.IOException' name='IOException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method><method return='java.lang.String' static='true' name='toString'><parameter type='org.apache.http.HttpEntity' name='entity'/><exception type='java.io.IOException' name='IOException'/><exception type='org.apache.http.ParseException' name='ParseException'/></method></class><class extends='java.lang.Object' name='ExceptionUtils' final='true'><method static='true' name='initCause'><parameter type='java.lang.Throwable' name='throwable'/><parameter type='java.lang.Throwable' name='cause'/></method></class><class extends='java.lang.Object' name='LangUtils' final='true'><method return='boolean' static='true' name='equals'><parameter type='java.lang.Object' name='obj1'/><parameter type='java.lang.Object' name='obj2'/></method><method return='boolean' static='true' name='equals'><parameter type='java.lang.Object[]' name='a1'/><parameter type='java.lang.Object[]' name='a2'/></method><method return='int' static='true' name='hashCode'><parameter type='int' name='seed'/><parameter type='int' name='hashcode'/></method><method return='int' static='true' name='hashCode'><parameter type='int' name='seed'/><parameter type='boolean' name='b'/></method><method return='int' static='true' name='hashCode'><parameter type='int' name='seed'/><parameter type='java.lang.Object' name='obj'/></method></class><class extends='java.lang.Object' name='VersionInfo'><constructor visibility='protected' type='org.apache.http.util.VersionInfo' name='VersionInfo'><parameter type='java.lang.String' name='pckg'/><parameter type='java.lang.String' name='module'/><parameter type='java.lang.String' name='release'/><parameter type='java.lang.String' name='time'/><parameter type='java.lang.String' name='clsldr'/></constructor><method visibility='protected' return='org.apache.http.util.VersionInfo' static='true' name='fromMap' final='true'><parameter type='java.lang.String' name='pckg'/><parameter type='java.util.Map' name='info'/><parameter type='java.lang.ClassLoader' name='clsldr'/></method><method return='java.lang.String' name='getClassloader' final='true'/><method return='java.lang.String' name='getModule' final='true'/><method return='java.lang.String' name='getPackage' final='true'/><method return='java.lang.String' name='getRelease' final='true'/><method return='java.lang.String' name='getTimestamp' final='true'/><method return='org.apache.http.util.VersionInfo[]' static='true' name='loadVersionInfo' final='true'><parameter type='java.lang.String[]' name='pckgs'/><parameter type='java.lang.ClassLoader' name='clsldr'/></method><method return='org.apache.http.util.VersionInfo' static='true' name='loadVersionInfo' final='true'><parameter type='java.lang.String' name='pckg'/><parameter type='java.lang.ClassLoader' name='clsldr'/></method></class></package><package name='org.json'><class extends='java.lang.Object' name='JSONArray'><constructor type='org.json.JSONArray' name='JSONArray'/><constructor type='org.json.JSONArray' name='JSONArray'><parameter type='org.json.JSONTokener' name='x'/><exception type='org.json.JSONException' name='JSONException'/></constructor><constructor type='org.json.JSONArray' name='JSONArray'><parameter type='java.lang.String' name='string'/><exception type='org.json.JSONException' name='JSONException'/></constructor><constructor type='org.json.JSONArray' name='JSONArray'><parameter type='java.util.Collection' name='collection'/></constructor><method return='java.lang.Object' name='get'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='boolean' name='getBoolean'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='double' name='getDouble'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='int' name='getInt'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='getJSONArray'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='getJSONObject'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='long' name='getLong'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='getString'><parameter type='int' name='index'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='boolean' name='isNull'><parameter type='int' name='index'/></method><method return='java.lang.String' name='join'><parameter type='java.lang.String' name='separator'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='int' name='length'/><method return='java.lang.Object' name='opt'><parameter type='int' name='index'/></method><method return='boolean' name='optBoolean'><parameter type='int' name='index'/></method><method return='boolean' name='optBoolean'><parameter type='int' name='index'/><parameter type='boolean' name='defaultValue'/></method><method return='double' name='optDouble'><parameter type='int' name='index'/></method><method return='double' name='optDouble'><parameter type='int' name='index'/><parameter type='double' name='defaultValue'/></method><method return='int' name='optInt'><parameter type='int' name='index'/></method><method return='int' name='optInt'><parameter type='int' name='index'/><parameter type='int' name='defaultValue'/></method><method return='org.json.JSONArray' name='optJSONArray'><parameter type='int' name='index'/></method><method return='org.json.JSONObject' name='optJSONObject'><parameter type='int' name='index'/></method><method return='long' name='optLong'><parameter type='int' name='index'/></method><method return='long' name='optLong'><parameter type='int' name='index'/><parameter type='long' name='defaultValue'/></method><method return='java.lang.String' name='optString'><parameter type='int' name='index'/></method><method return='java.lang.String' name='optString'><parameter type='int' name='index'/><parameter type='java.lang.String' name='defaultValue'/></method><method return='org.json.JSONArray' name='put'><parameter type='boolean' name='value'/></method><method return='org.json.JSONArray' name='put'><parameter type='double' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='value'/></method><method return='org.json.JSONArray' name='put'><parameter type='long' name='value'/></method><method return='org.json.JSONArray' name='put'><parameter type='java.lang.Object' name='value'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='index'/><parameter type='boolean' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='index'/><parameter type='double' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='index'/><parameter type='int' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='index'/><parameter type='long' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='put'><parameter type='int' name='index'/><parameter type='java.lang.Object' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='toJSONObject'><parameter type='org.json.JSONArray' name='names'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='toString'><parameter type='int' name='indentFactor'/><exception type='org.json.JSONException' name='JSONException'/></method></class><class extends='java.lang.Exception' name='JSONException'><constructor type='org.json.JSONException' name='JSONException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='JSONObject'><constructor type='org.json.JSONObject' name='JSONObject'/><constructor type='org.json.JSONObject' name='JSONObject'><parameter type='org.json.JSONObject' name='jo'/><parameter type='java.lang.String[]' name='sa'/><exception type='org.json.JSONException' name='JSONException'/></constructor><constructor type='org.json.JSONObject' name='JSONObject'><parameter type='org.json.JSONTokener' name='x'/><exception type='org.json.JSONException' name='JSONException'/></constructor><constructor type='org.json.JSONObject' name='JSONObject'><parameter type='java.util.Map' name='map'/></constructor><constructor type='org.json.JSONObject' name='JSONObject'><parameter type='java.lang.String' name='string'/><exception type='org.json.JSONException' name='JSONException'/></constructor><method return='org.json.JSONObject' name='accumulate'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.Object' name='get'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='boolean' name='getBoolean'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='double' name='getDouble'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='int' name='getInt'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONArray' name='getJSONArray'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='getJSONObject'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='long' name='getLong'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='getString'><parameter type='java.lang.String' name='key'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='boolean' name='has'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='isNull'><parameter type='java.lang.String' name='key'/></method><method return='java.util.Iterator' name='keys'/><method return='int' name='length'/><method return='org.json.JSONArray' name='names'/><method return='java.lang.String' static='true' name='numberToString'><parameter type='java.lang.Number' name='n'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.Object' name='opt'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='optBoolean'><parameter type='java.lang.String' name='key'/></method><method return='boolean' name='optBoolean'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='defaultValue'/></method><method return='double' name='optDouble'><parameter type='java.lang.String' name='key'/></method><method return='double' name='optDouble'><parameter type='java.lang.String' name='key'/><parameter type='double' name='defaultValue'/></method><method return='int' name='optInt'><parameter type='java.lang.String' name='key'/></method><method return='int' name='optInt'><parameter type='java.lang.String' name='key'/><parameter type='int' name='defaultValue'/></method><method return='org.json.JSONArray' name='optJSONArray'><parameter type='java.lang.String' name='key'/></method><method return='org.json.JSONObject' name='optJSONObject'><parameter type='java.lang.String' name='key'/></method><method return='long' name='optLong'><parameter type='java.lang.String' name='key'/></method><method return='long' name='optLong'><parameter type='java.lang.String' name='key'/><parameter type='long' name='defaultValue'/></method><method return='java.lang.String' name='optString'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' name='optString'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='defaultValue'/></method><method return='org.json.JSONObject' name='put'><parameter type='java.lang.String' name='key'/><parameter type='boolean' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='put'><parameter type='java.lang.String' name='key'/><parameter type='double' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='put'><parameter type='java.lang.String' name='key'/><parameter type='int' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='put'><parameter type='java.lang.String' name='key'/><parameter type='long' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='put'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONObject' name='putOpt'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' static='true' name='quote'><parameter type='java.lang.String' name='string'/></method><method return='java.lang.Object' name='remove'><parameter type='java.lang.String' name='key'/></method><method return='org.json.JSONArray' name='toJSONArray'><parameter type='org.json.JSONArray' name='names'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='toString'><parameter type='int' name='indentFactor'/><exception type='org.json.JSONException' name='JSONException'/></method></class><class extends='java.lang.Object' name='JSONStringer'><constructor type='org.json.JSONStringer' name='JSONStringer'/><method return='org.json.JSONStringer' name='array'><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='endArray'><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='endObject'><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='key'><parameter type='java.lang.String' name='s'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='object'><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='value'><parameter type='boolean' name='b'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='value'><parameter type='double' name='d'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='value'><parameter type='long' name='l'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='org.json.JSONStringer' name='value'><parameter type='java.lang.Object' name='o'/><exception type='org.json.JSONException' name='JSONException'/></method></class><class extends='java.lang.Object' name='JSONTokener'><constructor type='org.json.JSONTokener' name='JSONTokener'><parameter type='java.lang.String' name='s'/></constructor><method name='back'/><method return='int' static='true' name='dehexchar'><parameter type='char' name='c'/></method><method return='boolean' name='more'/><method return='char' name='next'/><method return='char' name='next'><parameter type='char' name='c'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='next'><parameter type='int' name='n'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='char' name='nextClean'><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='nextString'><parameter type='char' name='quote'/><exception type='org.json.JSONException' name='JSONException'/></method><method return='java.lang.String' name='nextTo'><parameter type='char' name='d'/></method><method return='java.lang.String' name='nextTo'><parameter type='java.lang.String' name='delimiters'/></method><method return='java.lang.Object' name='nextValue'><exception type='org.json.JSONException' name='JSONException'/></method><method name='skipPast'><parameter type='java.lang.String' name='to'/></method><method return='char' name='skipTo'><parameter type='char' name='to'/></method><method return='org.json.JSONException' name='syntaxError'><parameter type='java.lang.String' name='message'/></method></class></package><package name='org.w3c.dom'><class extends='java.lang.RuntimeException' name='DOMException'><constructor type='org.w3c.dom.DOMException' name='DOMException'><parameter type='short' name='code'/><parameter type='java.lang.String' name='message'/></constructor></class><interface abstract='true' name='Attr'><method return='java.lang.String' abstract='true' name='getName'/><method return='org.w3c.dom.Element' abstract='true' name='getOwnerElement'/><method return='boolean' abstract='true' name='getSpecified'/><method return='java.lang.String' abstract='true' name='getValue'/><method abstract='true' name='setValue'><parameter type='java.lang.String' name='value'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.TypeInfo' abstract='true' name='getSchemaTypeInfo' api_added='8'/><method return='boolean' abstract='true' name='isId' api_added='8'/></interface><interface abstract='true' name='CDATASection'/><interface abstract='true' name='CharacterData'><method abstract='true' name='appendData'><parameter type='java.lang.String' name='arg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='deleteData'><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.String' abstract='true' name='getData'><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='int' abstract='true' name='getLength'/><method abstract='true' name='insertData'><parameter type='int' name='offset'/><parameter type='java.lang.String' name='arg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='replaceData'><parameter type='int' name='offset'/><parameter type='int' name='count'/><parameter type='java.lang.String' name='arg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setData'><parameter type='java.lang.String' name='data'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.String' abstract='true' name='substringData'><parameter type='int' name='offset'/><parameter type='int' name='count'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='Comment'/><interface abstract='true' name='DOMImplementation'><method return='org.w3c.dom.Document' abstract='true' name='createDocument'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='qualifiedName'/><parameter type='org.w3c.dom.DocumentType' name='doctype'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.DocumentType' abstract='true' name='createDocumentType'><parameter type='java.lang.String' name='qualifiedName'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='boolean' abstract='true' name='hasFeature'><parameter type='java.lang.String' name='feature'/><parameter type='java.lang.String' name='version'/></method><method return='java.lang.Object' abstract='true' name='getFeature' api_added='8'><parameter type='java.lang.String' name='feature'/><parameter type='java.lang.String' name='version'/></method></interface><interface abstract='true' name='Document'><method return='org.w3c.dom.Attr' abstract='true' name='createAttribute'><parameter type='java.lang.String' name='name'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Attr' abstract='true' name='createAttributeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='qualifiedName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.CDATASection' abstract='true' name='createCDATASection'><parameter type='java.lang.String' name='data'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Comment' abstract='true' name='createComment'><parameter type='java.lang.String' name='data'/></method><method return='org.w3c.dom.DocumentFragment' abstract='true' name='createDocumentFragment'/><method return='org.w3c.dom.Element' abstract='true' name='createElement'><parameter type='java.lang.String' name='tagName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Element' abstract='true' name='createElementNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='qualifiedName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.EntityReference' abstract='true' name='createEntityReference'><parameter type='java.lang.String' name='name'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.ProcessingInstruction' abstract='true' name='createProcessingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Text' abstract='true' name='createTextNode'><parameter type='java.lang.String' name='data'/></method><method return='org.w3c.dom.DocumentType' abstract='true' name='getDoctype'/><method return='org.w3c.dom.Element' abstract='true' name='getDocumentElement'/><method return='org.w3c.dom.Element' abstract='true' name='getElementById'><parameter type='java.lang.String' name='elementId'/></method><method return='org.w3c.dom.NodeList' abstract='true' name='getElementsByTagName'><parameter type='java.lang.String' name='tagname'/></method><method return='org.w3c.dom.NodeList' abstract='true' name='getElementsByTagNameNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method return='org.w3c.dom.DOMImplementation' abstract='true' name='getImplementation'/><method return='org.w3c.dom.Node' abstract='true' name='importNode'><parameter type='org.w3c.dom.Node' name='importedNode'/><parameter type='boolean' name='deep'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='adoptNode' api_added='8'><parameter type='org.w3c.dom.Node' name='source'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.String' abstract='true' name='getDocumentURI' api_added='8'/><method return='org.w3c.dom.DOMConfiguration' abstract='true' name='getDomConfig' api_added='8'/><method return='java.lang.String' abstract='true' name='getInputEncoding' api_added='8'/><method return='boolean' abstract='true' name='getStrictErrorChecking' api_added='8'/><method return='java.lang.String' abstract='true' name='getXmlEncoding' api_added='8'/><method return='boolean' abstract='true' name='getXmlStandalone' api_added='8'/><method return='java.lang.String' abstract='true' name='getXmlVersion' api_added='8'/><method abstract='true' name='normalizeDocument' api_added='8'/><method return='org.w3c.dom.Node' abstract='true' name='renameNode' api_added='8'><parameter type='org.w3c.dom.Node' name='n'/><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='qualifiedName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setDocumentURI' api_added='8'><parameter type='java.lang.String' name='documentURI'/></method><method abstract='true' name='setStrictErrorChecking' api_added='8'><parameter type='boolean' name='strictErrorChecking'/></method><method abstract='true' name='setXmlStandalone' api_added='8'><parameter type='boolean' name='xmlStandalone'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setXmlVersion' api_added='8'><parameter type='java.lang.String' name='xmlVersion'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='DocumentFragment'/><interface abstract='true' name='DocumentType'><method return='org.w3c.dom.NamedNodeMap' abstract='true' name='getEntities'/><method return='java.lang.String' abstract='true' name='getInternalSubset'/><method return='java.lang.String' abstract='true' name='getName'/><method return='org.w3c.dom.NamedNodeMap' abstract='true' name='getNotations'/><method return='java.lang.String' abstract='true' name='getPublicId'/><method return='java.lang.String' abstract='true' name='getSystemId'/></interface><interface abstract='true' name='Element'><method return='java.lang.String' abstract='true' name='getAttribute'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getAttributeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method return='org.w3c.dom.Attr' abstract='true' name='getAttributeNode'><parameter type='java.lang.String' name='name'/></method><method return='org.w3c.dom.Attr' abstract='true' name='getAttributeNodeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method return='org.w3c.dom.NodeList' abstract='true' name='getElementsByTagName'><parameter type='java.lang.String' name='name'/></method><method return='org.w3c.dom.NodeList' abstract='true' name='getElementsByTagNameNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' abstract='true' name='getTagName'/><method return='boolean' abstract='true' name='hasAttribute'><parameter type='java.lang.String' name='name'/></method><method return='boolean' abstract='true' name='hasAttributeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method abstract='true' name='removeAttribute'><parameter type='java.lang.String' name='name'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='removeAttributeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Attr' abstract='true' name='removeAttributeNode'><parameter type='org.w3c.dom.Attr' name='oldAttr'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setAttribute'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setAttributeNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='qualifiedName'/><parameter type='java.lang.String' name='value'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Attr' abstract='true' name='setAttributeNode'><parameter type='org.w3c.dom.Attr' name='newAttr'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Attr' abstract='true' name='setAttributeNodeNS'><parameter type='org.w3c.dom.Attr' name='newAttr'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.TypeInfo' abstract='true' name='getSchemaTypeInfo' api_added='8'/><method abstract='true' name='setIdAttribute' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='isId'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setIdAttributeNS' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/><parameter type='boolean' name='isId'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setIdAttributeNode' api_added='8'><parameter type='org.w3c.dom.Attr' name='idAttr'/><parameter type='boolean' name='isId'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='Entity'><method return='java.lang.String' abstract='true' name='getNotationName'/><method return='java.lang.String' abstract='true' name='getPublicId'/><method return='java.lang.String' abstract='true' name='getSystemId'/><method return='java.lang.String' abstract='true' name='getInputEncoding' api_added='8'/><method return='java.lang.String' abstract='true' name='getXmlEncoding' api_added='8'/><method return='java.lang.String' abstract='true' name='getXmlVersion' api_added='8'/></interface><interface abstract='true' name='EntityReference'/><interface abstract='true' name='NamedNodeMap'><method return='int' abstract='true' name='getLength'/><method return='org.w3c.dom.Node' abstract='true' name='getNamedItem'><parameter type='java.lang.String' name='name'/></method><method return='org.w3c.dom.Node' abstract='true' name='getNamedItemNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/></method><method return='org.w3c.dom.Node' abstract='true' name='item'><parameter type='int' name='index'/></method><method return='org.w3c.dom.Node' abstract='true' name='removeNamedItem'><parameter type='java.lang.String' name='name'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='removeNamedItemNS'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localName'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='setNamedItem'><parameter type='org.w3c.dom.Node' name='arg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='setNamedItemNS'><parameter type='org.w3c.dom.Node' name='arg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='Node'><method return='org.w3c.dom.Node' abstract='true' name='appendChild'><parameter type='org.w3c.dom.Node' name='newChild'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='cloneNode'><parameter type='boolean' name='deep'/></method><method return='org.w3c.dom.NamedNodeMap' abstract='true' name='getAttributes'/><method return='org.w3c.dom.NodeList' abstract='true' name='getChildNodes'/><method return='org.w3c.dom.Node' abstract='true' name='getFirstChild'/><method return='org.w3c.dom.Node' abstract='true' name='getLastChild'/><method return='java.lang.String' abstract='true' name='getLocalName'/><method return='java.lang.String' abstract='true' name='getNamespaceURI'/><method return='org.w3c.dom.Node' abstract='true' name='getNextSibling'/><method return='java.lang.String' abstract='true' name='getNodeName'/><method return='short' abstract='true' name='getNodeType'/><method return='java.lang.String' abstract='true' name='getNodeValue'><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Document' abstract='true' name='getOwnerDocument'/><method return='org.w3c.dom.Node' abstract='true' name='getParentNode'/><method return='java.lang.String' abstract='true' name='getPrefix'/><method return='org.w3c.dom.Node' abstract='true' name='getPreviousSibling'/><method return='boolean' abstract='true' name='hasAttributes'/><method return='boolean' abstract='true' name='hasChildNodes'/><method return='org.w3c.dom.Node' abstract='true' name='insertBefore'><parameter type='org.w3c.dom.Node' name='newChild'/><parameter type='org.w3c.dom.Node' name='refChild'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='boolean' abstract='true' name='isSupported'><parameter type='java.lang.String' name='feature'/><parameter type='java.lang.String' name='version'/></method><method abstract='true' name='normalize'/><method return='org.w3c.dom.Node' abstract='true' name='removeChild'><parameter type='org.w3c.dom.Node' name='oldChild'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.Node' abstract='true' name='replaceChild'><parameter type='org.w3c.dom.Node' name='newChild'/><parameter type='org.w3c.dom.Node' name='oldChild'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setNodeValue'><parameter type='java.lang.String' name='nodeValue'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method abstract='true' name='setPrefix'><parameter type='java.lang.String' name='prefix'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='short' abstract='true' name='compareDocumentPosition' api_added='8'><parameter type='org.w3c.dom.Node' name='other'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.String' abstract='true' name='getBaseURI' api_added='8'/><method return='java.lang.Object' abstract='true' name='getFeature' api_added='8'><parameter type='java.lang.String' name='feature'/><parameter type='java.lang.String' name='version'/></method><method return='java.lang.String' abstract='true' name='getTextContent' api_added='8'><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.Object' abstract='true' name='getUserData' api_added='8'><parameter type='java.lang.String' name='key'/></method><method return='boolean' abstract='true' name='isDefaultNamespace' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/></method><method return='boolean' abstract='true' name='isEqualNode' api_added='8'><parameter type='org.w3c.dom.Node' name='arg'/></method><method return='boolean' abstract='true' name='isSameNode' api_added='8'><parameter type='org.w3c.dom.Node' name='other'/></method><method return='java.lang.String' abstract='true' name='lookupNamespaceURI' api_added='8'><parameter type='java.lang.String' name='prefix'/></method><method return='java.lang.String' abstract='true' name='lookupPrefix' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/></method><method abstract='true' name='setTextContent' api_added='8'><parameter type='java.lang.String' name='textContent'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.Object' abstract='true' name='setUserData' api_added='8'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='data'/><parameter type='org.w3c.dom.UserDataHandler' name='handler'/></method></interface><interface abstract='true' name='NodeList'><method return='int' abstract='true' name='getLength'/><method return='org.w3c.dom.Node' abstract='true' name='item'><parameter type='int' name='index'/></method></interface><interface abstract='true' name='Notation'><method return='java.lang.String' abstract='true' name='getPublicId'/><method return='java.lang.String' abstract='true' name='getSystemId'/></interface><interface abstract='true' name='ProcessingInstruction'><method return='java.lang.String' abstract='true' name='getData'/><method return='java.lang.String' abstract='true' name='getTarget'/><method abstract='true' name='setData'><parameter type='java.lang.String' name='data'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='Text'><method return='org.w3c.dom.Text' abstract='true' name='splitText'><parameter type='int' name='offset'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='java.lang.String' abstract='true' name='getWholeText' api_added='8'/><method return='boolean' abstract='true' name='isElementContentWhitespace' api_added='8'/><method return='org.w3c.dom.Text' abstract='true' name='replaceWholeText' api_added='8'><parameter type='java.lang.String' name='content'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='DOMConfiguration' api_added='8'><method return='boolean' abstract='true' name='canSetParameter' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method return='java.lang.Object' abstract='true' name='getParameter' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.DOMStringList' abstract='true' name='getParameterNames' api_added='8'/><method abstract='true' name='setParameter' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method></interface><interface abstract='true' name='DOMError' api_added='8'><method return='org.w3c.dom.DOMLocator' abstract='true' name='getLocation' api_added='8'/><method return='java.lang.String' abstract='true' name='getMessage' api_added='8'/><method return='java.lang.Object' abstract='true' name='getRelatedData' api_added='8'/><method return='java.lang.Object' abstract='true' name='getRelatedException' api_added='8'/><method return='short' abstract='true' name='getSeverity' api_added='8'/><method return='java.lang.String' abstract='true' name='getType' api_added='8'/></interface><interface abstract='true' name='DOMErrorHandler' api_added='8'><method return='boolean' abstract='true' name='handleError' api_added='8'><parameter type='org.w3c.dom.DOMError' name='error'/></method></interface><interface abstract='true' name='DOMImplementationList' api_added='8'><method return='int' abstract='true' name='getLength' api_added='8'/><method return='org.w3c.dom.DOMImplementation' abstract='true' name='item' api_added='8'><parameter type='int' name='index'/></method></interface><interface abstract='true' name='DOMImplementationSource' api_added='8'><method return='org.w3c.dom.DOMImplementation' abstract='true' name='getDOMImplementation' api_added='8'><parameter type='java.lang.String' name='features'/></method><method return='org.w3c.dom.DOMImplementationList' abstract='true' name='getDOMImplementationList' api_added='8'><parameter type='java.lang.String' name='features'/></method></interface><interface abstract='true' name='DOMLocator' api_added='8'><method return='int' abstract='true' name='getByteOffset' api_added='8'/><method return='int' abstract='true' name='getColumnNumber' api_added='8'/><method return='int' abstract='true' name='getLineNumber' api_added='8'/><method return='org.w3c.dom.Node' abstract='true' name='getRelatedNode' api_added='8'/><method return='java.lang.String' abstract='true' name='getUri' api_added='8'/><method return='int' abstract='true' name='getUtf16Offset' api_added='8'/></interface><interface abstract='true' name='DOMStringList' api_added='8'><method return='boolean' abstract='true' name='contains' api_added='8'><parameter type='java.lang.String' name='str'/></method><method return='int' abstract='true' name='getLength' api_added='8'/><method return='java.lang.String' abstract='true' name='item' api_added='8'><parameter type='int' name='index'/></method></interface><interface abstract='true' name='NameList' api_added='8'><method return='boolean' abstract='true' name='contains' api_added='8'><parameter type='java.lang.String' name='str'/></method><method return='boolean' abstract='true' name='containsNS' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='name'/></method><method return='int' abstract='true' name='getLength' api_added='8'/><method return='java.lang.String' abstract='true' name='getName' api_added='8'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getNamespaceURI' api_added='8'><parameter type='int' name='index'/></method></interface><interface abstract='true' name='TypeInfo' api_added='8'><method return='java.lang.String' abstract='true' name='getTypeName' api_added='8'/><method return='java.lang.String' abstract='true' name='getTypeNamespace' api_added='8'/><method return='boolean' abstract='true' name='isDerivedFrom' api_added='8'><parameter type='java.lang.String' name='typeNamespaceArg'/><parameter type='java.lang.String' name='typeNameArg'/><parameter type='int' name='derivationMethod'/></method></interface><interface abstract='true' name='UserDataHandler' api_added='8'><method abstract='true' name='handle' api_added='8'><parameter type='short' name='operation'/><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='data'/><parameter type='org.w3c.dom.Node' name='src'/><parameter type='org.w3c.dom.Node' name='dst'/></method></interface></package><package name='org.xml.sax'><class extends='java.lang.Object' deprecated='1' name='HandlerBase'><constructor type='org.xml.sax.HandlerBase' name='HandlerBase'/><method name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endElement'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='error'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='fatalError'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='notationDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/></method><method name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' name='resolveEntity'><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startElement'><parameter type='java.lang.String' name='name'/><parameter type='org.xml.sax.AttributeList' name='attributes'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='unparsedEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='java.lang.String' name='notationName'/></method><method name='warning'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Object' name='InputSource'><constructor type='org.xml.sax.InputSource' name='InputSource'/><constructor type='org.xml.sax.InputSource' name='InputSource'><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='org.xml.sax.InputSource' name='InputSource'><parameter type='java.io.InputStream' name='byteStream'/></constructor><constructor type='org.xml.sax.InputSource' name='InputSource'><parameter type='java.io.Reader' name='characterStream'/></constructor><method return='java.io.InputStream' name='getByteStream'/><method return='java.io.Reader' name='getCharacterStream'/><method return='java.lang.String' name='getEncoding'/><method return='java.lang.String' name='getPublicId'/><method return='java.lang.String' name='getSystemId'/><method name='setByteStream'><parameter type='java.io.InputStream' name='byteStream'/></method><method name='setCharacterStream'><parameter type='java.io.Reader' name='characterStream'/></method><method name='setEncoding'><parameter type='java.lang.String' name='encoding'/></method><method name='setPublicId'><parameter type='java.lang.String' name='publicId'/></method><method name='setSystemId'><parameter type='java.lang.String' name='systemId'/></method></class><class extends='java.lang.Exception' name='SAXException'><constructor type='org.xml.sax.SAXException' name='SAXException'/><constructor type='org.xml.sax.SAXException' name='SAXException'><parameter type='java.lang.String' name='message'/></constructor><constructor type='org.xml.sax.SAXException' name='SAXException'><parameter type='java.lang.Exception' name='e'/></constructor><constructor type='org.xml.sax.SAXException' name='SAXException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Exception' name='e'/></constructor><method return='java.lang.Exception' name='getException'/></class><class extends='org.xml.sax.SAXException' name='SAXNotRecognizedException'><constructor type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><constructor type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.xml.sax.SAXException' name='SAXNotSupportedException'><constructor type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/><constructor type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='org.xml.sax.SAXException' name='SAXParseException'><constructor type='org.xml.sax.SAXParseException' name='SAXParseException'><parameter type='java.lang.String' name='message'/><parameter type='org.xml.sax.Locator' name='locator'/></constructor><constructor type='org.xml.sax.SAXParseException' name='SAXParseException'><parameter type='java.lang.String' name='message'/><parameter type='org.xml.sax.Locator' name='locator'/><parameter type='java.lang.Exception' name='e'/></constructor><constructor type='org.xml.sax.SAXParseException' name='SAXParseException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='int' name='lineNumber'/><parameter type='int' name='columnNumber'/></constructor><constructor type='org.xml.sax.SAXParseException' name='SAXParseException'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='int' name='lineNumber'/><parameter type='int' name='columnNumber'/><parameter type='java.lang.Exception' name='e'/></constructor><method return='int' name='getColumnNumber'/><method return='int' name='getLineNumber'/><method return='java.lang.String' name='getPublicId'/><method return='java.lang.String' name='getSystemId'/></class><interface deprecated='1' abstract='true' name='AttributeList'><method return='int' abstract='true' name='getLength'/><method return='java.lang.String' abstract='true' name='getName'><parameter type='int' name='i'/></method><method return='java.lang.String' abstract='true' name='getType'><parameter type='int' name='i'/></method><method return='java.lang.String' abstract='true' name='getType'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getValue'><parameter type='int' name='i'/></method><method return='java.lang.String' abstract='true' name='getValue'><parameter type='java.lang.String' name='name'/></method></interface><interface abstract='true' name='Attributes'><method return='int' abstract='true' name='getIndex'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='int' abstract='true' name='getIndex'><parameter type='java.lang.String' name='qName'/></method><method return='int' abstract='true' name='getLength'/><method return='java.lang.String' abstract='true' name='getLocalName'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getQName'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getType'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getType'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' abstract='true' name='getType'><parameter type='java.lang.String' name='qName'/></method><method return='java.lang.String' abstract='true' name='getURI'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getValue'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getValue'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' abstract='true' name='getValue'><parameter type='java.lang.String' name='qName'/></method></interface><interface abstract='true' name='ContentHandler'><method abstract='true' name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endPrefixMapping'><parameter type='java.lang.String' name='prefix'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method abstract='true' name='skippedEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='org.xml.sax.Attributes' name='atts'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startPrefixMapping'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='uri'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='DTDHandler'><method abstract='true' name='notationDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='unparsedEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='java.lang.String' name='notationName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface deprecated='1' abstract='true' name='DocumentHandler'><method abstract='true' name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endElement'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method abstract='true' name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startElement'><parameter type='java.lang.String' name='name'/><parameter type='org.xml.sax.AttributeList' name='atts'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='EntityResolver'><method return='org.xml.sax.InputSource' abstract='true' name='resolveEntity'><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='ErrorHandler'><method abstract='true' name='error'><parameter type='org.xml.sax.SAXParseException' name='exception'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='fatalError'><parameter type='org.xml.sax.SAXParseException' name='exception'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='warning'><parameter type='org.xml.sax.SAXParseException' name='exception'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='Locator'><method return='int' abstract='true' name='getColumnNumber'/><method return='int' abstract='true' name='getLineNumber'/><method return='java.lang.String' abstract='true' name='getPublicId'/><method return='java.lang.String' abstract='true' name='getSystemId'/></interface><interface deprecated='1' abstract='true' name='Parser'><method abstract='true' name='parse'><parameter type='org.xml.sax.InputSource' name='source'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method abstract='true' name='setDocumentHandler'><parameter type='org.xml.sax.DocumentHandler' name='handler'/></method><method abstract='true' name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method abstract='true' name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method abstract='true' name='setLocale'><parameter type='java.util.Locale' name='locale'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='XMLFilter'><method return='org.xml.sax.XMLReader' abstract='true' name='getParent'/><method abstract='true' name='setParent'><parameter type='org.xml.sax.XMLReader' name='parent'/></method></interface><interface abstract='true' name='XMLReader'><method return='org.xml.sax.ContentHandler' abstract='true' name='getContentHandler'/><method return='org.xml.sax.DTDHandler' abstract='true' name='getDTDHandler'/><method return='org.xml.sax.EntityResolver' abstract='true' name='getEntityResolver'/><method return='org.xml.sax.ErrorHandler' abstract='true' name='getErrorHandler'/><method return='boolean' abstract='true' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.Object' abstract='true' name='getProperty'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method abstract='true' name='parse'><parameter type='org.xml.sax.InputSource' name='input'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setContentHandler'><parameter type='org.xml.sax.ContentHandler' name='handler'/></method><method abstract='true' name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method abstract='true' name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method abstract='true' name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method abstract='true' name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method abstract='true' name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method></interface></package><package name='org.xml.sax.ext'><class extends='org.xml.sax.helpers.AttributesImpl' name='Attributes2Impl'><constructor type='org.xml.sax.ext.Attributes2Impl' name='Attributes2Impl'/><constructor type='org.xml.sax.ext.Attributes2Impl' name='Attributes2Impl'><parameter type='org.xml.sax.Attributes' name='atts'/></constructor><method return='boolean' name='isDeclared'><parameter type='int' name='index'/></method><method return='boolean' name='isDeclared'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='boolean' name='isDeclared'><parameter type='java.lang.String' name='qName'/></method><method return='boolean' name='isSpecified'><parameter type='int' name='index'/></method><method return='boolean' name='isSpecified'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='boolean' name='isSpecified'><parameter type='java.lang.String' name='qName'/></method><method name='setDeclared'><parameter type='int' name='index'/><parameter type='boolean' name='value'/></method><method name='setSpecified'><parameter type='int' name='index'/><parameter type='boolean' name='value'/></method></class><class extends='org.xml.sax.helpers.DefaultHandler' name='DefaultHandler2'><constructor type='org.xml.sax.ext.DefaultHandler2' name='DefaultHandler2'/><method name='attributeDecl'><parameter type='java.lang.String' name='eName'/><parameter type='java.lang.String' name='aName'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='mode'/><parameter type='java.lang.String' name='value'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='comment'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='elementDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='model'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endCDATA'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDTD'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='externalEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' name='getExternalSubset'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='baseURI'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='internalEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' name='resolveEntity'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='baseURI'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startCDATA'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startDTD'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='org.xml.sax.helpers.LocatorImpl' name='Locator2Impl'><constructor type='org.xml.sax.ext.Locator2Impl' name='Locator2Impl'/><constructor type='org.xml.sax.ext.Locator2Impl' name='Locator2Impl'><parameter type='org.xml.sax.Locator' name='locator'/></constructor><method return='java.lang.String' name='getEncoding'/><method return='java.lang.String' name='getXMLVersion'/><method name='setEncoding'><parameter type='java.lang.String' name='encoding'/></method><method name='setXMLVersion'><parameter type='java.lang.String' name='version'/></method></class><interface abstract='true' name='Attributes2'><method return='boolean' abstract='true' name='isDeclared'><parameter type='int' name='index'/></method><method return='boolean' abstract='true' name='isDeclared'><parameter type='java.lang.String' name='qName'/></method><method return='boolean' abstract='true' name='isDeclared'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='boolean' abstract='true' name='isSpecified'><parameter type='int' name='index'/></method><method return='boolean' abstract='true' name='isSpecified'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='boolean' abstract='true' name='isSpecified'><parameter type='java.lang.String' name='qName'/></method></interface><interface abstract='true' name='DeclHandler'><method abstract='true' name='attributeDecl'><parameter type='java.lang.String' name='eName'/><parameter type='java.lang.String' name='aName'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='mode'/><parameter type='java.lang.String' name='value'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='elementDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='model'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='externalEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='internalEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='EntityResolver2'><method return='org.xml.sax.InputSource' abstract='true' name='getExternalSubset'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='baseURI'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' abstract='true' name='resolveEntity'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='baseURI'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='LexicalHandler'><method abstract='true' name='comment'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endCDATA'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endDTD'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='endEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startCDATA'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startDTD'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='startEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></interface><interface abstract='true' name='Locator2'><method return='java.lang.String' abstract='true' name='getEncoding'/><method return='java.lang.String' abstract='true' name='getXMLVersion'/></interface></package><package name='org.xml.sax.helpers'><class extends='java.lang.Object' deprecated='1' name='AttributeListImpl'><constructor type='org.xml.sax.helpers.AttributeListImpl' name='AttributeListImpl'/><constructor type='org.xml.sax.helpers.AttributeListImpl' name='AttributeListImpl'><parameter type='org.xml.sax.AttributeList' name='atts'/></constructor><method name='addAttribute'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='value'/></method><method name='clear'/><method return='int' name='getLength'/><method return='java.lang.String' name='getName'><parameter type='int' name='i'/></method><method return='java.lang.String' name='getType'><parameter type='int' name='i'/></method><method return='java.lang.String' name='getType'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getValue'><parameter type='int' name='i'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='name'/></method><method name='removeAttribute'><parameter type='java.lang.String' name='name'/></method><method name='setAttributeList'><parameter type='org.xml.sax.AttributeList' name='atts'/></method></class><class extends='java.lang.Object' name='AttributesImpl'><constructor type='org.xml.sax.helpers.AttributesImpl' name='AttributesImpl'/><constructor type='org.xml.sax.helpers.AttributesImpl' name='AttributesImpl'><parameter type='org.xml.sax.Attributes' name='atts'/></constructor><method name='addAttribute'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='value'/></method><method name='clear'/><method return='int' name='getIndex'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='int' name='getIndex'><parameter type='java.lang.String' name='qName'/></method><method return='int' name='getLength'/><method return='java.lang.String' name='getLocalName'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getQName'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getType'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getType'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' name='getType'><parameter type='java.lang.String' name='qName'/></method><method return='java.lang.String' name='getURI'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getValue'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='qName'/></method><method name='removeAttribute'><parameter type='int' name='index'/></method><method name='setAttribute'><parameter type='int' name='index'/><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='value'/></method><method name='setAttributes'><parameter type='org.xml.sax.Attributes' name='atts'/></method><method name='setLocalName'><parameter type='int' name='index'/><parameter type='java.lang.String' name='localName'/></method><method name='setQName'><parameter type='int' name='index'/><parameter type='java.lang.String' name='qName'/></method><method name='setType'><parameter type='int' name='index'/><parameter type='java.lang.String' name='type'/></method><method name='setURI'><parameter type='int' name='index'/><parameter type='java.lang.String' name='uri'/></method><method name='setValue'><parameter type='int' name='index'/><parameter type='java.lang.String' name='value'/></method></class><class extends='java.lang.Object' name='DefaultHandler'><constructor type='org.xml.sax.helpers.DefaultHandler' name='DefaultHandler'/><method name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endPrefixMapping'><parameter type='java.lang.String' name='prefix'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='error'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='fatalError'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='notationDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' name='resolveEntity'><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method name='skippedEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='org.xml.sax.Attributes' name='attributes'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startPrefixMapping'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='uri'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='unparsedEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='java.lang.String' name='notationName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='warning'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Object' name='LocatorImpl'><constructor type='org.xml.sax.helpers.LocatorImpl' name='LocatorImpl'/><constructor type='org.xml.sax.helpers.LocatorImpl' name='LocatorImpl'><parameter type='org.xml.sax.Locator' name='locator'/></constructor><method return='int' name='getColumnNumber'/><method return='int' name='getLineNumber'/><method return='java.lang.String' name='getPublicId'/><method return='java.lang.String' name='getSystemId'/><method name='setColumnNumber'><parameter type='int' name='columnNumber'/></method><method name='setLineNumber'><parameter type='int' name='lineNumber'/></method><method name='setPublicId'><parameter type='java.lang.String' name='publicId'/></method><method name='setSystemId'><parameter type='java.lang.String' name='systemId'/></method></class><class extends='java.lang.Object' name='NamespaceSupport'><constructor type='org.xml.sax.helpers.NamespaceSupport' name='NamespaceSupport'/><method return='boolean' name='declarePrefix'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='uri'/></method><method return='java.util.Enumeration' name='getDeclaredPrefixes'/><method return='java.lang.String' name='getPrefix'><parameter type='java.lang.String' name='uri'/></method><method return='java.util.Enumeration' name='getPrefixes'/><method return='java.util.Enumeration' name='getPrefixes'><parameter type='java.lang.String' name='uri'/></method><method return='java.lang.String' name='getURI'><parameter type='java.lang.String' name='prefix'/></method><method return='boolean' name='isNamespaceDeclUris'/><method name='popContext'/><method return='java.lang.String[]' name='processName'><parameter type='java.lang.String' name='qName'/><parameter type='java.lang.String[]' name='parts'/><parameter type='boolean' name='isAttribute'/></method><method name='pushContext'/><method name='reset'/><method name='setNamespaceDeclUris'><parameter type='boolean' name='value'/></method></class><class extends='java.lang.Object' name='ParserAdapter'><constructor type='org.xml.sax.helpers.ParserAdapter' name='ParserAdapter'><exception type='org.xml.sax.SAXException' name='SAXException'/></constructor><constructor type='org.xml.sax.helpers.ParserAdapter' name='ParserAdapter'><parameter type='org.xml.sax.Parser' name='parser'/></constructor><method name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endElement'><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.ContentHandler' name='getContentHandler'/><method return='org.xml.sax.DTDHandler' name='getDTDHandler'/><method return='org.xml.sax.EntityResolver' name='getEntityResolver'/><method return='org.xml.sax.ErrorHandler' name='getErrorHandler'/><method return='boolean' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.Object' name='getProperty'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='input'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setContentHandler'><parameter type='org.xml.sax.ContentHandler' name='handler'/></method><method name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startElement'><parameter type='java.lang.String' name='qName'/><parameter type='org.xml.sax.AttributeList' name='qAtts'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Object' deprecated='1' name='ParserFactory'><method return='org.xml.sax.Parser' static='true' name='makeParser'><exception type='java.lang.ClassCastException' name='ClassCastException'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/><exception type='java.lang.NullPointerException' name='NullPointerException'/></method><method return='org.xml.sax.Parser' static='true' name='makeParser'><parameter type='java.lang.String' name='className'/><exception type='java.lang.ClassCastException' name='ClassCastException'/><exception type='java.lang.ClassNotFoundException' name='ClassNotFoundException'/><exception type='java.lang.IllegalAccessException' name='IllegalAccessException'/><exception type='java.lang.InstantiationException' name='InstantiationException'/></method></class><class extends='java.lang.Object' name='XMLFilterImpl'><constructor type='org.xml.sax.helpers.XMLFilterImpl' name='XMLFilterImpl'/><constructor type='org.xml.sax.helpers.XMLFilterImpl' name='XMLFilterImpl'><parameter type='org.xml.sax.XMLReader' name='parent'/></constructor><method name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endPrefixMapping'><parameter type='java.lang.String' name='prefix'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='error'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='fatalError'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.ContentHandler' name='getContentHandler'/><method return='org.xml.sax.DTDHandler' name='getDTDHandler'/><method return='org.xml.sax.EntityResolver' name='getEntityResolver'/><method return='org.xml.sax.ErrorHandler' name='getErrorHandler'/><method return='boolean' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='org.xml.sax.XMLReader' name='getParent'/><method return='java.lang.Object' name='getProperty'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='notationDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='input'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.InputSource' name='resolveEntity'><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setContentHandler'><parameter type='org.xml.sax.ContentHandler' name='handler'/></method><method name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setParent'><parameter type='org.xml.sax.XMLReader' name='parent'/></method><method name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='skippedEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='org.xml.sax.Attributes' name='atts'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startPrefixMapping'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='uri'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='unparsedEntityDecl'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='java.lang.String' name='notationName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='warning'><parameter type='org.xml.sax.SAXParseException' name='e'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Object' name='XMLReaderAdapter'><constructor type='org.xml.sax.helpers.XMLReaderAdapter' name='XMLReaderAdapter'><exception type='org.xml.sax.SAXException' name='SAXException'/></constructor><constructor type='org.xml.sax.helpers.XMLReaderAdapter' name='XMLReaderAdapter'><parameter type='org.xml.sax.XMLReader' name='xmlReader'/></constructor><method name='characters'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='endPrefixMapping'><parameter type='java.lang.String' name='prefix'/></method><method name='ignorableWhitespace'><parameter type='char[]' name='ch'/><parameter type='int' name='start'/><parameter type='int' name='length'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='input'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='processingInstruction'><parameter type='java.lang.String' name='target'/><parameter type='java.lang.String' name='data'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method name='setDocumentHandler'><parameter type='org.xml.sax.DocumentHandler' name='handler'/></method><method name='setDocumentLocator'><parameter type='org.xml.sax.Locator' name='locator'/></method><method name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method name='setLocale'><parameter type='java.util.Locale' name='locale'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='skippedEntity'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startDocument'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startElement'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><parameter type='org.xml.sax.Attributes' name='atts'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='startPrefixMapping'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='uri'/></method></class><class extends='java.lang.Object' name='XMLReaderFactory' final='true'><method return='org.xml.sax.XMLReader' static='true' name='createXMLReader'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='org.xml.sax.XMLReader' static='true' name='createXMLReader'><parameter type='java.lang.String' name='className'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class></package><package name='org.xmlpull.v1'><class extends='java.lang.Exception' name='XmlPullParserException'><constructor type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'><parameter type='java.lang.String' name='s'/></constructor><constructor type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'><parameter type='java.lang.String' name='msg'/><parameter type='org.xmlpull.v1.XmlPullParser' name='parser'/><parameter type='java.lang.Throwable' name='chain'/></constructor><method return='int' name='getColumnNumber'/><method return='java.lang.Throwable' name='getDetail'/><method return='int' name='getLineNumber'/></class><class extends='java.lang.Object' name='XmlPullParserFactory'><constructor visibility='protected' type='org.xmlpull.v1.XmlPullParserFactory' name='XmlPullParserFactory'/><method return='boolean' name='getFeature'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='isNamespaceAware'/><method return='boolean' name='isValidating'/><method return='org.xmlpull.v1.XmlPullParserFactory' static='true' name='newInstance'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='org.xmlpull.v1.XmlPullParserFactory' static='true' name='newInstance'><parameter type='java.lang.String' name='classNames'/><parameter type='java.lang.Class' name='context'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='org.xmlpull.v1.XmlPullParser' name='newPullParser'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='org.xmlpull.v1.XmlSerializer' name='newSerializer'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='state'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method name='setNamespaceAware'><parameter type='boolean' name='awareness'/></method><method name='setValidating'><parameter type='boolean' name='validating'/></method></class><interface abstract='true' name='XmlPullParser'><method abstract='true' name='defineEntityReplacementText'><parameter type='java.lang.String' name='entityName'/><parameter type='java.lang.String' name='replacementText'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='int' abstract='true' name='getAttributeCount'/><method return='java.lang.String' abstract='true' name='getAttributeName'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributeNamespace'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributePrefix'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributeType'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributeValue'><parameter type='int' name='index'/></method><method return='java.lang.String' abstract='true' name='getAttributeValue'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/></method><method return='int' abstract='true' name='getColumnNumber'/><method return='int' abstract='true' name='getDepth'/><method return='int' abstract='true' name='getEventType'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='boolean' abstract='true' name='getFeature'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getInputEncoding'/><method return='int' abstract='true' name='getLineNumber'/><method return='java.lang.String' abstract='true' name='getName'/><method return='java.lang.String' abstract='true' name='getNamespace'><parameter type='java.lang.String' name='prefix'/></method><method return='java.lang.String' abstract='true' name='getNamespace'/><method return='int' abstract='true' name='getNamespaceCount'><parameter type='int' name='depth'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='java.lang.String' abstract='true' name='getNamespacePrefix'><parameter type='int' name='pos'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='java.lang.String' abstract='true' name='getNamespaceUri'><parameter type='int' name='pos'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='java.lang.String' abstract='true' name='getPositionDescription'/><method return='java.lang.String' abstract='true' name='getPrefix'/><method return='java.lang.Object' abstract='true' name='getProperty'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getText'/><method return='char[]' abstract='true' name='getTextCharacters'><parameter type='int[]' name='holderForStartAndLength'/></method><method return='boolean' abstract='true' name='isAttributeDefault'><parameter type='int' name='index'/></method><method return='boolean' abstract='true' name='isEmptyElementTag'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='boolean' abstract='true' name='isWhitespace'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='int' abstract='true' name='next'><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='int' abstract='true' name='nextTag'><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='java.lang.String' abstract='true' name='nextText'><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method return='int' abstract='true' name='nextToken'><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='require'><parameter type='int' name='type'/><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='state'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='setInput'><parameter type='java.io.Reader' name='in'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='setInput'><parameter type='java.io.InputStream' name='inputStream'/><parameter type='java.lang.String' name='inputEncoding'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method><method abstract='true' name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></method></interface><interface abstract='true' name='XmlSerializer'><method return='org.xmlpull.v1.XmlSerializer' abstract='true' name='attribute'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='cdsect'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='comment'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='docdecl'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='endDocument'><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.xmlpull.v1.XmlSerializer' abstract='true' name='endTag'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='entityRef'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='flush'><exception type='java.io.IOException' name='IOException'/></method><method return='int' abstract='true' name='getDepth'/><method return='boolean' abstract='true' name='getFeature'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' abstract='true' name='getName'/><method return='java.lang.String' abstract='true' name='getNamespace'/><method return='java.lang.String' abstract='true' name='getPrefix'><parameter type='java.lang.String' name='namespace'/><parameter type='boolean' name='generatePrefix'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Object' abstract='true' name='getProperty'><parameter type='java.lang.String' name='name'/></method><method abstract='true' name='ignorableWhitespace'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='processingInstruction'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='state'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setOutput'><parameter type='java.io.OutputStream' name='os'/><parameter type='java.lang.String' name='encoding'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setOutput'><parameter type='java.io.Writer' name='writer'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setPrefix'><parameter type='java.lang.String' name='prefix'/><parameter type='java.lang.String' name='namespace'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method abstract='true' name='startDocument'><parameter type='java.lang.String' name='encoding'/><parameter type='java.lang.Boolean' name='standalone'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.xmlpull.v1.XmlSerializer' abstract='true' name='startTag'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='name'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.xmlpull.v1.XmlSerializer' abstract='true' name='text'><parameter type='java.lang.String' name='text'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='org.xmlpull.v1.XmlSerializer' abstract='true' name='text'><parameter type='char[]' name='buf'/><parameter type='int' name='start'/><parameter type='int' name='len'/><exception type='java.io.IOException' name='IOException'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method></interface></package><package name='org.xmlpull.v1.sax2'><class extends='java.lang.Object' name='Driver'><constructor type='org.xmlpull.v1.sax2.Driver' name='Driver'><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></constructor><constructor type='org.xmlpull.v1.sax2.Driver' name='Driver'><parameter type='org.xmlpull.v1.XmlPullParser' name='pp'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></constructor><method return='int' name='getColumnNumber'/><method return='org.xml.sax.ContentHandler' name='getContentHandler'/><method return='org.xml.sax.DTDHandler' name='getDTDHandler'/><method return='org.xml.sax.EntityResolver' name='getEntityResolver'/><method return='org.xml.sax.ErrorHandler' name='getErrorHandler'/><method return='boolean' name='getFeature'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='int' name='getIndex'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='int' name='getIndex'><parameter type='java.lang.String' name='qName'/></method><method return='int' name='getLength'/><method return='int' name='getLineNumber'/><method return='java.lang.String' name='getLocalName'><parameter type='int' name='index'/></method><method return='java.lang.Object' name='getProperty'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.String' name='getPublicId'/><method return='java.lang.String' name='getQName'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getSystemId'/><method return='java.lang.String' name='getType'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getType'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' name='getType'><parameter type='java.lang.String' name='qName'/></method><method return='java.lang.String' name='getURI'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getValue'><parameter type='int' name='index'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='localName'/></method><method return='java.lang.String' name='getValue'><parameter type='java.lang.String' name='qName'/></method><method name='parse'><parameter type='org.xml.sax.InputSource' name='source'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parse'><parameter type='java.lang.String' name='systemId'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='parseSubTree'><parameter type='org.xmlpull.v1.XmlPullParser' name='pp'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method name='setContentHandler'><parameter type='org.xml.sax.ContentHandler' name='handler'/></method><method name='setDTDHandler'><parameter type='org.xml.sax.DTDHandler' name='handler'/></method><method name='setEntityResolver'><parameter type='org.xml.sax.EntityResolver' name='resolver'/></method><method name='setErrorHandler'><parameter type='org.xml.sax.ErrorHandler' name='handler'/></method><method name='setFeature'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setProperty'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method visibility='protected' name='startElement'><parameter type='java.lang.String' name='namespace'/><parameter type='java.lang.String' name='localName'/><parameter type='java.lang.String' name='qName'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class></package><package name='android.appwidget' api_added='3'><class extends='java.lang.Object' name='AppWidgetHost' api_added='3'><constructor type='android.appwidget.AppWidgetHost' name='AppWidgetHost' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='hostId'/></constructor><method return='int' name='allocateAppWidgetId' api_added='3'/><method return='android.appwidget.AppWidgetHostView' name='createView' api_added='3' final='true'><parameter type='android.content.Context' name='context'/><parameter type='int' name='appWidgetId'/><parameter type='android.appwidget.AppWidgetProviderInfo' name='appWidget'/></method><method static='true' name='deleteAllHosts' api_added='3'/><method name='deleteAppWidgetId' api_added='3'><parameter type='int' name='appWidgetId'/></method><method name='deleteHost' api_added='3'/><method visibility='protected' return='android.appwidget.AppWidgetHostView' name='onCreateView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='appWidgetId'/><parameter type='android.appwidget.AppWidgetProviderInfo' name='appWidget'/></method><method visibility='protected' name='onProviderChanged' api_added='3'><parameter type='int' name='appWidgetId'/><parameter type='android.appwidget.AppWidgetProviderInfo' name='appWidget'/></method><method name='startListening' api_added='3'/><method name='stopListening' api_added='3'/><method visibility='protected' name='clearViews' api_added='11'/></class><class extends='android.widget.FrameLayout' name='AppWidgetHostView' api_added='3'><constructor type='android.appwidget.AppWidgetHostView' name='AppWidgetHostView' api_added='3'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.appwidget.AppWidgetHostView' name='AppWidgetHostView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='animationIn'/><parameter type='int' name='animationOut'/></constructor><method return='int' name='getAppWidgetId' api_added='3'/><method return='android.appwidget.AppWidgetProviderInfo' name='getAppWidgetInfo' api_added='3'/><method visibility='protected' return='android.view.View' name='getDefaultView' api_added='3'/><method visibility='protected' return='android.view.View' name='getErrorView' api_added='3'/><method visibility='protected' name='prepareView' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='setAppWidget' api_added='3'><parameter type='int' name='appWidgetId'/><parameter type='android.appwidget.AppWidgetProviderInfo' name='info'/></method><method name='updateAppWidget' api_added='3'><parameter type='android.widget.RemoteViews' name='remoteViews'/></method><method return='android.graphics.Rect' static='true' name='getDefaultPaddingForWidget' api_added='15'><parameter type='android.content.Context' name='arg0'/><parameter type='android.content.ComponentName' name='arg1'/><parameter type='android.graphics.Rect' name='arg2'/></method><method name='updateAppWidgetOptions' api_added='16'><parameter type='android.os.Bundle' name='arg0'/></method><method name='updateAppWidgetSize' api_added='16'><parameter type='android.os.Bundle' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='int' name='arg4'/></method></class><class extends='java.lang.Object' name='AppWidgetManager' api_added='3'><method api_removed='16' name='bindAppWidgetId' api_added='3'><parameter type='int' name='appWidgetId'/><parameter type='android.content.ComponentName' name='provider'/></method><method return='int[]' name='getAppWidgetIds' api_added='3'><parameter type='android.content.ComponentName' name='provider'/></method><method return='android.appwidget.AppWidgetProviderInfo' name='getAppWidgetInfo' api_added='3'><parameter type='int' name='appWidgetId'/></method><method return='java.util.List&lt;android.appwidget.AppWidgetProviderInfo&gt;' name='getInstalledProviders' api_added='3'/><method return='android.appwidget.AppWidgetManager' static='true' name='getInstance' api_added='3'><parameter type='android.content.Context' name='context'/></method><method name='updateAppWidget' api_added='3'><parameter type='int[]' name='appWidgetIds'/><parameter type='android.widget.RemoteViews' name='views'/></method><method name='updateAppWidget' api_added='3'><parameter type='int' name='appWidgetId'/><parameter type='android.widget.RemoteViews' name='views'/></method><method name='updateAppWidget' api_added='3'><parameter type='android.content.ComponentName' name='provider'/><parameter type='android.widget.RemoteViews' name='views'/></method><method name='notifyAppWidgetViewDataChanged' api_added='11'><parameter type='int[]' name='appWidgetIds'/><parameter type='int' name='viewId'/></method><method name='notifyAppWidgetViewDataChanged' api_added='11'><parameter type='int' name='appWidgetId'/><parameter type='int' name='viewId'/></method><method name='partiallyUpdateAppWidget' api_added='11'><parameter type='int[]' name='appWidgetIds'/><parameter type='android.widget.RemoteViews' name='views'/></method><method name='partiallyUpdateAppWidget' api_added='11'><parameter type='int' name='appWidgetId'/><parameter type='android.widget.RemoteViews' name='views'/></method><method return='boolean' name='bindAppWidgetIdIfAllowed' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.content.ComponentName' name='arg1'/></method><method return='android.os.Bundle' name='getAppWidgetOptions' api_added='16'><parameter type='int' name='arg0'/></method><method name='updateAppWidgetOptions' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method></class><class extends='android.content.BroadcastReceiver' name='AppWidgetProvider' api_added='3'><constructor type='android.appwidget.AppWidgetProvider' name='AppWidgetProvider' api_added='3'/><method name='onDeleted' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int[]' name='appWidgetIds'/></method><method name='onDisabled' api_added='3'><parameter type='android.content.Context' name='context'/></method><method name='onEnabled' api_added='3'><parameter type='android.content.Context' name='context'/></method><method name='onReceive' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onUpdate' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.appwidget.AppWidgetManager' name='appWidgetManager'/><parameter type='int[]' name='appWidgetIds'/></method><method name='onAppWidgetOptionsChanged' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='android.appwidget.AppWidgetManager' name='arg1'/><parameter type='int' name='arg2'/><parameter type='android.os.Bundle' name='arg3'/></method></class><class extends='java.lang.Object' name='AppWidgetProviderInfo' api_added='3'><constructor type='android.appwidget.AppWidgetProviderInfo' name='AppWidgetProviderInfo' api_added='3'/><constructor type='android.appwidget.AppWidgetProviderInfo' name='AppWidgetProviderInfo' api_added='3'><parameter type='android.os.Parcel' name='in'/></constructor><method return='int' name='describeContents' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class></package><package name='android.inputmethodservice' api_added='3'><class extends='android.app.Service' abstract='true' name='AbstractInputMethodService' api_added='3'><constructor type='android.inputmethodservice.AbstractInputMethodService' name='AbstractInputMethodService' api_added='3'/><method return='android.os.IBinder' name='onBind' api_added='3' final='true'><parameter type='android.content.Intent' name='intent'/></method><method return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl' abstract='true' name='onCreateInputMethodInterface' api_added='3'/><method return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl' abstract='true' name='onCreateInputMethodSessionInterface' api_added='3'/><method return='boolean' name='onTrackballEvent' api_added='3'><parameter type='android.view.MotionEvent' name='event'/></method><method return='android.view.KeyEvent.DispatcherState' name='getKeyDispatcherState' api_added='5'/></class><class extends='java.lang.Object' abstract='true' name='AbstractInputMethodService.AbstractInputMethodImpl' api_added='3'><constructor type='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl' name='AbstractInputMethodService.AbstractInputMethodImpl' api_added='3'/><method name='createSession' api_added='3'><parameter type='android.view.inputmethod.InputMethod.SessionCallback' name='callback'/></method><method name='revokeSession' api_added='3'><parameter type='android.view.inputmethod.InputMethodSession' name='session'/></method><method name='setSessionEnabled' api_added='3'><parameter type='android.view.inputmethod.InputMethodSession' name='session'/><parameter type='boolean' name='enabled'/></method></class><class extends='java.lang.Object' abstract='true' name='AbstractInputMethodService.AbstractInputMethodSessionImpl' api_added='3'><constructor type='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl' name='AbstractInputMethodService.AbstractInputMethodSessionImpl' api_added='3'/><method name='dispatchKeyEvent' api_added='3'><parameter type='int' name='seq'/><parameter type='android.view.KeyEvent' name='event'/><parameter type='android.view.inputmethod.InputMethodSession.EventCallback' name='callback'/></method><method name='dispatchTrackballEvent' api_added='3'><parameter type='int' name='seq'/><parameter type='android.view.MotionEvent' name='event'/><parameter type='android.view.inputmethod.InputMethodSession.EventCallback' name='callback'/></method><method return='boolean' name='isEnabled' api_added='3'/><method return='boolean' name='isRevoked' api_added='3'/><method name='revokeSelf' api_added='3'/><method name='setEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method></class><class extends='android.widget.EditText' name='ExtractEditText' api_added='3'><constructor type='android.inputmethodservice.ExtractEditText' name='ExtractEditText' api_added='3'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.inputmethodservice.ExtractEditText' name='ExtractEditText' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.inputmethodservice.ExtractEditText' name='ExtractEditText' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='finishInternalChanges' api_added='3'/><method return='boolean' name='hasVerticalScrollBar' api_added='3'/><method name='startInternalChanges' api_added='3'/></class><class extends='android.inputmethodservice.AbstractInputMethodService' name='InputMethodService' api_added='3'><constructor type='android.inputmethodservice.InputMethodService' name='InputMethodService' api_added='3'/><method return='int' name='getCandidatesHiddenVisibility' api_added='3'/><method return='android.view.inputmethod.InputBinding' name='getCurrentInputBinding' api_added='3'/><method return='android.view.inputmethod.InputConnection' name='getCurrentInputConnection' api_added='3'/><method return='android.view.inputmethod.EditorInfo' name='getCurrentInputEditorInfo' api_added='3'/><method return='boolean' name='getCurrentInputStarted' api_added='3'/><method return='android.view.LayoutInflater' name='getLayoutInflater' api_added='3'/><method return='int' name='getMaxWidth' api_added='3'/><method return='java.lang.CharSequence' name='getTextForImeAction' api_added='3'><parameter type='int' name='imeOptions'/></method><method return='android.app.Dialog' name='getWindow' api_added='3'/><method name='hideStatusIcon' api_added='3'/><method name='hideWindow' api_added='3'/><method return='boolean' name='isExtractViewShown' api_added='3'/><method return='boolean' name='isFullscreenMode' api_added='3'/><method return='boolean' name='isInputViewShown' api_added='3'/><method return='boolean' name='isShowInputRequested' api_added='3'/><method name='onAppPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method name='onBindInput' api_added='3'/><method name='onComputeInsets' api_added='3'><parameter type='android.inputmethodservice.InputMethodService.Insets' name='outInsets'/></method><method name='onConfigureWindow' api_added='3'><parameter type='android.view.Window' name='win'/><parameter type='boolean' name='isFullscreen'/><parameter type='boolean' name='isCandidatesOnly'/></method><method return='android.view.View' name='onCreateCandidatesView' api_added='3'/><method return='android.view.View' name='onCreateExtractTextView' api_added='3'/><method return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl' name='onCreateInputMethodInterface' api_added='3'/><method return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl' name='onCreateInputMethodSessionInterface' api_added='3'/><method return='android.view.View' name='onCreateInputView' api_added='3'/><method name='onDisplayCompletions' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo[]' name='completions'/></method><method return='boolean' name='onEvaluateFullscreenMode' api_added='3'/><method return='boolean' name='onEvaluateInputViewShown' api_added='3'/><method return='boolean' name='onExtractTextContextMenuItem' api_added='3'><parameter type='int' name='id'/></method><method name='onExtractedCursorMovement' api_added='3'><parameter type='int' name='dx'/><parameter type='int' name='dy'/></method><method name='onExtractedSelectionChanged' api_added='3'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='onExtractedTextClicked' api_added='3'/><method name='onExtractingInputChanged' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='ei'/></method><method name='onFinishCandidatesView' api_added='3'><parameter type='boolean' name='finishingInput'/></method><method name='onFinishInput' api_added='3'/><method name='onFinishInputView' api_added='3'><parameter type='boolean' name='finishingInput'/></method><method name='onInitializeInterface' api_added='3'/><method return='boolean' name='onKeyDown' api_added='3'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyMultiple' api_added='3'><parameter type='int' name='keyCode'/><parameter type='int' name='count'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onKeyUp' api_added='3'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='onShowInputRequested' api_added='3'><parameter type='int' name='flags'/><parameter type='boolean' name='configChange'/></method><method name='onStartCandidatesView' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='info'/><parameter type='boolean' name='restarting'/></method><method name='onStartInput' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='attribute'/><parameter type='boolean' name='restarting'/></method><method name='onStartInputView' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='info'/><parameter type='boolean' name='restarting'/></method><method name='onUnbindInput' api_added='3'/><method name='onUpdateCursor' api_added='3'><parameter type='android.graphics.Rect' name='newCursor'/></method><method name='onUpdateExtractedText' api_added='3'><parameter type='int' name='token'/><parameter type='android.view.inputmethod.ExtractedText' name='text'/></method><method name='onUpdateExtractingViews' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='ei'/></method><method name='onUpdateExtractingVisibility' api_added='3'><parameter type='android.view.inputmethod.EditorInfo' name='ei'/></method><method name='onUpdateSelection' api_added='3'><parameter type='int' name='oldSelStart'/><parameter type='int' name='oldSelEnd'/><parameter type='int' name='newSelStart'/><parameter type='int' name='newSelEnd'/><parameter type='int' name='candidatesStart'/><parameter type='int' name='candidatesEnd'/></method><method name='onWindowHidden' api_added='3'/><method name='onWindowShown' api_added='3'/><method name='requestHideSelf' api_added='3'><parameter type='int' name='flags'/></method><method return='boolean' name='sendDefaultEditorAction' api_added='3'><parameter type='boolean' name='fromEnterKey'/></method><method name='sendDownUpKeyEvents' api_added='3'><parameter type='int' name='keyEventCode'/></method><method name='sendKeyChar' api_added='3'><parameter type='char' name='charCode'/></method><method name='setCandidatesView' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='setCandidatesViewShown' api_added='3'><parameter type='boolean' name='shown'/></method><method name='setExtractView' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='setExtractViewShown' api_added='3'><parameter type='boolean' name='shown'/></method><method name='setInputView' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='showStatusIcon' api_added='3'><parameter type='int' name='iconResId'/></method><method name='showWindow' api_added='3'><parameter type='boolean' name='showInput'/></method><method name='switchInputMethod' api_added='3'><parameter type='java.lang.String' name='id'/></method><method name='updateFullscreenMode' api_added='3'/><method name='updateInputViewShown' api_added='3'/><method return='boolean' name='onKeyLongPress' api_added='5'><parameter type='int' name='keyCode'/><parameter type='android.view.KeyEvent' name='event'/></method><method return='int' name='getBackDisposition' api_added='11'/><method visibility='protected' name='onCurrentInputMethodSubtypeChanged' api_added='11'><parameter type='android.view.inputmethod.InputMethodSubtype' name='newSubtype'/></method><method name='setBackDisposition' api_added='11'><parameter type='int' name='disposition'/></method><method name='onViewClicked' api_added='14'><parameter type='boolean' name='arg0'/></method></class><class extends='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl' name='InputMethodService.InputMethodImpl' api_added='3'><constructor type='android.inputmethodservice.InputMethodService.InputMethodImpl' name='InputMethodService.InputMethodImpl' api_added='3'/><method name='attachToken' api_added='3'><parameter type='android.os.IBinder' name='token'/></method><method name='bindInput' api_added='3'><parameter type='android.view.inputmethod.InputBinding' name='binding'/></method><method name='hideSoftInput' api_added='3'><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method name='restartInput' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='ic'/><parameter type='android.view.inputmethod.EditorInfo' name='attribute'/></method><method name='showSoftInput' api_added='3'><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method name='startInput' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='ic'/><parameter type='android.view.inputmethod.EditorInfo' name='attribute'/></method><method name='unbindInput' api_added='3'/><method name='changeInputMethodSubtype' api_added='11'><parameter type='android.view.inputmethod.InputMethodSubtype' name='subtype'/></method></class><class extends='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl' name='InputMethodService.InputMethodSessionImpl' api_added='3'><constructor type='android.inputmethodservice.InputMethodService.InputMethodSessionImpl' name='InputMethodService.InputMethodSessionImpl' api_added='3'/><method name='appPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method name='displayCompletions' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo[]' name='completions'/></method><method name='finishInput' api_added='3'/><method name='toggleSoftInput' api_added='3'><parameter type='int' name='showFlags'/><parameter type='int' name='hideFlags'/></method><method name='updateCursor' api_added='3'><parameter type='android.graphics.Rect' name='newCursor'/></method><method name='updateExtractedText' api_added='3'><parameter type='int' name='token'/><parameter type='android.view.inputmethod.ExtractedText' name='text'/></method><method name='updateSelection' api_added='3'><parameter type='int' name='oldSelStart'/><parameter type='int' name='oldSelEnd'/><parameter type='int' name='newSelStart'/><parameter type='int' name='newSelEnd'/><parameter type='int' name='candidatesStart'/><parameter type='int' name='candidatesEnd'/></method><method name='viewClicked' api_added='14'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='InputMethodService.Insets' api_added='3' final='true'><constructor type='android.inputmethodservice.InputMethodService.Insets' name='InputMethodService.Insets' api_added='3'/></class><class extends='java.lang.Object' name='Keyboard' api_added='3'><constructor type='android.inputmethodservice.Keyboard' name='Keyboard' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='xmlLayoutResId'/></constructor><constructor type='android.inputmethodservice.Keyboard' name='Keyboard' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='xmlLayoutResId'/><parameter type='int' name='modeId'/></constructor><constructor type='android.inputmethodservice.Keyboard' name='Keyboard' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='int' name='layoutTemplateResId'/><parameter type='java.lang.CharSequence' name='characters'/><parameter type='int' name='columns'/><parameter type='int' name='horizontalPadding'/></constructor><method visibility='protected' return='android.inputmethodservice.Keyboard.Key' name='createKeyFromXml' api_added='3'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.inputmethodservice.Keyboard.Row' name='parent'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='android.content.res.XmlResourceParser' name='parser'/></method><method visibility='protected' return='android.inputmethodservice.Keyboard.Row' name='createRowFromXml' api_added='3'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.content.res.XmlResourceParser' name='parser'/></method><method return='int' name='getHeight' api_added='3'/><method visibility='protected' return='int' name='getHorizontalGap' api_added='3'/><method visibility='protected' return='int' name='getKeyHeight' api_added='3'/><method visibility='protected' return='int' name='getKeyWidth' api_added='3'/><method return='java.util.List&lt;android.inputmethodservice.Keyboard.Key&gt;' name='getKeys' api_added='3'/><method return='int' name='getMinWidth' api_added='3'/><method return='java.util.List&lt;android.inputmethodservice.Keyboard.Key&gt;' name='getModifierKeys' api_added='3'/><method return='int[]' name='getNearestKeys' api_added='3'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method return='int' name='getShiftKeyIndex' api_added='3'/><method visibility='protected' return='int' name='getVerticalGap' api_added='3'/><method return='boolean' name='isShifted' api_added='3'/><method visibility='protected' name='setHorizontalGap' api_added='3'><parameter type='int' name='gap'/></method><method visibility='protected' name='setKeyHeight' api_added='3'><parameter type='int' name='height'/></method><method visibility='protected' name='setKeyWidth' api_added='3'><parameter type='int' name='width'/></method><method return='boolean' name='setShifted' api_added='3'><parameter type='boolean' name='shiftState'/></method><method visibility='protected' name='setVerticalGap' api_added='3'><parameter type='int' name='gap'/></method></class><class extends='java.lang.Object' static='true' name='Keyboard.Key' api_added='3'><constructor type='android.inputmethodservice.Keyboard.Key' name='Keyboard.Key' api_added='3'><parameter type='android.inputmethodservice.Keyboard.Row' name='parent'/></constructor><constructor type='android.inputmethodservice.Keyboard.Key' name='Keyboard.Key' api_added='3'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.inputmethodservice.Keyboard.Row' name='parent'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='android.content.res.XmlResourceParser' name='parser'/></constructor><method return='int[]' name='getCurrentDrawableState' api_added='3'/><method return='boolean' name='isInside' api_added='3'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='onPressed' api_added='3'/><method name='onReleased' api_added='3'><parameter type='boolean' name='inside'/></method><method return='int' name='squaredDistanceFrom' api_added='3'><parameter type='int' name='x'/><parameter type='int' name='y'/></method></class><class extends='java.lang.Object' static='true' name='Keyboard.Row' api_added='3'><constructor type='android.inputmethodservice.Keyboard.Row' name='Keyboard.Row' api_added='3'><parameter type='android.inputmethodservice.Keyboard' name='parent'/></constructor><constructor type='android.inputmethodservice.Keyboard.Row' name='Keyboard.Row' api_added='3'><parameter type='android.content.res.Resources' name='res'/><parameter type='android.inputmethodservice.Keyboard' name='parent'/><parameter type='android.content.res.XmlResourceParser' name='parser'/></constructor></class><class extends='android.view.View' name='KeyboardView' api_added='3'><constructor type='android.inputmethodservice.KeyboardView' name='KeyboardView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.inputmethodservice.KeyboardView' name='KeyboardView' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='closing' api_added='3'/><method return='android.inputmethodservice.Keyboard' name='getKeyboard' api_added='3'/><method visibility='protected' return='android.inputmethodservice.KeyboardView.OnKeyboardActionListener' name='getOnKeyboardActionListener' api_added='3'/><method return='boolean' name='handleBack' api_added='3'/><method return='boolean' name='isPreviewEnabled' api_added='3'/><method return='boolean' name='isProximityCorrectionEnabled' api_added='3'/><method return='boolean' name='isShifted' api_added='3'/><method name='onClick' api_added='3'><parameter type='android.view.View' name='v'/></method><method name='onDetachedFromWindow' api_added='3'/><method name='onDraw' api_added='3'><parameter type='android.graphics.Canvas' name='canvas'/></method><method visibility='protected' return='boolean' name='onLongPress' api_added='3'><parameter type='android.inputmethodservice.Keyboard.Key' name='popupKey'/></method><method name='onMeasure' api_added='3'><parameter type='int' name='widthMeasureSpec'/><parameter type='int' name='heightMeasureSpec'/></method><method name='onSizeChanged' api_added='3'><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int' name='oldw'/><parameter type='int' name='oldh'/></method><method name='setKeyboard' api_added='3'><parameter type='android.inputmethodservice.Keyboard' name='keyboard'/></method><method name='setOnKeyboardActionListener' api_added='3'><parameter type='android.inputmethodservice.KeyboardView.OnKeyboardActionListener' name='listener'/></method><method name='setPopupOffset' api_added='3'><parameter type='int' name='x'/><parameter type='int' name='y'/></method><method name='setPopupParent' api_added='3'><parameter type='android.view.View' name='v'/></method><method name='setPreviewEnabled' api_added='3'><parameter type='boolean' name='previewEnabled'/></method><method name='setProximityCorrectionEnabled' api_added='3'><parameter type='boolean' name='enabled'/></method><method return='boolean' name='setShifted' api_added='3'><parameter type='boolean' name='shifted'/></method><method name='setVerticalCorrection' api_added='3'><parameter type='int' name='verticalOffset'/></method><method visibility='protected' name='swipeDown' api_added='3'/><method visibility='protected' name='swipeLeft' api_added='3'/><method visibility='protected' name='swipeRight' api_added='3'/><method visibility='protected' name='swipeUp' api_added='3'/><method name='invalidateAllKeys' api_added='4'/><method name='invalidateKey' api_added='4'><parameter type='int' name='keyIndex'/></method></class><interface abstract='true' static='true' name='KeyboardView.OnKeyboardActionListener' api_added='3'><method abstract='true' name='onKey' api_added='3'><parameter type='int' name='primaryCode'/><parameter type='int[]' name='keyCodes'/></method><method abstract='true' name='onPress' api_added='3'><parameter type='int' name='primaryCode'/></method><method abstract='true' name='onRelease' api_added='3'><parameter type='int' name='primaryCode'/></method><method abstract='true' name='onText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/></method><method abstract='true' name='swipeDown' api_added='3'/><method abstract='true' name='swipeLeft' api_added='3'/><method abstract='true' name='swipeRight' api_added='3'/><method abstract='true' name='swipeUp' api_added='3'/></interface></package><package name='android.speech' api_added='3'><class extends='java.lang.Object' name='RecognizerIntent' api_added='3'><method return='android.content.Intent' static='true' name='getVoiceDetailsIntent' api_added='8' final='true'><parameter type='android.content.Context' name='context'/></method></class><class extends='android.app.Service' abstract='true' name='RecognitionService' api_added='8'><constructor type='android.speech.RecognitionService' name='RecognitionService' api_added='8'/><method return='android.os.IBinder' name='onBind' api_added='8' final='true'><parameter type='android.content.Intent' name='intent'/></method><method visibility='protected' abstract='true' name='onCancel' api_added='8'><parameter type='android.speech.RecognitionService.Callback' name='listener'/></method><method visibility='protected' abstract='true' name='onStartListening' api_added='8'><parameter type='android.content.Intent' name='recognizerIntent'/><parameter type='android.speech.RecognitionService.Callback' name='listener'/></method><method visibility='protected' abstract='true' name='onStopListening' api_added='8'><parameter type='android.speech.RecognitionService.Callback' name='listener'/></method></class><class extends='java.lang.Object' name='RecognitionService.Callback' api_added='8'><method name='beginningOfSpeech' api_added='8'><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='bufferReceived' api_added='8'><parameter type='byte[]' name='buffer'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='endOfSpeech' api_added='8'><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='error' api_added='8'><parameter type='int' name='error'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='partialResults' api_added='8'><parameter type='android.os.Bundle' name='partialResults'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='readyForSpeech' api_added='8'><parameter type='android.os.Bundle' name='params'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='results' api_added='8'><parameter type='android.os.Bundle' name='results'/><exception type='android.os.RemoteException' name='RemoteException'/></method><method name='rmsChanged' api_added='8'><parameter type='float' name='rmsdB'/><exception type='android.os.RemoteException' name='RemoteException'/></method></class><class extends='java.lang.Object' name='SpeechRecognizer' api_added='8'><method name='cancel' api_added='8'/><method return='android.speech.SpeechRecognizer' static='true' name='createSpeechRecognizer' api_added='8'><parameter type='android.content.Context' name='context'/></method><method return='android.speech.SpeechRecognizer' static='true' name='createSpeechRecognizer' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.ComponentName' name='serviceComponent'/></method><method name='destroy' api_added='8'/><method return='boolean' static='true' name='isRecognitionAvailable' api_added='8'><parameter type='android.content.Context' name='context'/></method><method name='setRecognitionListener' api_added='8'><parameter type='android.speech.RecognitionListener' name='listener'/></method><method name='startListening' api_added='8'><parameter type='android.content.Intent' name='recognizerIntent'/></method><method name='stopListening' api_added='8'/></class><class extends='java.lang.Object' name='RecognizerResultsIntent' api_added='10'/><interface abstract='true' name='RecognitionListener' api_added='8'><method abstract='true' name='onBeginningOfSpeech' api_added='8'/><method abstract='true' name='onBufferReceived' api_added='8'><parameter type='byte[]' name='buffer'/></method><method abstract='true' name='onEndOfSpeech' api_added='8'/><method abstract='true' name='onError' api_added='8'><parameter type='int' name='error'/></method><method abstract='true' name='onEvent' api_added='8'><parameter type='int' name='eventType'/><parameter type='android.os.Bundle' name='params'/></method><method abstract='true' name='onPartialResults' api_added='8'><parameter type='android.os.Bundle' name='partialResults'/></method><method abstract='true' name='onReadyForSpeech' api_added='8'><parameter type='android.os.Bundle' name='params'/></method><method abstract='true' name='onResults' api_added='8'><parameter type='android.os.Bundle' name='results'/></method><method abstract='true' name='onRmsChanged' api_added='8'><parameter type='float' name='rmsdB'/></method></interface></package><package name='android.text.format' api_added='3'><class extends='java.lang.Object' name='DateFormat' api_added='3'><constructor type='android.text.format.DateFormat' name='DateFormat' api_added='3'/><method return='java.lang.CharSequence' static='true' name='format' api_added='3' final='true'><parameter type='java.lang.CharSequence' name='inFormat'/><parameter type='long' name='inTimeInMillis'/></method><method return='java.lang.CharSequence' static='true' name='format' api_added='3' final='true'><parameter type='java.lang.CharSequence' name='inFormat'/><parameter type='java.util.Date' name='inDate'/></method><method return='java.lang.CharSequence' static='true' name='format' api_added='3' final='true'><parameter type='java.lang.CharSequence' name='inFormat'/><parameter type='java.util.Calendar' name='inDate'/></method><method return='java.text.DateFormat' static='true' name='getDateFormat' api_added='3' final='true'><parameter type='android.content.Context' name='context'/></method><method return='char[]' static='true' name='getDateFormatOrder' api_added='3' final='true'><parameter type='android.content.Context' name='context'/></method><method return='java.text.DateFormat' static='true' name='getLongDateFormat' api_added='3' final='true'><parameter type='android.content.Context' name='context'/></method><method return='java.text.DateFormat' static='true' name='getMediumDateFormat' api_added='3' final='true'><parameter type='android.content.Context' name='context'/></method><method return='java.text.DateFormat' static='true' name='getTimeFormat' api_added='3' final='true'><parameter type='android.content.Context' name='context'/></method><method return='boolean' static='true' name='is24HourFormat' api_added='3'><parameter type='android.content.Context' name='context'/></method></class><class extends='java.lang.Object' name='DateUtils' api_added='3'><constructor type='android.text.format.DateUtils' name='DateUtils' api_added='3'/><method return='java.lang.String' static='true' name='formatDateRange' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='long' name='startMillis'/><parameter type='long' name='endMillis'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='formatDateTime' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='long' name='millis'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='formatElapsedTime' api_added='3'><parameter type='long' name='elapsedSeconds'/></method><method return='java.lang.String' static='true' name='formatElapsedTime' api_added='3'><parameter type='java.lang.StringBuilder' name='recycle'/><parameter type='long' name='elapsedSeconds'/></method><method return='java.lang.CharSequence' static='true' name='formatSameDayTime' api_added='3' final='true'><parameter type='long' name='then'/><parameter type='long' name='now'/><parameter type='int' name='dateStyle'/><parameter type='int' name='timeStyle'/></method><method return='java.lang.String' static='true' name='getAMPMString' api_added='3'><parameter type='int' name='ampm'/></method><method return='java.lang.String' static='true' name='getDayOfWeekString' api_added='3'><parameter type='int' name='dayOfWeek'/><parameter type='int' name='abbrev'/></method><method return='java.lang.String' static='true' name='getMonthString' api_added='3'><parameter type='int' name='month'/><parameter type='int' name='abbrev'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeDateTimeString' api_added='3'><parameter type='android.content.Context' name='c'/><parameter type='long' name='time'/><parameter type='long' name='minResolution'/><parameter type='long' name='transitionResolution'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeTimeSpanString' api_added='3'><parameter type='long' name='startTime'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeTimeSpanString' api_added='3'><parameter type='long' name='time'/><parameter type='long' name='now'/><parameter type='long' name='minResolution'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeTimeSpanString' api_added='3'><parameter type='long' name='time'/><parameter type='long' name='now'/><parameter type='long' name='minResolution'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeTimeSpanString' api_added='3'><parameter type='android.content.Context' name='c'/><parameter type='long' name='millis'/><parameter type='boolean' name='withPreposition'/></method><method return='java.lang.CharSequence' static='true' name='getRelativeTimeSpanString' api_added='3'><parameter type='android.content.Context' name='c'/><parameter type='long' name='millis'/></method><method return='boolean' static='true' name='isToday' api_added='3'><parameter type='long' name='when'/></method><method return='java.util.Formatter' static='true' name='formatDateRange' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='java.util.Formatter' name='formatter'/><parameter type='long' name='startMillis'/><parameter type='long' name='endMillis'/><parameter type='int' name='flags'/></method><method return='java.util.Formatter' static='true' name='formatDateRange' api_added='9'><parameter type='android.content.Context' name='context'/><parameter type='java.util.Formatter' name='formatter'/><parameter type='long' name='startMillis'/><parameter type='long' name='endMillis'/><parameter type='int' name='flags'/><parameter type='java.lang.String' name='timeZone'/></method></class><class extends='java.lang.Object' name='Formatter' api_added='3' final='true'><constructor type='android.text.format.Formatter' name='Formatter' api_added='3'/><method return='java.lang.String' static='true' name='formatFileSize' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='long' name='number'/></method><method deprecated='12' return='java.lang.String' static='true' name='formatIpAddress' api_added='3'><parameter type='int' name='addr'/></method><method return='java.lang.String' static='true' name='formatShortFileSize' api_added='5'><parameter type='android.content.Context' name='context'/><parameter type='long' name='number'/></method></class><class extends='java.lang.Object' name='Time' api_added='3'><constructor type='android.text.format.Time' name='Time' api_added='3'><parameter type='java.lang.String' name='timezone'/></constructor><constructor type='android.text.format.Time' name='Time' api_added='3'/><constructor type='android.text.format.Time' name='Time' api_added='3'><parameter type='android.text.format.Time' name='other'/></constructor><method return='boolean' name='after' api_added='3'><parameter type='android.text.format.Time' name='that'/></method><method return='boolean' name='before' api_added='3'><parameter type='android.text.format.Time' name='that'/></method><method name='clear' api_added='3'><parameter type='java.lang.String' name='timezone'/></method><method return='int' native='true' static='true' name='compare' api_added='3'><parameter type='android.text.format.Time' name='a'/><parameter type='android.text.format.Time' name='b'/></method><method return='java.lang.String' name='format' api_added='3'><parameter type='java.lang.String' name='format'/></method><method return='java.lang.String' native='true' name='format2445' api_added='3'/><method return='java.lang.String' name='format3339' api_added='3'><parameter type='boolean' name='allDay'/></method><method return='int' name='getActualMaximum' api_added='3'><parameter type='int' name='field'/></method><method return='java.lang.String' static='true' name='getCurrentTimezone' api_added='3'/><method return='int' static='true' name='getJulianDay' api_added='3'><parameter type='long' name='millis'/><parameter type='long' name='gmtoff'/></method><method return='int' name='getWeekNumber' api_added='3'/><method return='boolean' static='true' name='isEpoch' api_added='3'><parameter type='android.text.format.Time' name='time'/></method><method return='long' native='true' name='normalize' api_added='3'><parameter type='boolean' name='ignoreDst'/></method><method return='boolean' name='parse' api_added='3'><parameter type='java.lang.String' name='s'/></method><method return='boolean' name='parse3339' api_added='3'><parameter type='java.lang.String' name='s'/></method><method native='true' name='set' api_added='3'><parameter type='long' name='millis'/></method><method name='set' api_added='3'><parameter type='android.text.format.Time' name='that'/></method><method name='set' api_added='3'><parameter type='int' name='second'/><parameter type='int' name='minute'/><parameter type='int' name='hour'/><parameter type='int' name='monthDay'/><parameter type='int' name='month'/><parameter type='int' name='year'/></method><method name='set' api_added='3'><parameter type='int' name='monthDay'/><parameter type='int' name='month'/><parameter type='int' name='year'/></method><method return='long' name='setJulianDay' api_added='3'><parameter type='int' name='julianDay'/></method><method native='true' name='setToNow' api_added='3'/><method native='true' name='switchTimezone' api_added='3'><parameter type='java.lang.String' name='timezone'/></method><method return='long' native='true' name='toMillis' api_added='3'><parameter type='boolean' name='ignoreDst'/></method><method return='int' static='true' name='getJulianMondayFromWeeksSinceEpoch' api_added='11'><parameter type='int' name='week'/></method><method return='int' static='true' name='getWeeksSinceEpochFromJulianDay' api_added='11'><parameter type='int' name='julianDay'/><parameter type='int' name='firstDayOfWeek'/></method></class></package><package name='android.view.inputmethod' api_added='3'><class extends='java.lang.Object' name='BaseInputConnection' api_added='3'><constructor type='android.view.inputmethod.BaseInputConnection' name='BaseInputConnection' api_added='3'><parameter type='android.view.View' name='targetView'/><parameter type='boolean' name='fullEditor'/></constructor><method return='boolean' name='beginBatchEdit' api_added='3'/><method return='boolean' name='clearMetaKeyStates' api_added='3'><parameter type='int' name='states'/></method><method return='boolean' name='commitCompletion' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo' name='text'/></method><method return='boolean' name='commitText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' name='deleteSurroundingText' api_added='3'><parameter type='int' name='leftLength'/><parameter type='int' name='rightLength'/></method><method return='boolean' name='endBatchEdit' api_added='3'/><method return='boolean' name='finishComposingText' api_added='3'/><method return='int' static='true' name='getComposingSpanEnd' api_added='3'><parameter type='android.text.Spannable' name='text'/></method><method return='int' static='true' name='getComposingSpanStart' api_added='3'><parameter type='android.text.Spannable' name='text'/></method><method return='int' name='getCursorCapsMode' api_added='3'><parameter type='int' name='reqModes'/></method><method return='android.text.Editable' name='getEditable' api_added='3'/><method return='android.view.inputmethod.ExtractedText' name='getExtractedText' api_added='3'><parameter type='android.view.inputmethod.ExtractedTextRequest' name='request'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='getTextAfterCursor' api_added='3'><parameter type='int' name='length'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='getTextBeforeCursor' api_added='3'><parameter type='int' name='length'/><parameter type='int' name='flags'/></method><method return='boolean' name='performContextMenuAction' api_added='3'><parameter type='int' name='id'/></method><method return='boolean' name='performEditorAction' api_added='3'><parameter type='int' name='actionCode'/></method><method return='boolean' name='performPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method static='true' name='removeComposingSpans' api_added='3' final='true'><parameter type='android.text.Spannable' name='text'/></method><method return='boolean' name='reportFullscreenMode' api_added='3'><parameter type='boolean' name='enabled'/></method><method return='boolean' name='sendKeyEvent' api_added='3'><parameter type='android.view.KeyEvent' name='event'/></method><method static='true' name='setComposingSpans' api_added='3'><parameter type='android.text.Spannable' name='text'/></method><method return='boolean' name='setComposingText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' name='setSelection' api_added='3'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.CharSequence' name='getSelectedText' api_added='9'><parameter type='int' name='flags'/></method><method return='boolean' name='setComposingRegion' api_added='9'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='boolean' name='commitCorrection' api_added='11'><parameter type='android.view.inputmethod.CorrectionInfo' name='correctionInfo'/></method></class><class extends='java.lang.Object' name='CompletionInfo' api_added='3' final='true'><constructor type='android.view.inputmethod.CompletionInfo' name='CompletionInfo' api_added='3'><parameter type='long' name='id'/><parameter type='int' name='index'/><parameter type='java.lang.CharSequence' name='text'/></constructor><constructor type='android.view.inputmethod.CompletionInfo' name='CompletionInfo' api_added='3'><parameter type='long' name='id'/><parameter type='int' name='index'/><parameter type='java.lang.CharSequence' name='text'/><parameter type='java.lang.CharSequence' name='label'/></constructor><method return='int' name='describeContents' api_added='3'/><method return='long' name='getId' api_added='3'/><method return='java.lang.CharSequence' name='getLabel' api_added='3'/><method return='int' name='getPosition' api_added='3'/><method return='java.lang.CharSequence' name='getText' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='EditorInfo' api_added='3'><constructor type='android.view.inputmethod.EditorInfo' name='EditorInfo' api_added='3'/><method return='int' name='describeContents' api_added='3'/><method name='dump' api_added='3'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method name='makeCompatible' api_added='11' final='true'><parameter type='int' name='targetSdkVersion'/></method></class><class extends='java.lang.Object' name='ExtractedText' api_added='3'><constructor type='android.view.inputmethod.ExtractedText' name='ExtractedText' api_added='3'/><method return='int' name='describeContents' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='ExtractedTextRequest' api_added='3'><constructor type='android.view.inputmethod.ExtractedTextRequest' name='ExtractedTextRequest' api_added='3'/><method return='int' name='describeContents' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='InputBinding' api_added='3' final='true'><constructor type='android.view.inputmethod.InputBinding' name='InputBinding' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='conn'/><parameter type='android.os.IBinder' name='connToken'/><parameter type='int' name='uid'/><parameter type='int' name='pid'/></constructor><constructor type='android.view.inputmethod.InputBinding' name='InputBinding' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='conn'/><parameter type='android.view.inputmethod.InputBinding' name='binding'/></constructor><method return='int' name='describeContents' api_added='3'/><method return='android.view.inputmethod.InputConnection' name='getConnection' api_added='3'/><method return='android.os.IBinder' name='getConnectionToken' api_added='3'/><method return='int' name='getPid' api_added='3'/><method return='int' name='getUid' api_added='3'/><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='InputConnectionWrapper' api_added='3'><constructor type='android.view.inputmethod.InputConnectionWrapper' name='InputConnectionWrapper' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='target'/><parameter type='boolean' name='mutable'/></constructor><method return='boolean' name='beginBatchEdit' api_added='3'/><method return='boolean' name='clearMetaKeyStates' api_added='3'><parameter type='int' name='states'/></method><method return='boolean' name='commitCompletion' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo' name='text'/></method><method return='boolean' name='commitText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' name='deleteSurroundingText' api_added='3'><parameter type='int' name='leftLength'/><parameter type='int' name='rightLength'/></method><method return='boolean' name='endBatchEdit' api_added='3'/><method return='boolean' name='finishComposingText' api_added='3'/><method return='int' name='getCursorCapsMode' api_added='3'><parameter type='int' name='reqModes'/></method><method return='android.view.inputmethod.ExtractedText' name='getExtractedText' api_added='3'><parameter type='android.view.inputmethod.ExtractedTextRequest' name='request'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='getTextAfterCursor' api_added='3'><parameter type='int' name='n'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' name='getTextBeforeCursor' api_added='3'><parameter type='int' name='n'/><parameter type='int' name='flags'/></method><method return='boolean' name='performContextMenuAction' api_added='3'><parameter type='int' name='id'/></method><method return='boolean' name='performEditorAction' api_added='3'><parameter type='int' name='editorAction'/></method><method return='boolean' name='performPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method return='boolean' name='reportFullscreenMode' api_added='3'><parameter type='boolean' name='enabled'/></method><method return='boolean' name='sendKeyEvent' api_added='3'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' name='setComposingText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' name='setSelection' api_added='3'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method name='setTarget' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='target'/></method><method return='java.lang.CharSequence' name='getSelectedText' api_added='9'><parameter type='int' name='flags'/></method><method return='boolean' name='setComposingRegion' api_added='9'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='boolean' name='commitCorrection' api_added='11'><parameter type='android.view.inputmethod.CorrectionInfo' name='correctionInfo'/></method></class><class extends='java.lang.Object' name='InputMethodInfo' api_added='3' final='true'><constructor type='android.view.inputmethod.InputMethodInfo' name='InputMethodInfo' api_added='3'><parameter type='android.content.Context' name='context'/><parameter type='android.content.pm.ResolveInfo' name='service'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></constructor><constructor type='android.view.inputmethod.InputMethodInfo' name='InputMethodInfo' api_added='3'><parameter type='java.lang.String' name='packageName'/><parameter type='java.lang.String' name='className'/><parameter type='java.lang.CharSequence' name='label'/><parameter type='java.lang.String' name='settingsActivity'/></constructor><method return='int' name='describeContents' api_added='3'/><method name='dump' api_added='3'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.content.ComponentName' name='getComponent' api_added='3'/><method return='java.lang.String' name='getId' api_added='3'/><method return='int' name='getIsDefaultResourceId' api_added='3'/><method return='java.lang.String' name='getPackageName' api_added='3'/><method return='android.content.pm.ServiceInfo' name='getServiceInfo' api_added='3'/><method return='java.lang.String' name='getServiceName' api_added='3'/><method return='java.lang.String' name='getSettingsActivity' api_added='3'/><method return='android.graphics.drawable.Drawable' name='loadIcon' api_added='3'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel' api_added='3'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method name='writeToParcel' api_added='3'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='android.view.inputmethod.InputMethodSubtype' name='getSubtypeAt' api_added='11'><parameter type='int' name='index'/></method><method return='int' name='getSubtypeCount' api_added='11'/></class><class extends='java.lang.Object' name='InputMethodManager' api_added='3' final='true'><method name='displayCompletions' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='android.view.inputmethod.CompletionInfo[]' name='completions'/></method><method return='java.util.List&lt;android.view.inputmethod.InputMethodInfo&gt;' name='getEnabledInputMethodList' api_added='3'/><method return='java.util.List&lt;android.view.inputmethod.InputMethodInfo&gt;' name='getInputMethodList' api_added='3'/><method name='hideSoftInputFromInputMethod' api_added='3'><parameter type='android.os.IBinder' name='token'/><parameter type='int' name='flags'/></method><method return='boolean' name='hideSoftInputFromWindow' api_added='3'><parameter type='android.os.IBinder' name='windowToken'/><parameter type='int' name='flags'/></method><method return='boolean' name='hideSoftInputFromWindow' api_added='3'><parameter type='android.os.IBinder' name='windowToken'/><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method name='hideStatusIcon' api_added='3'><parameter type='android.os.IBinder' name='imeToken'/></method><method return='boolean' name='isAcceptingText' api_added='3'/><method return='boolean' name='isActive' api_added='3'><parameter type='android.view.View' name='view'/></method><method return='boolean' name='isActive' api_added='3'/><method return='boolean' name='isFullscreenMode' api_added='3'/><method return='boolean' name='isWatchingCursor' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='restartInput' api_added='3'><parameter type='android.view.View' name='view'/></method><method name='sendAppPrivateCommand' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method name='setInputMethod' api_added='3'><parameter type='android.os.IBinder' name='token'/><parameter type='java.lang.String' name='id'/></method><method name='showInputMethodPicker' api_added='3'/><method return='boolean' name='showSoftInput' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='flags'/></method><method return='boolean' name='showSoftInput' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method name='showSoftInputFromInputMethod' api_added='3'><parameter type='android.os.IBinder' name='token'/><parameter type='int' name='flags'/></method><method name='showStatusIcon' api_added='3'><parameter type='android.os.IBinder' name='imeToken'/><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='iconId'/></method><method name='toggleSoftInput' api_added='3'><parameter type='int' name='showFlags'/><parameter type='int' name='hideFlags'/></method><method name='toggleSoftInputFromWindow' api_added='3'><parameter type='android.os.IBinder' name='windowToken'/><parameter type='int' name='showFlags'/><parameter type='int' name='hideFlags'/></method><method name='updateCursor' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='left'/><parameter type='int' name='top'/><parameter type='int' name='right'/><parameter type='int' name='bottom'/></method><method name='updateExtractedText' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='token'/><parameter type='android.view.inputmethod.ExtractedText' name='text'/></method><method name='updateSelection' api_added='3'><parameter type='android.view.View' name='view'/><parameter type='int' name='selStart'/><parameter type='int' name='selEnd'/><parameter type='int' name='candidatesStart'/><parameter type='int' name='candidatesEnd'/></method><method return='android.view.inputmethod.InputMethodSubtype' name='getCurrentInputMethodSubtype' api_added='11'/><method return='java.util.List&lt;android.view.inputmethod.InputMethodSubtype&gt;' name='getEnabledInputMethodSubtypeList' api_added='11'><parameter type='android.view.inputmethod.InputMethodInfo' name='imi'/><parameter type='boolean' name='allowsImplicitlySelectedSubtypes'/></method><method return='java.util.Map&lt;android.view.inputmethod.InputMethodInfo, java.util.List&lt;android.view.inputmethod.InputMethodSubtype&gt;&gt;' name='getShortcutInputMethodsAndSubtypes' api_added='11'/><method return='boolean' name='setCurrentInputMethodSubtype' api_added='11'><parameter type='android.view.inputmethod.InputMethodSubtype' name='subtype'/></method><method name='setInputMethodAndSubtype' api_added='11'><parameter type='android.os.IBinder' name='token'/><parameter type='java.lang.String' name='id'/><parameter type='android.view.inputmethod.InputMethodSubtype' name='subtype'/></method><method name='showInputMethodAndSubtypeEnabler' api_added='11'><parameter type='java.lang.String' name='topId'/></method><method return='boolean' name='switchToLastInputMethod' api_added='11'><parameter type='android.os.IBinder' name='imeToken'/></method><method return='android.view.inputmethod.InputMethodSubtype' name='getLastInputMethodSubtype' api_added='14'/><method name='setAdditionalInputMethodSubtypes' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='android.view.inputmethod.InputMethodSubtype[]' name='arg1'/></method><method name='viewClicked' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method return='boolean' name='switchToNextInputMethod' api_added='16'><parameter type='android.os.IBinder' name='arg0'/><parameter type='boolean' name='arg1'/></method></class><class extends='java.lang.Object' name='CorrectionInfo' api_added='11' final='true'><constructor type='android.view.inputmethod.CorrectionInfo' name='CorrectionInfo' api_added='11'><parameter type='int' name='offset'/><parameter type='java.lang.CharSequence' name='oldText'/><parameter type='java.lang.CharSequence' name='newText'/></constructor><method return='int' name='describeContents' api_added='11'/><method return='java.lang.CharSequence' name='getNewText' api_added='11'/><method return='int' name='getOffset' api_added='11'/><method return='java.lang.CharSequence' name='getOldText' api_added='11'/><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='InputMethodSubtype' api_added='11' final='true'><constructor type='android.view.inputmethod.InputMethodSubtype' name='InputMethodSubtype' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.lang.String' name='arg2'/><parameter type='java.lang.String' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='boolean' name='arg5'/><parameter type='boolean' name='arg6'/></constructor><method return='int' name='describeContents' api_added='11'/><method return='java.lang.String' name='getExtraValue' api_added='11'/><method return='int' name='getIconResId' api_added='11'/><method return='java.lang.String' name='getLocale' api_added='11'/><method return='java.lang.String' name='getMode' api_added='11'/><method return='int' name='getNameResId' api_added='11'/><method name='writeToParcel' api_added='11'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='parcelableFlags'/></method><method return='boolean' name='containsExtraValueKey' api_added='12'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.String' name='getExtraValueOf' api_added='12'><parameter type='java.lang.String' name='key'/></method><method return='java.lang.CharSequence' name='getDisplayName' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='android.content.pm.ApplicationInfo' name='arg2'/></method><method return='boolean' name='isAuxiliary' api_added='14'/><method return='boolean' name='overridesImplicitlyEnabledSubtype' api_added='14'/></class><interface abstract='true' name='InputConnection' api_added='3'><method return='boolean' abstract='true' name='beginBatchEdit' api_added='3'/><method return='boolean' abstract='true' name='clearMetaKeyStates' api_added='3'><parameter type='int' name='states'/></method><method return='boolean' abstract='true' name='commitCompletion' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo' name='text'/></method><method return='boolean' abstract='true' name='commitText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' abstract='true' name='deleteSurroundingText' api_added='3'><parameter type='int' name='leftLength'/><parameter type='int' name='rightLength'/></method><method return='boolean' abstract='true' name='endBatchEdit' api_added='3'/><method return='boolean' abstract='true' name='finishComposingText' api_added='3'/><method return='int' abstract='true' name='getCursorCapsMode' api_added='3'><parameter type='int' name='reqModes'/></method><method return='android.view.inputmethod.ExtractedText' abstract='true' name='getExtractedText' api_added='3'><parameter type='android.view.inputmethod.ExtractedTextRequest' name='request'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' abstract='true' name='getTextAfterCursor' api_added='3'><parameter type='int' name='n'/><parameter type='int' name='flags'/></method><method return='java.lang.CharSequence' abstract='true' name='getTextBeforeCursor' api_added='3'><parameter type='int' name='n'/><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='performContextMenuAction' api_added='3'><parameter type='int' name='id'/></method><method return='boolean' abstract='true' name='performEditorAction' api_added='3'><parameter type='int' name='editorAction'/></method><method return='boolean' abstract='true' name='performPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method return='boolean' abstract='true' name='reportFullscreenMode' api_added='3'><parameter type='boolean' name='enabled'/></method><method return='boolean' abstract='true' name='sendKeyEvent' api_added='3'><parameter type='android.view.KeyEvent' name='event'/></method><method return='boolean' abstract='true' name='setComposingText' api_added='3'><parameter type='java.lang.CharSequence' name='text'/><parameter type='int' name='newCursorPosition'/></method><method return='boolean' abstract='true' name='setSelection' api_added='3'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='java.lang.CharSequence' abstract='true' name='getSelectedText' api_added='9'><parameter type='int' name='flags'/></method><method return='boolean' abstract='true' name='setComposingRegion' api_added='9'><parameter type='int' name='start'/><parameter type='int' name='end'/></method><method return='boolean' abstract='true' name='commitCorrection' api_added='11'><parameter type='android.view.inputmethod.CorrectionInfo' name='correctionInfo'/></method></interface><interface abstract='true' name='InputMethod' api_added='3'><method abstract='true' name='attachToken' api_added='3'><parameter type='android.os.IBinder' name='token'/></method><method abstract='true' name='bindInput' api_added='3'><parameter type='android.view.inputmethod.InputBinding' name='binding'/></method><method abstract='true' name='createSession' api_added='3'><parameter type='android.view.inputmethod.InputMethod.SessionCallback' name='callback'/></method><method abstract='true' name='hideSoftInput' api_added='3'><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method abstract='true' name='restartInput' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='inputConnection'/><parameter type='android.view.inputmethod.EditorInfo' name='attribute'/></method><method abstract='true' name='revokeSession' api_added='3'><parameter type='android.view.inputmethod.InputMethodSession' name='session'/></method><method abstract='true' name='setSessionEnabled' api_added='3'><parameter type='android.view.inputmethod.InputMethodSession' name='session'/><parameter type='boolean' name='enabled'/></method><method abstract='true' name='showSoftInput' api_added='3'><parameter type='int' name='flags'/><parameter type='android.os.ResultReceiver' name='resultReceiver'/></method><method abstract='true' name='startInput' api_added='3'><parameter type='android.view.inputmethod.InputConnection' name='inputConnection'/><parameter type='android.view.inputmethod.EditorInfo' name='info'/></method><method abstract='true' name='unbindInput' api_added='3'/><method abstract='true' name='changeInputMethodSubtype' api_added='11'><parameter type='android.view.inputmethod.InputMethodSubtype' name='subtype'/></method></interface><interface abstract='true' static='true' name='InputMethod.SessionCallback' api_added='3'><method abstract='true' name='sessionCreated' api_added='3'><parameter type='android.view.inputmethod.InputMethodSession' name='session'/></method></interface><interface abstract='true' name='InputMethodSession' api_added='3'><method abstract='true' name='appPrivateCommand' api_added='3'><parameter type='java.lang.String' name='action'/><parameter type='android.os.Bundle' name='data'/></method><method abstract='true' name='dispatchKeyEvent' api_added='3'><parameter type='int' name='seq'/><parameter type='android.view.KeyEvent' name='event'/><parameter type='android.view.inputmethod.InputMethodSession.EventCallback' name='callback'/></method><method abstract='true' name='dispatchTrackballEvent' api_added='3'><parameter type='int' name='seq'/><parameter type='android.view.MotionEvent' name='event'/><parameter type='android.view.inputmethod.InputMethodSession.EventCallback' name='callback'/></method><method abstract='true' name='displayCompletions' api_added='3'><parameter type='android.view.inputmethod.CompletionInfo[]' name='completions'/></method><method abstract='true' name='finishInput' api_added='3'/><method abstract='true' name='toggleSoftInput' api_added='3'><parameter type='int' name='showFlags'/><parameter type='int' name='hideFlags'/></method><method abstract='true' name='updateCursor' api_added='3'><parameter type='android.graphics.Rect' name='newCursor'/></method><method abstract='true' name='updateExtractedText' api_added='3'><parameter type='int' name='token'/><parameter type='android.view.inputmethod.ExtractedText' name='text'/></method><method abstract='true' name='updateSelection' api_added='3'><parameter type='int' name='oldSelStart'/><parameter type='int' name='oldSelEnd'/><parameter type='int' name='newSelStart'/><parameter type='int' name='newSelEnd'/><parameter type='int' name='candidatesStart'/><parameter type='int' name='candidatesEnd'/></method><method abstract='true' name='viewClicked' api_added='14'><parameter type='boolean' name='arg0'/></method></interface><interface abstract='true' static='true' name='InputMethodSession.EventCallback' api_added='3'><method abstract='true' name='finishedEvent' api_added='3'><parameter type='int' name='seq'/><parameter type='boolean' name='handled'/></method></interface></package><package name='java.beans' api_added='3'><class extends='java.beans.PropertyChangeEvent' name='IndexedPropertyChangeEvent' api_added='3'><constructor type='java.beans.IndexedPropertyChangeEvent' name='IndexedPropertyChangeEvent' api_added='3'><parameter type='java.lang.Object' name='source'/><parameter type='java.lang.String' name='propertyName'/><parameter type='java.lang.Object' name='oldValue'/><parameter type='java.lang.Object' name='newValue'/><parameter type='int' name='index'/></constructor><method return='int' name='getIndex' api_added='3'/></class><class extends='java.util.EventObject' name='PropertyChangeEvent' api_added='3'><constructor type='java.beans.PropertyChangeEvent' name='PropertyChangeEvent' api_added='3'><parameter type='java.lang.Object' name='source'/><parameter type='java.lang.String' name='propertyName'/><parameter type='java.lang.Object' name='oldValue'/><parameter type='java.lang.Object' name='newValue'/></constructor><method return='java.lang.Object' name='getNewValue' api_added='3'/><method return='java.lang.Object' name='getOldValue' api_added='3'/><method return='java.lang.Object' name='getPropagationId' api_added='3'/><method return='java.lang.String' name='getPropertyName' api_added='3'/><method name='setPropagationId' api_added='3'><parameter type='java.lang.Object' name='propagationId'/></method></class><class extends='java.util.EventListenerProxy' name='PropertyChangeListenerProxy' api_added='3'><constructor type='java.beans.PropertyChangeListenerProxy' name='PropertyChangeListenerProxy' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='java.beans.PropertyChangeListener' name='listener'/></constructor><method return='java.lang.String' name='getPropertyName' api_added='3'/><method name='propertyChange' api_added='3'><parameter type='java.beans.PropertyChangeEvent' name='event'/></method></class><class extends='java.lang.Object' name='PropertyChangeSupport' api_added='3'><constructor type='java.beans.PropertyChangeSupport' name='PropertyChangeSupport' api_added='3'><parameter type='java.lang.Object' name='sourceBean'/></constructor><method synchronized='true' name='addPropertyChangeListener' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='java.beans.PropertyChangeListener' name='listener'/></method><method synchronized='true' name='addPropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method><method name='fireIndexedPropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='int' name='index'/><parameter type='java.lang.Object' name='oldValue'/><parameter type='java.lang.Object' name='newValue'/></method><method name='fireIndexedPropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='int' name='index'/><parameter type='boolean' name='oldValue'/><parameter type='boolean' name='newValue'/></method><method name='fireIndexedPropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='int' name='index'/><parameter type='int' name='oldValue'/><parameter type='int' name='newValue'/></method><method name='firePropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='java.lang.Object' name='oldValue'/><parameter type='java.lang.Object' name='newValue'/></method><method name='firePropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='boolean' name='oldValue'/><parameter type='boolean' name='newValue'/></method><method name='firePropertyChange' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='int' name='oldValue'/><parameter type='int' name='newValue'/></method><method name='firePropertyChange' api_added='3'><parameter type='java.beans.PropertyChangeEvent' name='event'/></method><method return='java.beans.PropertyChangeListener[]' synchronized='true' name='getPropertyChangeListeners' api_added='3'><parameter type='java.lang.String' name='propertyName'/></method><method return='java.beans.PropertyChangeListener[]' synchronized='true' name='getPropertyChangeListeners' api_added='3'/><method return='boolean' synchronized='true' name='hasListeners' api_added='3'><parameter type='java.lang.String' name='propertyName'/></method><method synchronized='true' name='removePropertyChangeListener' api_added='3'><parameter type='java.lang.String' name='propertyName'/><parameter type='java.beans.PropertyChangeListener' name='listener'/></method><method synchronized='true' name='removePropertyChangeListener' api_added='3'><parameter type='java.beans.PropertyChangeListener' name='listener'/></method></class><interface abstract='true' name='PropertyChangeListener' api_added='3'><method abstract='true' name='propertyChange' api_added='3'><parameter type='java.beans.PropertyChangeEvent' name='event'/></method></interface></package><package name='android.accessibilityservice' api_added='4'><class extends='android.app.Service' abstract='true' name='AccessibilityService' api_added='4'><constructor type='android.accessibilityservice.AccessibilityService' name='AccessibilityService' api_added='4'/><method abstract='true' name='onAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method return='android.os.IBinder' name='onBind' api_added='4' final='true'><parameter type='android.content.Intent' name='intent'/></method><method abstract='true' name='onInterrupt' api_added='4'/><method visibility='protected' name='onServiceConnected' api_added='4'/><method name='setServiceInfo' api_added='4' final='true'><parameter type='android.accessibilityservice.AccessibilityServiceInfo' name='info'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' name='getRootInActiveWindow' api_added='16'/><method return='android.accessibilityservice.AccessibilityServiceInfo' name='getServiceInfo' api_added='16' final='true'/><method visibility='protected' return='boolean' name='onGesture' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' name='performGlobalAction' api_added='16' final='true'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='AccessibilityServiceInfo' api_added='4'><constructor type='android.accessibilityservice.AccessibilityServiceInfo' name='AccessibilityServiceInfo' api_added='4'/><method return='int' name='describeContents' api_added='4'/><method name='writeToParcel' api_added='4'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method return='java.lang.String' static='true' name='feedbackTypeToString' api_added='14'><parameter type='int' name='arg0'/></method><method return='java.lang.String' static='true' name='flagToString' api_added='14'><parameter type='int' name='arg0'/></method><method return='boolean' name='getCanRetrieveWindowContent' api_added='14'/><method deprecated='16' return='java.lang.String' name='getDescription' api_added='14'/><method return='java.lang.String' name='getId' api_added='14'/><method return='android.content.pm.ResolveInfo' name='getResolveInfo' api_added='14'/><method return='java.lang.String' name='getSettingsActivityName' api_added='14'/><method return='java.lang.String' name='loadDescription' api_added='16'><parameter type='android.content.pm.PackageManager' name='arg0'/></method></class></package><package name='android.gesture' api_added='4'><class extends='java.lang.Object' name='Gesture' api_added='4'><constructor type='android.gesture.Gesture' name='Gesture' api_added='4'/><method name='addStroke' api_added='4'><parameter type='android.gesture.GestureStroke' name='stroke'/></method><method return='int' name='describeContents' api_added='4'/><method return='android.graphics.RectF' name='getBoundingBox' api_added='4'/><method return='long' name='getID' api_added='4'/><method return='float' name='getLength' api_added='4'/><method return='java.util.ArrayList&lt;android.gesture.GestureStroke&gt;' name='getStrokes' api_added='4'/><method return='int' name='getStrokesCount' api_added='4'/><method return='android.graphics.Bitmap' name='toBitmap' api_added='4'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='edge'/><parameter type='int' name='numSample'/><parameter type='int' name='color'/></method><method return='android.graphics.Bitmap' name='toBitmap' api_added='4'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='inset'/><parameter type='int' name='color'/></method><method return='android.graphics.Path' name='toPath' api_added='4'/><method return='android.graphics.Path' name='toPath' api_added='4'><parameter type='android.graphics.Path' name='path'/></method><method return='android.graphics.Path' name='toPath' api_added='4'><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='edge'/><parameter type='int' name='numSample'/></method><method return='android.graphics.Path' name='toPath' api_added='4'><parameter type='android.graphics.Path' name='path'/><parameter type='int' name='width'/><parameter type='int' name='height'/><parameter type='int' name='edge'/><parameter type='int' name='numSample'/></method><method name='writeToParcel' api_added='4'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='java.lang.Object' name='clone' api_added='8'/></class><class extends='java.lang.Object' name='GestureLibraries' api_added='4' final='true'><method return='android.gesture.GestureLibrary' static='true' name='fromFile' api_added='4'><parameter type='java.lang.String' name='path'/></method><method return='android.gesture.GestureLibrary' static='true' name='fromFile' api_added='4'><parameter type='java.io.File' name='path'/></method><method return='android.gesture.GestureLibrary' static='true' name='fromPrivateFile' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String' name='name'/></method><method return='android.gesture.GestureLibrary' static='true' name='fromRawResource' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='int' name='resourceId'/></method></class><class extends='java.lang.Object' abstract='true' name='GestureLibrary' api_added='4'><constructor visibility='protected' type='android.gesture.GestureLibrary' name='GestureLibrary' api_added='4'/><method name='addGesture' api_added='4'><parameter type='java.lang.String' name='entryName'/><parameter type='android.gesture.Gesture' name='gesture'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='getGestureEntries' api_added='4'/><method return='java.util.ArrayList&lt;android.gesture.Gesture&gt;' name='getGestures' api_added='4'><parameter type='java.lang.String' name='entryName'/></method><method return='int' name='getOrientationStyle' api_added='4'/><method return='int' name='getSequenceType' api_added='4'/><method return='boolean' name='isReadOnly' api_added='4'/><method return='boolean' abstract='true' name='load' api_added='4'/><method return='java.util.ArrayList&lt;android.gesture.Prediction&gt;' name='recognize' api_added='4'><parameter type='android.gesture.Gesture' name='gesture'/></method><method name='removeEntry' api_added='4'><parameter type='java.lang.String' name='entryName'/></method><method name='removeGesture' api_added='4'><parameter type='java.lang.String' name='entryName'/><parameter type='android.gesture.Gesture' name='gesture'/></method><method return='boolean' abstract='true' name='save' api_added='4'/><method name='setOrientationStyle' api_added='4'><parameter type='int' name='style'/></method><method name='setSequenceType' api_added='4'><parameter type='int' name='type'/></method></class><class extends='android.widget.FrameLayout' name='GestureOverlayView' api_added='4'><constructor type='android.gesture.GestureOverlayView' name='GestureOverlayView' api_added='4'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.gesture.GestureOverlayView' name='GestureOverlayView' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.gesture.GestureOverlayView' name='GestureOverlayView' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/><parameter type='int' name='defStyle'/></constructor><method name='addOnGestureListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGestureListener' name='listener'/></method><method name='addOnGesturePerformedListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGesturePerformedListener' name='listener'/></method><method name='addOnGesturingListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGesturingListener' name='listener'/></method><method name='cancelClearAnimation' api_added='4'/><method name='cancelGesture' api_added='4'/><method name='clear' api_added='4'><parameter type='boolean' name='animated'/></method><method return='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;' name='getCurrentStroke' api_added='4'/><method return='long' name='getFadeOffset' api_added='4'/><method return='android.gesture.Gesture' name='getGesture' api_added='4'/><method return='int' name='getGestureColor' api_added='4'/><method return='android.graphics.Path' name='getGesturePath' api_added='4'/><method return='android.graphics.Path' name='getGesturePath' api_added='4'><parameter type='android.graphics.Path' name='path'/></method><method return='float' name='getGestureStrokeAngleThreshold' api_added='4'/><method return='float' name='getGestureStrokeLengthThreshold' api_added='4'/><method return='float' name='getGestureStrokeSquarenessTreshold' api_added='4'/><method return='int' name='getGestureStrokeType' api_added='4'/><method return='float' name='getGestureStrokeWidth' api_added='4'/><method return='int' name='getOrientation' api_added='4'/><method return='int' name='getUncertainGestureColor' api_added='4'/><method return='boolean' name='isEventsInterceptionEnabled' api_added='4'/><method return='boolean' name='isFadeEnabled' api_added='4'/><method return='boolean' name='isGestureVisible' api_added='4'/><method return='boolean' name='isGesturing' api_added='4'/><method name='removeAllOnGestureListeners' api_added='4'/><method name='removeAllOnGesturePerformedListeners' api_added='4'/><method name='removeAllOnGesturingListeners' api_added='4'/><method name='removeOnGestureListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGestureListener' name='listener'/></method><method name='removeOnGesturePerformedListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGesturePerformedListener' name='listener'/></method><method name='removeOnGesturingListener' api_added='4'><parameter type='android.gesture.GestureOverlayView.OnGesturingListener' name='listener'/></method><method name='setEventsInterceptionEnabled' api_added='4'><parameter type='boolean' name='enabled'/></method><method name='setFadeEnabled' api_added='4'><parameter type='boolean' name='fadeEnabled'/></method><method name='setFadeOffset' api_added='4'><parameter type='long' name='fadeOffset'/></method><method name='setGesture' api_added='4'><parameter type='android.gesture.Gesture' name='gesture'/></method><method name='setGestureColor' api_added='4'><parameter type='int' name='color'/></method><method name='setGestureStrokeAngleThreshold' api_added='4'><parameter type='float' name='gestureStrokeAngleThreshold'/></method><method name='setGestureStrokeLengthThreshold' api_added='4'><parameter type='float' name='gestureStrokeLengthThreshold'/></method><method name='setGestureStrokeSquarenessTreshold' api_added='4'><parameter type='float' name='gestureStrokeSquarenessTreshold'/></method><method name='setGestureStrokeType' api_added='4'><parameter type='int' name='gestureStrokeType'/></method><method name='setGestureStrokeWidth' api_added='4'><parameter type='float' name='gestureStrokeWidth'/></method><method name='setGestureVisible' api_added='4'><parameter type='boolean' name='visible'/></method><method name='setOrientation' api_added='4'><parameter type='int' name='orientation'/></method><method name='setUncertainGestureColor' api_added='4'><parameter type='int' name='color'/></method></class><class extends='java.lang.Object' name='GesturePoint' api_added='4'><constructor type='android.gesture.GesturePoint' name='GesturePoint' api_added='4'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='long' name='t'/></constructor><method return='java.lang.Object' name='clone' api_added='8'/></class><class extends='java.lang.Object' name='GestureStore' api_added='4'><constructor type='android.gesture.GestureStore' name='GestureStore' api_added='4'/><method name='addGesture' api_added='4'><parameter type='java.lang.String' name='entryName'/><parameter type='android.gesture.Gesture' name='gesture'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='getGestureEntries' api_added='4'/><method return='java.util.ArrayList&lt;android.gesture.Gesture&gt;' name='getGestures' api_added='4'><parameter type='java.lang.String' name='entryName'/></method><method return='int' name='getOrientationStyle' api_added='4'/><method return='int' name='getSequenceType' api_added='4'/><method return='boolean' name='hasChanged' api_added='4'/><method name='load' api_added='4'><parameter type='java.io.InputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/></method><method name='load' api_added='4'><parameter type='java.io.InputStream' name='stream'/><parameter type='boolean' name='closeStream'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.util.ArrayList&lt;android.gesture.Prediction&gt;' name='recognize' api_added='4'><parameter type='android.gesture.Gesture' name='gesture'/></method><method name='removeEntry' api_added='4'><parameter type='java.lang.String' name='entryName'/></method><method name='removeGesture' api_added='4'><parameter type='java.lang.String' name='entryName'/><parameter type='android.gesture.Gesture' name='gesture'/></method><method name='save' api_added='4'><parameter type='java.io.OutputStream' name='stream'/><exception type='java.io.IOException' name='IOException'/></method><method name='save' api_added='4'><parameter type='java.io.OutputStream' name='stream'/><parameter type='boolean' name='closeStream'/><exception type='java.io.IOException' name='IOException'/></method><method name='setOrientationStyle' api_added='4'><parameter type='int' name='style'/></method><method name='setSequenceType' api_added='4'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' name='GestureStroke' api_added='4'><constructor type='android.gesture.GestureStroke' name='GestureStroke' api_added='4'><parameter type='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;' name='points'/></constructor><method name='clearPath' api_added='4'/><method return='android.gesture.OrientedBoundingBox' name='computeOrientedBoundingBox' api_added='4'/><method return='android.graphics.Path' name='getPath' api_added='4'/><method return='android.graphics.Path' name='toPath' api_added='4'><parameter type='float' name='width'/><parameter type='float' name='height'/><parameter type='int' name='numSample'/></method><method return='java.lang.Object' name='clone' api_added='8'/></class><class extends='java.lang.Object' name='OrientedBoundingBox' api_added='4'/><class extends='java.lang.Object' name='Prediction' api_added='4'/><class extends='java.lang.Object' name='GestureUtils' api_added='8' final='true'><method return='android.gesture.OrientedBoundingBox' static='true' name='computeOrientedBoundingBox' api_added='8'><parameter type='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;' name='originalPoints'/></method><method return='android.gesture.OrientedBoundingBox' static='true' name='computeOrientedBoundingBox' api_added='8'><parameter type='float[]' name='originalPoints'/></method><method return='float[]' static='true' name='spatialSampling' api_added='8'><parameter type='android.gesture.Gesture' name='gesture'/><parameter type='int' name='bitmapSize'/></method><method return='float[]' static='true' name='spatialSampling' api_added='8'><parameter type='android.gesture.Gesture' name='gesture'/><parameter type='int' name='bitmapSize'/><parameter type='boolean' name='keepAspectRatio'/></method><method return='float[]' static='true' name='temporalSampling' api_added='8'><parameter type='android.gesture.GestureStroke' name='stroke'/><parameter type='int' name='numPoints'/></method></class><interface abstract='true' static='true' name='GestureOverlayView.OnGestureListener' api_added='4'><method abstract='true' name='onGesture' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/><parameter type='android.view.MotionEvent' name='event'/></method><method abstract='true' name='onGestureCancelled' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/><parameter type='android.view.MotionEvent' name='event'/></method><method abstract='true' name='onGestureEnded' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/><parameter type='android.view.MotionEvent' name='event'/></method><method abstract='true' name='onGestureStarted' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/><parameter type='android.view.MotionEvent' name='event'/></method></interface><interface abstract='true' static='true' name='GestureOverlayView.OnGesturePerformedListener' api_added='4'><method abstract='true' name='onGesturePerformed' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/><parameter type='android.gesture.Gesture' name='gesture'/></method></interface><interface abstract='true' static='true' name='GestureOverlayView.OnGesturingListener' api_added='4'><method abstract='true' name='onGesturingEnded' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/></method><method abstract='true' name='onGesturingStarted' api_added='4'><parameter type='android.gesture.GestureOverlayView' name='overlay'/></method></interface></package><package name='android.speech.tts' api_added='4'><class extends='java.lang.Object' name='TextToSpeech' api_added='4'><constructor type='android.speech.tts.TextToSpeech' name='TextToSpeech' api_added='4'><parameter type='android.content.Context' name='context'/><parameter type='android.speech.tts.TextToSpeech.OnInitListener' name='listener'/></constructor><method return='int' name='addEarcon' api_added='4'><parameter type='java.lang.String' name='earcon'/><parameter type='java.lang.String' name='packagename'/><parameter type='int' name='resourceId'/></method><method return='int' name='addEarcon' api_added='4'><parameter type='java.lang.String' name='earcon'/><parameter type='java.lang.String' name='filename'/></method><method return='int' name='addSpeech' api_added='4'><parameter type='java.lang.String' name='text'/><parameter type='java.lang.String' name='packagename'/><parameter type='int' name='resourceId'/></method><method return='int' name='addSpeech' api_added='4'><parameter type='java.lang.String' name='text'/><parameter type='java.lang.String' name='filename'/></method><method return='java.util.Locale' name='getLanguage' api_added='4'/><method return='int' name='isLanguageAvailable' api_added='4'><parameter type='java.util.Locale' name='loc'/></method><method return='boolean' name='isSpeaking' api_added='4'/><method return='int' api_removed='14' name='playEarcon' api_added='4'><parameter type='java.lang.String' name='earcon'/><parameter type='int' name='queueMode'/><parameter type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;' name='params'/></method><method return='int' api_removed='14' name='playSilence' api_added='4'><parameter type='long' name='durationInMs'/><parameter type='int' name='queueMode'/><parameter type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;' name='params'/></method><method return='int' name='setLanguage' api_added='4'><parameter type='java.util.Locale' name='loc'/></method><method deprecated='15' return='int' name='setOnUtteranceCompletedListener' api_added='4'><parameter type='android.speech.tts.TextToSpeech.OnUtteranceCompletedListener' name='listener'/></method><method return='int' name='setPitch' api_added='4'><parameter type='float' name='pitch'/></method><method return='int' name='setSpeechRate' api_added='4'><parameter type='float' name='speechRate'/></method><method name='shutdown' api_added='4'/><method return='int' api_removed='14' name='speak' api_added='4'><parameter type='java.lang.String' name='text'/><parameter type='int' name='queueMode'/><parameter type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;' name='params'/></method><method return='int' name='stop' api_added='4'/><method return='int' api_removed='14' name='synthesizeToFile' api_added='4'><parameter type='java.lang.String' name='text'/><parameter type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;' name='params'/><parameter type='java.lang.String' name='filename'/></method><method return='boolean' name='areDefaultsEnforced' api_added='8'/><method return='java.lang.String' name='getDefaultEngine' api_added='8'/><method deprecated='14' return='int' name='setEngineByPackageName' api_added='8'><parameter type='java.lang.String' name='enginePackageName'/></method><method return='java.util.List&lt;android.speech.tts.TextToSpeech.EngineInfo&gt;' name='getEngines' api_added='14'/><method return='int' name='playEarcon' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.util.HashMap&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method><method return='int' name='playSilence' api_added='14'><parameter type='long' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.util.HashMap&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method><method return='int' name='speak' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='java.util.HashMap&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method><method return='int' name='synthesizeToFile' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.HashMap&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/><parameter type='java.lang.String' name='arg3'/></method><method return='java.util.Set&lt;java.lang.String&gt;' name='getFeatures' api_added='15'><parameter type='java.util.Locale' name='arg0'/></method><method return='int' name='setOnUtteranceProgressListener' api_added='15'><parameter type='android.speech.tts.UtteranceProgressListener' name='arg0'/></method></class><class extends='java.lang.Object' name='TextToSpeech.Engine' api_added='4'><constructor type='android.speech.tts.TextToSpeech.Engine' name='TextToSpeech.Engine' api_added='4'/></class><class extends='java.lang.Object' name='SynthesisRequest' api_added='14' final='true'><constructor type='android.speech.tts.SynthesisRequest' name='SynthesisRequest' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></constructor><method return='java.lang.String' name='getCountry' api_added='14'/><method return='java.lang.String' name='getLanguage' api_added='14'/><method return='android.os.Bundle' name='getParams' api_added='14'/><method return='int' name='getPitch' api_added='14'/><method return='int' name='getSpeechRate' api_added='14'/><method return='java.lang.String' name='getText' api_added='14'/><method return='java.lang.String' name='getVariant' api_added='14'/></class><class extends='java.lang.Object' static='true' name='TextToSpeech.EngineInfo' api_added='14'><constructor type='android.speech.tts.TextToSpeech.EngineInfo' name='TextToSpeech.EngineInfo' api_added='14'/></class><class extends='android.app.Service' abstract='true' name='TextToSpeechService' api_added='14'><constructor type='android.speech.tts.TextToSpeechService' name='TextToSpeechService' api_added='14'/><method return='android.os.IBinder' name='onBind' api_added='14'><parameter type='android.content.Intent' name='arg0'/></method><method visibility='protected' return='java.lang.String[]' abstract='true' name='onGetLanguage' api_added='14'/><method visibility='protected' return='int' abstract='true' name='onIsLanguageAvailable' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method><method visibility='protected' return='int' abstract='true' name='onLoadLanguage' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method><method visibility='protected' abstract='true' name='onStop' api_added='14'/><method visibility='protected' abstract='true' name='onSynthesizeText' api_added='14'><parameter type='android.speech.tts.SynthesisRequest' name='arg0'/><parameter type='android.speech.tts.SynthesisCallback' name='arg1'/></method><method visibility='protected' return='java.util.Set&lt;java.lang.String&gt;' name='onGetFeaturesForLanguage' api_added='15'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/></method></class><class extends='java.lang.Object' abstract='true' name='UtteranceProgressListener' api_added='15'><constructor type='android.speech.tts.UtteranceProgressListener' name='UtteranceProgressListener' api_added='15'/><method abstract='true' name='onDone' api_added='15'><parameter type='java.lang.String' name='arg0'/></method><method abstract='true' name='onError' api_added='15'><parameter type='java.lang.String' name='arg0'/></method><method abstract='true' name='onStart' api_added='15'><parameter type='java.lang.String' name='arg0'/></method></class><interface abstract='true' static='true' name='TextToSpeech.OnInitListener' api_added='4'><method abstract='true' name='onInit' api_added='4'><parameter type='int' name='status'/></method></interface><interface abstract='true' static='true' name='TextToSpeech.OnUtteranceCompletedListener' api_added='4'><method abstract='true' name='onUtteranceCompleted' api_added='4'><parameter type='java.lang.String' name='utteranceId'/></method></interface><interface extends='java.lang.Object' abstract='true' name='SynthesisCallback' api_added='14'><method return='int' abstract='true' name='audioAvailable' api_added='14'><parameter type='byte[]' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method return='int' abstract='true' name='done' api_added='14'/><method abstract='true' name='error' api_added='14'/><method return='int' abstract='true' name='getMaxBufferSize' api_added='14'/><method return='int' abstract='true' name='start' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method></interface></package><package name='android.view.accessibility' api_added='4'><class extends='java.lang.Object' name='AccessibilityEvent' api_added='4' final='true'><method return='int' name='describeContents' api_added='4'/><method return='int' api_removed='14' name='getAddedCount' api_added='4'/><method return='java.lang.CharSequence' api_removed='14' name='getBeforeText' api_added='4'/><method return='java.lang.CharSequence' api_removed='14' name='getClassName' api_added='4'/><method return='java.lang.CharSequence' api_removed='14' name='getContentDescription' api_added='4'/><method return='int' api_removed='14' name='getCurrentItemIndex' api_added='4'/><method return='long' name='getEventTime' api_added='4'/><method return='int' name='getEventType' api_added='4'/><method return='int' api_removed='14' name='getFromIndex' api_added='4'/><method return='int' api_removed='14' name='getItemCount' api_added='4'/><method return='java.lang.CharSequence' name='getPackageName' api_added='4'/><method return='android.os.Parcelable' api_removed='14' name='getParcelableData' api_added='4'/><method return='int' api_removed='14' name='getRemovedCount' api_added='4'/><method return='java.util.List&lt;java.lang.CharSequence&gt;' api_removed='14' name='getText' api_added='4'/><method name='initFromParcel' api_added='4'><parameter type='android.os.Parcel' name='parcel'/></method><method return='boolean' api_removed='14' name='isChecked' api_added='4'/><method return='boolean' api_removed='14' name='isEnabled' api_added='4'/><method return='boolean' api_removed='14' name='isFullScreen' api_added='4'/><method return='boolean' api_removed='14' name='isPassword' api_added='4'/><method return='android.view.accessibility.AccessibilityEvent' static='true' name='obtain' api_added='4'><parameter type='int' name='eventType'/></method><method return='android.view.accessibility.AccessibilityEvent' static='true' name='obtain' api_added='4'/><method api_removed='14' name='recycle' api_added='4'/><method api_removed='14' name='setAddedCount' api_added='4'><parameter type='int' name='addedCount'/></method><method api_removed='14' name='setBeforeText' api_added='4'><parameter type='java.lang.CharSequence' name='beforeText'/></method><method api_removed='14' name='setChecked' api_added='4'><parameter type='boolean' name='isChecked'/></method><method api_removed='14' name='setClassName' api_added='4'><parameter type='java.lang.CharSequence' name='className'/></method><method api_removed='14' name='setContentDescription' api_added='4'><parameter type='java.lang.CharSequence' name='contentDescription'/></method><method api_removed='14' name='setCurrentItemIndex' api_added='4'><parameter type='int' name='currentItemIndex'/></method><method api_removed='14' name='setEnabled' api_added='4'><parameter type='boolean' name='isEnabled'/></method><method name='setEventTime' api_added='4'><parameter type='long' name='eventTime'/></method><method name='setEventType' api_added='4'><parameter type='int' name='eventType'/></method><method api_removed='14' name='setFromIndex' api_added='4'><parameter type='int' name='fromIndex'/></method><method api_removed='14' name='setFullScreen' api_added='4'><parameter type='boolean' name='isFullScreen'/></method><method api_removed='14' name='setItemCount' api_added='4'><parameter type='int' name='itemCount'/></method><method name='setPackageName' api_added='4'><parameter type='java.lang.CharSequence' name='packageName'/></method><method api_removed='14' name='setParcelableData' api_added='4'><parameter type='android.os.Parcelable' name='parcelableData'/></method><method api_removed='14' name='setPassword' api_added='4'><parameter type='boolean' name='isPassword'/></method><method api_removed='14' name='setRemovedCount' api_added='4'><parameter type='int' name='removedCount'/></method><method name='writeToParcel' api_added='4'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method><method name='appendRecord' api_added='14'><parameter type='android.view.accessibility.AccessibilityRecord' name='arg0'/></method><method return='java.lang.String' static='true' name='eventTypeToString' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.view.accessibility.AccessibilityRecord' name='getRecord' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getRecordCount' api_added='14'/><method return='android.view.accessibility.AccessibilityEvent' static='true' name='obtain' api_added='14'><parameter type='android.view.accessibility.AccessibilityEvent' name='arg0'/></method><method return='int' name='getAction' api_added='16'/><method return='int' name='getMovementGranularity' api_added='16'/><method name='setAction' api_added='16'><parameter type='int' name='arg0'/></method><method name='setMovementGranularity' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' name='AccessibilityManager' api_added='4' final='true'><method deprecated='14' return='java.util.List&lt;android.content.pm.ServiceInfo&gt;' name='getAccessibilityServiceList' api_added='4'/><method name='interrupt' api_added='4'/><method return='boolean' name='isEnabled' api_added='4'/><method name='sendAccessibilityEvent' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method><method return='boolean' name='addAccessibilityStateChangeListener' api_added='14'><parameter type='android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener' name='arg0'/></method><method return='java.util.List&lt;android.accessibilityservice.AccessibilityServiceInfo&gt;' name='getEnabledAccessibilityServiceList' api_added='14'><parameter type='int' name='arg0'/></method><method return='java.util.List&lt;android.accessibilityservice.AccessibilityServiceInfo&gt;' name='getInstalledAccessibilityServiceList' api_added='14'/><method return='boolean' name='isTouchExplorationEnabled' api_added='14'/><method return='boolean' name='removeAccessibilityStateChangeListener' api_added='14'><parameter type='android.view.accessibility.AccessibilityManager.AccessibilityStateChangeListener' name='arg0'/></method></class><class extends='java.lang.Object' name='AccessibilityNodeInfo' api_added='14'><method name='addAction' api_added='14'><parameter type='int' name='arg0'/></method><method name='addChild' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method return='int' name='describeContents' api_added='14'/><method return='java.util.List&lt;android.view.accessibility.AccessibilityNodeInfo&gt;' name='findAccessibilityNodeInfosByText' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='int' name='getActions' api_added='14'/><method name='getBoundsInParent' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/></method><method name='getBoundsInScreen' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' name='getChild' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getChildCount' api_added='14'/><method return='java.lang.CharSequence' name='getClassName' api_added='14'/><method return='java.lang.CharSequence' name='getContentDescription' api_added='14'/><method return='java.lang.CharSequence' name='getPackageName' api_added='14'/><method return='android.view.accessibility.AccessibilityNodeInfo' name='getParent' api_added='14'/><method return='java.lang.CharSequence' name='getText' api_added='14'/><method return='int' name='getWindowId' api_added='14'/><method return='boolean' name='isCheckable' api_added='14'/><method return='boolean' name='isChecked' api_added='14'/><method return='boolean' name='isClickable' api_added='14'/><method return='boolean' name='isEnabled' api_added='14'/><method return='boolean' name='isFocusable' api_added='14'/><method return='boolean' name='isFocused' api_added='14'/><method return='boolean' name='isLongClickable' api_added='14'/><method return='boolean' name='isPassword' api_added='14'/><method return='boolean' name='isScrollable' api_added='14'/><method return='boolean' name='isSelected' api_added='14'/><method return='android.view.accessibility.AccessibilityNodeInfo' static='true' name='obtain' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' static='true' name='obtain' api_added='14'/><method return='android.view.accessibility.AccessibilityNodeInfo' static='true' name='obtain' api_added='14'><parameter type='android.view.accessibility.AccessibilityNodeInfo' name='arg0'/></method><method return='boolean' name='performAction' api_added='14'><parameter type='int' name='arg0'/></method><method name='recycle' api_added='14'/><method name='setBoundsInParent' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/></method><method name='setBoundsInScreen' api_added='14'><parameter type='android.graphics.Rect' name='arg0'/></method><method name='setCheckable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setChecked' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setClassName' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setClickable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setContentDescription' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setEnabled' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setFocusable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setFocused' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setLongClickable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setPackageName' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setParent' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method name='setPassword' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setScrollable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setSelected' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setSource' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method name='setText' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method><method name='addChild' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' name='findFocus' api_added='16'><parameter type='int' name='arg0'/></method><method return='android.view.accessibility.AccessibilityNodeInfo' name='focusSearch' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getMovementGranularities' api_added='16'/><method return='boolean' name='isAccessibilityFocused' api_added='16'/><method return='boolean' name='isVisibleToUser' api_added='16'/><method return='android.view.accessibility.AccessibilityNodeInfo' static='true' name='obtain' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method><method return='boolean' name='performAction' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.os.Bundle' name='arg1'/></method><method name='setAccessibilityFocused' api_added='16'><parameter type='boolean' name='arg0'/></method><method name='setMovementGranularities' api_added='16'><parameter type='int' name='arg0'/></method><method name='setParent' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setSource' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method><method name='setVisibleToUser' api_added='16'><parameter type='boolean' name='arg0'/></method></class><class extends='java.lang.Object' name='AccessibilityRecord' api_added='14'><method return='int' name='getAddedCount' api_added='14'/><method return='java.lang.CharSequence' name='getBeforeText' api_added='14'/><method return='java.lang.CharSequence' name='getClassName' api_added='14'/><method return='java.lang.CharSequence' name='getContentDescription' api_added='14'/><method return='int' name='getCurrentItemIndex' api_added='14'/><method return='int' name='getFromIndex' api_added='14'/><method return='int' name='getItemCount' api_added='14'/><method return='android.os.Parcelable' name='getParcelableData' api_added='14'/><method return='int' name='getRemovedCount' api_added='14'/><method return='int' name='getScrollX' api_added='14'/><method return='int' name='getScrollY' api_added='14'/><method return='android.view.accessibility.AccessibilityNodeInfo' name='getSource' api_added='14'/><method return='java.util.List&lt;java.lang.CharSequence&gt;' name='getText' api_added='14'/><method return='int' name='getToIndex' api_added='14'/><method return='int' name='getWindowId' api_added='14'/><method return='boolean' name='isChecked' api_added='14'/><method return='boolean' name='isEnabled' api_added='14'/><method return='boolean' name='isFullScreen' api_added='14'/><method return='boolean' name='isPassword' api_added='14'/><method return='boolean' name='isScrollable' api_added='14'/><method return='android.view.accessibility.AccessibilityRecord' static='true' name='obtain' api_added='14'><parameter type='android.view.accessibility.AccessibilityRecord' name='arg0'/></method><method return='android.view.accessibility.AccessibilityRecord' static='true' name='obtain' api_added='14'/><method name='recycle' api_added='14'/><method name='setAddedCount' api_added='14'><parameter type='int' name='arg0'/></method><method name='setBeforeText' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setChecked' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setClassName' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setContentDescription' api_added='14'><parameter type='java.lang.CharSequence' name='arg0'/></method><method name='setCurrentItemIndex' api_added='14'><parameter type='int' name='arg0'/></method><method name='setEnabled' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setFromIndex' api_added='14'><parameter type='int' name='arg0'/></method><method name='setFullScreen' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setItemCount' api_added='14'><parameter type='int' name='arg0'/></method><method name='setParcelableData' api_added='14'><parameter type='android.os.Parcelable' name='arg0'/></method><method name='setPassword' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setRemovedCount' api_added='14'><parameter type='int' name='arg0'/></method><method name='setScrollX' api_added='14'><parameter type='int' name='arg0'/></method><method name='setScrollY' api_added='14'><parameter type='int' name='arg0'/></method><method name='setScrollable' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='setSource' api_added='14'><parameter type='android.view.View' name='arg0'/></method><method name='setToIndex' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getMaxScrollX' api_added='15'/><method return='int' name='getMaxScrollY' api_added='15'/><method name='setMaxScrollX' api_added='15'><parameter type='int' name='arg0'/></method><method name='setMaxScrollY' api_added='15'><parameter type='int' name='arg0'/></method><method name='setSource' api_added='16'><parameter type='android.view.View' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' abstract='true' name='AccessibilityNodeProvider' api_added='16'><constructor type='android.view.accessibility.AccessibilityNodeProvider' name='AccessibilityNodeProvider' api_added='16'/><method return='android.view.accessibility.AccessibilityNodeInfo' name='createAccessibilityNodeInfo' api_added='16'><parameter type='int' name='arg0'/></method><method return='java.util.List&lt;android.view.accessibility.AccessibilityNodeInfo&gt;' name='findAccessibilityNodeInfosByText' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method><method return='boolean' name='performAction' api_added='16'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/></method></class><interface abstract='true' name='AccessibilityEventSource' api_added='4'><method abstract='true' name='sendAccessibilityEvent' api_added='4'><parameter type='int' name='eventType'/></method><method abstract='true' name='sendAccessibilityEventUnchecked' api_added='4'><parameter type='android.view.accessibility.AccessibilityEvent' name='event'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='AccessibilityManager.AccessibilityStateChangeListener' api_added='14'><method abstract='true' name='onAccessibilityStateChanged' api_added='14'><parameter type='boolean' name='arg0'/></method></interface></package><package name='android.accounts' api_added='5'><class extends='java.lang.Object' abstract='true' name='AbstractAccountAuthenticator' api_added='5'><constructor type='android.accounts.AbstractAccountAuthenticator' name='AbstractAccountAuthenticator' api_added='5'><parameter type='android.content.Context' name='context'/></constructor><method return='android.os.Bundle' abstract='true' name='addAccount' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='java.lang.String' name='accountType'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='java.lang.String[]' name='requiredFeatures'/><parameter type='android.os.Bundle' name='options'/><exception type='android.accounts.NetworkErrorException' name='NetworkErrorException'/></method><method return='android.os.Bundle' abstract='true' name='confirmCredentials' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='android.accounts.Account' name='account'/><parameter type='android.os.Bundle' name='options'/></method><method return='android.os.Bundle' abstract='true' name='editProperties' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='java.lang.String' name='accountType'/></method><method return='android.os.Bundle' name='getAccountRemovalAllowed' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='android.accounts.Account' name='account'/><exception type='android.accounts.NetworkErrorException' name='NetworkErrorException'/></method><method return='android.os.Bundle' abstract='true' name='getAuthToken' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='android.os.Bundle' name='loginOptions'/><exception type='android.accounts.NetworkErrorException' name='NetworkErrorException'/></method><method return='java.lang.String' abstract='true' name='getAuthTokenLabel' api_added='5'><parameter type='java.lang.String' name='authTokenType'/></method><method return='android.os.IBinder' name='getIBinder' api_added='5' final='true'/><method return='android.os.Bundle' abstract='true' name='hasFeatures' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String[]' name='features'/><exception type='android.accounts.NetworkErrorException' name='NetworkErrorException'/></method><method return='android.os.Bundle' abstract='true' name='updateCredentials' api_added='5'><parameter type='android.accounts.AccountAuthenticatorResponse' name='response'/><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='android.os.Bundle' name='loginOptions'/></method></class><class extends='java.lang.Object' name='Account' api_added='5'><constructor type='android.accounts.Account' name='Account' api_added='5'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='type'/></constructor><constructor type='android.accounts.Account' name='Account' api_added='5'><parameter type='android.os.Parcel' name='in'/></constructor><method return='int' name='describeContents' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.app.Activity' name='AccountAuthenticatorActivity' api_added='5'><constructor type='android.accounts.AccountAuthenticatorActivity' name='AccountAuthenticatorActivity' api_added='5'/><method name='setAccountAuthenticatorResult' api_added='5' final='true'><parameter type='android.os.Bundle' name='result'/></method></class><class extends='java.lang.Object' name='AccountAuthenticatorResponse' api_added='5'><constructor type='android.accounts.AccountAuthenticatorResponse' name='AccountAuthenticatorResponse' api_added='5'><parameter type='android.os.Parcel' name='parcel'/></constructor><method return='int' name='describeContents' api_added='5'/><method name='onError' api_added='5'><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method><method name='onRequestContinued' api_added='5'/><method name='onResult' api_added='5'><parameter type='android.os.Bundle' name='result'/></method><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='AccountManager' api_added='5'><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='addAccount' api_added='5'><parameter type='java.lang.String' name='accountType'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='java.lang.String[]' name='requiredFeatures'/><parameter type='android.os.Bundle' name='addAccountOptions'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='boolean' name='addAccountExplicitly' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='password'/><parameter type='android.os.Bundle' name='extras'/></method><method name='addOnAccountsUpdatedListener' api_added='5'><parameter type='android.accounts.OnAccountsUpdateListener' name='listener'/><parameter type='android.os.Handler' name='handler'/><parameter type='boolean' name='updateImmediately'/></method><method return='java.lang.String' name='blockingGetAuthToken' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='boolean' name='notifyAuthFailure'/><exception type='android.accounts.AuthenticatorException' name='AuthenticatorException'/><exception type='java.io.IOException' name='IOException'/><exception type='android.accounts.OperationCanceledException' name='OperationCanceledException'/></method><method name='clearPassword' api_added='5'><parameter type='android.accounts.Account' name='account'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='confirmCredentials' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='android.os.Bundle' name='options'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='editProperties' api_added='5'><parameter type='java.lang.String' name='accountType'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManager' static='true' name='get' api_added='5'><parameter type='android.content.Context' name='context'/></method><method return='android.accounts.Account[]' name='getAccounts' api_added='5'/><method return='android.accounts.Account[]' name='getAccountsByType' api_added='5'><parameter type='java.lang.String' name='type'/></method><method return='android.accounts.AccountManagerFuture&lt;android.accounts.Account[]&gt;' name='getAccountsByTypeAndFeatures' api_added='5'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String[]' name='features'/><parameter type='android.accounts.AccountManagerCallback&lt;android.accounts.Account[]&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='getAuthToken' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='android.os.Bundle' name='loginOptions'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method deprecated='14' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='getAuthToken' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='boolean' name='notifyAuthFailure'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='getAuthTokenByFeatures' api_added='5'><parameter type='java.lang.String' name='accountType'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='java.lang.String[]' name='features'/><parameter type='android.app.Activity' name='activityForPrompting'/><parameter type='android.os.Bundle' name='addAccountOptions'/><parameter type='android.os.Bundle' name='loginOptions'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AuthenticatorDescription[]' name='getAuthenticatorTypes' api_added='5'/><method return='java.lang.String' name='getPassword' api_added='5'><parameter type='android.accounts.Account' name='account'/></method><method return='java.lang.String' name='getUserData' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='key'/></method><method name='invalidateAuthToken' api_added='5'><parameter type='java.lang.String' name='accountType'/><parameter type='java.lang.String' name='authToken'/></method><method return='java.lang.String' name='peekAuthToken' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/></method><method return='android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt;' name='removeAccount' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method name='removeOnAccountsUpdatedListener' api_added='5'><parameter type='android.accounts.OnAccountsUpdateListener' name='listener'/></method><method name='setAuthToken' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='java.lang.String' name='authToken'/></method><method name='setPassword' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='password'/></method><method name='setUserData' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='key'/><parameter type='java.lang.String' name='value'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='updateCredentials' api_added='5'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String' name='authTokenType'/><parameter type='android.os.Bundle' name='loginOptions'/><parameter type='android.app.Activity' name='activity'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt;' name='hasFeatures' api_added='8'><parameter type='android.accounts.Account' name='account'/><parameter type='java.lang.String[]' name='features'/><parameter type='android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;' name='callback'/><parameter type='android.os.Handler' name='handler'/></method><method return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;' name='getAuthToken' api_added='14'><parameter type='android.accounts.Account' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='android.os.Bundle' name='arg2'/><parameter type='boolean' name='arg3'/><parameter type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;' name='arg4'/><parameter type='android.os.Handler' name='arg5'/></method><method return='android.content.Intent' static='true' name='newChooseAccountIntent' api_added='14'><parameter type='android.accounts.Account' name='arg0'/><parameter type='java.util.ArrayList&lt;android.accounts.Account&gt;' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/><parameter type='boolean' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='java.lang.String' name='arg5'/><parameter type='java.lang.String[]' name='arg6'/><parameter type='android.os.Bundle' name='arg7'/></method></class><class extends='java.lang.Exception' name='AccountsException' api_added='5'><constructor type='android.accounts.AccountsException' name='AccountsException' api_added='5'/><constructor type='android.accounts.AccountsException' name='AccountsException' api_added='5'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.accounts.AccountsException' name='AccountsException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.accounts.AccountsException' name='AccountsException' api_added='5'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='AuthenticatorDescription' api_added='5'><constructor type='android.accounts.AuthenticatorDescription' name='AuthenticatorDescription' api_added='5'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='packageName'/><parameter type='int' name='labelId'/><parameter type='int' name='iconId'/><parameter type='int' name='smallIconId'/><parameter type='int' name='prefId'/></constructor><method return='int' name='describeContents' api_added='5'/><method return='android.accounts.AuthenticatorDescription' static='true' name='newKey' api_added='5'><parameter type='java.lang.String' name='type'/></method><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.accounts.AccountsException' name='AuthenticatorException' api_added='5'><constructor type='android.accounts.AuthenticatorException' name='AuthenticatorException' api_added='5'/><constructor type='android.accounts.AuthenticatorException' name='AuthenticatorException' api_added='5'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.accounts.AuthenticatorException' name='AuthenticatorException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.accounts.AuthenticatorException' name='AuthenticatorException' api_added='5'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='android.accounts.AccountsException' name='NetworkErrorException' api_added='5'><constructor type='android.accounts.NetworkErrorException' name='NetworkErrorException' api_added='5'/><constructor type='android.accounts.NetworkErrorException' name='NetworkErrorException' api_added='5'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.accounts.NetworkErrorException' name='NetworkErrorException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.accounts.NetworkErrorException' name='NetworkErrorException' api_added='5'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='android.accounts.AccountsException' name='OperationCanceledException' api_added='5'><constructor type='android.accounts.OperationCanceledException' name='OperationCanceledException' api_added='5'/><constructor type='android.accounts.OperationCanceledException' name='OperationCanceledException' api_added='5'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.accounts.OperationCanceledException' name='OperationCanceledException' api_added='5'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='android.accounts.OperationCanceledException' name='OperationCanceledException' api_added='5'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='AccountManagerCallback' api_added='5'><method abstract='true' name='run' api_added='5'><parameter type='android.accounts.AccountManagerFuture&lt;V&gt;' name='future'/></method></interface><interface abstract='true' name='AccountManagerFuture' api_added='5'><method return='boolean' abstract='true' name='cancel' api_added='5'><parameter type='boolean' name='mayInterruptIfRunning'/></method><method return='V' abstract='true' name='getResult' api_added='5'><exception type='android.accounts.AuthenticatorException' name='AuthenticatorException'/><exception type='java.io.IOException' name='IOException'/><exception type='android.accounts.OperationCanceledException' name='OperationCanceledException'/></method><method return='V' abstract='true' name='getResult' api_added='5'><parameter type='long' name='timeout'/><parameter type='java.util.concurrent.TimeUnit' name='unit'/><exception type='android.accounts.AuthenticatorException' name='AuthenticatorException'/><exception type='java.io.IOException' name='IOException'/><exception type='android.accounts.OperationCanceledException' name='OperationCanceledException'/></method><method return='boolean' abstract='true' name='isCancelled' api_added='5'/><method return='boolean' abstract='true' name='isDone' api_added='5'/></interface><interface abstract='true' name='OnAccountsUpdateListener' api_added='5'><method abstract='true' name='onAccountsUpdated' api_added='5'><parameter type='android.accounts.Account[]' name='accounts'/></method></interface></package><package name='android.bluetooth' api_added='5'><class extends='java.lang.Object' name='BluetoothAdapter' api_added='5' final='true'><method return='boolean' name='cancelDiscovery' api_added='5'/><method return='boolean' static='true' name='checkBluetoothAddress' api_added='5'><parameter type='java.lang.String' name='address'/></method><method return='boolean' name='disable' api_added='5'/><method return='boolean' name='enable' api_added='5'/><method return='java.lang.String' name='getAddress' api_added='5'/><method return='java.util.Set&lt;android.bluetooth.BluetoothDevice&gt;' name='getBondedDevices' api_added='5'/><method return='android.bluetooth.BluetoothAdapter' static='true' synchronized='true' name='getDefaultAdapter' api_added='5'/><method return='java.lang.String' name='getName' api_added='5'/><method return='android.bluetooth.BluetoothDevice' name='getRemoteDevice' api_added='5'><parameter type='java.lang.String' name='address'/></method><method return='int' name='getScanMode' api_added='5'/><method return='int' name='getState' api_added='5'/><method return='boolean' name='isDiscovering' api_added='5'/><method return='boolean' name='isEnabled' api_added='5'/><method return='android.bluetooth.BluetoothServerSocket' name='listenUsingRfcommWithServiceRecord' api_added='5'><parameter type='java.lang.String' name='name'/><parameter type='java.util.UUID' name='uuid'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='setName' api_added='5'><parameter type='java.lang.String' name='name'/></method><method return='boolean' name='startDiscovery' api_added='5'/><method return='android.bluetooth.BluetoothServerSocket' name='listenUsingInsecureRfcommWithServiceRecord' api_added='10'><parameter type='java.lang.String' name='name'/><parameter type='java.util.UUID' name='uuid'/><exception type='java.io.IOException' name='IOException'/></method><method name='closeProfileProxy' api_added='11'><parameter type='int' name='profile'/><parameter type='android.bluetooth.BluetoothProfile' name='proxy'/></method><method return='boolean' name='getProfileProxy' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.bluetooth.BluetoothProfile.ServiceListener' name='listener'/><parameter type='int' name='profile'/></method><method return='int' name='getProfileConnectionState' api_added='14'><parameter type='int' name='arg0'/></method><method return='android.bluetooth.BluetoothDevice' name='getRemoteDevice' api_added='16'><parameter type='byte[]' name='arg0'/></method></class><class extends='java.lang.Object' name='BluetoothClass' api_added='5' final='true'><method return='int' name='describeContents' api_added='5'/><method return='int' name='getDeviceClass' api_added='5'/><method return='int' name='getMajorDeviceClass' api_added='5'/><method return='boolean' name='hasService' api_added='5'><parameter type='int' name='service'/></method><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' static='true' name='BluetoothClass.Device' api_added='5'><constructor type='android.bluetooth.BluetoothClass.Device' name='BluetoothClass.Device' api_added='5'/></class><class extends='java.lang.Object' static='true' name='BluetoothClass.Device.Major' api_added='5'><constructor type='android.bluetooth.BluetoothClass.Device.Major' name='BluetoothClass.Device.Major' api_added='5'/></class><class extends='java.lang.Object' static='true' name='BluetoothClass.Service' api_added='5' final='true'><constructor type='android.bluetooth.BluetoothClass.Service' name='BluetoothClass.Service' api_added='5'/></class><class extends='java.lang.Object' name='BluetoothDevice' api_added='5' final='true'><method return='android.bluetooth.BluetoothSocket' name='createRfcommSocketToServiceRecord' api_added='5'><parameter type='java.util.UUID' name='uuid'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='describeContents' api_added='5'/><method return='java.lang.String' name='getAddress' api_added='5'/><method return='android.bluetooth.BluetoothClass' name='getBluetoothClass' api_added='5'/><method return='int' name='getBondState' api_added='5'/><method return='java.lang.String' name='getName' api_added='5'/><method name='writeToParcel' api_added='5'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='android.bluetooth.BluetoothSocket' name='createInsecureRfcommSocketToServiceRecord' api_added='10'><parameter type='java.util.UUID' name='uuid'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='fetchUuidsWithSdp' api_added='15'/><method return='android.os.ParcelUuid[]' name='getUuids' api_added='15'/></class><class extends='java.lang.Object' name='BluetoothServerSocket' api_added='5' final='true'><method return='android.bluetooth.BluetoothSocket' name='accept' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method return='android.bluetooth.BluetoothSocket' name='accept' api_added='5'><parameter type='int' name='timeout'/><exception type='java.io.IOException' name='IOException'/></method><method name='close' api_added='5'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='BluetoothSocket' api_added='5' final='true'><method name='close' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method name='connect' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.InputStream' name='getInputStream' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method return='java.io.OutputStream' name='getOutputStream' api_added='5'><exception type='java.io.IOException' name='IOException'/></method><method return='android.bluetooth.BluetoothDevice' name='getRemoteDevice' api_added='5'/><method return='boolean' name='isConnected' api_added='14'/></class><class extends='java.lang.Object' name='BluetoothA2dp' api_added='11' final='true'><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getConnectedDevices' api_added='11'/><method return='int' name='getConnectionState' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getDevicesMatchingConnectionStates' api_added='11'><parameter type='int[]' name='states'/></method><method return='boolean' name='isA2dpPlaying' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method></class><class extends='java.lang.Object' name='BluetoothAssignedNumbers' api_added='11'/><class extends='java.lang.Object' name='BluetoothHeadset' api_added='11' final='true'><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getConnectedDevices' api_added='11'/><method return='int' name='getConnectionState' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getDevicesMatchingConnectionStates' api_added='11'><parameter type='int[]' name='states'/></method><method return='boolean' name='isAudioConnected' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method><method return='boolean' name='startVoiceRecognition' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method><method return='boolean' name='stopVoiceRecognition' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method></class><class extends='java.lang.Object' name='BluetoothHealth' api_added='14' final='true'><method return='boolean' name='connectChannelToSource' api_added='14'><parameter type='android.bluetooth.BluetoothDevice' name='arg0'/><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg1'/></method><method return='boolean' name='disconnectChannel' api_added='14'><parameter type='android.bluetooth.BluetoothDevice' name='arg0'/><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg1'/><parameter type='int' name='arg2'/></method><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getConnectedDevices' api_added='14'/><method return='int' name='getConnectionState' api_added='14'><parameter type='android.bluetooth.BluetoothDevice' name='arg0'/></method><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' name='getDevicesMatchingConnectionStates' api_added='14'><parameter type='int[]' name='arg0'/></method><method return='android.os.ParcelFileDescriptor' name='getMainChannelFd' api_added='14'><parameter type='android.bluetooth.BluetoothDevice' name='arg0'/><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg1'/></method><method return='boolean' name='registerSinkAppConfiguration' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.bluetooth.BluetoothHealthCallback' name='arg2'/></method><method return='boolean' name='unregisterAppConfiguration' api_added='14'><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg0'/></method></class><class extends='java.lang.Object' name='BluetoothHealthAppConfiguration' api_added='14' final='true'><method return='int' name='describeContents' api_added='14'/><method return='int' name='getDataType' api_added='14'/><method return='java.lang.String' name='getName' api_added='14'/><method return='int' name='getRole' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' abstract='true' name='BluetoothHealthCallback' api_added='14'><constructor type='android.bluetooth.BluetoothHealthCallback' name='BluetoothHealthCallback' api_added='14'/><method name='onHealthAppConfigurationStatusChange' api_added='14'><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg0'/><parameter type='int' name='arg1'/></method><method name='onHealthChannelStateChange' api_added='14'><parameter type='android.bluetooth.BluetoothHealthAppConfiguration' name='arg0'/><parameter type='android.bluetooth.BluetoothDevice' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='android.os.ParcelFileDescriptor' name='arg4'/><parameter type='int' name='arg5'/></method></class><interface abstract='true' name='BluetoothProfile' api_added='11'><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' abstract='true' name='getConnectedDevices' api_added='11'/><method return='int' abstract='true' name='getConnectionState' api_added='11'><parameter type='android.bluetooth.BluetoothDevice' name='device'/></method><method return='java.util.List&lt;android.bluetooth.BluetoothDevice&gt;' abstract='true' name='getDevicesMatchingConnectionStates' api_added='11'><parameter type='int[]' name='states'/></method></interface><interface abstract='true' static='true' name='BluetoothProfile.ServiceListener' api_added='11'><method abstract='true' name='onServiceConnected' api_added='11'><parameter type='int' name='profile'/><parameter type='android.bluetooth.BluetoothProfile' name='proxy'/></method><method abstract='true' name='onServiceDisconnected' api_added='11'><parameter type='int' name='profile'/></method></interface></package><package name='android.telephony.cdma' api_added='5'><class extends='android.telephony.CellLocation' name='CdmaCellLocation' api_added='5'><constructor type='android.telephony.cdma.CdmaCellLocation' name='CdmaCellLocation' api_added='5'/><constructor type='android.telephony.cdma.CdmaCellLocation' name='CdmaCellLocation' api_added='5'><parameter type='android.os.Bundle' name='bundleWithValues'/></constructor><method name='fillInNotifierBundle' api_added='5'><parameter type='android.os.Bundle' name='bundleToFill'/></method><method return='int' name='getBaseStationId' api_added='5'/><method return='int' name='getBaseStationLatitude' api_added='5'/><method return='int' name='getBaseStationLongitude' api_added='5'/><method return='int' name='getNetworkId' api_added='5'/><method return='int' name='getSystemId' api_added='5'/><method name='setCellLocationData' api_added='5'><parameter type='int' name='baseStationId'/><parameter type='int' name='baseStationLatitude'/><parameter type='int' name='baseStationLongitude'/></method><method name='setCellLocationData' api_added='5'><parameter type='int' name='baseStationId'/><parameter type='int' name='baseStationLatitude'/><parameter type='int' name='baseStationLongitude'/><parameter type='int' name='systemId'/><parameter type='int' name='networkId'/></method><method name='setStateInvalid' api_added='5'/></class></package><package name='android.service.wallpaper' api_added='7'><class extends='android.app.Service' abstract='true' name='WallpaperService' api_added='7'><constructor type='android.service.wallpaper.WallpaperService' name='WallpaperService' api_added='7'/><method return='android.os.IBinder' name='onBind' api_added='7' final='true'><parameter type='android.content.Intent' name='intent'/></method><method return='android.service.wallpaper.WallpaperService.Engine' abstract='true' name='onCreateEngine' api_added='7'/></class><class extends='java.lang.Object' name='WallpaperService.Engine' api_added='7'><constructor type='android.service.wallpaper.WallpaperService.Engine' name='WallpaperService.Engine' api_added='7'/><method return='int' name='getDesiredMinimumHeight' api_added='7'/><method return='int' name='getDesiredMinimumWidth' api_added='7'/><method return='android.view.SurfaceHolder' name='getSurfaceHolder' api_added='7'/><method return='boolean' name='isPreview' api_added='7'/><method return='boolean' name='isVisible' api_added='7'/><method return='android.os.Bundle' name='onCommand' api_added='7'><parameter type='java.lang.String' name='action'/><parameter type='int' name='x'/><parameter type='int' name='y'/><parameter type='int' name='z'/><parameter type='android.os.Bundle' name='extras'/><parameter type='boolean' name='resultRequested'/></method><method name='onCreate' api_added='7'><parameter type='android.view.SurfaceHolder' name='surfaceHolder'/></method><method name='onDesiredSizeChanged' api_added='7'><parameter type='int' name='desiredWidth'/><parameter type='int' name='desiredHeight'/></method><method name='onDestroy' api_added='7'/><method name='onOffsetsChanged' api_added='7'><parameter type='float' name='xOffset'/><parameter type='float' name='yOffset'/><parameter type='float' name='xOffsetStep'/><parameter type='float' name='yOffsetStep'/><parameter type='int' name='xPixelOffset'/><parameter type='int' name='yPixelOffset'/></method><method name='onSurfaceChanged' api_added='7'><parameter type='android.view.SurfaceHolder' name='holder'/><parameter type='int' name='format'/><parameter type='int' name='width'/><parameter type='int' name='height'/></method><method name='onSurfaceCreated' api_added='7'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='onSurfaceDestroyed' api_added='7'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method name='onTouchEvent' api_added='7'><parameter type='android.view.MotionEvent' name='event'/></method><method name='onVisibilityChanged' api_added='7'><parameter type='boolean' name='visible'/></method><method name='setTouchEventsEnabled' api_added='7'><parameter type='boolean' name='enabled'/></method><method name='onSurfaceRedrawNeeded' api_added='9'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method visibility='protected' name='dump' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.io.FileDescriptor' name='arg1'/><parameter type='java.io.PrintWriter' name='arg2'/><parameter type='java.lang.String[]' name='arg3'/></method><method name='setOffsetNotificationsEnabled' api_added='15'><parameter type='boolean' name='arg0'/></method></class></package><package name='android.app.admin' api_added='8'><class extends='java.lang.Object' name='DeviceAdminInfo' api_added='8' final='true'><constructor type='android.app.admin.DeviceAdminInfo' name='DeviceAdminInfo' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.pm.ResolveInfo' name='receiver'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xmlpull.v1.XmlPullParserException' name='XmlPullParserException'/></constructor><method return='int' name='describeContents' api_added='8'/><method name='dump' api_added='8'><parameter type='android.util.Printer' name='pw'/><parameter type='java.lang.String' name='prefix'/></method><method return='android.content.pm.ActivityInfo' name='getActivityInfo' api_added='8'/><method return='android.content.ComponentName' name='getComponent' api_added='8'/><method return='java.lang.String' name='getPackageName' api_added='8'/><method return='java.lang.String' name='getReceiverName' api_added='8'/><method return='java.lang.String' name='getTagForPolicy' api_added='8'><parameter type='int' name='policyIdent'/></method><method return='boolean' name='isVisible' api_added='8'/><method return='java.lang.CharSequence' name='loadDescription' api_added='8'><parameter type='android.content.pm.PackageManager' name='pm'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method><method return='android.graphics.drawable.Drawable' name='loadIcon' api_added='8'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='java.lang.CharSequence' name='loadLabel' api_added='8'><parameter type='android.content.pm.PackageManager' name='pm'/></method><method return='boolean' name='usesPolicy' api_added='8'><parameter type='int' name='policyIdent'/></method><method name='writeToParcel' api_added='8'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='android.content.BroadcastReceiver' name='DeviceAdminReceiver' api_added='8'><constructor type='android.app.admin.DeviceAdminReceiver' name='DeviceAdminReceiver' api_added='8'/><method return='android.app.admin.DevicePolicyManager' name='getManager' api_added='8'><parameter type='android.content.Context' name='context'/></method><method return='android.content.ComponentName' name='getWho' api_added='8'><parameter type='android.content.Context' name='context'/></method><method return='java.lang.CharSequence' name='onDisableRequested' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onDisabled' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onEnabled' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onPasswordChanged' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onPasswordFailed' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onPasswordSucceeded' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onReceive' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method><method name='onPasswordExpiring' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.content.Intent' name='intent'/></method></class><class extends='java.lang.Object' name='DevicePolicyManager' api_added='8'><method return='java.util.List&lt;android.content.ComponentName&gt;' name='getActiveAdmins' api_added='8'/><method return='int' name='getCurrentFailedPasswordAttempts' api_added='8'/><method return='int' name='getMaximumFailedPasswordsForWipe' api_added='8'><parameter type='android.content.ComponentName' name='admin'/></method><method return='long' name='getMaximumTimeToLock' api_added='8'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMaximumLength' api_added='8'><parameter type='int' name='quality'/></method><method return='int' name='getPasswordMinimumLength' api_added='8'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordQuality' api_added='8'><parameter type='android.content.ComponentName' name='admin'/></method><method return='boolean' name='isActivePasswordSufficient' api_added='8'/><method return='boolean' name='isAdminActive' api_added='8'><parameter type='android.content.ComponentName' name='who'/></method><method name='lockNow' api_added='8'/><method name='removeActiveAdmin' api_added='8'><parameter type='android.content.ComponentName' name='who'/></method><method return='boolean' name='resetPassword' api_added='8'><parameter type='java.lang.String' name='password'/><parameter type='int' name='flags'/></method><method name='setMaximumFailedPasswordsForWipe' api_added='8'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='num'/></method><method name='setMaximumTimeToLock' api_added='8'><parameter type='android.content.ComponentName' name='admin'/><parameter type='long' name='timeMs'/></method><method name='setPasswordMinimumLength' api_added='8'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordQuality' api_added='8'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='quality'/></method><method name='wipeData' api_added='8'><parameter type='int' name='flags'/></method><method return='long' name='getPasswordExpiration' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='long' name='getPasswordExpirationTimeout' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordHistoryLength' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumLetters' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumLowerCase' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumNonLetter' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumNumeric' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumSymbols' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getPasswordMinimumUpperCase' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='boolean' name='getStorageEncryption' api_added='11'><parameter type='android.content.ComponentName' name='admin'/></method><method return='int' name='getStorageEncryptionStatus' api_added='11'/><method return='boolean' name='hasGrantedPolicy' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='usesPolicy'/></method><method name='setPasswordExpirationTimeout' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='long' name='timeout'/></method><method name='setPasswordHistoryLength' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumLetters' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumLowerCase' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumNonLetter' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumNumeric' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumSymbols' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method name='setPasswordMinimumUpperCase' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='int' name='length'/></method><method return='int' name='setStorageEncryption' api_added='11'><parameter type='android.content.ComponentName' name='admin'/><parameter type='boolean' name='encrypt'/></method><method return='boolean' name='getCameraDisabled' api_added='14'><parameter type='android.content.ComponentName' name='arg0'/></method><method name='setCameraDisabled' api_added='14'><parameter type='android.content.ComponentName' name='arg0'/><parameter type='boolean' name='arg1'/></method></class></package><package name='android.app.backup' api_added='8'><class extends='android.content.ContextWrapper' abstract='true' name='BackupAgent' api_added='8'><constructor type='android.app.backup.BackupAgent' name='BackupAgent' api_added='8'/><method abstract='true' name='onBackup' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='oldState'/><parameter type='android.app.backup.BackupDataOutput' name='data'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/><exception type='java.io.IOException' name='IOException'/></method><method name='onCreate' api_added='8'/><method name='onDestroy' api_added='8'/><method abstract='true' name='onRestore' api_added='8'><parameter type='android.app.backup.BackupDataInput' name='data'/><parameter type='int' name='appVersionCode'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/><exception type='java.io.IOException' name='IOException'/></method><method name='fullBackupFile' api_added='14' final='true'><parameter type='java.io.File' name='arg0'/><parameter type='android.app.backup.FullBackupDataOutput' name='arg1'/></method><method name='onFullBackup' api_added='14'><parameter type='android.app.backup.FullBackupDataOutput' name='arg0'/></method><method name='onRestoreFile' api_added='14'><parameter type='android.os.ParcelFileDescriptor' name='arg0'/><parameter type='long' name='arg1'/><parameter type='java.io.File' name='arg2'/><parameter type='int' name='arg3'/><parameter type='long' name='arg4'/><parameter type='long' name='arg5'/></method></class><class extends='android.app.backup.BackupAgent' name='BackupAgentHelper' api_added='8'><constructor type='android.app.backup.BackupAgentHelper' name='BackupAgentHelper' api_added='8'/><method name='addHelper' api_added='8'><parameter type='java.lang.String' name='keyPrefix'/><parameter type='android.app.backup.BackupHelper' name='helper'/></method><method name='onBackup' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='oldState'/><parameter type='android.app.backup.BackupDataOutput' name='data'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/><exception type='java.io.IOException' name='IOException'/></method><method name='onRestore' api_added='8'><parameter type='android.app.backup.BackupDataInput' name='data'/><parameter type='int' name='appVersionCode'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='BackupDataInput' api_added='8'><method return='int' name='getDataSize' api_added='8'/><method return='java.lang.String' name='getKey' api_added='8'/><method return='int' name='readEntityData' api_added='8'><parameter type='byte[]' name='data'/><parameter type='int' name='offset'/><parameter type='int' name='size'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='readNextHeader' api_added='8'><exception type='java.io.IOException' name='IOException'/></method><method name='skipEntityData' api_added='8'><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.io.InputStream' name='BackupDataInputStream' api_added='8'><method return='java.lang.String' name='getKey' api_added='8'/><method return='int' name='read' api_added='8'><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='size' api_added='8'/></class><class extends='java.lang.Object' name='BackupDataOutput' api_added='8'><method return='int' name='writeEntityData' api_added='8'><parameter type='byte[]' name='data'/><parameter type='int' name='size'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='writeEntityHeader' api_added='8'><parameter type='java.lang.String' name='key'/><parameter type='int' name='dataSize'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='java.lang.Object' name='BackupManager' api_added='8'><constructor type='android.app.backup.BackupManager' name='BackupManager' api_added='8'><parameter type='android.content.Context' name='context'/></constructor><method name='dataChanged' api_added='8'/><method static='true' name='dataChanged' api_added='8'><parameter type='java.lang.String' name='packageName'/></method><method return='int' name='requestRestore' api_added='8'><parameter type='android.app.backup.RestoreObserver' name='observer'/></method></class><class extends='android.app.backup.FileBackupHelperBase' name='FileBackupHelper' api_added='8'><constructor type='android.app.backup.FileBackupHelper' name='FileBackupHelper' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String...' name='files'/></constructor><method name='performBackup' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='oldState'/><parameter type='android.app.backup.BackupDataOutput' name='data'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/></method><method name='restoreEntity' api_added='8'><parameter type='android.app.backup.BackupDataInputStream' name='data'/></method></class><class visibility='' extends='java.lang.Object' name='FileBackupHelperBase' api_added='8'><method name='writeNewStateDescription' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='fd'/></method></class><class extends='java.lang.Object' abstract='true' name='RestoreObserver' api_added='8'><constructor type='android.app.backup.RestoreObserver' name='RestoreObserver' api_added='8'/><method name='onUpdate' api_added='8'><parameter type='int' name='nowBeingRestored'/><parameter type='java.lang.String' name='currentPackage'/></method><method name='restoreFinished' api_added='8'><parameter type='int' name='error'/></method><method name='restoreStarting' api_added='8'><parameter type='int' name='numPackages'/></method></class><class extends='android.app.backup.FileBackupHelperBase' name='SharedPreferencesBackupHelper' api_added='8'><constructor type='android.app.backup.SharedPreferencesBackupHelper' name='SharedPreferencesBackupHelper' api_added='8'><parameter type='android.content.Context' name='context'/><parameter type='java.lang.String...' name='prefGroups'/></constructor><method name='performBackup' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='oldState'/><parameter type='android.app.backup.BackupDataOutput' name='data'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/></method><method name='restoreEntity' api_added='8'><parameter type='android.app.backup.BackupDataInputStream' name='data'/></method></class><class extends='java.lang.Object' name='FullBackupDataOutput' api_added='14'/><interface abstract='true' name='BackupHelper' api_added='8'><method abstract='true' name='performBackup' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='oldState'/><parameter type='android.app.backup.BackupDataOutput' name='data'/><parameter type='android.os.ParcelFileDescriptor' name='newState'/></method><method abstract='true' name='restoreEntity' api_added='8'><parameter type='android.app.backup.BackupDataInputStream' name='data'/></method><method abstract='true' name='writeNewStateDescription' api_added='8'><parameter type='android.os.ParcelFileDescriptor' name='newState'/></method></interface></package><package name='javax.xml.datatype' api_added='8'><class extends='java.lang.Exception' name='DatatypeConfigurationException' api_added='8'><constructor type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException' api_added='8'/><constructor type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor><constructor type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException' api_added='8'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='DatatypeConstants' api_added='8' final='true'/><class extends='java.lang.Object' static='true' name='DatatypeConstants.Field' api_added='8' final='true'><method return='int' name='getId' api_added='8'/></class><class extends='java.lang.Object' abstract='true' name='DatatypeFactory' api_added='8'><constructor visibility='protected' type='javax.xml.datatype.DatatypeFactory' name='DatatypeFactory' api_added='8'/><method return='javax.xml.datatype.Duration' abstract='true' name='newDuration' api_added='8'><parameter type='java.lang.String' name='lexicalRepresentation'/></method><method return='javax.xml.datatype.Duration' abstract='true' name='newDuration' api_added='8'><parameter type='long' name='durationInMilliSeconds'/></method><method return='javax.xml.datatype.Duration' abstract='true' name='newDuration' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='java.math.BigInteger' name='years'/><parameter type='java.math.BigInteger' name='months'/><parameter type='java.math.BigInteger' name='days'/><parameter type='java.math.BigInteger' name='hours'/><parameter type='java.math.BigInteger' name='minutes'/><parameter type='java.math.BigDecimal' name='seconds'/></method><method return='javax.xml.datatype.Duration' name='newDuration' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='int' name='years'/><parameter type='int' name='months'/><parameter type='int' name='days'/><parameter type='int' name='hours'/><parameter type='int' name='minutes'/><parameter type='int' name='seconds'/></method><method return='javax.xml.datatype.Duration' name='newDurationDayTime' api_added='8'><parameter type='java.lang.String' name='lexicalRepresentation'/></method><method return='javax.xml.datatype.Duration' name='newDurationDayTime' api_added='8'><parameter type='long' name='durationInMilliseconds'/></method><method return='javax.xml.datatype.Duration' name='newDurationDayTime' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='java.math.BigInteger' name='day'/><parameter type='java.math.BigInteger' name='hour'/><parameter type='java.math.BigInteger' name='minute'/><parameter type='java.math.BigInteger' name='second'/></method><method return='javax.xml.datatype.Duration' name='newDurationDayTime' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></method><method return='javax.xml.datatype.Duration' name='newDurationYearMonth' api_added='8'><parameter type='java.lang.String' name='lexicalRepresentation'/></method><method return='javax.xml.datatype.Duration' name='newDurationYearMonth' api_added='8'><parameter type='long' name='durationInMilliseconds'/></method><method return='javax.xml.datatype.Duration' name='newDurationYearMonth' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='java.math.BigInteger' name='year'/><parameter type='java.math.BigInteger' name='month'/></method><method return='javax.xml.datatype.Duration' name='newDurationYearMonth' api_added='8'><parameter type='boolean' name='isPositive'/><parameter type='int' name='year'/><parameter type='int' name='month'/></method><method return='javax.xml.datatype.DatatypeFactory' static='true' name='newInstance' api_added='8'><exception type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' abstract='true' name='newXMLGregorianCalendar' api_added='8'/><method return='javax.xml.datatype.XMLGregorianCalendar' abstract='true' name='newXMLGregorianCalendar' api_added='8'><parameter type='java.lang.String' name='lexicalRepresentation'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' abstract='true' name='newXMLGregorianCalendar' api_added='8'><parameter type='java.util.GregorianCalendar' name='cal'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' abstract='true' name='newXMLGregorianCalendar' api_added='8'><parameter type='java.math.BigInteger' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/><parameter type='java.math.BigDecimal' name='fractionalSecond'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' name='newXMLGregorianCalendar' api_added='8'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/><parameter type='int' name='millisecond'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' name='newXMLGregorianCalendarDate' api_added='8'><parameter type='int' name='year'/><parameter type='int' name='month'/><parameter type='int' name='day'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' name='newXMLGregorianCalendarTime' api_added='8'><parameter type='int' name='hours'/><parameter type='int' name='minutes'/><parameter type='int' name='seconds'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' name='newXMLGregorianCalendarTime' api_added='8'><parameter type='int' name='hours'/><parameter type='int' name='minutes'/><parameter type='int' name='seconds'/><parameter type='java.math.BigDecimal' name='fractionalSecond'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.XMLGregorianCalendar' name='newXMLGregorianCalendarTime' api_added='8'><parameter type='int' name='hours'/><parameter type='int' name='minutes'/><parameter type='int' name='seconds'/><parameter type='int' name='milliseconds'/><parameter type='int' name='timezone'/></method><method return='javax.xml.datatype.DatatypeFactory' static='true' name='newInstance' api_added='9'><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/><exception type='javax.xml.datatype.DatatypeConfigurationException' name='DatatypeConfigurationException'/></method></class><class extends='java.lang.Object' abstract='true' name='Duration' api_added='8'><constructor type='javax.xml.datatype.Duration' name='Duration' api_added='8'/><method return='javax.xml.datatype.Duration' abstract='true' name='add' api_added='8'><parameter type='javax.xml.datatype.Duration' name='rhs'/></method><method abstract='true' name='addTo' api_added='8'><parameter type='java.util.Calendar' name='calendar'/></method><method name='addTo' api_added='8'><parameter type='java.util.Date' name='date'/></method><method return='int' abstract='true' name='compare' api_added='8'><parameter type='javax.xml.datatype.Duration' name='duration'/></method><method return='int' name='getDays' api_added='8'/><method return='java.lang.Number' abstract='true' name='getField' api_added='8'><parameter type='javax.xml.datatype.DatatypeConstants.Field' name='field'/></method><method return='int' name='getHours' api_added='8'/><method return='int' name='getMinutes' api_added='8'/><method return='int' name='getMonths' api_added='8'/><method return='int' name='getSeconds' api_added='8'/><method return='int' abstract='true' name='getSign' api_added='8'/><method return='long' name='getTimeInMillis' api_added='8'><parameter type='java.util.Calendar' name='startInstant'/></method><method return='long' name='getTimeInMillis' api_added='8'><parameter type='java.util.Date' name='startInstant'/></method><method return='javax.xml.namespace.QName' name='getXMLSchemaType' api_added='8'/><method return='int' name='getYears' api_added='8'/><method return='int' abstract='true' name='hashCode' api_added='8'/><method return='boolean' name='isLongerThan' api_added='8'><parameter type='javax.xml.datatype.Duration' name='duration'/></method><method return='boolean' abstract='true' name='isSet' api_added='8'><parameter type='javax.xml.datatype.DatatypeConstants.Field' name='field'/></method><method return='boolean' name='isShorterThan' api_added='8'><parameter type='javax.xml.datatype.Duration' name='duration'/></method><method return='javax.xml.datatype.Duration' name='multiply' api_added='8'><parameter type='int' name='factor'/></method><method return='javax.xml.datatype.Duration' abstract='true' name='multiply' api_added='8'><parameter type='java.math.BigDecimal' name='factor'/></method><method return='javax.xml.datatype.Duration' abstract='true' name='negate' api_added='8'/><method return='javax.xml.datatype.Duration' abstract='true' name='normalizeWith' api_added='8'><parameter type='java.util.Calendar' name='startTimeInstant'/></method><method return='javax.xml.datatype.Duration' name='subtract' api_added='8'><parameter type='javax.xml.datatype.Duration' name='rhs'/></method></class><class extends='java.lang.Object' abstract='true' name='XMLGregorianCalendar' api_added='8'><constructor type='javax.xml.datatype.XMLGregorianCalendar' name='XMLGregorianCalendar' api_added='8'/><method abstract='true' name='add' api_added='8'><parameter type='javax.xml.datatype.Duration' name='duration'/></method><method abstract='true' name='clear' api_added='8'/><method return='java.lang.Object' abstract='true' name='clone' api_added='8'/><method return='int' abstract='true' name='compare' api_added='8'><parameter type='javax.xml.datatype.XMLGregorianCalendar' name='xmlGregorianCalendar'/></method><method return='int' abstract='true' name='getDay' api_added='8'/><method return='java.math.BigInteger' abstract='true' name='getEon' api_added='8'/><method return='java.math.BigInteger' abstract='true' name='getEonAndYear' api_added='8'/><method return='java.math.BigDecimal' abstract='true' name='getFractionalSecond' api_added='8'/><method return='int' abstract='true' name='getHour' api_added='8'/><method return='int' name='getMillisecond' api_added='8'/><method return='int' abstract='true' name='getMinute' api_added='8'/><method return='int' abstract='true' name='getMonth' api_added='8'/><method return='int' abstract='true' name='getSecond' api_added='8'/><method return='java.util.TimeZone' abstract='true' name='getTimeZone' api_added='8'><parameter type='int' name='defaultZoneoffset'/></method><method return='int' abstract='true' name='getTimezone' api_added='8'/><method return='javax.xml.namespace.QName' abstract='true' name='getXMLSchemaType' api_added='8'/><method return='int' abstract='true' name='getYear' api_added='8'/><method return='boolean' abstract='true' name='isValid' api_added='8'/><method return='javax.xml.datatype.XMLGregorianCalendar' abstract='true' name='normalize' api_added='8'/><method abstract='true' name='reset' api_added='8'/><method abstract='true' name='setDay' api_added='8'><parameter type='int' name='day'/></method><method abstract='true' name='setFractionalSecond' api_added='8'><parameter type='java.math.BigDecimal' name='fractional'/></method><method abstract='true' name='setHour' api_added='8'><parameter type='int' name='hour'/></method><method abstract='true' name='setMillisecond' api_added='8'><parameter type='int' name='millisecond'/></method><method abstract='true' name='setMinute' api_added='8'><parameter type='int' name='minute'/></method><method abstract='true' name='setMonth' api_added='8'><parameter type='int' name='month'/></method><method abstract='true' name='setSecond' api_added='8'><parameter type='int' name='second'/></method><method name='setTime' api_added='8'><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/></method><method name='setTime' api_added='8'><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/><parameter type='java.math.BigDecimal' name='fractional'/></method><method name='setTime' api_added='8'><parameter type='int' name='hour'/><parameter type='int' name='minute'/><parameter type='int' name='second'/><parameter type='int' name='millisecond'/></method><method abstract='true' name='setTimezone' api_added='8'><parameter type='int' name='offset'/></method><method abstract='true' name='setYear' api_added='8'><parameter type='java.math.BigInteger' name='year'/></method><method abstract='true' name='setYear' api_added='8'><parameter type='int' name='year'/></method><method return='java.util.GregorianCalendar' abstract='true' name='toGregorianCalendar' api_added='8'/><method return='java.util.GregorianCalendar' abstract='true' name='toGregorianCalendar' api_added='8'><parameter type='java.util.TimeZone' name='timezone'/><parameter type='java.util.Locale' name='aLocale'/><parameter type='javax.xml.datatype.XMLGregorianCalendar' name='defaults'/></method><method return='java.lang.String' abstract='true' name='toXMLFormat' api_added='8'/></class></package><package name='javax.xml.namespace' api_added='8'><class extends='java.lang.Object' name='QName' api_added='8'><constructor type='javax.xml.namespace.QName' name='QName' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localPart'/></constructor><constructor type='javax.xml.namespace.QName' name='QName' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='localPart'/><parameter type='java.lang.String' name='prefix'/></constructor><constructor type='javax.xml.namespace.QName' name='QName' api_added='8'><parameter type='java.lang.String' name='localPart'/></constructor><method return='boolean' name='equals' api_added='8' final='true'><parameter type='java.lang.Object' name='objectToTest'/></method><method return='java.lang.String' name='getLocalPart' api_added='8'/><method return='java.lang.String' name='getNamespaceURI' api_added='8'/><method return='java.lang.String' name='getPrefix' api_added='8'/><method return='int' name='hashCode' api_added='8' final='true'/><method return='javax.xml.namespace.QName' static='true' name='valueOf' api_added='8'><parameter type='java.lang.String' name='qNameAsString'/></method></class><interface abstract='true' name='NamespaceContext' api_added='8'><method return='java.lang.String' abstract='true' name='getNamespaceURI' api_added='8'><parameter type='java.lang.String' name='prefix'/></method><method return='java.lang.String' abstract='true' name='getPrefix' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/></method><method return='java.util.Iterator' abstract='true' name='getPrefixes' api_added='8'><parameter type='java.lang.String' name='namespaceURI'/></method></interface></package><package name='javax.xml.transform' api_added='8'><class extends='java.lang.Object' name='OutputKeys' api_added='8'/><class extends='java.lang.Object' abstract='true' name='Transformer' api_added='8'><constructor visibility='protected' type='javax.xml.transform.Transformer' name='Transformer' api_added='8'/><method abstract='true' name='clearParameters' api_added='8'/><method return='javax.xml.transform.ErrorListener' abstract='true' name='getErrorListener' api_added='8'/><method return='java.util.Properties' abstract='true' name='getOutputProperties' api_added='8'/><method return='java.lang.String' abstract='true' name='getOutputProperty' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='java.lang.Object' abstract='true' name='getParameter' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='javax.xml.transform.URIResolver' abstract='true' name='getURIResolver' api_added='8'/><method name='reset' api_added='8'/><method abstract='true' name='setErrorListener' api_added='8'><parameter type='javax.xml.transform.ErrorListener' name='listener'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method abstract='true' name='setOutputProperties' api_added='8'><parameter type='java.util.Properties' name='oformat'/></method><method abstract='true' name='setOutputProperty' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='value'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method abstract='true' name='setParameter' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method abstract='true' name='setURIResolver' api_added='8'><parameter type='javax.xml.transform.URIResolver' name='resolver'/></method><method abstract='true' name='transform' api_added='8'><parameter type='javax.xml.transform.Source' name='xmlSource'/><parameter type='javax.xml.transform.Result' name='outputTarget'/><exception type='javax.xml.transform.TransformerException' name='TransformerException'/></method></class><class extends='javax.xml.transform.TransformerException' name='TransformerConfigurationException' api_added='8'><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'/><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'><parameter type='java.lang.Throwable' name='e'/></constructor><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'><parameter type='java.lang.String' name='msg'/><parameter type='java.lang.Throwable' name='e'/></constructor><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='javax.xml.transform.SourceLocator' name='locator'/></constructor><constructor type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='javax.xml.transform.SourceLocator' name='locator'/><parameter type='java.lang.Throwable' name='e'/></constructor></class><class extends='java.lang.Exception' name='TransformerException' api_added='8'><constructor type='javax.xml.transform.TransformerException' name='TransformerException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.transform.TransformerException' name='TransformerException' api_added='8'><parameter type='java.lang.Throwable' name='e'/></constructor><constructor type='javax.xml.transform.TransformerException' name='TransformerException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='e'/></constructor><constructor type='javax.xml.transform.TransformerException' name='TransformerException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='javax.xml.transform.SourceLocator' name='locator'/></constructor><constructor type='javax.xml.transform.TransformerException' name='TransformerException' api_added='8'><parameter type='java.lang.String' name='message'/><parameter type='javax.xml.transform.SourceLocator' name='locator'/><parameter type='java.lang.Throwable' name='e'/></constructor><method return='java.lang.Throwable' name='getException' api_added='8'/><method return='java.lang.String' name='getLocationAsString' api_added='8'/><method return='javax.xml.transform.SourceLocator' name='getLocator' api_added='8'/><method return='java.lang.String' name='getMessageAndLocation' api_added='8'/><method name='setLocator' api_added='8'><parameter type='javax.xml.transform.SourceLocator' name='location'/></method></class><class extends='java.lang.Object' abstract='true' name='TransformerFactory' api_added='8'><constructor visibility='protected' type='javax.xml.transform.TransformerFactory' name='TransformerFactory' api_added='8'/><method return='javax.xml.transform.Source' abstract='true' name='getAssociatedStylesheet' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/><parameter type='java.lang.String' name='media'/><parameter type='java.lang.String' name='title'/><parameter type='java.lang.String' name='charset'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='java.lang.Object' abstract='true' name='getAttribute' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='javax.xml.transform.ErrorListener' abstract='true' name='getErrorListener' api_added='8'/><method return='boolean' abstract='true' name='getFeature' api_added='8'><parameter type='java.lang.String' name='name'/></method><method return='javax.xml.transform.URIResolver' abstract='true' name='getURIResolver' api_added='8'/><method return='javax.xml.transform.TransformerFactory' static='true' name='newInstance' api_added='8'><exception type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError'/></method><method return='javax.xml.transform.Templates' abstract='true' name='newTemplates' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='javax.xml.transform.Transformer' abstract='true' name='newTransformer' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='javax.xml.transform.Transformer' abstract='true' name='newTransformer' api_added='8'><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method abstract='true' name='setAttribute' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='value'/></method><method abstract='true' name='setErrorListener' api_added='8'><parameter type='javax.xml.transform.ErrorListener' name='listener'/></method><method abstract='true' name='setFeature' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method abstract='true' name='setURIResolver' api_added='8'><parameter type='javax.xml.transform.URIResolver' name='resolver'/></method><method return='javax.xml.transform.TransformerFactory' static='true' name='newInstance' api_added='9'><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/><exception type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError'/></method></class><class extends='java.lang.Error' name='TransformerFactoryConfigurationError' api_added='8'><constructor type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError' api_added='8'/><constructor type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError' api_added='8'><parameter type='java.lang.String' name='msg'/></constructor><constructor type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError' api_added='8'><parameter type='java.lang.Exception' name='e'/></constructor><constructor type='javax.xml.transform.TransformerFactoryConfigurationError' name='TransformerFactoryConfigurationError' api_added='8'><parameter type='java.lang.Exception' name='e'/><parameter type='java.lang.String' name='msg'/></constructor><method return='java.lang.Exception' name='getException' api_added='8'/></class><interface abstract='true' name='ErrorListener' api_added='8'><method abstract='true' name='error' api_added='8'><parameter type='javax.xml.transform.TransformerException' name='exception'/><exception type='javax.xml.transform.TransformerException' name='TransformerException'/></method><method abstract='true' name='fatalError' api_added='8'><parameter type='javax.xml.transform.TransformerException' name='exception'/><exception type='javax.xml.transform.TransformerException' name='TransformerException'/></method><method abstract='true' name='warning' api_added='8'><parameter type='javax.xml.transform.TransformerException' name='exception'/><exception type='javax.xml.transform.TransformerException' name='TransformerException'/></method></interface><interface abstract='true' name='Result' api_added='8'><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></interface><interface abstract='true' name='Source' api_added='8'><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></interface><interface abstract='true' name='SourceLocator' api_added='8'><method return='int' abstract='true' name='getColumnNumber' api_added='8'/><method return='int' abstract='true' name='getLineNumber' api_added='8'/><method return='java.lang.String' abstract='true' name='getPublicId' api_added='8'/><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/></interface><interface abstract='true' name='Templates' api_added='8'><method return='java.util.Properties' abstract='true' name='getOutputProperties' api_added='8'/><method return='javax.xml.transform.Transformer' abstract='true' name='newTransformer' api_added='8'><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method></interface><interface abstract='true' name='URIResolver' api_added='8'><method return='javax.xml.transform.Source' abstract='true' name='resolve' api_added='8'><parameter type='java.lang.String' name='href'/><parameter type='java.lang.String' name='base'/><exception type='javax.xml.transform.TransformerException' name='TransformerException'/></method></interface></package><package name='javax.xml.transform.dom' api_added='8'><class extends='java.lang.Object' name='DOMResult' api_added='8'><constructor type='javax.xml.transform.dom.DOMResult' name='DOMResult' api_added='8'/><constructor type='javax.xml.transform.dom.DOMResult' name='DOMResult' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/></constructor><constructor type='javax.xml.transform.dom.DOMResult' name='DOMResult' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='javax.xml.transform.dom.DOMResult' name='DOMResult' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/><parameter type='org.w3c.dom.Node' name='nextSibling'/></constructor><constructor type='javax.xml.transform.dom.DOMResult' name='DOMResult' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/><parameter type='org.w3c.dom.Node' name='nextSibling'/><parameter type='java.lang.String' name='systemId'/></constructor><method return='org.w3c.dom.Node' name='getNextSibling' api_added='8'/><method return='org.w3c.dom.Node' name='getNode' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method name='setNextSibling' api_added='8'><parameter type='org.w3c.dom.Node' name='nextSibling'/></method><method name='setNode' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></class><class extends='java.lang.Object' name='DOMSource' api_added='8'><constructor type='javax.xml.transform.dom.DOMSource' name='DOMSource' api_added='8'/><constructor type='javax.xml.transform.dom.DOMSource' name='DOMSource' api_added='8'><parameter type='org.w3c.dom.Node' name='n'/></constructor><constructor type='javax.xml.transform.dom.DOMSource' name='DOMSource' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/><parameter type='java.lang.String' name='systemID'/></constructor><method return='org.w3c.dom.Node' name='getNode' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method name='setNode' api_added='8'><parameter type='org.w3c.dom.Node' name='node'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemID'/></method></class><interface abstract='true' name='DOMLocator' api_added='8'><method return='org.w3c.dom.Node' abstract='true' name='getOriginatingNode' api_added='8'/></interface></package><package name='javax.xml.transform.sax' api_added='8'><class extends='java.lang.Object' name='SAXResult' api_added='8'><constructor type='javax.xml.transform.sax.SAXResult' name='SAXResult' api_added='8'/><constructor type='javax.xml.transform.sax.SAXResult' name='SAXResult' api_added='8'><parameter type='org.xml.sax.ContentHandler' name='handler'/></constructor><method return='org.xml.sax.ContentHandler' name='getHandler' api_added='8'/><method return='org.xml.sax.ext.LexicalHandler' name='getLexicalHandler' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method name='setHandler' api_added='8'><parameter type='org.xml.sax.ContentHandler' name='handler'/></method><method name='setLexicalHandler' api_added='8'><parameter type='org.xml.sax.ext.LexicalHandler' name='handler'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></class><class extends='java.lang.Object' name='SAXSource' api_added='8'><constructor type='javax.xml.transform.sax.SAXSource' name='SAXSource' api_added='8'/><constructor type='javax.xml.transform.sax.SAXSource' name='SAXSource' api_added='8'><parameter type='org.xml.sax.XMLReader' name='reader'/><parameter type='org.xml.sax.InputSource' name='inputSource'/></constructor><constructor type='javax.xml.transform.sax.SAXSource' name='SAXSource' api_added='8'><parameter type='org.xml.sax.InputSource' name='inputSource'/></constructor><method return='org.xml.sax.InputSource' name='getInputSource' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method return='org.xml.sax.XMLReader' name='getXMLReader' api_added='8'/><method name='setInputSource' api_added='8'><parameter type='org.xml.sax.InputSource' name='inputSource'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method><method name='setXMLReader' api_added='8'><parameter type='org.xml.sax.XMLReader' name='reader'/></method><method return='org.xml.sax.InputSource' static='true' name='sourceToInputSource' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/></method></class><class extends='javax.xml.transform.TransformerFactory' abstract='true' name='SAXTransformerFactory' api_added='8'><constructor visibility='protected' type='javax.xml.transform.sax.SAXTransformerFactory' name='SAXTransformerFactory' api_added='8'/><method return='javax.xml.transform.sax.TemplatesHandler' abstract='true' name='newTemplatesHandler' api_added='8'><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='javax.xml.transform.sax.TransformerHandler' abstract='true' name='newTransformerHandler' api_added='8'><parameter type='javax.xml.transform.Source' name='src'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='javax.xml.transform.sax.TransformerHandler' abstract='true' name='newTransformerHandler' api_added='8'><parameter type='javax.xml.transform.Templates' name='templates'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='javax.xml.transform.sax.TransformerHandler' abstract='true' name='newTransformerHandler' api_added='8'><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='org.xml.sax.XMLFilter' abstract='true' name='newXMLFilter' api_added='8'><parameter type='javax.xml.transform.Source' name='src'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method><method return='org.xml.sax.XMLFilter' abstract='true' name='newXMLFilter' api_added='8'><parameter type='javax.xml.transform.Templates' name='templates'/><exception type='javax.xml.transform.TransformerConfigurationException' name='TransformerConfigurationException'/></method></class><interface abstract='true' name='TemplatesHandler' api_added='8'><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method return='javax.xml.transform.Templates' abstract='true' name='getTemplates' api_added='8'/><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemID'/></method></interface><interface abstract='true' name='TransformerHandler' api_added='8'><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method return='javax.xml.transform.Transformer' abstract='true' name='getTransformer' api_added='8'/><method abstract='true' name='setResult' api_added='8'><parameter type='javax.xml.transform.Result' name='result'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemID'/></method></interface></package><package name='javax.xml.transform.stream' api_added='8'><class extends='java.lang.Object' name='StreamResult' api_added='8'><constructor type='javax.xml.transform.stream.StreamResult' name='StreamResult' api_added='8'/><constructor type='javax.xml.transform.stream.StreamResult' name='StreamResult' api_added='8'><parameter type='java.io.OutputStream' name='outputStream'/></constructor><constructor type='javax.xml.transform.stream.StreamResult' name='StreamResult' api_added='8'><parameter type='java.io.Writer' name='writer'/></constructor><constructor type='javax.xml.transform.stream.StreamResult' name='StreamResult' api_added='8'><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='javax.xml.transform.stream.StreamResult' name='StreamResult' api_added='8'><parameter type='java.io.File' name='f'/></constructor><method return='java.io.OutputStream' name='getOutputStream' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method return='java.io.Writer' name='getWriter' api_added='8'/><method name='setOutputStream' api_added='8'><parameter type='java.io.OutputStream' name='outputStream'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method><method name='setSystemId' api_added='8'><parameter type='java.io.File' name='f'/></method><method name='setWriter' api_added='8'><parameter type='java.io.Writer' name='writer'/></method></class><class extends='java.lang.Object' name='StreamSource' api_added='8'><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'/><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.io.InputStream' name='inputStream'/></constructor><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.io.InputStream' name='inputStream'/><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.io.Reader' name='reader'/></constructor><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.io.Reader' name='reader'/><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.lang.String' name='systemId'/></constructor><constructor type='javax.xml.transform.stream.StreamSource' name='StreamSource' api_added='8'><parameter type='java.io.File' name='f'/></constructor><method return='java.io.InputStream' name='getInputStream' api_added='8'/><method return='java.lang.String' name='getPublicId' api_added='8'/><method return='java.io.Reader' name='getReader' api_added='8'/><method return='java.lang.String' name='getSystemId' api_added='8'/><method name='setInputStream' api_added='8'><parameter type='java.io.InputStream' name='inputStream'/></method><method name='setPublicId' api_added='8'><parameter type='java.lang.String' name='publicId'/></method><method name='setReader' api_added='8'><parameter type='java.io.Reader' name='reader'/></method><method name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method><method name='setSystemId' api_added='8'><parameter type='java.io.File' name='f'/></method></class></package><package name='javax.xml.validation' api_added='8'><class extends='java.lang.Object' abstract='true' name='Schema' api_added='8'><constructor visibility='protected' type='javax.xml.validation.Schema' name='Schema' api_added='8'/><method return='javax.xml.validation.Validator' abstract='true' name='newValidator' api_added='8'/><method return='javax.xml.validation.ValidatorHandler' abstract='true' name='newValidatorHandler' api_added='8'/></class><class extends='java.lang.Object' abstract='true' name='SchemaFactory' api_added='8'><constructor visibility='protected' type='javax.xml.validation.SchemaFactory' name='SchemaFactory' api_added='8'/><method return='org.xml.sax.ErrorHandler' abstract='true' name='getErrorHandler' api_added='8'/><method return='boolean' name='getFeature' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.Object' name='getProperty' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='org.w3c.dom.ls.LSResourceResolver' abstract='true' name='getResourceResolver' api_added='8'/><method return='boolean' abstract='true' name='isSchemaLanguageSupported' api_added='8'><parameter type='java.lang.String' name='schemaLanguage'/></method><method return='javax.xml.validation.SchemaFactory' static='true' name='newInstance' api_added='8' final='true'><parameter type='java.lang.String' name='schemaLanguage'/></method><method return='javax.xml.validation.Schema' name='newSchema' api_added='8'><parameter type='javax.xml.transform.Source' name='schema'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='javax.xml.validation.Schema' name='newSchema' api_added='8'><parameter type='java.io.File' name='schema'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='javax.xml.validation.Schema' name='newSchema' api_added='8'><parameter type='java.net.URL' name='schema'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='javax.xml.validation.Schema' abstract='true' name='newSchema' api_added='8'><parameter type='javax.xml.transform.Source[]' name='schemas'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method return='javax.xml.validation.Schema' abstract='true' name='newSchema' api_added='8'><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='setErrorHandler' api_added='8'><parameter type='org.xml.sax.ErrorHandler' name='errorHandler'/></method><method name='setFeature' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setProperty' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='object'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method abstract='true' name='setResourceResolver' api_added='8'><parameter type='org.w3c.dom.ls.LSResourceResolver' name='resourceResolver'/></method><method return='javax.xml.validation.SchemaFactory' static='true' name='newInstance' api_added='9'><parameter type='java.lang.String' name='schemaLanguage'/><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/></method></class><class extends='java.lang.Object' abstract='true' name='SchemaFactoryLoader' api_added='8'><constructor visibility='protected' type='javax.xml.validation.SchemaFactoryLoader' name='SchemaFactoryLoader' api_added='8'/><method return='javax.xml.validation.SchemaFactory' abstract='true' name='newFactory' api_added='8'><parameter type='java.lang.String' name='schemaLanguage'/></method></class><class extends='java.lang.Object' abstract='true' name='TypeInfoProvider' api_added='8'><constructor visibility='protected' type='javax.xml.validation.TypeInfoProvider' name='TypeInfoProvider' api_added='8'/><method return='org.w3c.dom.TypeInfo' abstract='true' name='getAttributeTypeInfo' api_added='8'><parameter type='int' name='index'/></method><method return='org.w3c.dom.TypeInfo' abstract='true' name='getElementTypeInfo' api_added='8'/><method return='boolean' abstract='true' name='isIdAttribute' api_added='8'><parameter type='int' name='index'/></method><method return='boolean' abstract='true' name='isSpecified' api_added='8'><parameter type='int' name='index'/></method></class><class extends='java.lang.Object' abstract='true' name='Validator' api_added='8'><constructor visibility='protected' type='javax.xml.validation.Validator' name='Validator' api_added='8'/><method return='org.xml.sax.ErrorHandler' abstract='true' name='getErrorHandler' api_added='8'/><method return='boolean' name='getFeature' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.Object' name='getProperty' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='org.w3c.dom.ls.LSResourceResolver' abstract='true' name='getResourceResolver' api_added='8'/><method abstract='true' name='reset' api_added='8'/><method abstract='true' name='setErrorHandler' api_added='8'><parameter type='org.xml.sax.ErrorHandler' name='errorHandler'/></method><method name='setFeature' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setProperty' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='object'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method abstract='true' name='setResourceResolver' api_added='8'><parameter type='org.w3c.dom.ls.LSResourceResolver' name='resourceResolver'/></method><method name='validate' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method><method abstract='true' name='validate' api_added='8'><parameter type='javax.xml.transform.Source' name='source'/><parameter type='javax.xml.transform.Result' name='result'/><exception type='java.io.IOException' name='IOException'/><exception type='org.xml.sax.SAXException' name='SAXException'/></method></class><class extends='java.lang.Object' abstract='true' name='ValidatorHandler' api_added='8'><constructor visibility='protected' type='javax.xml.validation.ValidatorHandler' name='ValidatorHandler' api_added='8'/><method return='org.xml.sax.ContentHandler' abstract='true' name='getContentHandler' api_added='8'/><method return='org.xml.sax.ErrorHandler' abstract='true' name='getErrorHandler' api_added='8'/><method return='boolean' name='getFeature' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='java.lang.Object' name='getProperty' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method return='org.w3c.dom.ls.LSResourceResolver' abstract='true' name='getResourceResolver' api_added='8'/><method return='javax.xml.validation.TypeInfoProvider' abstract='true' name='getTypeInfoProvider' api_added='8'/><method abstract='true' name='setContentHandler' api_added='8'><parameter type='org.xml.sax.ContentHandler' name='receiver'/></method><method abstract='true' name='setErrorHandler' api_added='8'><parameter type='org.xml.sax.ErrorHandler' name='errorHandler'/></method><method name='setFeature' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method name='setProperty' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='java.lang.Object' name='object'/><exception type='org.xml.sax.SAXNotRecognizedException' name='SAXNotRecognizedException'/><exception type='org.xml.sax.SAXNotSupportedException' name='SAXNotSupportedException'/></method><method abstract='true' name='setResourceResolver' api_added='8'><parameter type='org.w3c.dom.ls.LSResourceResolver' name='resourceResolver'/></method></class></package><package name='javax.xml.xpath' api_added='8'><class extends='java.lang.Object' name='XPathConstants' api_added='8'/><class extends='java.lang.Exception' name='XPathException' api_added='8'><constructor type='javax.xml.xpath.XPathException' name='XPathException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.xpath.XPathException' name='XPathException' api_added='8'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='javax.xml.xpath.XPathException' name='XPathExpressionException' api_added='8'><constructor type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException' api_added='8'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' abstract='true' name='XPathFactory' api_added='8'><constructor visibility='protected' type='javax.xml.xpath.XPathFactory' name='XPathFactory' api_added='8'/><method return='boolean' abstract='true' name='getFeature' api_added='8'><parameter type='java.lang.String' name='name'/><exception type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException'/></method><method return='boolean' abstract='true' name='isObjectModelSupported' api_added='8'><parameter type='java.lang.String' name='objectModel'/></method><method return='javax.xml.xpath.XPathFactory' static='true' name='newInstance' api_added='8' final='true'/><method return='javax.xml.xpath.XPathFactory' static='true' name='newInstance' api_added='8' final='true'><parameter type='java.lang.String' name='uri'/><exception type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException'/></method><method return='javax.xml.xpath.XPathFactory' static='true' name='newInstance' api_added='8'><parameter type='java.lang.String' name='uri'/><parameter type='java.lang.String' name='factoryClassName'/><parameter type='java.lang.ClassLoader' name='classLoader'/><exception type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException'/></method><method return='javax.xml.xpath.XPath' abstract='true' name='newXPath' api_added='8'/><method abstract='true' name='setFeature' api_added='8'><parameter type='java.lang.String' name='name'/><parameter type='boolean' name='value'/><exception type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException'/></method><method abstract='true' name='setXPathFunctionResolver' api_added='8'><parameter type='javax.xml.xpath.XPathFunctionResolver' name='resolver'/></method><method abstract='true' name='setXPathVariableResolver' api_added='8'><parameter type='javax.xml.xpath.XPathVariableResolver' name='resolver'/></method></class><class extends='javax.xml.xpath.XPathException' name='XPathFactoryConfigurationException' api_added='8'><constructor type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.xpath.XPathFactoryConfigurationException' name='XPathFactoryConfigurationException' api_added='8'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='javax.xml.xpath.XPathExpressionException' name='XPathFunctionException' api_added='8'><constructor type='javax.xml.xpath.XPathFunctionException' name='XPathFunctionException' api_added='8'><parameter type='java.lang.String' name='message'/></constructor><constructor type='javax.xml.xpath.XPathFunctionException' name='XPathFunctionException' api_added='8'><parameter type='java.lang.Throwable' name='cause'/></constructor></class><interface abstract='true' name='XPath' api_added='8'><method return='javax.xml.xpath.XPathExpression' abstract='true' name='compile' api_added='8'><parameter type='java.lang.String' name='expression'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.Object' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.String' name='expression'/><parameter type='java.lang.Object' name='item'/><parameter type='javax.xml.namespace.QName' name='returnType'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.String' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.String' name='expression'/><parameter type='java.lang.Object' name='item'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.Object' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.String' name='expression'/><parameter type='org.xml.sax.InputSource' name='source'/><parameter type='javax.xml.namespace.QName' name='returnType'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.String' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.String' name='expression'/><parameter type='org.xml.sax.InputSource' name='source'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='javax.xml.namespace.NamespaceContext' abstract='true' name='getNamespaceContext' api_added='8'/><method return='javax.xml.xpath.XPathFunctionResolver' abstract='true' name='getXPathFunctionResolver' api_added='8'/><method return='javax.xml.xpath.XPathVariableResolver' abstract='true' name='getXPathVariableResolver' api_added='8'/><method abstract='true' name='reset' api_added='8'/><method abstract='true' name='setNamespaceContext' api_added='8'><parameter type='javax.xml.namespace.NamespaceContext' name='nsContext'/></method><method abstract='true' name='setXPathFunctionResolver' api_added='8'><parameter type='javax.xml.xpath.XPathFunctionResolver' name='resolver'/></method><method abstract='true' name='setXPathVariableResolver' api_added='8'><parameter type='javax.xml.xpath.XPathVariableResolver' name='resolver'/></method></interface><interface abstract='true' name='XPathExpression' api_added='8'><method return='java.lang.Object' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.Object' name='item'/><parameter type='javax.xml.namespace.QName' name='returnType'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.String' abstract='true' name='evaluate' api_added='8'><parameter type='java.lang.Object' name='item'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.Object' abstract='true' name='evaluate' api_added='8'><parameter type='org.xml.sax.InputSource' name='source'/><parameter type='javax.xml.namespace.QName' name='returnType'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method><method return='java.lang.String' abstract='true' name='evaluate' api_added='8'><parameter type='org.xml.sax.InputSource' name='source'/><exception type='javax.xml.xpath.XPathExpressionException' name='XPathExpressionException'/></method></interface><interface abstract='true' name='XPathFunction' api_added='8'><method return='java.lang.Object' abstract='true' name='evaluate' api_added='8'><parameter type='java.util.List' name='args'/><exception type='javax.xml.xpath.XPathFunctionException' name='XPathFunctionException'/></method></interface><interface abstract='true' name='XPathFunctionResolver' api_added='8'><method return='javax.xml.xpath.XPathFunction' abstract='true' name='resolveFunction' api_added='8'><parameter type='javax.xml.namespace.QName' name='functionName'/><parameter type='int' name='arity'/></method></interface><interface abstract='true' name='XPathVariableResolver' api_added='8'><method return='java.lang.Object' abstract='true' name='resolveVariable' api_added='8'><parameter type='javax.xml.namespace.QName' name='variableName'/></method></interface></package><package name='org.w3c.dom.ls' api_added='8'><class extends='java.lang.RuntimeException' name='LSException' api_added='8'><constructor type='org.w3c.dom.ls.LSException' name='LSException' api_added='8'><parameter type='short' name='code'/><parameter type='java.lang.String' name='message'/></constructor></class><interface abstract='true' name='DOMImplementationLS' api_added='8'><method return='org.w3c.dom.ls.LSInput' abstract='true' name='createLSInput' api_added='8'/><method return='org.w3c.dom.ls.LSOutput' abstract='true' name='createLSOutput' api_added='8'/><method return='org.w3c.dom.ls.LSParser' abstract='true' name='createLSParser' api_added='8'><parameter type='short' name='mode'/><parameter type='java.lang.String' name='schemaType'/><exception type='org.w3c.dom.DOMException' name='DOMException'/></method><method return='org.w3c.dom.ls.LSSerializer' abstract='true' name='createLSSerializer' api_added='8'/></interface><interface abstract='true' name='LSInput' api_added='8'><method return='java.lang.String' abstract='true' name='getBaseURI' api_added='8'/><method return='java.io.InputStream' abstract='true' name='getByteStream' api_added='8'/><method return='boolean' abstract='true' name='getCertifiedText' api_added='8'/><method return='java.io.Reader' abstract='true' name='getCharacterStream' api_added='8'/><method return='java.lang.String' abstract='true' name='getEncoding' api_added='8'/><method return='java.lang.String' abstract='true' name='getPublicId' api_added='8'/><method return='java.lang.String' abstract='true' name='getStringData' api_added='8'/><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method abstract='true' name='setBaseURI' api_added='8'><parameter type='java.lang.String' name='baseURI'/></method><method abstract='true' name='setByteStream' api_added='8'><parameter type='java.io.InputStream' name='byteStream'/></method><method abstract='true' name='setCertifiedText' api_added='8'><parameter type='boolean' name='certifiedText'/></method><method abstract='true' name='setCharacterStream' api_added='8'><parameter type='java.io.Reader' name='characterStream'/></method><method abstract='true' name='setEncoding' api_added='8'><parameter type='java.lang.String' name='encoding'/></method><method abstract='true' name='setPublicId' api_added='8'><parameter type='java.lang.String' name='publicId'/></method><method abstract='true' name='setStringData' api_added='8'><parameter type='java.lang.String' name='stringData'/></method><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></interface><interface abstract='true' name='LSOutput' api_added='8'><method return='java.io.OutputStream' abstract='true' name='getByteStream' api_added='8'/><method return='java.io.Writer' abstract='true' name='getCharacterStream' api_added='8'/><method return='java.lang.String' abstract='true' name='getEncoding' api_added='8'/><method return='java.lang.String' abstract='true' name='getSystemId' api_added='8'/><method abstract='true' name='setByteStream' api_added='8'><parameter type='java.io.OutputStream' name='byteStream'/></method><method abstract='true' name='setCharacterStream' api_added='8'><parameter type='java.io.Writer' name='characterStream'/></method><method abstract='true' name='setEncoding' api_added='8'><parameter type='java.lang.String' name='encoding'/></method><method abstract='true' name='setSystemId' api_added='8'><parameter type='java.lang.String' name='systemId'/></method></interface><interface abstract='true' name='LSParser' api_added='8'><method abstract='true' name='abort' api_added='8'/><method return='boolean' abstract='true' name='getAsync' api_added='8'/><method return='boolean' abstract='true' name='getBusy' api_added='8'/><method return='org.w3c.dom.DOMConfiguration' abstract='true' name='getDomConfig' api_added='8'/><method return='org.w3c.dom.ls.LSParserFilter' abstract='true' name='getFilter' api_added='8'/><method return='org.w3c.dom.Document' abstract='true' name='parse' api_added='8'><parameter type='org.w3c.dom.ls.LSInput' name='input'/><exception type='org.w3c.dom.DOMException' name='DOMException'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method><method return='org.w3c.dom.Document' abstract='true' name='parseURI' api_added='8'><parameter type='java.lang.String' name='uri'/><exception type='org.w3c.dom.DOMException' name='DOMException'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method><method return='org.w3c.dom.Node' abstract='true' name='parseWithContext' api_added='8'><parameter type='org.w3c.dom.ls.LSInput' name='input'/><parameter type='org.w3c.dom.Node' name='contextArg'/><parameter type='short' name='action'/><exception type='org.w3c.dom.DOMException' name='DOMException'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method><method abstract='true' name='setFilter' api_added='8'><parameter type='org.w3c.dom.ls.LSParserFilter' name='filter'/></method></interface><interface abstract='true' name='LSParserFilter' api_added='8'><method return='short' abstract='true' name='acceptNode' api_added='8'><parameter type='org.w3c.dom.Node' name='nodeArg'/></method><method return='int' abstract='true' name='getWhatToShow' api_added='8'/><method return='short' abstract='true' name='startElement' api_added='8'><parameter type='org.w3c.dom.Element' name='elementArg'/></method></interface><interface abstract='true' name='LSResourceResolver' api_added='8'><method return='org.w3c.dom.ls.LSInput' abstract='true' name='resolveResource' api_added='8'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='namespaceURI'/><parameter type='java.lang.String' name='publicId'/><parameter type='java.lang.String' name='systemId'/><parameter type='java.lang.String' name='baseURI'/></method></interface><interface abstract='true' name='LSSerializer' api_added='8'><method return='org.w3c.dom.DOMConfiguration' abstract='true' name='getDomConfig' api_added='8'/><method return='java.lang.String' abstract='true' name='getNewLine' api_added='8'/><method abstract='true' name='setNewLine' api_added='8'><parameter type='java.lang.String' name='newLine'/></method><method return='boolean' abstract='true' name='write' api_added='8'><parameter type='org.w3c.dom.Node' name='nodeArg'/><parameter type='org.w3c.dom.ls.LSOutput' name='destination'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method><method return='java.lang.String' abstract='true' name='writeToString' api_added='8'><parameter type='org.w3c.dom.Node' name='nodeArg'/><exception type='org.w3c.dom.DOMException' name='DOMException'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method><method return='boolean' abstract='true' name='writeToURI' api_added='8'><parameter type='org.w3c.dom.Node' name='nodeArg'/><parameter type='java.lang.String' name='uri'/><exception type='org.w3c.dom.ls.LSException' name='LSException'/></method></interface></package><package name='android.media.audiofx' api_added='9'><class extends='java.lang.Object' name='AudioEffect' api_added='9'><method return='android.media.audiofx.AudioEffect.Descriptor' name='getDescriptor' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='boolean' name='getEnabled' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='getId' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='boolean' name='hasControl' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='android.media.audiofx.AudioEffect.Descriptor[]' static='true' name='queryEffects' api_added='9'/><method name='release' api_added='9'/><method name='setControlStatusListener' api_added='9'><parameter type='android.media.audiofx.AudioEffect.OnControlStatusChangeListener' name='listener'/></method><method name='setEnableStatusListener' api_added='9'><parameter type='android.media.audiofx.AudioEffect.OnEnableStatusChangeListener' name='listener'/></method><method return='int' name='setEnabled' api_added='9'><parameter type='boolean' name='enabled'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method></class><class extends='java.lang.Object' static='true' name='AudioEffect.Descriptor' api_added='9'><constructor type='android.media.audiofx.AudioEffect.Descriptor' name='AudioEffect.Descriptor' api_added='9'/><constructor type='android.media.audiofx.AudioEffect.Descriptor' name='AudioEffect.Descriptor' api_added='9'><parameter type='java.lang.String' name='type'/><parameter type='java.lang.String' name='uuid'/><parameter type='java.lang.String' name='connectMode'/><parameter type='java.lang.String' name='name'/><parameter type='java.lang.String' name='implementor'/></constructor></class><class extends='android.media.audiofx.AudioEffect' name='BassBoost' api_added='9'><constructor type='android.media.audiofx.BassBoost' name='BassBoost' api_added='9'><parameter type='int' name='priority'/><parameter type='int' name='audioSession'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='android.media.audiofx.BassBoost.Settings' name='getProperties' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getRoundedStrength' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='boolean' name='getStrengthSupported' api_added='9'/><method name='setParameterListener' api_added='9'><parameter type='android.media.audiofx.BassBoost.OnParameterChangeListener' name='listener'/></method><method name='setProperties' api_added='9'><parameter type='android.media.audiofx.BassBoost.Settings' name='settings'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setStrength' api_added='9'><parameter type='short' name='strength'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' static='true' name='BassBoost.Settings' api_added='9'><constructor type='android.media.audiofx.BassBoost.Settings' name='BassBoost.Settings' api_added='9'/><constructor type='android.media.audiofx.BassBoost.Settings' name='BassBoost.Settings' api_added='9'><parameter type='java.lang.String' name='settings'/></constructor></class><class extends='android.media.audiofx.AudioEffect' name='EnvironmentalReverb' api_added='9'><constructor type='android.media.audiofx.EnvironmentalReverb' name='EnvironmentalReverb' api_added='9'><parameter type='int' name='priority'/><parameter type='int' name='audioSession'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='short' name='getDecayHFRatio' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int' name='getDecayTime' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getDensity' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getDiffusion' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='android.media.audiofx.EnvironmentalReverb.Settings' name='getProperties' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int' name='getReflectionsDelay' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getReflectionsLevel' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int' name='getReverbDelay' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getReverbLevel' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getRoomHFLevel' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getRoomLevel' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setDecayHFRatio' api_added='9'><parameter type='short' name='decayHFRatio'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setDecayTime' api_added='9'><parameter type='int' name='decayTime'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setDensity' api_added='9'><parameter type='short' name='density'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setDiffusion' api_added='9'><parameter type='short' name='diffusion'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setParameterListener' api_added='9'><parameter type='android.media.audiofx.EnvironmentalReverb.OnParameterChangeListener' name='listener'/></method><method name='setProperties' api_added='9'><parameter type='android.media.audiofx.EnvironmentalReverb.Settings' name='settings'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setReflectionsDelay' api_added='9'><parameter type='int' name='reflectionsDelay'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setReflectionsLevel' api_added='9'><parameter type='short' name='reflectionsLevel'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setReverbDelay' api_added='9'><parameter type='int' name='reverbDelay'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setReverbLevel' api_added='9'><parameter type='short' name='reverbLevel'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setRoomHFLevel' api_added='9'><parameter type='short' name='roomHF'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setRoomLevel' api_added='9'><parameter type='short' name='room'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' static='true' name='EnvironmentalReverb.Settings' api_added='9'><constructor type='android.media.audiofx.EnvironmentalReverb.Settings' name='EnvironmentalReverb.Settings' api_added='9'/><constructor type='android.media.audiofx.EnvironmentalReverb.Settings' name='EnvironmentalReverb.Settings' api_added='9'><parameter type='java.lang.String' name='settings'/></constructor></class><class extends='android.media.audiofx.AudioEffect' name='Equalizer' api_added='9'><constructor type='android.media.audiofx.Equalizer' name='Equalizer' api_added='9'><parameter type='int' name='priority'/><parameter type='int' name='audioSession'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='short' name='getBand' api_added='9'><parameter type='int' name='frequency'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int[]' name='getBandFreqRange' api_added='9'><parameter type='short' name='band'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getBandLevel' api_added='9'><parameter type='short' name='band'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short[]' name='getBandLevelRange' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='int' name='getCenterFreq' api_added='9'><parameter type='short' name='band'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getCurrentPreset' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getNumberOfBands' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getNumberOfPresets' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='java.lang.String' name='getPresetName' api_added='9'><parameter type='short' name='preset'/></method><method return='android.media.audiofx.Equalizer.Settings' name='getProperties' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setBandLevel' api_added='9'><parameter type='short' name='band'/><parameter type='short' name='level'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setParameterListener' api_added='9'><parameter type='android.media.audiofx.Equalizer.OnParameterChangeListener' name='listener'/></method><method name='setProperties' api_added='9'><parameter type='android.media.audiofx.Equalizer.Settings' name='settings'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='usePreset' api_added='9'><parameter type='short' name='preset'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' static='true' name='Equalizer.Settings' api_added='9'><constructor type='android.media.audiofx.Equalizer.Settings' name='Equalizer.Settings' api_added='9'/><constructor type='android.media.audiofx.Equalizer.Settings' name='Equalizer.Settings' api_added='9'><parameter type='java.lang.String' name='settings'/></constructor></class><class extends='android.media.audiofx.AudioEffect' name='PresetReverb' api_added='9'><constructor type='android.media.audiofx.PresetReverb' name='PresetReverb' api_added='9'><parameter type='int' name='priority'/><parameter type='int' name='audioSession'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='short' name='getPreset' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='android.media.audiofx.PresetReverb.Settings' name='getProperties' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setParameterListener' api_added='9'><parameter type='android.media.audiofx.PresetReverb.OnParameterChangeListener' name='listener'/></method><method name='setPreset' api_added='9'><parameter type='short' name='preset'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setProperties' api_added='9'><parameter type='android.media.audiofx.PresetReverb.Settings' name='settings'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' static='true' name='PresetReverb.Settings' api_added='9'><constructor type='android.media.audiofx.PresetReverb.Settings' name='PresetReverb.Settings' api_added='9'/><constructor type='android.media.audiofx.PresetReverb.Settings' name='PresetReverb.Settings' api_added='9'><parameter type='java.lang.String' name='settings'/></constructor></class><class extends='android.media.audiofx.AudioEffect' name='Virtualizer' api_added='9'><constructor type='android.media.audiofx.Virtualizer' name='Virtualizer' api_added='9'><parameter type='int' name='priority'/><parameter type='int' name='audioSession'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='android.media.audiofx.Virtualizer.Settings' name='getProperties' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='short' name='getRoundedStrength' api_added='9'><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method return='boolean' name='getStrengthSupported' api_added='9'/><method name='setParameterListener' api_added='9'><parameter type='android.media.audiofx.Virtualizer.OnParameterChangeListener' name='listener'/></method><method name='setProperties' api_added='9'><parameter type='android.media.audiofx.Virtualizer.Settings' name='settings'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method><method name='setStrength' api_added='9'><parameter type='short' name='strength'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></method></class><class extends='java.lang.Object' static='true' name='Virtualizer.Settings' api_added='9'><constructor type='android.media.audiofx.Virtualizer.Settings' name='Virtualizer.Settings' api_added='9'/><constructor type='android.media.audiofx.Virtualizer.Settings' name='Virtualizer.Settings' api_added='9'><parameter type='java.lang.String' name='settings'/></constructor></class><class extends='java.lang.Object' name='Visualizer' api_added='9'><constructor type='android.media.audiofx.Visualizer' name='Visualizer' api_added='9'><parameter type='int' name='audioSession'/><exception type='java.lang.RuntimeException' name='RuntimeException'/><exception type='java.lang.UnsupportedOperationException' name='UnsupportedOperationException'/></constructor><method return='int' name='getCaptureSize' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int[]' native='true' static='true' name='getCaptureSizeRange' api_added='9'/><method return='boolean' name='getEnabled' api_added='9'/><method return='int' name='getFft' api_added='9'><parameter type='byte[]' name='fft'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' native='true' static='true' name='getMaxCaptureRate' api_added='9'/><method return='int' name='getSamplingRate' api_added='9'><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='getWaveForm' api_added='9'><parameter type='byte[]' name='waveform'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method name='release' api_added='9'/><method return='int' name='setCaptureSize' api_added='9'><parameter type='int' name='size'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='setDataCaptureListener' api_added='9'><parameter type='android.media.audiofx.Visualizer.OnDataCaptureListener' name='listener'/><parameter type='int' name='rate'/><parameter type='boolean' name='waveform'/><parameter type='boolean' name='fft'/></method><method return='int' name='setEnabled' api_added='9'><parameter type='boolean' name='enabled'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='int' name='getScalingMode' api_added='16'/><method return='int' name='setScalingMode' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='android.media.audiofx.AudioEffect' name='AcousticEchoCanceler' api_added='16'><method return='android.media.audiofx.AcousticEchoCanceler' static='true' name='create' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' static='true' name='isAvailable' api_added='16'/></class><class extends='android.media.audiofx.AudioEffect' name='AutomaticGainControl' api_added='16'><method return='android.media.audiofx.AutomaticGainControl' static='true' name='create' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' static='true' name='isAvailable' api_added='16'/></class><class extends='android.media.audiofx.AudioEffect' name='NoiseSuppressor' api_added='16'><method return='android.media.audiofx.NoiseSuppressor' static='true' name='create' api_added='16'><parameter type='int' name='arg0'/></method><method return='boolean' static='true' name='isAvailable' api_added='16'/></class><interface abstract='true' static='true' name='AudioEffect.OnControlStatusChangeListener' api_added='9'><method abstract='true' name='onControlStatusChange' api_added='9'><parameter type='android.media.audiofx.AudioEffect' name='effect'/><parameter type='boolean' name='controlGranted'/></method></interface><interface abstract='true' static='true' name='AudioEffect.OnEnableStatusChangeListener' api_added='9'><method abstract='true' name='onEnableStatusChange' api_added='9'><parameter type='android.media.audiofx.AudioEffect' name='effect'/><parameter type='boolean' name='enabled'/></method></interface><interface abstract='true' static='true' name='BassBoost.OnParameterChangeListener' api_added='9'><method abstract='true' name='onParameterChange' api_added='9'><parameter type='android.media.audiofx.BassBoost' name='effect'/><parameter type='int' name='status'/><parameter type='int' name='param'/><parameter type='short' name='value'/></method></interface><interface abstract='true' static='true' name='EnvironmentalReverb.OnParameterChangeListener' api_added='9'><method abstract='true' name='onParameterChange' api_added='9'><parameter type='android.media.audiofx.EnvironmentalReverb' name='effect'/><parameter type='int' name='status'/><parameter type='int' name='param'/><parameter type='int' name='value'/></method></interface><interface abstract='true' static='true' name='Equalizer.OnParameterChangeListener' api_added='9'><method abstract='true' name='onParameterChange' api_added='9'><parameter type='android.media.audiofx.Equalizer' name='effect'/><parameter type='int' name='status'/><parameter type='int' name='param1'/><parameter type='int' name='param2'/><parameter type='int' name='value'/></method></interface><interface abstract='true' static='true' name='PresetReverb.OnParameterChangeListener' api_added='9'><method abstract='true' name='onParameterChange' api_added='9'><parameter type='android.media.audiofx.PresetReverb' name='effect'/><parameter type='int' name='status'/><parameter type='int' name='param'/><parameter type='short' name='value'/></method></interface><interface abstract='true' static='true' name='Virtualizer.OnParameterChangeListener' api_added='9'><method abstract='true' name='onParameterChange' api_added='9'><parameter type='android.media.audiofx.Virtualizer' name='effect'/><parameter type='int' name='status'/><parameter type='int' name='param'/><parameter type='short' name='value'/></method></interface><interface abstract='true' static='true' name='Visualizer.OnDataCaptureListener' api_added='9'><method abstract='true' name='onFftDataCapture' api_added='9'><parameter type='android.media.audiofx.Visualizer' name='visualizer'/><parameter type='byte[]' name='fft'/><parameter type='int' name='samplingRate'/></method><method abstract='true' name='onWaveFormDataCapture' api_added='9'><parameter type='android.media.audiofx.Visualizer' name='visualizer'/><parameter type='byte[]' name='waveform'/><parameter type='int' name='samplingRate'/></method></interface></package><package name='android.net.sip' api_added='9'><class extends='java.lang.Object' name='SipAudioCall' api_added='9'><constructor type='android.net.sip.SipAudioCall' name='SipAudioCall' api_added='9'><parameter type='android.content.Context' name='context'/><parameter type='android.net.sip.SipProfile' name='localProfile'/></constructor><method name='answerCall' api_added='9'><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='attachCall' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='java.lang.String' name='sessionDescription'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='close' api_added='9'/><method name='continueCall' api_added='9'><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='endCall' api_added='9'><exception type='android.net.sip.SipException' name='SipException'/></method><method return='android.net.sip.SipProfile' name='getLocalProfile' api_added='9'/><method return='android.net.sip.SipProfile' name='getPeerProfile' api_added='9'/><method return='int' name='getState' api_added='9'/><method name='holdCall' api_added='9'><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='boolean' name='isInCall' api_added='9'/><method return='boolean' name='isMuted' api_added='9'/><method return='boolean' name='isOnHold' api_added='9'/><method name='makeCall' api_added='9'><parameter type='android.net.sip.SipProfile' name='peerProfile'/><parameter type='android.net.sip.SipSession' name='sipSession'/><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='sendDtmf' api_added='9'><parameter type='int' name='code'/></method><method name='sendDtmf' api_added='9'><parameter type='int' name='code'/><parameter type='android.os.Message' name='result'/></method><method name='setListener' api_added='9'><parameter type='android.net.sip.SipAudioCall.Listener' name='listener'/></method><method name='setListener' api_added='9'><parameter type='android.net.sip.SipAudioCall.Listener' name='listener'/><parameter type='boolean' name='callbackImmediately'/></method><method name='setSpeakerMode' api_added='9'><parameter type='boolean' name='speakerMode'/></method><method name='startAudio' api_added='9'/><method name='toggleMute' api_added='9'/></class><class extends='java.lang.Object' static='true' name='SipAudioCall.Listener' api_added='9'><constructor type='android.net.sip.SipAudioCall.Listener' name='SipAudioCall.Listener' api_added='9'/><method name='onCallBusy' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onCallEnded' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onCallEstablished' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onCallHeld' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onCalling' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onChanged' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onError' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method><method name='onReadyToCall' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method><method name='onRinging' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/><parameter type='android.net.sip.SipProfile' name='caller'/></method><method name='onRingingBack' api_added='9'><parameter type='android.net.sip.SipAudioCall' name='call'/></method></class><class extends='java.lang.Object' name='SipErrorCode' api_added='9'><method return='java.lang.String' static='true' name='toString' api_added='9'><parameter type='int' name='errorCode'/></method></class><class extends='java.lang.Exception' name='SipException' api_added='9'><constructor type='android.net.sip.SipException' name='SipException' api_added='9'/><constructor type='android.net.sip.SipException' name='SipException' api_added='9'><parameter type='java.lang.String' name='message'/></constructor><constructor type='android.net.sip.SipException' name='SipException' api_added='9'><parameter type='java.lang.String' name='message'/><parameter type='java.lang.Throwable' name='cause'/></constructor></class><class extends='java.lang.Object' name='SipManager' api_added='9'><method name='close' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='android.net.sip.SipSession' name='createSipSession' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><parameter type='android.net.sip.SipSession.Listener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='java.lang.String' static='true' name='getCallId' api_added='9'><parameter type='android.content.Intent' name='incomingCallIntent'/></method><method return='java.lang.String' static='true' name='getOfferSessionDescription' api_added='9'><parameter type='android.content.Intent' name='incomingCallIntent'/></method><method return='android.net.sip.SipSession' name='getSessionFor' api_added='9'><parameter type='android.content.Intent' name='incomingCallIntent'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='boolean' static='true' name='isApiSupported' api_added='9'><parameter type='android.content.Context' name='context'/></method><method return='boolean' static='true' name='isIncomingCallIntent' api_added='9'><parameter type='android.content.Intent' name='intent'/></method><method return='boolean' name='isOpened' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='boolean' name='isRegistered' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='boolean' static='true' name='isSipWifiOnly' api_added='9'><parameter type='android.content.Context' name='context'/></method><method return='boolean' static='true' name='isVoipSupported' api_added='9'><parameter type='android.content.Context' name='context'/></method><method return='android.net.sip.SipAudioCall' name='makeAudioCall' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><parameter type='android.net.sip.SipProfile' name='peerProfile'/><parameter type='android.net.sip.SipAudioCall.Listener' name='listener'/><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='android.net.sip.SipAudioCall' name='makeAudioCall' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><parameter type='java.lang.String' name='peerProfileUri'/><parameter type='android.net.sip.SipAudioCall.Listener' name='listener'/><parameter type='int' name='timeout'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='android.net.sip.SipManager' static='true' name='newInstance' api_added='9'><parameter type='android.content.Context' name='context'/></method><method name='open' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='open' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><parameter type='android.app.PendingIntent' name='incomingCallPendingIntent'/><parameter type='android.net.sip.SipRegistrationListener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='register' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><parameter type='int' name='expiryTime'/><parameter type='android.net.sip.SipRegistrationListener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='setRegistrationListener' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><parameter type='android.net.sip.SipRegistrationListener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method><method return='android.net.sip.SipAudioCall' name='takeAudioCall' api_added='9'><parameter type='android.content.Intent' name='incomingCallIntent'/><parameter type='android.net.sip.SipAudioCall.Listener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method><method name='unregister' api_added='9'><parameter type='android.net.sip.SipProfile' name='localProfile'/><parameter type='android.net.sip.SipRegistrationListener' name='listener'/><exception type='android.net.sip.SipException' name='SipException'/></method></class><class extends='java.lang.Object' name='SipProfile' api_added='9'><method return='int' name='describeContents' api_added='9'/><method return='boolean' name='getAutoRegistration' api_added='9'/><method return='java.lang.String' name='getDisplayName' api_added='9'/><method return='java.lang.String' name='getPassword' api_added='9'/><method return='int' name='getPort' api_added='9'/><method return='java.lang.String' name='getProfileName' api_added='9'/><method return='java.lang.String' name='getProtocol' api_added='9'/><method return='java.lang.String' name='getProxyAddress' api_added='9'/><method return='boolean' name='getSendKeepAlive' api_added='9'/><method return='java.lang.String' name='getSipDomain' api_added='9'/><method return='java.lang.String' name='getUriString' api_added='9'/><method return='java.lang.String' name='getUserName' api_added='9'/><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='out'/><parameter type='int' name='flags'/></method><method return='java.lang.String' name='getAuthUserName' api_added='12'/></class><class extends='java.lang.Object' static='true' name='SipProfile.Builder' api_added='9'><constructor type='android.net.sip.SipProfile.Builder' name='SipProfile.Builder' api_added='9'><parameter type='android.net.sip.SipProfile' name='profile'/></constructor><constructor type='android.net.sip.SipProfile.Builder' name='SipProfile.Builder' api_added='9'><parameter type='java.lang.String' name='uriString'/><exception type='java.text.ParseException' name='ParseException'/></constructor><constructor type='android.net.sip.SipProfile.Builder' name='SipProfile.Builder' api_added='9'><parameter type='java.lang.String' name='username'/><parameter type='java.lang.String' name='serverDomain'/><exception type='java.text.ParseException' name='ParseException'/></constructor><method return='android.net.sip.SipProfile' name='build' api_added='9'/><method return='android.net.sip.SipProfile.Builder' name='setAutoRegistration' api_added='9'><parameter type='boolean' name='flag'/></method><method return='android.net.sip.SipProfile.Builder' name='setDisplayName' api_added='9'><parameter type='java.lang.String' name='displayName'/></method><method return='android.net.sip.SipProfile.Builder' name='setOutboundProxy' api_added='9'><parameter type='java.lang.String' name='outboundProxy'/></method><method return='android.net.sip.SipProfile.Builder' name='setPassword' api_added='9'><parameter type='java.lang.String' name='password'/></method><method return='android.net.sip.SipProfile.Builder' name='setPort' api_added='9'><parameter type='int' name='port'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='android.net.sip.SipProfile.Builder' name='setProfileName' api_added='9'><parameter type='java.lang.String' name='name'/></method><method return='android.net.sip.SipProfile.Builder' name='setProtocol' api_added='9'><parameter type='java.lang.String' name='protocol'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='android.net.sip.SipProfile.Builder' name='setSendKeepAlive' api_added='9'><parameter type='boolean' name='flag'/></method><method return='android.net.sip.SipProfile.Builder' name='setAuthUserName' api_added='12'><parameter type='java.lang.String' name='name'/></method></class><class extends='java.lang.Object' name='SipSession' api_added='9' final='true'><method name='answerCall' api_added='9'><parameter type='java.lang.String' name='sessionDescription'/><parameter type='int' name='timeout'/></method><method name='changeCall' api_added='9'><parameter type='java.lang.String' name='sessionDescription'/><parameter type='int' name='timeout'/></method><method name='endCall' api_added='9'/><method return='java.lang.String' name='getCallId' api_added='9'/><method return='java.lang.String' name='getLocalIp' api_added='9'/><method return='android.net.sip.SipProfile' name='getLocalProfile' api_added='9'/><method return='android.net.sip.SipProfile' name='getPeerProfile' api_added='9'/><method return='int' name='getState' api_added='9'/><method return='boolean' name='isInCall' api_added='9'/><method name='makeCall' api_added='9'><parameter type='android.net.sip.SipProfile' name='callee'/><parameter type='java.lang.String' name='sessionDescription'/><parameter type='int' name='timeout'/></method><method name='register' api_added='9'><parameter type='int' name='duration'/></method><method name='setListener' api_added='9'><parameter type='android.net.sip.SipSession.Listener' name='listener'/></method><method name='unregister' api_added='9'/></class><class extends='java.lang.Object' static='true' name='SipSession.Listener' api_added='9'><constructor type='android.net.sip.SipSession.Listener' name='SipSession.Listener' api_added='9'/><method name='onCallBusy' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method><method name='onCallChangeFailed' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method><method name='onCallEnded' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method><method name='onCallEstablished' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='java.lang.String' name='sessionDescription'/></method><method name='onCalling' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method><method name='onError' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method><method name='onRegistering' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method><method name='onRegistrationDone' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='int' name='duration'/></method><method name='onRegistrationFailed' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method><method name='onRegistrationTimeout' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method><method name='onRinging' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/><parameter type='android.net.sip.SipProfile' name='caller'/><parameter type='java.lang.String' name='sessionDescription'/></method><method name='onRingingBack' api_added='9'><parameter type='android.net.sip.SipSession' name='session'/></method></class><class extends='java.lang.Object' static='true' name='SipSession.State' api_added='9'><method return='java.lang.String' static='true' name='toString' api_added='9'><parameter type='int' name='state'/></method></class><interface abstract='true' name='SipRegistrationListener' api_added='9'><method abstract='true' name='onRegistering' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/></method><method abstract='true' name='onRegistrationDone' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><parameter type='long' name='expiryTime'/></method><method abstract='true' name='onRegistrationFailed' api_added='9'><parameter type='java.lang.String' name='localProfileUri'/><parameter type='int' name='errorCode'/><parameter type='java.lang.String' name='errorMessage'/></method></interface></package><package name='android.nfc' api_added='9'><class extends='java.lang.Exception' name='FormatException' api_added='9'><constructor type='android.nfc.FormatException' name='FormatException' api_added='9'/><constructor type='android.nfc.FormatException' name='FormatException' api_added='9'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='NdefMessage' api_added='9' final='true'><constructor type='android.nfc.NdefMessage' name='NdefMessage' api_added='9'><parameter type='byte[]' name='data'/><exception type='android.nfc.FormatException' name='FormatException'/></constructor><constructor type='android.nfc.NdefMessage' name='NdefMessage' api_added='9'><parameter type='android.nfc.NdefRecord[]' name='records'/></constructor><method return='int' name='describeContents' api_added='9'/><method return='android.nfc.NdefRecord[]' name='getRecords' api_added='9'/><method return='byte[]' name='toByteArray' api_added='9'/><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='int' name='getByteArrayLength' api_added='16'/></class><class extends='java.lang.Object' name='NdefRecord' api_added='9' final='true'><constructor type='android.nfc.NdefRecord' name='NdefRecord' api_added='9'><parameter type='short' name='tnf'/><parameter type='byte[]' name='type'/><parameter type='byte[]' name='id'/><parameter type='byte[]' name='payload'/></constructor><constructor type='android.nfc.NdefRecord' name='NdefRecord' api_added='9'><parameter type='byte[]' name='data'/><exception type='android.nfc.FormatException' name='FormatException'/></constructor><constructor type='android.nfc.deprecated NdefRecord' name='deprecated NdefRecord' api_added='16'><parameter type='byte[]' name='arg0'/></constructor><method return='int' name='describeContents' api_added='9'/><method return='byte[]' name='getId' api_added='9'/><method return='byte[]' name='getPayload' api_added='9'/><method return='short' name='getTnf' api_added='9'/><method return='byte[]' name='getType' api_added='9'/><method deprecated='16' return='byte[]' name='toByteArray' api_added='9'/><method name='writeToParcel' api_added='9'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method><method return='android.nfc.NdefRecord' static='true' name='createApplicationRecord' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='android.nfc.NdefRecord' static='true' name='createUri' api_added='14'><parameter type='android.net.Uri' name='arg0'/></method><method return='android.nfc.NdefRecord' static='true' name='createUri' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='android.nfc.NdefRecord' static='true' name='createExternal' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='byte[]' name='arg2'/></method><method return='android.nfc.NdefRecord' static='true' name='createMime' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='byte[]' name='arg1'/></method><method return='java.lang.String' name='toMimeType' api_added='16'/><method return='android.net.Uri' name='toUri' api_added='16'/></class><class extends='java.lang.Object' name='NfcAdapter' api_added='9' final='true'><method deprecated='10' return='android.nfc.NfcAdapter' api_removed='16' static='true' name='getDefaultAdapter' api_added='9'/><method return='boolean' name='isEnabled' api_added='9'/><method name='disableForegroundDispatch' api_added='10'><parameter type='android.app.Activity' name='activity'/></method><method deprecated='14' name='disableForegroundNdefPush' api_added='10'><parameter type='android.app.Activity' name='activity'/></method><method name='enableForegroundDispatch' api_added='10'><parameter type='android.app.Activity' name='activity'/><parameter type='android.app.PendingIntent' name='intent'/><parameter type='android.content.IntentFilter[]' name='filters'/><parameter type='java.lang.String[][]' name='techLists'/></method><method deprecated='14' name='enableForegroundNdefPush' api_added='10'><parameter type='android.app.Activity' name='activity'/><parameter type='android.nfc.NdefMessage' name='msg'/></method><method return='android.nfc.NfcAdapter' static='true' name='getDefaultAdapter' api_added='10'><parameter type='android.content.Context' name='context'/></method><method name='setNdefPushMessage' api_added='14'><parameter type='android.nfc.NdefMessage' name='arg0'/><parameter type='android.app.Activity' name='arg1'/><parameter type='android.app.Activity...' name='arg2'/></method><method name='setNdefPushMessageCallback' api_added='14'><parameter type='android.nfc.NfcAdapter.CreateNdefMessageCallback' name='arg0'/><parameter type='android.app.Activity' name='arg1'/><parameter type='android.app.Activity...' name='arg2'/></method><method name='setOnNdefPushCompleteCallback' api_added='14'><parameter type='android.nfc.NfcAdapter.OnNdefPushCompleteCallback' name='arg0'/><parameter type='android.app.Activity' name='arg1'/><parameter type='android.app.Activity...' name='arg2'/></method><method return='boolean' name='isNdefPushEnabled' api_added='16'/><method name='setBeamPushUris' api_added='16'><parameter type='android.net.Uri[]' name='arg0'/><parameter type='android.app.Activity' name='arg1'/></method><method name='setBeamPushUrisCallback' api_added='16'><parameter type='android.nfc.NfcAdapter.CreateBeamUrisCallback' name='arg0'/><parameter type='android.app.Activity' name='arg1'/></method></class><class extends='java.lang.Object' name='NfcManager' api_added='10' final='true'><method return='android.nfc.NfcAdapter' name='getDefaultAdapter' api_added='10'/></class><class extends='java.lang.Object' name='Tag' api_added='10' final='true'><method return='int' name='describeContents' api_added='10'/><method return='byte[]' name='getId' api_added='10'/><method return='java.lang.String[]' name='getTechList' api_added='10'/><method name='writeToParcel' api_added='10'><parameter type='android.os.Parcel' name='dest'/><parameter type='int' name='flags'/></method></class><class extends='java.io.IOException' name='TagLostException' api_added='10'><constructor type='android.nfc.TagLostException' name='TagLostException' api_added='10'/><constructor type='android.nfc.TagLostException' name='TagLostException' api_added='10'><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='NfcEvent' api_added='14' final='true'/><interface extends='java.lang.Object' abstract='true' static='true' name='NfcAdapter.CreateNdefMessageCallback' api_added='14'><method return='android.nfc.NdefMessage' abstract='true' name='createNdefMessage' api_added='14'><parameter type='android.nfc.NfcEvent' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='NfcAdapter.OnNdefPushCompleteCallback' api_added='14'><method abstract='true' name='onNdefPushComplete' api_added='14'><parameter type='android.nfc.NfcEvent' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='NfcAdapter.CreateBeamUrisCallback' api_added='16'><method return='android.net.Uri[]' abstract='true' name='createBeamUris' api_added='16'><parameter type='android.nfc.NfcEvent' name='arg0'/></method></interface></package><package name='android.os.storage' api_added='9'><class extends='java.lang.Object' abstract='true' name='OnObbStateChangeListener' api_added='9'><constructor type='android.os.storage.OnObbStateChangeListener' name='OnObbStateChangeListener' api_added='9'/><method name='onObbStateChange' api_added='9'><parameter type='java.lang.String' name='path'/><parameter type='int' name='state'/></method></class><class extends='java.lang.Object' name='StorageManager' api_added='9'><method return='java.lang.String' name='getMountedObbPath' api_added='9'><parameter type='java.lang.String' name='filename'/></method><method return='boolean' name='isObbMounted' api_added='9'><parameter type='java.lang.String' name='filename'/></method><method return='boolean' name='mountObb' api_added='9'><parameter type='java.lang.String' name='filename'/><parameter type='java.lang.String' name='key'/><parameter type='android.os.storage.OnObbStateChangeListener' name='listener'/></method><method return='boolean' name='unmountObb' api_added='9'><parameter type='java.lang.String' name='filename'/><parameter type='boolean' name='force'/><parameter type='android.os.storage.OnObbStateChangeListener' name='listener'/></method></class></package><package name='android.nfc.tech' api_added='10'><class visibility='' extends='java.lang.Object' abstract='true' name='BasicTagTechnology' api_added='10'><method name='close' api_added='10'><exception type='java.io.IOException' name='IOException'/></method><method name='connect' api_added='10'><exception type='java.io.IOException' name='IOException'/></method><method return='android.nfc.Tag' name='getTag' api_added='10'/><method return='boolean' name='isConnected' api_added='10'/></class><class extends='android.nfc.tech.BasicTagTechnology' name='IsoDep' api_added='10' final='true'><method return='android.nfc.tech.IsoDep' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='byte[]' name='getHiLayerResponse' api_added='10'/><method return='byte[]' name='getHistoricalBytes' api_added='10'/><method name='setTimeout' api_added='10'><parameter type='int' name='timeout'/></method><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/><method return='int' name='getTimeout' api_added='14'/><method return='boolean' name='isExtendedLengthApduSupported' api_added='16'/></class><class extends='android.nfc.tech.BasicTagTechnology' name='MifareClassic' api_added='10' final='true'><method return='boolean' name='authenticateSectorWithKeyA' api_added='10'><parameter type='int' name='sectorIndex'/><parameter type='byte[]' name='key'/><exception type='java.io.IOException' name='IOException'/></method><method return='boolean' name='authenticateSectorWithKeyB' api_added='10'><parameter type='int' name='sectorIndex'/><parameter type='byte[]' name='key'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='blockToSector' api_added='10'><parameter type='int' name='blockIndex'/></method><method name='decrement' api_added='10'><parameter type='int' name='blockIndex'/><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.nfc.tech.MifareClassic' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='int' name='getBlockCount' api_added='10'/><method return='int' name='getBlockCountInSector' api_added='10'><parameter type='int' name='sectorIndex'/></method><method return='int' name='getSectorCount' api_added='10'/><method return='int' name='getSize' api_added='10'/><method return='int' name='getType' api_added='10'/><method name='increment' api_added='10'><parameter type='int' name='blockIndex'/><parameter type='int' name='value'/><exception type='java.io.IOException' name='IOException'/></method><method return='byte[]' name='readBlock' api_added='10'><parameter type='int' name='blockIndex'/><exception type='java.io.IOException' name='IOException'/></method><method name='restore' api_added='10'><parameter type='int' name='blockIndex'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='sectorToBlock' api_added='10'><parameter type='int' name='sectorIndex'/></method><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method name='transfer' api_added='10'><parameter type='int' name='blockIndex'/><exception type='java.io.IOException' name='IOException'/></method><method name='writeBlock' api_added='10'><parameter type='int' name='blockIndex'/><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/><method return='int' name='getTimeout' api_added='14'/><method name='setTimeout' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='MifareUltralight' api_added='10' final='true'><method return='android.nfc.tech.MifareUltralight' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='int' name='getType' api_added='10'/><method return='byte[]' name='readPages' api_added='10'><parameter type='int' name='pageOffset'/><exception type='java.io.IOException' name='IOException'/></method><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method name='writePage' api_added='10'><parameter type='int' name='pageOffset'/><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/><method return='int' name='getTimeout' api_added='14'/><method name='setTimeout' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='Ndef' api_added='10' final='true'><method return='boolean' name='canMakeReadOnly' api_added='10'/><method return='android.nfc.tech.Ndef' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='android.nfc.NdefMessage' name='getCachedNdefMessage' api_added='10'/><method return='int' name='getMaxSize' api_added='10'/><method return='android.nfc.NdefMessage' name='getNdefMessage' api_added='10'><exception type='android.nfc.FormatException' name='FormatException'/><exception type='java.io.IOException' name='IOException'/></method><method return='java.lang.String' name='getType' api_added='10'/><method return='boolean' name='isWritable' api_added='10'/><method return='boolean' name='makeReadOnly' api_added='10'><exception type='java.io.IOException' name='IOException'/></method><method name='writeNdefMessage' api_added='10'><parameter type='android.nfc.NdefMessage' name='msg'/><exception type='android.nfc.FormatException' name='FormatException'/><exception type='java.io.IOException' name='IOException'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='NdefFormatable' api_added='10' final='true'><method name='format' api_added='10'><parameter type='android.nfc.NdefMessage' name='firstMessage'/><exception type='android.nfc.FormatException' name='FormatException'/><exception type='java.io.IOException' name='IOException'/></method><method name='formatReadOnly' api_added='10'><parameter type='android.nfc.NdefMessage' name='firstMessage'/><exception type='android.nfc.FormatException' name='FormatException'/><exception type='java.io.IOException' name='IOException'/></method><method return='android.nfc.tech.NdefFormatable' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='NfcA' api_added='10' final='true'><method return='android.nfc.tech.NfcA' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='byte[]' name='getAtqa' api_added='10'/><method return='short' name='getSak' api_added='10'/><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/><method return='int' name='getTimeout' api_added='14'/><method name='setTimeout' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='NfcB' api_added='10' final='true'><method return='android.nfc.tech.NfcB' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='byte[]' name='getApplicationData' api_added='10'/><method return='byte[]' name='getProtocolInfo' api_added='10'/><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/></class><class extends='android.nfc.tech.BasicTagTechnology' name='NfcF' api_added='10' final='true'><method return='android.nfc.tech.NfcF' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='byte[]' name='getManufacturer' api_added='10'/><method return='byte[]' name='getSystemCode' api_added='10'/><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/><method return='int' name='getTimeout' api_added='14'/><method name='setTimeout' api_added='14'><parameter type='int' name='arg0'/></method></class><class extends='android.nfc.tech.BasicTagTechnology' name='NfcV' api_added='10' final='true'><method return='android.nfc.tech.NfcV' static='true' name='get' api_added='10'><parameter type='android.nfc.Tag' name='tag'/></method><method return='byte' name='getDsfId' api_added='10'/><method return='byte' name='getResponseFlags' api_added='10'/><method return='byte[]' name='transceive' api_added='10'><parameter type='byte[]' name='data'/><exception type='java.io.IOException' name='IOException'/></method><method return='int' name='getMaxTransceiveLength' api_added='14'/></class><interface abstract='true' name='TagTechnology' api_added='10'><method abstract='true' name='close' api_added='10'><exception type='java.io.IOException' name='IOException'/></method><method abstract='true' name='connect' api_added='10'><exception type='java.io.IOException' name='IOException'/></method><method return='android.nfc.Tag' abstract='true' name='getTag' api_added='10'/><method return='boolean' abstract='true' name='isConnected' api_added='10'/></interface></package><package name='android.animation' api_added='11'><class extends='java.lang.Object' abstract='true' name='Animator' api_added='11'><constructor type='android.animation.Animator' name='Animator' api_added='11'/><method name='addListener' api_added='11'><parameter type='android.animation.Animator.AnimatorListener' name='listener'/></method><method name='cancel' api_added='11'/><method return='android.animation.Animator' name='clone' api_added='11'/><method name='end' api_added='11'/><method return='long' abstract='true' name='getDuration' api_added='11'/><method return='java.util.ArrayList&lt;android.animation.Animator.AnimatorListener&gt;' name='getListeners' api_added='11'/><method return='long' abstract='true' name='getStartDelay' api_added='11'/><method return='boolean' abstract='true' name='isRunning' api_added='11'/><method name='removeAllListeners' api_added='11'/><method name='removeListener' api_added='11'><parameter type='android.animation.Animator.AnimatorListener' name='listener'/></method><method return='android.animation.Animator' abstract='true' name='setDuration' api_added='11'><parameter type='long' name='duration'/></method><method abstract='true' name='setInterpolator' api_added='11'><parameter type='android.animation.TimeInterpolator' name='value'/></method><method abstract='true' name='setStartDelay' api_added='11'><parameter type='long' name='startDelay'/></method><method name='setTarget' api_added='11'><parameter type='java.lang.Object' name='target'/></method><method name='setupEndValues' api_added='11'/><method name='setupStartValues' api_added='11'/><method name='start' api_added='11'/><method return='boolean' name='isStarted' api_added='14'/></class><class extends='java.lang.Object' name='AnimatorInflater' api_added='11'><constructor type='android.animation.AnimatorInflater' name='AnimatorInflater' api_added='11'/><method return='android.animation.Animator' static='true' name='loadAnimator' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='int' name='id'/><exception type='android.content.res.Resources.NotFoundException' name='Resources.NotFoundException'/></method></class><class extends='java.lang.Object' abstract='true' name='AnimatorListenerAdapter' api_added='11'><constructor type='android.animation.AnimatorListenerAdapter' name='AnimatorListenerAdapter' api_added='11'/><method name='onAnimationCancel' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method name='onAnimationEnd' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method name='onAnimationRepeat' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method name='onAnimationStart' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method></class><class extends='android.animation.Animator' name='AnimatorSet' api_added='11' final='true'><constructor type='android.animation.AnimatorSet' name='AnimatorSet' api_added='11'/><method return='java.util.ArrayList&lt;android.animation.Animator&gt;' name='getChildAnimations' api_added='11'/><method return='long' name='getDuration' api_added='11'/><method return='long' name='getStartDelay' api_added='11'/><method return='boolean' name='isRunning' api_added='11'/><method return='android.animation.AnimatorSet.Builder' name='play' api_added='11'><parameter type='android.animation.Animator' name='anim'/></method><method name='playSequentially' api_added='11'><parameter type='android.animation.Animator...' name='items'/></method><method name='playSequentially' api_added='11'><parameter type='java.util.List&lt;android.animation.Animator&gt;' name='items'/></method><method name='playTogether' api_added='11'><parameter type='android.animation.Animator...' name='items'/></method><method name='playTogether' api_added='11'><parameter type='java.util.Collection&lt;android.animation.Animator&gt;' name='items'/></method><method return='android.animation.AnimatorSet' name='setDuration' api_added='11'><parameter type='long' name='duration'/></method><method name='setInterpolator' api_added='11'><parameter type='android.animation.TimeInterpolator' name='interpolator'/></method><method name='setStartDelay' api_added='11'><parameter type='long' name='startDelay'/></method></class><class extends='java.lang.Object' name='AnimatorSet.Builder' api_added='11'><method return='android.animation.AnimatorSet.Builder' name='after' api_added='11'><parameter type='android.animation.Animator' name='anim'/></method><method return='android.animation.AnimatorSet.Builder' name='after' api_added='11'><parameter type='long' name='delay'/></method><method return='android.animation.AnimatorSet.Builder' name='before' api_added='11'><parameter type='android.animation.Animator' name='anim'/></method><method return='android.animation.AnimatorSet.Builder' name='with' api_added='11'><parameter type='android.animation.Animator' name='anim'/></method></class><class extends='java.lang.Object' name='ArgbEvaluator' api_added='11'><constructor type='android.animation.ArgbEvaluator' name='ArgbEvaluator' api_added='11'/><method return='java.lang.Object' name='evaluate' api_added='11'><parameter type='float' name='fraction'/><parameter type='java.lang.Object' name='startValue'/><parameter type='java.lang.Object' name='endValue'/></method></class><class extends='java.lang.Object' name='FloatEvaluator' api_added='11'><constructor type='android.animation.FloatEvaluator' name='FloatEvaluator' api_added='11'/><method return='java.lang.Object' api_removed='14' name='evaluate' api_added='11'><parameter type='float' name='fraction'/><parameter type='java.lang.Object' name='startValue'/><parameter type='java.lang.Object' name='endValue'/></method><method return='java.lang.Float' name='evaluate' api_added='14'><parameter type='float' name='arg0'/><parameter type='java.lang.Number' name='arg1'/><parameter type='java.lang.Number' name='arg2'/></method></class><class extends='java.lang.Object' name='IntEvaluator' api_added='11'><constructor type='android.animation.IntEvaluator' name='IntEvaluator' api_added='11'/><method return='java.lang.Object' api_removed='14' name='evaluate' api_added='11'><parameter type='float' name='fraction'/><parameter type='java.lang.Object' name='startValue'/><parameter type='java.lang.Object' name='endValue'/></method><method return='java.lang.Integer' name='evaluate' api_added='14'><parameter type='float' name='arg0'/><parameter type='java.lang.Integer' name='arg1'/><parameter type='java.lang.Integer' name='arg2'/></method></class><class extends='java.lang.Object' abstract='true' name='Keyframe' api_added='11'><constructor type='android.animation.Keyframe' name='Keyframe' api_added='11'/><method return='android.animation.Keyframe' abstract='true' name='clone' api_added='11'/><method return='float' name='getFraction' api_added='11'/><method return='android.animation.TimeInterpolator' name='getInterpolator' api_added='11'/><method return='java.lang.Class' name='getType' api_added='11'/><method return='java.lang.Object' abstract='true' name='getValue' api_added='11'/><method return='boolean' name='hasValue' api_added='11'/><method return='android.animation.Keyframe' static='true' name='ofFloat' api_added='11'><parameter type='float' name='fraction'/><parameter type='float' name='value'/></method><method return='android.animation.Keyframe' static='true' name='ofFloat' api_added='11'><parameter type='float' name='fraction'/></method><method return='android.animation.Keyframe' static='true' name='ofInt' api_added='11'><parameter type='float' name='fraction'/><parameter type='int' name='value'/></method><method return='android.animation.Keyframe' static='true' name='ofInt' api_added='11'><parameter type='float' name='fraction'/></method><method return='android.animation.Keyframe' static='true' name='ofObject' api_added='11'><parameter type='float' name='fraction'/><parameter type='java.lang.Object' name='value'/></method><method return='android.animation.Keyframe' static='true' name='ofObject' api_added='11'><parameter type='float' name='fraction'/></method><method name='setFraction' api_added='11'><parameter type='float' name='fraction'/></method><method name='setInterpolator' api_added='11'><parameter type='android.animation.TimeInterpolator' name='interpolator'/></method><method abstract='true' name='setValue' api_added='11'><parameter type='java.lang.Object' name='value'/></method></class><class extends='java.lang.Object' name='LayoutTransition' api_added='11'><constructor type='android.animation.LayoutTransition' name='LayoutTransition' api_added='11'/><method name='addChild' api_added='11'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method name='addTransitionListener' api_added='11'><parameter type='android.animation.LayoutTransition.TransitionListener' name='listener'/></method><method return='android.animation.Animator' name='getAnimator' api_added='11'><parameter type='int' name='transitionType'/></method><method return='long' name='getDuration' api_added='11'><parameter type='int' name='transitionType'/></method><method return='android.animation.TimeInterpolator' name='getInterpolator' api_added='11'><parameter type='int' name='transitionType'/></method><method return='long' name='getStagger' api_added='11'><parameter type='int' name='transitionType'/></method><method return='long' name='getStartDelay' api_added='11'><parameter type='int' name='transitionType'/></method><method return='java.util.List&lt;android.animation.LayoutTransition.TransitionListener&gt;' name='getTransitionListeners' api_added='11'/><method deprecated='16' name='hideChild' api_added='11'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method return='boolean' name='isChangingLayout' api_added='11'/><method return='boolean' name='isRunning' api_added='11'/><method name='removeChild' api_added='11'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method name='removeTransitionListener' api_added='11'><parameter type='android.animation.LayoutTransition.TransitionListener' name='listener'/></method><method name='setAnimator' api_added='11'><parameter type='int' name='transitionType'/><parameter type='android.animation.Animator' name='animator'/></method><method name='setDuration' api_added='11'><parameter type='long' name='duration'/></method><method name='setDuration' api_added='11'><parameter type='int' name='transitionType'/><parameter type='long' name='duration'/></method><method name='setInterpolator' api_added='11'><parameter type='int' name='transitionType'/><parameter type='android.animation.TimeInterpolator' name='interpolator'/></method><method name='setStagger' api_added='11'><parameter type='int' name='transitionType'/><parameter type='long' name='duration'/></method><method name='setStartDelay' api_added='11'><parameter type='int' name='transitionType'/><parameter type='long' name='delay'/></method><method deprecated='16' name='showChild' api_added='11'><parameter type='android.view.ViewGroup' name='parent'/><parameter type='android.view.View' name='child'/></method><method name='setAnimateParentHierarchy' api_added='14'><parameter type='boolean' name='arg0'/></method><method name='disableTransitionType' api_added='16'><parameter type='int' name='arg0'/></method><method name='enableTransitionType' api_added='16'><parameter type='int' name='arg0'/></method><method name='hideChild' api_added='16'><parameter type='android.view.ViewGroup' name='arg0'/><parameter type='android.view.View' name='arg1'/><parameter type='int' name='arg2'/></method><method return='boolean' name='isTransitionTypeEnabled' api_added='16'><parameter type='int' name='arg0'/></method><method name='showChild' api_added='16'><parameter type='android.view.ViewGroup' name='arg0'/><parameter type='android.view.View' name='arg1'/><parameter type='int' name='arg2'/></method></class><class extends='android.animation.ValueAnimator' name='ObjectAnimator' api_added='11' final='true'><constructor type='android.animation.ObjectAnimator' name='ObjectAnimator' api_added='11'/><method return='java.lang.String' name='getPropertyName' api_added='11'/><method return='java.lang.Object' name='getTarget' api_added='11'/><method return='android.animation.ObjectAnimator' static='true' name='ofFloat' api_added='11'><parameter type='java.lang.Object' name='target'/><parameter type='java.lang.String' name='propertyName'/><parameter type='float...' name='values'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofInt' api_added='11'><parameter type='java.lang.Object' name='target'/><parameter type='java.lang.String' name='propertyName'/><parameter type='int...' name='values'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofObject' api_added='11'><parameter type='java.lang.Object' name='target'/><parameter type='java.lang.String' name='propertyName'/><parameter type='android.animation.TypeEvaluator' name='evaluator'/><parameter type='java.lang.Object...' name='values'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofPropertyValuesHolder' api_added='11'><parameter type='java.lang.Object' name='target'/><parameter type='android.animation.PropertyValuesHolder...' name='values'/></method><method name='setPropertyName' api_added='11'><parameter type='java.lang.String' name='propertyName'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofFloat' api_added='14'><parameter type='T' name='arg0'/><parameter type='android.util.Property&lt;T' name='arg1'/><parameter type='java.lang.Float&gt;' name='arg2'/><parameter type='float...' name='arg3'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofInt' api_added='14'><parameter type='T' name='arg0'/><parameter type='android.util.Property&lt;T' name='arg1'/><parameter type='java.lang.Integer&gt;' name='arg2'/><parameter type='int...' name='arg3'/></method><method return='android.animation.ObjectAnimator' static='true' name='ofObject' api_added='14'><parameter type='T' name='arg0'/><parameter type='android.util.Property&lt;T' name='arg1'/><parameter type='V&gt;' name='arg2'/><parameter type='android.animation.TypeEvaluator&lt;V&gt;' name='arg3'/><parameter type='V...' name='arg4'/></method><method name='setProperty' api_added='14'><parameter type='android.util.Property' name='arg0'/></method></class><class extends='java.lang.Object' name='PropertyValuesHolder' api_added='11'><method return='android.animation.PropertyValuesHolder' name='clone' api_added='11'/><method return='java.lang.String' name='getPropertyName' api_added='11'/><method return='android.animation.PropertyValuesHolder' static='true' name='ofFloat' api_added='11'><parameter type='java.lang.String' name='propertyName'/><parameter type='float...' name='values'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofInt' api_added='11'><parameter type='java.lang.String' name='propertyName'/><parameter type='int...' name='values'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofKeyframe' api_added='11'><parameter type='java.lang.String' name='propertyName'/><parameter type='android.animation.Keyframe...' name='values'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofObject' api_added='11'><parameter type='java.lang.String' name='propertyName'/><parameter type='android.animation.TypeEvaluator' name='evaluator'/><parameter type='java.lang.Object...' name='values'/></method><method name='setEvaluator' api_added='11'><parameter type='android.animation.TypeEvaluator' name='evaluator'/></method><method name='setFloatValues' api_added='11'><parameter type='float...' name='values'/></method><method name='setIntValues' api_added='11'><parameter type='int...' name='values'/></method><method name='setKeyframes' api_added='11'><parameter type='android.animation.Keyframe...' name='values'/></method><method name='setObjectValues' api_added='11'><parameter type='java.lang.Object...' name='values'/></method><method name='setPropertyName' api_added='11'><parameter type='java.lang.String' name='propertyName'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofFloat' api_added='14'><parameter type='android.util.Property&lt;?' name='arg0'/><parameter type='java.lang.Float&gt;' name='arg1'/><parameter type='float...' name='arg2'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofInt' api_added='14'><parameter type='android.util.Property&lt;?' name='arg0'/><parameter type='java.lang.Integer&gt;' name='arg1'/><parameter type='int...' name='arg2'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofKeyframe' api_added='14'><parameter type='android.util.Property' name='arg0'/><parameter type='android.animation.Keyframe...' name='arg1'/></method><method return='android.animation.PropertyValuesHolder' static='true' name='ofObject' api_added='14'><parameter type='android.util.Property' name='arg0'/><parameter type='android.animation.TypeEvaluator&lt;V&gt;' name='arg1'/><parameter type='V...' name='arg2'/></method><method name='setProperty' api_added='14'><parameter type='android.util.Property' name='arg0'/></method></class><class extends='android.animation.Animator' name='ValueAnimator' api_added='11'><constructor type='android.animation.ValueAnimator' name='ValueAnimator' api_added='11'/><method name='addUpdateListener' api_added='11'><parameter type='android.animation.ValueAnimator.AnimatorUpdateListener' name='listener'/></method><method return='java.lang.Object' name='getAnimatedValue' api_added='11'/><method return='java.lang.Object' name='getAnimatedValue' api_added='11'><parameter type='java.lang.String' name='propertyName'/></method><method return='long' name='getCurrentPlayTime' api_added='11'/><method return='long' name='getDuration' api_added='11'/><method return='long' static='true' name='getFrameDelay' api_added='11'/><method return='android.animation.TimeInterpolator' name='getInterpolator' api_added='11'/><method return='int' name='getRepeatCount' api_added='11'/><method return='int' name='getRepeatMode' api_added='11'/><method return='long' name='getStartDelay' api_added='11'/><method return='android.animation.PropertyValuesHolder[]' name='getValues' api_added='11'/><method return='boolean' name='isRunning' api_added='11'/><method return='android.animation.ValueAnimator' static='true' name='ofFloat' api_added='11'><parameter type='float...' name='values'/></method><method return='android.animation.ValueAnimator' static='true' name='ofInt' api_added='11'><parameter type='int...' name='values'/></method><method return='android.animation.ValueAnimator' static='true' name='ofObject' api_added='11'><parameter type='android.animation.TypeEvaluator' name='evaluator'/><parameter type='java.lang.Object...' name='values'/></method><method return='android.animation.ValueAnimator' static='true' name='ofPropertyValuesHolder' api_added='11'><parameter type='android.animation.PropertyValuesHolder...' name='values'/></method><method name='removeAllUpdateListeners' api_added='11'/><method name='removeUpdateListener' api_added='11'><parameter type='android.animation.ValueAnimator.AnimatorUpdateListener' name='listener'/></method><method name='reverse' api_added='11'/><method name='setCurrentPlayTime' api_added='11'><parameter type='long' name='playTime'/></method><method return='android.animation.ValueAnimator' name='setDuration' api_added='11'><parameter type='long' name='duration'/></method><method name='setEvaluator' api_added='11'><parameter type='android.animation.TypeEvaluator' name='value'/></method><method name='setFloatValues' api_added='11'><parameter type='float...' name='values'/></method><method static='true' name='setFrameDelay' api_added='11'><parameter type='long' name='frameDelay'/></method><method name='setIntValues' api_added='11'><parameter type='int...' name='values'/></method><method name='setInterpolator' api_added='11'><parameter type='android.animation.TimeInterpolator' name='value'/></method><method name='setObjectValues' api_added='11'><parameter type='java.lang.Object...' name='values'/></method><method name='setRepeatCount' api_added='11'><parameter type='int' name='value'/></method><method name='setRepeatMode' api_added='11'><parameter type='int' name='value'/></method><method name='setStartDelay' api_added='11'><parameter type='long' name='startDelay'/></method><method name='setValues' api_added='11'><parameter type='android.animation.PropertyValuesHolder...' name='values'/></method><method return='float' name='getAnimatedFraction' api_added='12'/></class><class extends='android.animation.ValueAnimator' name='TimeAnimator' api_added='16'><constructor type='android.animation.TimeAnimator' name='TimeAnimator' api_added='16'/><method name='setTimeListener' api_added='16'><parameter type='android.animation.TimeAnimator.TimeListener' name='arg0'/></method></class><interface abstract='true' static='true' name='Animator.AnimatorListener' api_added='11'><method abstract='true' name='onAnimationCancel' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method abstract='true' name='onAnimationEnd' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method abstract='true' name='onAnimationRepeat' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method><method abstract='true' name='onAnimationStart' api_added='11'><parameter type='android.animation.Animator' name='animation'/></method></interface><interface abstract='true' static='true' name='LayoutTransition.TransitionListener' api_added='11'><method abstract='true' name='endTransition' api_added='11'><parameter type='android.animation.LayoutTransition' name='transition'/><parameter type='android.view.ViewGroup' name='container'/><parameter type='android.view.View' name='view'/><parameter type='int' name='transitionType'/></method><method abstract='true' name='startTransition' api_added='11'><parameter type='android.animation.LayoutTransition' name='transition'/><parameter type='android.view.ViewGroup' name='container'/><parameter type='android.view.View' name='view'/><parameter type='int' name='transitionType'/></method></interface><interface abstract='true' name='TimeInterpolator' api_added='11'><method return='float' abstract='true' name='getInterpolation' api_added='11'><parameter type='float' name='input'/></method></interface><interface abstract='true' name='TypeEvaluator' api_added='11'><method return='java.lang.Object' abstract='true' api_removed='14' name='evaluate' api_added='11'><parameter type='float' name='fraction'/><parameter type='java.lang.Object' name='startValue'/><parameter type='java.lang.Object' name='endValue'/></method><method return='T' abstract='true' name='evaluate' api_added='14'><parameter type='float' name='arg0'/><parameter type='T' name='arg1'/><parameter type='T' name='arg2'/></method></interface><interface abstract='true' static='true' name='ValueAnimator.AnimatorUpdateListener' api_added='11'><method abstract='true' name='onAnimationUpdate' api_added='11'><parameter type='android.animation.ValueAnimator' name='animation'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='TimeAnimator.TimeListener' api_added='16'><method abstract='true' name='onTimeUpdate' api_added='16'><parameter type='android.animation.TimeAnimator' name='arg0'/><parameter type='long' name='arg1'/><parameter type='long' name='arg2'/></method></interface></package><package name='android.drm' api_added='11'><class extends='java.lang.Object' name='DrmConvertedStatus' api_added='11'><constructor type='android.drm.DrmConvertedStatus' name='DrmConvertedStatus' api_added='11'><parameter type='int' name='_statusCode'/><parameter type='byte[]' name='_convertedData'/><parameter type='int' name='_offset'/></constructor></class><class extends='android.drm.DrmEvent' name='DrmErrorEvent' api_added='11'><constructor type='android.drm.DrmErrorEvent' name='DrmErrorEvent' api_added='11'><parameter type='int' name='uniqueId'/><parameter type='int' name='type'/><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='DrmEvent' api_added='11'><constructor visibility='protected' type='android.drm.DrmEvent' name='DrmEvent' api_added='11'><parameter type='int' name='uniqueId'/><parameter type='int' name='type'/><parameter type='java.lang.String' name='message'/></constructor><method return='java.lang.String' name='getMessage' api_added='11'/><method return='int' name='getType' api_added='11'/><method return='int' name='getUniqueId' api_added='11'/><method return='java.lang.Object' name='getAttribute' api_added='12'><parameter type='java.lang.String' name='key'/></method></class><class extends='java.lang.Object' name='DrmInfo' api_added='11'><constructor type='android.drm.DrmInfo' name='DrmInfo' api_added='11'><parameter type='int' name='infoType'/><parameter type='byte[]' name='data'/><parameter type='java.lang.String' name='mimeType'/></constructor><constructor type='android.drm.DrmInfo' name='DrmInfo' api_added='11'><parameter type='int' name='infoType'/><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='mimeType'/></constructor><method return='java.lang.Object' name='get' api_added='11'><parameter type='java.lang.String' name='key'/></method><method return='byte[]' name='getData' api_added='11'/><method return='int' name='getInfoType' api_added='11'/><method return='java.lang.String' name='getMimeType' api_added='11'/><method return='java.util.Iterator&lt;java.lang.Object&gt;' name='iterator' api_added='11'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='keyIterator' api_added='11'/><method name='put' api_added='11'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/></method></class><class extends='android.drm.DrmEvent' name='DrmInfoEvent' api_added='11'><constructor type='android.drm.DrmInfoEvent' name='DrmInfoEvent' api_added='11'><parameter type='int' name='uniqueId'/><parameter type='int' name='type'/><parameter type='java.lang.String' name='message'/></constructor></class><class extends='java.lang.Object' name='DrmInfoRequest' api_added='11'><constructor type='android.drm.DrmInfoRequest' name='DrmInfoRequest' api_added='11'><parameter type='int' name='infoType'/><parameter type='java.lang.String' name='mimeType'/></constructor><method return='java.lang.Object' name='get' api_added='11'><parameter type='java.lang.String' name='key'/></method><method return='int' name='getInfoType' api_added='11'/><method return='java.lang.String' name='getMimeType' api_added='11'/><method return='java.util.Iterator&lt;java.lang.Object&gt;' name='iterator' api_added='11'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='keyIterator' api_added='11'/><method name='put' api_added='11'><parameter type='java.lang.String' name='key'/><parameter type='java.lang.Object' name='value'/></method></class><class extends='java.lang.Object' name='DrmInfoStatus' api_added='11'><constructor type='android.drm.DrmInfoStatus' name='DrmInfoStatus' api_added='11'><parameter type='int' name='_statusCode'/><parameter type='int' name='_infoType'/><parameter type='android.drm.ProcessedData' name='_data'/><parameter type='java.lang.String' name='_mimeType'/></constructor></class><class extends='java.lang.Object' name='DrmManagerClient' api_added='11'><constructor type='android.drm.DrmManagerClient' name='DrmManagerClient' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><method return='android.drm.DrmInfo' name='acquireDrmInfo' api_added='11'><parameter type='android.drm.DrmInfoRequest' name='drmInfoRequest'/></method><method return='int' name='acquireRights' api_added='11'><parameter type='android.drm.DrmInfoRequest' name='drmInfoRequest'/></method><method return='boolean' name='canHandle' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='mimeType'/></method><method return='boolean' name='canHandle' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/></method><method return='int' name='checkRightsStatus' api_added='11'><parameter type='java.lang.String' name='path'/></method><method return='int' name='checkRightsStatus' api_added='11'><parameter type='android.net.Uri' name='uri'/></method><method return='int' name='checkRightsStatus' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='int' name='action'/></method><method return='int' name='checkRightsStatus' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='action'/></method><method return='android.drm.DrmConvertedStatus' name='closeConvertSession' api_added='11'><parameter type='int' name='convertId'/></method><method return='android.drm.DrmConvertedStatus' name='convertData' api_added='11'><parameter type='int' name='convertId'/><parameter type='byte[]' name='inputData'/></method><method return='java.lang.String[]' name='getAvailableDrmEngines' api_added='11'/><method return='android.content.ContentValues' name='getConstraints' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='int' name='action'/></method><method return='android.content.ContentValues' name='getConstraints' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='int' name='action'/></method><method return='int' name='getDrmObjectType' api_added='11'><parameter type='java.lang.String' name='path'/><parameter type='java.lang.String' name='mimeType'/></method><method return='int' name='getDrmObjectType' api_added='11'><parameter type='android.net.Uri' name='uri'/><parameter type='java.lang.String' name='mimeType'/></method><method return='android.content.ContentValues' name='getMetadata' api_added='11'><parameter type='java.lang.String' name='path'/></method><method return='android.content.ContentValues' name='getMetadata' api_added='11'><parameter type='android.net.Uri' name='uri'/></method><method return='java.lang.String' name='getOriginalMimeType' api_added='11'><parameter type='java.lang.String' name='path'/></method><method return='java.lang.String' name='getOriginalMimeType' api_added='11'><parameter type='android.net.Uri' name='uri'/></method><method return='int' name='openConvertSession' api_added='11'><parameter type='java.lang.String' name='mimeType'/></method><method return='int' name='processDrmInfo' api_added='11'><parameter type='android.drm.DrmInfo' name='drmInfo'/></method><method return='int' name='removeAllRights' api_added='11'/><method return='int' name='removeRights' api_added='11'><parameter type='java.lang.String' name='path'/></method><method return='int' name='removeRights' api_added='11'><parameter type='android.net.Uri' name='uri'/></method><method return='int' name='saveRights' api_added='11'><parameter type='android.drm.DrmRights' name='drmRights'/><parameter type='java.lang.String' name='rightsPath'/><parameter type='java.lang.String' name='contentPath'/><exception type='java.io.IOException' name='IOException'/></method><method synchronized='true' name='setOnErrorListener' api_added='11'><parameter type='android.drm.DrmManagerClient.OnErrorListener' name='errorListener'/></method><method synchronized='true' name='setOnEventListener' api_added='11'><parameter type='android.drm.DrmManagerClient.OnEventListener' name='eventListener'/></method><method synchronized='true' name='setOnInfoListener' api_added='11'><parameter type='android.drm.DrmManagerClient.OnInfoListener' name='infoListener'/></method><method name='release' api_added='16'/></class><class extends='java.lang.Object' name='DrmRights' api_added='11'><constructor type='android.drm.DrmRights' name='DrmRights' api_added='11'><parameter type='java.lang.String' name='rightsFilePath'/><parameter type='java.lang.String' name='mimeType'/></constructor><constructor type='android.drm.DrmRights' name='DrmRights' api_added='11'><parameter type='java.lang.String' name='rightsFilePath'/><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='accountId'/></constructor><constructor type='android.drm.DrmRights' name='DrmRights' api_added='11'><parameter type='java.lang.String' name='rightsFilePath'/><parameter type='java.lang.String' name='mimeType'/><parameter type='java.lang.String' name='accountId'/><parameter type='java.lang.String' name='subscriptionId'/></constructor><constructor type='android.drm.DrmRights' name='DrmRights' api_added='11'><parameter type='java.io.File' name='rightsFile'/><parameter type='java.lang.String' name='mimeType'/></constructor><constructor type='android.drm.DrmRights' name='DrmRights' api_added='11'><parameter type='android.drm.ProcessedData' name='data'/><parameter type='java.lang.String' name='mimeType'/></constructor><method return='java.lang.String' name='getAccountId' api_added='11'/><method return='byte[]' name='getData' api_added='11'/><method return='java.lang.String' name='getMimeType' api_added='11'/><method return='java.lang.String' name='getSubscriptionId' api_added='11'/></class><class extends='java.lang.Object' name='DrmStore' api_added='11'><constructor api_removed='16' type='android.drm.DrmStore' name='DrmStore' api_added='11'/><constructor type='android.drm.deprecated DrmStore' name='deprecated DrmStore' api_added='16'/></class><class extends='java.lang.Object' static='true' name='DrmStore.Action' api_added='11'><constructor api_removed='16' type='android.drm.DrmStore.Action' name='DrmStore.Action' api_added='11'/><constructor type='android.drm.deprecated DrmStore.Action' name='deprecated DrmStore.Action' api_added='16'/></class><class extends='java.lang.Object' static='true' name='DrmStore.DrmObjectType' api_added='11'><constructor api_removed='16' type='android.drm.DrmStore.DrmObjectType' name='DrmStore.DrmObjectType' api_added='11'/><constructor type='android.drm.deprecated DrmStore.DrmObjectType' name='deprecated DrmStore.DrmObjectType' api_added='16'/></class><class extends='java.lang.Object' static='true' name='DrmStore.Playback' api_added='11'><constructor api_removed='16' type='android.drm.DrmStore.Playback' name='DrmStore.Playback' api_added='11'/><constructor type='android.drm.deprecated DrmStore.Playback' name='deprecated DrmStore.Playback' api_added='16'/></class><class extends='java.lang.Object' static='true' name='DrmStore.RightsStatus' api_added='11'><constructor api_removed='16' type='android.drm.DrmStore.RightsStatus' name='DrmStore.RightsStatus' api_added='11'/><constructor type='android.drm.deprecated DrmStore.RightsStatus' name='deprecated DrmStore.RightsStatus' api_added='16'/></class><class extends='java.lang.Object' name='DrmSupportInfo' api_added='11'><constructor type='android.drm.DrmSupportInfo' name='DrmSupportInfo' api_added='11'/><method name='addFileSuffix' api_added='11'><parameter type='java.lang.String' name='fileSuffix'/></method><method name='addMimeType' api_added='11'><parameter type='java.lang.String' name='mimeType'/></method><method deprecated='16' return='java.lang.String' name='getDescriprition' api_added='11'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='getFileSuffixIterator' api_added='11'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='getMimeTypeIterator' api_added='11'/><method name='setDescription' api_added='11'><parameter type='java.lang.String' name='description'/></method><method return='java.lang.String' name='getDescription' api_added='16'/></class><class extends='java.lang.Object' name='DrmUtils' api_added='11'><constructor type='android.drm.DrmUtils' name='DrmUtils' api_added='11'/><method return='android.drm.DrmUtils.ExtendedMetadataParser' static='true' name='getExtendedMetadataParser' api_added='11'><parameter type='byte[]' name='extendedMetadata'/></method></class><class extends='java.lang.Object' static='true' name='DrmUtils.ExtendedMetadataParser' api_added='11'><method return='java.lang.String' name='get' api_added='11'><parameter type='java.lang.String' name='key'/></method><method return='java.util.Iterator&lt;java.lang.String&gt;' name='iterator' api_added='11'/><method return='java.util.Iterator&lt;java.lang.String&gt;' name='keyIterator' api_added='11'/></class><class extends='java.lang.Object' name='ProcessedData' api_added='11'><method return='java.lang.String' name='getAccountId' api_added='11'/><method return='byte[]' name='getData' api_added='11'/><method return='java.lang.String' name='getSubscriptionId' api_added='11'/></class><interface abstract='true' static='true' name='DrmManagerClient.OnErrorListener' api_added='11'><method abstract='true' name='onError' api_added='11'><parameter type='android.drm.DrmManagerClient' name='client'/><parameter type='android.drm.DrmErrorEvent' name='event'/></method></interface><interface abstract='true' static='true' name='DrmManagerClient.OnEventListener' api_added='11'><method abstract='true' api_removed='12' name='onEvent' api_added='11'><parameter type='android.drm.DrmManagerClient' name='client'/><parameter type='android.drm.DrmEvent' name='event'/><parameter type='java.util.HashMap&lt;java.lang.String, java.lang.Object&gt;' name='attributes'/></method><method abstract='true' name='onEvent' api_added='12'><parameter type='android.drm.DrmManagerClient' name='client'/><parameter type='android.drm.DrmEvent' name='event'/></method></interface><interface abstract='true' static='true' name='DrmManagerClient.OnInfoListener' api_added='11'><method abstract='true' name='onInfo' api_added='11'><parameter type='android.drm.DrmManagerClient' name='client'/><parameter type='android.drm.DrmInfoEvent' name='event'/></method></interface><interface abstract='true' static='true' name='DrmStore.ConstraintsColumns' api_added='11'/></package><package name='android.renderscript' api_added='11'><class extends='android.renderscript.BaseObj' name='Allocation' api_added='11'><method name='copy1DRangeFrom' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='int[]' name='d'/></method><method name='copy1DRangeFrom' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='short[]' name='d'/></method><method name='copy1DRangeFrom' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='byte[]' name='d'/></method><method name='copy1DRangeFrom' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='float[]' name='d'/></method><method name='copy1DRangeFromUnchecked' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='int[]' name='d'/></method><method name='copy1DRangeFromUnchecked' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='short[]' name='d'/></method><method name='copy1DRangeFromUnchecked' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='byte[]' name='d'/></method><method name='copy1DRangeFromUnchecked' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='float[]' name='d'/></method><method name='copy2DRangeFrom' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='byte[]' name='data'/></method><method name='copy2DRangeFrom' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='short[]' name='data'/></method><method name='copy2DRangeFrom' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int[]' name='data'/></method><method name='copy2DRangeFrom' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='float[]' name='data'/></method><method name='copy2DRangeFrom' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='android.graphics.Bitmap' name='data'/></method><method name='copyFrom' api_added='11'><parameter type='android.renderscript.BaseObj[]' name='d'/></method><method name='copyFrom' api_added='11'><parameter type='int[]' name='d'/></method><method name='copyFrom' api_added='11'><parameter type='short[]' name='d'/></method><method name='copyFrom' api_added='11'><parameter type='byte[]' name='d'/></method><method name='copyFrom' api_added='11'><parameter type='float[]' name='d'/></method><method name='copyFrom' api_added='11'><parameter type='android.graphics.Bitmap' name='b'/></method><method name='copyFromUnchecked' api_added='11'><parameter type='int[]' name='d'/></method><method name='copyFromUnchecked' api_added='11'><parameter type='short[]' name='d'/></method><method name='copyFromUnchecked' api_added='11'><parameter type='byte[]' name='d'/></method><method name='copyFromUnchecked' api_added='11'><parameter type='float[]' name='d'/></method><method name='copyTo' api_added='11'><parameter type='android.graphics.Bitmap' name='b'/></method><method name='copyTo' api_added='11'><parameter type='byte[]' name='d'/></method><method name='copyTo' api_added='11'><parameter type='short[]' name='d'/></method><method name='copyTo' api_added='11'><parameter type='int[]' name='d'/></method><method name='copyTo' api_added='11'><parameter type='float[]' name='d'/></method><method return='android.renderscript.Allocation' static='true' name='createCubemapFromBitmap' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='b'/><parameter type='android.renderscript.Allocation.MipmapControl' name='mips'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createCubemapFromBitmap' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='b'/></method><method return='android.renderscript.Allocation' static='true' name='createCubemapFromCubeFaces' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='xpos'/><parameter type='android.graphics.Bitmap' name='xneg'/><parameter type='android.graphics.Bitmap' name='ypos'/><parameter type='android.graphics.Bitmap' name='yneg'/><parameter type='android.graphics.Bitmap' name='zpos'/><parameter type='android.graphics.Bitmap' name='zneg'/><parameter type='android.renderscript.Allocation.MipmapControl' name='mips'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createCubemapFromCubeFaces' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='xpos'/><parameter type='android.graphics.Bitmap' name='xneg'/><parameter type='android.graphics.Bitmap' name='ypos'/><parameter type='android.graphics.Bitmap' name='yneg'/><parameter type='android.graphics.Bitmap' name='zpos'/><parameter type='android.graphics.Bitmap' name='zneg'/></method><method return='android.renderscript.Allocation' static='true' name='createFromBitmap' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='b'/><parameter type='android.renderscript.Allocation.MipmapControl' name='mips'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createFromBitmap' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.graphics.Bitmap' name='b'/></method><method return='android.renderscript.Allocation' static='true' name='createFromBitmapResource' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/><parameter type='android.renderscript.Allocation.MipmapControl' name='mips'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createFromBitmapResource' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/></method><method return='android.renderscript.Allocation' static='true' name='createFromString' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='java.lang.String' name='str'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createSized' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Element' name='e'/><parameter type='int' name='count'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createSized' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Element' name='e'/><parameter type='int' name='count'/></method><method return='android.renderscript.Allocation' static='true' name='createTyped' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Type' name='type'/><parameter type='android.renderscript.Allocation.MipmapControl' name='mips'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createTyped' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Type' name='type'/><parameter type='int' name='usage'/></method><method return='android.renderscript.Allocation' static='true' name='createTyped' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Type' name='type'/></method><method name='generateMipmaps' api_added='11'/><method return='android.renderscript.Type' name='getType' api_added='11'/><method synchronized='true' name='resize' api_added='11'><parameter type='int' name='dimX'/></method><method name='setFromFieldPacker' api_added='11'><parameter type='int' name='xoff'/><parameter type='android.renderscript.FieldPacker' name='fp'/></method><method name='setFromFieldPacker' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='component_number'/><parameter type='android.renderscript.FieldPacker' name='fp'/></method><method name='syncAll' api_added='11'><parameter type='int' name='srcLocation'/></method><method name='copy1DRangeFrom' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.renderscript.Allocation' name='arg2'/><parameter type='int' name='arg3'/></method><method name='copy2DRangeFrom' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/><parameter type='android.renderscript.Allocation' name='arg4'/><parameter type='int' name='arg5'/><parameter type='int' name='arg6'/></method><method return='int' name='getBytesSize' api_added='16'/><method return='android.renderscript.Element' name='getElement' api_added='16'/><method return='android.view.Surface' name='getSurface' api_added='16'/><method return='int' name='getUsage' api_added='16'/><method name='ioReceive' api_added='16'/><method name='ioSend' api_added='16'/><method name='setSurface' api_added='16'><parameter type='android.view.Surface' name='arg0'/></method></class><class extends='java.lang.Enum' static='true' name='Allocation.MipmapControl' api_added='11' final='true'><method return='android.renderscript.Allocation.MipmapControl' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Allocation.MipmapControl[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.Allocation' name='AllocationAdapter' api_added='11'><method return='android.renderscript.AllocationAdapter' static='true' name='create2D' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Allocation' name='a'/></method><method api_removed='14' name='readData' api_added='11'><parameter type='int[]' name='d'/></method><method api_removed='14' name='readData' api_added='11'><parameter type='float[]' name='d'/></method><method name='setFace' api_added='11'><parameter type='android.renderscript.Type.CubemapFace' name='cf'/></method><method name='setLOD' api_added='11'><parameter type='int' name='lod'/></method><method name='setY' api_added='11'><parameter type='int' name='y'/></method><method name='setZ' api_added='11'><parameter type='int' name='z'/></method><method api_removed='14' name='subData' api_added='11'><parameter type='int' name='xoff'/><parameter type='android.renderscript.FieldPacker' name='fp'/></method><method api_removed='14' name='subData1D' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='int[]' name='d'/></method><method api_removed='14' name='subData1D' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='short[]' name='d'/></method><method api_removed='14' name='subData1D' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='byte[]' name='d'/></method><method api_removed='14' name='subData1D' api_added='11'><parameter type='int' name='off'/><parameter type='int' name='count'/><parameter type='float[]' name='d'/></method><method api_removed='14' name='subData2D' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='int[]' name='d'/></method><method api_removed='14' name='subData2D' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='yoff'/><parameter type='int' name='w'/><parameter type='int' name='h'/><parameter type='float[]' name='d'/></method><method api_removed='14' name='subElementData' api_added='11'><parameter type='int' name='xoff'/><parameter type='int' name='component_number'/><parameter type='android.renderscript.FieldPacker' name='fp'/></method><method return='android.renderscript.AllocationAdapter' static='true' name='create1D' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/><parameter type='android.renderscript.Allocation' name='arg1'/></method></class><class visibility='' extends='java.lang.Object' name='BaseObj' api_added='11'><method synchronized='true' name='destroy' api_added='11'/><method name='setName' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getName' api_added='14'/></class><class extends='java.lang.Object' name='Byte2' api_added='11'><constructor type='android.renderscript.Byte2' name='Byte2' api_added='11'/></class><class extends='java.lang.Object' name='Byte3' api_added='11'><constructor type='android.renderscript.Byte3' name='Byte3' api_added='11'/></class><class extends='java.lang.Object' name='Byte4' api_added='11'><constructor type='android.renderscript.Byte4' name='Byte4' api_added='11'/></class><class extends='android.renderscript.BaseObj' name='Element' api_added='11'><method return='android.renderscript.Element' static='true' name='ALLOCATION' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='A_8' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='BOOLEAN' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='ELEMENT' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='F32' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='F32_2' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='F32_3' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='F32_4' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='F64' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='I16' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='I32' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='I64' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='I8' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method deprecated='16' return='android.renderscript.Element' static='true' name='MATRIX4X4' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='MATRIX_2X2' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='MATRIX_3X3' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='MATRIX_4X4' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='MESH' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='PROGRAM_FRAGMENT' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='PROGRAM_RASTER' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='PROGRAM_STORE' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='PROGRAM_VERTEX' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='RGBA_4444' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='RGBA_5551' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='RGBA_8888' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='RGB_565' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='RGB_888' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='SAMPLER' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='SCRIPT' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='TYPE' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='U16' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='U32' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='U64' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='U8' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='U8_4' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Element' static='true' name='createPixel' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Element.DataType' name='dt'/><parameter type='android.renderscript.Element.DataKind' name='dk'/></method><method return='android.renderscript.Element' static='true' name='createVector' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Element.DataType' name='dt'/><parameter type='int' name='size'/></method><method return='boolean' name='isComplex' api_added='11'/><method return='android.renderscript.Element' static='true' name='F64_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='F64_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='F64_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I16_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I16_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I16_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I32_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I32_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I32_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I64_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I64_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I64_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I8_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I8_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='I8_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U16_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U16_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U16_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U32_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U32_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U32_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U64_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U64_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U64_4' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U8_2' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='U8_3' api_added='14'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='boolean' name='isCompatible' api_added='14'><parameter type='android.renderscript.Element' name='arg0'/></method><method return='android.renderscript.Element' static='true' name='FONT' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></method><method return='int' name='getBytesSize' api_added='16'/><method return='android.renderscript.Element.DataKind' name='getDataKind' api_added='16'/><method return='android.renderscript.Element.DataType' name='getDataType' api_added='16'/><method return='android.renderscript.Element' name='getSubElement' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getSubElementArraySize' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getSubElementCount' api_added='16'/><method return='java.lang.String' name='getSubElementName' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getSubElementOffsetBytes' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getVectorSize' api_added='16'/></class><class extends='java.lang.Object' static='true' name='Element.Builder' api_added='11'><constructor type='android.renderscript.Element.Builder' name='Element.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><method return='android.renderscript.Element.Builder' name='add' api_added='11'><parameter type='android.renderscript.Element' name='element'/><parameter type='java.lang.String' name='name'/><parameter type='int' name='arraySize'/></method><method return='android.renderscript.Element.Builder' name='add' api_added='11'><parameter type='android.renderscript.Element' name='element'/><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Element' name='create' api_added='11'/></class><class extends='java.lang.Enum' static='true' name='Element.DataKind' api_added='11' final='true'><method return='android.renderscript.Element.DataKind' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Element.DataKind[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Enum' static='true' name='Element.DataType' api_added='11' final='true'><method return='android.renderscript.Element.DataType' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Element.DataType[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' name='FieldPacker' api_added='11'><constructor type='android.renderscript.FieldPacker' name='FieldPacker' api_added='11'><parameter type='int' name='len'/></constructor><method name='addBoolean' api_added='11'><parameter type='boolean' name='v'/></method><method name='addF32' api_added='11'><parameter type='float' name='v'/></method><method name='addF32' api_added='11'><parameter type='android.renderscript.Float2' name='v'/></method><method name='addF32' api_added='11'><parameter type='android.renderscript.Float3' name='v'/></method><method name='addF32' api_added='11'><parameter type='android.renderscript.Float4' name='v'/></method><method name='addF64' api_added='11'><parameter type='double' name='v'/></method><method name='addI16' api_added='11'><parameter type='short' name='v'/></method><method name='addI16' api_added='11'><parameter type='android.renderscript.Short2' name='v'/></method><method name='addI16' api_added='11'><parameter type='android.renderscript.Short3' name='v'/></method><method name='addI16' api_added='11'><parameter type='android.renderscript.Short4' name='v'/></method><method name='addI32' api_added='11'><parameter type='int' name='v'/></method><method name='addI32' api_added='11'><parameter type='android.renderscript.Int2' name='v'/></method><method name='addI32' api_added='11'><parameter type='android.renderscript.Int3' name='v'/></method><method name='addI32' api_added='11'><parameter type='android.renderscript.Int4' name='v'/></method><method name='addI64' api_added='11'><parameter type='long' name='v'/></method><method name='addI8' api_added='11'><parameter type='byte' name='v'/></method><method name='addI8' api_added='11'><parameter type='android.renderscript.Byte2' name='v'/></method><method name='addI8' api_added='11'><parameter type='android.renderscript.Byte3' name='v'/></method><method name='addI8' api_added='11'><parameter type='android.renderscript.Byte4' name='v'/></method><method name='addMatrix' api_added='11'><parameter type='android.renderscript.Matrix4f' name='v'/></method><method name='addMatrix' api_added='11'><parameter type='android.renderscript.Matrix3f' name='v'/></method><method name='addMatrix' api_added='11'><parameter type='android.renderscript.Matrix2f' name='v'/></method><method name='addObj' api_added='11'><parameter type='android.renderscript.BaseObj' name='obj'/></method><method name='addU16' api_added='11'><parameter type='int' name='v'/></method><method name='addU16' api_added='11'><parameter type='android.renderscript.Int2' name='v'/></method><method name='addU16' api_added='11'><parameter type='android.renderscript.Int3' name='v'/></method><method name='addU16' api_added='11'><parameter type='android.renderscript.Int4' name='v'/></method><method name='addU32' api_added='11'><parameter type='long' name='v'/></method><method name='addU32' api_added='11'><parameter type='android.renderscript.Long2' name='v'/></method><method name='addU32' api_added='11'><parameter type='android.renderscript.Long3' name='v'/></method><method name='addU32' api_added='11'><parameter type='android.renderscript.Long4' name='v'/></method><method name='addU64' api_added='11'><parameter type='long' name='v'/></method><method name='addU8' api_added='11'><parameter type='short' name='v'/></method><method name='addU8' api_added='11'><parameter type='android.renderscript.Short2' name='v'/></method><method name='addU8' api_added='11'><parameter type='android.renderscript.Short3' name='v'/></method><method name='addU8' api_added='11'><parameter type='android.renderscript.Short4' name='v'/></method><method name='align' api_added='11'><parameter type='int' name='v'/></method><method return='byte[]' name='getData' api_added='11' final='true'/><method name='reset' api_added='11'/><method name='reset' api_added='11'><parameter type='int' name='i'/></method><method name='skip' api_added='11'><parameter type='int' name='i'/></method><method name='addF64' api_added='14'><parameter type='android.renderscript.Double2' name='arg0'/></method><method name='addF64' api_added='14'><parameter type='android.renderscript.Double3' name='arg0'/></method><method name='addF64' api_added='14'><parameter type='android.renderscript.Double4' name='arg0'/></method><method name='addI64' api_added='14'><parameter type='android.renderscript.Long2' name='arg0'/></method><method name='addI64' api_added='14'><parameter type='android.renderscript.Long3' name='arg0'/></method><method name='addI64' api_added='14'><parameter type='android.renderscript.Long4' name='arg0'/></method><method name='addU64' api_added='14'><parameter type='android.renderscript.Long2' name='arg0'/></method><method name='addU64' api_added='14'><parameter type='android.renderscript.Long3' name='arg0'/></method><method name='addU64' api_added='14'><parameter type='android.renderscript.Long4' name='arg0'/></method></class><class extends='android.renderscript.BaseObj' deprecated='16' name='FileA3D' api_added='11'><method deprecated='16' return='android.renderscript.FileA3D' static='true' name='createFromAsset' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.AssetManager' name='mgr'/><parameter type='java.lang.String' name='path'/></method><method deprecated='16' return='android.renderscript.FileA3D' static='true' name='createFromFile' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='java.lang.String' name='path'/></method><method deprecated='16' return='android.renderscript.FileA3D' static='true' name='createFromFile' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='java.io.File' name='path'/></method><method deprecated='16' return='android.renderscript.FileA3D' static='true' name='createFromResource' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/></method><method deprecated='16' return='android.renderscript.FileA3D.IndexEntry' name='getIndexEntry' api_added='11'><parameter type='int' name='index'/></method><method deprecated='16' return='int' name='getIndexEntryCount' api_added='11'/></class><class extends='java.lang.Enum' deprecated='16' static='true' name='FileA3D.EntryType' api_added='11' final='true'><method return='android.renderscript.FileA3D.EntryType' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.FileA3D.EntryType[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' deprecated='16' static='true' name='FileA3D.IndexEntry' api_added='11'><method deprecated='16' return='android.renderscript.FileA3D.EntryType' name='getEntryType' api_added='11'/><method deprecated='16' return='android.renderscript.Mesh' name='getMesh' api_added='11'/><method deprecated='16' return='java.lang.String' name='getName' api_added='11'/><method deprecated='16' return='android.renderscript.BaseObj' name='getObject' api_added='11'/></class><class extends='java.lang.Object' name='Float2' api_added='11'><constructor type='android.renderscript.Float2' name='Float2' api_added='11'/><constructor type='android.renderscript.Float2' name='Float2' api_added='11'><parameter type='float' name='initX'/><parameter type='float' name='initY'/></constructor></class><class extends='java.lang.Object' name='Float3' api_added='11'><constructor type='android.renderscript.Float3' name='Float3' api_added='11'/><constructor type='android.renderscript.Float3' name='Float3' api_added='11'><parameter type='float' name='initX'/><parameter type='float' name='initY'/><parameter type='float' name='initZ'/></constructor></class><class extends='java.lang.Object' name='Float4' api_added='11'><constructor type='android.renderscript.Float4' name='Float4' api_added='11'/><constructor type='android.renderscript.Float4' name='Float4' api_added='11'><parameter type='float' name='initX'/><parameter type='float' name='initY'/><parameter type='float' name='initZ'/><parameter type='float' name='initW'/></constructor></class><class extends='android.renderscript.BaseObj' deprecated='16' name='Font' api_added='11'><method deprecated='16' return='android.renderscript.Font' static='true' name='create' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='java.lang.String' name='familyName'/><parameter type='android.renderscript.Font.Style' name='fontStyle'/><parameter type='float' name='pointSize'/></method><method deprecated='16' return='android.renderscript.Font' static='true' name='createFromAsset' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='java.lang.String' name='path'/><parameter type='float' name='pointSize'/></method><method deprecated='16' return='android.renderscript.Font' static='true' name='createFromFile' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='java.lang.String' name='path'/><parameter type='float' name='pointSize'/></method><method deprecated='16' return='android.renderscript.Font' static='true' name='createFromFile' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='java.io.File' name='path'/><parameter type='float' name='pointSize'/></method><method deprecated='16' return='android.renderscript.Font' static='true' name='createFromResource' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='res'/><parameter type='int' name='id'/><parameter type='float' name='pointSize'/></method></class><class extends='java.lang.Enum' deprecated='16' static='true' name='Font.Style' api_added='11' final='true'><method return='android.renderscript.Font.Style' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Font.Style[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' name='Int2' api_added='11'><constructor type='android.renderscript.Int2' name='Int2' api_added='11'/></class><class extends='java.lang.Object' name='Int3' api_added='11'><constructor type='android.renderscript.Int3' name='Int3' api_added='11'/></class><class extends='java.lang.Object' name='Int4' api_added='11'><constructor type='android.renderscript.Int4' name='Int4' api_added='11'/></class><class extends='java.lang.Object' name='Long2' api_added='11'><constructor type='android.renderscript.Long2' name='Long2' api_added='11'/></class><class extends='java.lang.Object' name='Long3' api_added='11'><constructor type='android.renderscript.Long3' name='Long3' api_added='11'/></class><class extends='java.lang.Object' name='Long4' api_added='11'><constructor type='android.renderscript.Long4' name='Long4' api_added='11'/></class><class extends='java.lang.Object' name='Matrix2f' api_added='11'><constructor type='android.renderscript.Matrix2f' name='Matrix2f' api_added='11'/><constructor type='android.renderscript.Matrix2f' name='Matrix2f' api_added='11'><parameter type='float[]' name='dataArray'/></constructor><method return='float' name='get' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/></method><method return='float[]' name='getArray' api_added='11'/><method name='load' api_added='11'><parameter type='android.renderscript.Matrix2f' name='src'/></method><method name='loadIdentity' api_added='11'/><method name='loadMultiply' api_added='11'><parameter type='android.renderscript.Matrix2f' name='lhs'/><parameter type='android.renderscript.Matrix2f' name='rhs'/></method><method name='loadRotate' api_added='11'><parameter type='float' name='rot'/></method><method name='loadScale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='multiply' api_added='11'><parameter type='android.renderscript.Matrix2f' name='rhs'/></method><method name='rotate' api_added='11'><parameter type='float' name='rot'/></method><method name='scale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='set' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/><parameter type='float' name='v'/></method><method name='transpose' api_added='11'/></class><class extends='java.lang.Object' name='Matrix3f' api_added='11'><constructor type='android.renderscript.Matrix3f' name='Matrix3f' api_added='11'/><constructor type='android.renderscript.Matrix3f' name='Matrix3f' api_added='11'><parameter type='float[]' name='dataArray'/></constructor><method return='float' name='get' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/></method><method return='float[]' name='getArray' api_added='11'/><method name='load' api_added='11'><parameter type='android.renderscript.Matrix3f' name='src'/></method><method name='loadIdentity' api_added='11'/><method name='loadMultiply' api_added='11'><parameter type='android.renderscript.Matrix3f' name='lhs'/><parameter type='android.renderscript.Matrix3f' name='rhs'/></method><method name='loadRotate' api_added='11'><parameter type='float' name='rot'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='loadRotate' api_added='11'><parameter type='float' name='rot'/></method><method name='loadScale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='loadScale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='loadTranslate' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='multiply' api_added='11'><parameter type='android.renderscript.Matrix3f' name='rhs'/></method><method name='rotate' api_added='11'><parameter type='float' name='rot'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='rotate' api_added='11'><parameter type='float' name='rot'/></method><method name='scale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='scale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='set' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/><parameter type='float' name='v'/></method><method name='translate' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method name='transpose' api_added='11'/></class><class extends='java.lang.Object' name='Matrix4f' api_added='11'><constructor type='android.renderscript.Matrix4f' name='Matrix4f' api_added='11'/><constructor type='android.renderscript.Matrix4f' name='Matrix4f' api_added='11'><parameter type='float[]' name='dataArray'/></constructor><method return='float' name='get' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/></method><method return='float[]' name='getArray' api_added='11'/><method return='boolean' name='inverse' api_added='11'/><method return='boolean' name='inverseTranspose' api_added='11'/><method name='load' api_added='11'><parameter type='android.renderscript.Matrix4f' name='src'/></method><method name='loadFrustum' api_added='11'><parameter type='float' name='l'/><parameter type='float' name='r'/><parameter type='float' name='b'/><parameter type='float' name='t'/><parameter type='float' name='n'/><parameter type='float' name='f'/></method><method name='loadIdentity' api_added='11'/><method name='loadMultiply' api_added='11'><parameter type='android.renderscript.Matrix4f' name='lhs'/><parameter type='android.renderscript.Matrix4f' name='rhs'/></method><method name='loadOrtho' api_added='11'><parameter type='float' name='l'/><parameter type='float' name='r'/><parameter type='float' name='b'/><parameter type='float' name='t'/><parameter type='float' name='n'/><parameter type='float' name='f'/></method><method name='loadOrthoWindow' api_added='11'><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method name='loadPerspective' api_added='11'><parameter type='float' name='fovy'/><parameter type='float' name='aspect'/><parameter type='float' name='near'/><parameter type='float' name='far'/></method><method name='loadProjectionNormalized' api_added='11'><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method name='loadRotate' api_added='11'><parameter type='float' name='rot'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='loadScale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='loadTranslate' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='multiply' api_added='11'><parameter type='android.renderscript.Matrix4f' name='rhs'/></method><method name='rotate' api_added='11'><parameter type='float' name='rot'/><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='scale' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='set' api_added='11'><parameter type='int' name='i'/><parameter type='int' name='j'/><parameter type='float' name='v'/></method><method name='translate' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method name='transpose' api_added='11'/></class><class extends='android.renderscript.BaseObj' deprecated='16' name='Mesh' api_added='11'><method deprecated='16' return='android.renderscript.Allocation' name='getIndexSetAllocation' api_added='11'><parameter type='int' name='slot'/></method><method deprecated='16' return='android.renderscript.Mesh.Primitive' name='getPrimitive' api_added='11'><parameter type='int' name='slot'/></method><method deprecated='16' return='int' name='getPrimitiveCount' api_added='11'/><method deprecated='16' return='android.renderscript.Allocation' name='getVertexAllocation' api_added='11'><parameter type='int' name='slot'/></method><method deprecated='16' return='int' name='getVertexAllocationCount' api_added='11'/></class><class extends='java.lang.Object' deprecated='16' static='true' name='Mesh.AllocationBuilder' api_added='11'><constructor api_removed='16' type='android.renderscript.Mesh.AllocationBuilder' name='Mesh.AllocationBuilder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated Mesh.AllocationBuilder' name='deprecated Mesh.AllocationBuilder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.Mesh.AllocationBuilder' name='addIndexSetAllocation' api_added='11'><parameter type='android.renderscript.Allocation' name='a'/><parameter type='android.renderscript.Mesh.Primitive' name='p'/></method><method deprecated='16' return='android.renderscript.Mesh.AllocationBuilder' name='addIndexSetType' api_added='11'><parameter type='android.renderscript.Mesh.Primitive' name='p'/></method><method deprecated='16' return='android.renderscript.Mesh.AllocationBuilder' name='addVertexAllocation' api_added='11'><parameter type='android.renderscript.Allocation' name='a'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method deprecated='16' return='android.renderscript.Mesh' name='create' api_added='11'/><method deprecated='16' return='int' name='getCurrentIndexSetIndex' api_added='11'/><method deprecated='16' return='int' name='getCurrentVertexTypeIndex' api_added='11'/></class><class extends='java.lang.Object' deprecated='16' static='true' name='Mesh.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.Mesh.Builder' name='Mesh.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='int' name='usage'/></constructor><constructor type='android.renderscript.deprecated Mesh.Builder' name='deprecated Mesh.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/><parameter type='int' name='arg1'/></constructor><method deprecated='16' return='android.renderscript.Mesh.Builder' name='addIndexSetType' api_added='11'><parameter type='android.renderscript.Type' name='t'/><parameter type='android.renderscript.Mesh.Primitive' name='p'/></method><method deprecated='16' return='android.renderscript.Mesh.Builder' name='addIndexSetType' api_added='11'><parameter type='android.renderscript.Mesh.Primitive' name='p'/></method><method deprecated='16' return='android.renderscript.Mesh.Builder' name='addIndexSetType' api_added='11'><parameter type='android.renderscript.Element' name='e'/><parameter type='int' name='size'/><parameter type='android.renderscript.Mesh.Primitive' name='p'/></method><method deprecated='16' return='android.renderscript.Mesh.Builder' name='addVertexType' api_added='11'><parameter type='android.renderscript.Type' name='t'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method deprecated='16' return='android.renderscript.Mesh.Builder' name='addVertexType' api_added='11'><parameter type='android.renderscript.Element' name='e'/><parameter type='int' name='size'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method deprecated='16' return='android.renderscript.Mesh' name='create' api_added='11'/><method deprecated='16' return='int' name='getCurrentIndexSetIndex' api_added='11'/><method deprecated='16' return='int' name='getCurrentVertexTypeIndex' api_added='11'/></class><class extends='java.lang.Enum' deprecated='16' static='true' name='Mesh.Primitive' api_added='11' final='true'><method return='android.renderscript.Mesh.Primitive' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Mesh.Primitive[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' deprecated='16' static='true' name='Mesh.TriangleMeshBuilder' api_added='11'><constructor api_removed='16' type='android.renderscript.Mesh.TriangleMeshBuilder' name='Mesh.TriangleMeshBuilder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='int' name='vtxSize'/><parameter type='int' name='flags'/></constructor><constructor type='android.renderscript.deprecated Mesh.TriangleMeshBuilder' name='deprecated Mesh.TriangleMeshBuilder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='addTriangle' api_added='11'><parameter type='int' name='idx1'/><parameter type='int' name='idx2'/><parameter type='int' name='idx3'/></method><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='addVertex' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/></method><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='addVertex' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method deprecated='16' return='android.renderscript.Mesh' name='create' api_added='11'><parameter type='boolean' name='uploadToBufferObject'/></method><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='setColor' api_added='11'><parameter type='float' name='r'/><parameter type='float' name='g'/><parameter type='float' name='b'/><parameter type='float' name='a'/></method><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='setNormal' api_added='11'><parameter type='float' name='x'/><parameter type='float' name='y'/><parameter type='float' name='z'/></method><method deprecated='16' return='android.renderscript.Mesh.TriangleMeshBuilder' name='setTexture' api_added='11'><parameter type='float' name='s'/><parameter type='float' name='t'/></method></class><class extends='android.renderscript.BaseObj' name='Program' api_added='11'><method name='bindConstants' api_added='11'><parameter type='android.renderscript.Allocation' name='a'/><parameter type='int' name='slot'/></method><method name='bindSampler' api_added='11'><parameter type='android.renderscript.Sampler' name='vs'/><parameter type='int' name='slot'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method name='bindTexture' api_added='11'><parameter type='android.renderscript.Allocation' name='va'/><parameter type='int' name='slot'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='android.renderscript.Type' name='getConstant' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getConstantCount' api_added='16'/><method return='int' name='getTextureCount' api_added='16'/><method return='java.lang.String' name='getTextureName' api_added='16'><parameter type='int' name='arg0'/></method><method return='android.renderscript.Program.TextureType' name='getTextureType' api_added='16'><parameter type='int' name='arg0'/></method></class><class extends='java.lang.Object' static='true' name='Program.BaseProgramBuilder' api_added='11'><constructor visibility='protected' type='android.renderscript.Program.BaseProgramBuilder' name='Program.BaseProgramBuilder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><method return='android.renderscript.Program.BaseProgramBuilder' name='addConstant' api_added='11'><parameter type='android.renderscript.Type' name='t'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method return='android.renderscript.Program.BaseProgramBuilder' name='addTexture' api_added='11'><parameter type='android.renderscript.Program.TextureType' name='texType'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method return='int' name='getCurrentConstantIndex' api_added='11'/><method return='int' name='getCurrentTextureIndex' api_added='11'/><method visibility='protected' name='initProgram' api_added='11'><parameter type='android.renderscript.Program' name='p'/></method><method return='android.renderscript.Program.BaseProgramBuilder' name='setShader' api_added='11'><parameter type='java.lang.String' name='s'/></method><method return='android.renderscript.Program.BaseProgramBuilder' name='setShader' api_added='11'><parameter type='android.content.res.Resources' name='resources'/><parameter type='int' name='resourceID'/></method><method return='android.renderscript.Program.BaseProgramBuilder' name='addTexture' api_added='16'><parameter type='android.renderscript.Program.TextureType' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method></class><class extends='java.lang.Enum' static='true' name='Program.TextureType' api_added='11' final='true'><method return='android.renderscript.Program.TextureType' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Program.TextureType[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.Program' deprecated='16' name='ProgramFragment' api_added='11'/><class extends='android.renderscript.Program.BaseProgramBuilder' deprecated='16' static='true' name='ProgramFragment.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramFragment.Builder' name='ProgramFragment.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramFragment.Builder' name='deprecated ProgramFragment.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.ProgramFragment' name='create' api_added='11'/></class><class extends='android.renderscript.ProgramFragment' deprecated='16' name='ProgramFragmentFixedFunction' api_added='11'/><class extends='java.lang.Object' deprecated='16' static='true' name='ProgramFragmentFixedFunction.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramFragmentFixedFunction.Builder' name='ProgramFragmentFixedFunction.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramFragmentFixedFunction.Builder' name='deprecated ProgramFragmentFixedFunction.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.ProgramFragmentFixedFunction' name='create' api_added='11'/><method deprecated='16' return='android.renderscript.ProgramFragmentFixedFunction.Builder' name='setPointSpriteTexCoordinateReplacement' api_added='11'><parameter type='boolean' name='enable'/></method><method deprecated='16' return='android.renderscript.ProgramFragmentFixedFunction.Builder' name='setTexture' api_added='11'><parameter type='android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode' name='env'/><parameter type='android.renderscript.ProgramFragmentFixedFunction.Builder.Format' name='fmt'/><parameter type='int' name='slot'/><exception type='java.lang.IllegalArgumentException' name='IllegalArgumentException'/></method><method deprecated='16' return='android.renderscript.ProgramFragmentFixedFunction.Builder' name='setVaryingColor' api_added='11'><parameter type='boolean' name='enable'/></method></class><class extends='java.lang.Enum' deprecated='16' static='true' name='ProgramFragmentFixedFunction.Builder.EnvMode' api_added='11' final='true'><method return='android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramFragmentFixedFunction.Builder.EnvMode[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Enum' deprecated='16' static='true' name='ProgramFragmentFixedFunction.Builder.Format' api_added='11' final='true'><method return='android.renderscript.ProgramFragmentFixedFunction.Builder.Format' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramFragmentFixedFunction.Builder.Format[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.BaseObj' deprecated='16' name='ProgramRaster' api_added='11'><method deprecated='16' return='android.renderscript.ProgramRaster' static='true' name='CULL_BACK' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method deprecated='16' return='android.renderscript.ProgramRaster' static='true' name='CULL_FRONT' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method deprecated='16' return='android.renderscript.ProgramRaster' static='true' name='CULL_NONE' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method deprecated='16' return='android.renderscript.ProgramRaster.CullMode' name='getCullMode' api_added='16'/><method deprecated='16' return='boolean' name='isPointSpriteEnabled' api_added='16'/></class><class extends='java.lang.Object' deprecated='16' static='true' name='ProgramRaster.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramRaster.Builder' name='ProgramRaster.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramRaster.Builder' name='deprecated ProgramRaster.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.ProgramRaster' name='create' api_added='11'/><method deprecated='16' return='android.renderscript.ProgramRaster.Builder' name='setCullMode' api_added='11'><parameter type='android.renderscript.ProgramRaster.CullMode' name='m'/></method><method deprecated='16' return='android.renderscript.ProgramRaster.Builder' name='setPointSpriteEnabled' api_added='11'><parameter type='boolean' name='enable'/></method></class><class extends='java.lang.Enum' deprecated='16' static='true' name='ProgramRaster.CullMode' api_added='11' final='true'><method return='android.renderscript.ProgramRaster.CullMode' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramRaster.CullMode[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.BaseObj' name='ProgramStore' api_added='11'><method return='android.renderscript.ProgramStore' static='true' name='BLEND_ALPHA_DEPTH_NONE' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.ProgramStore' static='true' name='BLEND_ALPHA_DEPTH_TEST' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.ProgramStore' static='true' name='BLEND_NONE_DEPTH_NONE' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.ProgramStore' static='true' name='BLEND_NONE_DEPTH_TEST' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.ProgramStore.BlendDstFunc' name='getBlendDstFunc' api_added='16'/><method return='android.renderscript.ProgramStore.BlendSrcFunc' name='getBlendSrcFunc' api_added='16'/><method return='android.renderscript.ProgramStore.DepthFunc' name='getDepthFunc' api_added='16'/><method return='boolean' name='isColorMaskAlphaEnabled' api_added='16'/><method return='boolean' name='isColorMaskBlueEnabled' api_added='16'/><method return='boolean' name='isColorMaskGreenEnabled' api_added='16'/><method return='boolean' name='isColorMaskRedEnabled' api_added='16'/><method return='boolean' name='isDepthMaskEnabled' api_added='16'/><method return='boolean' name='isDitherEnabled' api_added='16'/></class><class extends='java.lang.Enum' static='true' name='ProgramStore.BlendDstFunc' api_added='11' final='true'><method return='android.renderscript.ProgramStore.BlendDstFunc' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramStore.BlendDstFunc[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Enum' static='true' name='ProgramStore.BlendSrcFunc' api_added='11' final='true'><method return='android.renderscript.ProgramStore.BlendSrcFunc' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramStore.BlendSrcFunc[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' static='true' name='ProgramStore.Builder' api_added='11'><constructor type='android.renderscript.ProgramStore.Builder' name='ProgramStore.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><method return='android.renderscript.ProgramStore' name='create' api_added='11'/><method return='android.renderscript.ProgramStore.Builder' name='setBlendFunc' api_added='11'><parameter type='android.renderscript.ProgramStore.BlendSrcFunc' name='src'/><parameter type='android.renderscript.ProgramStore.BlendDstFunc' name='dst'/></method><method return='android.renderscript.ProgramStore.Builder' name='setColorMaskEnabled' api_added='11'><parameter type='boolean' name='r'/><parameter type='boolean' name='g'/><parameter type='boolean' name='b'/><parameter type='boolean' name='a'/></method><method return='android.renderscript.ProgramStore.Builder' name='setDepthFunc' api_added='11'><parameter type='android.renderscript.ProgramStore.DepthFunc' name='func'/></method><method return='android.renderscript.ProgramStore.Builder' name='setDepthMaskEnabled' api_added='11'><parameter type='boolean' name='enable'/></method><method return='android.renderscript.ProgramStore.Builder' name='setDitherEnabled' api_added='11'><parameter type='boolean' name='enable'/></method></class><class extends='java.lang.Enum' static='true' name='ProgramStore.DepthFunc' api_added='11' final='true'><method return='android.renderscript.ProgramStore.DepthFunc' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.ProgramStore.DepthFunc[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.Program' deprecated='16' name='ProgramVertex' api_added='11'><method deprecated='16' return='android.renderscript.Element' name='getInput' api_added='16'><parameter type='int' name='arg0'/></method><method deprecated='16' return='int' name='getInputCount' api_added='16'/></class><class extends='android.renderscript.Program.BaseProgramBuilder' deprecated='16' static='true' name='ProgramVertex.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramVertex.Builder' name='ProgramVertex.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramVertex.Builder' name='deprecated ProgramVertex.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.ProgramVertex.Builder' name='addInput' api_added='11'><parameter type='android.renderscript.Element' name='e'/><exception type='java.lang.IllegalStateException' name='IllegalStateException'/></method><method deprecated='16' return='android.renderscript.ProgramVertex' name='create' api_added='11'/></class><class extends='android.renderscript.ProgramVertex' deprecated='16' name='ProgramVertexFixedFunction' api_added='11'><method deprecated='16' name='bindConstants' api_added='11'><parameter type='android.renderscript.ProgramVertexFixedFunction.Constants' name='va'/></method></class><class extends='java.lang.Object' deprecated='16' static='true' name='ProgramVertexFixedFunction.Builder' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramVertexFixedFunction.Builder' name='ProgramVertexFixedFunction.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramVertexFixedFunction.Builder' name='deprecated ProgramVertexFixedFunction.Builder' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.ProgramVertexFixedFunction' name='create' api_added='11'/><method deprecated='16' return='android.renderscript.ProgramVertexFixedFunction.Builder' name='setTextureMatrixEnable' api_added='11'><parameter type='boolean' name='enable'/></method></class><class extends='java.lang.Object' deprecated='16' static='true' name='ProgramVertexFixedFunction.Constants' api_added='11'><constructor api_removed='16' type='android.renderscript.ProgramVertexFixedFunction.Constants' name='ProgramVertexFixedFunction.Constants' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor type='android.renderscript.deprecated ProgramVertexFixedFunction.Constants' name='deprecated ProgramVertexFixedFunction.Constants' api_added='16'><parameter type='android.renderscript.RenderScript' name='arg0'/></constructor><method deprecated='16' name='destroy' api_added='11'/><method deprecated='16' name='setModelview' api_added='11'><parameter type='android.renderscript.Matrix4f' name='m'/></method><method deprecated='16' name='setProjection' api_added='11'><parameter type='android.renderscript.Matrix4f' name='m'/></method><method deprecated='16' name='setTexture' api_added='11'><parameter type='android.renderscript.Matrix4f' name='m'/></method></class><class extends='android.renderscript.RSRuntimeException' name='RSDriverException' api_added='11'><constructor type='android.renderscript.RSDriverException' name='RSDriverException' api_added='11'><parameter type='java.lang.String' name='string'/></constructor></class><class extends='android.renderscript.RSRuntimeException' name='RSIllegalArgumentException' api_added='11'><constructor type='android.renderscript.RSIllegalArgumentException' name='RSIllegalArgumentException' api_added='11'><parameter type='java.lang.String' name='string'/></constructor></class><class extends='android.renderscript.RSRuntimeException' name='RSInvalidStateException' api_added='11'><constructor type='android.renderscript.RSInvalidStateException' name='RSInvalidStateException' api_added='11'><parameter type='java.lang.String' name='string'/></constructor></class><class extends='java.lang.RuntimeException' name='RSRuntimeException' api_added='11'><constructor type='android.renderscript.RSRuntimeException' name='RSRuntimeException' api_added='11'><parameter type='java.lang.String' name='string'/></constructor></class><class extends='android.view.SurfaceView' deprecated='16' name='RSSurfaceView' api_added='11'><constructor api_removed='16' type='android.renderscript.RSSurfaceView' name='RSSurfaceView' api_added='11'><parameter type='android.content.Context' name='context'/></constructor><constructor type='android.renderscript.RSSurfaceView' name='RSSurfaceView' api_added='11'><parameter type='android.content.Context' name='context'/><parameter type='android.util.AttributeSet' name='attrs'/></constructor><constructor type='android.renderscript.deprecated RSSurfaceView' name='deprecated RSSurfaceView' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.renderscript.deprecated RSSurfaceView' name='deprecated RSSurfaceView' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.RenderScriptGL' name='createRenderScriptGL' api_added='11'><parameter type='android.renderscript.RenderScriptGL.SurfaceConfig' name='sc'/></method><method deprecated='16' name='destroyRenderScriptGL' api_added='11'/><method deprecated='16' return='android.renderscript.RenderScriptGL' name='getRenderScriptGL' api_added='11'/><method deprecated='16' name='pause' api_added='11'/><method deprecated='16' name='resume' api_added='11'/><method deprecated='16' name='setRenderScriptGL' api_added='11'><parameter type='android.renderscript.RenderScriptGL' name='rs'/></method><method deprecated='16' name='surfaceChanged' api_added='11'><parameter type='android.view.SurfaceHolder' name='holder'/><parameter type='int' name='format'/><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method deprecated='16' name='surfaceCreated' api_added='11'><parameter type='android.view.SurfaceHolder' name='holder'/></method><method deprecated='16' name='surfaceDestroyed' api_added='11'><parameter type='android.view.SurfaceHolder' name='holder'/></method></class><class extends='java.lang.Object' name='RenderScript' api_added='11'><method name='contextDump' api_added='11'/><method return='android.renderscript.RenderScript' static='true' name='create' api_added='11'><parameter type='android.content.Context' name='ctx'/></method><method name='destroy' api_added='11'/><method name='finish' api_added='11'/><method return='android.content.Context' name='getApplicationContext' api_added='11' final='true'/><method return='android.renderscript.RenderScript.RSErrorHandler' name='getErrorHandler' api_added='11'/><method return='android.renderscript.RenderScript.RSMessageHandler' name='getMessageHandler' api_added='11'/><method name='setErrorHandler' api_added='11'><parameter type='android.renderscript.RenderScript.RSErrorHandler' name='msg'/></method><method name='setMessageHandler' api_added='11'><parameter type='android.renderscript.RenderScript.RSMessageHandler' name='msg'/></method><method name='setPriority' api_added='11'><parameter type='android.renderscript.RenderScript.Priority' name='p'/></method></class><class extends='java.lang.Enum' static='true' name='RenderScript.Priority' api_added='11' final='true'><method return='android.renderscript.RenderScript.Priority' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.RenderScript.Priority[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' static='true' name='RenderScript.RSErrorHandler' api_added='11'><constructor type='android.renderscript.RenderScript.RSErrorHandler' name='RenderScript.RSErrorHandler' api_added='11'/><method name='run' api_added='11'/></class><class extends='java.lang.Object' static='true' name='RenderScript.RSMessageHandler' api_added='11'><constructor type='android.renderscript.RenderScript.RSMessageHandler' name='RenderScript.RSMessageHandler' api_added='11'/><method name='run' api_added='11'/></class><class extends='android.renderscript.RenderScript' deprecated='16' name='RenderScriptGL' api_added='11'><constructor api_removed='16' type='android.renderscript.RenderScriptGL' name='RenderScriptGL' api_added='11'><parameter type='android.content.Context' name='ctx'/><parameter type='android.renderscript.RenderScriptGL.SurfaceConfig' name='sc'/></constructor><constructor type='android.renderscript.deprecated RenderScriptGL' name='deprecated RenderScriptGL' api_added='16'><parameter type='android.content.Context' name='arg0'/><parameter type='android.renderscript.RenderScriptGL.SurfaceConfig' name='arg1'/></constructor><method deprecated='16' name='bindProgramFragment' api_added='11'><parameter type='android.renderscript.ProgramFragment' name='p'/></method><method deprecated='16' name='bindProgramRaster' api_added='11'><parameter type='android.renderscript.ProgramRaster' name='p'/></method><method deprecated='16' name='bindProgramStore' api_added='11'><parameter type='android.renderscript.ProgramStore' name='p'/></method><method deprecated='16' name='bindProgramVertex' api_added='11'><parameter type='android.renderscript.ProgramVertex' name='p'/></method><method deprecated='16' name='bindRootScript' api_added='11'><parameter type='android.renderscript.Script' name='s'/></method><method deprecated='16' return='int' name='getHeight' api_added='11'/><method deprecated='16' return='int' name='getWidth' api_added='11'/><method deprecated='16' name='pause' api_added='11'/><method deprecated='16' name='resume' api_added='11'/><method deprecated='16' name='setSurface' api_added='11'><parameter type='android.view.SurfaceHolder' name='sur'/><parameter type='int' name='w'/><parameter type='int' name='h'/></method><method deprecated='16' name='setSurfaceTexture' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method></class><class extends='java.lang.Object' deprecated='16' static='true' name='RenderScriptGL.SurfaceConfig' api_added='11'><constructor api_removed='16' type='android.renderscript.RenderScriptGL.SurfaceConfig' name='RenderScriptGL.SurfaceConfig' api_added='11'/><constructor type='android.renderscript.RenderScriptGL.SurfaceConfig' name='RenderScriptGL.SurfaceConfig' api_added='11'><parameter type='android.renderscript.RenderScriptGL.SurfaceConfig' name='sc'/></constructor><constructor type='android.renderscript.deprecated RenderScriptGL.SurfaceConfig' name='deprecated RenderScriptGL.SurfaceConfig' api_added='16'/><constructor type='android.renderscript.deprecated RenderScriptGL.SurfaceConfig' name='deprecated RenderScriptGL.SurfaceConfig' api_added='16'/><method deprecated='16' name='setAlpha' api_added='11'><parameter type='int' name='minimum'/><parameter type='int' name='preferred'/></method><method deprecated='16' name='setColor' api_added='11'><parameter type='int' name='minimum'/><parameter type='int' name='preferred'/></method><method deprecated='16' name='setDepth' api_added='11'><parameter type='int' name='minimum'/><parameter type='int' name='preferred'/></method><method deprecated='16' name='setSamples' api_added='11'><parameter type='int' name='minimum'/><parameter type='int' name='preferred'/><parameter type='float' name='Q'/></method></class><class extends='android.renderscript.BaseObj' name='Sampler' api_added='11'><method return='android.renderscript.Sampler' static='true' name='CLAMP_LINEAR' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Sampler' static='true' name='CLAMP_LINEAR_MIP_LINEAR' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Sampler' static='true' name='CLAMP_NEAREST' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Sampler' static='true' name='WRAP_LINEAR' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Sampler' static='true' name='WRAP_LINEAR_MIP_LINEAR' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='android.renderscript.Sampler' static='true' name='WRAP_NEAREST' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></method><method return='float' name='getAnisotropy' api_added='16'/><method return='android.renderscript.Sampler.Value' name='getMagnification' api_added='16'/><method return='android.renderscript.Sampler.Value' name='getMinification' api_added='16'/><method return='android.renderscript.Sampler.Value' name='getWrapS' api_added='16'/><method return='android.renderscript.Sampler.Value' name='getWrapT' api_added='16'/></class><class extends='java.lang.Object' static='true' name='Sampler.Builder' api_added='11'><constructor type='android.renderscript.Sampler.Builder' name='Sampler.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><method return='android.renderscript.Sampler' name='create' api_added='11'/><method name='setAnisotropy' api_added='11'><parameter type='float' name='v'/></method><method name='setMagnification' api_added='11'><parameter type='android.renderscript.Sampler.Value' name='v'/></method><method name='setMinification' api_added='11'><parameter type='android.renderscript.Sampler.Value' name='v'/></method><method name='setWrapS' api_added='11'><parameter type='android.renderscript.Sampler.Value' name='v'/></method><method name='setWrapT' api_added='11'><parameter type='android.renderscript.Sampler.Value' name='v'/></method></class><class extends='java.lang.Enum' static='true' name='Sampler.Value' api_added='11' final='true'><method return='android.renderscript.Sampler.Value' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Sampler.Value[]' static='true' name='values' api_added='11' final='true'/></class><class extends='android.renderscript.BaseObj' name='Script' api_added='11'><method name='bindAllocation' api_added='11'><parameter type='android.renderscript.Allocation' name='va'/><parameter type='int' name='slot'/></method><method visibility='protected' name='invoke' api_added='11'><parameter type='int' name='slot'/></method><method visibility='protected' name='invoke' api_added='11'><parameter type='int' name='slot'/><parameter type='android.renderscript.FieldPacker' name='v'/></method><method name='setTimeZone' api_added='11'><parameter type='java.lang.String' name='timeZone'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='float' name='v'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='double' name='v'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='int' name='v'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='long' name='v'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='boolean' name='v'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='android.renderscript.BaseObj' name='o'/></method><method name='setVar' api_added='11'><parameter type='int' name='index'/><parameter type='android.renderscript.FieldPacker' name='v'/></method><method visibility='protected' name='forEach' api_added='14'><parameter type='int' name='arg0'/><parameter type='android.renderscript.Allocation' name='arg1'/><parameter type='android.renderscript.Allocation' name='arg2'/><parameter type='android.renderscript.FieldPacker' name='arg3'/></method><method name='setVar' api_added='16'><parameter type='int' name='arg0'/><parameter type='android.renderscript.FieldPacker' name='arg1'/><parameter type='android.renderscript.Element' name='arg2'/><parameter type='int[]' name='arg3'/></method></class><class extends='java.lang.Object' static='true' name='Script.Builder' api_added='11'/><class extends='java.lang.Object' static='true' name='Script.FieldBase' api_added='11'><constructor visibility='protected' type='android.renderscript.Script.FieldBase' name='Script.FieldBase' api_added='11'/><method return='android.renderscript.Allocation' name='getAllocation' api_added='11'/><method return='android.renderscript.Element' name='getElement' api_added='11'/><method return='android.renderscript.Type' name='getType' api_added='11'/><method visibility='protected' name='init' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='int' name='dimx'/></method><method visibility='protected' name='init' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='int' name='dimx'/><parameter type='int' name='usages'/></method><method name='updateAllocation' api_added='11'/></class><class extends='android.renderscript.Script' name='ScriptC' api_added='11'><constructor visibility='protected' type='android.renderscript.ScriptC' name='ScriptC' api_added='11'><parameter type='int' name='id'/><parameter type='android.renderscript.RenderScript' name='rs'/></constructor><constructor visibility='protected' type='android.renderscript.ScriptC' name='ScriptC' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.content.res.Resources' name='resources'/><parameter type='int' name='resourceID'/></constructor></class><class extends='java.lang.Object' name='Short2' api_added='11'><constructor type='android.renderscript.Short2' name='Short2' api_added='11'/></class><class extends='java.lang.Object' name='Short3' api_added='11'><constructor type='android.renderscript.Short3' name='Short3' api_added='11'/></class><class extends='java.lang.Object' name='Short4' api_added='11'><constructor type='android.renderscript.Short4' name='Short4' api_added='11'/></class><class extends='android.renderscript.BaseObj' name='Type' api_added='11'><method return='int' name='getCount' api_added='11'/><method return='android.renderscript.Element' name='getElement' api_added='11'/><method return='int' name='getX' api_added='11'/><method return='int' name='getY' api_added='11'/><method return='int' name='getZ' api_added='11'/><method return='boolean' name='hasFaces' api_added='11'/><method return='boolean' name='hasMipmaps' api_added='11'/></class><class extends='java.lang.Object' static='true' name='Type.Builder' api_added='11'><constructor type='android.renderscript.Type.Builder' name='Type.Builder' api_added='11'><parameter type='android.renderscript.RenderScript' name='rs'/><parameter type='android.renderscript.Element' name='e'/></constructor><method return='android.renderscript.Type' name='create' api_added='11'/><method return='android.renderscript.Type.Builder' name='setFaces' api_added='11'><parameter type='boolean' name='value'/></method><method return='android.renderscript.Type.Builder' name='setMipmaps' api_added='11'><parameter type='boolean' name='value'/></method><method return='android.renderscript.Type.Builder' name='setX' api_added='11'><parameter type='int' name='value'/></method><method return='android.renderscript.Type.Builder' name='setY' api_added='11'><parameter type='int' name='value'/></method></class><class extends='java.lang.Enum' static='true' name='Type.CubemapFace' api_added='11' final='true'><method return='android.renderscript.Type.CubemapFace' static='true' name='valueOf' api_added='11'><parameter type='java.lang.String' name='name'/></method><method return='android.renderscript.Type.CubemapFace[]' static='true' name='values' api_added='11' final='true'/></class><class extends='java.lang.Object' name='Double2' api_added='14'><constructor type='android.renderscript.Double2' name='Double2' api_added='14'/><constructor type='android.renderscript.Double2' name='Double2' api_added='14'><parameter type='double' name='arg0'/><parameter type='double' name='arg1'/></constructor></class><class extends='java.lang.Object' name='Double3' api_added='14'><constructor type='android.renderscript.Double3' name='Double3' api_added='14'/><constructor type='android.renderscript.Double3' name='Double3' api_added='14'><parameter type='double' name='arg0'/><parameter type='double' name='arg1'/><parameter type='double' name='arg2'/></constructor></class><class extends='java.lang.Object' name='Double4' api_added='14'><constructor type='android.renderscript.Double4' name='Double4' api_added='14'/><constructor type='android.renderscript.Double4' name='Double4' api_added='14'><parameter type='double' name='arg0'/><parameter type='double' name='arg1'/><parameter type='double' name='arg2'/><parameter type='double' name='arg3'/></constructor></class><class extends='android.view.TextureView' deprecated='16' name='RSTextureView' api_added='14'><constructor api_removed='16' type='android.renderscript.RSTextureView' name='RSTextureView' api_added='14'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.renderscript.RSTextureView' name='RSTextureView' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.util.AttributeSet' name='arg1'/></constructor><constructor type='android.renderscript.deprecated RSTextureView' name='deprecated RSTextureView' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><constructor type='android.renderscript.deprecated RSTextureView' name='deprecated RSTextureView' api_added='16'><parameter type='android.content.Context' name='arg0'/></constructor><method deprecated='16' return='android.renderscript.RenderScriptGL' name='createRenderScriptGL' api_added='14'><parameter type='android.renderscript.RenderScriptGL.SurfaceConfig' name='arg0'/></method><method deprecated='16' name='destroyRenderScriptGL' api_added='14'/><method deprecated='16' return='android.renderscript.RenderScriptGL' name='getRenderScriptGL' api_added='14'/><method deprecated='16' name='onSurfaceTextureAvailable' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method deprecated='16' return='boolean' name='onSurfaceTextureDestroyed' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></method><method deprecated='16' name='onSurfaceTextureSizeChanged' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></method><method deprecated='16' name='onSurfaceTextureUpdated' api_added='14'><parameter type='android.graphics.SurfaceTexture' name='arg0'/></method><method deprecated='16' name='pause' api_added='14'/><method deprecated='16' name='resume' api_added='14'/><method deprecated='16' name='setRenderScriptGL' api_added='14'><parameter type='android.renderscript.RenderScriptGL' name='arg0'/></method></class></package><package name='android.hardware.usb' api_added='12'><class extends='java.lang.Object' name='UsbAccessory' api_added='12'><method return='int' name='describeContents' api_added='12'/><method return='java.lang.String' name='getDescription' api_added='12'/><method return='java.lang.String' name='getManufacturer' api_added='12'/><method return='java.lang.String' name='getModel' api_added='12'/><method return='java.lang.String' name='getSerial' api_added='12'/><method return='java.lang.String' name='getUri' api_added='12'/><method return='java.lang.String' name='getVersion' api_added='12'/><method name='writeToParcel' api_added='12'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='UsbConstants' api_added='12' final='true'><constructor type='android.hardware.usb.UsbConstants' name='UsbConstants' api_added='12'/></class><class extends='java.lang.Object' name='UsbDevice' api_added='12'><method return='int' name='describeContents' api_added='12'/><method return='int' name='getDeviceClass' api_added='12'/><method return='int' name='getDeviceId' api_added='12'/><method return='int' static='true' name='getDeviceId' api_added='12'><parameter type='java.lang.String' name='name'/></method><method return='java.lang.String' name='getDeviceName' api_added='12'/><method return='java.lang.String' static='true' name='getDeviceName' api_added='12'><parameter type='int' name='id'/></method><method return='int' name='getDeviceProtocol' api_added='12'/><method return='int' name='getDeviceSubclass' api_added='12'/><method return='android.hardware.usb.UsbInterface' name='getInterface' api_added='12'><parameter type='int' name='index'/></method><method return='int' name='getInterfaceCount' api_added='12'/><method return='int' name='getProductId' api_added='12'/><method return='int' name='getVendorId' api_added='12'/><method name='writeToParcel' api_added='12'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='UsbDeviceConnection' api_added='12'><method return='int' name='bulkTransfer' api_added='12'><parameter type='android.hardware.usb.UsbEndpoint' name='endpoint'/><parameter type='byte[]' name='buffer'/><parameter type='int' name='length'/><parameter type='int' name='timeout'/></method><method return='boolean' name='claimInterface' api_added='12'><parameter type='android.hardware.usb.UsbInterface' name='intf'/><parameter type='boolean' name='force'/></method><method name='close' api_added='12'/><method return='int' name='controlTransfer' api_added='12'><parameter type='int' name='requestType'/><parameter type='int' name='request'/><parameter type='int' name='value'/><parameter type='int' name='index'/><parameter type='byte[]' name='buffer'/><parameter type='int' name='length'/><parameter type='int' name='timeout'/></method><method return='int' name='getFileDescriptor' api_added='12'/><method return='java.lang.String' name='getSerial' api_added='12'/><method return='boolean' name='releaseInterface' api_added='12'><parameter type='android.hardware.usb.UsbInterface' name='intf'/></method><method return='android.hardware.usb.UsbRequest' name='requestWait' api_added='12'/><method return='byte[]' name='getRawDescriptors' api_added='13'/></class><class extends='java.lang.Object' name='UsbEndpoint' api_added='12'><method return='int' name='describeContents' api_added='12'/><method return='int' name='getAddress' api_added='12'/><method return='int' name='getAttributes' api_added='12'/><method return='int' name='getDirection' api_added='12'/><method return='int' name='getEndpointNumber' api_added='12'/><method return='int' name='getInterval' api_added='12'/><method return='int' name='getMaxPacketSize' api_added='12'/><method return='int' name='getType' api_added='12'/><method name='writeToParcel' api_added='12'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='UsbInterface' api_added='12'><method return='int' name='describeContents' api_added='12'/><method return='android.hardware.usb.UsbEndpoint' name='getEndpoint' api_added='12'><parameter type='int' name='index'/></method><method return='int' name='getEndpointCount' api_added='12'/><method return='int' name='getId' api_added='12'/><method return='int' name='getInterfaceClass' api_added='12'/><method return='int' name='getInterfaceProtocol' api_added='12'/><method return='int' name='getInterfaceSubclass' api_added='12'/><method name='writeToParcel' api_added='12'><parameter type='android.os.Parcel' name='parcel'/><parameter type='int' name='flags'/></method></class><class extends='java.lang.Object' name='UsbManager' api_added='12'><method return='android.hardware.usb.UsbAccessory[]' name='getAccessoryList' api_added='12'/><method return='java.util.HashMap&lt;java.lang.String, android.hardware.usb.UsbDevice&gt;' name='getDeviceList' api_added='12'/><method return='boolean' name='hasPermission' api_added='12'><parameter type='android.hardware.usb.UsbDevice' name='device'/></method><method return='boolean' name='hasPermission' api_added='12'><parameter type='android.hardware.usb.UsbAccessory' name='accessory'/></method><method return='android.os.ParcelFileDescriptor' name='openAccessory' api_added='12'><parameter type='android.hardware.usb.UsbAccessory' name='accessory'/></method><method return='android.hardware.usb.UsbDeviceConnection' name='openDevice' api_added='12'><parameter type='android.hardware.usb.UsbDevice' name='device'/></method><method name='requestPermission' api_added='12'><parameter type='android.hardware.usb.UsbDevice' name='device'/><parameter type='android.app.PendingIntent' name='pi'/></method><method name='requestPermission' api_added='12'><parameter type='android.hardware.usb.UsbAccessory' name='accessory'/><parameter type='android.app.PendingIntent' name='pi'/></method></class><class extends='java.lang.Object' name='UsbRequest' api_added='12'><constructor type='android.hardware.usb.UsbRequest' name='UsbRequest' api_added='12'/><method return='boolean' name='cancel' api_added='12'/><method name='close' api_added='12'/><method return='java.lang.Object' name='getClientData' api_added='12'/><method return='android.hardware.usb.UsbEndpoint' name='getEndpoint' api_added='12'/><method return='boolean' name='initialize' api_added='12'><parameter type='android.hardware.usb.UsbDeviceConnection' name='connection'/><parameter type='android.hardware.usb.UsbEndpoint' name='endpoint'/></method><method return='boolean' name='queue' api_added='12'><parameter type='java.nio.ByteBuffer' name='buffer'/><parameter type='int' name='length'/></method><method name='setClientData' api_added='12'><parameter type='java.lang.Object' name='data'/></method></class></package><package name='android.mtp' api_added='12'><class extends='java.lang.Object' name='MtpConstants' api_added='12' final='true'><constructor type='android.mtp.MtpConstants' name='MtpConstants' api_added='12'/><method return='boolean' static='true' name='isAbstractObject' api_added='12'><parameter type='int' name='format'/></method></class><class extends='java.lang.Object' name='MtpDevice' api_added='12' final='true'><constructor type='android.mtp.MtpDevice' name='MtpDevice' api_added='12'><parameter type='android.hardware.usb.UsbDevice' name='device'/></constructor><method name='close' api_added='12'/><method return='boolean' name='deleteObject' api_added='12'><parameter type='int' name='objectHandle'/></method><method return='int' name='getDeviceId' api_added='12'/><method return='android.mtp.MtpDeviceInfo' name='getDeviceInfo' api_added='12'/><method return='java.lang.String' name='getDeviceName' api_added='12'/><method return='byte[]' name='getObject' api_added='12'><parameter type='int' name='objectHandle'/><parameter type='int' name='objectSize'/></method><method return='int[]' name='getObjectHandles' api_added='12'><parameter type='int' name='storageId'/><parameter type='int' name='format'/><parameter type='int' name='objectHandle'/></method><method return='android.mtp.MtpObjectInfo' name='getObjectInfo' api_added='12'><parameter type='int' name='objectHandle'/></method><method return='long' name='getParent' api_added='12'><parameter type='int' name='objectHandle'/></method><method return='long' name='getStorageId' api_added='12'><parameter type='int' name='objectHandle'/></method><method return='int[]' name='getStorageIds' api_added='12'/><method return='android.mtp.MtpStorageInfo' name='getStorageInfo' api_added='12'><parameter type='int' name='storageId'/></method><method return='byte[]' name='getThumbnail' api_added='12'><parameter type='int' name='objectHandle'/></method><method return='boolean' name='importFile' api_added='12'><parameter type='int' name='objectHandle'/><parameter type='java.lang.String' name='destPath'/></method><method return='boolean' name='open' api_added='12'><parameter type='android.hardware.usb.UsbDeviceConnection' name='connection'/></method></class><class extends='java.lang.Object' name='MtpDeviceInfo' api_added='12'><method return='java.lang.String' name='getManufacturer' api_added='12' final='true'/><method return='java.lang.String' name='getModel' api_added='12' final='true'/><method return='java.lang.String' name='getSerialNumber' api_added='12' final='true'/><method return='java.lang.String' name='getVersion' api_added='12' final='true'/></class><class extends='java.lang.Object' name='MtpObjectInfo' api_added='12' final='true'><method return='int' name='getAssociationDesc' api_added='12' final='true'/><method return='int' name='getAssociationType' api_added='12' final='true'/><method return='int' name='getCompressedSize' api_added='12' final='true'/><method return='long' name='getDateCreated' api_added='12' final='true'/><method return='long' name='getDateModified' api_added='12' final='true'/><method return='int' name='getFormat' api_added='12' final='true'/><method return='int' name='getImagePixDepth' api_added='12' final='true'/><method return='int' name='getImagePixHeight' api_added='12' final='true'/><method return='int' name='getImagePixWidth' api_added='12' final='true'/><method return='java.lang.String' name='getKeywords' api_added='12' final='true'/><method return='java.lang.String' name='getName' api_added='12' final='true'/><method return='int' name='getObjectHandle' api_added='12' final='true'/><method return='int' name='getParent' api_added='12' final='true'/><method return='int' name='getProtectionStatus' api_added='12' final='true'/><method return='int' name='getSequenceNumber' api_added='12' final='true'/><method return='int' name='getStorageId' api_added='12' final='true'/><method return='int' name='getThumbCompressedSize' api_added='12' final='true'/><method return='int' name='getThumbFormat' api_added='12' final='true'/><method return='int' name='getThumbPixHeight' api_added='12' final='true'/><method return='int' name='getThumbPixWidth' api_added='12' final='true'/></class><class extends='java.lang.Object' name='MtpStorageInfo' api_added='12' final='true'><method return='java.lang.String' name='getDescription' api_added='12' final='true'/><method return='long' name='getFreeSpace' api_added='12' final='true'/><method return='long' name='getMaxCapacity' api_added='12' final='true'/><method return='int' name='getStorageId' api_added='12' final='true'/><method return='java.lang.String' name='getVolumeIdentifier' api_added='12' final='true'/></class></package><package name='android.net.rtp' api_added='12'><class extends='java.lang.Object' name='AudioCodec' api_added='12'><method return='android.net.rtp.AudioCodec' static='true' name='getCodec' api_added='12'><parameter type='int' name='type'/><parameter type='java.lang.String' name='rtpmap'/><parameter type='java.lang.String' name='fmtp'/></method><method return='android.net.rtp.AudioCodec[]' static='true' name='getCodecs' api_added='12'/></class><class extends='java.lang.Object' name='AudioGroup' api_added='12'><constructor type='android.net.rtp.AudioGroup' name='AudioGroup' api_added='12'/><method name='clear' api_added='12'/><method return='int' name='getMode' api_added='12'/><method return='android.net.rtp.AudioStream[]' name='getStreams' api_added='12'/><method name='sendDtmf' api_added='12'><parameter type='int' name='event'/></method><method name='setMode' api_added='12'><parameter type='int' name='mode'/></method></class><class extends='android.net.rtp.RtpStream' name='AudioStream' api_added='12'><constructor type='android.net.rtp.AudioStream' name='AudioStream' api_added='12'><parameter type='java.net.InetAddress' name='address'/><exception type='java.net.SocketException' name='SocketException'/></constructor><method return='android.net.rtp.AudioCodec' name='getCodec' api_added='12'/><method return='int' name='getDtmfType' api_added='12'/><method return='android.net.rtp.AudioGroup' name='getGroup' api_added='12'/><method return='boolean' name='isBusy' api_added='12' final='true'/><method name='join' api_added='12'><parameter type='android.net.rtp.AudioGroup' name='group'/></method><method name='setCodec' api_added='12'><parameter type='android.net.rtp.AudioCodec' name='codec'/></method><method name='setDtmfType' api_added='12'><parameter type='int' name='type'/></method></class><class extends='java.lang.Object' name='RtpStream' api_added='12'><method name='associate' api_added='12'><parameter type='java.net.InetAddress' name='address'/><parameter type='int' name='port'/></method><method return='java.net.InetAddress' name='getLocalAddress' api_added='12'/><method return='int' name='getLocalPort' api_added='12'/><method return='int' name='getMode' api_added='12'/><method return='java.net.InetAddress' name='getRemoteAddress' api_added='12'/><method return='int' name='getRemotePort' api_added='12'/><method return='boolean' name='isBusy' api_added='12'/><method name='release' api_added='12'/><method name='setMode' api_added='12'><parameter type='int' name='mode'/></method></class></package><package name='android.media.effect' api_added='14'><class extends='java.lang.Object' abstract='true' name='Effect' api_added='14'><constructor type='android.media.effect.Effect' name='Effect' api_added='14'/><method abstract='true' name='apply' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></method><method return='java.lang.String' abstract='true' name='getName' api_added='14'/><method abstract='true' name='release' api_added='14'/><method abstract='true' name='setParameter' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Object' name='arg1'/></method><method name='setUpdateListener' api_added='14'><parameter type='android.media.effect.EffectUpdateListener' name='arg0'/></method></class><class extends='java.lang.Object' name='EffectContext' api_added='14'><method return='android.media.effect.EffectContext' static='true' name='createWithCurrentGlContext' api_added='14'/><method return='android.media.effect.EffectFactory' name='getFactory' api_added='14'/><method name='release' api_added='14'/></class><class extends='java.lang.Object' name='EffectFactory' api_added='14'><method return='android.media.effect.Effect' name='createEffect' api_added='14'><parameter type='java.lang.String' name='arg0'/></method><method return='boolean' static='true' name='isEffectSupported' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></class><interface extends='java.lang.Object' abstract='true' name='EffectUpdateListener' api_added='14'><method abstract='true' name='onEffectUpdated' api_added='14'><parameter type='android.media.effect.Effect' name='arg0'/><parameter type='java.lang.Object' name='arg1'/></method></interface></package><package name='android.net.wifi.p2p' api_added='14'><class extends='java.lang.Object' name='WifiP2pConfig' api_added='14'><constructor type='android.net.wifi.p2p.WifiP2pConfig' name='WifiP2pConfig' api_added='14'/><constructor type='android.net.wifi.p2p.WifiP2pConfig' name='WifiP2pConfig' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pConfig' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pDevice' api_added='14'><constructor type='android.net.wifi.p2p.WifiP2pDevice' name='WifiP2pDevice' api_added='14'/><constructor type='android.net.wifi.p2p.WifiP2pDevice' name='WifiP2pDevice' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pDevice' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='boolean' name='isGroupOwner' api_added='14'/><method return='boolean' name='isServiceDiscoveryCapable' api_added='14'/><method return='boolean' name='wpsDisplaySupported' api_added='14'/><method return='boolean' name='wpsKeypadSupported' api_added='14'/><method return='boolean' name='wpsPbcSupported' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pDeviceList' api_added='14'><constructor type='android.net.wifi.p2p.WifiP2pDeviceList' name='WifiP2pDeviceList' api_added='14'/><constructor type='android.net.wifi.p2p.WifiP2pDeviceList' name='WifiP2pDeviceList' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pDeviceList' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='java.util.Collection&lt;android.net.wifi.p2p.WifiP2pDevice&gt;' name='getDeviceList' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pGroup' api_added='14'><constructor type='android.net.wifi.p2p.WifiP2pGroup' name='WifiP2pGroup' api_added='14'/><constructor type='android.net.wifi.p2p.WifiP2pGroup' name='WifiP2pGroup' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pGroup' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='java.util.Collection&lt;android.net.wifi.p2p.WifiP2pDevice&gt;' name='getClientList' api_added='14'/><method return='java.lang.String' name='getInterface' api_added='14'/><method return='java.lang.String' name='getNetworkName' api_added='14'/><method return='android.net.wifi.p2p.WifiP2pDevice' name='getOwner' api_added='14'/><method return='java.lang.String' name='getPassphrase' api_added='14'/><method return='boolean' name='isGroupOwner' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pInfo' api_added='14'><constructor type='android.net.wifi.p2p.WifiP2pInfo' name='WifiP2pInfo' api_added='14'/><constructor type='android.net.wifi.p2p.WifiP2pInfo' name='WifiP2pInfo' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pInfo' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pManager' api_added='14'><method name='cancelConnect' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='connect' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pConfig' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg2'/></method><method name='createGroup' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='discoverPeers' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method return='android.net.wifi.p2p.WifiP2pManager.Channel' name='initialize' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='android.os.Looper' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ChannelListener' name='arg2'/></method><method name='removeGroup' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='requestConnectionInfo' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ConnectionInfoListener' name='arg1'/></method><method name='requestGroupInfo' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.GroupInfoListener' name='arg1'/></method><method name='requestPeers' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.PeerListListener' name='arg1'/></method><method name='addLocalService' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.nsd.WifiP2pServiceInfo' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg2'/></method><method name='addServiceRequest' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg2'/></method><method name='clearLocalServices' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='clearServiceRequests' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='discoverServices' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method><method name='removeLocalService' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.nsd.WifiP2pServiceInfo' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg2'/></method><method name='removeServiceRequest' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg2'/></method><method name='setDnsSdResponseListeners' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.DnsSdServiceResponseListener' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pManager.DnsSdTxtRecordListener' name='arg2'/></method><method name='setServiceResponseListener' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ServiceResponseListener' name='arg1'/></method><method name='setUpnpServiceResponseListener' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.UpnpServiceResponseListener' name='arg1'/></method><method name='stopPeerDiscovery' api_added='16'><parameter type='android.net.wifi.p2p.WifiP2pManager.Channel' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pManager.ActionListener' name='arg1'/></method></class><class extends='java.lang.Object' static='true' name='WifiP2pManager.Channel' api_added='14'/><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.ActionListener' api_added='14'><method abstract='true' name='onFailure' api_added='14'><parameter type='int' name='arg0'/></method><method abstract='true' name='onSuccess' api_added='14'/></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.ChannelListener' api_added='14'><method abstract='true' name='onChannelDisconnected' api_added='14'/></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.ConnectionInfoListener' api_added='14'><method abstract='true' name='onConnectionInfoAvailable' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pInfo' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.GroupInfoListener' api_added='14'><method abstract='true' name='onGroupInfoAvailable' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pGroup' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.PeerListListener' api_added='14'><method abstract='true' name='onPeersAvailable' api_added='14'><parameter type='android.net.wifi.p2p.WifiP2pDeviceList' name='arg0'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.DnsSdServiceResponseListener' api_added='16'><method abstract='true' name='onDnsSdServiceAvailable' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pDevice' name='arg2'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.DnsSdTxtRecordListener' api_added='16'><method abstract='true' name='onDnsSdTxtRecordAvailable' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.util.Map&lt;java.lang.String' name='arg1'/><parameter type='java.lang.String&gt;' name='arg2'/><parameter type='android.net.wifi.p2p.WifiP2pDevice' name='arg3'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.ServiceResponseListener' api_added='16'><method abstract='true' name='onServiceAvailable' api_added='16'><parameter type='int' name='arg0'/><parameter type='byte[]' name='arg1'/><parameter type='android.net.wifi.p2p.WifiP2pDevice' name='arg2'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='WifiP2pManager.UpnpServiceResponseListener' api_added='16'><method abstract='true' name='onUpnpServiceAvailable' api_added='16'><parameter type='java.util.List&lt;java.lang.String&gt;' name='arg0'/><parameter type='android.net.wifi.p2p.WifiP2pDevice' name='arg1'/></method></interface></package><package name='android.security' api_added='14'><class extends='java.lang.Object' name='KeyChain' api_added='14' final='true'><constructor type='android.security.KeyChain' name='KeyChain' api_added='14'/><method static='true' name='choosePrivateKeyAlias' api_added='14'><parameter type='android.app.Activity' name='arg0'/><parameter type='android.security.KeyChainAliasCallback' name='arg1'/><parameter type='java.lang.String[]' name='arg2'/><parameter type='java.security.Principal[]' name='arg3'/><parameter type='java.lang.String' name='arg4'/><parameter type='int' name='arg5'/><parameter type='java.lang.String' name='arg6'/></method><method return='android.content.Intent' static='true' name='createInstallIntent' api_added='14'/><method return='java.security.cert.X509Certificate[]' static='true' name='getCertificateChain' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method return='java.security.PrivateKey' static='true' name='getPrivateKey' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method></class><class extends='java.lang.Exception' name='KeyChainException' api_added='14'><constructor type='android.security.KeyChainException' name='KeyChainException' api_added='14'/><constructor type='android.security.KeyChainException' name='KeyChainException' api_added='14'><parameter type='java.lang.String' name='arg0'/></constructor><constructor type='android.security.KeyChainException' name='KeyChainException' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.Throwable' name='arg1'/></constructor><constructor type='android.security.KeyChainException' name='KeyChainException' api_added='14'><parameter type='java.lang.Throwable' name='arg0'/></constructor></class><interface extends='java.lang.Object' abstract='true' name='KeyChainAliasCallback' api_added='14'><method abstract='true' name='alias' api_added='14'><parameter type='java.lang.String' name='arg0'/></method></interface></package><package name='android.service.textservice' api_added='14'><class extends='android.app.Service' abstract='true' name='SpellCheckerService' api_added='14'><constructor type='android.service.textservice.SpellCheckerService' name='SpellCheckerService' api_added='14'/><method return='android.service.textservice.SpellCheckerService.Session' abstract='true' name='createSession' api_added='14'/><method return='android.os.IBinder' name='onBind' api_added='14' final='true'><parameter type='android.content.Intent' name='arg0'/></method></class><class extends='java.lang.Object' abstract='true' static='true' name='SpellCheckerService.Session' api_added='14'><constructor type='android.service.textservice.SpellCheckerService.Session' name='SpellCheckerService.Session' api_added='14'/><method return='android.os.Bundle' name='getBundle' api_added='14'/><method return='java.lang.String' name='getLocale' api_added='14'/><method name='onCancel' api_added='14'/><method abstract='true' name='onCreate' api_added='14'/><method return='android.view.textservice.SuggestionsInfo' abstract='true' name='onGetSuggestions' api_added='14'><parameter type='android.view.textservice.TextInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method return='android.view.textservice.SuggestionsInfo[]' name='onGetSuggestionsMultiple' api_added='14'><parameter type='android.view.textservice.TextInfo[]' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></method><method name='onClose' api_added='15'/><method return='android.view.textservice.SentenceSuggestionsInfo[]' name='onGetSentenceSuggestionsMultiple' api_added='16'><parameter type='android.view.textservice.TextInfo[]' name='arg0'/><parameter type='int' name='arg1'/></method></class></package><package name='android.view.textservice' api_added='14'><class extends='java.lang.Object' name='SpellCheckerInfo' api_added='14' final='true'><method return='int' name='describeContents' api_added='14'/><method return='android.content.ComponentName' name='getComponent' api_added='14'/><method return='java.lang.String' name='getId' api_added='14'/><method return='java.lang.String' name='getPackageName' api_added='14'/><method return='android.content.pm.ServiceInfo' name='getServiceInfo' api_added='14'/><method return='java.lang.String' name='getSettingsActivity' api_added='14'/><method return='android.view.textservice.SpellCheckerSubtype' name='getSubtypeAt' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getSubtypeCount' api_added='14'/><method return='android.graphics.drawable.Drawable' name='loadIcon' api_added='14'><parameter type='android.content.pm.PackageManager' name='arg0'/></method><method return='java.lang.CharSequence' name='loadLabel' api_added='14'><parameter type='android.content.pm.PackageManager' name='arg0'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='SpellCheckerSession' api_added='14'><method name='close' api_added='14'/><method return='android.view.textservice.SpellCheckerInfo' name='getSpellChecker' api_added='14'/><method deprecated='16' name='getSuggestions' api_added='14'><parameter type='android.view.textservice.TextInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method deprecated='16' name='getSuggestions' api_added='14'><parameter type='android.view.textservice.TextInfo[]' name='arg0'/><parameter type='int' name='arg1'/><parameter type='boolean' name='arg2'/></method><method return='boolean' name='isSessionDisconnected' api_added='14'/><method name='cancel' api_added='15'/><method name='getSentenceSuggestions' api_added='16'><parameter type='android.view.textservice.TextInfo[]' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='SpellCheckerSubtype' api_added='14' final='true'><constructor type='android.view.textservice.SpellCheckerSubtype' name='SpellCheckerSubtype' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.lang.String' name='arg2'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='java.lang.CharSequence' name='getDisplayName' api_added='14'><parameter type='android.content.Context' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='android.content.pm.ApplicationInfo' name='arg2'/></method><method return='java.lang.String' name='getExtraValue' api_added='14'/><method return='java.lang.String' name='getLocale' api_added='14'/><method return='int' name='getNameResId' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method><method return='boolean' name='containsExtraValueKey' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='java.lang.String' name='getExtraValueOf' api_added='16'><parameter type='java.lang.String' name='arg0'/></method></class><class extends='java.lang.Object' name='SuggestionsInfo' api_added='14' final='true'><constructor type='android.view.textservice.SuggestionsInfo' name='SuggestionsInfo' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/></constructor><constructor type='android.view.textservice.SuggestionsInfo' name='SuggestionsInfo' api_added='14'><parameter type='int' name='arg0'/><parameter type='java.lang.String[]' name='arg1'/><parameter type='int' name='arg2'/><parameter type='int' name='arg3'/></constructor><constructor type='android.view.textservice.SuggestionsInfo' name='SuggestionsInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='int' name='getCookie' api_added='14'/><method return='int' name='getSequence' api_added='14'/><method return='java.lang.String' name='getSuggestionAt' api_added='14'><parameter type='int' name='arg0'/></method><method return='int' name='getSuggestionsAttributes' api_added='14'/><method return='int' name='getSuggestionsCount' api_added='14'/><method name='setCookieAndSequence' api_added='14'><parameter type='int' name='arg0'/><parameter type='int' name='arg1'/></method><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='TextInfo' api_added='14' final='true'><constructor type='android.view.textservice.TextInfo' name='TextInfo' api_added='14'><parameter type='java.lang.String' name='arg0'/></constructor><constructor type='android.view.textservice.TextInfo' name='TextInfo' api_added='14'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='int' name='arg2'/></constructor><constructor type='android.view.textservice.TextInfo' name='TextInfo' api_added='14'><parameter type='android.os.Parcel' name='arg0'/></constructor><method return='int' name='describeContents' api_added='14'/><method return='int' name='getCookie' api_added='14'/><method return='int' name='getSequence' api_added='14'/><method return='java.lang.String' name='getText' api_added='14'/><method name='writeToParcel' api_added='14'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='TextServicesManager' api_added='14' final='true'><method return='android.view.textservice.SpellCheckerSession' name='newSpellCheckerSession' api_added='14'><parameter type='android.os.Bundle' name='arg0'/><parameter type='java.util.Locale' name='arg1'/><parameter type='android.view.textservice.SpellCheckerSession.SpellCheckerSessionListener' name='arg2'/><parameter type='boolean' name='arg3'/></method></class><class extends='java.lang.Object' name='SentenceSuggestionsInfo' api_added='16' final='true'><constructor type='android.view.textservice.SentenceSuggestionsInfo' name='SentenceSuggestionsInfo' api_added='16'><parameter type='android.view.textservice.SuggestionsInfo[]' name='arg0'/><parameter type='int[]' name='arg1'/><parameter type='int[]' name='arg2'/></constructor><constructor type='android.view.textservice.SentenceSuggestionsInfo' name='SentenceSuggestionsInfo' api_added='16'><parameter type='android.os.Parcel' name='arg0'/></constructor><method return='int' name='describeContents' api_added='16'/><method return='int' name='getLengthAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getOffsetAt' api_added='16'><parameter type='int' name='arg0'/></method><method return='int' name='getSuggestionsCount' api_added='16'/><method return='android.view.textservice.SuggestionsInfo' name='getSuggestionsInfoAt' api_added='16'><parameter type='int' name='arg0'/></method><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><interface extends='java.lang.Object' abstract='true' static='true' name='SpellCheckerSession.SpellCheckerSessionListener' api_added='14'><method abstract='true' name='onGetSuggestions' api_added='14'><parameter type='android.view.textservice.SuggestionsInfo[]' name='arg0'/></method><method abstract='true' name='onGetSentenceSuggestions' api_added='16'><parameter type='android.view.textservice.SentenceSuggestionsInfo[]' name='arg0'/></method></interface></package><package name='android.annotation' api_added='16'><class extends='java.lang.Object' abstract='true' name='SuppressLint' api_added='16'/><class extends='java.lang.Object' abstract='true' name='TargetApi' api_added='16'/></package><package name='android.hardware.input' api_added='16'><class extends='java.lang.Object' name='InputManager' api_added='16' final='true'><method return='android.view.InputDevice' name='getInputDevice' api_added='16'><parameter type='int' name='arg0'/></method><method return='int[]' name='getInputDeviceIds' api_added='16'/><method name='registerInputDeviceListener' api_added='16'><parameter type='android.hardware.input.InputManager.InputDeviceListener' name='arg0'/><parameter type='android.os.Handler' name='arg1'/></method><method name='unregisterInputDeviceListener' api_added='16'><parameter type='android.hardware.input.InputManager.InputDeviceListener' name='arg0'/></method></class><interface extends='java.lang.Object' abstract='true' static='true' name='InputManager.InputDeviceListener' api_added='16'><method abstract='true' name='onInputDeviceAdded' api_added='16'><parameter type='int' name='arg0'/></method><method abstract='true' name='onInputDeviceChanged' api_added='16'><parameter type='int' name='arg0'/></method><method abstract='true' name='onInputDeviceRemoved' api_added='16'><parameter type='int' name='arg0'/></method></interface></package><package name='android.net.nsd' api_added='16'><class extends='java.lang.Object' name='NsdManager' api_added='16' final='true'><method name='discoverServices' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.net.nsd.NsdManager.DiscoveryListener' name='arg2'/></method><method name='registerService' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/><parameter type='int' name='arg1'/><parameter type='android.net.nsd.NsdManager.RegistrationListener' name='arg2'/></method><method name='resolveService' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/><parameter type='android.net.nsd.NsdManager.ResolveListener' name='arg1'/></method><method name='stopServiceDiscovery' api_added='16'><parameter type='android.net.nsd.NsdManager.DiscoveryListener' name='arg0'/></method><method name='unregisterService' api_added='16'><parameter type='android.net.nsd.NsdManager.RegistrationListener' name='arg0'/></method></class><class extends='java.lang.Object' name='NsdServiceInfo' api_added='16' final='true'><constructor type='android.net.nsd.NsdServiceInfo' name='NsdServiceInfo' api_added='16'/><method return='int' name='describeContents' api_added='16'/><method return='java.net.InetAddress' name='getHost' api_added='16'/><method return='int' name='getPort' api_added='16'/><method return='java.lang.String' name='getServiceName' api_added='16'/><method return='java.lang.String' name='getServiceType' api_added='16'/><method name='setHost' api_added='16'><parameter type='java.net.InetAddress' name='arg0'/></method><method name='setPort' api_added='16'><parameter type='int' name='arg0'/></method><method name='setServiceName' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method name='setServiceType' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><interface extends='java.lang.Object' abstract='true' static='true' name='NsdManager.DiscoveryListener' api_added='16'><method abstract='true' name='onDiscoveryStarted' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method abstract='true' name='onDiscoveryStopped' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method abstract='true' name='onServiceFound' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/></method><method abstract='true' name='onServiceLost' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/></method><method abstract='true' name='onStartDiscoveryFailed' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method><method abstract='true' name='onStopDiscoveryFailed' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='int' name='arg1'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='NsdManager.RegistrationListener' api_added='16'><method abstract='true' name='onRegistrationFailed' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method abstract='true' name='onServiceRegistered' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/></method><method abstract='true' name='onServiceUnregistered' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/></method><method abstract='true' name='onUnregistrationFailed' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/><parameter type='int' name='arg1'/></method></interface><interface extends='java.lang.Object' abstract='true' static='true' name='NsdManager.ResolveListener' api_added='16'><method abstract='true' name='onResolveFailed' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/><parameter type='int' name='arg1'/></method><method abstract='true' name='onServiceResolved' api_added='16'><parameter type='android.net.nsd.NsdServiceInfo' name='arg0'/></method></interface></package><package name='android.net.wifi.p2p.nsd' api_added='16'><class extends='android.net.wifi.p2p.nsd.WifiP2pServiceInfo' name='WifiP2pDnsSdServiceInfo' api_added='16'><method return='android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo' static='true' name='newInstance' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.util.Map&lt;java.lang.String' name='arg2'/><parameter type='java.lang.String&gt;' name='arg3'/></method></class><class extends='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' name='WifiP2pDnsSdServiceRequest' api_added='16'><method return='android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest' static='true' name='newInstance' api_added='16'/><method return='android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest' static='true' name='newInstance' api_added='16'><parameter type='java.lang.String' name='arg0'/></method><method return='android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceRequest' static='true' name='newInstance' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pServiceInfo' api_added='16'><method return='int' name='describeContents' api_added='16'/><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='java.lang.Object' name='WifiP2pServiceRequest' api_added='16'><method return='int' name='describeContents' api_added='16'/><method return='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' static='true' name='newInstance' api_added='16'><parameter type='int' name='arg0'/><parameter type='java.lang.String' name='arg1'/></method><method return='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' static='true' name='newInstance' api_added='16'><parameter type='int' name='arg0'/></method><method name='writeToParcel' api_added='16'><parameter type='android.os.Parcel' name='arg0'/><parameter type='int' name='arg1'/></method></class><class extends='android.net.wifi.p2p.nsd.WifiP2pServiceInfo' name='WifiP2pUpnpServiceInfo' api_added='16'><method return='android.net.wifi.p2p.nsd.WifiP2pUpnpServiceInfo' static='true' name='newInstance' api_added='16'><parameter type='java.lang.String' name='arg0'/><parameter type='java.lang.String' name='arg1'/><parameter type='java.util.List&lt;java.lang.String&gt;' name='arg2'/></method></class><class extends='android.net.wifi.p2p.nsd.WifiP2pServiceRequest' name='WifiP2pUpnpServiceRequest' api_added='16'><method return='android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest' static='true' name='newInstance' api_added='16'/><method return='android.net.wifi.p2p.nsd.WifiP2pUpnpServiceRequest' static='true' name='newInstance' api_added='16'><parameter type='java.lang.String' name='arg0'/></method></class></package></api>