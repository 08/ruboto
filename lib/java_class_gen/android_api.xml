<api><apiid number='1' version='1.0'/><apiid number='2' version='1.1'/><apiid name='cupcake' number='3' version='1.5'/><apiid name='donut' number='4' version='1.6'/><apiid number='5' version='2.0'/><apiid number='6' version='2.0.1'/><apiid name='eclair' number='7' version='2.1'/><apiid name='froyo' number='8' version='2.2'/><package name='android'><class name='Manifest' final='true' extends='java.lang.Object'><constructor name='Manifest' type='android.Manifest'/></class><class name='Manifest.permission' final='true' extends='java.lang.Object' static='true'><constructor name='Manifest.permission' type='android.Manifest.permission'/><field name='ACCESS_CHECKIN_PROPERTIES' final='true' static='true' value='&quot;android.permission.ACCESS_CHECKIN_PROPERTIES&quot;' type='java.lang.String'/><field name='ACCESS_COARSE_LOCATION' final='true' static='true' value='&quot;android.permission.ACCESS_COARSE_LOCATION&quot;' type='java.lang.String'/><field name='ACCESS_FINE_LOCATION' final='true' static='true' value='&quot;android.permission.ACCESS_FINE_LOCATION&quot;' type='java.lang.String'/><field name='ACCESS_LOCATION_EXTRA_COMMANDS' final='true' static='true' value='&quot;android.permission.ACCESS_LOCATION_EXTRA_COMMANDS&quot;' type='java.lang.String'/><field name='ACCESS_MOCK_LOCATION' final='true' static='true' value='&quot;android.permission.ACCESS_MOCK_LOCATION&quot;' type='java.lang.String'/><field name='ACCESS_NETWORK_STATE' final='true' static='true' value='&quot;android.permission.ACCESS_NETWORK_STATE&quot;' type='java.lang.String'/><field name='ACCESS_SURFACE_FLINGER' final='true' static='true' value='&quot;android.permission.ACCESS_SURFACE_FLINGER&quot;' type='java.lang.String'/><field name='ACCESS_WIFI_STATE' final='true' static='true' value='&quot;android.permission.ACCESS_WIFI_STATE&quot;' type='java.lang.String'/><field name='ADD_SYSTEM_SERVICE' final='true' api_removed='4' static='true' value='&quot;android.permission.ADD_SYSTEM_SERVICE&quot;' type='java.lang.String'/><field name='BATTERY_STATS' final='true' static='true' value='&quot;android.permission.BATTERY_STATS&quot;' type='java.lang.String'/><field name='BLUETOOTH' final='true' static='true' value='&quot;android.permission.BLUETOOTH&quot;' type='java.lang.String'/><field name='BLUETOOTH_ADMIN' final='true' static='true' value='&quot;android.permission.BLUETOOTH_ADMIN&quot;' type='java.lang.String'/><field name='BRICK' final='true' static='true' value='&quot;android.permission.BRICK&quot;' type='java.lang.String'/><field name='BROADCAST_PACKAGE_REMOVED' final='true' static='true' value='&quot;android.permission.BROADCAST_PACKAGE_REMOVED&quot;' type='java.lang.String'/><field name='BROADCAST_STICKY' final='true' static='true' value='&quot;android.permission.BROADCAST_STICKY&quot;' type='java.lang.String'/><field name='CALL_PHONE' final='true' static='true' value='&quot;android.permission.CALL_PHONE&quot;' type='java.lang.String'/><field name='CALL_PRIVILEGED' final='true' static='true' value='&quot;android.permission.CALL_PRIVILEGED&quot;' type='java.lang.String'/><field name='CAMERA' final='true' static='true' value='&quot;android.permission.CAMERA&quot;' type='java.lang.String'/><field name='CHANGE_COMPONENT_ENABLED_STATE' final='true' static='true' value='&quot;android.permission.CHANGE_COMPONENT_ENABLED_STATE&quot;' type='java.lang.String'/><field name='CHANGE_CONFIGURATION' final='true' static='true' value='&quot;android.permission.CHANGE_CONFIGURATION&quot;' type='java.lang.String'/><field name='CHANGE_NETWORK_STATE' final='true' static='true' value='&quot;android.permission.CHANGE_NETWORK_STATE&quot;' type='java.lang.String'/><field name='CHANGE_WIFI_STATE' final='true' static='true' value='&quot;android.permission.CHANGE_WIFI_STATE&quot;' type='java.lang.String'/><field name='CLEAR_APP_CACHE' final='true' static='true' value='&quot;android.permission.CLEAR_APP_CACHE&quot;' type='java.lang.String'/><field name='CLEAR_APP_USER_DATA' final='true' static='true' value='&quot;android.permission.CLEAR_APP_USER_DATA&quot;' type='java.lang.String'/><field name='CONTROL_LOCATION_UPDATES' final='true' static='true' value='&quot;android.permission.CONTROL_LOCATION_UPDATES&quot;' type='java.lang.String'/><field name='DELETE_CACHE_FILES' final='true' static='true' value='&quot;android.permission.DELETE_CACHE_FILES&quot;' type='java.lang.String'/><field name='DELETE_PACKAGES' final='true' static='true' value='&quot;android.permission.DELETE_PACKAGES&quot;' type='java.lang.String'/><field name='DEVICE_POWER' final='true' static='true' value='&quot;android.permission.DEVICE_POWER&quot;' type='java.lang.String'/><field name='DIAGNOSTIC' final='true' static='true' value='&quot;android.permission.DIAGNOSTIC&quot;' type='java.lang.String'/><field name='DISABLE_KEYGUARD' final='true' static='true' value='&quot;android.permission.DISABLE_KEYGUARD&quot;' type='java.lang.String'/><field name='DUMP' final='true' static='true' value='&quot;android.permission.DUMP&quot;' type='java.lang.String'/><field name='EXPAND_STATUS_BAR' final='true' static='true' value='&quot;android.permission.EXPAND_STATUS_BAR&quot;' type='java.lang.String'/><field name='FACTORY_TEST' final='true' static='true' value='&quot;android.permission.FACTORY_TEST&quot;' type='java.lang.String'/><field name='FLASHLIGHT' final='true' static='true' value='&quot;android.permission.FLASHLIGHT&quot;' type='java.lang.String'/><field name='FORCE_BACK' final='true' static='true' value='&quot;android.permission.FORCE_BACK&quot;' type='java.lang.String'/><field name='FOTA_UPDATE' final='true' api_removed='4' static='true' value='&quot;android.permission.FOTA_UPDATE&quot;' type='java.lang.String'/><field name='GET_ACCOUNTS' final='true' static='true' value='&quot;android.permission.GET_ACCOUNTS&quot;' type='java.lang.String'/><field name='GET_PACKAGE_SIZE' final='true' static='true' value='&quot;android.permission.GET_PACKAGE_SIZE&quot;' type='java.lang.String'/><field name='GET_TASKS' final='true' static='true' value='&quot;android.permission.GET_TASKS&quot;' type='java.lang.String'/><field name='HARDWARE_TEST' final='true' static='true' value='&quot;android.permission.HARDWARE_TEST&quot;' type='java.lang.String'/><field name='INJECT_EVENTS' final='true' static='true' value='&quot;android.permission.INJECT_EVENTS&quot;' type='java.lang.String'/><field name='INSTALL_PACKAGES' final='true' static='true' value='&quot;android.permission.INSTALL_PACKAGES&quot;' type='java.lang.String'/><field name='INTERNAL_SYSTEM_WINDOW' final='true' static='true' value='&quot;android.permission.INTERNAL_SYSTEM_WINDOW&quot;' type='java.lang.String'/><field name='INTERNET' final='true' static='true' value='&quot;android.permission.INTERNET&quot;' type='java.lang.String'/><field name='MANAGE_APP_TOKENS' final='true' static='true' value='&quot;android.permission.MANAGE_APP_TOKENS&quot;' type='java.lang.String'/><field name='MASTER_CLEAR' final='true' static='true' value='&quot;android.permission.MASTER_CLEAR&quot;' type='java.lang.String'/><field name='MODIFY_AUDIO_SETTINGS' final='true' static='true' value='&quot;android.permission.MODIFY_AUDIO_SETTINGS&quot;' type='java.lang.String'/><field name='MODIFY_PHONE_STATE' final='true' static='true' value='&quot;android.permission.MODIFY_PHONE_STATE&quot;' type='java.lang.String'/><field name='MOUNT_UNMOUNT_FILESYSTEMS' final='true' static='true' value='&quot;android.permission.MOUNT_UNMOUNT_FILESYSTEMS&quot;' type='java.lang.String'/><field name='PERSISTENT_ACTIVITY' final='true' static='true' value='&quot;android.permission.PERSISTENT_ACTIVITY&quot;' type='java.lang.String'/><field name='PROCESS_OUTGOING_CALLS' final='true' static='true' value='&quot;android.permission.PROCESS_OUTGOING_CALLS&quot;' type='java.lang.String'/><field name='READ_CALENDAR' final='true' static='true' value='&quot;android.permission.READ_CALENDAR&quot;' type='java.lang.String'/><field name='READ_CONTACTS' final='true' static='true' value='&quot;android.permission.READ_CONTACTS&quot;' type='java.lang.String'/><field name='READ_FRAME_BUFFER' final='true' static='true' value='&quot;android.permission.READ_FRAME_BUFFER&quot;' type='java.lang.String'/><field name='READ_INPUT_STATE' final='true' static='true' value='&quot;android.permission.READ_INPUT_STATE&quot;' type='java.lang.String'/><field name='READ_LOGS' final='true' static='true' value='&quot;android.permission.READ_LOGS&quot;' type='java.lang.String'/><field name='READ_OWNER_DATA' final='true' static='true' value='&quot;android.permission.READ_OWNER_DATA&quot;' type='java.lang.String'/><field name='READ_PHONE_STATE' final='true' static='true' value='&quot;android.permission.READ_PHONE_STATE&quot;' type='java.lang.String'/><field name='READ_SMS' final='true' static='true' value='&quot;android.permission.READ_SMS&quot;' type='java.lang.String'/><field name='READ_SYNC_SETTINGS' final='true' static='true' value='&quot;android.permission.READ_SYNC_SETTINGS&quot;' type='java.lang.String'/><field name='READ_SYNC_STATS' final='true' static='true' value='&quot;android.permission.READ_SYNC_STATS&quot;' type='java.lang.String'/><field name='REBOOT' final='true' static='true' value='&quot;android.permission.REBOOT&quot;' type='java.lang.String'/><field name='RECEIVE_BOOT_COMPLETED' final='true' static='true' value='&quot;android.permission.RECEIVE_BOOT_COMPLETED&quot;' type='java.lang.String'/><field name='RECEIVE_MMS' final='true' static='true' value='&quot;android.permission.RECEIVE_MMS&quot;' type='java.lang.String'/><field name='RECEIVE_SMS' final='true' static='true' value='&quot;android.permission.RECEIVE_SMS&quot;' type='java.lang.String'/><field name='RECEIVE_WAP_PUSH' final='true' static='true' value='&quot;android.permission.RECEIVE_WAP_PUSH&quot;' type='java.lang.String'/><field name='RECORD_AUDIO' final='true' static='true' value='&quot;android.permission.RECORD_AUDIO&quot;' type='java.lang.String'/><field name='REORDER_TASKS' final='true' static='true' value='&quot;android.permission.REORDER_TASKS&quot;' type='java.lang.String'/><field name='RESTART_PACKAGES' final='true' static='true' value='&quot;android.permission.RESTART_PACKAGES&quot;' type='java.lang.String' deprecated='8'/><field name='SEND_SMS' final='true' static='true' value='&quot;android.permission.SEND_SMS&quot;' type='java.lang.String'/><field name='SET_ACTIVITY_WATCHER' final='true' static='true' value='&quot;android.permission.SET_ACTIVITY_WATCHER&quot;' type='java.lang.String'/><field name='SET_ALWAYS_FINISH' final='true' static='true' value='&quot;android.permission.SET_ALWAYS_FINISH&quot;' type='java.lang.String'/><field name='SET_ANIMATION_SCALE' final='true' static='true' value='&quot;android.permission.SET_ANIMATION_SCALE&quot;' type='java.lang.String'/><field name='SET_DEBUG_APP' final='true' static='true' value='&quot;android.permission.SET_DEBUG_APP&quot;' type='java.lang.String'/><field name='SET_ORIENTATION' final='true' static='true' value='&quot;android.permission.SET_ORIENTATION&quot;' type='java.lang.String'/><field name='SET_PREFERRED_APPLICATIONS' final='true' static='true' value='&quot;android.permission.SET_PREFERRED_APPLICATIONS&quot;' type='java.lang.String' deprecated='7'/><field name='SET_PROCESS_FOREGROUND' final='true' api_removed='4' static='true' value='&quot;android.permission.SET_PROCESS_FOREGROUND&quot;' type='java.lang.String'/><field name='SET_PROCESS_LIMIT' final='true' static='true' value='&quot;android.permission.SET_PROCESS_LIMIT&quot;' type='java.lang.String'/><field name='SET_TIME_ZONE' final='true' static='true' value='&quot;android.permission.SET_TIME_ZONE&quot;' type='java.lang.String'/><field name='SET_WALLPAPER' final='true' static='true' value='&quot;android.permission.SET_WALLPAPER&quot;' type='java.lang.String'/><field name='SET_WALLPAPER_HINTS' final='true' static='true' value='&quot;android.permission.SET_WALLPAPER_HINTS&quot;' type='java.lang.String'/><field name='SIGNAL_PERSISTENT_PROCESSES' final='true' static='true' value='&quot;android.permission.SIGNAL_PERSISTENT_PROCESSES&quot;' type='java.lang.String'/><field name='STATUS_BAR' final='true' static='true' value='&quot;android.permission.STATUS_BAR&quot;' type='java.lang.String'/><field name='SUBSCRIBED_FEEDS_READ' final='true' static='true' value='&quot;android.permission.SUBSCRIBED_FEEDS_READ&quot;' type='java.lang.String'/><field name='SUBSCRIBED_FEEDS_WRITE' final='true' static='true' value='&quot;android.permission.SUBSCRIBED_FEEDS_WRITE&quot;' type='java.lang.String'/><field name='SYSTEM_ALERT_WINDOW' final='true' static='true' value='&quot;android.permission.SYSTEM_ALERT_WINDOW&quot;' type='java.lang.String'/><field name='VIBRATE' final='true' static='true' value='&quot;android.permission.VIBRATE&quot;' type='java.lang.String'/><field name='WAKE_LOCK' final='true' static='true' value='&quot;android.permission.WAKE_LOCK&quot;' type='java.lang.String'/><field name='WRITE_APN_SETTINGS' final='true' static='true' value='&quot;android.permission.WRITE_APN_SETTINGS&quot;' type='java.lang.String'/><field name='WRITE_CALENDAR' final='true' static='true' value='&quot;android.permission.WRITE_CALENDAR&quot;' type='java.lang.String'/><field name='WRITE_CONTACTS' final='true' static='true' value='&quot;android.permission.WRITE_CONTACTS&quot;' type='java.lang.String'/><field name='WRITE_GSERVICES' final='true' static='true' value='&quot;android.permission.WRITE_GSERVICES&quot;' type='java.lang.String'/><field name='WRITE_OWNER_DATA' final='true' static='true' value='&quot;android.permission.WRITE_OWNER_DATA&quot;' type='java.lang.String'/><field name='WRITE_SETTINGS' final='true' static='true' value='&quot;android.permission.WRITE_SETTINGS&quot;' type='java.lang.String'/><field name='WRITE_SMS' final='true' static='true' value='&quot;android.permission.WRITE_SMS&quot;' type='java.lang.String'/><field name='WRITE_SYNC_SETTINGS' final='true' static='true' value='&quot;android.permission.WRITE_SYNC_SETTINGS&quot;' type='java.lang.String'/><field api_added='2' name='BROADCAST_SMS' final='true' static='true' value='&quot;android.permission.BROADCAST_SMS&quot;' type='java.lang.String'/><field api_added='2' name='BROADCAST_WAP_PUSH' final='true' static='true' value='&quot;android.permission.BROADCAST_WAP_PUSH&quot;' type='java.lang.String'/><field api_added='3' name='BIND_APPWIDGET' final='true' static='true' value='&quot;android.permission.BIND_APPWIDGET&quot;' type='java.lang.String'/><field api_added='3' name='BIND_INPUT_METHOD' final='true' static='true' value='&quot;android.permission.BIND_INPUT_METHOD&quot;' type='java.lang.String'/><field api_added='3' name='MOUNT_FORMAT_FILESYSTEMS' final='true' static='true' value='&quot;android.permission.MOUNT_FORMAT_FILESYSTEMS&quot;' type='java.lang.String'/><field api_added='3' name='UPDATE_DEVICE_STATS' final='true' static='true' value='&quot;android.permission.UPDATE_DEVICE_STATS&quot;' type='java.lang.String'/><field api_added='3' name='WRITE_SECURE_SETTINGS' final='true' static='true' value='&quot;android.permission.WRITE_SECURE_SETTINGS&quot;' type='java.lang.String'/><field api_added='4' name='CHANGE_WIFI_MULTICAST_STATE' final='true' static='true' value='&quot;android.permission.CHANGE_WIFI_MULTICAST_STATE&quot;' type='java.lang.String'/><field api_added='4' name='GLOBAL_SEARCH' final='true' static='true' value='&quot;android.permission.GLOBAL_SEARCH&quot;' type='java.lang.String'/><field api_added='4' name='INSTALL_LOCATION_PROVIDER' final='true' static='true' value='&quot;android.permission.INSTALL_LOCATION_PROVIDER&quot;' type='java.lang.String'/><field api_added='4' name='READ_HISTORY_BOOKMARKS' final='true' static='true' value='&quot;com.android.browser.permission.READ_HISTORY_BOOKMARKS&quot;' type='java.lang.String'/><field api_added='4' name='WRITE_EXTERNAL_STORAGE' final='true' static='true' value='&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;' type='java.lang.String'/><field api_added='4' name='WRITE_HISTORY_BOOKMARKS' final='true' static='true' value='&quot;com.android.browser.permission.WRITE_HISTORY_BOOKMARKS&quot;' type='java.lang.String'/><field api_added='5' name='ACCOUNT_MANAGER' final='true' static='true' value='&quot;android.permission.ACCOUNT_MANAGER&quot;' type='java.lang.String'/><field api_added='5' name='AUTHENTICATE_ACCOUNTS' final='true' static='true' value='&quot;android.permission.AUTHENTICATE_ACCOUNTS&quot;' type='java.lang.String'/><field api_added='5' name='MANAGE_ACCOUNTS' final='true' static='true' value='&quot;android.permission.MANAGE_ACCOUNTS&quot;' type='java.lang.String'/><field api_added='5' name='USE_CREDENTIALS' final='true' static='true' value='&quot;android.permission.USE_CREDENTIALS&quot;' type='java.lang.String'/><field api_added='8' name='BIND_DEVICE_ADMIN' final='true' static='true' value='&quot;android.permission.BIND_DEVICE_ADMIN&quot;' type='java.lang.String'/><field api_added='8' name='BIND_WALLPAPER' final='true' static='true' value='&quot;android.permission.BIND_WALLPAPER&quot;' type='java.lang.String'/><field api_added='8' name='KILL_BACKGROUND_PROCESSES' final='true' static='true' value='&quot;android.permission.KILL_BACKGROUND_PROCESSES&quot;' type='java.lang.String'/><field api_added='8' name='SET_TIME' final='true' static='true' value='&quot;android.permission.SET_TIME&quot;' type='java.lang.String'/></class><class name='Manifest.permission_group' final='true' extends='java.lang.Object' static='true'><constructor name='Manifest.permission_group' type='android.Manifest.permission_group'/><field name='ACCOUNTS' final='true' static='true' value='&quot;android.permission-group.ACCOUNTS&quot;' type='java.lang.String'/><field name='COST_MONEY' final='true' static='true' value='&quot;android.permission-group.COST_MONEY&quot;' type='java.lang.String'/><field name='DEVELOPMENT_TOOLS' final='true' static='true' value='&quot;android.permission-group.DEVELOPMENT_TOOLS&quot;' type='java.lang.String'/><field name='HARDWARE_CONTROLS' final='true' static='true' value='&quot;android.permission-group.HARDWARE_CONTROLS&quot;' type='java.lang.String'/><field name='LOCATION' final='true' static='true' value='&quot;android.permission-group.LOCATION&quot;' type='java.lang.String'/><field name='MESSAGES' final='true' static='true' value='&quot;android.permission-group.MESSAGES&quot;' type='java.lang.String'/><field name='NETWORK' final='true' static='true' value='&quot;android.permission-group.NETWORK&quot;' type='java.lang.String'/><field name='PERSONAL_INFO' final='true' static='true' value='&quot;android.permission-group.PERSONAL_INFO&quot;' type='java.lang.String'/><field name='PHONE_CALLS' final='true' static='true' value='&quot;android.permission-group.PHONE_CALLS&quot;' type='java.lang.String'/><field name='SYSTEM_TOOLS' final='true' static='true' value='&quot;android.permission-group.SYSTEM_TOOLS&quot;' type='java.lang.String'/><field api_added='4' name='STORAGE' final='true' static='true' value='&quot;android.permission-group.STORAGE&quot;' type='java.lang.String'/></class><class name='R' final='true' extends='java.lang.Object'><constructor name='R' type='android.R'/></class><class name='R.anim' final='true' extends='java.lang.Object' static='true'><constructor name='R.anim' type='android.R.anim'/><field name='accelerate_decelerate_interpolator' final='true' static='true' value='17432580' type='int'/><field name='accelerate_interpolator' final='true' static='true' value='17432581' type='int'/><field name='decelerate_interpolator' final='true' static='true' value='17432582' type='int'/><field name='fade_in' final='true' static='true' value='17432576' type='int'/><field name='fade_out' final='true' static='true' value='17432577' type='int'/><field name='slide_in_left' final='true' static='true' value='17432578' type='int'/><field name='slide_out_right' final='true' static='true' value='17432579' type='int'/><field api_added='4' name='anticipate_interpolator' final='true' static='true' value='17432583' type='int'/><field api_added='4' name='anticipate_overshoot_interpolator' final='true' static='true' value='17432585' type='int'/><field api_added='4' name='bounce_interpolator' final='true' static='true' value='17432586' type='int'/><field api_added='4' name='linear_interpolator' final='true' static='true' value='17432587' type='int'/><field api_added='4' name='overshoot_interpolator' final='true' static='true' value='17432584' type='int'/><field api_added='8' name='cycle_interpolator' final='true' static='true' value='17432588' type='int'/></class><class name='R.array' final='true' extends='java.lang.Object' static='true'><constructor name='R.array' type='android.R.array'/><field name='emailAddressTypes' final='true' static='true' value='17235968' type='int'/><field name='imProtocols' final='true' static='true' value='17235969' type='int'/><field name='organizationTypes' final='true' static='true' value='17235970' type='int'/><field name='phoneTypes' final='true' static='true' value='17235971' type='int'/><field name='postalAddressTypes' final='true' static='true' value='17235972' type='int'/></class><class name='R.attr' final='true' extends='java.lang.Object' static='true'><constructor name='R.attr' type='android.R.attr'/><field name='absListViewStyle' final='true' static='true' value='16842858' type='int'/><field name='action' final='true' static='true' value='16842797' type='int'/><field name='activityCloseEnterAnimation' final='true' static='true' value='16842938' type='int'/><field name='activityCloseExitAnimation' final='true' static='true' value='16842939' type='int'/><field name='activityOpenEnterAnimation' final='true' static='true' value='16842936' type='int'/><field name='activityOpenExitAnimation' final='true' static='true' value='16842937' type='int'/><field name='addStatesFromChildren' final='true' static='true' value='16842992' type='int'/><field name='adjustViewBounds' final='true' static='true' value='16843038' type='int'/><field name='alertDialogStyle' final='true' static='true' value='16842845' type='int'/><field name='allowClearUserData' final='true' static='true' value='16842757' type='int'/><field name='allowTaskReparenting' final='true' static='true' value='16843268' type='int'/><field name='alphabeticShortcut' final='true' static='true' value='16843235' type='int'/><field name='alwaysDrawnWithCache' final='true' static='true' value='16842991' type='int'/><field name='alwaysRetainTaskState' final='true' static='true' value='16843267' type='int'/><field name='angle' final='true' static='true' value='16843168' type='int'/><field name='animation' final='true' static='true' value='16843213' type='int'/><field name='animationCache' final='true' static='true' value='16842989' type='int'/><field name='animationDuration' final='true' static='true' value='16843026' type='int'/><field name='animationOrder' final='true' static='true' value='16843214' type='int'/><field name='antialias' final='true' static='true' value='16843034' type='int'/><field name='apiKey' final='true' static='true' value='16843281' type='int'/><field name='authorities' final='true' static='true' value='16842776' type='int'/><field name='autoCompleteTextViewStyle' final='true' static='true' value='16842859' type='int'/><field name='autoLink' final='true' static='true' value='16842928' type='int'/><field name='autoText' final='true' static='true' value='16843114' type='int' deprecated='3'/><field name='background' final='true' static='true' value='16842964' type='int'/><field name='backgroundDimAmount' final='true' static='true' value='16842802' type='int'/><field name='baselineAlignBottom' final='true' static='true' value='16843042' type='int'/><field name='baselineAligned' final='true' static='true' value='16843046' type='int'/><field name='baselineAlignedChildIndex' final='true' static='true' value='16843047' type='int'/><field name='bottom' final='true' static='true' value='16843184' type='int'/><field name='bottomBright' final='true' static='true' value='16842957' type='int'/><field name='bottomDark' final='true' static='true' value='16842953' type='int'/><field name='bottomLeftRadius' final='true' static='true' value='16843179' type='int'/><field name='bottomMedium' final='true' static='true' value='16842958' type='int'/><field name='bottomRightRadius' final='true' static='true' value='16843180' type='int'/><field name='bufferType' final='true' static='true' value='16843086' type='int'/><field name='button' final='true' static='true' value='16843015' type='int'/><field name='buttonStyle' final='true' static='true' value='16842824' type='int'/><field name='buttonStyleInset' final='true' static='true' value='16842826' type='int'/><field name='buttonStyleSmall' final='true' static='true' value='16842825' type='int'/><field name='buttonStyleToggle' final='true' static='true' value='16842827' type='int'/><field name='cacheColorHint' final='true' static='true' value='16843009' type='int'/><field name='capitalize' final='true' static='true' value='16843113' type='int' deprecated='3'/><field name='centerBright' final='true' static='true' value='16842956' type='int'/><field name='centerColor' final='true' static='true' value='16843275' type='int'/><field name='centerDark' final='true' static='true' value='16842952' type='int'/><field name='centerMedium' final='true' static='true' value='16842959' type='int'/><field name='centerX' final='true' static='true' value='16843170' type='int'/><field name='centerY' final='true' static='true' value='16843171' type='int'/><field name='checkBoxPreferenceStyle' final='true' static='true' value='16842895' type='int'/><field name='checkMark' final='true' static='true' value='16843016' type='int'/><field name='checkable' final='true' static='true' value='16843237' type='int'/><field name='checkableBehavior' final='true' static='true' value='16843232' type='int'/><field name='checkboxStyle' final='true' static='true' value='16842860' type='int'/><field name='checked' final='true' static='true' value='16843014' type='int'/><field name='checkedButton' final='true' static='true' value='16843080' type='int'/><field name='childDivider' final='true' static='true' value='16843025' type='int'/><field name='childIndicator' final='true' static='true' value='16843020' type='int'/><field name='childIndicatorLeft' final='true' static='true' value='16843023' type='int'/><field name='childIndicatorRight' final='true' static='true' value='16843024' type='int'/><field name='choiceMode' final='true' static='true' value='16843051' type='int'/><field name='clearTaskOnLaunch' final='true' static='true' value='16842773' type='int'/><field name='clickable' final='true' static='true' value='16842981' type='int'/><field name='clipChildren' final='true' static='true' value='16842986' type='int'/><field name='clipOrientation' final='true' static='true' value='16843274' type='int'/><field name='clipToPadding' final='true' static='true' value='16842987' type='int'/><field name='collapseColumns' final='true' static='true' value='16843083' type='int'/><field name='color' final='true' static='true' value='16843173' type='int'/><field name='colorBackground' final='true' static='true' value='16842801' type='int'/><field name='colorForeground' final='true' static='true' value='16842800' type='int'/><field name='colorForegroundInverse' final='true' static='true' value='16843270' type='int'/><field name='columnDelay' final='true' static='true' value='16843215' type='int'/><field name='columnWidth' final='true' static='true' value='16843031' type='int'/><field name='completionHint' final='true' static='true' value='16843122' type='int'/><field name='completionHintView' final='true' static='true' value='16843123' type='int'/><field name='completionThreshold' final='true' static='true' value='16843124' type='int'/><field name='configChanges' final='true' static='true' value='16842783' type='int'/><field name='constantSize' final='true' static='true' value='16843158' type='int'/><field name='cropToPadding' final='true' static='true' value='16843043' type='int'/><field name='cursorVisible' final='true' static='true' value='16843090' type='int'/><field name='cycles' final='true' static='true' value='16843220' type='int'/><field name='dashGap' final='true' static='true' value='16843175' type='int'/><field name='dashWidth' final='true' static='true' value='16843174' type='int'/><field name='data' final='true' static='true' value='16842798' type='int'/><field name='debuggable' final='true' static='true' value='16842767' type='int'/><field name='defaultValue' final='true' static='true' value='16843245' type='int'/><field name='delay' final='true' static='true' value='16843212' type='int'/><field name='dependency' final='true' static='true' value='16843244' type='int'/><field name='descendantFocusability' final='true' static='true' value='16842993' type='int'/><field name='description' final='true' static='true' value='16842784' type='int'/><field name='dial' final='true' static='true' value='16843010' type='int'/><field name='dialogIcon' final='true' static='true' value='16843252' type='int'/><field name='dialogLayout' final='true' static='true' value='16843255' type='int'/><field name='dialogMessage' final='true' static='true' value='16843251' type='int'/><field name='dialogPreferenceStyle' final='true' static='true' value='16842897' type='int'/><field name='dialogTitle' final='true' static='true' value='16843250' type='int'/><field name='digits' final='true' static='true' value='16843110' type='int'/><field name='direction' final='true' static='true' value='16843217' type='int'/><field name='directionPriority' final='true' static='true' value='16843218' type='int'/><field name='disableDependentsState' final='true' static='true' value='16843249' type='int'/><field name='disabledAlpha' final='true' static='true' value='16842803' type='int'/><field name='dither' final='true' static='true' value='16843036' type='int'/><field name='divider' final='true' static='true' value='16843049' type='int'/><field name='dividerHeight' final='true' static='true' value='16843050' type='int'/><field name='drawSelectorOnTop' final='true' static='true' value='16843004' type='int'/><field name='drawable' final='true' static='true' value='16843161' type='int'/><field name='drawableBottom' final='true' static='true' value='16843118' type='int'/><field name='drawableLeft' final='true' static='true' value='16843119' type='int'/><field name='drawablePadding' final='true' static='true' value='16843121' type='int'/><field name='drawableRight' final='true' static='true' value='16843120' type='int'/><field name='drawableTop' final='true' static='true' value='16843117' type='int'/><field name='drawingCacheQuality' final='true' static='true' value='16842984' type='int'/><field name='dropDownHintAppearance' final='true' static='true' value='16842888' type='int'/><field name='dropDownItemStyle' final='true' static='true' value='16842886' type='int'/><field name='dropDownListViewStyle' final='true' static='true' value='16842861' type='int'/><field name='dropDownSelector' final='true' static='true' value='16843125' type='int'/><field name='duplicateParentState' final='true' static='true' value='16842985' type='int'/><field name='duration' final='true' static='true' value='16843160' type='int'/><field name='editTextPreferenceStyle' final='true' static='true' value='16842898' type='int'/><field name='editTextStyle' final='true' static='true' value='16842862' type='int'/><field name='editable' final='true' static='true' value='16843115' type='int' deprecated='3'/><field name='ellipsize' final='true' static='true' value='16842923' type='int'/><field name='ems' final='true' static='true' value='16843096' type='int'/><field name='enabled' final='true' static='true' value='16842766' type='int' deprecated='3'/><field name='endColor' final='true' static='true' value='16843166' type='int'/><field name='endYear' final='true' static='true' value='16843133' type='int'/><field name='entries' final='true' static='true' value='16842930' type='int'/><field name='entryValues' final='true' static='true' value='16843256' type='int'/><field name='excludeFromRecents' final='true' static='true' value='16842775' type='int'/><field name='expandableListPreferredChildIndicatorLeft' final='true' static='true' value='16842834' type='int'/><field name='expandableListPreferredChildIndicatorRight' final='true' static='true' value='16842835' type='int'/><field name='expandableListPreferredChildPaddingLeft' final='true' static='true' value='16842831' type='int'/><field name='expandableListPreferredItemIndicatorLeft' final='true' static='true' value='16842832' type='int'/><field name='expandableListPreferredItemIndicatorRight' final='true' static='true' value='16842833' type='int'/><field name='expandableListPreferredItemPaddingLeft' final='true' static='true' value='16842830' type='int'/><field name='expandableListViewStyle' final='true' static='true' value='16842863' type='int'/><field name='exported' final='true' static='true' value='16842768' type='int'/><field name='factor' final='true' static='true' value='16843219' type='int'/><field name='fadingEdge' final='true' static='true' value='16842975' type='int'/><field name='fadingEdgeLength' final='true' static='true' value='16842976' type='int'/><field name='fillAfter' final='true' static='true' value='16843197' type='int'/><field name='fillBefore' final='true' static='true' value='16843196' type='int'/><field name='fillViewport' final='true' static='true' value='16843130' type='int'/><field name='filter' final='true' static='true' value='16843035' type='int'/><field name='finishOnTaskLaunch' final='true' static='true' value='16842772' type='int'/><field name='fitsSystemWindows' final='true' static='true' value='16842973' type='int'/><field name='flipInterval' final='true' static='true' value='16843129' type='int'/><field name='focusable' final='true' static='true' value='16842970' type='int'/><field name='focusableInTouchMode' final='true' static='true' value='16842971' type='int'/><field name='foreground' final='true' static='true' value='16843017' type='int'/><field name='foregroundGravity' final='true' static='true' value='16843264' type='int'/><field name='format' final='true' static='true' value='16843013' type='int'/><field name='freezesText' final='true' static='true' value='16843116' type='int'/><field name='fromAlpha' final='true' static='true' value='16843210' type='int'/><field name='fromDegrees' final='true' static='true' value='16843187' type='int'/><field name='fromXDelta' final='true' static='true' value='16843206' type='int'/><field name='fromXScale' final='true' static='true' value='16843202' type='int'/><field name='fromYDelta' final='true' static='true' value='16843208' type='int'/><field name='fromYScale' final='true' static='true' value='16843204' type='int'/><field name='fullBright' final='true' static='true' value='16842954' type='int'/><field name='fullDark' final='true' static='true' value='16842950' type='int'/><field name='functionalTest' final='true' static='true' value='16842787' type='int'/><field name='galleryItemBackground' final='true' static='true' value='16842828' type='int'/><field name='galleryStyle' final='true' static='true' value='16842864' type='int'/><field name='gradientRadius' final='true' static='true' value='16843172' type='int'/><field name='grantUriPermissions' final='true' static='true' value='16842779' type='int'/><field name='gravity' final='true' static='true' value='16842927' type='int'/><field name='gridViewStyle' final='true' static='true' value='16842865' type='int'/><field name='groupIndicator' final='true' static='true' value='16843019' type='int'/><field name='hand_hour' final='true' static='true' value='16843011' type='int'/><field name='hand_minute' final='true' static='true' value='16843012' type='int'/><field name='handleProfiling' final='true' static='true' value='16842786' type='int'/><field name='hasCode' final='true' static='true' value='16842764' type='int'/><field name='headerBackground' final='true' static='true' value='16843055' type='int'/><field name='height' final='true' static='true' value='16843093' type='int'/><field name='hint' final='true' static='true' value='16843088' type='int'/><field name='horizontalDivider' final='true' static='true' value='16843053' type='int'/><field name='horizontalSpacing' final='true' static='true' value='16843028' type='int'/><field name='host' final='true' static='true' value='16842792' type='int'/><field name='icon' final='true' static='true' value='16842754' type='int'/><field name='id' final='true' static='true' value='16842960' type='int'/><field name='ignoreGravity' final='true' static='true' value='16843263' type='int'/><field name='imageButtonStyle' final='true' static='true' value='16842866' type='int'/><field name='imageWellStyle' final='true' static='true' value='16842867' type='int'/><field name='inAnimation' final='true' static='true' value='16843127' type='int'/><field name='includeFontPadding' final='true' static='true' value='16843103' type='int'/><field name='indeterminate' final='true' static='true' value='16843065' type='int'/><field name='indeterminateBehavior' final='true' static='true' value='16843070' type='int'/><field name='indeterminateDrawable' final='true' static='true' value='16843067' type='int'/><field name='indeterminateDuration' final='true' static='true' value='16843069' type='int'/><field name='indeterminateOnly' final='true' static='true' value='16843066' type='int'/><field name='indicatorLeft' final='true' static='true' value='16843021' type='int'/><field name='indicatorRight' final='true' static='true' value='16843022' type='int'/><field name='inflatedId' final='true' static='true' value='16842995' type='int'/><field name='initOrder' final='true' static='true' value='16842778' type='int'/><field name='innerRadiusRatio' final='true' static='true' value='16843163' type='int'/><field name='inputMethod' final='true' static='true' value='16843112' type='int' deprecated='3'/><field name='insetBottom' final='true' static='true' value='16843194' type='int'/><field name='insetLeft' final='true' static='true' value='16843191' type='int'/><field name='insetRight' final='true' static='true' value='16843192' type='int'/><field name='insetTop' final='true' static='true' value='16843193' type='int'/><field name='interpolator' final='true' static='true' value='16843073' type='int'/><field name='isIndicator' final='true' static='true' value='16843079' type='int'/><field name='itemBackground' final='true' static='true' value='16843056' type='int'/><field name='itemIconDisabledAlpha' final='true' static='true' value='16843057' type='int'/><field name='itemTextAppearance' final='true' static='true' value='16843052' type='int'/><field name='keepScreenOn' final='true' static='true' value='16843286' type='int'/><field name='key' final='true' static='true' value='16843240' type='int'/><field name='keycode' final='true' static='true' value='16842949' type='int'/><field name='label' final='true' static='true' value='16842753' type='int'/><field name='launchMode' final='true' static='true' value='16842781' type='int'/><field name='layout' final='true' static='true' value='16842994' type='int'/><field name='layoutAnimation' final='true' static='true' value='16842988' type='int'/><field name='layout_above' final='true' static='true' value='16843140' type='int'/><field name='layout_alignBaseline' final='true' static='true' value='16843142' type='int'/><field name='layout_alignBottom' final='true' static='true' value='16843146' type='int'/><field name='layout_alignLeft' final='true' static='true' value='16843143' type='int'/><field name='layout_alignParentBottom' final='true' static='true' value='16843150' type='int'/><field name='layout_alignParentLeft' final='true' static='true' value='16843147' type='int'/><field name='layout_alignParentRight' final='true' static='true' value='16843149' type='int'/><field name='layout_alignParentTop' final='true' static='true' value='16843148' type='int'/><field name='layout_alignRight' final='true' static='true' value='16843145' type='int'/><field name='layout_alignTop' final='true' static='true' value='16843144' type='int'/><field name='layout_alignWithParentIfMissing' final='true' static='true' value='16843154' type='int'/><field name='layout_below' final='true' static='true' value='16843141' type='int'/><field name='layout_centerHorizontal' final='true' static='true' value='16843152' type='int'/><field name='layout_centerInParent' final='true' static='true' value='16843151' type='int'/><field name='layout_centerVertical' final='true' static='true' value='16843153' type='int'/><field name='layout_column' final='true' static='true' value='16843084' type='int'/><field name='layout_gravity' final='true' static='true' value='16842931' type='int'/><field name='layout_height' final='true' static='true' value='16842997' type='int'/><field name='layout_margin' final='true' static='true' value='16842998' type='int'/><field name='layout_marginBottom' final='true' static='true' value='16843002' type='int'/><field name='layout_marginLeft' final='true' static='true' value='16842999' type='int'/><field name='layout_marginRight' final='true' static='true' value='16843001' type='int'/><field name='layout_marginTop' final='true' static='true' value='16843000' type='int'/><field name='layout_scale' final='true' static='true' value='16843155' type='int'/><field name='layout_span' final='true' static='true' value='16843085' type='int'/><field name='layout_toLeftOf' final='true' static='true' value='16843138' type='int'/><field name='layout_toRightOf' final='true' static='true' value='16843139' type='int'/><field name='layout_weight' final='true' static='true' value='16843137' type='int'/><field name='layout_width' final='true' static='true' value='16842996' type='int'/><field name='layout_x' final='true' static='true' value='16843135' type='int'/><field name='layout_y' final='true' static='true' value='16843136' type='int'/><field name='left' final='true' static='true' value='16843181' type='int'/><field name='lineSpacingExtra' final='true' static='true' value='16843287' type='int'/><field name='lineSpacingMultiplier' final='true' static='true' value='16843288' type='int'/><field name='lines' final='true' static='true' value='16843092' type='int'/><field name='linksClickable' final='true' static='true' value='16842929' type='int'/><field name='listChoiceIndicatorMultiple' final='true' static='true' value='16843290' type='int'/><field name='listChoiceIndicatorSingle' final='true' static='true' value='16843289' type='int'/><field name='listDivider' final='true' static='true' value='16843284' type='int'/><field name='listPreferredItemHeight' final='true' static='true' value='16842829' type='int'/><field name='listSelector' final='true' static='true' value='16843003' type='int'/><field name='listSeparatorTextViewStyle' final='true' static='true' value='16843272' type='int'/><field name='listViewStyle' final='true' static='true' value='16842868' type='int'/><field name='listViewWhiteStyle' final='true' static='true' value='16842869' type='int'/><field name='longClickable' final='true' static='true' value='16842982' type='int'/><field name='manageSpaceActivity' final='true' static='true' value='16842756' type='int'/><field name='mapViewStyle' final='true' static='true' value='16842890' type='int'/><field name='max' final='true' static='true' value='16843062' type='int'/><field name='maxEms' final='true' static='true' value='16843095' type='int'/><field name='maxHeight' final='true' static='true' value='16843040' type='int'/><field name='maxItemsPerRow' final='true' static='true' value='16843060' type='int'/><field name='maxLength' final='true' static='true' value='16843104' type='int'/><field name='maxLevel' final='true' static='true' value='16843186' type='int'/><field name='maxLines' final='true' static='true' value='16843091' type='int'/><field name='maxRows' final='true' static='true' value='16843059' type='int'/><field name='maxWidth' final='true' static='true' value='16843039' type='int'/><field name='measureAllChildren' final='true' static='true' value='16843018' type='int'/><field name='menuCategory' final='true' static='true' value='16843230' type='int'/><field name='mimeType' final='true' static='true' value='16842790' type='int'/><field name='minEms' final='true' static='true' value='16843098' type='int'/><field name='minHeight' final='true' static='true' value='16843072' type='int'/><field name='minLevel' final='true' static='true' value='16843185' type='int'/><field name='minLines' final='true' static='true' value='16843094' type='int'/><field name='minSdkVersion' final='true' static='true' value='16843276' type='int'/><field name='minWidth' final='true' static='true' value='16843071' type='int'/><field name='mode' final='true' static='true' value='16843134' type='int'/><field name='moreIcon' final='true' static='true' value='16843061' type='int'/><field name='multiprocess' final='true' static='true' value='16842771' type='int'/><field name='name' final='true' static='true' value='16842755' type='int'/><field name='negativeButtonText' final='true' static='true' value='16843254' type='int'/><field name='nextFocusDown' final='true' static='true' value='16842980' type='int'/><field name='nextFocusLeft' final='true' static='true' value='16842977' type='int'/><field name='nextFocusRight' final='true' static='true' value='16842978' type='int'/><field name='nextFocusUp' final='true' static='true' value='16842979' type='int'/><field name='numColumns' final='true' static='true' value='16843032' type='int'/><field name='numStars' final='true' static='true' value='16843076' type='int'/><field name='numeric' final='true' static='true' value='16843109' type='int' deprecated='3'/><field name='numericShortcut' final='true' static='true' value='16843236' type='int'/><field name='oneshot' final='true' static='true' value='16843159' type='int'/><field name='order' final='true' static='true' value='16843242' type='int'/><field name='orderInCategory' final='true' static='true' value='16843231' type='int'/><field name='orderingFromXml' final='true' static='true' value='16843239' type='int'/><field name='orientation' final='true' static='true' value='16842948' type='int'/><field name='outAnimation' final='true' static='true' value='16843128' type='int'/><field name='padding' final='true' static='true' value='16842965' type='int'/><field name='paddingBottom' final='true' static='true' value='16842969' type='int'/><field name='paddingLeft' final='true' static='true' value='16842966' type='int'/><field name='paddingRight' final='true' static='true' value='16842968' type='int'/><field name='paddingTop' final='true' static='true' value='16842967' type='int'/><field name='panelBackground' final='true' static='true' value='16842846' type='int'/><field name='panelColorBackground' final='true' static='true' value='16842849' type='int'/><field name='panelColorForeground' final='true' static='true' value='16842848' type='int'/><field name='panelFullBackground' final='true' static='true' value='16842847' type='int'/><field name='panelTextAppearance' final='true' static='true' value='16842850' type='int'/><field name='password' final='true' static='true' value='16843100' type='int' deprecated='3'/><field name='path' final='true' static='true' value='16842794' type='int'/><field name='pathPattern' final='true' static='true' value='16842796' type='int'/><field name='pathPrefix' final='true' static='true' value='16842795' type='int'/><field name='permission' final='true' static='true' value='16842758' type='int'/><field name='permissionGroup' final='true' static='true' value='16842762' type='int'/><field name='persistent' final='true' static='true' value='16842765' type='int'/><field name='persistentDrawingCache' final='true' static='true' value='16842990' type='int'/><field name='phoneNumber' final='true' static='true' value='16843111' type='int' deprecated='3'/><field name='pivotX' final='true' static='true' value='16843189' type='int'/><field name='pivotY' final='true' static='true' value='16843190' type='int'/><field name='popupBackground' final='true' static='true' value='16843126' type='int'/><field name='popupWindowStyle' final='true' static='true' value='16842870' type='int'/><field name='port' final='true' static='true' value='16842793' type='int'/><field name='positiveButtonText' final='true' static='true' value='16843253' type='int'/><field name='preferenceCategoryStyle' final='true' static='true' value='16842892' type='int'/><field name='preferenceInformationStyle' final='true' static='true' value='16842893' type='int'/><field name='preferenceLayoutChild' final='true' static='true' value='16842900' type='int'/><field name='preferenceScreenStyle' final='true' static='true' value='16842891' type='int'/><field name='preferenceStyle' final='true' static='true' value='16842894' type='int'/><field name='priority' final='true' static='true' value='16842780' type='int'/><field name='process' final='true' static='true' value='16842769' type='int'/><field name='progress' final='true' static='true' value='16843063' type='int'/><field name='progressBarStyle' final='true' static='true' value='16842871' type='int'/><field name='progressBarStyleHorizontal' final='true' static='true' value='16842872' type='int'/><field name='progressBarStyleLarge' final='true' static='true' value='16842874' type='int'/><field name='progressBarStyleSmall' final='true' static='true' value='16842873' type='int'/><field name='progressBarStyleSmallTitle' final='true' static='true' value='16843279' type='int'/><field name='progressDrawable' final='true' static='true' value='16843068' type='int'/><field name='prompt' final='true' static='true' value='16843131' type='int'/><field name='protectionLevel' final='true' static='true' value='16842761' type='int'/><field name='queryActionMsg' final='true' static='true' value='16843227' type='int'/><field name='radioButtonStyle' final='true' static='true' value='16842878' type='int'/><field name='radius' final='true' static='true' value='16843176' type='int'/><field name='rating' final='true' static='true' value='16843077' type='int'/><field name='ratingBarStyle' final='true' static='true' value='16842876' type='int'/><field name='ratingBarStyleIndicator' final='true' static='true' value='16843280' type='int'/><field name='ratingBarStyleSmall' final='true' static='true' value='16842877' type='int'/><field name='readPermission' final='true' static='true' value='16842759' type='int'/><field name='repeatCount' final='true' static='true' value='16843199' type='int'/><field name='repeatMode' final='true' static='true' value='16843200' type='int'/><field name='resource' final='true' static='true' value='16842789' type='int'/><field name='right' final='true' static='true' value='16843183' type='int'/><field name='ringtonePreferenceStyle' final='true' static='true' value='16842899' type='int'/><field name='ringtoneType' final='true' static='true' value='16843257' type='int'/><field name='rowDelay' final='true' static='true' value='16843216' type='int'/><field name='rowHeight' final='true' static='true' value='16843058' type='int'/><field name='saveEnabled' final='true' static='true' value='16842983' type='int'/><field name='scaleGravity' final='true' static='true' value='16843262' type='int'/><field name='scaleHeight' final='true' static='true' value='16843261' type='int'/><field name='scaleType' final='true' static='true' value='16843037' type='int'/><field name='scaleWidth' final='true' static='true' value='16843260' type='int'/><field name='scheme' final='true' static='true' value='16842791' type='int'/><field name='screenOrientation' final='true' static='true' value='16842782' type='int'/><field name='scrollHorizontally' final='true' static='true' value='16843099' type='int'/><field name='scrollViewStyle' final='true' static='true' value='16842880' type='int'/><field name='scrollX' final='true' static='true' value='16842962' type='int'/><field name='scrollY' final='true' static='true' value='16842963' type='int'/><field name='scrollbarAlwaysDrawHorizontalTrack' final='true' static='true' value='16842856' type='int'/><field name='scrollbarAlwaysDrawVerticalTrack' final='true' static='true' value='16842857' type='int'/><field name='scrollbarSize' final='true' static='true' value='16842851' type='int'/><field name='scrollbarStyle' final='true' static='true' value='16842879' type='int'/><field name='scrollbarThumbHorizontal' final='true' static='true' value='16842852' type='int'/><field name='scrollbarThumbVertical' final='true' static='true' value='16842853' type='int'/><field name='scrollbarTrackHorizontal' final='true' static='true' value='16842854' type='int'/><field name='scrollbarTrackVertical' final='true' static='true' value='16842855' type='int'/><field name='scrollbars' final='true' static='true' value='16842974' type='int'/><field name='scrollingCache' final='true' static='true' value='16843006' type='int'/><field name='searchButtonText' final='true' static='true' value='16843269' type='int' deprecated='3'/><field name='searchMode' final='true' static='true' value='16843221' type='int'/><field name='searchSuggestAuthority' final='true' static='true' value='16843222' type='int'/><field name='searchSuggestIntentAction' final='true' static='true' value='16843225' type='int'/><field name='searchSuggestIntentData' final='true' static='true' value='16843226' type='int'/><field name='searchSuggestPath' final='true' static='true' value='16843223' type='int'/><field name='searchSuggestSelection' final='true' static='true' value='16843224' type='int'/><field name='secondaryProgress' final='true' static='true' value='16843064' type='int'/><field name='seekBarStyle' final='true' static='true' value='16842875' type='int'/><field name='selectAllOnFocus' final='true' static='true' value='16843102' type='int'/><field name='selectable' final='true' static='true' value='16843238' type='int'/><field name='shadowColor' final='true' static='true' value='16843105' type='int'/><field name='shadowDx' final='true' static='true' value='16843106' type='int'/><field name='shadowDy' final='true' static='true' value='16843107' type='int'/><field name='shadowRadius' final='true' static='true' value='16843108' type='int'/><field name='shape' final='true' static='true' value='16843162' type='int'/><field name='shareInterpolator' final='true' static='true' value='16843195' type='int'/><field name='sharedUserId' final='true' static='true' value='16842763' type='int'/><field name='shouldDisableView' final='true' static='true' value='16843246' type='int'/><field name='showDefault' final='true' static='true' value='16843258' type='int'/><field name='showSilent' final='true' static='true' value='16843259' type='int'/><field name='shrinkColumns' final='true' static='true' value='16843082' type='int'/><field name='singleLine' final='true' static='true' value='16843101' type='int' deprecated='3'/><field name='soundEffectsEnabled' final='true' static='true' value='16843285' type='int'/><field name='spacing' final='true' static='true' value='16843027' type='int'/><field name='spinnerDropDownItemStyle' final='true' static='true' value='16842887' type='int'/><field name='spinnerItemStyle' final='true' static='true' value='16842889' type='int'/><field name='spinnerStyle' final='true' static='true' value='16842881' type='int'/><field name='src' final='true' static='true' value='16843033' type='int'/><field name='stackFromBottom' final='true' static='true' value='16843005' type='int'/><field name='starStyle' final='true' static='true' value='16842882' type='int'/><field name='startColor' final='true' static='true' value='16843165' type='int'/><field name='startOffset' final='true' static='true' value='16843198' type='int'/><field name='startYear' final='true' static='true' value='16843132' type='int'/><field name='stateNotNeeded' final='true' static='true' value='16842774' type='int'/><field name='state_above_anchor' final='true' static='true' value='16842922' type='int'/><field name='state_active' final='true' static='true' value='16842914' type='int'/><field name='state_checkable' final='true' static='true' value='16842911' type='int'/><field name='state_checked' final='true' static='true' value='16842912' type='int'/><field name='state_empty' final='true' static='true' value='16842921' type='int'/><field name='state_enabled' final='true' static='true' value='16842910' type='int'/><field name='state_expanded' final='true' static='true' value='16842920' type='int'/><field name='state_first' final='true' static='true' value='16842916' type='int'/><field name='state_focused' final='true' static='true' value='16842908' type='int'/><field name='state_last' final='true' static='true' value='16842918' type='int'/><field name='state_middle' final='true' static='true' value='16842917' type='int'/><field name='state_pressed' final='true' static='true' value='16842919' type='int'/><field name='state_selected' final='true' static='true' value='16842913' type='int'/><field name='state_single' final='true' static='true' value='16842915' type='int'/><field name='state_window_focused' final='true' static='true' value='16842909' type='int'/><field name='stepSize' final='true' static='true' value='16843078' type='int'/><field name='streamType' final='true' static='true' value='16843273' type='int'/><field name='stretchColumns' final='true' static='true' value='16843081' type='int'/><field name='stretchMode' final='true' static='true' value='16843030' type='int'/><field name='suggestActionMsg' final='true' static='true' value='16843228' type='int'/><field name='suggestActionMsgColumn' final='true' static='true' value='16843229' type='int'/><field name='summary' final='true' static='true' value='16843241' type='int'/><field name='summaryOff' final='true' static='true' value='16843248' type='int'/><field name='summaryOn' final='true' static='true' value='16843247' type='int'/><field name='syncable' final='true' static='true' value='16842777' type='int'/><field name='tabWidgetStyle' final='true' static='true' value='16842883' type='int'/><field name='tag' final='true' static='true' value='16842961' type='int'/><field name='targetActivity' final='true' static='true' value='16843266' type='int'/><field name='targetClass' final='true' static='true' value='16842799' type='int'/><field name='targetPackage' final='true' static='true' value='16842785' type='int'/><field name='taskAffinity' final='true' static='true' value='16842770' type='int'/><field name='taskCloseEnterAnimation' final='true' static='true' value='16842942' type='int'/><field name='taskCloseExitAnimation' final='true' static='true' value='16842943' type='int'/><field name='taskOpenEnterAnimation' final='true' static='true' value='16842940' type='int'/><field name='taskOpenExitAnimation' final='true' static='true' value='16842941' type='int'/><field name='taskToBackEnterAnimation' final='true' static='true' value='16842946' type='int'/><field name='taskToBackExitAnimation' final='true' static='true' value='16842947' type='int'/><field name='taskToFrontEnterAnimation' final='true' static='true' value='16842944' type='int'/><field name='taskToFrontExitAnimation' final='true' static='true' value='16842945' type='int'/><field name='text' final='true' static='true' value='16843087' type='int'/><field name='textAppearance' final='true' static='true' value='16842804' type='int'/><field name='textAppearanceButton' final='true' static='true' value='16843271' type='int'/><field name='textAppearanceInverse' final='true' static='true' value='16842805' type='int'/><field name='textAppearanceLarge' final='true' static='true' value='16842816' type='int'/><field name='textAppearanceLargeInverse' final='true' static='true' value='16842819' type='int'/><field name='textAppearanceMedium' final='true' static='true' value='16842817' type='int'/><field name='textAppearanceMediumInverse' final='true' static='true' value='16842820' type='int'/><field name='textAppearanceSmall' final='true' static='true' value='16842818' type='int'/><field name='textAppearanceSmallInverse' final='true' static='true' value='16842821' type='int'/><field name='textCheckMark' final='true' static='true' value='16842822' type='int'/><field name='textCheckMarkInverse' final='true' static='true' value='16842823' type='int'/><field name='textColor' final='true' static='true' value='16842904' type='int'/><field name='textColorHighlight' final='true' static='true' value='16842905' type='int'/><field name='textColorHint' final='true' static='true' value='16842906' type='int'/><field name='textColorHintInverse' final='true' static='true' value='16842815' type='int'/><field name='textColorLink' final='true' static='true' value='16842907' type='int'/><field name='textColorPrimary' final='true' static='true' value='16842806' type='int'/><field name='textColorPrimaryDisableOnly' final='true' static='true' value='16842807' type='int'/><field name='textColorPrimaryInverse' final='true' static='true' value='16842809' type='int'/><field name='textColorPrimaryInverseNoDisable' final='true' static='true' value='16842813' type='int'/><field name='textColorPrimaryNoDisable' final='true' static='true' value='16842811' type='int'/><field name='textColorSecondary' final='true' static='true' value='16842808' type='int'/><field name='textColorSecondaryInverse' final='true' static='true' value='16842810' type='int'/><field name='textColorSecondaryInverseNoDisable' final='true' static='true' value='16842814' type='int'/><field name='textColorSecondaryNoDisable' final='true' static='true' value='16842812' type='int'/><field name='textColorTertiary' final='true' static='true' value='16843282' type='int'/><field name='textColorTertiaryInverse' final='true' static='true' value='16843283' type='int'/><field name='textFilterEnabled' final='true' static='true' value='16843007' type='int'/><field name='textOff' final='true' static='true' value='16843045' type='int'/><field name='textOn' final='true' static='true' value='16843044' type='int'/><field name='textScaleX' final='true' static='true' value='16843089' type='int'/><field name='textSize' final='true' static='true' value='16842901' type='int'/><field name='textStyle' final='true' static='true' value='16842903' type='int'/><field name='textViewStyle' final='true' static='true' value='16842884' type='int'/><field name='theme' final='true' static='true' value='16842752' type='int'/><field name='thicknessRatio' final='true' static='true' value='16843164' type='int'/><field name='thumb' final='true' static='true' value='16843074' type='int'/><field name='thumbOffset' final='true' static='true' value='16843075' type='int'/><field name='tileMode' final='true' static='true' value='16843265' type='int'/><field name='tint' final='true' static='true' value='16843041' type='int'/><field name='title' final='true' static='true' value='16843233' type='int'/><field name='titleCondensed' final='true' static='true' value='16843234' type='int'/><field name='toAlpha' final='true' static='true' value='16843211' type='int'/><field name='toDegrees' final='true' static='true' value='16843188' type='int'/><field name='toXDelta' final='true' static='true' value='16843207' type='int'/><field name='toXScale' final='true' static='true' value='16843203' type='int'/><field name='toYDelta' final='true' static='true' value='16843209' type='int'/><field name='toYScale' final='true' static='true' value='16843205' type='int'/><field name='top' final='true' static='true' value='16843182' type='int'/><field name='topBright' final='true' static='true' value='16842955' type='int'/><field name='topDark' final='true' static='true' value='16842951' type='int'/><field name='topLeftRadius' final='true' static='true' value='16843177' type='int'/><field name='topRightRadius' final='true' static='true' value='16843178' type='int'/><field name='transcriptMode' final='true' static='true' value='16843008' type='int'/><field name='type' final='true' static='true' value='16843169' type='int'/><field name='typeface' final='true' static='true' value='16842902' type='int'/><field name='unselectedAlpha' final='true' static='true' value='16843278' type='int'/><field name='useLevel' final='true' static='true' value='16843167' type='int'/><field name='value' final='true' static='true' value='16842788' type='int'/><field name='variablePadding' final='true' static='true' value='16843157' type='int'/><field name='versionCode' final='true' static='true' value='16843291' type='int'/><field name='versionName' final='true' static='true' value='16843292' type='int'/><field name='verticalDivider' final='true' static='true' value='16843054' type='int'/><field name='verticalSpacing' final='true' static='true' value='16843029' type='int'/><field name='visibility' final='true' static='true' value='16842972' type='int'/><field name='visible' final='true' static='true' value='16843156' type='int'/><field name='webViewStyle' final='true' static='true' value='16842885' type='int'/><field name='weightSum' final='true' static='true' value='16843048' type='int'/><field name='widgetLayout' final='true' static='true' value='16843243' type='int'/><field name='width' final='true' static='true' value='16843097' type='int'/><field name='windowAnimationStyle' final='true' static='true' value='16842926' type='int'/><field name='windowBackground' final='true' static='true' value='16842836' type='int'/><field name='windowContentOverlay' final='true' static='true' value='16842841' type='int'/><field name='windowEnterAnimation' final='true' static='true' value='16842932' type='int'/><field name='windowExitAnimation' final='true' static='true' value='16842933' type='int'/><field name='windowFrame' final='true' static='true' value='16842837' type='int'/><field name='windowFullscreen' final='true' static='true' value='16843277' type='int'/><field name='windowHideAnimation' final='true' static='true' value='16842935' type='int'/><field name='windowIsFloating' final='true' static='true' value='16842839' type='int'/><field name='windowIsTranslucent' final='true' static='true' value='16842840' type='int'/><field name='windowNoTitle' final='true' static='true' value='16842838' type='int'/><field name='windowShowAnimation' final='true' static='true' value='16842934' type='int'/><field name='windowTitleBackgroundStyle' final='true' static='true' value='16842844' type='int'/><field name='windowTitleSize' final='true' static='true' value='16842842' type='int'/><field name='windowTitleStyle' final='true' static='true' value='16842843' type='int'/><field name='writePermission' final='true' static='true' value='16842760' type='int'/><field name='x' final='true' static='true' value='16842924' type='int'/><field name='y' final='true' static='true' value='16842925' type='int'/><field name='yesNoPreferenceStyle' final='true' static='true' value='16842896' type='int'/><field name='zAdjustment' final='true' static='true' value='16843201' type='int'/><field api_added='2' name='marqueeRepeatLimit' final='true' static='true' value='16843293' type='int'/><field api_added='3' name='allowSingleTap' final='true' static='true' value='16843353' type='int'/><field api_added='3' name='animateOnClick' final='true' static='true' value='16843356' type='int'/><field api_added='3' name='backgroundDimEnabled' final='true' static='true' value='16843295' type='int'/><field api_added='3' name='bottomOffset' final='true' static='true' value='16843351' type='int'/><field api_added='3' name='candidatesTextStyleSpans' final='true' static='true' value='16843312' type='int'/><field api_added='3' name='codes' final='true' static='true' value='16843330' type='int'/><field api_added='3' name='configure' final='true' static='true' value='16843357' type='int'/><field api_added='3' name='content' final='true' static='true' value='16843355' type='int'/><field api_added='3' name='dropDownAnchor' final='true' static='true' value='16843363' type='int'/><field api_added='3' name='dropDownWidth' final='true' static='true' value='16843362' type='int'/><field api_added='3' name='editorExtras' final='true' static='true' value='16843300' type='int'/><field api_added='3' name='fastScrollEnabled' final='true' static='true' value='16843302' type='int'/><field api_added='3' name='fillEnabled' final='true' static='true' value='16843343' type='int'/><field api_added='3' name='footerDividersEnabled' final='true' static='true' value='16843311' type='int'/><field api_added='3' name='handle' final='true' static='true' value='16843354' type='int'/><field api_added='3' name='hapticFeedbackEnabled' final='true' static='true' value='16843358' type='int'/><field api_added='3' name='headerDividersEnabled' final='true' static='true' value='16843310' type='int'/><field api_added='3' name='horizontalGap' final='true' static='true' value='16843327' type='int'/><field api_added='3' name='iconPreview' final='true' static='true' value='16843337' type='int'/><field api_added='3' name='imeActionId' final='true' static='true' value='16843366' type='int'/><field api_added='3' name='imeActionLabel' final='true' static='true' value='16843365' type='int'/><field api_added='3' name='imeExtractEnterAnimation' final='true' static='true' value='16843368' type='int'/><field api_added='3' name='imeExtractExitAnimation' final='true' static='true' value='16843369' type='int'/><field api_added='3' name='imeFullscreenBackground' final='true' static='true' value='16843308' type='int'/><field api_added='3' name='imeOptions' final='true' static='true' value='16843364' type='int'/><field api_added='3' name='initialLayout' final='true' static='true' value='16843345' type='int'/><field api_added='3' name='innerRadius' final='true' static='true' value='16843359' type='int'/><field api_added='3' name='inputType' final='true' static='true' value='16843296' type='int'/><field api_added='3' name='isDefault' final='true' static='true' value='16843297' type='int'/><field api_added='3' name='isModifier' final='true' static='true' value='16843334' type='int'/><field api_added='3' name='isRepeatable' final='true' static='true' value='16843336' type='int'/><field api_added='3' name='isScrollContainer' final='true' static='true' value='16843342' type='int'/><field api_added='3' name='isSticky' final='true' static='true' value='16843335' type='int'/><field api_added='3' name='keyBackground' final='true' static='true' value='16843315' type='int'/><field api_added='3' name='keyEdgeFlags' final='true' static='true' value='16843333' type='int'/><field api_added='3' name='keyHeight' final='true' static='true' value='16843326' type='int'/><field api_added='3' name='keyIcon' final='true' static='true' value='16843340' type='int'/><field api_added='3' name='keyLabel' final='true' static='true' value='16843339' type='int'/><field api_added='3' name='keyOutputText' final='true' static='true' value='16843338' type='int'/><field api_added='3' name='keyPreviewHeight' final='true' static='true' value='16843321' type='int'/><field api_added='3' name='keyPreviewLayout' final='true' static='true' value='16843319' type='int'/><field api_added='3' name='keyPreviewOffset' final='true' static='true' value='16843320' type='int'/><field api_added='3' name='keyTextColor' final='true' static='true' value='16843318' type='int'/><field api_added='3' name='keyTextSize' final='true' static='true' value='16843316' type='int'/><field api_added='3' name='keyWidth' final='true' static='true' value='16843325' type='int'/><field api_added='3' name='keyboardMode' final='true' static='true' value='16843341' type='int'/><field api_added='3' name='labelTextSize' final='true' static='true' value='16843317' type='int'/><field api_added='3' name='noHistory' final='true' static='true' value='16843309' type='int'/><field api_added='3' name='popupCharacters' final='true' static='true' value='16843332' type='int'/><field api_added='3' name='popupKeyboard' final='true' static='true' value='16843331' type='int'/><field api_added='3' name='popupLayout' final='true' static='true' value='16843323' type='int'/><field api_added='3' name='privateImeOptions' final='true' static='true' value='16843299' type='int'/><field api_added='3' name='reqFiveWayNav' final='true' static='true' value='16843314' type='int'/><field api_added='3' name='reqHardKeyboard' final='true' static='true' value='16843305' type='int'/><field api_added='3' name='reqKeyboardType' final='true' static='true' value='16843304' type='int'/><field api_added='3' name='reqNavigation' final='true' static='true' value='16843306' type='int'/><field api_added='3' name='reqTouchScreen' final='true' static='true' value='16843303' type='int'/><field api_added='3' name='rowEdgeFlags' final='true' static='true' value='16843329' type='int'/><field api_added='3' name='settingsActivity' final='true' static='true' value='16843301' type='int'/><field api_added='3' name='sharedUserLabel' final='true' static='true' value='16843361' type='int'/><field api_added='3' name='smoothScrollbar' final='true' static='true' value='16843313' type='int'/><field api_added='3' name='state_long_pressable' final='true' static='true' value='16843324' type='int'/><field api_added='3' name='thickness' final='true' static='true' value='16843360' type='int'/><field api_added='3' name='topOffset' final='true' static='true' value='16843352' type='int'/><field api_added='3' name='updatePeriodMillis' final='true' static='true' value='16843344' type='int'/><field api_added='3' name='verticalCorrection' final='true' static='true' value='16843322' type='int'/><field api_added='3' name='verticalGap' final='true' static='true' value='16843328' type='int'/><field api_added='3' name='voiceLanguage' final='true' static='true' value='16843349' type='int'/><field api_added='3' name='voiceLanguageModel' final='true' static='true' value='16843347' type='int'/><field api_added='3' name='voiceMaxResults' final='true' static='true' value='16843350' type='int'/><field api_added='3' name='voicePromptText' final='true' static='true' value='16843348' type='int'/><field api_added='3' name='voiceSearchMode' final='true' static='true' value='16843346' type='int'/><field api_added='3' name='windowDisablePreview' final='true' static='true' value='16843298' type='int'/><field api_added='3' name='windowNoDisplay' final='true' static='true' value='16843294' type='int'/><field api_added='3' name='windowSoftInputMode' final='true' static='true' value='16843307' type='int'/><field api_added='4' name='allowBackup' final='true' static='true' value='16843392' type='int'/><field api_added='4' name='anyDensity' final='true' static='true' value='16843372' type='int'/><field api_added='4' name='autoUrlDetect' final='true' static='true' value='16843404' type='int'/><field api_added='4' name='backupAgent' final='true' static='true' value='16843391' type='int'/><field api_added='4' name='contentDescription' final='true' static='true' value='16843379' type='int'/><field api_added='4' name='dropDownHeight' final='true' static='true' value='16843395' type='int'/><field api_added='4' name='eventsInterceptionEnabled' final='true' static='true' value='16843389' type='int'/><field api_added='4' name='extraTension' final='true' static='true' value='16843371' type='int'/><field api_added='4' name='fadeDuration' final='true' static='true' value='16843384' type='int'/><field api_added='4' name='fadeEnabled' final='true' static='true' value='16843390' type='int'/><field api_added='4' name='fadeOffset' final='true' static='true' value='16843383' type='int'/><field api_added='4' name='gestureColor' final='true' static='true' value='16843381' type='int'/><field api_added='4' name='gestureStrokeAngleThreshold' final='true' static='true' value='16843388' type='int'/><field api_added='4' name='gestureStrokeLengthThreshold' final='true' static='true' value='16843386' type='int'/><field api_added='4' name='gestureStrokeSquarenessThreshold' final='true' static='true' value='16843387' type='int'/><field api_added='4' name='gestureStrokeType' final='true' static='true' value='16843385' type='int'/><field api_added='4' name='gestureStrokeWidth' final='true' static='true' value='16843380' type='int'/><field api_added='4' name='glEsVersion' final='true' static='true' value='16843393' type='int'/><field api_added='4' name='includeInGlobalSearch' final='true' static='true' value='16843374' type='int'/><field api_added='4' name='largeScreens' final='true' static='true' value='16843398' type='int'/><field api_added='4' name='maxSdkVersion' final='true' static='true' value='16843377' type='int'/><field api_added='4' name='normalScreens' final='true' static='true' value='16843397' type='int'/><field api_added='4' name='onClick' final='true' static='true' value='16843375' type='int'/><field api_added='4' name='progressBarStyleInverse' final='true' static='true' value='16843399' type='int'/><field api_added='4' name='progressBarStyleLargeInverse' final='true' static='true' value='16843401' type='int'/><field api_added='4' name='progressBarStyleSmallInverse' final='true' static='true' value='16843400' type='int'/><field api_added='4' name='queryAfterZeroResults' final='true' static='true' value='16843394' type='int'/><field api_added='4' name='resizeable' final='true' static='true' value='16843405' type='int'/><field api_added='4' name='searchSettingsDescription' final='true' static='true' value='16843402' type='int'/><field api_added='4' name='searchSuggestThreshold' final='true' static='true' value='16843373' type='int'/><field api_added='4' name='smallScreens' final='true' static='true' value='16843396' type='int'/><field api_added='4' name='targetSdkVersion' final='true' static='true' value='16843376' type='int'/><field api_added='4' name='tension' final='true' static='true' value='16843370' type='int'/><field api_added='4' name='testOnly' final='true' static='true' value='16843378' type='int'/><field api_added='4' name='textColorPrimaryInverseDisableOnly' final='true' static='true' value='16843403' type='int'/><field api_added='4' name='uncertainGestureColor' final='true' static='true' value='16843382' type='int'/><field api_added='5' name='accountPreferences' final='true' static='true' value='16843423' type='int'/><field api_added='5' name='accountType' final='true' static='true' value='16843407' type='int'/><field api_added='5' name='colorBackgroundCacheHint' final='true' static='true' value='16843435' type='int'/><field api_added='5' name='contentAuthority' final='true' static='true' value='16843408' type='int'/><field api_added='5' name='detachWallpaper' final='true' static='true' value='16843430' type='int'/><field api_added='5' name='detailColumn' final='true' static='true' value='16843427' type='int'/><field api_added='5' name='detailSocialSummary' final='true' static='true' value='16843428' type='int'/><field api_added='5' name='dropDownHorizontalOffset' final='true' static='true' value='16843436' type='int'/><field api_added='5' name='dropDownVerticalOffset' final='true' static='true' value='16843437' type='int'/><field api_added='5' name='fadeScrollbars' final='true' static='true' value='16843434' type='int'/><field api_added='5' name='finishOnCloseSystemDialogs' final='true' static='true' value='16843431' type='int'/><field api_added='5' name='killAfterRestore' final='true' static='true' value='16843420' type='int'/><field api_added='5' name='required' final='true' static='true' value='16843406' type='int'/><field api_added='5' name='restoreNeedsApplication' final='true' static='true' value='16843421' type='int' deprecated='8'/><field api_added='5' name='scrollbarDefaultDelayBeforeFade' final='true' static='true' value='16843433' type='int'/><field api_added='5' name='scrollbarFadeDuration' final='true' static='true' value='16843432' type='int'/><field api_added='5' name='smallIcon' final='true' static='true' value='16843422' type='int'/><field api_added='5' name='summaryColumn' final='true' static='true' value='16843426' type='int'/><field api_added='5' name='supportsUploading' final='true' static='true' value='16843419' type='int'/><field api_added='5' name='textAppearanceSearchResultSubtitle' final='true' static='true' value='16843424' type='int'/><field api_added='5' name='textAppearanceSearchResultTitle' final='true' static='true' value='16843425' type='int'/><field api_added='5' name='thumbnail' final='true' static='true' value='16843429' type='int'/><field api_added='5' name='userVisible' final='true' static='true' value='16843409' type='int'/><field api_added='5' name='wallpaperCloseEnterAnimation' final='true' static='true' value='16843413' type='int'/><field api_added='5' name='wallpaperCloseExitAnimation' final='true' static='true' value='16843414' type='int'/><field api_added='5' name='wallpaperIntraCloseEnterAnimation' final='true' static='true' value='16843417' type='int'/><field api_added='5' name='wallpaperIntraCloseExitAnimation' final='true' static='true' value='16843418' type='int'/><field api_added='5' name='wallpaperIntraOpenEnterAnimation' final='true' static='true' value='16843415' type='int'/><field api_added='5' name='wallpaperIntraOpenExitAnimation' final='true' static='true' value='16843416' type='int'/><field api_added='5' name='wallpaperOpenEnterAnimation' final='true' static='true' value='16843411' type='int'/><field api_added='5' name='wallpaperOpenExitAnimation' final='true' static='true' value='16843412' type='int'/><field api_added='5' name='windowShowWallpaper' final='true' static='true' value='16843410' type='int'/><field api_added='6' name='quickContactBadgeStyleSmallWindowLarge' final='true' static='true' value='16843443' type='int'/><field api_added='6' name='quickContactBadgeStyleSmallWindowMedium' final='true' static='true' value='16843442' type='int'/><field api_added='6' name='quickContactBadgeStyleSmallWindowSmall' final='true' static='true' value='16843441' type='int'/><field api_added='6' name='quickContactBadgeStyleWindowLarge' final='true' static='true' value='16843440' type='int'/><field api_added='6' name='quickContactBadgeStyleWindowMedium' final='true' static='true' value='16843439' type='int'/><field api_added='6' name='quickContactBadgeStyleWindowSmall' final='true' static='true' value='16843438' type='int'/><field api_added='7' name='author' final='true' static='true' value='16843444' type='int'/><field api_added='7' name='autoStart' final='true' static='true' value='16843445' type='int'/><field api_added='8' name='expandableListViewWhiteStyle' final='true' static='true' value='16843446' type='int'/><field api_added='8' name='installLocation' final='true' static='true' value='16843447' type='int'/><field api_added='8' name='restoreAnyVersion' final='true' static='true' value='16843450' type='int'/><field api_added='8' name='tabStripEnabled' final='true' static='true' value='16843453' type='int'/><field api_added='8' name='tabStripLeft' final='true' static='true' value='16843451' type='int'/><field api_added='8' name='tabStripRight' final='true' static='true' value='16843452' type='int'/><field api_added='8' name='vmSafeMode' final='true' static='true' value='16843448' type='int'/><field api_added='8' name='webTextViewStyle' final='true' static='true' value='16843449' type='int'/></class><class name='R.color' final='true' extends='java.lang.Object' static='true'><constructor name='R.color' type='android.R.color'/><field name='background_dark' final='true' static='true' value='17170446' type='int'/><field name='background_light' final='true' static='true' value='17170447' type='int'/><field name='black' final='true' static='true' value='17170444' type='int'/><field name='darker_gray' final='true' static='true' value='17170432' type='int'/><field name='primary_text_dark' final='true' static='true' value='17170433' type='int'/><field name='primary_text_dark_nodisable' final='true' static='true' value='17170434' type='int'/><field name='primary_text_light' final='true' static='true' value='17170435' type='int'/><field name='primary_text_light_nodisable' final='true' static='true' value='17170436' type='int'/><field name='secondary_text_dark' final='true' static='true' value='17170437' type='int'/><field name='secondary_text_dark_nodisable' final='true' static='true' value='17170438' type='int'/><field name='secondary_text_light' final='true' static='true' value='17170439' type='int'/><field name='secondary_text_light_nodisable' final='true' static='true' value='17170440' type='int'/><field name='tab_indicator_text' final='true' static='true' value='17170441' type='int'/><field name='tertiary_text_dark' final='true' static='true' value='17170448' type='int'/><field name='tertiary_text_light' final='true' static='true' value='17170449' type='int'/><field name='transparent' final='true' static='true' value='17170445' type='int'/><field name='white' final='true' static='true' value='17170443' type='int'/><field name='widget_edittext_dark' final='true' static='true' value='17170442' type='int'/></class><class name='R.dimen' final='true' extends='java.lang.Object' static='true'><constructor name='R.dimen' type='android.R.dimen'/><field name='app_icon_size' final='true' static='true' value='17104896' type='int'/><field name='thumbnail_height' final='true' static='true' value='17104897' type='int'/><field name='thumbnail_width' final='true' static='true' value='17104898' type='int'/></class><class name='R.drawable' final='true' extends='java.lang.Object' static='true'><constructor name='R.drawable' type='android.R.drawable'/><field name='alert_dark_frame' final='true' static='true' value='17301504' type='int'/><field name='alert_light_frame' final='true' static='true' value='17301505' type='int'/><field name='arrow_down_float' final='true' static='true' value='17301506' type='int'/><field name='arrow_up_float' final='true' static='true' value='17301507' type='int'/><field name='bottom_bar' final='true' static='true' value='17301658' type='int'/><field name='btn_default' final='true' static='true' value='17301508' type='int'/><field name='btn_default_small' final='true' static='true' value='17301509' type='int'/><field name='btn_dialog' final='true' static='true' value='17301527' type='int'/><field name='btn_dropdown' final='true' static='true' value='17301510' type='int'/><field name='btn_minus' final='true' static='true' value='17301511' type='int'/><field name='btn_plus' final='true' static='true' value='17301512' type='int'/><field name='btn_radio' final='true' static='true' value='17301513' type='int'/><field name='btn_star' final='true' static='true' value='17301514' type='int'/><field name='btn_star_big_off' final='true' static='true' value='17301515' type='int'/><field name='btn_star_big_on' final='true' static='true' value='17301516' type='int'/><field name='button_onoff_indicator_off' final='true' static='true' value='17301518' type='int'/><field name='button_onoff_indicator_on' final='true' static='true' value='17301517' type='int'/><field name='checkbox_off_background' final='true' static='true' value='17301519' type='int'/><field name='checkbox_on_background' final='true' static='true' value='17301520' type='int'/><field name='dialog_frame' final='true' static='true' value='17301521' type='int'/><field name='divider_horizontal_bright' final='true' static='true' value='17301522' type='int'/><field name='divider_horizontal_dark' final='true' static='true' value='17301524' type='int'/><field name='divider_horizontal_dim_dark' final='true' static='true' value='17301525' type='int'/><field name='divider_horizontal_textfield' final='true' static='true' value='17301523' type='int'/><field name='edit_text' final='true' static='true' value='17301526' type='int'/><field name='editbox_background' final='true' static='true' value='17301528' type='int'/><field name='editbox_background_normal' final='true' static='true' value='17301529' type='int'/><field name='editbox_dropdown_dark_frame' final='true' static='true' value='17301530' type='int'/><field name='editbox_dropdown_light_frame' final='true' static='true' value='17301531' type='int'/><field name='gallery_thumb' final='true' static='true' value='17301532' type='int'/><field name='ic_delete' final='true' static='true' value='17301533' type='int'/><field name='ic_dialog_alert' final='true' static='true' value='17301543' type='int'/><field name='ic_dialog_dialer' final='true' static='true' value='17301544' type='int'/><field name='ic_dialog_email' final='true' static='true' value='17301545' type='int'/><field name='ic_dialog_info' final='true' static='true' value='17301659' type='int'/><field name='ic_dialog_map' final='true' static='true' value='17301546' type='int'/><field name='ic_input_add' final='true' static='true' value='17301547' type='int'/><field name='ic_input_delete' final='true' static='true' value='17301548' type='int'/><field name='ic_input_get' final='true' static='true' value='17301549' type='int'/><field name='ic_lock_idle_alarm' final='true' static='true' value='17301550' type='int'/><field name='ic_lock_idle_charging' final='true' static='true' value='17301534' type='int'/><field name='ic_lock_idle_lock' final='true' static='true' value='17301535' type='int'/><field name='ic_lock_idle_low_battery' final='true' static='true' value='17301536' type='int'/><field name='ic_lock_lock' final='true' static='true' value='17301551' type='int'/><field name='ic_lock_power_off' final='true' static='true' value='17301552' type='int'/><field name='ic_lock_silent_mode' final='true' static='true' value='17301553' type='int'/><field name='ic_lock_silent_mode_off' final='true' static='true' value='17301554' type='int'/><field name='ic_media_ff' final='true' static='true' value='17301537' type='int'/><field name='ic_media_next' final='true' static='true' value='17301538' type='int'/><field name='ic_media_pause' final='true' static='true' value='17301539' type='int'/><field name='ic_media_play' final='true' static='true' value='17301540' type='int'/><field name='ic_media_previous' final='true' static='true' value='17301541' type='int'/><field name='ic_media_rew' final='true' static='true' value='17301542' type='int'/><field name='ic_menu_add' final='true' static='true' value='17301555' type='int'/><field name='ic_menu_agenda' final='true' static='true' value='17301556' type='int'/><field name='ic_menu_always_landscape_portrait' final='true' static='true' value='17301557' type='int'/><field name='ic_menu_call' final='true' static='true' value='17301558' type='int'/><field name='ic_menu_camera' final='true' static='true' value='17301559' type='int'/><field name='ic_menu_close_clear_cancel' final='true' static='true' value='17301560' type='int'/><field name='ic_menu_compass' final='true' static='true' value='17301561' type='int'/><field name='ic_menu_crop' final='true' static='true' value='17301562' type='int'/><field name='ic_menu_day' final='true' static='true' value='17301563' type='int'/><field name='ic_menu_delete' final='true' static='true' value='17301564' type='int'/><field name='ic_menu_directions' final='true' static='true' value='17301565' type='int'/><field name='ic_menu_edit' final='true' static='true' value='17301566' type='int'/><field name='ic_menu_gallery' final='true' static='true' value='17301567' type='int'/><field name='ic_menu_help' final='true' static='true' value='17301568' type='int'/><field name='ic_menu_info_details' final='true' static='true' value='17301569' type='int'/><field name='ic_menu_manage' final='true' static='true' value='17301570' type='int'/><field name='ic_menu_mapmode' final='true' static='true' value='17301571' type='int'/><field name='ic_menu_month' final='true' static='true' value='17301572' type='int'/><field name='ic_menu_more' final='true' static='true' value='17301573' type='int'/><field name='ic_menu_my_calendar' final='true' static='true' value='17301574' type='int'/><field name='ic_menu_mylocation' final='true' static='true' value='17301575' type='int'/><field name='ic_menu_myplaces' final='true' static='true' value='17301576' type='int'/><field name='ic_menu_preferences' final='true' static='true' value='17301577' type='int'/><field name='ic_menu_recent_history' final='true' static='true' value='17301578' type='int'/><field name='ic_menu_report_image' final='true' static='true' value='17301579' type='int'/><field name='ic_menu_revert' final='true' static='true' value='17301580' type='int'/><field name='ic_menu_rotate' final='true' static='true' value='17301581' type='int'/><field name='ic_menu_save' final='true' static='true' value='17301582' type='int'/><field name='ic_menu_search' final='true' static='true' value='17301583' type='int'/><field name='ic_menu_send' final='true' static='true' value='17301584' type='int'/><field name='ic_menu_set_as' final='true' static='true' value='17301585' type='int'/><field name='ic_menu_share' final='true' static='true' value='17301586' type='int'/><field name='ic_menu_slideshow' final='true' static='true' value='17301587' type='int'/><field name='ic_menu_sort_alphabetically' final='true' static='true' value='17301660' type='int'/><field name='ic_menu_sort_by_size' final='true' static='true' value='17301661' type='int'/><field name='ic_menu_today' final='true' static='true' value='17301588' type='int'/><field name='ic_menu_upload' final='true' static='true' value='17301589' type='int'/><field name='ic_menu_upload_you_tube' final='true' static='true' value='17301590' type='int'/><field name='ic_menu_view' final='true' static='true' value='17301591' type='int'/><field name='ic_menu_week' final='true' static='true' value='17301592' type='int'/><field name='ic_menu_zoom' final='true' static='true' value='17301593' type='int'/><field name='ic_notification_clear_all' final='true' static='true' value='17301594' type='int'/><field name='ic_notification_overlay' final='true' static='true' value='17301595' type='int'/><field name='ic_partial_secure' final='true' static='true' value='17301596' type='int'/><field name='ic_popup_disk_full' final='true' static='true' value='17301597' type='int'/><field name='ic_popup_reminder' final='true' static='true' value='17301598' type='int'/><field name='ic_popup_sync' final='true' static='true' value='17301599' type='int'/><field name='ic_search_category_default' final='true' static='true' value='17301600' type='int'/><field name='ic_secure' final='true' static='true' value='17301601' type='int'/><field name='list_selector_background' final='true' static='true' value='17301602' type='int'/><field name='menu_frame' final='true' static='true' value='17301603' type='int'/><field name='menu_full_frame' final='true' static='true' value='17301604' type='int'/><field name='menuitem_background' final='true' static='true' value='17301605' type='int'/><field name='picture_frame' final='true' static='true' value='17301606' type='int'/><field name='presence_away' final='true' static='true' value='17301607' type='int'/><field name='presence_busy' final='true' static='true' value='17301608' type='int'/><field name='presence_invisible' final='true' static='true' value='17301609' type='int'/><field name='presence_offline' final='true' static='true' value='17301610' type='int'/><field name='presence_online' final='true' static='true' value='17301611' type='int'/><field name='progress_horizontal' final='true' static='true' value='17301612' type='int'/><field name='progress_indeterminate_horizontal' final='true' static='true' value='17301613' type='int'/><field name='radiobutton_off_background' final='true' static='true' value='17301614' type='int'/><field name='radiobutton_on_background' final='true' static='true' value='17301615' type='int'/><field name='screen_background_dark' final='true' static='true' value='17301656' type='int'/><field name='screen_background_light' final='true' static='true' value='17301657' type='int'/><field name='spinner_background' final='true' static='true' value='17301616' type='int'/><field name='spinner_dropdown_background' final='true' static='true' value='17301617' type='int'/><field name='star_big_off' final='true' static='true' value='17301619' type='int'/><field name='star_big_on' final='true' static='true' value='17301618' type='int'/><field name='star_off' final='true' static='true' value='17301621' type='int'/><field name='star_on' final='true' static='true' value='17301620' type='int'/><field name='stat_notify_call_mute' final='true' static='true' value='17301622' type='int'/><field name='stat_notify_chat' final='true' static='true' value='17301623' type='int'/><field name='stat_notify_error' final='true' static='true' value='17301624' type='int'/><field name='stat_notify_missed_call' final='true' static='true' value='17301631' type='int'/><field name='stat_notify_more' final='true' static='true' value='17301625' type='int'/><field name='stat_notify_sdcard' final='true' static='true' value='17301626' type='int'/><field name='stat_notify_sdcard_usb' final='true' static='true' value='17301627' type='int'/><field name='stat_notify_sync' final='true' static='true' value='17301628' type='int'/><field name='stat_notify_sync_noanim' final='true' static='true' value='17301629' type='int'/><field name='stat_notify_voicemail' final='true' static='true' value='17301630' type='int'/><field name='stat_sys_data_bluetooth' final='true' static='true' value='17301632' type='int'/><field name='stat_sys_download' final='true' static='true' value='17301633' type='int'/><field name='stat_sys_download_done' final='true' static='true' value='17301634' type='int'/><field name='stat_sys_headset' final='true' static='true' value='17301635' type='int'/><field name='stat_sys_phone_call' final='true' static='true' value='17301636' type='int'/><field name='stat_sys_phone_call_forward' final='true' static='true' value='17301637' type='int'/><field name='stat_sys_phone_call_on_hold' final='true' static='true' value='17301638' type='int'/><field name='stat_sys_speakerphone' final='true' static='true' value='17301639' type='int'/><field name='stat_sys_upload' final='true' static='true' value='17301640' type='int'/><field name='stat_sys_upload_done' final='true' static='true' value='17301641' type='int'/><field name='stat_sys_warning' final='true' static='true' value='17301642' type='int'/><field name='status_bar_item_app_background' final='true' static='true' value='17301643' type='int'/><field name='status_bar_item_background' final='true' static='true' value='17301644' type='int'/><field name='sym_action_call' final='true' static='true' value='17301645' type='int'/><field name='sym_action_chat' final='true' static='true' value='17301646' type='int'/><field name='sym_action_email' final='true' static='true' value='17301647' type='int'/><field name='sym_call_incoming' final='true' static='true' value='17301648' type='int'/><field name='sym_call_missed' final='true' static='true' value='17301649' type='int'/><field name='sym_call_outgoing' final='true' static='true' value='17301650' type='int'/><field name='sym_contact_card' final='true' static='true' value='17301652' type='int'/><field name='sym_def_app_icon' final='true' static='true' value='17301651' type='int'/><field name='title_bar' final='true' static='true' value='17301653' type='int'/><field name='toast_frame' final='true' static='true' value='17301654' type='int'/><field name='zoom_plate' final='true' static='true' value='17301655' type='int'/><field api_added='3' name='dark_header' final='true' static='true' value='17301669' type='int'/><field api_added='3' name='ic_btn_speak_now' final='true' static='true' value='17301668' type='int'/><field api_added='3' name='title_bar_tall' final='true' static='true' value='17301670' type='int'/><field api_added='4' name='stat_sys_vp_phone_call' final='true' static='true' value='17301671' type='int'/><field api_added='4' name='stat_sys_vp_phone_call_on_hold' final='true' static='true' value='17301672' type='int'/><field api_added='5' name='screen_background_dark_transparent' final='true' static='true' value='17301673' type='int'/><field api_added='5' name='screen_background_light_transparent' final='true' static='true' value='17301674' type='int'/><field api_added='5' name='stat_notify_sdcard_prepare' final='true' static='true' value='17301675' type='int'/></class><class name='R.id' final='true' extends='java.lang.Object' static='true'><constructor name='R.id' type='android.R.id'/><field name='background' final='true' static='true' value='16908288' type='int'/><field name='button1' final='true' static='true' value='16908313' type='int'/><field name='button2' final='true' static='true' value='16908314' type='int'/><field name='button3' final='true' static='true' value='16908315' type='int'/><field name='checkbox' final='true' static='true' value='16908289' type='int'/><field name='content' final='true' static='true' value='16908290' type='int'/><field name='edit' final='true' static='true' value='16908291' type='int'/><field name='empty' final='true' static='true' value='16908292' type='int'/><field name='hint' final='true' static='true' value='16908293' type='int'/><field name='icon' final='true' static='true' value='16908294' type='int'/><field name='icon1' final='true' static='true' value='16908295' type='int'/><field name='icon2' final='true' static='true' value='16908296' type='int'/><field name='input' final='true' static='true' value='16908297' type='int'/><field name='list' final='true' static='true' value='16908298' type='int'/><field name='message' final='true' static='true' value='16908299' type='int'/><field name='primary' final='true' static='true' value='16908300' type='int'/><field name='progress' final='true' static='true' value='16908301' type='int'/><field name='secondaryProgress' final='true' static='true' value='16908303' type='int'/><field name='selectedIcon' final='true' static='true' value='16908302' type='int'/><field name='summary' final='true' static='true' value='16908304' type='int'/><field name='tabcontent' final='true' static='true' value='16908305' type='int'/><field name='tabhost' final='true' static='true' value='16908306' type='int'/><field name='tabs' final='true' static='true' value='16908307' type='int'/><field name='text1' final='true' static='true' value='16908308' type='int'/><field name='text2' final='true' static='true' value='16908309' type='int'/><field name='title' final='true' static='true' value='16908310' type='int'/><field name='toggle' final='true' static='true' value='16908311' type='int'/><field name='widget_frame' final='true' static='true' value='16908312' type='int'/><field api_added='3' name='addToDictionary' final='true' static='true' value='16908330' type='int'/><field api_added='3' name='candidatesArea' final='true' static='true' value='16908317' type='int'/><field api_added='3' name='closeButton' final='true' static='true' value='16908327' type='int'/><field api_added='3' name='copy' final='true' static='true' value='16908321' type='int'/><field api_added='3' name='copyUrl' final='true' static='true' value='16908323' type='int'/><field api_added='3' name='cut' final='true' static='true' value='16908320' type='int'/><field api_added='3' name='extractArea' final='true' static='true' value='16908316' type='int'/><field api_added='3' name='inputArea' final='true' static='true' value='16908318' type='int'/><field api_added='3' name='inputExtractEditText' final='true' static='true' value='16908325' type='int'/><field api_added='3' name='keyboardView' final='true' static='true' value='16908326' type='int'/><field api_added='3' name='paste' final='true' static='true' value='16908322' type='int'/><field api_added='3' name='selectAll' final='true' static='true' value='16908319' type='int'/><field api_added='3' name='startSelectingText' final='true' static='true' value='16908328' type='int'/><field api_added='3' name='stopSelectingText' final='true' static='true' value='16908329' type='int'/><field api_added='3' name='switchInputMethod' final='true' static='true' value='16908324' type='int'/><field api_added='8' name='custom' final='true' static='true' value='16908331' type='int'/></class><class name='R.layout' final='true' extends='java.lang.Object' static='true'><constructor name='R.layout' type='android.R.layout'/><field name='activity_list_item' final='true' static='true' value='17367040' type='int'/><field name='browser_link_context_header' final='true' static='true' value='17367054' type='int'/><field name='expandable_list_content' final='true' static='true' value='17367041' type='int'/><field name='preference_category' final='true' static='true' value='17367042' type='int'/><field name='select_dialog_item' final='true' static='true' value='17367057' type='int'/><field name='select_dialog_multichoice' final='true' static='true' value='17367059' type='int'/><field name='select_dialog_singlechoice' final='true' static='true' value='17367058' type='int'/><field name='simple_dropdown_item_1line' final='true' static='true' value='17367050' type='int'/><field name='simple_expandable_list_item_1' final='true' static='true' value='17367046' type='int'/><field name='simple_expandable_list_item_2' final='true' static='true' value='17367047' type='int'/><field name='simple_gallery_item' final='true' static='true' value='17367051' type='int'/><field name='simple_list_item_1' final='true' static='true' value='17367043' type='int'/><field name='simple_list_item_2' final='true' static='true' value='17367044' type='int'/><field name='simple_list_item_checked' final='true' static='true' value='17367045' type='int'/><field name='simple_list_item_multiple_choice' final='true' static='true' value='17367056' type='int'/><field name='simple_list_item_single_choice' final='true' static='true' value='17367055' type='int'/><field name='simple_spinner_dropdown_item' final='true' static='true' value='17367049' type='int'/><field name='simple_spinner_item' final='true' static='true' value='17367048' type='int'/><field name='test_list_item' final='true' static='true' value='17367052' type='int'/><field name='two_line_list_item' final='true' static='true' value='17367053' type='int'/></class><class name='R.plurals' final='true' extends='java.lang.Object' static='true'><constructor name='R.plurals' type='android.R.plurals'/></class><class name='R.raw' final='true' extends='java.lang.Object' static='true'><constructor name='R.raw' type='android.R.raw'/></class><class name='R.string' final='true' extends='java.lang.Object' static='true'><constructor name='R.string' type='android.R.string'/><field name='VideoView_error_button' final='true' static='true' value='17039376' type='int'/><field name='VideoView_error_text_unknown' final='true' static='true' value='17039377' type='int'/><field name='VideoView_error_title' final='true' static='true' value='17039378' type='int'/><field name='cancel' final='true' static='true' value='17039360' type='int'/><field name='copy' final='true' static='true' value='17039361' type='int'/><field name='copyUrl' final='true' static='true' value='17039362' type='int'/><field name='cut' final='true' static='true' value='17039363' type='int'/><field name='defaultMsisdnAlphaTag' final='true' static='true' value='17039365' type='int'/><field name='defaultVoiceMailAlphaTag' final='true' static='true' value='17039364' type='int'/><field name='emptyPhoneNumber' final='true' static='true' value='17039366' type='int'/><field name='httpErrorBadUrl' final='true' static='true' value='17039367' type='int'/><field name='httpErrorUnsupportedScheme' final='true' static='true' value='17039368' type='int'/><field name='no' final='true' static='true' value='17039369' type='int'/><field name='ok' final='true' static='true' value='17039370' type='int'/><field name='paste' final='true' static='true' value='17039371' type='int'/><field name='search_go' final='true' static='true' value='17039372' type='int'/><field name='selectAll' final='true' static='true' value='17039373' type='int'/><field name='unknownName' final='true' static='true' value='17039374' type='int'/><field name='untitled' final='true' static='true' value='17039375' type='int'/><field name='yes' final='true' static='true' value='17039379' type='int'/><field api_added='3' name='VideoView_error_text_invalid_progressive_playback' final='true' static='true' value='17039381' type='int'/><field api_added='3' name='dialog_alert_title' final='true' static='true' value='17039380' type='int'/></class><class name='R.style' final='true' extends='java.lang.Object' static='true'><constructor name='R.style' type='android.R.style'/><field name='Animation' final='true' static='true' value='16973824' type='int'/><field name='Animation_Activity' final='true' static='true' value='16973825' type='int'/><field name='Animation_Dialog' final='true' static='true' value='16973826' type='int'/><field name='Animation_Toast' final='true' static='true' value='16973828' type='int'/><field name='Animation_Translucent' final='true' static='true' value='16973827' type='int'/><field name='MediaButton' final='true' static='true' value='16973879' type='int'/><field name='MediaButton_Ffwd' final='true' static='true' value='16973883' type='int'/><field name='MediaButton_Next' final='true' static='true' value='16973881' type='int'/><field name='MediaButton_Pause' final='true' static='true' value='16973885' type='int'/><field name='MediaButton_Play' final='true' static='true' value='16973882' type='int'/><field name='MediaButton_Previous' final='true' static='true' value='16973880' type='int'/><field name='MediaButton_Rew' final='true' static='true' value='16973884' type='int'/><field name='TextAppearance' final='true' static='true' value='16973886' type='int'/><field name='TextAppearance_DialogWindowTitle' final='true' static='true' value='16973889' type='int'/><field name='TextAppearance_Inverse' final='true' static='true' value='16973887' type='int'/><field name='TextAppearance_Large' final='true' static='true' value='16973890' type='int'/><field name='TextAppearance_Large_Inverse' final='true' static='true' value='16973891' type='int'/><field name='TextAppearance_Medium' final='true' static='true' value='16973892' type='int'/><field name='TextAppearance_Medium_Inverse' final='true' static='true' value='16973893' type='int'/><field name='TextAppearance_Small' final='true' static='true' value='16973894' type='int'/><field name='TextAppearance_Small_Inverse' final='true' static='true' value='16973895' type='int'/><field name='TextAppearance_Theme' final='true' static='true' value='16973888' type='int'/><field name='TextAppearance_Theme_Dialog' final='true' static='true' value='16973896' type='int'/><field name='TextAppearance_Widget' final='true' static='true' value='16973897' type='int'/><field name='TextAppearance_Widget_Button' final='true' static='true' value='16973898' type='int'/><field name='TextAppearance_Widget_DropDownHint' final='true' static='true' value='16973904' type='int'/><field name='TextAppearance_Widget_DropDownItem' final='true' static='true' value='16973905' type='int'/><field name='TextAppearance_Widget_EditText' final='true' static='true' value='16973900' type='int'/><field name='TextAppearance_Widget_IconMenu_Item' final='true' static='true' value='16973899' type='int'/><field name='TextAppearance_Widget_TabWidget' final='true' static='true' value='16973901' type='int'/><field name='TextAppearance_Widget_TextView' final='true' static='true' value='16973902' type='int'/><field name='TextAppearance_Widget_TextView_PopupMenu' final='true' static='true' value='16973903' type='int'/><field name='TextAppearance_Widget_TextView_SpinnerItem' final='true' static='true' value='16973906' type='int'/><field name='TextAppearance_WindowTitle' final='true' static='true' value='16973907' type='int'/><field name='Theme' final='true' static='true' value='16973829' type='int'/><field name='Theme_Black' final='true' static='true' value='16973832' type='int'/><field name='Theme_Black_NoTitleBar' final='true' static='true' value='16973833' type='int'/><field name='Theme_Black_NoTitleBar_Fullscreen' final='true' static='true' value='16973834' type='int'/><field name='Theme_Dialog' final='true' static='true' value='16973835' type='int'/><field name='Theme_Light' final='true' static='true' value='16973836' type='int'/><field name='Theme_Light_NoTitleBar' final='true' static='true' value='16973837' type='int'/><field name='Theme_Light_NoTitleBar_Fullscreen' final='true' static='true' value='16973838' type='int'/><field name='Theme_NoTitleBar' final='true' static='true' value='16973830' type='int'/><field name='Theme_NoTitleBar_Fullscreen' final='true' static='true' value='16973831' type='int'/><field name='Theme_Translucent' final='true' static='true' value='16973839' type='int'/><field name='Theme_Translucent_NoTitleBar' final='true' static='true' value='16973840' type='int'/><field name='Theme_Translucent_NoTitleBar_Fullscreen' final='true' static='true' value='16973841' type='int'/><field name='Widget' final='true' static='true' value='16973842' type='int'/><field name='Widget_AbsListView' final='true' static='true' value='16973843' type='int'/><field name='Widget_AutoCompleteTextView' final='true' static='true' value='16973863' type='int'/><field name='Widget_Button' final='true' static='true' value='16973844' type='int'/><field name='Widget_Button_Inset' final='true' static='true' value='16973845' type='int'/><field name='Widget_Button_Small' final='true' static='true' value='16973846' type='int'/><field name='Widget_Button_Toggle' final='true' static='true' value='16973847' type='int'/><field name='Widget_CompoundButton' final='true' static='true' value='16973848' type='int'/><field name='Widget_CompoundButton_CheckBox' final='true' static='true' value='16973849' type='int'/><field name='Widget_CompoundButton_RadioButton' final='true' static='true' value='16973850' type='int'/><field name='Widget_CompoundButton_Star' final='true' static='true' value='16973851' type='int'/><field name='Widget_DropDownItem' final='true' static='true' value='16973867' type='int'/><field name='Widget_DropDownItem_Spinner' final='true' static='true' value='16973868' type='int'/><field name='Widget_EditText' final='true' static='true' value='16973859' type='int'/><field name='Widget_ExpandableListView' final='true' static='true' value='16973860' type='int'/><field name='Widget_Gallery' final='true' static='true' value='16973877' type='int'/><field name='Widget_GridView' final='true' static='true' value='16973874' type='int'/><field name='Widget_ImageButton' final='true' static='true' value='16973862' type='int'/><field name='Widget_ImageWell' final='true' static='true' value='16973861' type='int'/><field name='Widget_ListView' final='true' static='true' value='16973870' type='int'/><field name='Widget_ListView_DropDown' final='true' static='true' value='16973872' type='int'/><field name='Widget_ListView_Menu' final='true' static='true' value='16973873' type='int'/><field name='Widget_ListView_White' final='true' static='true' value='16973871' type='int'/><field name='Widget_PopupWindow' final='true' static='true' value='16973878' type='int'/><field name='Widget_ProgressBar' final='true' static='true' value='16973852' type='int'/><field name='Widget_ProgressBar_Horizontal' final='true' static='true' value='16973855' type='int'/><field name='Widget_ProgressBar_Large' final='true' static='true' value='16973853' type='int'/><field name='Widget_ProgressBar_Small' final='true' static='true' value='16973854' type='int'/><field name='Widget_RatingBar' final='true' static='true' value='16973857' type='int'/><field name='Widget_ScrollView' final='true' static='true' value='16973869' type='int'/><field name='Widget_SeekBar' final='true' static='true' value='16973856' type='int'/><field name='Widget_Spinner' final='true' static='true' value='16973864' type='int'/><field name='Widget_TabWidget' final='true' static='true' value='16973876' type='int'/><field name='Widget_TextView' final='true' static='true' value='16973858' type='int'/><field name='Widget_TextView_PopupMenu' final='true' static='true' value='16973865' type='int'/><field name='Widget_TextView_SpinnerItem' final='true' static='true' value='16973866' type='int'/><field name='Widget_WebView' final='true' static='true' value='16973875' type='int'/><field api_added='3' name='Theme_InputMethod' final='true' static='true' value='16973908' type='int'/><field api_added='3' name='Theme_Light_Panel' final='true' static='true' value='16973914' type='int'/><field api_added='3' name='Theme_NoDisplay' final='true' static='true' value='16973909' type='int'/><field api_added='3' name='Theme_Panel' final='true' static='true' value='16973913' type='int'/><field api_added='3' name='Widget_KeyboardView' final='true' static='true' value='16973911' type='int'/><field api_added='4' name='Widget_ProgressBar_Inverse' final='true' static='true' value='16973915' type='int'/><field api_added='4' name='Widget_ProgressBar_Large_Inverse' final='true' static='true' value='16973916' type='int'/><field api_added='4' name='Widget_ProgressBar_Small_Inverse' final='true' static='true' value='16973917' type='int'/><field api_added='5' name='Animation_InputMethod' final='true' static='true' value='16973910' type='int'/><field api_added='5' name='Theme_Light_WallpaperSettings' final='true' static='true' value='16973922' type='int'/><field api_added='5' name='Theme_Wallpaper' final='true' static='true' value='16973918' type='int'/><field api_added='5' name='Theme_WallpaperSettings' final='true' static='true' value='16973921' type='int'/><field api_added='5' name='Theme_Wallpaper_NoTitleBar' final='true' static='true' value='16973919' type='int'/><field api_added='5' name='Theme_Wallpaper_NoTitleBar_Fullscreen' final='true' static='true' value='16973920' type='int'/></class><class name='R.xml' final='true' extends='java.lang.Object' static='true'><constructor name='R.xml' type='android.R.xml'/></class><class api_added='3' name='R.bool' final='true' extends='java.lang.Object' static='true'><constructor api_added='3' name='R.bool' type='android.R.bool'/></class><class api_added='3' name='R.integer' final='true' extends='java.lang.Object' static='true'><constructor api_added='3' name='R.integer' type='android.R.integer'/><field api_added='3' name='config_longAnimTime' final='true' static='true' value='17694722' type='int'/><field api_added='3' name='config_mediumAnimTime' final='true' static='true' value='17694721' type='int'/><field api_added='3' name='config_shortAnimTime' final='true' static='true' value='17694720' type='int'/></class></package><package name='android.app'><class name='Activity' extends='android.view.ContextThemeWrapper'><implements name='android.content.ComponentCallbacks'/><implements name='android.view.KeyEvent.Callback'/><implements name='android.view.LayoutInflater.Factory'/><implements name='android.view.View.OnCreateContextMenuListener'/><implements name='android.view.Window.Callback'/><constructor name='Activity' type='android.app.Activity'/><field name='DEFAULT_KEYS_DIALER' final='true' static='true' value='1' type='int'/><field name='DEFAULT_KEYS_DISABLE' final='true' static='true' value='0' type='int'/><field name='DEFAULT_KEYS_SEARCH_GLOBAL' final='true' static='true' value='4' type='int'/><field name='DEFAULT_KEYS_SEARCH_LOCAL' final='true' static='true' value='3' type='int'/><field name='DEFAULT_KEYS_SHORTCUT' final='true' static='true' value='2' type='int'/><field name='FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='RESULT_CANCELED' final='true' static='true' value='0' type='int'/><field name='RESULT_FIRST_USER' final='true' static='true' value='1' type='int'/><field name='RESULT_OK' final='true' static='true' value='-1' type='int'/><method name='addContentView'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='closeOptionsMenu'/><method name='createPendingResult' return='android.app.PendingIntent'><parameter name='requestCode' type='int'/><parameter name='data' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='dismissDialog' final='true'><parameter name='id' type='int'/></method><method name='dispatchKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='dispatchTouchEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='dispatchTrackballEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='findViewById' return='android.view.View'><parameter name='id' type='int'/></method><method name='finish'/><method name='finishActivity'><parameter name='requestCode' type='int'/></method><method name='finishActivityFromChild'><parameter name='child' type='android.app.Activity'/><parameter name='requestCode' type='int'/></method><method name='finishFromChild'><parameter name='child' type='android.app.Activity'/></method><method name='getApplication' final='true' return='android.app.Application'/><method name='getCallingActivity' return='android.content.ComponentName'/><method name='getCallingPackage' return='java.lang.String'/><method name='getChangingConfigurations' return='int'/><method name='getComponentName' return='android.content.ComponentName'/><method name='getCurrentFocus' return='android.view.View'/><method name='getInstanceCount' static='true' return='long'/><method name='getIntent' return='android.content.Intent'/><method name='getLastNonConfigurationInstance' return='java.lang.Object'/><method name='getLayoutInflater' return='android.view.LayoutInflater'/><method name='getLocalClassName' return='java.lang.String'/><method name='getMenuInflater' return='android.view.MenuInflater'/><method name='getParent' final='true' return='android.app.Activity'/><method name='getPreferences' return='android.content.SharedPreferences'><parameter name='mode' type='int'/></method><method name='getRequestedOrientation' return='int'/><method name='getTaskId' return='int'/><method name='getTitle' final='true' return='java.lang.CharSequence'/><method name='getTitleColor' final='true' return='int'/><method name='getVolumeControlStream' final='true' return='int'/><method name='getWindow' return='android.view.Window'/><method name='getWindowManager' return='android.view.WindowManager'/><method name='isChild' final='true' return='boolean'/><method name='isFinishing' return='boolean'/><method name='isTaskRoot' return='boolean'/><method name='managedQuery' final='true' return='android.database.Cursor'><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/></method><method name='moveTaskToBack' return='boolean'><parameter name='nonRoot' type='boolean'/></method><method name='onActivityResult' visibility='protected'><parameter name='requestCode' type='int'/><parameter name='resultCode' type='int'/><parameter name='data' type='android.content.Intent'/></method><method name='onChildTitleChanged' visibility='protected'><parameter name='childActivity' type='android.app.Activity'/><parameter name='title' type='java.lang.CharSequence'/></method><method name='onConfigurationChanged'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='onContentChanged'/><method name='onContextItemSelected' return='boolean'><parameter name='item' type='android.view.MenuItem'/></method><method name='onContextMenuClosed'><parameter name='menu' type='android.view.Menu'/></method><method name='onCreate' visibility='protected'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='onCreateContextMenu'><parameter name='menu' type='android.view.ContextMenu'/><parameter name='v' type='android.view.View'/><parameter name='menuInfo' type='android.view.ContextMenu.ContextMenuInfo'/></method><method name='onCreateDescription' return='java.lang.CharSequence'/><method name='onCreateDialog' deprecated='8' visibility='protected' return='android.app.Dialog'><parameter name='id' type='int'/></method><method name='onCreateOptionsMenu' return='boolean'><parameter name='menu' type='android.view.Menu'/></method><method name='onCreatePanelMenu' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onCreatePanelView' return='android.view.View'><parameter name='featureId' type='int'/></method><method name='onCreateThumbnail' return='boolean'><parameter name='outBitmap' type='android.graphics.Bitmap'/><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='onCreateView' return='android.view.View'><parameter name='name' type='java.lang.String'/><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></method><method name='onDestroy' visibility='protected'/><method name='onKeyDown' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyMultiple' return='boolean'><parameter name='keyCode' type='int'/><parameter name='repeatCount' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onLowMemory'/><method name='onMenuItemSelected' return='boolean'><parameter name='featureId' type='int'/><parameter name='item' type='android.view.MenuItem'/></method><method name='onMenuOpened' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onNewIntent' visibility='protected'><parameter name='intent' type='android.content.Intent'/></method><method name='onOptionsItemSelected' return='boolean'><parameter name='item' type='android.view.MenuItem'/></method><method name='onOptionsMenuClosed'><parameter name='menu' type='android.view.Menu'/></method><method name='onPanelClosed'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onPause' visibility='protected'/><method name='onPostCreate' visibility='protected'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='onPostResume' visibility='protected'/><method name='onPrepareDialog' deprecated='8' visibility='protected'><parameter name='id' type='int'/><parameter name='dialog' type='android.app.Dialog'/></method><method name='onPrepareOptionsMenu' return='boolean'><parameter name='menu' type='android.view.Menu'/></method><method name='onPreparePanel' return='boolean'><parameter name='featureId' type='int'/><parameter name='view' type='android.view.View'/><parameter name='menu' type='android.view.Menu'/></method><method name='onRestart' visibility='protected'/><method name='onRestoreInstanceState' visibility='protected'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='onResume' visibility='protected'/><method name='onRetainNonConfigurationInstance' return='java.lang.Object'/><method name='onSaveInstanceState' visibility='protected'><parameter name='outState' type='android.os.Bundle'/></method><method name='onSearchRequested' return='boolean'/><method name='onStart' visibility='protected'/><method name='onStop' visibility='protected'/><method name='onTitleChanged' visibility='protected'><parameter name='title' type='java.lang.CharSequence'/><parameter name='color' type='int'/></method><method name='onTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onWindowAttributesChanged'><parameter name='params' type='android.view.WindowManager.LayoutParams'/></method><method name='onWindowFocusChanged'><parameter name='hasFocus' type='boolean'/></method><method name='openContextMenu'><parameter name='view' type='android.view.View'/></method><method name='openOptionsMenu'/><method name='registerForContextMenu'><parameter name='view' type='android.view.View'/></method><method name='removeDialog' final='true'><parameter name='id' type='int'/></method><method name='requestWindowFeature' final='true' return='boolean'><parameter name='featureId' type='int'/></method><method name='runOnUiThread' final='true'><parameter name='action' type='java.lang.Runnable'/></method><method name='setContentView'><parameter name='layoutResID' type='int'/></method><method name='setContentView'><parameter name='view' type='android.view.View'/></method><method name='setContentView'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='setDefaultKeyMode' final='true'><parameter name='mode' type='int'/></method><method name='setFeatureDrawable' final='true'><parameter name='featureId' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setFeatureDrawableAlpha' final='true'><parameter name='featureId' type='int'/><parameter name='alpha' type='int'/></method><method name='setFeatureDrawableResource' final='true'><parameter name='featureId' type='int'/><parameter name='resId' type='int'/></method><method name='setFeatureDrawableUri' final='true'><parameter name='featureId' type='int'/><parameter name='uri' type='android.net.Uri'/></method><method name='setIntent'><parameter name='newIntent' type='android.content.Intent'/></method><method name='setPersistent'><parameter name='isPersistent' type='boolean'/></method><method name='setProgress' final='true'><parameter name='progress' type='int'/></method><method name='setProgressBarIndeterminate' final='true'><parameter name='indeterminate' type='boolean'/></method><method name='setProgressBarIndeterminateVisibility' final='true'><parameter name='visible' type='boolean'/></method><method name='setProgressBarVisibility' final='true'><parameter name='visible' type='boolean'/></method><method name='setRequestedOrientation'><parameter name='requestedOrientation' type='int'/></method><method name='setResult' final='true'><parameter name='resultCode' type='int'/></method><method name='setResult' final='true'><parameter name='resultCode' type='int'/><parameter name='data' type='android.content.Intent'/></method><method name='setSecondaryProgress' final='true'><parameter name='secondaryProgress' type='int'/></method><method name='setTitle'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setTitle'><parameter name='titleId' type='int'/></method><method name='setTitleColor'><parameter name='textColor' type='int'/></method><method name='setVolumeControlStream' final='true'><parameter name='streamType' type='int'/></method><method name='showDialog' final='true'><parameter name='id' type='int'/></method><method name='startActivityForResult'><parameter name='intent' type='android.content.Intent'/><parameter name='requestCode' type='int'/></method><method name='startActivityFromChild'><parameter name='child' type='android.app.Activity'/><parameter name='intent' type='android.content.Intent'/><parameter name='requestCode' type='int'/></method><method name='startActivityIfNeeded' return='boolean'><parameter name='intent' type='android.content.Intent'/><parameter name='requestCode' type='int'/></method><method name='startManagingCursor'><parameter name='c' type='android.database.Cursor'/></method><method name='startNextMatchingActivity' return='boolean'><parameter name='intent' type='android.content.Intent'/></method><method name='startSearch'><parameter name='initialQuery' type='java.lang.String'/><parameter name='selectInitialQuery' type='boolean'/><parameter name='appSearchData' type='android.os.Bundle'/><parameter name='globalSearch' type='boolean'/></method><method name='stopManagingCursor'><parameter name='c' type='android.database.Cursor'/></method><method name='takeKeyEvents'><parameter name='get' type='boolean'/></method><method name='unregisterForContextMenu'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='closeContextMenu'/><method api_added='3' name='hasWindowFocus' return='boolean'/><method api_added='3' name='onUserInteraction'/><method api_added='3' name='onUserLeaveHint' visibility='protected'/><method api_added='3' name='setVisible'><parameter name='visible' type='boolean'/></method><method api_added='4' name='dispatchPopulateAccessibilityEvent' return='boolean'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='5' name='onAttachedToWindow'/><method api_added='5' name='onBackPressed'/><method api_added='5' name='onDetachedFromWindow'/><method api_added='5' name='onKeyLongPress' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='overridePendingTransition'><parameter name='enterAnim' type='int'/><parameter name='exitAnim' type='int'/></method><method api_added='5' name='startIntentSenderForResult'><parameter name='intent' type='android.content.IntentSender'/><parameter name='requestCode' type='int'/><parameter name='fillInIntent' type='android.content.Intent'/><parameter name='flagsMask' type='int'/><parameter name='flagsValues' type='int'/><parameter name='extraFlags' type='int'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='5' name='startIntentSenderFromChild'><parameter name='child' type='android.app.Activity'/><parameter name='intent' type='android.content.IntentSender'/><parameter name='requestCode' type='int'/><parameter name='fillInIntent' type='android.content.Intent'/><parameter name='flagsMask' type='int'/><parameter name='flagsValues' type='int'/><parameter name='extraFlags' type='int'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='5' name='triggerSearch'><parameter name='query' type='java.lang.String'/><parameter name='appSearchData' type='android.os.Bundle'/></method><method api_added='8' name='onCreateDialog' visibility='protected' return='android.app.Dialog'><parameter name='id' type='int'/><parameter name='args' type='android.os.Bundle'/></method><method api_added='8' name='onPrepareDialog' visibility='protected'><parameter name='id' type='int'/><parameter name='dialog' type='android.app.Dialog'/><parameter name='args' type='android.os.Bundle'/></method><method api_added='8' name='showDialog' final='true' return='boolean'><parameter name='id' type='int'/><parameter name='args' type='android.os.Bundle'/></method></class><class name='ActivityGroup' extends='android.app.Activity'><constructor name='ActivityGroup' type='android.app.ActivityGroup'/><constructor name='ActivityGroup' type='android.app.ActivityGroup'><parameter name='singleActivityMode' type='boolean'/></constructor><method name='getCurrentActivity' return='android.app.Activity'/><method name='getLocalActivityManager' final='true' return='android.app.LocalActivityManager'/></class><class name='ActivityManager' extends='java.lang.Object'><field name='RECENT_WITH_EXCLUDED' final='true' static='true' value='1' type='int'/><method name='getMemoryInfo'><parameter name='outInfo' type='android.app.ActivityManager.MemoryInfo'/></method><method name='getProcessesInErrorState' return='java.util.List&lt;android.app.ActivityManager.ProcessErrorStateInfo&gt;'/><method name='getRecentTasks' return='java.util.List&lt;android.app.ActivityManager.RecentTaskInfo&gt;'><parameter name='maxNum' type='int'/><parameter name='flags' type='int'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getRunningServices' return='java.util.List&lt;android.app.ActivityManager.RunningServiceInfo&gt;'><parameter name='maxNum' type='int'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getRunningTasks' return='java.util.List&lt;android.app.ActivityManager.RunningTaskInfo&gt;'><parameter name='maxNum' type='int'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method api_added='3' name='getDeviceConfigurationInfo' return='android.content.pm.ConfigurationInfo'/><method api_added='3' name='getRunningAppProcesses' return='java.util.List&lt;android.app.ActivityManager.RunningAppProcessInfo&gt;'/><method api_added='3' name='restartPackage' deprecated='8'><parameter name='packageName' type='java.lang.String'/></method><method api_added='5' name='getMemoryClass' return='int'/><method api_added='5' name='getProcessMemoryInfo' return='android.os.Debug.MemoryInfo[]'><parameter name='pids' type='int[]'/></method><method api_added='5' name='getRunningServiceControlPanel' return='android.app.PendingIntent'><parameter name='service' type='android.content.ComponentName'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method api_added='8' name='isUserAMonkey' static='true' return='boolean'/><method api_added='8' name='killBackgroundProcesses'><parameter name='packageName' type='java.lang.String'/></method></class><class name='ActivityManager.MemoryInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='ActivityManager.MemoryInfo' type='android.app.ActivityManager.MemoryInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='availMem' type='long'/><field name='lowMemory' type='boolean'/><field name='threshold' type='long'/><method name='describeContents' return='int'/><method name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ActivityManager.ProcessErrorStateInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='ActivityManager.ProcessErrorStateInfo' type='android.app.ActivityManager.ProcessErrorStateInfo'/><field name='CRASHED' final='true' static='true' value='1' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='NOT_RESPONDING' final='true' static='true' value='2' type='int'/><field name='NO_ERROR' final='true' static='true' value='0' type='int'/><field name='condition' type='int'/><field name='crashData' value='null' type='byte[]'/><field name='longMsg' type='java.lang.String'/><field name='pid' type='int'/><field name='processName' type='java.lang.String'/><field name='shortMsg' type='java.lang.String'/><field name='tag' type='java.lang.String'/><field name='uid' type='int'/><field api_added='8' name='stackTrace' type='java.lang.String'/><method name='describeContents' return='int'/><method name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ActivityManager.RecentTaskInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='ActivityManager.RecentTaskInfo' type='android.app.ActivityManager.RecentTaskInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='baseIntent' type='android.content.Intent'/><field name='id' type='int'/><field name='origActivity' type='android.content.ComponentName'/><method name='describeContents' return='int'/><method name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ActivityManager.RunningServiceInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='ActivityManager.RunningServiceInfo' type='android.app.ActivityManager.RunningServiceInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='activeSince' type='long'/><field name='clientCount' type='int'/><field name='crashCount' type='int'/><field name='foreground' type='boolean'/><field name='lastActivityTime' type='long'/><field name='pid' type='int'/><field name='process' type='java.lang.String'/><field name='restarting' type='long'/><field name='service' type='android.content.ComponentName'/><field name='started' type='boolean'/><field api_added='5' name='FLAG_FOREGROUND' final='true' static='true' value='2' type='int'/><field api_added='5' name='FLAG_PERSISTENT_PROCESS' final='true' static='true' value='8' type='int'/><field api_added='5' name='FLAG_STARTED' final='true' static='true' value='1' type='int'/><field api_added='5' name='FLAG_SYSTEM_PROCESS' final='true' static='true' value='4' type='int'/><field api_added='5' name='clientLabel' type='int'/><field api_added='5' name='clientPackage' type='java.lang.String'/><field api_added='5' name='flags' type='int'/><field api_added='5' name='uid' type='int'/><method name='describeContents' return='int'/><method name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ActivityManager.RunningTaskInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='ActivityManager.RunningTaskInfo' type='android.app.ActivityManager.RunningTaskInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='baseActivity' type='android.content.ComponentName'/><field name='description' type='java.lang.CharSequence'/><field name='id' type='int'/><field name='numActivities' type='int'/><field name='numRunning' type='int'/><field name='thumbnail' type='android.graphics.Bitmap'/><field name='topActivity' type='android.content.ComponentName'/><method name='describeContents' return='int'/><method name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='AlarmManager' extends='java.lang.Object'><field name='ELAPSED_REALTIME' final='true' static='true' value='3' type='int'/><field name='ELAPSED_REALTIME_WAKEUP' final='true' static='true' value='2' type='int'/><field name='RTC' final='true' static='true' value='1' type='int'/><field name='RTC_WAKEUP' final='true' static='true' value='0' type='int'/><field api_added='3' name='INTERVAL_DAY' final='true' static='true' value='86400000L' type='long'/><field api_added='3' name='INTERVAL_FIFTEEN_MINUTES' final='true' static='true' value='900000L' type='long'/><field api_added='3' name='INTERVAL_HALF_DAY' final='true' static='true' value='43200000L' type='long'/><field api_added='3' name='INTERVAL_HALF_HOUR' final='true' static='true' value='1800000L' type='long'/><field api_added='3' name='INTERVAL_HOUR' final='true' static='true' value='3600000L' type='long'/><method name='cancel'><parameter name='operation' type='android.app.PendingIntent'/></method><method name='set'><parameter name='type' type='int'/><parameter name='triggerAtTime' type='long'/><parameter name='operation' type='android.app.PendingIntent'/></method><method name='setRepeating'><parameter name='type' type='int'/><parameter name='triggerAtTime' type='long'/><parameter name='interval' type='long'/><parameter name='operation' type='android.app.PendingIntent'/></method><method name='setTimeZone'><parameter name='timeZone' type='java.lang.String'/></method><method api_added='3' name='setInexactRepeating'><parameter name='type' type='int'/><parameter name='triggerAtTime' type='long'/><parameter name='interval' type='long'/><parameter name='operation' type='android.app.PendingIntent'/></method><method api_added='8' name='setTime'><parameter name='millis' type='long'/></method></class><class name='AlertDialog' extends='android.app.Dialog'><implements name='android.content.DialogInterface'/><constructor name='AlertDialog' type='android.app.AlertDialog' visibility='protected'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AlertDialog' type='android.app.AlertDialog' visibility='protected'><parameter name='context' type='android.content.Context'/><parameter name='theme' type='int'/></constructor><constructor name='AlertDialog' type='android.app.AlertDialog' visibility='protected'><parameter name='context' type='android.content.Context'/><parameter name='cancelable' type='boolean'/><parameter name='cancelListener' type='android.content.DialogInterface.OnCancelListener'/></constructor><method name='setButton' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='msg' type='android.os.Message'/></method><method name='setButton' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setButton2' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='msg' type='android.os.Message'/></method><method name='setButton2' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setButton3' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='msg' type='android.os.Message'/></method><method name='setButton3' deprecated='3'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setCustomTitle'><parameter name='customTitleView' type='android.view.View'/></method><method name='setIcon'><parameter name='resId' type='int'/></method><method name='setIcon'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setInverseBackgroundForced'><parameter name='forceInverseBackground' type='boolean'/></method><method name='setMessage'><parameter name='message' type='java.lang.CharSequence'/></method><method name='setView'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='getButton' return='android.widget.Button'><parameter name='whichButton' type='int'/></method><method api_added='3' name='getListView' return='android.widget.ListView'/><method api_added='3' name='setButton'><parameter name='whichButton' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='msg' type='android.os.Message'/></method><method api_added='3' name='setButton'><parameter name='whichButton' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method api_added='3' name='setView'><parameter name='view' type='android.view.View'/><parameter name='viewSpacingLeft' type='int'/><parameter name='viewSpacingTop' type='int'/><parameter name='viewSpacingRight' type='int'/><parameter name='viewSpacingBottom' type='int'/></method></class><class name='AlertDialog.Builder' extends='java.lang.Object' static='true'><constructor name='AlertDialog.Builder' type='android.app.AlertDialog.Builder'><parameter name='context' type='android.content.Context'/></constructor><method name='create' return='android.app.AlertDialog'/><method name='setAdapter' return='android.app.AlertDialog.Builder'><parameter name='adapter' type='android.widget.ListAdapter'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setCancelable' return='android.app.AlertDialog.Builder'><parameter name='cancelable' type='boolean'/></method><method name='setCursor' return='android.app.AlertDialog.Builder'><parameter name='cursor' type='android.database.Cursor'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/><parameter name='labelColumn' type='java.lang.String'/></method><method name='setCustomTitle' return='android.app.AlertDialog.Builder'><parameter name='customTitleView' type='android.view.View'/></method><method name='setIcon' return='android.app.AlertDialog.Builder'><parameter name='iconId' type='int'/></method><method name='setIcon' return='android.app.AlertDialog.Builder'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setInverseBackgroundForced' return='android.app.AlertDialog.Builder'><parameter name='useInverseBackground' type='boolean'/></method><method name='setItems' return='android.app.AlertDialog.Builder'><parameter name='itemsId' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setItems' return='android.app.AlertDialog.Builder'><parameter name='items' type='java.lang.CharSequence[]'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setMessage' return='android.app.AlertDialog.Builder'><parameter name='messageId' type='int'/></method><method name='setMessage' return='android.app.AlertDialog.Builder'><parameter name='message' type='java.lang.CharSequence'/></method><method name='setMultiChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='itemsId' type='int'/><parameter name='checkedItems' type='boolean[]'/><parameter name='listener' type='android.content.DialogInterface.OnMultiChoiceClickListener'/></method><method name='setMultiChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='items' type='java.lang.CharSequence[]'/><parameter name='checkedItems' type='boolean[]'/><parameter name='listener' type='android.content.DialogInterface.OnMultiChoiceClickListener'/></method><method name='setMultiChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='cursor' type='android.database.Cursor'/><parameter name='isCheckedColumn' type='java.lang.String'/><parameter name='labelColumn' type='java.lang.String'/><parameter name='listener' type='android.content.DialogInterface.OnMultiChoiceClickListener'/></method><method name='setNegativeButton' return='android.app.AlertDialog.Builder'><parameter name='textId' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setNegativeButton' return='android.app.AlertDialog.Builder'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setNeutralButton' return='android.app.AlertDialog.Builder'><parameter name='textId' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setNeutralButton' return='android.app.AlertDialog.Builder'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setOnCancelListener' return='android.app.AlertDialog.Builder'><parameter name='onCancelListener' type='android.content.DialogInterface.OnCancelListener'/></method><method name='setOnItemSelectedListener' return='android.app.AlertDialog.Builder'><parameter name='listener' type='android.widget.AdapterView.OnItemSelectedListener'/></method><method name='setOnKeyListener' return='android.app.AlertDialog.Builder'><parameter name='onKeyListener' type='android.content.DialogInterface.OnKeyListener'/></method><method name='setPositiveButton' return='android.app.AlertDialog.Builder'><parameter name='textId' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setPositiveButton' return='android.app.AlertDialog.Builder'><parameter name='text' type='java.lang.CharSequence'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setSingleChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='itemsId' type='int'/><parameter name='checkedItem' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setSingleChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='cursor' type='android.database.Cursor'/><parameter name='checkedItem' type='int'/><parameter name='labelColumn' type='java.lang.String'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setSingleChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='items' type='java.lang.CharSequence[]'/><parameter name='checkedItem' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setSingleChoiceItems' return='android.app.AlertDialog.Builder'><parameter name='adapter' type='android.widget.ListAdapter'/><parameter name='checkedItem' type='int'/><parameter name='listener' type='android.content.DialogInterface.OnClickListener'/></method><method name='setTitle' return='android.app.AlertDialog.Builder'><parameter name='titleId' type='int'/></method><method name='setTitle' return='android.app.AlertDialog.Builder'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setView' return='android.app.AlertDialog.Builder'><parameter name='view' type='android.view.View'/></method><method name='show' return='android.app.AlertDialog'/></class><class name='AliasActivity' extends='android.app.Activity'><constructor name='AliasActivity' type='android.app.AliasActivity'/></class><class name='Application' extends='android.content.ContextWrapper'><implements name='android.content.ComponentCallbacks'/><constructor name='Application' type='android.app.Application'/><method name='onConfigurationChanged'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='onCreate'/><method name='onLowMemory'/><method name='onTerminate'/></class><class name='DatePickerDialog' extends='android.app.AlertDialog'><implements name='android.widget.DatePicker.OnDateChangedListener'/><implements name='android.content.DialogInterface.OnClickListener'/><constructor name='DatePickerDialog' type='android.app.DatePickerDialog'><parameter name='context' type='android.content.Context'/><parameter name='callBack' type='android.app.DatePickerDialog.OnDateSetListener'/><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></constructor><constructor name='DatePickerDialog' type='android.app.DatePickerDialog'><parameter name='context' type='android.content.Context'/><parameter name='theme' type='int'/><parameter name='callBack' type='android.app.DatePickerDialog.OnDateSetListener'/><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></constructor><method name='onClick'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/></method><method name='onDateChanged'><parameter name='view' type='android.widget.DatePicker'/><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/></method><method name='updateDate'><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></method></class><class name='Dialog' extends='java.lang.Object'><implements name='android.content.DialogInterface'/><implements name='android.view.KeyEvent.Callback'/><implements name='android.view.View.OnCreateContextMenuListener'/><implements name='android.view.Window.Callback'/><constructor name='Dialog' type='android.app.Dialog'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Dialog' type='android.app.Dialog'><parameter name='context' type='android.content.Context'/><parameter name='theme' type='int'/></constructor><constructor name='Dialog' type='android.app.Dialog' visibility='protected'><parameter name='context' type='android.content.Context'/><parameter name='cancelable' type='boolean'/><parameter name='cancelListener' type='android.content.DialogInterface.OnCancelListener'/></constructor><method name='addContentView'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='cancel'/><method name='closeOptionsMenu'/><method name='dismiss'/><method name='dispatchKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='dispatchTouchEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='dispatchTrackballEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='findViewById' return='android.view.View'><parameter name='id' type='int'/></method><method name='getContext' final='true' return='android.content.Context'/><method name='getCurrentFocus' return='android.view.View'/><method name='getLayoutInflater' return='android.view.LayoutInflater'/><method name='getOwnerActivity' final='true' return='android.app.Activity'/><method name='getVolumeControlStream' final='true' return='int'/><method name='getWindow' return='android.view.Window'/><method name='hide'/><method name='isShowing' return='boolean'/><method name='onContentChanged'/><method name='onContextItemSelected' return='boolean'><parameter name='item' type='android.view.MenuItem'/></method><method name='onContextMenuClosed'><parameter name='menu' type='android.view.Menu'/></method><method name='onCreate' visibility='protected'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='onCreateContextMenu'><parameter name='menu' type='android.view.ContextMenu'/><parameter name='v' type='android.view.View'/><parameter name='menuInfo' type='android.view.ContextMenu.ContextMenuInfo'/></method><method name='onCreateOptionsMenu' return='boolean'><parameter name='menu' type='android.view.Menu'/></method><method name='onCreatePanelMenu' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onCreatePanelView' return='android.view.View'><parameter name='featureId' type='int'/></method><method name='onKeyDown' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyMultiple' return='boolean'><parameter name='keyCode' type='int'/><parameter name='repeatCount' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onMenuItemSelected' return='boolean'><parameter name='featureId' type='int'/><parameter name='item' type='android.view.MenuItem'/></method><method name='onMenuOpened' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onOptionsItemSelected' return='boolean'><parameter name='item' type='android.view.MenuItem'/></method><method name='onOptionsMenuClosed'><parameter name='menu' type='android.view.Menu'/></method><method name='onPanelClosed'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onPrepareOptionsMenu' return='boolean'><parameter name='menu' type='android.view.Menu'/></method><method name='onPreparePanel' return='boolean'><parameter name='featureId' type='int'/><parameter name='view' type='android.view.View'/><parameter name='menu' type='android.view.Menu'/></method><method name='onRestoreInstanceState'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='onSaveInstanceState' return='android.os.Bundle'/><method name='onSearchRequested' return='boolean'/><method name='onStart' visibility='protected'/><method name='onStop' visibility='protected'/><method name='onTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onWindowAttributesChanged'><parameter name='params' type='android.view.WindowManager.LayoutParams'/></method><method name='onWindowFocusChanged'><parameter name='hasFocus' type='boolean'/></method><method name='openContextMenu'><parameter name='view' type='android.view.View'/></method><method name='openOptionsMenu'/><method name='registerForContextMenu'><parameter name='view' type='android.view.View'/></method><method name='requestWindowFeature' final='true' return='boolean'><parameter name='featureId' type='int'/></method><method name='setCancelMessage'><parameter name='msg' type='android.os.Message'/></method><method name='setCancelable'><parameter name='flag' type='boolean'/></method><method name='setCanceledOnTouchOutside'><parameter name='cancel' type='boolean'/></method><method name='setContentView'><parameter name='layoutResID' type='int'/></method><method name='setContentView'><parameter name='view' type='android.view.View'/></method><method name='setContentView'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='setDismissMessage'><parameter name='msg' type='android.os.Message'/></method><method name='setFeatureDrawable' final='true'><parameter name='featureId' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setFeatureDrawableAlpha' final='true'><parameter name='featureId' type='int'/><parameter name='alpha' type='int'/></method><method name='setFeatureDrawableResource' final='true'><parameter name='featureId' type='int'/><parameter name='resId' type='int'/></method><method name='setFeatureDrawableUri' final='true'><parameter name='featureId' type='int'/><parameter name='uri' type='android.net.Uri'/></method><method name='setOnCancelListener'><parameter name='listener' type='android.content.DialogInterface.OnCancelListener'/></method><method name='setOnDismissListener'><parameter name='listener' type='android.content.DialogInterface.OnDismissListener'/></method><method name='setOnKeyListener'><parameter name='onKeyListener' type='android.content.DialogInterface.OnKeyListener'/></method><method name='setOwnerActivity' final='true'><parameter name='activity' type='android.app.Activity'/></method><method name='setTitle'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setTitle'><parameter name='titleId' type='int'/></method><method name='setVolumeControlStream' final='true'><parameter name='streamType' type='int'/></method><method name='show'/><method name='takeKeyEvents'><parameter name='get' type='boolean'/></method><method name='unregisterForContextMenu'><parameter name='view' type='android.view.View'/></method><method api_added='4' name='dispatchPopulateAccessibilityEvent' return='boolean'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='5' name='onAttachedToWindow'/><method api_added='5' name='onBackPressed'/><method api_added='5' name='onDetachedFromWindow'/><method api_added='5' name='onKeyLongPress' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='8' name='setOnShowListener'><parameter name='listener' type='android.content.DialogInterface.OnShowListener'/></method></class><class name='ExpandableListActivity' extends='android.app.Activity'><implements name='android.widget.ExpandableListView.OnChildClickListener'/><implements name='android.widget.ExpandableListView.OnGroupCollapseListener'/><implements name='android.widget.ExpandableListView.OnGroupExpandListener'/><implements name='android.view.View.OnCreateContextMenuListener'/><constructor name='ExpandableListActivity' type='android.app.ExpandableListActivity'/><method name='getExpandableListAdapter' return='android.widget.ExpandableListAdapter'/><method name='getExpandableListView' return='android.widget.ExpandableListView'/><method name='getSelectedId' return='long'/><method name='getSelectedPosition' return='long'/><method name='onChildClick' return='boolean'><parameter name='parent' type='android.widget.ExpandableListView'/><parameter name='v' type='android.view.View'/><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='id' type='long'/></method><method name='onGroupCollapse'><parameter name='groupPosition' type='int'/></method><method name='onGroupExpand'><parameter name='groupPosition' type='int'/></method><method name='setListAdapter'><parameter name='adapter' type='android.widget.ExpandableListAdapter'/></method><method name='setSelectedChild' return='boolean'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='shouldExpandGroup' type='boolean'/></method><method name='setSelectedGroup'><parameter name='groupPosition' type='int'/></method></class><class name='Instrumentation' extends='java.lang.Object'><constructor name='Instrumentation' type='android.app.Instrumentation'/><field name='REPORT_KEY_IDENTIFIER' final='true' static='true' value='&quot;id&quot;' type='java.lang.String'/><field name='REPORT_KEY_STREAMRESULT' final='true' static='true' value='&quot;stream&quot;' type='java.lang.String'/><method name='addMonitor'><parameter name='monitor' type='android.app.Instrumentation.ActivityMonitor'/></method><method name='addMonitor' return='android.app.Instrumentation.ActivityMonitor'><parameter name='filter' type='android.content.IntentFilter'/><parameter name='result' type='android.app.Instrumentation.ActivityResult'/><parameter name='block' type='boolean'/></method><method name='addMonitor' return='android.app.Instrumentation.ActivityMonitor'><parameter name='cls' type='java.lang.String'/><parameter name='result' type='android.app.Instrumentation.ActivityResult'/><parameter name='block' type='boolean'/></method><method name='callActivityOnCreate'><parameter name='activity' type='android.app.Activity'/><parameter name='icicle' type='android.os.Bundle'/></method><method name='callActivityOnDestroy'><parameter name='activity' type='android.app.Activity'/></method><method name='callActivityOnNewIntent'><parameter name='activity' type='android.app.Activity'/><parameter name='intent' type='android.content.Intent'/></method><method name='callActivityOnPause'><parameter name='activity' type='android.app.Activity'/></method><method name='callActivityOnPostCreate'><parameter name='activity' type='android.app.Activity'/><parameter name='icicle' type='android.os.Bundle'/></method><method name='callActivityOnRestart'><parameter name='activity' type='android.app.Activity'/></method><method name='callActivityOnRestoreInstanceState'><parameter name='activity' type='android.app.Activity'/><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='callActivityOnResume'><parameter name='activity' type='android.app.Activity'/></method><method name='callActivityOnSaveInstanceState'><parameter name='activity' type='android.app.Activity'/><parameter name='outState' type='android.os.Bundle'/></method><method name='callActivityOnStart'><parameter name='activity' type='android.app.Activity'/></method><method name='callActivityOnStop'><parameter name='activity' type='android.app.Activity'/></method><method name='callApplicationOnCreate'><parameter name='app' type='android.app.Application'/></method><method name='checkMonitorHit' return='boolean'><parameter name='monitor' type='android.app.Instrumentation.ActivityMonitor'/><parameter name='minHits' type='int'/></method><method name='endPerformanceSnapshot'/><method name='finish'><parameter name='resultCode' type='int'/><parameter name='results' type='android.os.Bundle'/></method><method name='getAllocCounts' return='android.os.Bundle'/><method name='getBinderCounts' return='android.os.Bundle'/><method name='getComponentName' return='android.content.ComponentName'/><method name='getContext' return='android.content.Context'/><method name='getTargetContext' return='android.content.Context'/><method name='invokeContextMenuAction' return='boolean'><parameter name='targetActivity' type='android.app.Activity'/><parameter name='id' type='int'/><parameter name='flag' type='int'/></method><method name='invokeMenuActionSync' return='boolean'><parameter name='targetActivity' type='android.app.Activity'/><parameter name='id' type='int'/><parameter name='flag' type='int'/></method><method name='isProfiling' return='boolean'/><method name='newActivity' return='android.app.Activity'><parameter name='clazz' type='java.lang.Class&lt;?&gt;'/><parameter name='context' type='android.content.Context'/><parameter name='token' type='android.os.IBinder'/><parameter name='application' type='android.app.Application'/><parameter name='intent' type='android.content.Intent'/><parameter name='info' type='android.content.pm.ActivityInfo'/><parameter name='title' type='java.lang.CharSequence'/><parameter name='parent' type='android.app.Activity'/><parameter name='id' type='java.lang.String'/><parameter name='lastNonConfigurationInstance' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method><method name='newActivity' return='android.app.Activity'><parameter name='cl' type='java.lang.ClassLoader'/><parameter name='className' type='java.lang.String'/><parameter name='intent' type='android.content.Intent'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method><method name='newApplication' return='android.app.Application'><parameter name='cl' type='java.lang.ClassLoader'/><parameter name='className' type='java.lang.String'/><parameter name='context' type='android.content.Context'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method><method name='newApplication' static='true' return='android.app.Application'><parameter name='clazz' type='java.lang.Class&lt;?&gt;'/><parameter name='context' type='android.content.Context'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method><method name='onCreate'><parameter name='arguments' type='android.os.Bundle'/></method><method name='onDestroy'/><method name='onException' return='boolean'><parameter name='obj' type='java.lang.Object'/><parameter name='e' type='java.lang.Throwable'/></method><method name='onStart'/><method name='removeMonitor'><parameter name='monitor' type='android.app.Instrumentation.ActivityMonitor'/></method><method name='runOnMainSync'><parameter name='runner' type='java.lang.Runnable'/></method><method name='sendCharacterSync'><parameter name='keyCode' type='int'/></method><method name='sendKeyDownUpSync'><parameter name='key' type='int'/></method><method name='sendKeySync'><parameter name='event' type='android.view.KeyEvent'/></method><method name='sendPointerSync'><parameter name='event' type='android.view.MotionEvent'/></method><method name='sendStatus'><parameter name='resultCode' type='int'/><parameter name='results' type='android.os.Bundle'/></method><method name='sendStringSync'><parameter name='text' type='java.lang.String'/></method><method name='sendTrackballEventSync'><parameter name='event' type='android.view.MotionEvent'/></method><method name='setAutomaticPerformanceSnapshots'/><method name='setInTouchMode'><parameter name='inTouch' type='boolean'/></method><method name='start'/><method name='startActivitySync' return='android.app.Activity'><parameter name='intent' type='android.content.Intent'/></method><method name='startAllocCounting'/><method name='startPerformanceSnapshot'/><method name='startProfiling'/><method name='stopAllocCounting'/><method name='stopProfiling'/><method name='waitForIdle'><parameter name='recipient' type='java.lang.Runnable'/></method><method name='waitForIdleSync'/><method name='waitForMonitor' return='android.app.Activity'><parameter name='monitor' type='android.app.Instrumentation.ActivityMonitor'/></method><method name='waitForMonitorWithTimeout' return='android.app.Activity'><parameter name='monitor' type='android.app.Instrumentation.ActivityMonitor'/><parameter name='timeOut' type='long'/></method><method api_added='3' name='callActivityOnUserLeaving'><parameter name='activity' type='android.app.Activity'/></method></class><class name='Instrumentation.ActivityMonitor' extends='java.lang.Object' static='true'><constructor name='Instrumentation.ActivityMonitor' type='android.app.Instrumentation.ActivityMonitor'><parameter name='which' type='android.content.IntentFilter'/><parameter name='result' type='android.app.Instrumentation.ActivityResult'/><parameter name='block' type='boolean'/></constructor><constructor name='Instrumentation.ActivityMonitor' type='android.app.Instrumentation.ActivityMonitor'><parameter name='cls' type='java.lang.String'/><parameter name='result' type='android.app.Instrumentation.ActivityResult'/><parameter name='block' type='boolean'/></constructor><method name='getFilter' final='true' return='android.content.IntentFilter'/><method name='getHits' final='true' return='int'/><method name='getLastActivity' final='true' return='android.app.Activity'/><method name='getResult' final='true' return='android.app.Instrumentation.ActivityResult'/><method name='isBlocking' final='true' return='boolean'/><method name='waitForActivity' final='true' return='android.app.Activity'/><method name='waitForActivityWithTimeout' final='true' return='android.app.Activity'><parameter name='timeOut' type='long'/></method></class><class name='Instrumentation.ActivityResult' final='true' extends='java.lang.Object' static='true'><constructor name='Instrumentation.ActivityResult' type='android.app.Instrumentation.ActivityResult'><parameter name='resultCode' type='int'/><parameter name='resultData' type='android.content.Intent'/></constructor><method name='getResultCode' return='int'/><method name='getResultData' return='android.content.Intent'/></class><class name='KeyguardManager' extends='java.lang.Object'><method name='exitKeyguardSecurely'><parameter name='callback' type='android.app.KeyguardManager.OnKeyguardExitResult'/></method><method name='inKeyguardRestrictedInputMode' return='boolean'/><method name='newKeyguardLock' return='android.app.KeyguardManager.KeyguardLock'><parameter name='tag' type='java.lang.String'/></method></class><class name='KeyguardManager.KeyguardLock' extends='java.lang.Object'><method name='disableKeyguard'/><method name='reenableKeyguard'/></class><class name='LauncherActivity' extends='android.app.ListActivity' abstract='true'><constructor name='LauncherActivity' type='android.app.LauncherActivity'/><method name='getTargetIntent' abstract='true' visibility='protected' return='android.content.Intent'/><method api_added='3' name='intentForPosition' visibility='protected' return='android.content.Intent'><parameter name='position' type='int'/></method><method api_added='3' name='makeListItems' return='java.util.List&lt;android.app.LauncherActivity.ListItem&gt;'/><method api_added='4' name='itemForPosition' visibility='protected' return='android.app.LauncherActivity.ListItem'><parameter name='position' type='int'/></method><method api_added='5' name='onQueryPackageManager' visibility='protected' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='queryIntent' type='android.content.Intent'/></method><method api_added='5' name='onSetContentView' visibility='protected'/></class><class name='ListActivity' extends='android.app.Activity'><constructor name='ListActivity' type='android.app.ListActivity'/><method name='getListAdapter' return='android.widget.ListAdapter'/><method name='getListView' return='android.widget.ListView'/><method name='getSelectedItemId' return='long'/><method name='getSelectedItemPosition' return='int'/><method name='onListItemClick' visibility='protected'><parameter name='l' type='android.widget.ListView'/><parameter name='v' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method><method name='setListAdapter'><parameter name='adapter' type='android.widget.ListAdapter'/></method><method name='setSelection'><parameter name='position' type='int'/></method></class><class name='LocalActivityManager' extends='java.lang.Object'><constructor name='LocalActivityManager' type='android.app.LocalActivityManager'><parameter name='parent' type='android.app.Activity'/><parameter name='singleMode' type='boolean'/></constructor><method name='destroyActivity' return='android.view.Window'><parameter name='id' type='java.lang.String'/><parameter name='finish' type='boolean'/></method><method name='dispatchCreate'><parameter name='state' type='android.os.Bundle'/></method><method name='dispatchDestroy'><parameter name='finishing' type='boolean'/></method><method name='dispatchPause'><parameter name='finishing' type='boolean'/></method><method name='dispatchResume'/><method name='dispatchStop'/><method name='getActivity' return='android.app.Activity'><parameter name='id' type='java.lang.String'/></method><method name='getCurrentActivity' return='android.app.Activity'/><method name='getCurrentId' return='java.lang.String'/><method name='removeAllActivities'/><method name='saveInstanceState' return='android.os.Bundle'/><method name='startActivity' return='android.view.Window'><parameter name='id' type='java.lang.String'/><parameter name='intent' type='android.content.Intent'/></method></class><class name='Notification' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Notification' type='android.app.Notification'/><constructor name='Notification' type='android.app.Notification'><parameter name='icon' type='int'/><parameter name='tickerText' type='java.lang.CharSequence'/><parameter name='when' type='long'/></constructor><constructor name='Notification' type='android.app.Notification'><parameter name='parcel' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='DEFAULT_ALL' final='true' static='true' value='-1' type='int'/><field name='DEFAULT_LIGHTS' final='true' static='true' value='4' type='int'/><field name='DEFAULT_SOUND' final='true' static='true' value='1' type='int'/><field name='DEFAULT_VIBRATE' final='true' static='true' value='2' type='int'/><field name='FLAG_AUTO_CANCEL' final='true' static='true' value='16' type='int'/><field name='FLAG_INSISTENT' final='true' static='true' value='4' type='int'/><field name='FLAG_NO_CLEAR' final='true' static='true' value='32' type='int'/><field name='FLAG_ONGOING_EVENT' final='true' static='true' value='2' type='int'/><field name='FLAG_ONLY_ALERT_ONCE' final='true' static='true' value='8' type='int'/><field name='FLAG_SHOW_LIGHTS' final='true' static='true' value='1' type='int'/><field name='STREAM_DEFAULT' final='true' static='true' value='-1' type='int'/><field name='audioStreamType' type='int'/><field name='contentIntent' type='android.app.PendingIntent'/><field name='contentView' type='android.widget.RemoteViews'/><field name='defaults' type='int'/><field name='deleteIntent' type='android.app.PendingIntent'/><field name='flags' type='int'/><field name='icon' type='int'/><field name='iconLevel' type='int'/><field name='ledARGB' type='int'/><field name='ledOffMS' type='int'/><field name='ledOnMS' type='int'/><field name='number' type='int'/><field name='sound' type='android.net.Uri'/><field name='tickerText' type='java.lang.CharSequence'/><field name='vibrate' value='null' type='long[]'/><field name='when' type='long'/><field api_added='5' name='FLAG_FOREGROUND_SERVICE' final='true' static='true' value='64' type='int'/><method name='describeContents' return='int'/><method name='setLatestEventInfo'><parameter name='context' type='android.content.Context'/><parameter name='contentTitle' type='java.lang.CharSequence'/><parameter name='contentText' type='java.lang.CharSequence'/><parameter name='contentIntent' type='android.app.PendingIntent'/></method><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='NotificationManager' extends='java.lang.Object'><method name='cancel'><parameter name='id' type='int'/></method><method name='cancelAll'/><method name='notify'><parameter name='id' type='int'/><parameter name='notification' type='android.app.Notification'/></method><method api_added='5' name='cancel'><parameter name='tag' type='java.lang.String'/><parameter name='id' type='int'/></method><method api_added='5' name='notify'><parameter name='tag' type='java.lang.String'/><parameter name='id' type='int'/><parameter name='notification' type='android.app.Notification'/></method></class><class name='PendingIntent' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FLAG_CANCEL_CURRENT' final='true' static='true' value='268435456' type='int'/><field name='FLAG_NO_CREATE' final='true' static='true' value='536870912' type='int'/><field name='FLAG_ONE_SHOT' final='true' static='true' value='1073741824' type='int'/><field api_added='3' name='FLAG_UPDATE_CURRENT' final='true' static='true' value='134217728' type='int'/><method name='cancel'/><method name='describeContents' return='int'/><method name='getActivity' static='true' return='android.app.PendingIntent'><parameter name='context' type='android.content.Context'/><parameter name='requestCode' type='int'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='getBroadcast' static='true' return='android.app.PendingIntent'><parameter name='context' type='android.content.Context'/><parameter name='requestCode' type='int'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='getService' static='true' return='android.app.PendingIntent'><parameter name='context' type='android.content.Context'/><parameter name='requestCode' type='int'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='getTargetPackage' return='java.lang.String'/><method name='readPendingIntentOrNullFromParcel' static='true' return='android.app.PendingIntent'><parameter name='in' type='android.os.Parcel'/></method><method name='send'><exception name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/></method><method name='send'><parameter name='code' type='int'/><exception name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/></method><method name='send'><parameter name='context' type='android.content.Context'/><parameter name='code' type='int'/><parameter name='intent' type='android.content.Intent'/><exception name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/></method><method name='send'><parameter name='code' type='int'/><parameter name='onFinished' type='android.app.PendingIntent.OnFinished'/><parameter name='handler' type='android.os.Handler'/><exception name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/></method><method name='send'><parameter name='context' type='android.content.Context'/><parameter name='code' type='int'/><parameter name='intent' type='android.content.Intent'/><parameter name='onFinished' type='android.app.PendingIntent.OnFinished'/><parameter name='handler' type='android.os.Handler'/><exception name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/></method><method name='writePendingIntentOrNullToParcel' static='true'><parameter name='sender' type='android.app.PendingIntent'/><parameter name='out' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='4' name='getIntentSender' return='android.content.IntentSender'/></class><class name='PendingIntent.CanceledException' extends='android.util.AndroidException' static='true'><constructor name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'/><constructor name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'><parameter name='name' type='java.lang.String'/></constructor><constructor name='PendingIntent.CanceledException' type='android.app.PendingIntent.CanceledException'><parameter name='cause' type='java.lang.Exception'/></constructor></class><class name='ProgressDialog' extends='android.app.AlertDialog'><constructor name='ProgressDialog' type='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ProgressDialog' type='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/><parameter name='theme' type='int'/></constructor><field name='STYLE_HORIZONTAL' final='true' static='true' value='1' type='int'/><field name='STYLE_SPINNER' final='true' static='true' value='0' type='int'/><method name='getMax' return='int'/><method name='getProgress' return='int'/><method name='getSecondaryProgress' return='int'/><method name='incrementProgressBy'><parameter name='diff' type='int'/></method><method name='incrementSecondaryProgressBy'><parameter name='diff' type='int'/></method><method name='isIndeterminate' return='boolean'/><method name='onStart'/><method name='setIndeterminate'><parameter name='indeterminate' type='boolean'/></method><method name='setIndeterminateDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setMax'><parameter name='max' type='int'/></method><method name='setProgress'><parameter name='value' type='int'/></method><method name='setProgressDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setProgressStyle'><parameter name='style' type='int'/></method><method name='setSecondaryProgress'><parameter name='secondaryProgress' type='int'/></method><method name='show' static='true' return='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/><parameter name='title' type='java.lang.CharSequence'/><parameter name='message' type='java.lang.CharSequence'/></method><method name='show' static='true' return='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/><parameter name='title' type='java.lang.CharSequence'/><parameter name='message' type='java.lang.CharSequence'/><parameter name='indeterminate' type='boolean'/></method><method name='show' static='true' return='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/><parameter name='title' type='java.lang.CharSequence'/><parameter name='message' type='java.lang.CharSequence'/><parameter name='indeterminate' type='boolean'/><parameter name='cancelable' type='boolean'/></method><method name='show' static='true' return='android.app.ProgressDialog'><parameter name='context' type='android.content.Context'/><parameter name='title' type='java.lang.CharSequence'/><parameter name='message' type='java.lang.CharSequence'/><parameter name='indeterminate' type='boolean'/><parameter name='cancelable' type='boolean'/><parameter name='cancelListener' type='android.content.DialogInterface.OnCancelListener'/></method></class><class name='SearchManager' extends='java.lang.Object'><implements name='android.content.DialogInterface.OnCancelListener'/><implements name='android.content.DialogInterface.OnDismissListener'/><field name='ACTION_KEY' final='true' static='true' value='&quot;action_key&quot;' type='java.lang.String'/><field name='ACTION_MSG' final='true' static='true' value='&quot;action_msg&quot;' type='java.lang.String'/><field name='APP_DATA' final='true' static='true' value='&quot;app_data&quot;' type='java.lang.String'/><field name='MENU_KEY' final='true' static='true' value='115' type='char'/><field name='MENU_KEYCODE' final='true' static='true' value='47' type='int'/><field name='QUERY' final='true' static='true' value='&quot;query&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_FORMAT' final='true' static='true' value='&quot;suggest_format&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_ICON_1' final='true' static='true' value='&quot;suggest_icon_1&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_ICON_2' final='true' static='true' value='&quot;suggest_icon_2&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_INTENT_ACTION' final='true' static='true' value='&quot;suggest_intent_action&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_INTENT_DATA' final='true' static='true' value='&quot;suggest_intent_data&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_INTENT_DATA_ID' final='true' static='true' value='&quot;suggest_intent_data_id&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_QUERY' final='true' static='true' value='&quot;suggest_intent_query&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_TEXT_1' final='true' static='true' value='&quot;suggest_text_1&quot;' type='java.lang.String'/><field name='SUGGEST_COLUMN_TEXT_2' final='true' static='true' value='&quot;suggest_text_2&quot;' type='java.lang.String'/><field name='SUGGEST_MIME_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/vnd.android.search.suggest&quot;' type='java.lang.String'/><field name='SUGGEST_URI_PATH_QUERY' final='true' static='true' value='&quot;search_suggest_query&quot;' type='java.lang.String'/><field api_added='4' name='EXTRA_DATA_KEY' final='true' static='true' value='&quot;intent_extra_data_key&quot;' type='java.lang.String'/><field api_added='4' name='INTENT_ACTION_SEARCHABLES_CHANGED' final='true' static='true' value='&quot;android.search.action.SEARCHABLES_CHANGED&quot;' type='java.lang.String'/><field api_added='4' name='INTENT_ACTION_SEARCH_SETTINGS_CHANGED' final='true' static='true' value='&quot;android.search.action.SETTINGS_CHANGED&quot;' type='java.lang.String'/><field api_added='4' name='INTENT_ACTION_WEB_SEARCH_SETTINGS' final='true' static='true' value='&quot;android.search.action.WEB_SEARCH_SETTINGS&quot;' type='java.lang.String'/><field api_added='4' name='SHORTCUT_MIME_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/vnd.android.search.suggest&quot;' type='java.lang.String'/><field api_added='4' name='SUGGEST_COLUMN_INTENT_EXTRA_DATA' final='true' static='true' value='&quot;suggest_intent_extra_data&quot;' type='java.lang.String'/><field api_added='4' name='SUGGEST_COLUMN_SHORTCUT_ID' final='true' static='true' value='&quot;suggest_shortcut_id&quot;' type='java.lang.String'/><field api_added='4' name='SUGGEST_COLUMN_SPINNER_WHILE_REFRESHING' final='true' static='true' value='&quot;suggest_spinner_while_refreshing&quot;' type='java.lang.String'/><field api_added='4' name='SUGGEST_NEVER_MAKE_SHORTCUT' final='true' static='true' value='&quot;_-1&quot;' type='java.lang.String'/><field api_added='4' name='SUGGEST_URI_PATH_SHORTCUT' final='true' static='true' value='&quot;search_suggest_shortcut&quot;' type='java.lang.String'/><field api_added='4' name='USER_QUERY' final='true' static='true' value='&quot;user_query&quot;' type='java.lang.String'/><field api_added='5' name='SUGGEST_PARAMETER_LIMIT' final='true' static='true' value='&quot;limit&quot;' type='java.lang.String'/><field api_added='8' name='CURSOR_EXTRA_KEY_IN_PROGRESS' final='true' static='true' value='&quot;in_progress&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SELECT_QUERY' final='true' static='true' value='&quot;select_query&quot;' type='java.lang.String'/><field api_added='8' name='INTENT_ACTION_GLOBAL_SEARCH' final='true' static='true' value='&quot;android.search.action.GLOBAL_SEARCH&quot;' type='java.lang.String'/><field api_added='8' name='INTENT_ACTION_SEARCH_SETTINGS' final='true' static='true' value='&quot;android.search.action.SEARCH_SETTINGS&quot;' type='java.lang.String'/><field api_added='8' name='SUGGEST_COLUMN_TEXT_2_URL' final='true' static='true' value='&quot;suggest_text_2_url&quot;' type='java.lang.String'/><method name='onCancel' deprecated='4'><parameter name='dialog' type='android.content.DialogInterface'/></method><method name='onDismiss' deprecated='4'><parameter name='dialog' type='android.content.DialogInterface'/></method><method name='setOnCancelListener'><parameter name='listener' type='android.app.SearchManager.OnCancelListener'/></method><method name='setOnDismissListener'><parameter name='listener' type='android.app.SearchManager.OnDismissListener'/></method><method name='startSearch'><parameter name='initialQuery' type='java.lang.String'/><parameter name='selectInitialQuery' type='boolean'/><parameter name='launchActivity' type='android.content.ComponentName'/><parameter name='appSearchData' type='android.os.Bundle'/><parameter name='globalSearch' type='boolean'/></method><method name='stopSearch'/><method api_added='5' name='triggerSearch'><parameter name='query' type='java.lang.String'/><parameter name='launchActivity' type='android.content.ComponentName'/><parameter name='appSearchData' type='android.os.Bundle'/></method><method api_added='8' name='getSearchableInfo' return='android.app.SearchableInfo'><parameter name='componentName' type='android.content.ComponentName'/></method><method api_added='8' name='getSearchablesInGlobalSearch' return='java.util.List&lt;android.app.SearchableInfo&gt;'/></class><class name='Service' extends='android.content.ContextWrapper' abstract='true'><implements name='android.content.ComponentCallbacks'/><constructor name='Service' type='android.app.Service'/><field api_added='5' name='START_CONTINUATION_MASK' final='true' static='true' value='15' type='int'/><field api_added='5' name='START_FLAG_REDELIVERY' final='true' static='true' value='1' type='int'/><field api_added='5' name='START_FLAG_RETRY' final='true' static='true' value='2' type='int'/><field api_added='5' name='START_NOT_STICKY' final='true' static='true' value='2' type='int'/><field api_added='5' name='START_REDELIVER_INTENT' final='true' static='true' value='3' type='int'/><field api_added='5' name='START_STICKY' final='true' static='true' value='1' type='int'/><field api_added='5' name='START_STICKY_COMPATIBILITY' final='true' static='true' value='0' type='int'/><method name='dump' visibility='protected'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='writer' type='java.io.PrintWriter'/><parameter name='args' type='java.lang.String[]'/></method><method name='getApplication' final='true' return='android.app.Application'/><method name='onBind' abstract='true' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method name='onConfigurationChanged'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='onCreate'/><method name='onDestroy'/><method name='onLowMemory'/><method name='onRebind'><parameter name='intent' type='android.content.Intent'/></method><method name='onStart' deprecated='5'><parameter name='intent' type='android.content.Intent'/><parameter name='startId' type='int'/></method><method name='onUnbind' return='boolean'><parameter name='intent' type='android.content.Intent'/></method><method name='setForeground' final='true' deprecated='5'><parameter name='isForeground' type='boolean'/></method><method name='stopSelf' final='true'/><method name='stopSelf' final='true'><parameter name='startId' type='int'/></method><method name='stopSelfResult' final='true' return='boolean'><parameter name='startId' type='int'/></method><method api_added='5' name='onStartCommand' return='int'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/><parameter name='startId' type='int'/></method><method api_added='5' name='startForeground' final='true'><parameter name='id' type='int'/><parameter name='notification' type='android.app.Notification'/></method><method api_added='5' name='stopForeground' final='true'><parameter name='removeNotification' type='boolean'/></method></class><class name='TabActivity' extends='android.app.ActivityGroup'><constructor name='TabActivity' type='android.app.TabActivity'/><method name='getTabHost' return='android.widget.TabHost'/><method name='getTabWidget' return='android.widget.TabWidget'/><method name='setDefaultTab'><parameter name='tag' type='java.lang.String'/></method><method name='setDefaultTab'><parameter name='index' type='int'/></method></class><class name='TimePickerDialog' extends='android.app.AlertDialog'><implements name='android.content.DialogInterface.OnClickListener'/><implements name='android.widget.TimePicker.OnTimeChangedListener'/><constructor name='TimePickerDialog' type='android.app.TimePickerDialog'><parameter name='context' type='android.content.Context'/><parameter name='callBack' type='android.app.TimePickerDialog.OnTimeSetListener'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/><parameter name='is24HourView' type='boolean'/></constructor><constructor name='TimePickerDialog' type='android.app.TimePickerDialog'><parameter name='context' type='android.content.Context'/><parameter name='theme' type='int'/><parameter name='callBack' type='android.app.TimePickerDialog.OnTimeSetListener'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/><parameter name='is24HourView' type='boolean'/></constructor><method name='onClick'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/></method><method name='onTimeChanged'><parameter name='view' type='android.widget.TimePicker'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/></method><method name='updateTime'><parameter name='hourOfDay' type='int'/><parameter name='minutOfHour' type='int'/></method></class><class api_added='3' name='ActivityManager.RunningAppProcessInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor api_added='3' name='ActivityManager.RunningAppProcessInfo' type='android.app.ActivityManager.RunningAppProcessInfo'/><constructor api_added='3' name='ActivityManager.RunningAppProcessInfo' type='android.app.ActivityManager.RunningAppProcessInfo'><parameter name='pProcessName' type='java.lang.String'/><parameter name='pPid' type='int'/><parameter name='pArr' type='java.lang.String[]'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='IMPORTANCE_BACKGROUND' final='true' static='true' value='400' type='int'/><field api_added='3' name='IMPORTANCE_EMPTY' final='true' static='true' value='500' type='int'/><field api_added='3' name='IMPORTANCE_FOREGROUND' final='true' static='true' value='100' type='int'/><field api_added='3' name='IMPORTANCE_SERVICE' final='true' static='true' value='300' type='int'/><field api_added='3' name='IMPORTANCE_VISIBLE' final='true' static='true' value='200' type='int'/><field api_added='3' name='importance' type='int'/><field api_added='3' name='lru' type='int'/><field api_added='3' name='pid' type='int'/><field api_added='3' name='pkgList' value='null' type='java.lang.String[]'/><field api_added='3' name='processName' type='java.lang.String'/><field api_added='5' name='REASON_PROVIDER_IN_USE' final='true' static='true' value='1' type='int'/><field api_added='5' name='REASON_SERVICE_IN_USE' final='true' static='true' value='2' type='int'/><field api_added='5' name='REASON_UNKNOWN' final='true' static='true' value='0' type='int'/><field api_added='5' name='importanceReasonCode' type='int'/><field api_added='5' name='importanceReasonComponent' type='android.content.ComponentName'/><field api_added='5' name='importanceReasonPid' type='int'/><field api_added='5' name='uid' type='int'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='IntentService' extends='android.app.Service' abstract='true'><constructor api_added='3' name='IntentService' type='android.app.IntentService'><parameter name='name' type='java.lang.String'/></constructor><method api_added='3' name='onBind' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method api_added='3' name='onHandleIntent' abstract='true' visibility='protected'><parameter name='intent' type='android.content.Intent'/></method><method api_added='5' name='setIntentRedelivery'><parameter name='enabled' type='boolean'/></method></class><class api_added='3' name='LauncherActivity.IconResizer' extends='java.lang.Object'><constructor api_added='3' name='LauncherActivity.IconResizer' type='android.app.LauncherActivity.IconResizer'/><method api_added='3' name='createIconThumbnail' return='android.graphics.drawable.Drawable'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method></class><class api_added='3' name='LauncherActivity.ListItem' extends='java.lang.Object' static='true'><constructor api_added='3' name='LauncherActivity.ListItem' type='android.app.LauncherActivity.ListItem'/><field api_added='3' name='className' type='java.lang.String'/><field api_added='3' name='extras' type='android.os.Bundle'/><field api_added='3' name='icon' type='android.graphics.drawable.Drawable'/><field api_added='3' name='label' type='java.lang.CharSequence'/><field api_added='3' name='packageName' type='java.lang.String'/><field api_added='4' name='resolveInfo' type='android.content.pm.ResolveInfo'/></class><class api_added='5' name='WallpaperManager' extends='java.lang.Object'><field api_added='7' name='ACTION_LIVE_WALLPAPER_CHOOSER' final='true' static='true' value='&quot;android.service.wallpaper.LIVE_WALLPAPER_CHOOSER&quot;' type='java.lang.String'/><field api_added='7' name='COMMAND_DROP' final='true' static='true' value='&quot;android.home.drop&quot;' type='java.lang.String'/><field api_added='7' name='COMMAND_TAP' final='true' static='true' value='&quot;android.wallpaper.tap&quot;' type='java.lang.String'/><method api_added='5' name='clear'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='clearWallpaperOffsets'><parameter name='windowToken' type='android.os.IBinder'/></method><method api_added='5' name='getDesiredMinimumHeight' return='int'/><method api_added='5' name='getDesiredMinimumWidth' return='int'/><method api_added='5' name='getDrawable' return='android.graphics.drawable.Drawable'/><method api_added='5' name='getFastDrawable' return='android.graphics.drawable.Drawable'/><method api_added='5' name='getInstance' static='true' return='android.app.WallpaperManager'><parameter name='context' type='android.content.Context'/></method><method api_added='5' name='peekDrawable' return='android.graphics.drawable.Drawable'/><method api_added='5' name='peekFastDrawable' return='android.graphics.drawable.Drawable'/><method api_added='5' name='setBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='setResource'><parameter name='resid' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='setStream'><parameter name='data' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='setWallpaperOffsets'><parameter name='windowToken' type='android.os.IBinder'/><parameter name='xOffset' type='float'/><parameter name='yOffset' type='float'/></method><method api_added='5' name='suggestDesiredDimensions'><parameter name='minimumWidth' type='int'/><parameter name='minimumHeight' type='int'/></method><method api_added='7' name='getWallpaperInfo' return='android.app.WallpaperInfo'/><method api_added='7' name='sendWallpaperCommand'><parameter name='windowToken' type='android.os.IBinder'/><parameter name='action' type='java.lang.String'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='extras' type='android.os.Bundle'/></method><method api_added='7' name='setWallpaperOffsetSteps'><parameter name='xStep' type='float'/><parameter name='yStep' type='float'/></method></class><class api_added='7' name='WallpaperInfo' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='7' name='WallpaperInfo' type='android.app.WallpaperInfo'><parameter name='context' type='android.content.Context'/><parameter name='service' type='android.content.pm.ResolveInfo'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></constructor><field api_added='7' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='7' name='describeContents' return='int'/><method api_added='7' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method api_added='7' name='getComponent' return='android.content.ComponentName'/><method api_added='7' name='getPackageName' return='java.lang.String'/><method api_added='7' name='getServiceInfo' return='android.content.pm.ServiceInfo'/><method api_added='7' name='getServiceName' return='java.lang.String'/><method api_added='7' name='getSettingsActivity' return='java.lang.String'/><method api_added='7' name='loadAuthor' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method api_added='7' name='loadDescription' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method api_added='7' name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='7' name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='7' name='loadThumbnail' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='7' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='SearchableInfo' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='8' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='8' name='autoUrlDetect' return='boolean'/><method api_added='8' name='describeContents' return='int'/><method api_added='8' name='getHintId' return='int'/><method api_added='8' name='getImeOptions' return='int'/><method api_added='8' name='getInputType' return='int'/><method api_added='8' name='getSearchActivity' return='android.content.ComponentName'/><method api_added='8' name='getSettingsDescriptionId' return='int'/><method api_added='8' name='getSuggestAuthority' return='java.lang.String'/><method api_added='8' name='getSuggestIntentAction' return='java.lang.String'/><method api_added='8' name='getSuggestIntentData' return='java.lang.String'/><method api_added='8' name='getSuggestPackage' return='java.lang.String'/><method api_added='8' name='getSuggestPath' return='java.lang.String'/><method api_added='8' name='getSuggestSelection' return='java.lang.String'/><method api_added='8' name='getSuggestThreshold' return='int'/><method api_added='8' name='getVoiceLanguageId' return='int'/><method api_added='8' name='getVoiceLanguageModeId' return='int'/><method api_added='8' name='getVoiceMaxResults' return='int'/><method api_added='8' name='getVoicePromptTextId' return='int'/><method api_added='8' name='getVoiceSearchEnabled' return='boolean'/><method api_added='8' name='getVoiceSearchLaunchRecognizer' return='boolean'/><method api_added='8' name='getVoiceSearchLaunchWebSearch' return='boolean'/><method api_added='8' name='queryAfterZeroResults' return='boolean'/><method api_added='8' name='shouldIncludeInGlobalSearch' return='boolean'/><method api_added='8' name='shouldRewriteQueryFromData' return='boolean'/><method api_added='8' name='shouldRewriteQueryFromText' return='boolean'/><method api_added='8' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='UiModeManager' extends='java.lang.Object'><field api_added='8' name='ACTION_ENTER_CAR_MODE' static='true' type='java.lang.String'/><field api_added='8' name='ACTION_ENTER_DESK_MODE' static='true' type='java.lang.String'/><field api_added='8' name='ACTION_EXIT_CAR_MODE' static='true' type='java.lang.String'/><field api_added='8' name='ACTION_EXIT_DESK_MODE' static='true' type='java.lang.String'/><field api_added='8' name='DISABLE_CAR_MODE_GO_HOME' final='true' static='true' value='1' type='int'/><field api_added='8' name='ENABLE_CAR_MODE_GO_CAR_HOME' final='true' static='true' value='1' type='int'/><field api_added='8' name='MODE_NIGHT_AUTO' final='true' static='true' value='0' type='int'/><field api_added='8' name='MODE_NIGHT_NO' final='true' static='true' value='1' type='int'/><field api_added='8' name='MODE_NIGHT_YES' final='true' static='true' value='2' type='int'/><method api_added='8' name='disableCarMode'><parameter name='flags' type='int'/></method><method api_added='8' name='enableCarMode'><parameter name='flags' type='int'/></method><method api_added='8' name='getCurrentModeType' return='int'/><method api_added='8' name='getNightMode' return='int'/><method api_added='8' name='setNightMode'><parameter name='mode' type='int'/></method></class><interface name='DatePickerDialog.OnDateSetListener' abstract='true' static='true'><method name='onDateSet' abstract='true'><parameter name='view' type='android.widget.DatePicker'/><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></method></interface><interface name='KeyguardManager.OnKeyguardExitResult' abstract='true' static='true'><method name='onKeyguardExitResult' abstract='true'><parameter name='success' type='boolean'/></method></interface><interface name='PendingIntent.OnFinished' abstract='true' static='true'><method name='onSendFinished' abstract='true'><parameter name='pendingIntent' type='android.app.PendingIntent'/><parameter name='intent' type='android.content.Intent'/><parameter name='resultCode' type='int'/><parameter name='resultData' type='java.lang.String'/><parameter name='resultExtras' type='android.os.Bundle'/></method></interface><interface name='SearchManager.OnCancelListener' abstract='true' static='true'><method name='onCancel' abstract='true'/></interface><interface name='SearchManager.OnDismissListener' abstract='true' static='true'><method name='onDismiss' abstract='true'/></interface><interface name='TimePickerDialog.OnTimeSetListener' abstract='true' static='true'><method name='onTimeSet' abstract='true'><parameter name='view' type='android.widget.TimePicker'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/></method></interface></package><package name='android.content'><class name='ActivityNotFoundException' extends='java.lang.RuntimeException'><constructor name='ActivityNotFoundException' type='android.content.ActivityNotFoundException'/><constructor name='ActivityNotFoundException' type='android.content.ActivityNotFoundException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='AsyncQueryHandler' extends='android.os.Handler' abstract='true'><constructor name='AsyncQueryHandler' type='android.content.AsyncQueryHandler'><parameter name='cr' type='android.content.ContentResolver'/></constructor><method name='cancelOperation' final='true'><parameter name='token' type='int'/></method><method name='createHandler' visibility='protected' return='android.os.Handler'><parameter name='looper' type='android.os.Looper'/></method><method name='onDeleteComplete' visibility='protected'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='result' type='int'/></method><method name='onInsertComplete' visibility='protected'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='uri' type='android.net.Uri'/></method><method name='onQueryComplete' visibility='protected'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='cursor' type='android.database.Cursor'/></method><method name='onUpdateComplete' visibility='protected'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='result' type='int'/></method><method name='startDelete' final='true'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='uri' type='android.net.Uri'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='startInsert' final='true'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='uri' type='android.net.Uri'/><parameter name='initialValues' type='android.content.ContentValues'/></method><method name='startQuery'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='orderBy' type='java.lang.String'/></method><method name='startUpdate' final='true'><parameter name='token' type='int'/><parameter name='cookie' type='java.lang.Object'/><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method></class><class name='AsyncQueryHandler.WorkerArgs' final='true' extends='java.lang.Object' static='true' visibility='protected'><constructor name='AsyncQueryHandler.WorkerArgs' type='android.content.AsyncQueryHandler.WorkerArgs' visibility='protected'/><field name='cookie' type='java.lang.Object'/><field name='handler' type='android.os.Handler'/><field name='orderBy' type='java.lang.String'/><field name='projection' value='null' type='java.lang.String[]'/><field name='result' type='java.lang.Object'/><field name='selection' type='java.lang.String'/><field name='selectionArgs' value='null' type='java.lang.String[]'/><field name='uri' type='android.net.Uri'/><field name='values' type='android.content.ContentValues'/></class><class name='AsyncQueryHandler.WorkerHandler' extends='android.os.Handler' visibility='protected'><constructor name='AsyncQueryHandler.WorkerHandler' type='android.content.AsyncQueryHandler.WorkerHandler'><parameter name='looper' type='android.os.Looper'/></constructor></class><class name='BroadcastReceiver' extends='java.lang.Object' abstract='true'><constructor name='BroadcastReceiver' type='android.content.BroadcastReceiver'/><method name='abortBroadcast' final='true'/><method name='clearAbortBroadcast' final='true'/><method name='getAbortBroadcast' final='true' return='boolean'/><method name='getDebugUnregister' final='true' return='boolean'/><method name='getResultCode' final='true' return='int'/><method name='getResultData' final='true' return='java.lang.String'/><method name='getResultExtras' final='true' return='android.os.Bundle'><parameter name='makeMap' type='boolean'/></method><method name='onReceive' abstract='true'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method name='setDebugUnregister' final='true'><parameter name='debug' type='boolean'/></method><method name='setOrderedHint' final='true'><parameter name='isOrdered' type='boolean'/></method><method name='setResult' final='true'><parameter name='code' type='int'/><parameter name='data' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/></method><method name='setResultCode' final='true'><parameter name='code' type='int'/></method><method name='setResultData' final='true'><parameter name='data' type='java.lang.String'/></method><method name='setResultExtras' final='true'><parameter name='extras' type='android.os.Bundle'/></method><method api_added='3' name='peekService' return='android.os.IBinder'><parameter name='myContext' type='android.content.Context'/><parameter name='service' type='android.content.Intent'/></method><method api_added='5' name='isInitialStickyBroadcast' final='true' return='boolean'/><method api_added='5' name='isOrderedBroadcast' final='true' return='boolean'/></class><class name='ComponentName' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><implements name='java.lang.Comparable'/><implements name='java.lang.Cloneable'/><constructor name='ComponentName' type='android.content.ComponentName'><parameter name='pkg' type='java.lang.String'/><parameter name='cls' type='java.lang.String'/></constructor><constructor name='ComponentName' type='android.content.ComponentName'><parameter name='pkg' type='android.content.Context'/><parameter name='cls' type='java.lang.String'/></constructor><constructor name='ComponentName' type='android.content.ComponentName'><parameter name='pkg' type='android.content.Context'/><parameter name='cls' type='java.lang.Class&lt;?&gt;'/></constructor><constructor name='ComponentName' type='android.content.ComponentName'><parameter name='in' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='describeContents' return='int'/><method name='flattenToShortString' return='java.lang.String'/><method name='flattenToString' return='java.lang.String'/><method name='getClassName' return='java.lang.String'/><method name='getPackageName' return='java.lang.String'/><method name='getShortClassName' return='java.lang.String'/><method name='readFromParcel' static='true' return='android.content.ComponentName'><parameter name='in' type='android.os.Parcel'/></method><method name='toShortString' return='java.lang.String'/><method name='unflattenFromString' static='true' return='android.content.ComponentName'><parameter name='str' type='java.lang.String'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method name='writeToParcel' static='true'><parameter name='c' type='android.content.ComponentName'/><parameter name='out' type='android.os.Parcel'/></method><method api_added='4' name='compareTo' return='int'><parameter name='that' type='android.content.ComponentName'/></method><method api_added='8' name='clone' return='android.content.ComponentName'/></class><class name='ContentProvider' extends='java.lang.Object' abstract='true'><implements name='android.content.ComponentCallbacks'/><constructor name='ContentProvider' type='android.content.ContentProvider'/><method name='attachInfo'><parameter name='context' type='android.content.Context'/><parameter name='info' type='android.content.pm.ProviderInfo'/></method><method name='bulkInsert' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues[]'/></method><method name='delete' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='getContext' final='true' return='android.content.Context'/><method name='getReadPermission' final='true' return='java.lang.String'/><method name='getType' abstract='true' return='java.lang.String'><parameter name='uri' type='android.net.Uri'/></method><method name='getWritePermission' final='true' return='java.lang.String'/><method name='insert' abstract='true' return='android.net.Uri'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></method><method name='isTemporary' visibility='protected' return='boolean'/><method name='onConfigurationChanged'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='onCreate' abstract='true' return='boolean'/><method name='onLowMemory'/><method name='openFile' return='android.os.ParcelFileDescriptor'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openFileHelper' final='true' visibility='protected' return='android.os.ParcelFileDescriptor'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='query' abstract='true' return='android.database.Cursor'><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/></method><method name='setReadPermission' final='true' visibility='protected'><parameter name='permission' type='java.lang.String'/></method><method name='setWritePermission' final='true' visibility='protected'><parameter name='permission' type='java.lang.String'/></method><method name='update' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method api_added='3' name='openAssetFile' return='android.content.res.AssetFileDescriptor'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method api_added='4' name='getPathPermissions' final='true' return='android.content.pm.PathPermission[]'/><method api_added='4' name='setPathPermissions' final='true' visibility='protected'><parameter name='permissions' type='android.content.pm.PathPermission[]'/></method><method api_added='5' name='applyBatch' return='android.content.ContentProviderResult[]'><parameter name='operations' type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;'/><exception name='OperationApplicationException' type='android.content.OperationApplicationException'/></method></class><class name='ContentQueryMap' extends='java.util.Observable'><constructor name='ContentQueryMap' type='android.content.ContentQueryMap'><parameter name='cursor' type='android.database.Cursor'/><parameter name='columnNameOfKey' type='java.lang.String'/><parameter name='keepUpdated' type='boolean'/><parameter name='handlerForUpdateNotifications' type='android.os.Handler'/></constructor><method name='close' synchronized='true'/><method name='getRows' synchronized='true' return='java.util.Map&lt;java.lang.String, android.content.ContentValues&gt;'/><method name='getValues' synchronized='true' return='android.content.ContentValues'><parameter name='rowName' type='java.lang.String'/></method><method name='requery'/><method name='setKeepUpdated'><parameter name='keepUpdated' type='boolean'/></method></class><class name='ContentResolver' extends='java.lang.Object' abstract='true'><constructor name='ContentResolver' type='android.content.ContentResolver'><parameter name='context' type='android.content.Context'/></constructor><field name='CURSOR_DIR_BASE_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir&quot;' type='java.lang.String'/><field name='CURSOR_ITEM_BASE_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item&quot;' type='java.lang.String'/><field name='SCHEME_ANDROID_RESOURCE' final='true' static='true' value='&quot;android.resource&quot;' type='java.lang.String'/><field name='SCHEME_CONTENT' final='true' static='true' value='&quot;content&quot;' type='java.lang.String'/><field name='SCHEME_FILE' final='true' static='true' value='&quot;file&quot;' type='java.lang.String'/><field name='SYNC_EXTRAS_ACCOUNT' final='true' static='true' value='&quot;account&quot;' type='java.lang.String' deprecated='5'/><field name='SYNC_EXTRAS_DISCARD_LOCAL_DELETIONS' final='true' static='true' value='&quot;discard_deletions&quot;' type='java.lang.String'/><field name='SYNC_EXTRAS_EXPEDITED' final='true' static='true' value='&quot;expedited&quot;' type='java.lang.String'/><field name='SYNC_EXTRAS_FORCE' final='true' static='true' value='&quot;force&quot;' type='java.lang.String' deprecated='5'/><field name='SYNC_EXTRAS_OVERRIDE_TOO_MANY_DELETIONS' final='true' static='true' value='&quot;deletions_override&quot;' type='java.lang.String'/><field name='SYNC_EXTRAS_UPLOAD' final='true' static='true' value='&quot;upload&quot;' type='java.lang.String'/><field api_added='5' name='SYNC_EXTRAS_INITIALIZE' final='true' static='true' value='&quot;initialize&quot;' type='java.lang.String'/><field api_added='5' name='SYNC_EXTRAS_MANUAL' final='true' static='true' value='&quot;force&quot;' type='java.lang.String'/><field api_added='8' name='SYNC_EXTRAS_DO_NOT_RETRY' final='true' static='true' value='&quot;do_not_retry&quot;' type='java.lang.String'/><field api_added='8' name='SYNC_EXTRAS_IGNORE_BACKOFF' final='true' static='true' value='&quot;ignore_backoff&quot;' type='java.lang.String'/><field api_added='8' name='SYNC_EXTRAS_IGNORE_SETTINGS' final='true' static='true' value='&quot;ignore_settings&quot;' type='java.lang.String'/><field api_added='8' name='SYNC_OBSERVER_TYPE_ACTIVE' final='true' static='true' value='4' type='int'/><field api_added='8' name='SYNC_OBSERVER_TYPE_PENDING' final='true' static='true' value='2' type='int'/><field api_added='8' name='SYNC_OBSERVER_TYPE_SETTINGS' final='true' static='true' value='1' type='int'/><method name='bulkInsert' final='true' return='int'><parameter name='url' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues[]'/></method><method name='cancelSync' deprecated='5'><parameter name='uri' type='android.net.Uri'/></method><method name='delete' final='true' return='int'><parameter name='url' type='android.net.Uri'/><parameter name='where' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='getType' final='true' return='java.lang.String'><parameter name='url' type='android.net.Uri'/></method><method name='insert' final='true' return='android.net.Uri'><parameter name='url' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></method><method name='notifyChange'><parameter name='uri' type='android.net.Uri'/><parameter name='observer' type='android.database.ContentObserver'/></method><method name='notifyChange'><parameter name='uri' type='android.net.Uri'/><parameter name='observer' type='android.database.ContentObserver'/><parameter name='syncToNetwork' type='boolean'/></method><method name='openFileDescriptor' final='true' return='android.os.ParcelFileDescriptor'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openInputStream' final='true' return='java.io.InputStream'><parameter name='uri' type='android.net.Uri'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openOutputStream' final='true' return='java.io.OutputStream'><parameter name='uri' type='android.net.Uri'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='query' final='true' return='android.database.Cursor'><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/></method><method name='registerContentObserver' final='true'><parameter name='uri' type='android.net.Uri'/><parameter name='notifyForDescendents' type='boolean'/><parameter name='observer' type='android.database.ContentObserver'/></method><method name='startSync' deprecated='5'><parameter name='uri' type='android.net.Uri'/><parameter name='extras' type='android.os.Bundle'/></method><method name='unregisterContentObserver' final='true'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='update' final='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='where' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='validateSyncExtrasBundle' static='true'><parameter name='extras' type='android.os.Bundle'/></method><method api_added='3' name='openAssetFileDescriptor' final='true' return='android.content.res.AssetFileDescriptor'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method api_added='3' name='openOutputStream' final='true' return='java.io.OutputStream'><parameter name='uri' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method api_added='5' name='acquireContentProviderClient' final='true' return='android.content.ContentProviderClient'><parameter name='uri' type='android.net.Uri'/></method><method api_added='5' name='acquireContentProviderClient' final='true' return='android.content.ContentProviderClient'><parameter name='name' type='java.lang.String'/></method><method api_added='5' name='addStatusChangeListener' static='true' return='java.lang.Object'><parameter name='mask' type='int'/><parameter name='callback' type='android.content.SyncStatusObserver'/></method><method api_added='5' name='applyBatch' return='android.content.ContentProviderResult[]'><parameter name='authority' type='java.lang.String'/><parameter name='operations' type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;'/><exception name='OperationApplicationException' type='android.content.OperationApplicationException'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='cancelSync' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='5' name='getIsSyncable' static='true' return='int'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='5' name='getMasterSyncAutomatically' static='true' return='boolean'/><method api_added='5' name='getSyncAdapterTypes' static='true' return='android.content.SyncAdapterType[]'/><method api_added='5' name='getSyncAutomatically' static='true' return='boolean'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='5' name='isSyncActive' static='true' return='boolean'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='5' name='isSyncPending' static='true' return='boolean'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='5' name='removeStatusChangeListener' static='true'><parameter name='handle' type='java.lang.Object'/></method><method api_added='5' name='requestSync' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/></method><method api_added='5' name='setIsSyncable' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='syncable' type='int'/></method><method api_added='5' name='setMasterSyncAutomatically' static='true'><parameter name='sync' type='boolean'/></method><method api_added='5' name='setSyncAutomatically' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='sync' type='boolean'/></method><method api_added='8' name='addPeriodicSync' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/><parameter name='pollFrequency' type='long'/></method><method api_added='8' name='getCurrentSync' static='true' return='android.content.SyncInfo'/><method api_added='8' name='getPeriodicSyncs' static='true' return='java.util.List&lt;android.content.PeriodicSync&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/></method><method api_added='8' name='removePeriodicSync' static='true'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/></method></class><class name='ContentUris' extends='java.lang.Object'><constructor name='ContentUris' type='android.content.ContentUris'/><method name='appendId' static='true' return='android.net.Uri.Builder'><parameter name='builder' type='android.net.Uri.Builder'/><parameter name='id' type='long'/></method><method name='parseId' static='true' return='long'><parameter name='contentUri' type='android.net.Uri'/></method><method name='withAppendedId' static='true' return='android.net.Uri'><parameter name='contentUri' type='android.net.Uri'/><parameter name='id' type='long'/></method></class><class name='ContentValues' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='ContentValues' type='android.content.ContentValues'/><constructor name='ContentValues' type='android.content.ContentValues'><parameter name='size' type='int'/></constructor><constructor name='ContentValues' type='android.content.ContentValues'><parameter name='from' type='android.content.ContentValues'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='TAG' final='true' static='true' value='&quot;ContentValues&quot;' type='java.lang.String'/><method name='clear'/><method name='containsKey' return='boolean'><parameter name='key' type='java.lang.String'/></method><method name='describeContents' return='int'/><method name='get' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method><method name='getAsBoolean' return='java.lang.Boolean'><parameter name='key' type='java.lang.String'/></method><method name='getAsByte' return='java.lang.Byte'><parameter name='key' type='java.lang.String'/></method><method name='getAsByteArray' return='byte[]'><parameter name='key' type='java.lang.String'/></method><method name='getAsDouble' return='java.lang.Double'><parameter name='key' type='java.lang.String'/></method><method name='getAsFloat' return='java.lang.Float'><parameter name='key' type='java.lang.String'/></method><method name='getAsInteger' return='java.lang.Integer'><parameter name='key' type='java.lang.String'/></method><method name='getAsLong' return='java.lang.Long'><parameter name='key' type='java.lang.String'/></method><method name='getAsShort' return='java.lang.Short'><parameter name='key' type='java.lang.String'/></method><method name='getAsString' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Byte'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Short'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Integer'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Long'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Float'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Double'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Boolean'/></method><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='byte[]'/></method><method name='putAll'><parameter name='other' type='android.content.ContentValues'/></method><method name='putNull'><parameter name='key' type='java.lang.String'/></method><method name='remove'><parameter name='key' type='java.lang.String'/></method><method name='size' return='int'/><method name='valueSet' return='java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String, java.lang.Object&gt;&gt;'/><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Context' extends='java.lang.Object' abstract='true'><constructor name='Context' type='android.content.Context'/><field name='ACTIVITY_SERVICE' final='true' static='true' value='&quot;activity&quot;' type='java.lang.String'/><field name='ALARM_SERVICE' final='true' static='true' value='&quot;alarm&quot;' type='java.lang.String'/><field name='AUDIO_SERVICE' final='true' static='true' value='&quot;audio&quot;' type='java.lang.String'/><field name='BIND_AUTO_CREATE' final='true' static='true' value='1' type='int'/><field name='BIND_DEBUG_UNBIND' final='true' static='true' value='2' type='int'/><field name='CLIPBOARD_SERVICE' final='true' static='true' value='&quot;clipboard&quot;' type='java.lang.String'/><field name='CONNECTIVITY_SERVICE' final='true' static='true' value='&quot;connectivity&quot;' type='java.lang.String'/><field name='CONTEXT_IGNORE_SECURITY' final='true' static='true' value='2' type='int'/><field name='CONTEXT_INCLUDE_CODE' final='true' static='true' value='1' type='int'/><field name='KEYGUARD_SERVICE' final='true' static='true' value='&quot;keyguard&quot;' type='java.lang.String'/><field name='LAYOUT_INFLATER_SERVICE' final='true' static='true' value='&quot;layout_inflater&quot;' type='java.lang.String'/><field name='LOCATION_SERVICE' final='true' static='true' value='&quot;location&quot;' type='java.lang.String'/><field name='MODE_APPEND' final='true' static='true' value='32768' type='int'/><field name='MODE_PRIVATE' final='true' static='true' value='0' type='int'/><field name='MODE_WORLD_READABLE' final='true' static='true' value='1' type='int'/><field name='MODE_WORLD_WRITEABLE' final='true' static='true' value='2' type='int'/><field name='NOTIFICATION_SERVICE' final='true' static='true' value='&quot;notification&quot;' type='java.lang.String'/><field name='POWER_SERVICE' final='true' static='true' value='&quot;power&quot;' type='java.lang.String'/><field name='SEARCH_SERVICE' final='true' static='true' value='&quot;search&quot;' type='java.lang.String'/><field name='SENSOR_SERVICE' final='true' static='true' value='&quot;sensor&quot;' type='java.lang.String'/><field name='TELEPHONY_SERVICE' final='true' static='true' value='&quot;phone&quot;' type='java.lang.String'/><field name='VIBRATOR_SERVICE' final='true' static='true' value='&quot;vibrator&quot;' type='java.lang.String'/><field name='WALLPAPER_SERVICE' final='true' static='true' value='&quot;wallpaper&quot;' type='java.lang.String'/><field name='WIFI_SERVICE' final='true' static='true' value='&quot;wifi&quot;' type='java.lang.String'/><field name='WINDOW_SERVICE' final='true' static='true' value='&quot;window&quot;' type='java.lang.String'/><field api_added='3' name='INPUT_METHOD_SERVICE' final='true' static='true' value='&quot;input_method&quot;' type='java.lang.String'/><field api_added='4' name='ACCESSIBILITY_SERVICE' final='true' static='true' value='&quot;accessibility&quot;' type='java.lang.String'/><field api_added='4' name='CONTEXT_RESTRICTED' final='true' static='true' value='4' type='int'/><field api_added='5' name='ACCOUNT_SERVICE' final='true' static='true' value='&quot;account&quot;' type='java.lang.String'/><field api_added='8' name='BIND_NOT_FOREGROUND' final='true' static='true' value='4' type='int'/><field api_added='8' name='DEVICE_POLICY_SERVICE' final='true' static='true' value='&quot;device_policy&quot;' type='java.lang.String'/><field api_added='8' name='DROPBOX_SERVICE' final='true' static='true' value='&quot;dropbox&quot;' type='java.lang.String'/><field api_added='8' name='UI_MODE_SERVICE' final='true' static='true' value='&quot;uimode&quot;' type='java.lang.String'/><method name='bindService' abstract='true' return='boolean'><parameter name='service' type='android.content.Intent'/><parameter name='conn' type='android.content.ServiceConnection'/><parameter name='flags' type='int'/></method><method name='checkCallingOrSelfPermission' abstract='true' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingOrSelfUriPermission' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkCallingPermission' abstract='true' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingUriPermission' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkPermission' abstract='true' return='int'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/></method><method name='checkUriPermission' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='checkUriPermission' abstract='true' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='clearWallpaper' abstract='true' deprecated='5'><exception name='IOException' type='java.io.IOException'/></method><method name='createPackageContext' abstract='true' return='android.content.Context'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='databaseList' abstract='true' return='java.lang.String[]'/><method name='deleteDatabase' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='deleteFile' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='enforceCallingOrSelfPermission' abstract='true'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingOrSelfUriPermission' abstract='true'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingPermission' abstract='true'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingUriPermission' abstract='true'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforcePermission' abstract='true'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission' abstract='true'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission' abstract='true'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='fileList' abstract='true' return='java.lang.String[]'/><method name='getApplicationContext' abstract='true' return='android.content.Context'/><method name='getAssets' abstract='true' return='android.content.res.AssetManager'/><method name='getCacheDir' abstract='true' return='java.io.File'/><method name='getClassLoader' abstract='true' return='java.lang.ClassLoader'/><method name='getContentResolver' abstract='true' return='android.content.ContentResolver'/><method name='getDatabasePath' abstract='true' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getDir' abstract='true' return='java.io.File'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getFileStreamPath' abstract='true' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getFilesDir' abstract='true' return='java.io.File'/><method name='getMainLooper' abstract='true' return='android.os.Looper'/><method name='getPackageManager' abstract='true' return='android.content.pm.PackageManager'/><method name='getPackageName' abstract='true' return='java.lang.String'/><method name='getResources' abstract='true' return='android.content.res.Resources'/><method name='getSharedPreferences' abstract='true' return='android.content.SharedPreferences'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getString' final='true' return='java.lang.String'><parameter name='resId' type='int'/></method><method name='getString' final='true' return='java.lang.String'><parameter name='resId' type='int'/><parameter name='formatArgs' type='java.lang.Object...'/></method><method name='getSystemService' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getText' final='true' return='java.lang.CharSequence'><parameter name='resId' type='int'/></method><method name='getTheme' abstract='true' return='android.content.res.Resources.Theme'/><method name='getWallpaper' abstract='true' deprecated='5' return='android.graphics.drawable.Drawable'/><method name='getWallpaperDesiredMinimumHeight' abstract='true' deprecated='5' return='int'/><method name='getWallpaperDesiredMinimumWidth' abstract='true' deprecated='5' return='int'/><method name='grantUriPermission' abstract='true'><parameter name='toPackage' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='obtainStyledAttributes' final='true' return='android.content.res.TypedArray'><parameter name='attrs' type='int[]'/></method><method name='obtainStyledAttributes' final='true' return='android.content.res.TypedArray'><parameter name='resid' type='int'/><parameter name='attrs' type='int[]'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='obtainStyledAttributes' final='true' return='android.content.res.TypedArray'><parameter name='set' type='android.util.AttributeSet'/><parameter name='attrs' type='int[]'/></method><method name='obtainStyledAttributes' final='true' return='android.content.res.TypedArray'><parameter name='set' type='android.util.AttributeSet'/><parameter name='attrs' type='int[]'/><parameter name='defStyleAttr' type='int'/><parameter name='defStyleRes' type='int'/></method><method name='openFileInput' abstract='true' return='java.io.FileInputStream'><parameter name='name' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openFileOutput' abstract='true' return='java.io.FileOutputStream'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openOrCreateDatabase' abstract='true' return='android.database.sqlite.SQLiteDatabase'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='peekWallpaper' abstract='true' deprecated='5' return='android.graphics.drawable.Drawable'/><method name='registerReceiver' abstract='true' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/></method><method name='registerReceiver' abstract='true' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/><parameter name='broadcastPermission' type='java.lang.String'/><parameter name='scheduler' type='android.os.Handler'/></method><method name='removeStickyBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/></method><method name='revokeUriPermission' abstract='true'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='sendBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/></method><method name='sendBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method name='sendStickyBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/></method><method name='setTheme' abstract='true'><parameter name='resid' type='int'/></method><method name='setWallpaper' abstract='true' deprecated='5'><parameter name='bitmap' type='android.graphics.Bitmap'/><exception name='IOException' type='java.io.IOException'/></method><method name='setWallpaper' abstract='true' deprecated='5'><parameter name='data' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='startActivity' abstract='true'><parameter name='intent' type='android.content.Intent'/></method><method name='startInstrumentation' abstract='true' return='boolean'><parameter name='className' type='android.content.ComponentName'/><parameter name='profileFile' type='java.lang.String'/><parameter name='arguments' type='android.os.Bundle'/></method><method name='startService' abstract='true' return='android.content.ComponentName'><parameter name='service' type='android.content.Intent'/></method><method name='stopService' abstract='true' return='boolean'><parameter name='service' type='android.content.Intent'/></method><method name='unbindService' abstract='true'><parameter name='conn' type='android.content.ServiceConnection'/></method><method name='unregisterReceiver' abstract='true'><parameter name='receiver' type='android.content.BroadcastReceiver'/></method><method api_added='4' name='getApplicationInfo' abstract='true' return='android.content.pm.ApplicationInfo'/><method api_added='4' name='isRestricted' return='boolean'/><method api_added='5' name='sendStickyOrderedBroadcast' abstract='true'><parameter name='intent' type='android.content.Intent'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method api_added='5' name='startIntentSender' abstract='true'><parameter name='intent' type='android.content.IntentSender'/><parameter name='fillInIntent' type='android.content.Intent'/><parameter name='flagsMask' type='int'/><parameter name='flagsValues' type='int'/><parameter name='extraFlags' type='int'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='8' name='getExternalCacheDir' abstract='true' return='java.io.File'/><method api_added='8' name='getExternalFilesDir' abstract='true' return='java.io.File'><parameter name='type' type='java.lang.String'/></method><method api_added='8' name='getPackageCodePath' abstract='true' return='java.lang.String'/><method api_added='8' name='getPackageResourcePath' abstract='true' return='java.lang.String'/></class><class name='ContextWrapper' extends='android.content.Context'><constructor name='ContextWrapper' type='android.content.ContextWrapper'><parameter name='base' type='android.content.Context'/></constructor><method name='attachBaseContext' visibility='protected'><parameter name='base' type='android.content.Context'/></method><method name='bindService' return='boolean'><parameter name='service' type='android.content.Intent'/><parameter name='conn' type='android.content.ServiceConnection'/><parameter name='flags' type='int'/></method><method name='checkCallingOrSelfPermission' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingOrSelfUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkCallingPermission' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkPermission' return='int'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/></method><method name='checkUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='checkUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='clearWallpaper'><exception name='IOException' type='java.io.IOException'/></method><method name='createPackageContext' return='android.content.Context'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='databaseList' return='java.lang.String[]'/><method name='deleteDatabase' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='deleteFile' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='enforceCallingOrSelfPermission'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingOrSelfUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingPermission'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforcePermission'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='fileList' return='java.lang.String[]'/><method name='getApplicationContext' return='android.content.Context'/><method name='getAssets' return='android.content.res.AssetManager'/><method name='getBaseContext' return='android.content.Context'/><method name='getCacheDir' return='java.io.File'/><method name='getClassLoader' return='java.lang.ClassLoader'/><method name='getContentResolver' return='android.content.ContentResolver'/><method name='getDatabasePath' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getDir' return='java.io.File'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getFileStreamPath' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getFilesDir' return='java.io.File'/><method name='getMainLooper' return='android.os.Looper'/><method name='getPackageCodePath' return='java.lang.String'/><method name='getPackageManager' return='android.content.pm.PackageManager'/><method name='getPackageName' return='java.lang.String'/><method name='getPackageResourcePath' return='java.lang.String'/><method name='getResources' return='android.content.res.Resources'/><method name='getSharedPreferences' return='android.content.SharedPreferences'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getSystemService' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getTheme' return='android.content.res.Resources.Theme'/><method name='getWallpaper' return='android.graphics.drawable.Drawable'/><method name='getWallpaperDesiredMinimumHeight' return='int'/><method name='getWallpaperDesiredMinimumWidth' return='int'/><method name='grantUriPermission'><parameter name='toPackage' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='openFileInput' return='java.io.FileInputStream'><parameter name='name' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openFileOutput' return='java.io.FileOutputStream'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openOrCreateDatabase' return='android.database.sqlite.SQLiteDatabase'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='peekWallpaper' return='android.graphics.drawable.Drawable'/><method name='registerReceiver' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/></method><method name='registerReceiver' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/><parameter name='broadcastPermission' type='java.lang.String'/><parameter name='scheduler' type='android.os.Handler'/></method><method name='removeStickyBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='revokeUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='sendBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='sendBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method name='sendStickyBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='setTheme'><parameter name='resid' type='int'/></method><method name='setWallpaper'><parameter name='bitmap' type='android.graphics.Bitmap'/><exception name='IOException' type='java.io.IOException'/></method><method name='setWallpaper'><parameter name='data' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='startActivity'><parameter name='intent' type='android.content.Intent'/></method><method name='startInstrumentation' return='boolean'><parameter name='className' type='android.content.ComponentName'/><parameter name='profileFile' type='java.lang.String'/><parameter name='arguments' type='android.os.Bundle'/></method><method name='startService' return='android.content.ComponentName'><parameter name='service' type='android.content.Intent'/></method><method name='stopService' return='boolean'><parameter name='name' type='android.content.Intent'/></method><method name='unbindService'><parameter name='conn' type='android.content.ServiceConnection'/></method><method name='unregisterReceiver'><parameter name='receiver' type='android.content.BroadcastReceiver'/></method><method api_added='4' name='getApplicationInfo' return='android.content.pm.ApplicationInfo'/><method api_added='5' name='sendStickyOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method api_added='5' name='startIntentSender'><parameter name='intent' type='android.content.IntentSender'/><parameter name='fillInIntent' type='android.content.Intent'/><parameter name='flagsMask' type='int'/><parameter name='flagsValues' type='int'/><parameter name='extraFlags' type='int'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='8' name='getExternalCacheDir' return='java.io.File'/><method api_added='8' name='getExternalFilesDir' return='java.io.File'><parameter name='type' type='java.lang.String'/></method></class><class name='Intent' extends='java.lang.Object'><implements name='android.os.Parcelable'/><implements name='java.lang.Cloneable'/><constructor name='Intent' type='android.content.Intent'/><constructor name='Intent' type='android.content.Intent'><parameter name='o' type='android.content.Intent'/></constructor><constructor name='Intent' type='android.content.Intent'><parameter name='action' type='java.lang.String'/></constructor><constructor name='Intent' type='android.content.Intent'><parameter name='action' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/></constructor><constructor name='Intent' type='android.content.Intent'><parameter name='packageContext' type='android.content.Context'/><parameter name='cls' type='java.lang.Class&lt;?&gt;'/></constructor><constructor name='Intent' type='android.content.Intent'><parameter name='action' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/><parameter name='packageContext' type='android.content.Context'/><parameter name='cls' type='java.lang.Class&lt;?&gt;'/></constructor><field name='ACTION_AIRPLANE_MODE_CHANGED' final='true' static='true' value='&quot;android.intent.action.AIRPLANE_MODE&quot;' type='java.lang.String'/><field name='ACTION_ALL_APPS' final='true' static='true' value='&quot;android.intent.action.ALL_APPS&quot;' type='java.lang.String'/><field name='ACTION_ANSWER' final='true' static='true' value='&quot;android.intent.action.ANSWER&quot;' type='java.lang.String'/><field name='ACTION_ATTACH_DATA' final='true' static='true' value='&quot;android.intent.action.ATTACH_DATA&quot;' type='java.lang.String'/><field name='ACTION_BATTERY_CHANGED' final='true' static='true' value='&quot;android.intent.action.BATTERY_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_BATTERY_LOW' final='true' static='true' value='&quot;android.intent.action.BATTERY_LOW&quot;' type='java.lang.String'/><field name='ACTION_BOOT_COMPLETED' final='true' static='true' value='&quot;android.intent.action.BOOT_COMPLETED&quot;' type='java.lang.String'/><field name='ACTION_BUG_REPORT' final='true' static='true' value='&quot;android.intent.action.BUG_REPORT&quot;' type='java.lang.String'/><field name='ACTION_CALL' final='true' static='true' value='&quot;android.intent.action.CALL&quot;' type='java.lang.String'/><field name='ACTION_CALL_BUTTON' final='true' static='true' value='&quot;android.intent.action.CALL_BUTTON&quot;' type='java.lang.String'/><field name='ACTION_CAMERA_BUTTON' final='true' static='true' value='&quot;android.intent.action.CAMERA_BUTTON&quot;' type='java.lang.String'/><field name='ACTION_CHOOSER' final='true' static='true' value='&quot;android.intent.action.CHOOSER&quot;' type='java.lang.String'/><field name='ACTION_CLOSE_SYSTEM_DIALOGS' final='true' static='true' value='&quot;android.intent.action.CLOSE_SYSTEM_DIALOGS&quot;' type='java.lang.String'/><field name='ACTION_CONFIGURATION_CHANGED' final='true' static='true' value='&quot;android.intent.action.CONFIGURATION_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_CREATE_SHORTCUT' final='true' static='true' value='&quot;android.intent.action.CREATE_SHORTCUT&quot;' type='java.lang.String'/><field name='ACTION_DATE_CHANGED' final='true' static='true' value='&quot;android.intent.action.DATE_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_DEFAULT' final='true' static='true' value='&quot;android.intent.action.VIEW&quot;' type='java.lang.String'/><field name='ACTION_DELETE' final='true' static='true' value='&quot;android.intent.action.DELETE&quot;' type='java.lang.String'/><field name='ACTION_DEVICE_STORAGE_LOW' final='true' static='true' value='&quot;android.intent.action.DEVICE_STORAGE_LOW&quot;' type='java.lang.String'/><field name='ACTION_DEVICE_STORAGE_OK' final='true' static='true' value='&quot;android.intent.action.DEVICE_STORAGE_OK&quot;' type='java.lang.String'/><field name='ACTION_DIAL' final='true' static='true' value='&quot;android.intent.action.DIAL&quot;' type='java.lang.String'/><field name='ACTION_EDIT' final='true' static='true' value='&quot;android.intent.action.EDIT&quot;' type='java.lang.String'/><field name='ACTION_FACTORY_TEST' final='true' static='true' value='&quot;android.intent.action.FACTORY_TEST&quot;' type='java.lang.String'/><field name='ACTION_GET_CONTENT' final='true' static='true' value='&quot;android.intent.action.GET_CONTENT&quot;' type='java.lang.String'/><field name='ACTION_GTALK_SERVICE_CONNECTED' final='true' static='true' value='&quot;android.intent.action.GTALK_CONNECTED&quot;' type='java.lang.String'/><field name='ACTION_GTALK_SERVICE_DISCONNECTED' final='true' static='true' value='&quot;android.intent.action.GTALK_DISCONNECTED&quot;' type='java.lang.String'/><field name='ACTION_HEADSET_PLUG' final='true' static='true' value='&quot;android.intent.action.HEADSET_PLUG&quot;' type='java.lang.String'/><field name='ACTION_INSERT' final='true' static='true' value='&quot;android.intent.action.INSERT&quot;' type='java.lang.String'/><field name='ACTION_INSERT_OR_EDIT' final='true' static='true' value='&quot;android.intent.action.INSERT_OR_EDIT&quot;' type='java.lang.String'/><field name='ACTION_MAIN' final='true' static='true' value='&quot;android.intent.action.MAIN&quot;' type='java.lang.String'/><field name='ACTION_MANAGE_PACKAGE_STORAGE' final='true' static='true' value='&quot;android.intent.action.MANAGE_PACKAGE_STORAGE&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_BAD_REMOVAL' final='true' static='true' value='&quot;android.intent.action.MEDIA_BAD_REMOVAL&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_BUTTON' final='true' static='true' value='&quot;android.intent.action.MEDIA_BUTTON&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_EJECT' final='true' static='true' value='&quot;android.intent.action.MEDIA_EJECT&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_MOUNTED' final='true' static='true' value='&quot;android.intent.action.MEDIA_MOUNTED&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_REMOVED' final='true' static='true' value='&quot;android.intent.action.MEDIA_REMOVED&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_SCANNER_FINISHED' final='true' static='true' value='&quot;android.intent.action.MEDIA_SCANNER_FINISHED&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_SCANNER_SCAN_FILE' final='true' static='true' value='&quot;android.intent.action.MEDIA_SCANNER_SCAN_FILE&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_SCANNER_STARTED' final='true' static='true' value='&quot;android.intent.action.MEDIA_SCANNER_STARTED&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_SHARED' final='true' static='true' value='&quot;android.intent.action.MEDIA_SHARED&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_UNMOUNTABLE' final='true' static='true' value='&quot;android.intent.action.MEDIA_UNMOUNTABLE&quot;' type='java.lang.String'/><field name='ACTION_MEDIA_UNMOUNTED' final='true' static='true' value='&quot;android.intent.action.MEDIA_UNMOUNTED&quot;' type='java.lang.String'/><field name='ACTION_NEW_OUTGOING_CALL' final='true' static='true' value='&quot;android.intent.action.NEW_OUTGOING_CALL&quot;' type='java.lang.String'/><field name='ACTION_PACKAGE_ADDED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_ADDED&quot;' type='java.lang.String'/><field name='ACTION_PACKAGE_CHANGED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_PACKAGE_INSTALL' final='true' static='true' value='&quot;android.intent.action.PACKAGE_INSTALL&quot;' type='java.lang.String'/><field name='ACTION_PACKAGE_REMOVED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_REMOVED&quot;' type='java.lang.String'/><field name='ACTION_PACKAGE_RESTARTED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_RESTARTED&quot;' type='java.lang.String'/><field name='ACTION_PICK' final='true' static='true' value='&quot;android.intent.action.PICK&quot;' type='java.lang.String'/><field name='ACTION_PICK_ACTIVITY' final='true' static='true' value='&quot;android.intent.action.PICK_ACTIVITY&quot;' type='java.lang.String'/><field name='ACTION_PROVIDER_CHANGED' final='true' static='true' value='&quot;android.intent.action.PROVIDER_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_REBOOT' final='true' static='true' value='&quot;android.intent.action.REBOOT&quot;' type='java.lang.String'/><field name='ACTION_RUN' final='true' static='true' value='&quot;android.intent.action.RUN&quot;' type='java.lang.String'/><field name='ACTION_SCREEN_OFF' final='true' static='true' value='&quot;android.intent.action.SCREEN_OFF&quot;' type='java.lang.String'/><field name='ACTION_SCREEN_ON' final='true' static='true' value='&quot;android.intent.action.SCREEN_ON&quot;' type='java.lang.String'/><field name='ACTION_SEARCH' final='true' static='true' value='&quot;android.intent.action.SEARCH&quot;' type='java.lang.String'/><field name='ACTION_SEND' final='true' static='true' value='&quot;android.intent.action.SEND&quot;' type='java.lang.String'/><field name='ACTION_SENDTO' final='true' static='true' value='&quot;android.intent.action.SENDTO&quot;' type='java.lang.String'/><field name='ACTION_SET_WALLPAPER' final='true' static='true' value='&quot;android.intent.action.SET_WALLPAPER&quot;' type='java.lang.String'/><field name='ACTION_SYNC' final='true' static='true' value='&quot;android.intent.action.SYNC&quot;' type='java.lang.String'/><field name='ACTION_TIMEZONE_CHANGED' final='true' static='true' value='&quot;android.intent.action.TIMEZONE_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_TIME_CHANGED' final='true' static='true' value='&quot;android.intent.action.TIME_SET&quot;' type='java.lang.String'/><field name='ACTION_TIME_TICK' final='true' static='true' value='&quot;android.intent.action.TIME_TICK&quot;' type='java.lang.String'/><field name='ACTION_UID_REMOVED' final='true' static='true' value='&quot;android.intent.action.UID_REMOVED&quot;' type='java.lang.String'/><field name='ACTION_UMS_CONNECTED' final='true' static='true' value='&quot;android.intent.action.UMS_CONNECTED&quot;' type='java.lang.String'/><field name='ACTION_UMS_DISCONNECTED' final='true' static='true' value='&quot;android.intent.action.UMS_DISCONNECTED&quot;' type='java.lang.String'/><field name='ACTION_VIEW' final='true' static='true' value='&quot;android.intent.action.VIEW&quot;' type='java.lang.String'/><field name='ACTION_VOICE_COMMAND' final='true' static='true' value='&quot;android.intent.action.VOICE_COMMAND&quot;' type='java.lang.String'/><field name='ACTION_WALLPAPER_CHANGED' final='true' static='true' value='&quot;android.intent.action.WALLPAPER_CHANGED&quot;' type='java.lang.String'/><field name='ACTION_WEB_SEARCH' final='true' static='true' value='&quot;android.intent.action.WEB_SEARCH&quot;' type='java.lang.String'/><field name='CATEGORY_ALTERNATIVE' final='true' static='true' value='&quot;android.intent.category.ALTERNATIVE&quot;' type='java.lang.String'/><field name='CATEGORY_BROWSABLE' final='true' static='true' value='&quot;android.intent.category.BROWSABLE&quot;' type='java.lang.String'/><field name='CATEGORY_DEFAULT' final='true' static='true' value='&quot;android.intent.category.DEFAULT&quot;' type='java.lang.String'/><field name='CATEGORY_DEVELOPMENT_PREFERENCE' final='true' static='true' value='&quot;android.intent.category.DEVELOPMENT_PREFERENCE&quot;' type='java.lang.String'/><field name='CATEGORY_EMBED' final='true' static='true' value='&quot;android.intent.category.EMBED&quot;' type='java.lang.String'/><field name='CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST' final='true' static='true' value='&quot;android.intent.category.FRAMEWORK_INSTRUMENTATION_TEST&quot;' type='java.lang.String'/><field name='CATEGORY_GADGET' final='true' api_removed='3' static='true' value='&quot;android.intent.category.GADGET&quot;' type='java.lang.String'/><field name='CATEGORY_HOME' final='true' static='true' value='&quot;android.intent.category.HOME&quot;' type='java.lang.String'/><field name='CATEGORY_LAUNCHER' final='true' static='true' value='&quot;android.intent.category.LAUNCHER&quot;' type='java.lang.String'/><field name='CATEGORY_MONKEY' final='true' static='true' value='&quot;android.intent.category.MONKEY&quot;' type='java.lang.String'/><field name='CATEGORY_OPENABLE' final='true' static='true' value='&quot;android.intent.category.OPENABLE&quot;' type='java.lang.String'/><field name='CATEGORY_PREFERENCE' final='true' static='true' value='&quot;android.intent.category.PREFERENCE&quot;' type='java.lang.String'/><field name='CATEGORY_SAMPLE_CODE' final='true' static='true' value='&quot;android.intent.category.SAMPLE_CODE&quot;' type='java.lang.String'/><field name='CATEGORY_SELECTED_ALTERNATIVE' final='true' static='true' value='&quot;android.intent.category.SELECTED_ALTERNATIVE&quot;' type='java.lang.String'/><field name='CATEGORY_TAB' final='true' static='true' value='&quot;android.intent.category.TAB&quot;' type='java.lang.String'/><field name='CATEGORY_TEST' final='true' static='true' value='&quot;android.intent.category.TEST&quot;' type='java.lang.String'/><field name='CATEGORY_UNIT_TEST' final='true' static='true' value='&quot;android.intent.category.UNIT_TEST&quot;' type='java.lang.String'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='EXTRA_ALARM_COUNT' final='true' static='true' value='&quot;android.intent.extra.ALARM_COUNT&quot;' type='java.lang.String'/><field name='EXTRA_BCC' final='true' static='true' value='&quot;android.intent.extra.BCC&quot;' type='java.lang.String'/><field name='EXTRA_CC' final='true' static='true' value='&quot;android.intent.extra.CC&quot;' type='java.lang.String'/><field name='EXTRA_DONT_KILL_APP' final='true' static='true' value='&quot;android.intent.extra.DONT_KILL_APP&quot;' type='java.lang.String'/><field name='EXTRA_EMAIL' final='true' static='true' value='&quot;android.intent.extra.EMAIL&quot;' type='java.lang.String'/><field name='EXTRA_INTENT' final='true' static='true' value='&quot;android.intent.extra.INTENT&quot;' type='java.lang.String'/><field name='EXTRA_KEY_EVENT' final='true' static='true' value='&quot;android.intent.extra.KEY_EVENT&quot;' type='java.lang.String'/><field name='EXTRA_PHONE_NUMBER' final='true' static='true' value='&quot;android.intent.extra.PHONE_NUMBER&quot;' type='java.lang.String'/><field name='EXTRA_SHORTCUT_ICON' final='true' static='true' value='&quot;android.intent.extra.shortcut.ICON&quot;' type='java.lang.String'/><field name='EXTRA_SHORTCUT_ICON_RESOURCE' final='true' static='true' value='&quot;android.intent.extra.shortcut.ICON_RESOURCE&quot;' type='java.lang.String'/><field name='EXTRA_SHORTCUT_INTENT' final='true' static='true' value='&quot;android.intent.extra.shortcut.INTENT&quot;' type='java.lang.String'/><field name='EXTRA_SHORTCUT_NAME' final='true' static='true' value='&quot;android.intent.extra.shortcut.NAME&quot;' type='java.lang.String'/><field name='EXTRA_STREAM' final='true' static='true' value='&quot;android.intent.extra.STREAM&quot;' type='java.lang.String'/><field name='EXTRA_SUBJECT' final='true' static='true' value='&quot;android.intent.extra.SUBJECT&quot;' type='java.lang.String'/><field name='EXTRA_TEMPLATE' final='true' static='true' value='&quot;android.intent.extra.TEMPLATE&quot;' type='java.lang.String'/><field name='EXTRA_TEXT' final='true' static='true' value='&quot;android.intent.extra.TEXT&quot;' type='java.lang.String'/><field name='EXTRA_TITLE' final='true' static='true' value='&quot;android.intent.extra.TITLE&quot;' type='java.lang.String'/><field name='EXTRA_UID' final='true' static='true' value='&quot;android.intent.extra.UID&quot;' type='java.lang.String'/><field name='FILL_IN_ACTION' final='true' static='true' value='1' type='int'/><field name='FILL_IN_CATEGORIES' final='true' static='true' value='4' type='int'/><field name='FILL_IN_COMPONENT' final='true' static='true' value='8' type='int'/><field name='FILL_IN_DATA' final='true' static='true' value='2' type='int'/><field name='FLAG_ACTIVITY_BROUGHT_TO_FRONT' final='true' static='true' value='4194304' type='int'/><field name='FLAG_ACTIVITY_CLEAR_TOP' final='true' static='true' value='67108864' type='int'/><field name='FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS' final='true' static='true' value='8388608' type='int'/><field name='FLAG_ACTIVITY_FORWARD_RESULT' final='true' static='true' value='33554432' type='int'/><field name='FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY' final='true' static='true' value='1048576' type='int'/><field name='FLAG_ACTIVITY_MULTIPLE_TASK' final='true' static='true' value='134217728' type='int'/><field name='FLAG_ACTIVITY_NEW_TASK' final='true' static='true' value='268435456' type='int'/><field name='FLAG_ACTIVITY_NO_HISTORY' final='true' static='true' value='1073741824' type='int'/><field name='FLAG_ACTIVITY_PREVIOUS_IS_TOP' final='true' static='true' value='16777216' type='int'/><field name='FLAG_ACTIVITY_RESET_TASK_IF_NEEDED' final='true' static='true' value='2097152' type='int'/><field name='FLAG_ACTIVITY_SINGLE_TOP' final='true' static='true' value='536870912' type='int'/><field name='FLAG_DEBUG_LOG_RESOLUTION' final='true' static='true' value='8' type='int'/><field name='FLAG_FROM_BACKGROUND' final='true' static='true' value='4' type='int'/><field name='FLAG_GRANT_READ_URI_PERMISSION' final='true' static='true' value='1' type='int'/><field name='FLAG_GRANT_WRITE_URI_PERMISSION' final='true' static='true' value='2' type='int'/><field name='FLAG_RECEIVER_REGISTERED_ONLY' final='true' static='true' value='1073741824' type='int'/><field api_added='3' name='ACTION_INPUT_METHOD_CHANGED' final='true' static='true' value='&quot;android.intent.action.INPUT_METHOD_CHANGED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_MEDIA_CHECKING' final='true' static='true' value='&quot;android.intent.action.MEDIA_CHECKING&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_MEDIA_NOFS' final='true' static='true' value='&quot;android.intent.action.MEDIA_NOFS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_PACKAGE_DATA_CLEARED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_DATA_CLEARED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_PACKAGE_REPLACED' final='true' static='true' value='&quot;android.intent.action.PACKAGE_REPLACED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_SEARCH_LONG_PRESS' final='true' static='true' value='&quot;android.intent.action.SEARCH_LONG_PRESS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_SYSTEM_TUTORIAL' final='true' static='true' value='&quot;android.intent.action.SYSTEM_TUTORIAL&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_USER_PRESENT' final='true' static='true' value='&quot;android.intent.action.USER_PRESENT&quot;' type='java.lang.String'/><field api_added='3' name='CATEGORY_INFO' final='true' static='true' value='&quot;android.intent.category.INFO&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_DATA_REMOVED' final='true' static='true' value='&quot;android.intent.extra.DATA_REMOVED&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_REPLACING' final='true' static='true' value='&quot;android.intent.extra.REPLACING&quot;' type='java.lang.String'/><field api_added='3' name='FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET' final='true' static='true' value='524288' type='int'/><field api_added='3' name='FLAG_ACTIVITY_NO_USER_ACTION' final='true' static='true' value='262144' type='int'/><field api_added='3' name='FLAG_ACTIVITY_REORDER_TO_FRONT' final='true' static='true' value='131072' type='int'/><field api_added='4' name='ACTION_BATTERY_OKAY' final='true' static='true' value='&quot;android.intent.action.BATTERY_OKAY&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_POWER_CONNECTED' final='true' static='true' value='&quot;android.intent.action.ACTION_POWER_CONNECTED&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_POWER_DISCONNECTED' final='true' static='true' value='&quot;android.intent.action.ACTION_POWER_DISCONNECTED&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_POWER_USAGE_SUMMARY' final='true' static='true' value='&quot;android.intent.action.POWER_USAGE_SUMMARY&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_SEND_MULTIPLE' final='true' static='true' value='&quot;android.intent.action.SEND_MULTIPLE&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_SHUTDOWN' final='true' static='true' value='&quot;android.intent.action.ACTION_SHUTDOWN&quot;' type='java.lang.String'/><field api_added='4' name='FILL_IN_PACKAGE' final='true' static='true' value='16' type='int'/><field api_added='4' name='URI_INTENT_SCHEME' final='true' static='true' value='1' type='int'/><field api_added='5' name='ACTION_DOCK_EVENT' final='true' static='true' value='&quot;android.intent.action.DOCK_EVENT&quot;' type='java.lang.String'/><field api_added='5' name='CATEGORY_CAR_DOCK' final='true' static='true' value='&quot;android.intent.category.CAR_DOCK&quot;' type='java.lang.String'/><field api_added='5' name='CATEGORY_DESK_DOCK' final='true' static='true' value='&quot;android.intent.category.DESK_DOCK&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_CHANGED_COMPONENT_NAME' final='true' static='true' value='&quot;android.intent.extra.changed_component_name&quot;' type='java.lang.String' deprecated='7'/><field api_added='5' name='EXTRA_DOCK_STATE' final='true' static='true' value='&quot;android.intent.extra.DOCK_STATE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_DOCK_STATE_CAR' final='true' static='true' value='2' type='int'/><field api_added='5' name='EXTRA_DOCK_STATE_DESK' final='true' static='true' value='1' type='int'/><field api_added='5' name='EXTRA_DOCK_STATE_UNDOCKED' final='true' static='true' value='0' type='int'/><field api_added='5' name='EXTRA_INITIAL_INTENTS' final='true' static='true' value='&quot;android.intent.extra.INITIAL_INTENTS&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_REMOTE_INTENT_TOKEN' final='true' static='true' value='&quot;android.intent.extra.remote_intent_token&quot;' type='java.lang.String'/><field api_added='5' name='FLAG_ACTIVITY_NO_ANIMATION' final='true' static='true' value='65536' type='int'/><field api_added='5' name='METADATA_DOCK_HOME' final='true' static='true' value='&quot;android.dock_home&quot;' type='java.lang.String'/><field api_added='7' name='ACTION_LOCALE_CHANGED' final='true' static='true' value='&quot;android.intent.action.LOCALE_CHANGED&quot;' type='java.lang.String'/><field api_added='7' name='EXTRA_CHANGED_COMPONENT_NAME_LIST' final='true' static='true' value='&quot;android.intent.extra.changed_component_name_list&quot;' type='java.lang.String'/><field api_added='7' name='FILL_IN_SOURCE_BOUNDS' final='true' static='true' value='32' type='int'/><field api_added='8' name='ACTION_EXTERNAL_APPLICATIONS_AVAILABLE' final='true' static='true' value='&quot;android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE' final='true' static='true' value='&quot;android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE&quot;' type='java.lang.String'/><field api_added='8' name='CATEGORY_CAR_MODE' final='true' static='true' value='&quot;android.intent.category.CAR_MODE&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_CHANGED_PACKAGE_LIST' final='true' static='true' value='&quot;android.intent.extra.changed_package_list&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_CHANGED_UID_LIST' final='true' static='true' value='&quot;android.intent.extra.changed_uid_list&quot;' type='java.lang.String'/><field api_added='8' name='FLAG_RECEIVER_REPLACE_PENDING' final='true' static='true' value='536870912' type='int'/><method name='addCategory' return='android.content.Intent'><parameter name='category' type='java.lang.String'/></method><method name='addFlags' return='android.content.Intent'><parameter name='flags' type='int'/></method><method name='clone' return='java.lang.Object'/><method name='cloneFilter' return='android.content.Intent'/><method name='createChooser' static='true' return='android.content.Intent'><parameter name='target' type='android.content.Intent'/><parameter name='title' type='java.lang.CharSequence'/></method><method name='describeContents' return='int'/><method name='fillIn' return='int'><parameter name='other' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='filterEquals' return='boolean'><parameter name='other' type='android.content.Intent'/></method><method name='filterHashCode' return='int'/><method name='getAction' return='java.lang.String'/><method name='getBooleanArrayExtra' return='boolean[]'><parameter name='name' type='java.lang.String'/></method><method name='getBooleanExtra' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/></method><method name='getBundleExtra' return='android.os.Bundle'><parameter name='name' type='java.lang.String'/></method><method name='getByteArrayExtra' return='byte[]'><parameter name='name' type='java.lang.String'/></method><method name='getByteExtra' return='byte'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='byte'/></method><method name='getCategories' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getCharArrayExtra' return='char[]'><parameter name='name' type='java.lang.String'/></method><method name='getCharExtra' return='char'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='char'/></method><method name='getCharSequenceExtra' return='java.lang.CharSequence'><parameter name='name' type='java.lang.String'/></method><method name='getComponent' return='android.content.ComponentName'/><method name='getData' return='android.net.Uri'/><method name='getDataString' return='java.lang.String'/><method name='getDoubleArrayExtra' return='double[]'><parameter name='name' type='java.lang.String'/></method><method name='getDoubleExtra' return='double'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='double'/></method><method name='getExtras' return='android.os.Bundle'/><method name='getFlags' return='int'/><method name='getFloatArrayExtra' return='float[]'><parameter name='name' type='java.lang.String'/></method><method name='getFloatExtra' return='float'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='float'/></method><method name='getIntArrayExtra' return='int[]'><parameter name='name' type='java.lang.String'/></method><method name='getIntExtra' return='int'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getIntegerArrayListExtra' return='java.util.ArrayList&lt;java.lang.Integer&gt;'><parameter name='name' type='java.lang.String'/></method><method name='getIntent' static='true' deprecated='4' return='android.content.Intent'><parameter name='uri' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method name='getIntentOld' static='true' return='android.content.Intent'><parameter name='uri' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method name='getLongArrayExtra' return='long[]'><parameter name='name' type='java.lang.String'/></method><method name='getLongExtra' return='long'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='getParcelableArrayExtra' return='android.os.Parcelable[]'><parameter name='name' type='java.lang.String'/></method><method name='getParcelableArrayListExtra' return='java.util.ArrayList&lt;T&gt;'><parameter name='name' type='java.lang.String'/></method><method name='getParcelableExtra' return='T'><parameter name='name' type='java.lang.String'/></method><method name='getScheme' return='java.lang.String'/><method name='getSerializableExtra' return='java.io.Serializable'><parameter name='name' type='java.lang.String'/></method><method name='getShortArrayExtra' return='short[]'><parameter name='name' type='java.lang.String'/></method><method name='getShortExtra' return='short'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='short'/></method><method name='getStringArrayExtra' return='java.lang.String[]'><parameter name='name' type='java.lang.String'/></method><method name='getStringArrayListExtra' return='java.util.ArrayList&lt;java.lang.String&gt;'><parameter name='name' type='java.lang.String'/></method><method name='getStringExtra' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getType' return='java.lang.String'/><method name='hasCategory' return='boolean'><parameter name='category' type='java.lang.String'/></method><method name='hasExtra' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='hasFileDescriptors' return='boolean'/><method name='parseIntent' static='true' return='android.content.Intent'><parameter name='resources' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='attrs' type='android.util.AttributeSet'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='byte'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='char'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='short'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.CharSequence'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='android.os.Parcelable'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='android.os.Parcelable[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.io.Serializable'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='byte[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='short[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='char[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='int[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='long[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='float[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='double[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String[]'/></method><method name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='android.os.Bundle'/></method><method name='putExtras' return='android.content.Intent'><parameter name='src' type='android.content.Intent'/></method><method name='putExtras' return='android.content.Intent'><parameter name='extras' type='android.os.Bundle'/></method><method name='putIntegerArrayListExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.Integer&gt;'/></method><method name='putParcelableArrayListExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;? extends android.os.Parcelable&gt;'/></method><method name='putStringArrayListExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.String&gt;'/></method><method name='readFromParcel'><parameter name='in' type='android.os.Parcel'/></method><method name='removeCategory'><parameter name='category' type='java.lang.String'/></method><method name='removeExtra'><parameter name='name' type='java.lang.String'/></method><method name='resolveActivity' return='android.content.ComponentName'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method name='resolveActivityInfo' return='android.content.pm.ActivityInfo'><parameter name='pm' type='android.content.pm.PackageManager'/><parameter name='flags' type='int'/></method><method name='resolveType' return='java.lang.String'><parameter name='context' type='android.content.Context'/></method><method name='resolveType' return='java.lang.String'><parameter name='resolver' type='android.content.ContentResolver'/></method><method name='resolveTypeIfNeeded' return='java.lang.String'><parameter name='resolver' type='android.content.ContentResolver'/></method><method name='setAction' return='android.content.Intent'><parameter name='action' type='java.lang.String'/></method><method name='setClass' return='android.content.Intent'><parameter name='packageContext' type='android.content.Context'/><parameter name='cls' type='java.lang.Class&lt;?&gt;'/></method><method name='setClassName' return='android.content.Intent'><parameter name='packageContext' type='android.content.Context'/><parameter name='className' type='java.lang.String'/></method><method name='setClassName' return='android.content.Intent'><parameter name='packageName' type='java.lang.String'/><parameter name='className' type='java.lang.String'/></method><method name='setComponent' return='android.content.Intent'><parameter name='component' type='android.content.ComponentName'/></method><method name='setData' return='android.content.Intent'><parameter name='data' type='android.net.Uri'/></method><method name='setDataAndType' return='android.content.Intent'><parameter name='data' type='android.net.Uri'/><parameter name='type' type='java.lang.String'/></method><method name='setExtrasClassLoader'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='setFlags' return='android.content.Intent'><parameter name='flags' type='int'/></method><method name='setType' return='android.content.Intent'><parameter name='type' type='java.lang.String'/></method><method name='toURI' deprecated='4' return='java.lang.String'/><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='replaceExtras' return='android.content.Intent'><parameter name='src' type='android.content.Intent'/></method><method api_added='3' name='replaceExtras' return='android.content.Intent'><parameter name='extras' type='android.os.Bundle'/></method><method api_added='4' name='getPackage' return='java.lang.String'/><method api_added='4' name='parseUri' static='true' return='android.content.Intent'><parameter name='uri' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method api_added='4' name='setPackage' return='android.content.Intent'><parameter name='packageName' type='java.lang.String'/></method><method api_added='4' name='toUri' return='java.lang.String'><parameter name='flags' type='int'/></method><method api_added='7' name='getSourceBounds' return='android.graphics.Rect'/><method api_added='7' name='setSourceBounds'><parameter name='r' type='android.graphics.Rect'/></method><method api_added='8' name='getCharSequenceArrayExtra' return='java.lang.CharSequence[]'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getCharSequenceArrayListExtra' return='java.util.ArrayList&lt;java.lang.CharSequence&gt;'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='putCharSequenceArrayListExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.CharSequence&gt;'/></method><method api_added='8' name='putExtra' return='android.content.Intent'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.CharSequence[]'/></method></class><class name='Intent.FilterComparison' final='true' extends='java.lang.Object' static='true'><constructor name='Intent.FilterComparison' type='android.content.Intent.FilterComparison'><parameter name='intent' type='android.content.Intent'/></constructor><method name='getIntent' return='android.content.Intent'/></class><class name='Intent.ShortcutIconResource' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='Intent.ShortcutIconResource' type='android.content.Intent.ShortcutIconResource'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='packageName' type='java.lang.String'/><field name='resourceName' type='java.lang.String'/><method name='describeContents' return='int'/><method name='fromContext' static='true' return='android.content.Intent.ShortcutIconResource'><parameter name='context' type='android.content.Context'/><parameter name='resourceId' type='int'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='IntentFilter' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='IntentFilter' type='android.content.IntentFilter'/><constructor name='IntentFilter' type='android.content.IntentFilter'><parameter name='action' type='java.lang.String'/></constructor><constructor name='IntentFilter' type='android.content.IntentFilter'><parameter name='action' type='java.lang.String'/><parameter name='dataType' type='java.lang.String'/><exception name='IntentFilter.MalformedMimeTypeException' type='android.content.IntentFilter.MalformedMimeTypeException'/></constructor><constructor name='IntentFilter' type='android.content.IntentFilter'><parameter name='o' type='android.content.IntentFilter'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='MATCH_ADJUSTMENT_MASK' final='true' static='true' value='65535' type='int'/><field name='MATCH_ADJUSTMENT_NORMAL' final='true' static='true' value='32768' type='int'/><field name='MATCH_CATEGORY_EMPTY' final='true' static='true' value='1048576' type='int'/><field name='MATCH_CATEGORY_HOST' final='true' static='true' value='3145728' type='int'/><field name='MATCH_CATEGORY_MASK' final='true' static='true' value='268369920' type='int'/><field name='MATCH_CATEGORY_PATH' final='true' static='true' value='5242880' type='int'/><field name='MATCH_CATEGORY_PORT' final='true' static='true' value='4194304' type='int'/><field name='MATCH_CATEGORY_SCHEME' final='true' static='true' value='2097152' type='int'/><field name='MATCH_CATEGORY_TYPE' final='true' static='true' value='6291456' type='int'/><field name='NO_MATCH_ACTION' final='true' static='true' value='-3' type='int'/><field name='NO_MATCH_CATEGORY' final='true' static='true' value='-4' type='int'/><field name='NO_MATCH_DATA' final='true' static='true' value='-2' type='int'/><field name='NO_MATCH_TYPE' final='true' static='true' value='-1' type='int'/><field name='SYSTEM_HIGH_PRIORITY' final='true' static='true' value='1000' type='int'/><field name='SYSTEM_LOW_PRIORITY' final='true' static='true' value='-1000' type='int'/><method name='actionsIterator' final='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='addAction' final='true'><parameter name='action' type='java.lang.String'/></method><method name='addCategory' final='true'><parameter name='category' type='java.lang.String'/></method><method name='addDataAuthority' final='true'><parameter name='host' type='java.lang.String'/><parameter name='port' type='java.lang.String'/></method><method name='addDataPath' final='true'><parameter name='path' type='java.lang.String'/><parameter name='type' type='int'/></method><method name='addDataScheme' final='true'><parameter name='scheme' type='java.lang.String'/></method><method name='addDataType' final='true'><parameter name='type' type='java.lang.String'/><exception name='IntentFilter.MalformedMimeTypeException' type='android.content.IntentFilter.MalformedMimeTypeException'/></method><method name='authoritiesIterator' final='true' return='java.util.Iterator&lt;android.content.IntentFilter.AuthorityEntry&gt;'/><method name='categoriesIterator' final='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='countActions' final='true' return='int'/><method name='countCategories' final='true' return='int'/><method name='countDataAuthorities' final='true' return='int'/><method name='countDataPaths' final='true' return='int'/><method name='countDataSchemes' final='true' return='int'/><method name='countDataTypes' final='true' return='int'/><method name='create' static='true' return='android.content.IntentFilter'><parameter name='action' type='java.lang.String'/><parameter name='dataType' type='java.lang.String'/></method><method name='describeContents' final='true' return='int'/><method name='dump'><parameter name='du' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='getAction' final='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getCategory' final='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getDataAuthority' final='true' return='android.content.IntentFilter.AuthorityEntry'><parameter name='index' type='int'/></method><method name='getDataPath' final='true' return='android.os.PatternMatcher'><parameter name='index' type='int'/></method><method name='getDataScheme' final='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getDataType' final='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getPriority' final='true' return='int'/><method name='hasAction' final='true' return='boolean'><parameter name='action' type='java.lang.String'/></method><method name='hasCategory' final='true' return='boolean'><parameter name='category' type='java.lang.String'/></method><method name='hasDataAuthority' final='true' return='boolean'><parameter name='data' type='android.net.Uri'/></method><method name='hasDataPath' final='true' return='boolean'><parameter name='data' type='java.lang.String'/></method><method name='hasDataScheme' final='true' return='boolean'><parameter name='scheme' type='java.lang.String'/></method><method name='hasDataType' final='true' return='boolean'><parameter name='type' type='java.lang.String'/></method><method name='match' final='true' return='int'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='intent' type='android.content.Intent'/><parameter name='resolve' type='boolean'/><parameter name='logTag' type='java.lang.String'/></method><method name='match' final='true' return='int'><parameter name='action' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='scheme' type='java.lang.String'/><parameter name='data' type='android.net.Uri'/><parameter name='categories' type='java.util.Set&lt;java.lang.String&gt;'/><parameter name='logTag' type='java.lang.String'/></method><method name='matchAction' final='true' return='boolean'><parameter name='action' type='java.lang.String'/></method><method name='matchCategories' final='true' return='java.lang.String'><parameter name='categories' type='java.util.Set&lt;java.lang.String&gt;'/></method><method name='matchData' final='true' return='int'><parameter name='type' type='java.lang.String'/><parameter name='scheme' type='java.lang.String'/><parameter name='data' type='android.net.Uri'/></method><method name='matchDataAuthority' final='true' return='int'><parameter name='data' type='android.net.Uri'/></method><method name='pathsIterator' final='true' return='java.util.Iterator&lt;android.os.PatternMatcher&gt;'/><method name='readFromXml'><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='schemesIterator' final='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='setPriority' final='true'><parameter name='priority' type='int'/></method><method name='typesIterator' final='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='writeToParcel' final='true'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method name='writeToXml'><parameter name='serializer' type='org.xmlpull.v1.XmlSerializer'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='IntentFilter.AuthorityEntry' final='true' extends='java.lang.Object' static='true'><constructor name='IntentFilter.AuthorityEntry' type='android.content.IntentFilter.AuthorityEntry'><parameter name='host' type='java.lang.String'/><parameter name='port' type='java.lang.String'/></constructor><method name='getHost' return='java.lang.String'/><method name='getPort' return='int'/><method name='match' return='int'><parameter name='data' type='android.net.Uri'/></method></class><class name='IntentFilter.MalformedMimeTypeException' extends='android.util.AndroidException' static='true'><constructor name='IntentFilter.MalformedMimeTypeException' type='android.content.IntentFilter.MalformedMimeTypeException'/><constructor name='IntentFilter.MalformedMimeTypeException' type='android.content.IntentFilter.MalformedMimeTypeException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='MutableContextWrapper' extends='android.content.ContextWrapper'><constructor name='MutableContextWrapper' type='android.content.MutableContextWrapper'><parameter name='base' type='android.content.Context'/></constructor><method name='setBaseContext'><parameter name='base' type='android.content.Context'/></method></class><class name='ReceiverCallNotAllowedException' extends='android.util.AndroidRuntimeException'><constructor name='ReceiverCallNotAllowedException' type='android.content.ReceiverCallNotAllowedException'><parameter name='msg' type='java.lang.String'/></constructor></class><class name='SearchRecentSuggestionsProvider' extends='android.content.ContentProvider'><constructor name='SearchRecentSuggestionsProvider' type='android.content.SearchRecentSuggestionsProvider'/><field name='DATABASE_MODE_2LINES' final='true' static='true' value='2' type='int'/><field name='DATABASE_MODE_QUERIES' final='true' static='true' value='1' type='int'/><method name='delete' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='getType' return='java.lang.String'><parameter name='uri' type='android.net.Uri'/></method><method name='insert' return='android.net.Uri'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></method><method name='onCreate' return='boolean'/><method name='query' return='android.database.Cursor'><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/></method><method name='setupSuggestions' visibility='protected'><parameter name='authority' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='update' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method></class><class name='UriMatcher' extends='java.lang.Object'><constructor name='UriMatcher' type='android.content.UriMatcher'><parameter name='code' type='int'/></constructor><field name='NO_MATCH' final='true' static='true' value='-1' type='int'/><method name='addURI'><parameter name='authority' type='java.lang.String'/><parameter name='path' type='java.lang.String'/><parameter name='code' type='int'/></method><method name='match' return='int'><parameter name='uri' type='android.net.Uri'/></method></class><class api_added='4' name='IntentSender' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='4' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='4' name='describeContents' return='int'/><method api_added='4' name='readIntentSenderOrNullFromParcel' static='true' return='android.content.IntentSender'><parameter name='in' type='android.os.Parcel'/></method><method api_added='4' name='sendIntent'><parameter name='context' type='android.content.Context'/><parameter name='code' type='int'/><parameter name='intent' type='android.content.Intent'/><parameter name='onFinished' type='android.content.IntentSender.OnFinished'/><parameter name='handler' type='android.os.Handler'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='4' name='writeIntentSenderOrNullToParcel' static='true'><parameter name='sender' type='android.content.IntentSender'/><parameter name='out' type='android.os.Parcel'/></method><method api_added='4' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='4' name='IntentSender.SendIntentException' extends='android.util.AndroidException' static='true'><constructor api_added='4' name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/><constructor api_added='4' name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'><parameter name='name' type='java.lang.String'/></constructor><constructor api_added='4' name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'><parameter name='cause' type='java.lang.Exception'/></constructor></class><class api_added='5' name='AbstractThreadedSyncAdapter' extends='java.lang.Object' abstract='true'><constructor api_added='5' name='AbstractThreadedSyncAdapter' type='android.content.AbstractThreadedSyncAdapter'><parameter name='context' type='android.content.Context'/><parameter name='autoInitialize' type='boolean'/></constructor><field api_added='5' name='LOG_SYNC_DETAILS' final='true' static='true' value='2743' type='int'/><method api_added='5' name='getContext' return='android.content.Context'/><method api_added='5' name='getSyncAdapterBinder' final='true' return='android.os.IBinder'/><method api_added='5' name='onPerformSync' abstract='true'><parameter name='account' type='android.accounts.Account'/><parameter name='extras' type='android.os.Bundle'/><parameter name='authority' type='java.lang.String'/><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='syncResult' type='android.content.SyncResult'/></method><method api_added='8' name='onSyncCanceled'/></class><class api_added='5' name='ContentProviderClient' extends='java.lang.Object'><method api_added='5' name='applyBatch' return='android.content.ContentProviderResult[]'><parameter name='operations' type='java.util.ArrayList&lt;android.content.ContentProviderOperation&gt;'/><exception name='OperationApplicationException' type='android.content.OperationApplicationException'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='bulkInsert' return='int'><parameter name='url' type='android.net.Uri'/><parameter name='initialValues' type='android.content.ContentValues[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='delete' return='int'><parameter name='url' type='android.net.Uri'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='getLocalContentProvider' return='android.content.ContentProvider'/><method api_added='5' name='getType' return='java.lang.String'><parameter name='url' type='android.net.Uri'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='insert' return='android.net.Uri'><parameter name='url' type='android.net.Uri'/><parameter name='initialValues' type='android.content.ContentValues'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='openAssetFile' return='android.content.res.AssetFileDescriptor'><parameter name='url' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='openFile' return='android.os.ParcelFileDescriptor'><parameter name='url' type='android.net.Uri'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='query' return='android.database.Cursor'><parameter name='url' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='release' return='boolean'/><method api_added='5' name='update' return='int'><parameter name='url' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method></class><class api_added='5' name='ContentProviderOperation' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='apply' return='android.content.ContentProviderResult'><parameter name='provider' type='android.content.ContentProvider'/><parameter name='backRefs' type='android.content.ContentProviderResult[]'/><parameter name='numBackRefs' type='int'/><exception name='OperationApplicationException' type='android.content.OperationApplicationException'/></method><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='getUri' return='android.net.Uri'/><method api_added='5' name='isReadOperation' return='boolean'/><method api_added='5' name='isWriteOperation' return='boolean'/><method api_added='5' name='isYieldAllowed' return='boolean'/><method api_added='5' name='newAssertQuery' static='true' return='android.content.ContentProviderOperation.Builder'><parameter name='uri' type='android.net.Uri'/></method><method api_added='5' name='newDelete' static='true' return='android.content.ContentProviderOperation.Builder'><parameter name='uri' type='android.net.Uri'/></method><method api_added='5' name='newInsert' static='true' return='android.content.ContentProviderOperation.Builder'><parameter name='uri' type='android.net.Uri'/></method><method api_added='5' name='newUpdate' static='true' return='android.content.ContentProviderOperation.Builder'><parameter name='uri' type='android.net.Uri'/></method><method api_added='5' name='resolveSelectionArgsBackReferences' return='java.lang.String[]'><parameter name='backRefs' type='android.content.ContentProviderResult[]'/><parameter name='numBackRefs' type='int'/></method><method api_added='5' name='resolveValueBackReferences' return='android.content.ContentValues'><parameter name='backRefs' type='android.content.ContentProviderResult[]'/><parameter name='numBackRefs' type='int'/></method><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='ContentProviderOperation.Builder' extends='java.lang.Object' static='true'><method api_added='5' name='build' return='android.content.ContentProviderOperation'/><method api_added='5' name='withExpectedCount' return='android.content.ContentProviderOperation.Builder'><parameter name='count' type='int'/></method><method api_added='5' name='withSelection' return='android.content.ContentProviderOperation.Builder'><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method api_added='5' name='withSelectionBackReference' return='android.content.ContentProviderOperation.Builder'><parameter name='selectionArgIndex' type='int'/><parameter name='previousResult' type='int'/></method><method api_added='5' name='withValue' return='android.content.ContentProviderOperation.Builder'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method api_added='5' name='withValueBackReference' return='android.content.ContentProviderOperation.Builder'><parameter name='key' type='java.lang.String'/><parameter name='previousResult' type='int'/></method><method api_added='5' name='withValueBackReferences' return='android.content.ContentProviderOperation.Builder'><parameter name='backReferences' type='android.content.ContentValues'/></method><method api_added='5' name='withValues' return='android.content.ContentProviderOperation.Builder'><parameter name='values' type='android.content.ContentValues'/></method><method api_added='5' name='withYieldAllowed' return='android.content.ContentProviderOperation.Builder'><parameter name='yieldAllowed' type='boolean'/></method></class><class api_added='5' name='ContentProviderResult' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='ContentProviderResult' type='android.content.ContentProviderResult'><parameter name='uri' type='android.net.Uri'/></constructor><constructor api_added='5' name='ContentProviderResult' type='android.content.ContentProviderResult'><parameter name='count' type='int'/></constructor><constructor api_added='5' name='ContentProviderResult' type='android.content.ContentProviderResult'><parameter name='source' type='android.os.Parcel'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='count' final='true' type='java.lang.Integer'/><field api_added='5' name='uri' final='true' type='android.net.Uri'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='OperationApplicationException' extends='java.lang.Exception'><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'/><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'><parameter name='numSuccessfulYieldPoints' type='int'/></constructor><constructor api_added='5' name='OperationApplicationException' type='android.content.OperationApplicationException'><parameter name='message' type='java.lang.String'/><parameter name='numSuccessfulYieldPoints' type='int'/></constructor><method api_added='5' name='getNumSuccessfulYieldPoints' return='int'/></class><class api_added='5' name='SyncAdapterType' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='SyncAdapterType' type='android.content.SyncAdapterType'><parameter name='authority' type='java.lang.String'/><parameter name='accountType' type='java.lang.String'/><parameter name='userVisible' type='boolean'/><parameter name='supportsUploading' type='boolean'/></constructor><constructor api_added='5' name='SyncAdapterType' type='android.content.SyncAdapterType'><parameter name='source' type='android.os.Parcel'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='accountType' final='true' type='java.lang.String'/><field api_added='5' name='authority' final='true' type='java.lang.String'/><field api_added='5' name='isKey' final='true' type='boolean'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='isUserVisible' return='boolean'/><method api_added='5' name='newKey' static='true' return='android.content.SyncAdapterType'><parameter name='authority' type='java.lang.String'/><parameter name='accountType' type='java.lang.String'/></method><method api_added='5' name='supportsUploading' return='boolean'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='SyncContext' extends='java.lang.Object'><method api_added='5' name='getSyncContextBinder' return='android.os.IBinder'/><method api_added='5' name='onFinished'><parameter name='result' type='android.content.SyncResult'/></method></class><class api_added='5' name='SyncResult' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='SyncResult' type='android.content.SyncResult'/><field api_added='5' name='ALREADY_IN_PROGRESS' final='true' static='true' type='android.content.SyncResult'/><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='databaseError' type='boolean'/><field api_added='5' name='fullSyncRequested' type='boolean'/><field api_added='5' name='moreRecordsToGet' type='boolean'/><field api_added='5' name='partialSyncUnavailable' type='boolean'/><field api_added='5' name='stats' final='true' type='android.content.SyncStats'/><field api_added='5' name='syncAlreadyInProgress' final='true' type='boolean'/><field api_added='5' name='tooManyDeletions' type='boolean'/><field api_added='5' name='tooManyRetries' type='boolean'/><field api_added='8' name='delayUntil' type='long'/><method api_added='5' name='clear'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='hasError' return='boolean'/><method api_added='5' name='hasHardError' return='boolean'/><method api_added='5' name='hasSoftError' return='boolean'/><method api_added='5' name='madeSomeProgress' return='boolean'/><method api_added='5' name='toDebugString' return='java.lang.String'/><method api_added='5' name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='SyncStats' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='SyncStats' type='android.content.SyncStats'/><constructor api_added='5' name='SyncStats' type='android.content.SyncStats'><parameter name='in' type='android.os.Parcel'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='numAuthExceptions' type='long'/><field api_added='5' name='numConflictDetectedExceptions' type='long'/><field api_added='5' name='numDeletes' type='long'/><field api_added='5' name='numEntries' type='long'/><field api_added='5' name='numInserts' type='long'/><field api_added='5' name='numIoExceptions' type='long'/><field api_added='5' name='numParseExceptions' type='long'/><field api_added='5' name='numSkippedEntries' type='long'/><field api_added='5' name='numUpdates' type='long'/><method api_added='5' name='clear'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='Entity' final='true' extends='java.lang.Object'><constructor api_added='8' name='Entity' type='android.content.Entity'><parameter name='values' type='android.content.ContentValues'/></constructor><method api_added='8' name='addSubValue'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></method><method api_added='8' name='getEntityValues' return='android.content.ContentValues'/><method api_added='8' name='getSubValues' return='java.util.ArrayList&lt;android.content.Entity.NamedContentValues&gt;'/></class><class api_added='8' name='Entity.NamedContentValues' extends='java.lang.Object' static='true'><constructor api_added='8' name='Entity.NamedContentValues' type='android.content.Entity.NamedContentValues'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></constructor><field api_added='8' name='uri' final='true' type='android.net.Uri'/><field api_added='8' name='values' final='true' type='android.content.ContentValues'/></class><class api_added='8' name='PeriodicSync' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='8' name='PeriodicSync' type='android.content.PeriodicSync'><parameter name='account' type='android.accounts.Account'/><parameter name='authority' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/><parameter name='period' type='long'/></constructor><field api_added='8' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='8' name='account' final='true' type='android.accounts.Account'/><field api_added='8' name='authority' final='true' type='java.lang.String'/><field api_added='8' name='extras' final='true' type='android.os.Bundle'/><field api_added='8' name='period' final='true' type='long'/><method api_added='8' name='describeContents' return='int'/><method api_added='8' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='SyncInfo' extends='java.lang.Object'><field api_added='8' name='account' final='true' type='android.accounts.Account'/><field api_added='8' name='authority' final='true' type='java.lang.String'/><field api_added='8' name='startTime' final='true' type='long'/></class><interface name='ComponentCallbacks' abstract='true'><method name='onConfigurationChanged' abstract='true'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='onLowMemory' abstract='true'/></interface><interface name='DialogInterface' abstract='true'><field name='BUTTON1' final='true' static='true' value='-1' type='int' deprecated='3'/><field name='BUTTON2' final='true' static='true' value='-2' type='int' deprecated='3'/><field name='BUTTON3' final='true' static='true' value='-3' type='int' deprecated='3'/><field api_added='3' name='BUTTON_NEGATIVE' final='true' static='true' value='-2' type='int'/><field api_added='3' name='BUTTON_NEUTRAL' final='true' static='true' value='-3' type='int'/><field api_added='3' name='BUTTON_POSITIVE' final='true' static='true' value='-1' type='int'/><method name='cancel' abstract='true'/><method name='dismiss' abstract='true'/></interface><interface name='DialogInterface.OnCancelListener' abstract='true' static='true'><method name='onCancel' abstract='true'><parameter name='dialog' type='android.content.DialogInterface'/></method></interface><interface name='DialogInterface.OnClickListener' abstract='true' static='true'><method name='onClick' abstract='true'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/></method></interface><interface name='DialogInterface.OnDismissListener' abstract='true' static='true'><method name='onDismiss' abstract='true'><parameter name='dialog' type='android.content.DialogInterface'/></method></interface><interface name='DialogInterface.OnKeyListener' abstract='true' static='true'><method name='onKey' abstract='true' return='boolean'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface name='DialogInterface.OnMultiChoiceClickListener' abstract='true' static='true'><method name='onClick' abstract='true'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/><parameter name='isChecked' type='boolean'/></method></interface><interface name='ServiceConnection' abstract='true'><method name='onServiceConnected' abstract='true'><parameter name='name' type='android.content.ComponentName'/><parameter name='service' type='android.os.IBinder'/></method><method name='onServiceDisconnected' abstract='true'><parameter name='name' type='android.content.ComponentName'/></method></interface><interface name='SharedPreferences' abstract='true'><method name='contains' abstract='true' return='boolean'><parameter name='key' type='java.lang.String'/></method><method name='edit' abstract='true' return='android.content.SharedPreferences.Editor'/><method name='getAll' abstract='true' return='java.util.Map&lt;java.lang.String, ?&gt;'/><method name='getBoolean' abstract='true' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='defValue' type='boolean'/></method><method name='getFloat' abstract='true' return='float'><parameter name='key' type='java.lang.String'/><parameter name='defValue' type='float'/></method><method name='getInt' abstract='true' return='int'><parameter name='key' type='java.lang.String'/><parameter name='defValue' type='int'/></method><method name='getLong' abstract='true' return='long'><parameter name='key' type='java.lang.String'/><parameter name='defValue' type='long'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='defValue' type='java.lang.String'/></method><method name='registerOnSharedPreferenceChangeListener' abstract='true'><parameter name='listener' type='android.content.SharedPreferences.OnSharedPreferenceChangeListener'/></method><method name='unregisterOnSharedPreferenceChangeListener' abstract='true'><parameter name='listener' type='android.content.SharedPreferences.OnSharedPreferenceChangeListener'/></method></interface><interface name='SharedPreferences.Editor' abstract='true' static='true'><method name='clear' abstract='true' return='android.content.SharedPreferences.Editor'/><method name='commit' abstract='true' return='boolean'/><method name='putBoolean' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='putFloat' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putInt' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putLong' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='putString' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='remove' abstract='true' return='android.content.SharedPreferences.Editor'><parameter name='key' type='java.lang.String'/></method></interface><interface name='SharedPreferences.OnSharedPreferenceChangeListener' abstract='true' static='true'><method name='onSharedPreferenceChanged' abstract='true'><parameter name='sharedPreferences' type='android.content.SharedPreferences'/><parameter name='key' type='java.lang.String'/></method></interface><interface api_added='4' name='IntentSender.OnFinished' abstract='true' static='true'><method api_added='4' name='onSendFinished' abstract='true'><parameter name='IntentSender' type='android.content.IntentSender'/><parameter name='intent' type='android.content.Intent'/><parameter name='resultCode' type='int'/><parameter name='resultData' type='java.lang.String'/><parameter name='resultExtras' type='android.os.Bundle'/></method></interface><interface api_added='5' name='SyncStatusObserver' abstract='true'><method api_added='5' name='onStatusChanged' abstract='true'><parameter name='which' type='int'/></method></interface><interface api_added='8' name='DialogInterface.OnShowListener' abstract='true' static='true'><method api_added='8' name='onShow' abstract='true'><parameter name='dialog' type='android.content.DialogInterface'/></method></interface><interface api_added='8' name='EntityIterator' abstract='true'><implements name='java.util.Iterator'/><method api_added='8' name='close' abstract='true'/><method api_added='8' name='reset' abstract='true'/></interface></package><package name='android.content.pm'><class name='ActivityInfo' extends='android.content.pm.ComponentInfo'><implements name='android.os.Parcelable'/><constructor name='ActivityInfo' type='android.content.pm.ActivityInfo'/><constructor name='ActivityInfo' type='android.content.pm.ActivityInfo'><parameter name='orig' type='android.content.pm.ActivityInfo'/></constructor><field name='CONFIG_FONT_SCALE' final='true' static='true' value='1073741824' type='int'/><field name='CONFIG_KEYBOARD' final='true' static='true' value='16' type='int'/><field name='CONFIG_KEYBOARD_HIDDEN' final='true' static='true' value='32' type='int'/><field name='CONFIG_LOCALE' final='true' static='true' value='4' type='int'/><field name='CONFIG_MCC' final='true' static='true' value='1' type='int'/><field name='CONFIG_MNC' final='true' static='true' value='2' type='int'/><field name='CONFIG_NAVIGATION' final='true' static='true' value='64' type='int'/><field name='CONFIG_ORIENTATION' final='true' static='true' value='128' type='int'/><field name='CONFIG_TOUCHSCREEN' final='true' static='true' value='8' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FLAG_ALLOW_TASK_REPARENTING' final='true' static='true' value='64' type='int'/><field name='FLAG_ALWAYS_RETAIN_TASK_STATE' final='true' static='true' value='8' type='int'/><field name='FLAG_CLEAR_TASK_ON_LAUNCH' final='true' static='true' value='4' type='int'/><field name='FLAG_EXCLUDE_FROM_RECENTS' final='true' static='true' value='32' type='int'/><field name='FLAG_FINISH_ON_TASK_LAUNCH' final='true' static='true' value='2' type='int'/><field name='FLAG_MULTIPROCESS' final='true' static='true' value='1' type='int'/><field name='FLAG_STATE_NOT_NEEDED' final='true' static='true' value='16' type='int'/><field name='LAUNCH_MULTIPLE' final='true' static='true' value='0' type='int'/><field name='LAUNCH_SINGLE_INSTANCE' final='true' static='true' value='3' type='int'/><field name='LAUNCH_SINGLE_TASK' final='true' static='true' value='2' type='int'/><field name='LAUNCH_SINGLE_TOP' final='true' static='true' value='1' type='int'/><field name='SCREEN_ORIENTATION_BEHIND' final='true' static='true' value='3' type='int'/><field name='SCREEN_ORIENTATION_LANDSCAPE' final='true' static='true' value='0' type='int'/><field name='SCREEN_ORIENTATION_NOSENSOR' final='true' static='true' value='5' type='int'/><field name='SCREEN_ORIENTATION_PORTRAIT' final='true' static='true' value='1' type='int'/><field name='SCREEN_ORIENTATION_SENSOR' final='true' static='true' value='4' type='int'/><field name='SCREEN_ORIENTATION_UNSPECIFIED' final='true' static='true' value='-1' type='int'/><field name='SCREEN_ORIENTATION_USER' final='true' static='true' value='2' type='int'/><field name='configChanges' type='int'/><field name='flags' type='int'/><field name='launchMode' type='int'/><field name='permission' type='java.lang.String'/><field name='screenOrientation' type='int'/><field name='targetActivity' type='java.lang.String'/><field name='taskAffinity' type='java.lang.String'/><field name='theme' type='int'/><field api_added='3' name='FLAG_NO_HISTORY' final='true' static='true' value='128' type='int'/><field api_added='3' name='softInputMode' type='int'/><field api_added='4' name='CONFIG_SCREEN_LAYOUT' final='true' static='true' value='256' type='int'/><field api_added='5' name='FLAG_FINISH_ON_CLOSE_SYSTEM_DIALOGS' final='true' static='true' value='256' type='int'/><field api_added='8' name='CONFIG_UI_MODE' final='true' static='true' value='512' type='int'/><method name='describeContents' return='int'/><method name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='getThemeResource' final='true' return='int'/></class><class name='ApplicationInfo' extends='android.content.pm.PackageItemInfo'><implements name='android.os.Parcelable'/><constructor name='ApplicationInfo' type='android.content.pm.ApplicationInfo'/><constructor name='ApplicationInfo' type='android.content.pm.ApplicationInfo'><parameter name='orig' type='android.content.pm.ApplicationInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FLAG_ALLOW_CLEAR_USER_DATA' final='true' static='true' value='64' type='int'/><field name='FLAG_ALLOW_TASK_REPARENTING' final='true' static='true' value='32' type='int'/><field name='FLAG_DEBUGGABLE' final='true' static='true' value='2' type='int'/><field name='FLAG_FACTORY_TEST' final='true' static='true' value='16' type='int'/><field name='FLAG_HAS_CODE' final='true' static='true' value='4' type='int'/><field name='FLAG_PERSISTENT' final='true' static='true' value='8' type='int'/><field name='FLAG_SYSTEM' final='true' static='true' value='1' type='int'/><field name='className' type='java.lang.String'/><field name='dataDir' type='java.lang.String'/><field name='descriptionRes' type='int'/><field name='enabled' type='boolean'/><field name='flags' type='int'/><field name='manageSpaceActivityName' type='java.lang.String'/><field name='permission' type='java.lang.String'/><field name='processName' type='java.lang.String'/><field name='publicSourceDir' type='java.lang.String'/><field name='sharedLibraryFiles' value='null' type='java.lang.String[]'/><field name='sourceDir' type='java.lang.String'/><field name='taskAffinity' type='java.lang.String'/><field name='theme' type='int'/><field name='uid' type='int'/><field api_added='4' name='FLAG_RESIZEABLE_FOR_SCREENS' final='true' static='true' value='4096' type='int'/><field api_added='4' name='FLAG_SUPPORTS_LARGE_SCREENS' final='true' static='true' value='2048' type='int'/><field api_added='4' name='FLAG_SUPPORTS_NORMAL_SCREENS' final='true' static='true' value='1024' type='int'/><field api_added='4' name='FLAG_SUPPORTS_SCREEN_DENSITIES' final='true' static='true' value='8192' type='int'/><field api_added='4' name='FLAG_SUPPORTS_SMALL_SCREENS' final='true' static='true' value='512' type='int'/><field api_added='4' name='FLAG_TEST_ONLY' final='true' static='true' value='256' type='int'/><field api_added='4' name='FLAG_UPDATED_SYSTEM_APP' final='true' static='true' value='128' type='int'/><field api_added='4' name='targetSdkVersion' type='int'/><field api_added='8' name='FLAG_ALLOW_BACKUP' final='true' static='true' value='32768' type='int'/><field api_added='8' name='FLAG_EXTERNAL_STORAGE' final='true' static='true' value='262144' type='int'/><field api_added='8' name='FLAG_KILL_AFTER_RESTORE' final='true' static='true' value='65536' type='int'/><field api_added='8' name='FLAG_RESTORE_ANY_VERSION' final='true' static='true' value='131072' type='int'/><field api_added='8' name='FLAG_VM_SAFE_MODE' final='true' static='true' value='16384' type='int'/><field api_added='8' name='backupAgentName' type='java.lang.String'/><method name='describeContents' return='int'/><method name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='loadDescription' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method></class><class name='ApplicationInfo.DisplayNameComparator' extends='java.lang.Object' static='true'><implements name='java.util.Comparator'/><constructor name='ApplicationInfo.DisplayNameComparator' type='android.content.pm.ApplicationInfo.DisplayNameComparator'><parameter name='pm' type='android.content.pm.PackageManager'/></constructor><method name='compare' final='true' return='int'><parameter name='aa' type='android.content.pm.ApplicationInfo'/><parameter name='ab' type='android.content.pm.ApplicationInfo'/></method></class><class name='ComponentInfo' extends='android.content.pm.PackageItemInfo'><constructor name='ComponentInfo' type='android.content.pm.ComponentInfo'/><constructor name='ComponentInfo' type='android.content.pm.ComponentInfo'><parameter name='orig' type='android.content.pm.ComponentInfo'/></constructor><constructor name='ComponentInfo' type='android.content.pm.ComponentInfo' visibility='protected'><parameter name='source' type='android.os.Parcel'/></constructor><field name='applicationInfo' type='android.content.pm.ApplicationInfo'/><field name='enabled' type='boolean'/><field name='exported' type='boolean'/><field name='processName' type='java.lang.String'/><field api_added='8' name='descriptionRes' type='int'/><method name='getIconResource' final='true' return='int'/></class><class name='IPackageInstallObserver.Stub' extends='android.os.Binder' abstract='true' api_removed='4' static='true'><implements name='android.content.pm.IPackageInstallObserver'/><constructor name='IPackageInstallObserver.Stub' api_removed='4' type='android.content.pm.IPackageInstallObserver.Stub'/><method name='asBinder' api_removed='4' return='android.os.IBinder'/><method name='asInterface' api_removed='4' static='true' return='android.content.pm.IPackageInstallObserver'><parameter name='obj' type='android.os.IBinder'/></method><method name='onTransact' api_removed='4' return='boolean'><parameter name='code' type='int'/><parameter name='data' type='android.os.Parcel'/><parameter name='reply' type='android.os.Parcel'/><parameter name='flags' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method></class><class name='InstrumentationInfo' extends='android.content.pm.PackageItemInfo'><implements name='android.os.Parcelable'/><constructor name='InstrumentationInfo' type='android.content.pm.InstrumentationInfo'/><constructor name='InstrumentationInfo' type='android.content.pm.InstrumentationInfo'><parameter name='orig' type='android.content.pm.InstrumentationInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='dataDir' type='java.lang.String'/><field name='functionalTest' type='boolean'/><field name='handleProfiling' type='boolean'/><field name='publicSourceDir' type='java.lang.String'/><field name='sourceDir' type='java.lang.String'/><field name='targetPackage' type='java.lang.String'/><method name='describeContents' return='int'/></class><class name='PackageInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='PackageInfo' type='android.content.pm.PackageInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='activities' value='null' type='android.content.pm.ActivityInfo[]'/><field name='applicationInfo' type='android.content.pm.ApplicationInfo'/><field name='gids' value='null' type='int[]'/><field name='instrumentation' value='null' type='android.content.pm.InstrumentationInfo[]'/><field name='packageName' type='java.lang.String'/><field name='permissions' value='null' type='android.content.pm.PermissionInfo[]'/><field name='providers' value='null' type='android.content.pm.ProviderInfo[]'/><field name='receivers' value='null' type='android.content.pm.ActivityInfo[]'/><field name='requestedPermissions' value='null' type='java.lang.String[]'/><field name='services' value='null' type='android.content.pm.ServiceInfo[]'/><field name='signatures' value='null' type='android.content.pm.Signature[]'/><field name='versionCode' type='int'/><field name='versionName' type='java.lang.String'/><field api_added='3' name='configPreferences' value='null' type='android.content.pm.ConfigurationInfo[]'/><field api_added='3' name='sharedUserId' type='java.lang.String'/><field api_added='3' name='sharedUserLabel' type='int'/><field api_added='5' name='reqFeatures' value='null' type='android.content.pm.FeatureInfo[]'/><method name='describeContents' return='int'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class name='PackageItemInfo' extends='java.lang.Object'><constructor name='PackageItemInfo' type='android.content.pm.PackageItemInfo'/><constructor name='PackageItemInfo' type='android.content.pm.PackageItemInfo'><parameter name='orig' type='android.content.pm.PackageItemInfo'/></constructor><constructor name='PackageItemInfo' type='android.content.pm.PackageItemInfo' visibility='protected'><parameter name='source' type='android.os.Parcel'/></constructor><field name='icon' type='int'/><field name='labelRes' type='int'/><field name='metaData' type='android.os.Bundle'/><field name='name' type='java.lang.String'/><field name='nonLocalizedLabel' type='java.lang.CharSequence'/><field name='packageName' type='java.lang.String'/><method name='dumpBack' visibility='protected'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='dumpFront' visibility='protected'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method name='loadXmlMetaData' return='android.content.res.XmlResourceParser'><parameter name='pm' type='android.content.pm.PackageManager'/><parameter name='name' type='java.lang.String'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class name='PackageItemInfo.DisplayNameComparator' extends='java.lang.Object' static='true'><implements name='java.util.Comparator'/><constructor name='PackageItemInfo.DisplayNameComparator' type='android.content.pm.PackageItemInfo.DisplayNameComparator'><parameter name='pm' type='android.content.pm.PackageManager'/></constructor><method name='compare' final='true' return='int'><parameter name='aa' type='android.content.pm.PackageItemInfo'/><parameter name='ab' type='android.content.pm.PackageItemInfo'/></method></class><class name='PackageManager' extends='java.lang.Object' abstract='true'><constructor name='PackageManager' type='android.content.pm.PackageManager'/><field name='COMPONENT_ENABLED_STATE_DEFAULT' final='true' static='true' value='0' type='int'/><field name='COMPONENT_ENABLED_STATE_DISABLED' final='true' static='true' value='2' type='int'/><field name='COMPONENT_ENABLED_STATE_ENABLED' final='true' static='true' value='1' type='int'/><field name='DONT_KILL_APP' final='true' static='true' value='1' type='int'/><field name='FORWARD_LOCK_PACKAGE' final='true' api_removed='4' static='true' value='1' type='int'/><field name='GET_ACTIVITIES' final='true' static='true' value='1' type='int'/><field name='GET_DISABLED_COMPONENTS' final='true' static='true' value='512' type='int'/><field name='GET_GIDS' final='true' static='true' value='256' type='int'/><field name='GET_INSTRUMENTATION' final='true' static='true' value='16' type='int'/><field name='GET_INTENT_FILTERS' final='true' static='true' value='32' type='int'/><field name='GET_META_DATA' final='true' static='true' value='128' type='int'/><field name='GET_PERMISSIONS' final='true' static='true' value='4096' type='int'/><field name='GET_PROVIDERS' final='true' static='true' value='8' type='int'/><field name='GET_RECEIVERS' final='true' static='true' value='2' type='int'/><field name='GET_RESOLVED_FILTER' final='true' static='true' value='64' type='int'/><field name='GET_SERVICES' final='true' static='true' value='4' type='int'/><field name='GET_SHARED_LIBRARY_FILES' final='true' static='true' value='1024' type='int'/><field name='GET_SIGNATURES' final='true' static='true' value='64' type='int'/><field name='GET_URI_PERMISSION_PATTERNS' final='true' static='true' value='2048' type='int'/><field name='INSTALL_FAILED_ALREADY_EXISTS' final='true' api_removed='4' static='true' value='-1' type='int'/><field name='INSTALL_FAILED_DEXOPT' final='true' api_removed='4' static='true' value='-11' type='int'/><field name='INSTALL_FAILED_DUPLICATE_PACKAGE' final='true' api_removed='4' static='true' value='-5' type='int'/><field name='INSTALL_FAILED_INSUFFICIENT_STORAGE' final='true' api_removed='4' static='true' value='-4' type='int'/><field name='INSTALL_FAILED_INVALID_APK' final='true' api_removed='4' static='true' value='-2' type='int'/><field name='INSTALL_FAILED_INVALID_URI' final='true' api_removed='4' static='true' value='-3' type='int'/><field name='INSTALL_FAILED_MISSING_SHARED_LIBRARY' final='true' api_removed='4' static='true' value='-9' type='int'/><field name='INSTALL_FAILED_NO_SHARED_USER' final='true' api_removed='4' static='true' value='-6' type='int'/><field name='INSTALL_FAILED_OLDER_SDK' final='true' api_removed='4' static='true' value='-12' type='int'/><field name='INSTALL_FAILED_REPLACE_COULDNT_DELETE' final='true' api_removed='4' static='true' value='-10' type='int'/><field name='INSTALL_FAILED_SHARED_USER_INCOMPATIBLE' final='true' api_removed='4' static='true' value='-8' type='int'/><field name='INSTALL_FAILED_UPDATE_INCOMPATIBLE' final='true' api_removed='4' static='true' value='-7' type='int'/><field name='INSTALL_PARSE_FAILED_BAD_MANIFEST' final='true' api_removed='4' static='true' value='-101' type='int'/><field name='INSTALL_PARSE_FAILED_BAD_PACKAGE_NAME' final='true' api_removed='4' static='true' value='-106' type='int'/><field name='INSTALL_PARSE_FAILED_BAD_SHARED_USER_ID' final='true' api_removed='4' static='true' value='-107' type='int'/><field name='INSTALL_PARSE_FAILED_CERTIFICATE_ENCODING' final='true' api_removed='4' static='true' value='-105' type='int'/><field name='INSTALL_PARSE_FAILED_INCONSISTENT_CERTIFICATES' final='true' api_removed='4' static='true' value='-104' type='int'/><field name='INSTALL_PARSE_FAILED_MANIFEST_EMPTY' final='true' api_removed='4' static='true' value='-109' type='int'/><field name='INSTALL_PARSE_FAILED_MANIFEST_MALFORMED' final='true' api_removed='4' static='true' value='-108' type='int'/><field name='INSTALL_PARSE_FAILED_NOT_APK' final='true' api_removed='4' static='true' value='-100' type='int'/><field name='INSTALL_PARSE_FAILED_NO_CERTIFICATES' final='true' api_removed='4' static='true' value='-103' type='int'/><field name='INSTALL_PARSE_FAILED_UNEXPECTED_EXCEPTION' final='true' api_removed='4' static='true' value='-102' type='int'/><field name='INSTALL_SUCCEEDED' final='true' api_removed='4' static='true' value='1' type='int'/><field name='MATCH_DEFAULT_ONLY' final='true' static='true' value='65536' type='int'/><field name='PERMISSION_DENIED' final='true' static='true' value='-1' type='int'/><field name='PERMISSION_GRANTED' final='true' static='true' value='0' type='int'/><field name='PKG_INSTALL_COMPLETE' final='true' api_removed='8' static='true' value='1' type='int'/><field name='PKG_INSTALL_INCOMPLETE' final='true' api_removed='8' static='true' value='0' type='int'/><field name='REPLACE_EXISTING_PACKAGE' final='true' api_removed='4' static='true' value='2' type='int'/><field name='SIGNATURE_FIRST_NOT_SIGNED' final='true' static='true' value='-1' type='int'/><field name='SIGNATURE_MATCH' final='true' static='true' value='0' type='int'/><field name='SIGNATURE_NEITHER_SIGNED' final='true' static='true' value='1' type='int'/><field name='SIGNATURE_NO_MATCH' final='true' static='true' value='-3' type='int'/><field name='SIGNATURE_SECOND_NOT_SIGNED' final='true' static='true' value='-2' type='int'/><field name='SIGNATURE_UNKNOWN_PACKAGE' final='true' static='true' value='-4' type='int'/><field api_added='3' name='GET_CONFIGURATIONS' final='true' static='true' value='16384' type='int'/><field api_added='3' name='GET_UNINSTALLED_PACKAGES' final='true' static='true' value='8192' type='int'/><field api_added='3' name='INSTALL_FAILED_CONFLICTING_PROVIDER' final='true' api_removed='4' static='true' value='-13' type='int'/><field api_added='7' name='FEATURE_CAMERA' final='true' static='true' value='&quot;android.hardware.camera&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_CAMERA_AUTOFOCUS' final='true' static='true' value='&quot;android.hardware.camera.autofocus&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_CAMERA_FLASH' final='true' static='true' value='&quot;android.hardware.camera.flash&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_LIVE_WALLPAPER' final='true' static='true' value='&quot;android.software.live_wallpaper&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_SENSOR_LIGHT' final='true' static='true' value='&quot;android.hardware.sensor.light&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_SENSOR_PROXIMITY' final='true' static='true' value='&quot;android.hardware.sensor.proximity&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_TELEPHONY' final='true' static='true' value='&quot;android.hardware.telephony&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_TELEPHONY_CDMA' final='true' static='true' value='&quot;android.hardware.telephony.cdma&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_TELEPHONY_GSM' final='true' static='true' value='&quot;android.hardware.telephony.gsm&quot;' type='java.lang.String'/><field api_added='7' name='FEATURE_TOUCHSCREEN_MULTITOUCH' final='true' static='true' value='&quot;android.hardware.touchscreen.multitouch&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_BLUETOOTH' final='true' static='true' value='&quot;android.hardware.bluetooth&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_LOCATION' final='true' static='true' value='&quot;android.hardware.location&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_LOCATION_GPS' final='true' static='true' value='&quot;android.hardware.location.gps&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_LOCATION_NETWORK' final='true' static='true' value='&quot;android.hardware.location.network&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_MICROPHONE' final='true' static='true' value='&quot;android.hardware.microphone&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_SENSOR_ACCELEROMETER' final='true' static='true' value='&quot;android.hardware.sensor.accelerometer&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_SENSOR_COMPASS' final='true' static='true' value='&quot;android.hardware.sensor.compass&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_TOUCHSCREEN' final='true' static='true' value='&quot;android.hardware.touchscreen&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_TOUCHSCREEN_MULTITOUCH_DISTINCT' final='true' static='true' value='&quot;android.hardware.touchscreen.multitouch.distinct&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_WIFI' final='true' static='true' value='&quot;android.hardware.wifi&quot;' type='java.lang.String'/><method name='addPackageToPreferred' abstract='true' deprecated='7'><parameter name='packageName' type='java.lang.String'/></method><method name='addPermission' abstract='true' return='boolean'><parameter name='info' type='android.content.pm.PermissionInfo'/></method><method name='addPreferredActivity' abstract='true' deprecated='8'><parameter name='filter' type='android.content.IntentFilter'/><parameter name='match' type='int'/><parameter name='set' type='android.content.ComponentName[]'/><parameter name='activity' type='android.content.ComponentName'/></method><method name='checkPermission' abstract='true' return='int'><parameter name='permName' type='java.lang.String'/><parameter name='pkgName' type='java.lang.String'/></method><method name='checkSignatures' abstract='true' return='int'><parameter name='pkg1' type='java.lang.String'/><parameter name='pkg2' type='java.lang.String'/></method><method name='clearPackagePreferredActivities' abstract='true'><parameter name='packageName' type='java.lang.String'/></method><method name='getActivityIcon' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='activityName' type='android.content.ComponentName'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getActivityIcon' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='intent' type='android.content.Intent'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getActivityInfo' abstract='true' return='android.content.pm.ActivityInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getAllPermissionGroups' abstract='true' return='java.util.List&lt;android.content.pm.PermissionGroupInfo&gt;'><parameter name='flags' type='int'/></method><method name='getApplicationEnabledSetting' abstract='true' return='int'><parameter name='packageName' type='java.lang.String'/></method><method name='getApplicationIcon' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='info' type='android.content.pm.ApplicationInfo'/></method><method name='getApplicationIcon' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getApplicationInfo' abstract='true' return='android.content.pm.ApplicationInfo'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getApplicationLabel' abstract='true' return='java.lang.CharSequence'><parameter name='info' type='android.content.pm.ApplicationInfo'/></method><method name='getComponentEnabledSetting' abstract='true' return='int'><parameter name='componentName' type='android.content.ComponentName'/></method><method name='getDefaultActivityIcon' abstract='true' return='android.graphics.drawable.Drawable'/><method name='getDrawable' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='getInstalledApplications' abstract='true' return='java.util.List&lt;android.content.pm.ApplicationInfo&gt;'><parameter name='flags' type='int'/></method><method name='getInstalledPackages' abstract='true' return='java.util.List&lt;android.content.pm.PackageInfo&gt;'><parameter name='flags' type='int'/></method><method name='getInstrumentationInfo' abstract='true' return='android.content.pm.InstrumentationInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getNameForUid' abstract='true' return='java.lang.String'><parameter name='uid' type='int'/></method><method name='getPackageArchiveInfo' return='android.content.pm.PackageInfo'><parameter name='archiveFilePath' type='java.lang.String'/><parameter name='flags' type='int'/></method><method name='getPackageGids' abstract='true' return='int[]'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPackageInfo' abstract='true' return='android.content.pm.PackageInfo'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPackagesForUid' abstract='true' return='java.lang.String[]'><parameter name='uid' type='int'/></method><method name='getPermissionGroupInfo' abstract='true' return='android.content.pm.PermissionGroupInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPermissionInfo' abstract='true' return='android.content.pm.PermissionInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPreferredActivities' abstract='true' return='int'><parameter name='outFilters' type='java.util.List&lt;android.content.IntentFilter&gt;'/><parameter name='outActivities' type='java.util.List&lt;android.content.ComponentName&gt;'/><parameter name='packageName' type='java.lang.String'/></method><method name='getPreferredPackages' abstract='true' return='java.util.List&lt;android.content.pm.PackageInfo&gt;'><parameter name='flags' type='int'/></method><method name='getReceiverInfo' abstract='true' return='android.content.pm.ActivityInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getResourcesForActivity' abstract='true' return='android.content.res.Resources'><parameter name='activityName' type='android.content.ComponentName'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getResourcesForApplication' abstract='true' return='android.content.res.Resources'><parameter name='app' type='android.content.pm.ApplicationInfo'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getResourcesForApplication' abstract='true' return='android.content.res.Resources'><parameter name='appPackageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getServiceInfo' abstract='true' return='android.content.pm.ServiceInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getText' abstract='true' return='java.lang.CharSequence'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='getXml' abstract='true' return='android.content.res.XmlResourceParser'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='installPackage' abstract='true' api_removed='4'><parameter name='packageURI' type='android.net.Uri'/><parameter name='observer' type='android.content.pm.IPackageInstallObserver'/><parameter name='flags' type='int'/></method><method name='installPackage' api_removed='4'><parameter name='packageURI' type='android.net.Uri'/></method><method name='queryBroadcastReceivers' abstract='true' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryContentProviders' abstract='true' return='java.util.List&lt;android.content.pm.ProviderInfo&gt;'><parameter name='processName' type='java.lang.String'/><parameter name='uid' type='int'/><parameter name='flags' type='int'/></method><method name='queryInstrumentation' abstract='true' return='java.util.List&lt;android.content.pm.InstrumentationInfo&gt;'><parameter name='targetPackage' type='java.lang.String'/><parameter name='flags' type='int'/></method><method name='queryIntentActivities' abstract='true' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryIntentActivityOptions' abstract='true' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='caller' type='android.content.ComponentName'/><parameter name='specifics' type='android.content.Intent[]'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryIntentServices' abstract='true' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryPermissionsByGroup' abstract='true' return='java.util.List&lt;android.content.pm.PermissionInfo&gt;'><parameter name='group' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='removePackageFromPreferred' abstract='true' deprecated='7'><parameter name='packageName' type='java.lang.String'/></method><method name='removePermission' abstract='true'><parameter name='name' type='java.lang.String'/></method><method name='resolveActivity' abstract='true' return='android.content.pm.ResolveInfo'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='resolveContentProvider' abstract='true' return='android.content.pm.ProviderInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/></method><method name='resolveService' abstract='true' return='android.content.pm.ResolveInfo'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='setApplicationEnabledSetting' abstract='true'><parameter name='packageName' type='java.lang.String'/><parameter name='newState' type='int'/><parameter name='flags' type='int'/></method><method name='setComponentEnabledSetting' abstract='true'><parameter name='componentName' type='android.content.ComponentName'/><parameter name='newState' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='getLaunchIntentForPackage' abstract='true' return='android.content.Intent'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method api_added='3' name='getSystemSharedLibraryNames' abstract='true' return='java.lang.String[]'/><method api_added='3' name='isSafeMode' abstract='true' return='boolean'/><method api_added='5' name='checkSignatures' abstract='true' return='int'><parameter name='uid1' type='int'/><parameter name='uid2' type='int'/></method><method api_added='5' name='getInstallerPackageName' abstract='true' return='java.lang.String'><parameter name='packageName' type='java.lang.String'/></method><method api_added='5' name='getSystemAvailableFeatures' abstract='true' return='android.content.pm.FeatureInfo[]'/><method api_added='5' name='hasSystemFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='addPermissionAsync' abstract='true' return='boolean'><parameter name='info' type='android.content.pm.PermissionInfo'/></method><method api_added='8' name='canonicalToCurrentPackageNames' abstract='true' return='java.lang.String[]'><parameter name='names' type='java.lang.String[]'/></method><method api_added='8' name='currentToCanonicalPackageNames' abstract='true' return='java.lang.String[]'><parameter name='names' type='java.lang.String[]'/></method></class><class name='PackageManager.NameNotFoundException' extends='android.util.AndroidException' static='true'><constructor name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/><constructor name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='PackageStats' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='PackageStats' type='android.content.pm.PackageStats'><parameter name='pkgName' type='java.lang.String'/></constructor><constructor name='PackageStats' type='android.content.pm.PackageStats'><parameter name='source' type='android.os.Parcel'/></constructor><constructor name='PackageStats' type='android.content.pm.PackageStats'><parameter name='pStats' type='android.content.pm.PackageStats'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='cacheSize' type='long'/><field name='codeSize' type='long'/><field name='dataSize' type='long'/><field name='packageName' type='java.lang.String'/><method name='describeContents' return='int'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class name='PermissionGroupInfo' extends='android.content.pm.PackageItemInfo'><implements name='android.os.Parcelable'/><constructor name='PermissionGroupInfo' type='android.content.pm.PermissionGroupInfo'/><constructor name='PermissionGroupInfo' type='android.content.pm.PermissionGroupInfo'><parameter name='orig' type='android.content.pm.PermissionGroupInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='descriptionRes' type='int'/><field name='nonLocalizedDescription' type='java.lang.CharSequence'/><method name='describeContents' return='int'/><method name='loadDescription' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method></class><class name='PermissionInfo' extends='android.content.pm.PackageItemInfo'><implements name='android.os.Parcelable'/><constructor name='PermissionInfo' type='android.content.pm.PermissionInfo'/><constructor name='PermissionInfo' type='android.content.pm.PermissionInfo'><parameter name='orig' type='android.content.pm.PermissionInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='PROTECTION_DANGEROUS' final='true' static='true' value='1' type='int'/><field name='PROTECTION_NORMAL' final='true' static='true' value='0' type='int'/><field name='PROTECTION_SIGNATURE' final='true' static='true' value='2' type='int'/><field name='PROTECTION_SIGNATURE_OR_SYSTEM' final='true' static='true' value='3' type='int'/><field name='descriptionRes' type='int'/><field name='group' type='java.lang.String'/><field name='nonLocalizedDescription' type='java.lang.CharSequence'/><field name='protectionLevel' type='int'/><method name='describeContents' return='int'/><method name='loadDescription' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method></class><class name='ProviderInfo' final='true' extends='android.content.pm.ComponentInfo'><implements name='android.os.Parcelable'/><constructor name='ProviderInfo' type='android.content.pm.ProviderInfo'/><constructor name='ProviderInfo' type='android.content.pm.ProviderInfo'><parameter name='orig' type='android.content.pm.ProviderInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='authority' type='java.lang.String'/><field name='grantUriPermissions' type='boolean'/><field name='initOrder' type='int'/><field name='isSyncable' type='boolean' deprecated='5'/><field name='multiprocess' type='boolean'/><field name='readPermission' type='java.lang.String'/><field name='uriPermissionPatterns' value='null' type='android.os.PatternMatcher[]'/><field name='writePermission' type='java.lang.String'/><field api_added='4' name='pathPermissions' value='null' type='android.content.pm.PathPermission[]'/><method name='describeContents' return='int'/></class><class name='ResolveInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='ResolveInfo' type='android.content.pm.ResolveInfo'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='activityInfo' type='android.content.pm.ActivityInfo'/><field name='filter' type='android.content.IntentFilter'/><field name='icon' type='int'/><field name='isDefault' type='boolean'/><field name='labelRes' type='int'/><field name='match' type='int'/><field name='nonLocalizedLabel' type='java.lang.CharSequence'/><field name='preferredOrder' type='int'/><field name='priority' type='int'/><field name='serviceInfo' type='android.content.pm.ServiceInfo'/><field name='specificIndex' type='int'/><field api_added='5' name='resolvePackageName' type='java.lang.String'/><method name='describeContents' return='int'/><method name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='getIconResource' final='true' return='int'/><method name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class name='ResolveInfo.DisplayNameComparator' extends='java.lang.Object' static='true'><implements name='java.util.Comparator'/><constructor name='ResolveInfo.DisplayNameComparator' type='android.content.pm.ResolveInfo.DisplayNameComparator'><parameter name='pm' type='android.content.pm.PackageManager'/></constructor><method name='compare' final='true' return='int'><parameter name='a' type='android.content.pm.ResolveInfo'/><parameter name='b' type='android.content.pm.ResolveInfo'/></method></class><class name='ServiceInfo' extends='android.content.pm.ComponentInfo'><implements name='android.os.Parcelable'/><constructor name='ServiceInfo' type='android.content.pm.ServiceInfo'/><constructor name='ServiceInfo' type='android.content.pm.ServiceInfo'><parameter name='orig' type='android.content.pm.ServiceInfo'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='permission' type='java.lang.String'/><method name='describeContents' return='int'/><method api_added='5' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method></class><class name='Signature' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Signature' type='android.content.pm.Signature'><parameter name='signature' type='byte[]'/></constructor><constructor name='Signature' type='android.content.pm.Signature'><parameter name='text' type='java.lang.String'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='describeContents' return='int'/><method name='toByteArray' return='byte[]'/><method name='toChars' return='char[]'/><method name='toChars' return='char[]'><parameter name='existingArray' type='char[]'/><parameter name='outLen' type='int[]'/></method><method name='toCharsString' return='java.lang.String'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class api_added='3' name='ConfigurationInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='ConfigurationInfo' type='android.content.pm.ConfigurationInfo'/><constructor api_added='3' name='ConfigurationInfo' type='android.content.pm.ConfigurationInfo'><parameter name='orig' type='android.content.pm.ConfigurationInfo'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='INPUT_FEATURE_FIVE_WAY_NAV' final='true' static='true' value='2' type='int'/><field api_added='3' name='INPUT_FEATURE_HARD_KEYBOARD' final='true' static='true' value='1' type='int'/><field api_added='3' name='reqInputFeatures' type='int'/><field api_added='3' name='reqKeyboardType' type='int'/><field api_added='3' name='reqNavigation' type='int'/><field api_added='3' name='reqTouchScreen' type='int'/><field api_added='4' name='GL_ES_VERSION_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='4' name='reqGlEsVersion' type='int'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method><method api_added='4' name='getGlEsVersion' return='java.lang.String'/></class><class api_added='4' name='PathPermission' extends='android.os.PatternMatcher'><constructor api_added='4' name='PathPermission' type='android.content.pm.PathPermission'><parameter name='pattern' type='java.lang.String'/><parameter name='type' type='int'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/></constructor><constructor api_added='4' name='PathPermission' type='android.content.pm.PathPermission'><parameter name='src' type='android.os.Parcel'/></constructor><field api_added='4' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='4' name='getReadPermission' return='java.lang.String'/><method api_added='4' name='getWritePermission' return='java.lang.String'/></class><class api_added='5' name='FeatureInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='FeatureInfo' type='android.content.pm.FeatureInfo'/><constructor api_added='5' name='FeatureInfo' type='android.content.pm.FeatureInfo'><parameter name='orig' type='android.content.pm.FeatureInfo'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='FLAG_REQUIRED' final='true' static='true' value='1' type='int'/><field api_added='5' name='GL_ES_VERSION_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='5' name='flags' type='int'/><field api_added='5' name='name' type='java.lang.String'/><field api_added='5' name='reqGlEsVersion' type='int'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='getGlEsVersion' return='java.lang.String'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method></class><class api_added='5' name='LabeledIntent' extends='android.content.Intent'><constructor api_added='5' name='LabeledIntent' type='android.content.pm.LabeledIntent'><parameter name='origIntent' type='android.content.Intent'/><parameter name='sourcePackage' type='java.lang.String'/><parameter name='labelRes' type='int'/><parameter name='icon' type='int'/></constructor><constructor api_added='5' name='LabeledIntent' type='android.content.pm.LabeledIntent'><parameter name='origIntent' type='android.content.Intent'/><parameter name='sourcePackage' type='java.lang.String'/><parameter name='nonLocalizedLabel' type='java.lang.CharSequence'/><parameter name='icon' type='int'/></constructor><constructor api_added='5' name='LabeledIntent' type='android.content.pm.LabeledIntent'><parameter name='sourcePackage' type='java.lang.String'/><parameter name='labelRes' type='int'/><parameter name='icon' type='int'/></constructor><constructor api_added='5' name='LabeledIntent' type='android.content.pm.LabeledIntent'><parameter name='sourcePackage' type='java.lang.String'/><parameter name='nonLocalizedLabel' type='java.lang.CharSequence'/><parameter name='icon' type='int'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='getIconResource' return='int'/><method api_added='5' name='getLabelResource' return='int'/><method api_added='5' name='getNonLocalizedLabel' return='java.lang.CharSequence'/><method api_added='5' name='getSourcePackage' return='java.lang.String'/><method api_added='5' name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='5' name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method></class><interface name='IPackageInstallObserver' abstract='true' api_removed='4'><implements name='android.os.IInterface'/><method name='packageInstalled' abstract='true' api_removed='4'><parameter name='packageName' type='java.lang.String'/><parameter name='returnCode' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method></interface></package><package name='android.content.res'><class name='AssetFileDescriptor' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='AssetFileDescriptor' type='android.content.res.AssetFileDescriptor'><parameter name='fd' type='android.os.ParcelFileDescriptor'/><parameter name='startOffset' type='long'/><parameter name='length' type='long'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='UNKNOWN_LENGTH' final='true' static='true' value='-1L' type='long'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getFileDescriptor' return='java.io.FileDescriptor'/><method name='getLength' return='long'/><method name='getParcelFileDescriptor' return='android.os.ParcelFileDescriptor'/><method name='getStartOffset' return='long'/><method api_added='3' name='createInputStream' return='java.io.FileInputStream'><exception name='IOException' type='java.io.IOException'/></method><method api_added='3' name='createOutputStream' return='java.io.FileOutputStream'><exception name='IOException' type='java.io.IOException'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getDeclaredLength' return='long'/><method api_added='3' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='AssetManager' final='true' extends='java.lang.Object'><field name='ACCESS_BUFFER' final='true' static='true' value='3' type='int'/><field name='ACCESS_RANDOM' final='true' static='true' value='1' type='int'/><field name='ACCESS_STREAMING' final='true' static='true' value='2' type='int'/><field name='ACCESS_UNKNOWN' final='true' static='true' value='0' type='int'/><method name='close'/><method name='getLocales' final='true' native='true' return='java.lang.String[]'/><method name='list' final='true' native='true' return='java.lang.String[]'><parameter name='path' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='open' final='true' return='java.io.InputStream'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='open' final='true' return='java.io.InputStream'><parameter name='fileName' type='java.lang.String'/><parameter name='accessMode' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='openFd' final='true' return='android.content.res.AssetFileDescriptor'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='openNonAssetFd' final='true' return='android.content.res.AssetFileDescriptor'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='openNonAssetFd' final='true' return='android.content.res.AssetFileDescriptor'><parameter name='cookie' type='int'/><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='openXmlResourceParser' final='true' return='android.content.res.XmlResourceParser'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='openXmlResourceParser' final='true' return='android.content.res.XmlResourceParser'><parameter name='cookie' type='int'/><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='AssetManager.AssetInputStream' final='true' extends='java.io.InputStream'><method name='available' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='close' final='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getAssetInt' final='true' return='int'/><method name='mark' final='true'><parameter name='readlimit' type='int'/></method><method name='markSupported' final='true' return='boolean'/><method name='read' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' return='int'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' return='int'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='reset' final='true'><exception name='IOException' type='java.io.IOException'/></method><method name='skip' final='true' return='long'><parameter name='n' type='long'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ColorStateList' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='ColorStateList' type='android.content.res.ColorStateList'><parameter name='states' type='int[][]'/><parameter name='colors' type='int[]'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='createFromXml' static='true' return='android.content.res.ColorStateList'><parameter name='r' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='describeContents' return='int'/><method name='getColorForState' return='int'><parameter name='stateSet' type='int[]'/><parameter name='defaultColor' type='int'/></method><method name='getDefaultColor' return='int'/><method name='isStateful' return='boolean'/><method name='valueOf' static='true' return='android.content.res.ColorStateList'><parameter name='color' type='int'/></method><method name='withAlpha' return='android.content.res.ColorStateList'><parameter name='alpha' type='int'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Configuration' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='android.os.Parcelable'/><constructor name='Configuration' type='android.content.res.Configuration'/><constructor name='Configuration' type='android.content.res.Configuration'><parameter name='o' type='android.content.res.Configuration'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='KEYBOARDHIDDEN_NO' final='true' static='true' value='1' type='int'/><field name='KEYBOARDHIDDEN_UNDEFINED' final='true' static='true' value='0' type='int'/><field name='KEYBOARDHIDDEN_YES' final='true' static='true' value='2' type='int'/><field name='KEYBOARD_12KEY' final='true' static='true' value='3' type='int'/><field name='KEYBOARD_NOKEYS' final='true' static='true' value='1' type='int'/><field name='KEYBOARD_QWERTY' final='true' static='true' value='2' type='int'/><field name='KEYBOARD_UNDEFINED' final='true' static='true' value='0' type='int'/><field name='NAVIGATION_DPAD' final='true' static='true' value='2' type='int'/><field name='NAVIGATION_NONAV' final='true' static='true' value='1' type='int'/><field name='NAVIGATION_TRACKBALL' final='true' static='true' value='3' type='int'/><field name='NAVIGATION_UNDEFINED' final='true' static='true' value='0' type='int'/><field name='NAVIGATION_WHEEL' final='true' static='true' value='4' type='int'/><field name='ORIENTATION_LANDSCAPE' final='true' static='true' value='2' type='int'/><field name='ORIENTATION_PORTRAIT' final='true' static='true' value='1' type='int'/><field name='ORIENTATION_SQUARE' final='true' static='true' value='3' type='int'/><field name='ORIENTATION_UNDEFINED' final='true' static='true' value='0' type='int'/><field name='TOUCHSCREEN_FINGER' final='true' static='true' value='3' type='int'/><field name='TOUCHSCREEN_NOTOUCH' final='true' static='true' value='1' type='int'/><field name='TOUCHSCREEN_STYLUS' final='true' static='true' value='2' type='int'/><field name='TOUCHSCREEN_UNDEFINED' final='true' static='true' value='0' type='int'/><field name='fontScale' type='float'/><field name='keyboard' type='int'/><field name='keyboardHidden' type='int'/><field name='locale' type='java.util.Locale'/><field name='mcc' type='int'/><field name='mnc' type='int'/><field name='navigation' type='int'/><field name='orientation' type='int'/><field name='touchscreen' type='int'/><field api_added='3' name='HARDKEYBOARDHIDDEN_NO' final='true' static='true' value='1' type='int'/><field api_added='3' name='HARDKEYBOARDHIDDEN_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='3' name='HARDKEYBOARDHIDDEN_YES' final='true' static='true' value='2' type='int'/><field api_added='3' name='hardKeyboardHidden' type='int'/><field api_added='4' name='SCREENLAYOUT_LONG_MASK' final='true' static='true' value='48' type='int'/><field api_added='4' name='SCREENLAYOUT_LONG_NO' final='true' static='true' value='16' type='int'/><field api_added='4' name='SCREENLAYOUT_LONG_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='4' name='SCREENLAYOUT_LONG_YES' final='true' static='true' value='32' type='int'/><field api_added='4' name='SCREENLAYOUT_SIZE_LARGE' final='true' static='true' value='3' type='int'/><field api_added='4' name='SCREENLAYOUT_SIZE_MASK' final='true' static='true' value='15' type='int'/><field api_added='4' name='SCREENLAYOUT_SIZE_NORMAL' final='true' static='true' value='2' type='int'/><field api_added='4' name='SCREENLAYOUT_SIZE_SMALL' final='true' static='true' value='1' type='int'/><field api_added='4' name='SCREENLAYOUT_SIZE_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='4' name='screenLayout' type='int'/><field api_added='5' name='NAVIGATIONHIDDEN_NO' final='true' static='true' value='1' type='int'/><field api_added='5' name='NAVIGATIONHIDDEN_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='5' name='NAVIGATIONHIDDEN_YES' final='true' static='true' value='2' type='int'/><field api_added='5' name='navigationHidden' type='int'/><field api_added='8' name='UI_MODE_NIGHT_MASK' final='true' static='true' value='48' type='int'/><field api_added='8' name='UI_MODE_NIGHT_NO' final='true' static='true' value='16' type='int'/><field api_added='8' name='UI_MODE_NIGHT_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='8' name='UI_MODE_NIGHT_YES' final='true' static='true' value='32' type='int'/><field api_added='8' name='UI_MODE_TYPE_CAR' final='true' static='true' value='3' type='int'/><field api_added='8' name='UI_MODE_TYPE_DESK' final='true' static='true' value='2' type='int'/><field api_added='8' name='UI_MODE_TYPE_MASK' final='true' static='true' value='15' type='int'/><field api_added='8' name='UI_MODE_TYPE_NORMAL' final='true' static='true' value='1' type='int'/><field api_added='8' name='UI_MODE_TYPE_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='8' name='uiMode' type='int'/><method name='compareTo' return='int'><parameter name='that' type='android.content.res.Configuration'/></method><method name='describeContents' return='int'/><method name='diff' return='int'><parameter name='delta' type='android.content.res.Configuration'/></method><method name='equals' return='boolean'><parameter name='that' type='android.content.res.Configuration'/></method><method name='needNewResources' static='true' return='boolean'><parameter name='configChanges' type='int'/><parameter name='interestingChanges' type='int'/></method><method name='setToDefaults'/><method name='updateFrom' return='int'><parameter name='delta' type='android.content.res.Configuration'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='8' name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method api_added='8' name='setTo'><parameter name='o' type='android.content.res.Configuration'/></method></class><class name='Resources' extends='java.lang.Object'><constructor name='Resources' type='android.content.res.Resources'><parameter name='assets' type='android.content.res.AssetManager'/><parameter name='metrics' type='android.util.DisplayMetrics'/><parameter name='config' type='android.content.res.Configuration'/></constructor><method name='finishPreloading' final='true'/><method name='flushLayoutCache' final='true'/><method name='getAnimation' return='android.content.res.XmlResourceParser'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getAssets' final='true' return='android.content.res.AssetManager'/><method name='getColor' return='int'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getColorStateList' return='android.content.res.ColorStateList'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getConfiguration' return='android.content.res.Configuration'/><method name='getDimension' return='float'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getDimensionPixelOffset' return='int'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getDimensionPixelSize' return='int'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getDisplayMetrics' return='android.util.DisplayMetrics'/><method name='getDrawable' return='android.graphics.drawable.Drawable'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getIdentifier' return='int'><parameter name='name' type='java.lang.String'/><parameter name='defType' type='java.lang.String'/><parameter name='defPackage' type='java.lang.String'/></method><method name='getIntArray' return='int[]'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getInteger' return='int'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getLayout' return='android.content.res.XmlResourceParser'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getMovie' return='android.graphics.Movie'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getQuantityString' return='java.lang.String'><parameter name='id' type='int'/><parameter name='quantity' type='int'/><parameter name='formatArgs' type='java.lang.Object...'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getQuantityString' return='java.lang.String'><parameter name='id' type='int'/><parameter name='quantity' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getQuantityText' return='java.lang.CharSequence'><parameter name='id' type='int'/><parameter name='quantity' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getResourceEntryName' return='java.lang.String'><parameter name='resid' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getResourceName' return='java.lang.String'><parameter name='resid' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getResourcePackageName' return='java.lang.String'><parameter name='resid' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getResourceTypeName' return='java.lang.String'><parameter name='resid' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getString' return='java.lang.String'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getString' return='java.lang.String'><parameter name='id' type='int'/><parameter name='formatArgs' type='java.lang.Object...'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getStringArray' return='java.lang.String[]'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getSystem' static='true' return='android.content.res.Resources'/><method name='getText' return='java.lang.CharSequence'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getText' return='java.lang.CharSequence'><parameter name='id' type='int'/><parameter name='def' type='java.lang.CharSequence'/></method><method name='getTextArray' return='java.lang.CharSequence[]'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getValue'><parameter name='id' type='int'/><parameter name='outValue' type='android.util.TypedValue'/><parameter name='resolveRefs' type='boolean'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getValue'><parameter name='name' type='java.lang.String'/><parameter name='outValue' type='android.util.TypedValue'/><parameter name='resolveRefs' type='boolean'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='getXml' return='android.content.res.XmlResourceParser'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='newTheme' final='true' return='android.content.res.Resources.Theme'/><method name='obtainAttributes' return='android.content.res.TypedArray'><parameter name='set' type='android.util.AttributeSet'/><parameter name='attrs' type='int[]'/></method><method name='obtainTypedArray' return='android.content.res.TypedArray'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='openRawResource' return='java.io.InputStream'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='openRawResourceFd' return='android.content.res.AssetFileDescriptor'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='updateConfiguration'><parameter name='config' type='android.content.res.Configuration'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method api_added='3' name='getBoolean' return='boolean'><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method api_added='3' name='getFraction' return='float'><parameter name='id' type='int'/><parameter name='base' type='int'/><parameter name='pbase' type='int'/></method><method api_added='3' name='openRawResource' return='java.io.InputStream'><parameter name='id' type='int'/><parameter name='value' type='android.util.TypedValue'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method api_added='3' name='parseBundleExtra'><parameter name='tagName' type='java.lang.String'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='outBundle' type='android.os.Bundle'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method api_added='3' name='parseBundleExtras'><parameter name='parser' type='android.content.res.XmlResourceParser'/><parameter name='outBundle' type='android.os.Bundle'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method></class><class name='Resources.NotFoundException' extends='java.lang.RuntimeException' static='true'><constructor name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/><constructor name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='Resources.Theme' final='true' extends='java.lang.Object'><method name='applyStyle'><parameter name='resid' type='int'/><parameter name='force' type='boolean'/></method><method name='dump'><parameter name='priority' type='int'/><parameter name='tag' type='java.lang.String'/><parameter name='prefix' type='java.lang.String'/></method><method name='obtainStyledAttributes' return='android.content.res.TypedArray'><parameter name='attrs' type='int[]'/></method><method name='obtainStyledAttributes' return='android.content.res.TypedArray'><parameter name='resid' type='int'/><parameter name='attrs' type='int[]'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='obtainStyledAttributes' return='android.content.res.TypedArray'><parameter name='set' type='android.util.AttributeSet'/><parameter name='attrs' type='int[]'/><parameter name='defStyleAttr' type='int'/><parameter name='defStyleRes' type='int'/></method><method name='resolveAttribute' return='boolean'><parameter name='resid' type='int'/><parameter name='outValue' type='android.util.TypedValue'/><parameter name='resolveRefs' type='boolean'/></method><method name='setTo'><parameter name='other' type='android.content.res.Resources.Theme'/></method></class><class name='TypedArray' extends='java.lang.Object'><method name='getBoolean' return='boolean'><parameter name='index' type='int'/><parameter name='defValue' type='boolean'/></method><method name='getColor' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getColorStateList' return='android.content.res.ColorStateList'><parameter name='index' type='int'/></method><method name='getDimension' return='float'><parameter name='index' type='int'/><parameter name='defValue' type='float'/></method><method name='getDimensionPixelOffset' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getDimensionPixelSize' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getDrawable' return='android.graphics.drawable.Drawable'><parameter name='index' type='int'/></method><method name='getFloat' return='float'><parameter name='index' type='int'/><parameter name='defValue' type='float'/></method><method name='getFraction' return='float'><parameter name='index' type='int'/><parameter name='base' type='int'/><parameter name='pbase' type='int'/><parameter name='defValue' type='float'/></method><method name='getIndex' return='int'><parameter name='at' type='int'/></method><method name='getIndexCount' return='int'/><method name='getInt' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getInteger' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getLayoutDimension' return='int'><parameter name='index' type='int'/><parameter name='name' type='java.lang.String'/></method><method name='getNonResourceString' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getPositionDescription' return='java.lang.String'/><method name='getResourceId' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method><method name='getResources' return='android.content.res.Resources'/><method name='getString' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getText' return='java.lang.CharSequence'><parameter name='index' type='int'/></method><method name='getTextArray' return='java.lang.CharSequence[]'><parameter name='index' type='int'/></method><method name='getValue' return='boolean'><parameter name='index' type='int'/><parameter name='outValue' type='android.util.TypedValue'/></method><method name='hasValue' return='boolean'><parameter name='index' type='int'/></method><method name='length' return='int'/><method name='peekValue' return='android.util.TypedValue'><parameter name='index' type='int'/></method><method name='recycle'/><method api_added='3' name='getLayoutDimension' return='int'><parameter name='index' type='int'/><parameter name='defValue' type='int'/></method></class><class api_added='3' name='AssetFileDescriptor.AutoCloseInputStream' extends='android.os.ParcelFileDescriptor.AutoCloseInputStream' static='true'><constructor api_added='3' name='AssetFileDescriptor.AutoCloseInputStream' type='android.content.res.AssetFileDescriptor.AutoCloseInputStream'><parameter name='fd' type='android.content.res.AssetFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class api_added='3' name='AssetFileDescriptor.AutoCloseOutputStream' extends='android.os.ParcelFileDescriptor.AutoCloseOutputStream' static='true'><constructor api_added='3' name='AssetFileDescriptor.AutoCloseOutputStream' type='android.content.res.AssetFileDescriptor.AutoCloseOutputStream'><parameter name='fd' type='android.content.res.AssetFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></constructor></class><interface name='XmlResourceParser' abstract='true'><implements name='android.util.AttributeSet'/><implements name='org.xmlpull.v1.XmlPullParser'/><method name='close' abstract='true'/></interface></package><package name='android.database'><class name='AbstractCursor' extends='java.lang.Object' abstract='true'><implements name='android.database.CrossProcessCursor'/><constructor name='AbstractCursor' type='android.database.AbstractCursor'/><field name='mClosed' type='boolean' visibility='protected'/><field name='mContentResolver' type='android.content.ContentResolver' visibility='protected'/><field name='mCurrentRowID' type='java.lang.Long' visibility='protected'/><field name='mPos' type='int' visibility='protected'/><field name='mRowIdColumnIndex' type='int' visibility='protected'/><field name='mUpdatedRows' type='java.util.HashMap' visibility='protected'/><method name='checkPosition' visibility='protected'/><method name='close'/><method name='copyStringToBuffer'><parameter name='columnIndex' type='int'/><parameter name='buffer' type='android.database.CharArrayBuffer'/></method><method name='deactivate'/><method name='fillWindow'><parameter name='position' type='int'/><parameter name='window' type='android.database.CursorWindow'/></method><method name='getBlob' return='byte[]'><parameter name='column' type='int'/></method><method name='getColumnCount' return='int'/><method name='getColumnIndex' return='int'><parameter name='columnName' type='java.lang.String'/></method><method name='getColumnIndexOrThrow' return='int'><parameter name='columnName' type='java.lang.String'/></method><method name='getColumnName' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='getColumnNames' abstract='true' return='java.lang.String[]'/><method name='getCount' abstract='true' return='int'/><method name='getDouble' abstract='true' return='double'><parameter name='column' type='int'/></method><method name='getExtras' return='android.os.Bundle'/><method name='getFloat' abstract='true' return='float'><parameter name='column' type='int'/></method><method name='getInt' abstract='true' return='int'><parameter name='column' type='int'/></method><method name='getLong' abstract='true' return='long'><parameter name='column' type='int'/></method><method name='getPosition' final='true' return='int'/><method name='getShort' abstract='true' return='short'><parameter name='column' type='int'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='column' type='int'/></method><method name='getUpdatedField' visibility='protected' return='java.lang.Object'><parameter name='columnIndex' type='int'/></method><method name='getWantsAllOnMoveCalls' return='boolean'/><method name='getWindow' return='android.database.CursorWindow'/><method name='isAfterLast' final='true' return='boolean'/><method name='isBeforeFirst' final='true' return='boolean'/><method name='isClosed' return='boolean'/><method name='isFieldUpdated' visibility='protected' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='isFirst' final='true' return='boolean'/><method name='isLast' final='true' return='boolean'/><method name='isNull' abstract='true' return='boolean'><parameter name='column' type='int'/></method><method name='move' final='true' return='boolean'><parameter name='offset' type='int'/></method><method name='moveToFirst' final='true' return='boolean'/><method name='moveToLast' final='true' return='boolean'/><method name='moveToNext' final='true' return='boolean'/><method name='moveToPosition' final='true' return='boolean'><parameter name='position' type='int'/></method><method name='moveToPrevious' final='true' return='boolean'/><method name='onChange' visibility='protected'><parameter name='selfChange' type='boolean'/></method><method name='onMove' return='boolean'><parameter name='oldPosition' type='int'/><parameter name='newPosition' type='int'/></method><method name='registerContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='requery' return='boolean'/><method name='respond' return='android.os.Bundle'><parameter name='extras' type='android.os.Bundle'/></method><method name='setNotificationUri'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='notifyUri' type='android.net.Uri'/></method><method name='unregisterContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method></class><class name='AbstractCursor.SelfContentObserver' extends='android.database.ContentObserver' static='true' visibility='protected'><constructor name='AbstractCursor.SelfContentObserver' type='android.database.AbstractCursor.SelfContentObserver'><parameter name='cursor' type='android.database.AbstractCursor'/></constructor></class><class name='AbstractWindowedCursor' extends='android.database.AbstractCursor' abstract='true'><constructor name='AbstractWindowedCursor' type='android.database.AbstractWindowedCursor'/><field name='mWindow' type='android.database.CursorWindow' visibility='protected'/><method name='getDouble' return='double'><parameter name='columnIndex' type='int'/></method><method name='getFloat' return='float'><parameter name='columnIndex' type='int'/></method><method name='getInt' return='int'><parameter name='columnIndex' type='int'/></method><method name='getLong' return='long'><parameter name='columnIndex' type='int'/></method><method name='getShort' return='short'><parameter name='columnIndex' type='int'/></method><method name='getString' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='hasWindow' return='boolean'/><method name='isBlob' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='isNull' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='setWindow'><parameter name='window' type='android.database.CursorWindow'/></method><method api_added='5' name='isFloat' return='boolean'><parameter name='columnIndex' type='int'/></method><method api_added='5' name='isLong' return='boolean'><parameter name='columnIndex' type='int'/></method><method api_added='5' name='isString' return='boolean'><parameter name='columnIndex' type='int'/></method></class><class name='CharArrayBuffer' final='true' extends='java.lang.Object'><constructor name='CharArrayBuffer' type='android.database.CharArrayBuffer'><parameter name='size' type='int'/></constructor><constructor name='CharArrayBuffer' type='android.database.CharArrayBuffer'><parameter name='buf' type='char[]'/></constructor><field name='data' value='null' type='char[]'/><field name='sizeCopied' type='int'/></class><class name='ContentObservable' extends='android.database.Observable'><constructor name='ContentObservable' type='android.database.ContentObservable'/><method name='dispatchChange'><parameter name='selfChange' type='boolean'/></method><method name='notifyChange'><parameter name='selfChange' type='boolean'/></method><method name='registerObserver'><parameter name='observer' type='android.database.ContentObserver'/></method></class><class name='ContentObserver' extends='java.lang.Object' abstract='true'><constructor name='ContentObserver' type='android.database.ContentObserver'><parameter name='handler' type='android.os.Handler'/></constructor><method name='deliverSelfNotifications' return='boolean'/><method name='dispatchChange' final='true'><parameter name='selfChange' type='boolean'/></method><method name='onChange'><parameter name='selfChange' type='boolean'/></method></class><class name='CursorIndexOutOfBoundsException' extends='java.lang.IndexOutOfBoundsException'><constructor name='CursorIndexOutOfBoundsException' type='android.database.CursorIndexOutOfBoundsException'><parameter name='index' type='int'/><parameter name='size' type='int'/></constructor><constructor name='CursorIndexOutOfBoundsException' type='android.database.CursorIndexOutOfBoundsException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='CursorJoiner' final='true' extends='java.lang.Object'><implements name='java.lang.Iterable'/><implements name='java.util.Iterator'/><constructor name='CursorJoiner' type='android.database.CursorJoiner'><parameter name='cursorLeft' type='android.database.Cursor'/><parameter name='columnNamesLeft' type='java.lang.String[]'/><parameter name='cursorRight' type='android.database.Cursor'/><parameter name='columnNamesRight' type='java.lang.String[]'/></constructor><method name='hasNext' return='boolean'/><method name='iterator' return='java.util.Iterator&lt;android.database.CursorJoiner.Result&gt;'/><method name='next' return='android.database.CursorJoiner.Result'/><method name='remove'/></class><class name='CursorJoiner.Result' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.database.CursorJoiner.Result'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.database.CursorJoiner.Result[]'/></class><class name='CursorWindow' extends='android.database.sqlite.SQLiteClosable'><implements name='android.os.Parcelable'/><constructor name='CursorWindow' type='android.database.CursorWindow'><parameter name='localWindow' type='boolean'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='allocRow' return='boolean'/><method name='clear'/><method name='close'/><method name='copyStringToBuffer'><parameter name='row' type='int'/><parameter name='col' type='int'/><parameter name='buffer' type='android.database.CharArrayBuffer'/></method><method name='describeContents' return='int'/><method name='freeLastRow'/><method name='getBlob' return='byte[]'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getDouble' return='double'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getFloat' return='float'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getInt' return='int'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getLong' return='long'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getNumRows' return='int'/><method name='getShort' return='short'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='getStartPosition' return='int'/><method name='getString' return='java.lang.String'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='isBlob' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='isNull' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='newFromParcel' static='true' return='android.database.CursorWindow'><parameter name='p' type='android.os.Parcel'/></method><method name='onAllReferencesReleased' visibility='protected'/><method name='putBlob' return='boolean'><parameter name='value' type='byte[]'/><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='putDouble' return='boolean'><parameter name='value' type='double'/><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='putLong' return='boolean'><parameter name='value' type='long'/><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='putNull' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='putString' return='boolean'><parameter name='value' type='java.lang.String'/><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method name='setNumColumns' return='boolean'><parameter name='columnNum' type='int'/></method><method name='setStartPosition'><parameter name='pos' type='int'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='5' name='isFloat' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method api_added='5' name='isLong' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method><method api_added='5' name='isString' return='boolean'><parameter name='row' type='int'/><parameter name='col' type='int'/></method></class><class name='CursorWrapper' extends='java.lang.Object'><implements name='android.database.Cursor'/><constructor name='CursorWrapper' type='android.database.CursorWrapper'><parameter name='cursor' type='android.database.Cursor'/></constructor><method name='close'/><method name='copyStringToBuffer'><parameter name='columnIndex' type='int'/><parameter name='buffer' type='android.database.CharArrayBuffer'/></method><method name='deactivate'/><method name='getBlob' return='byte[]'><parameter name='columnIndex' type='int'/></method><method name='getColumnCount' return='int'/><method name='getColumnIndex' deprecated='2' return='int'><parameter name='columnName' type='java.lang.String'/></method><method name='getColumnIndexOrThrow' return='int'><parameter name='columnName' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getColumnName' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='getColumnNames' return='java.lang.String[]'/><method name='getCount' return='int'/><method name='getDouble' return='double'><parameter name='columnIndex' type='int'/></method><method name='getExtras' return='android.os.Bundle'/><method name='getFloat' return='float'><parameter name='columnIndex' type='int'/></method><method name='getInt' return='int'><parameter name='columnIndex' type='int'/></method><method name='getLong' return='long'><parameter name='columnIndex' type='int'/></method><method name='getPosition' return='int'/><method name='getShort' return='short'><parameter name='columnIndex' type='int'/></method><method name='getString' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='getWantsAllOnMoveCalls' return='boolean'/><method name='isAfterLast' return='boolean'/><method name='isBeforeFirst' return='boolean'/><method name='isClosed' return='boolean'/><method name='isFirst' return='boolean'/><method name='isLast' return='boolean'/><method name='isNull' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='move' return='boolean'><parameter name='offset' type='int'/></method><method name='moveToFirst' return='boolean'/><method name='moveToLast' return='boolean'/><method name='moveToNext' return='boolean'/><method name='moveToPosition' return='boolean'><parameter name='position' type='int'/></method><method name='moveToPrevious' return='boolean'/><method name='registerContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='requery' return='boolean'/><method name='respond' return='android.os.Bundle'><parameter name='extras' type='android.os.Bundle'/></method><method name='setNotificationUri'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/></method><method name='unregisterContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method></class><class name='DataSetObservable' extends='android.database.Observable'><constructor name='DataSetObservable' type='android.database.DataSetObservable'/><method name='notifyChanged'/><method name='notifyInvalidated'/></class><class name='DataSetObserver' extends='java.lang.Object' abstract='true'><constructor name='DataSetObserver' type='android.database.DataSetObserver'/><method name='onChanged'/><method name='onInvalidated'/></class><class name='DatabaseUtils' extends='java.lang.Object'><constructor name='DatabaseUtils' type='android.database.DatabaseUtils'/><method name='appendEscapedSQLString' static='true' deprecated='2'><parameter name='sb' type='java.lang.StringBuilder'/><parameter name='sqlString' type='java.lang.String'/></method><method name='appendValueToSql' final='true' static='true'><parameter name='sql' type='java.lang.StringBuilder'/><parameter name='value' type='java.lang.Object'/></method><method name='bindObjectToProgram' static='true'><parameter name='prog' type='android.database.sqlite.SQLiteProgram'/><parameter name='index' type='int'/><parameter name='value' type='java.lang.Object'/></method><method name='createDbFromSqlStatements' static='true'><parameter name='context' type='android.content.Context'/><parameter name='dbName' type='java.lang.String'/><parameter name='dbVersion' type='int'/><parameter name='sqlStatements' type='java.lang.String'/></method><method name='cursorDoubleToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='key' type='java.lang.String'/></method><method name='cursorDoubleToCursorValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/></method><method name='cursorIntToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/></method><method name='cursorIntToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='key' type='java.lang.String'/></method><method name='cursorLongToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/></method><method name='cursorLongToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='key' type='java.lang.String'/></method><method name='cursorRowToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/></method><method name='cursorStringToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/></method><method name='cursorStringToContentValues' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='key' type='java.lang.String'/></method><method name='cursorStringToInsertHelper' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='field' type='java.lang.String'/><parameter name='inserter' type='android.database.DatabaseUtils.InsertHelper'/><parameter name='index' type='int'/></method><method name='dumpCurrentRow' static='true'><parameter name='cursor' type='android.database.Cursor'/></method><method name='dumpCurrentRow' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='stream' type='java.io.PrintStream'/></method><method name='dumpCurrentRow' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='sb' type='java.lang.StringBuilder'/></method><method name='dumpCurrentRowToString' static='true' return='java.lang.String'><parameter name='cursor' type='android.database.Cursor'/></method><method name='dumpCursor' static='true'><parameter name='cursor' type='android.database.Cursor'/></method><method name='dumpCursor' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='stream' type='java.io.PrintStream'/></method><method name='dumpCursor' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='sb' type='java.lang.StringBuilder'/></method><method name='dumpCursorToString' static='true' return='java.lang.String'><parameter name='cursor' type='android.database.Cursor'/></method><method name='getCollationKey' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getHexCollationKey' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='longForQuery' static='true' return='long'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='query' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='longForQuery' static='true' return='long'><parameter name='prog' type='android.database.sqlite.SQLiteStatement'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='queryNumEntries' static='true' return='long'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='table' type='java.lang.String'/></method><method name='readExceptionFromParcel' final='true' static='true'><parameter name='reply' type='android.os.Parcel'/></method><method name='readExceptionWithFileNotFoundExceptionFromParcel' static='true'><parameter name='reply' type='android.os.Parcel'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='sqlEscapeString' static='true' return='java.lang.String'><parameter name='value' type='java.lang.String'/></method><method name='stringForQuery' static='true' return='java.lang.String'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='query' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='stringForQuery' static='true' return='java.lang.String'><parameter name='prog' type='android.database.sqlite.SQLiteStatement'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='writeExceptionToParcel' final='true' static='true'><parameter name='reply' type='android.os.Parcel'/><parameter name='e' type='java.lang.Exception'/></method><method api_added='5' name='readExceptionWithOperationApplicationExceptionFromParcel' static='true'><parameter name='reply' type='android.os.Parcel'/><exception name='OperationApplicationException' type='android.content.OperationApplicationException'/></method><method api_added='8' name='cursorDoubleToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method><method api_added='8' name='cursorFloatToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method><method api_added='8' name='cursorIntToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method><method api_added='8' name='cursorLongToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method><method api_added='8' name='cursorShortToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method><method api_added='8' name='cursorStringToContentValuesIfPresent' static='true'><parameter name='cursor' type='android.database.Cursor'/><parameter name='values' type='android.content.ContentValues'/><parameter name='column' type='java.lang.String'/></method></class><class name='DatabaseUtils.InsertHelper' extends='java.lang.Object' static='true'><constructor name='DatabaseUtils.InsertHelper' type='android.database.DatabaseUtils.InsertHelper'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='tableName' type='java.lang.String'/></constructor><field name='TABLE_INFO_PRAGMA_DEFAULT_INDEX' final='true' static='true' value='4' type='int'/><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='double'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='float'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='long'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='int'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='boolean'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='byte[]'/></method><method name='bind'><parameter name='index' type='int'/><parameter name='value' type='java.lang.String'/></method><method name='bindNull'><parameter name='index' type='int'/></method><method name='close'/><method name='execute' return='long'/><method name='getColumnIndex' return='int'><parameter name='key' type='java.lang.String'/></method><method name='insert' return='long'><parameter name='values' type='android.content.ContentValues'/></method><method name='prepareForInsert'/><method name='prepareForReplace'/><method name='replace' return='long'><parameter name='values' type='android.content.ContentValues'/></method></class><class name='MatrixCursor' extends='android.database.AbstractCursor'><constructor name='MatrixCursor' type='android.database.MatrixCursor'><parameter name='columnNames' type='java.lang.String[]'/><parameter name='initialCapacity' type='int'/></constructor><constructor name='MatrixCursor' type='android.database.MatrixCursor'><parameter name='columnNames' type='java.lang.String[]'/></constructor><method name='addRow'><parameter name='columnValues' type='java.lang.Object[]'/></method><method name='addRow'><parameter name='columnValues' type='java.lang.Iterable&lt;?&gt;'/></method><method name='getColumnNames' return='java.lang.String[]'/><method name='getCount' return='int'/><method name='getDouble' return='double'><parameter name='column' type='int'/></method><method name='getFloat' return='float'><parameter name='column' type='int'/></method><method name='getInt' return='int'><parameter name='column' type='int'/></method><method name='getLong' return='long'><parameter name='column' type='int'/></method><method name='getShort' return='short'><parameter name='column' type='int'/></method><method name='getString' return='java.lang.String'><parameter name='column' type='int'/></method><method name='isNull' return='boolean'><parameter name='column' type='int'/></method><method name='newRow' return='android.database.MatrixCursor.RowBuilder'/></class><class name='MatrixCursor.RowBuilder' extends='java.lang.Object'><method name='add' return='android.database.MatrixCursor.RowBuilder'><parameter name='columnValue' type='java.lang.Object'/></method></class><class name='MergeCursor' extends='android.database.AbstractCursor'><constructor name='MergeCursor' type='android.database.MergeCursor'><parameter name='cursors' type='android.database.Cursor[]'/></constructor><method name='getColumnNames' return='java.lang.String[]'/><method name='getCount' return='int'/><method name='getDouble' return='double'><parameter name='column' type='int'/></method><method name='getFloat' return='float'><parameter name='column' type='int'/></method><method name='getInt' return='int'><parameter name='column' type='int'/></method><method name='getLong' return='long'><parameter name='column' type='int'/></method><method name='getShort' return='short'><parameter name='column' type='int'/></method><method name='getString' return='java.lang.String'><parameter name='column' type='int'/></method><method name='isNull' return='boolean'><parameter name='column' type='int'/></method></class><class name='Observable' extends='java.lang.Object' abstract='true'><constructor name='Observable' type='android.database.Observable'/><field name='mObservers' final='true' type='java.util.ArrayList' visibility='protected'/><method name='registerObserver'><parameter name='observer' type='T'/></method><method name='unregisterAll'/><method name='unregisterObserver'><parameter name='observer' type='T'/></method></class><class name='SQLException' extends='java.lang.RuntimeException'><constructor name='SQLException' type='android.database.SQLException'/><constructor name='SQLException' type='android.database.SQLException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='StaleDataException' extends='java.lang.RuntimeException'><constructor name='StaleDataException' type='android.database.StaleDataException'/><constructor name='StaleDataException' type='android.database.StaleDataException'><parameter name='description' type='java.lang.String'/></constructor></class><interface name='CrossProcessCursor' abstract='true'><implements name='android.database.Cursor'/><method name='fillWindow' abstract='true'><parameter name='pos' type='int'/><parameter name='winow' type='android.database.CursorWindow'/></method><method name='getWindow' abstract='true' return='android.database.CursorWindow'/><method name='onMove' abstract='true' return='boolean'><parameter name='oldPosition' type='int'/><parameter name='newPosition' type='int'/></method></interface><interface name='Cursor' abstract='true'><method name='close' abstract='true'/><method name='copyStringToBuffer' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='buffer' type='android.database.CharArrayBuffer'/></method><method name='deactivate' abstract='true'/><method name='getBlob' abstract='true' return='byte[]'><parameter name='columnIndex' type='int'/></method><method name='getColumnCount' abstract='true' return='int'/><method name='getColumnIndex' abstract='true' deprecated='2' return='int'><parameter name='columnName' type='java.lang.String'/></method><method name='getColumnIndexOrThrow' abstract='true' return='int'><parameter name='columnName' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getColumnName' abstract='true' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='getColumnNames' abstract='true' return='java.lang.String[]'/><method name='getCount' abstract='true' return='int'/><method name='getDouble' abstract='true' return='double'><parameter name='columnIndex' type='int'/></method><method name='getExtras' abstract='true' return='android.os.Bundle'/><method name='getFloat' abstract='true' return='float'><parameter name='columnIndex' type='int'/></method><method name='getInt' abstract='true' return='int'><parameter name='columnIndex' type='int'/></method><method name='getLong' abstract='true' return='long'><parameter name='columnIndex' type='int'/></method><method name='getPosition' abstract='true' return='int'/><method name='getShort' abstract='true' return='short'><parameter name='columnIndex' type='int'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method name='getWantsAllOnMoveCalls' abstract='true' return='boolean'/><method name='isAfterLast' abstract='true' return='boolean'/><method name='isBeforeFirst' abstract='true' return='boolean'/><method name='isClosed' abstract='true' return='boolean'/><method name='isFirst' abstract='true' return='boolean'/><method name='isLast' abstract='true' return='boolean'/><method name='isNull' abstract='true' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='move' abstract='true' return='boolean'><parameter name='offset' type='int'/></method><method name='moveToFirst' abstract='true' return='boolean'/><method name='moveToLast' abstract='true' return='boolean'/><method name='moveToNext' abstract='true' return='boolean'/><method name='moveToPosition' abstract='true' return='boolean'><parameter name='position' type='int'/></method><method name='moveToPrevious' abstract='true' return='boolean'/><method name='registerContentObserver' abstract='true'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='registerDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='requery' abstract='true' return='boolean'/><method name='respond' abstract='true' return='android.os.Bundle'><parameter name='extras' type='android.os.Bundle'/></method><method name='setNotificationUri' abstract='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/></method><method name='unregisterContentObserver' abstract='true'><parameter name='observer' type='android.database.ContentObserver'/></method><method name='unregisterDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method></interface></package><package name='android.database.sqlite'><class name='SQLiteAbortException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteAbortException' type='android.database.sqlite.SQLiteAbortException'/><constructor name='SQLiteAbortException' type='android.database.sqlite.SQLiteAbortException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteClosable' extends='java.lang.Object' abstract='true'><constructor name='SQLiteClosable' type='android.database.sqlite.SQLiteClosable'/><method name='acquireReference'/><method name='onAllReferencesReleased' abstract='true' visibility='protected'/><method name='onAllReferencesReleasedFromContainer' visibility='protected'/><method name='releaseReference'/><method name='releaseReferenceFromContainer'/></class><class name='SQLiteConstraintException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteConstraintException' type='android.database.sqlite.SQLiteConstraintException'/><constructor name='SQLiteConstraintException' type='android.database.sqlite.SQLiteConstraintException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteCursor' extends='android.database.AbstractWindowedCursor'><constructor name='SQLiteCursor' type='android.database.sqlite.SQLiteCursor'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='driver' type='android.database.sqlite.SQLiteCursorDriver'/><parameter name='editTable' type='java.lang.String'/><parameter name='query' type='android.database.sqlite.SQLiteQuery'/></constructor><method name='getColumnNames' return='java.lang.String[]'/><method name='getCount' return='int'/><method name='getDatabase' return='android.database.sqlite.SQLiteDatabase'/><method name='setSelectionArguments'><parameter name='selectionArgs' type='java.lang.String[]'/></method></class><class name='SQLiteDatabase' extends='android.database.sqlite.SQLiteClosable'><field name='CREATE_IF_NECESSARY' final='true' static='true' value='268435456' type='int'/><field name='NO_LOCALIZED_COLLATORS' final='true' static='true' value='16' type='int'/><field name='OPEN_READONLY' final='true' static='true' value='1' type='int'/><field name='OPEN_READWRITE' final='true' static='true' value='0' type='int'/><field name='SQLITE_MAX_LIKE_PATTERN_LENGTH' final='true' static='true' value='50000' type='int'/><field api_added='8' name='CONFLICT_ABORT' final='true' static='true' value='2' type='int'/><field api_added='8' name='CONFLICT_FAIL' final='true' static='true' value='3' type='int'/><field api_added='8' name='CONFLICT_IGNORE' final='true' static='true' value='4' type='int'/><field api_added='8' name='CONFLICT_NONE' final='true' static='true' value='0' type='int'/><field api_added='8' name='CONFLICT_REPLACE' final='true' static='true' value='5' type='int'/><field api_added='8' name='CONFLICT_ROLLBACK' final='true' static='true' value='1' type='int'/><method name='beginTransaction'/><method name='close'/><method name='compileStatement' return='android.database.sqlite.SQLiteStatement'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='android.database.SQLException'/></method><method name='create' static='true' return='android.database.sqlite.SQLiteDatabase'><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='delete' return='int'><parameter name='table' type='java.lang.String'/><parameter name='whereClause' type='java.lang.String'/><parameter name='whereArgs' type='java.lang.String[]'/></method><method name='endTransaction'/><method name='execSQL'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='android.database.SQLException'/></method><method name='execSQL'><parameter name='sql' type='java.lang.String'/><parameter name='bindArgs' type='java.lang.Object[]'/><exception name='SQLException' type='android.database.SQLException'/></method><method name='findEditTable' static='true' return='java.lang.String'><parameter name='tables' type='java.lang.String'/></method><method name='getMaximumSize' return='long'/><method name='getPageSize' return='long'/><method name='getPath' final='true' return='java.lang.String'/><method name='getSyncedTables' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/><method name='getVersion' return='int'/><method name='inTransaction' return='boolean'/><method name='insert' return='long'><parameter name='table' type='java.lang.String'/><parameter name='nullColumnHack' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/></method><method name='insertOrThrow' return='long'><parameter name='table' type='java.lang.String'/><parameter name='nullColumnHack' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><exception name='SQLException' type='android.database.SQLException'/></method><method name='isDbLockedByCurrentThread' return='boolean'/><method name='isDbLockedByOtherThreads' return='boolean'/><method name='isOpen' return='boolean'/><method name='isReadOnly' return='boolean'/><method name='markTableSyncable'><parameter name='table' type='java.lang.String'/><parameter name='deletedTable' type='java.lang.String'/></method><method name='markTableSyncable'><parameter name='table' type='java.lang.String'/><parameter name='foreignKey' type='java.lang.String'/><parameter name='updateTable' type='java.lang.String'/></method><method name='needUpgrade' return='boolean'><parameter name='newVersion' type='int'/></method><method name='onAllReferencesReleased' visibility='protected'/><method name='openDatabase' static='true' return='android.database.sqlite.SQLiteDatabase'><parameter name='path' type='java.lang.String'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/><parameter name='flags' type='int'/></method><method name='openOrCreateDatabase' static='true' return='android.database.sqlite.SQLiteDatabase'><parameter name='file' type='java.io.File'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='openOrCreateDatabase' static='true' return='android.database.sqlite.SQLiteDatabase'><parameter name='path' type='java.lang.String'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='query' return='android.database.Cursor'><parameter name='distinct' type='boolean'/><parameter name='table' type='java.lang.String'/><parameter name='columns' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='query' return='android.database.Cursor'><parameter name='table' type='java.lang.String'/><parameter name='columns' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/></method><method name='query' return='android.database.Cursor'><parameter name='table' type='java.lang.String'/><parameter name='columns' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='queryWithFactory' return='android.database.Cursor'><parameter name='cursorFactory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/><parameter name='distinct' type='boolean'/><parameter name='table' type='java.lang.String'/><parameter name='columns' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='rawQuery' return='android.database.Cursor'><parameter name='sql' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method name='rawQueryWithFactory' return='android.database.Cursor'><parameter name='cursorFactory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/><parameter name='sql' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='editTable' type='java.lang.String'/></method><method name='releaseMemory' native='true' static='true' return='int'/><method name='replace' return='long'><parameter name='table' type='java.lang.String'/><parameter name='nullColumnHack' type='java.lang.String'/><parameter name='initialValues' type='android.content.ContentValues'/></method><method name='replaceOrThrow' return='long'><parameter name='table' type='java.lang.String'/><parameter name='nullColumnHack' type='java.lang.String'/><parameter name='initialValues' type='android.content.ContentValues'/><exception name='SQLException' type='android.database.SQLException'/></method><method name='setLocale'><parameter name='locale' type='java.util.Locale'/></method><method name='setLockingEnabled'><parameter name='lockingEnabled' type='boolean'/></method><method name='setMaximumSize' return='long'><parameter name='numBytes' type='long'/></method><method name='setPageSize'><parameter name='numBytes' type='long'/></method><method name='setTransactionSuccessful'/><method name='setVersion'><parameter name='version' type='int'/></method><method name='update' return='int'><parameter name='table' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='whereClause' type='java.lang.String'/><parameter name='whereArgs' type='java.lang.String[]'/></method><method name='yieldIfContended' deprecated='3' return='boolean'/><method api_added='3' name='yieldIfContendedSafely' return='boolean'/><method api_added='5' name='beginTransactionWithListener'><parameter name='transactionListener' type='android.database.sqlite.SQLiteTransactionListener'/></method><method api_added='5' name='yieldIfContendedSafely' return='boolean'><parameter name='sleepAfterYieldDelay' type='long'/></method><method api_added='8' name='insertWithOnConflict' return='long'><parameter name='table' type='java.lang.String'/><parameter name='nullColumnHack' type='java.lang.String'/><parameter name='initialValues' type='android.content.ContentValues'/><parameter name='conflictAlgorithm' type='int'/></method><method api_added='8' name='updateWithOnConflict' return='int'><parameter name='table' type='java.lang.String'/><parameter name='values' type='android.content.ContentValues'/><parameter name='whereClause' type='java.lang.String'/><parameter name='whereArgs' type='java.lang.String[]'/><parameter name='conflictAlgorithm' type='int'/></method></class><class name='SQLiteDatabaseCorruptException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteDatabaseCorruptException' type='android.database.sqlite.SQLiteDatabaseCorruptException'/><constructor name='SQLiteDatabaseCorruptException' type='android.database.sqlite.SQLiteDatabaseCorruptException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteDiskIOException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteDiskIOException' type='android.database.sqlite.SQLiteDiskIOException'/><constructor name='SQLiteDiskIOException' type='android.database.sqlite.SQLiteDiskIOException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteDoneException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteDoneException' type='android.database.sqlite.SQLiteDoneException'/><constructor name='SQLiteDoneException' type='android.database.sqlite.SQLiteDoneException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteException' extends='android.database.SQLException'><constructor name='SQLiteException' type='android.database.sqlite.SQLiteException'/><constructor name='SQLiteException' type='android.database.sqlite.SQLiteException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteFullException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteFullException' type='android.database.sqlite.SQLiteFullException'/><constructor name='SQLiteFullException' type='android.database.sqlite.SQLiteFullException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteMisuseException' extends='android.database.sqlite.SQLiteException'><constructor name='SQLiteMisuseException' type='android.database.sqlite.SQLiteMisuseException'/><constructor name='SQLiteMisuseException' type='android.database.sqlite.SQLiteMisuseException'><parameter name='error' type='java.lang.String'/></constructor></class><class name='SQLiteOpenHelper' extends='java.lang.Object' abstract='true'><constructor name='SQLiteOpenHelper' type='android.database.sqlite.SQLiteOpenHelper'><parameter name='context' type='android.content.Context'/><parameter name='name' type='java.lang.String'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/><parameter name='version' type='int'/></constructor><method name='close' synchronized='true'/><method name='getReadableDatabase' synchronized='true' return='android.database.sqlite.SQLiteDatabase'/><method name='getWritableDatabase' synchronized='true' return='android.database.sqlite.SQLiteDatabase'/><method name='onCreate' abstract='true'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/></method><method name='onOpen'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/></method><method name='onUpgrade' abstract='true'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='oldVersion' type='int'/><parameter name='newVersion' type='int'/></method></class><class name='SQLiteProgram' extends='android.database.sqlite.SQLiteClosable' abstract='true'><field name='mDatabase' type='android.database.sqlite.SQLiteDatabase' deprecated='8' visibility='protected'/><field name='nHandle' type='int' deprecated='8' visibility='protected'/><field name='nStatement' type='int' deprecated='8' visibility='protected'/><method name='bindBlob'><parameter name='index' type='int'/><parameter name='value' type='byte[]'/></method><method name='bindDouble'><parameter name='index' type='int'/><parameter name='value' type='double'/></method><method name='bindLong'><parameter name='index' type='int'/><parameter name='value' type='long'/></method><method name='bindNull'><parameter name='index' type='int'/></method><method name='bindString'><parameter name='index' type='int'/><parameter name='value' type='java.lang.String'/></method><method name='clearBindings'/><method name='close'/><method name='compile' deprecated='8' visibility='protected'><parameter name='sql' type='java.lang.String'/><parameter name='forceCompilation' type='boolean'/></method><method name='getUniqueId' final='true' return='int'/><method name='native_bind_blob' final='true' native='true' visibility='protected'><parameter name='index' type='int'/><parameter name='value' type='byte[]'/></method><method name='native_bind_double' final='true' native='true' visibility='protected'><parameter name='index' type='int'/><parameter name='value' type='double'/></method><method name='native_bind_long' final='true' native='true' visibility='protected'><parameter name='index' type='int'/><parameter name='value' type='long'/></method><method name='native_bind_null' final='true' native='true' visibility='protected'><parameter name='index' type='int'/></method><method name='native_bind_string' final='true' native='true' visibility='protected'><parameter name='index' type='int'/><parameter name='value' type='java.lang.String'/></method><method name='native_compile' final='true' native='true' deprecated='8' visibility='protected'><parameter name='sql' type='java.lang.String'/></method><method name='native_finalize' final='true' native='true' deprecated='8' visibility='protected'/><method name='onAllReferencesReleased' visibility='protected'/></class><class name='SQLiteQuery' extends='android.database.sqlite.SQLiteProgram'/><class name='SQLiteQueryBuilder' extends='java.lang.Object'><constructor name='SQLiteQueryBuilder' type='android.database.sqlite.SQLiteQueryBuilder'/><method name='appendColumns' static='true'><parameter name='s' type='java.lang.StringBuilder'/><parameter name='columns' type='java.lang.String[]'/></method><method name='appendWhere'><parameter name='inWhere' type='java.lang.CharSequence'/></method><method name='appendWhereEscapeString'><parameter name='inWhere' type='java.lang.String'/></method><method name='buildQuery' return='java.lang.String'><parameter name='projectionIn' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='sortOrder' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='buildQueryString' static='true' return='java.lang.String'><parameter name='distinct' type='boolean'/><parameter name='tables' type='java.lang.String'/><parameter name='columns' type='java.lang.String[]'/><parameter name='where' type='java.lang.String'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='buildUnionQuery' return='java.lang.String'><parameter name='subQueries' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='buildUnionSubQuery' return='java.lang.String'><parameter name='typeDiscriminatorColumn' type='java.lang.String'/><parameter name='unionColumns' type='java.lang.String[]'/><parameter name='columnsPresentInTable' type='java.util.Set&lt;java.lang.String&gt;'/><parameter name='computedColumnsOffset' type='int'/><parameter name='typeDiscriminatorValue' type='java.lang.String'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/></method><method name='getTables' return='java.lang.String'/><method name='query' return='android.database.Cursor'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='projectionIn' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='sortOrder' type='java.lang.String'/></method><method name='query' return='android.database.Cursor'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='projectionIn' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='groupBy' type='java.lang.String'/><parameter name='having' type='java.lang.String'/><parameter name='sortOrder' type='java.lang.String'/><parameter name='limit' type='java.lang.String'/></method><method name='setCursorFactory'><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='setDistinct'><parameter name='distinct' type='boolean'/></method><method name='setProjectionMap'><parameter name='columnMap' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method><method name='setTables'><parameter name='inTables' type='java.lang.String'/></method></class><class name='SQLiteStatement' extends='android.database.sqlite.SQLiteProgram'><method name='execute'/><method name='executeInsert' return='long'/><method name='simpleQueryForLong' return='long'/><method name='simpleQueryForString' return='java.lang.String'/></class><interface name='SQLiteCursorDriver' abstract='true'><method name='cursorClosed' abstract='true'/><method name='cursorDeactivated' abstract='true'/><method name='cursorRequeried' abstract='true'><parameter name='cursor' type='android.database.Cursor'/></method><method name='query' abstract='true' return='android.database.Cursor'><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/><parameter name='bindArgs' type='java.lang.String[]'/></method><method name='setBindArguments' abstract='true'><parameter name='bindArgs' type='java.lang.String[]'/></method></interface><interface name='SQLiteDatabase.CursorFactory' abstract='true' static='true'><method name='newCursor' abstract='true' return='android.database.Cursor'><parameter name='db' type='android.database.sqlite.SQLiteDatabase'/><parameter name='masterQuery' type='android.database.sqlite.SQLiteCursorDriver'/><parameter name='editTable' type='java.lang.String'/><parameter name='query' type='android.database.sqlite.SQLiteQuery'/></method></interface><interface api_added='5' name='SQLiteTransactionListener' abstract='true'><method api_added='5' name='onBegin' abstract='true'/><method api_added='5' name='onCommit' abstract='true'/><method api_added='5' name='onRollback' abstract='true'/></interface></package><package name='android.graphics'><class name='AvoidXfermode' extends='android.graphics.Xfermode'><constructor name='AvoidXfermode' type='android.graphics.AvoidXfermode'><parameter name='opColor' type='int'/><parameter name='tolerance' type='int'/><parameter name='mode' type='android.graphics.AvoidXfermode.Mode'/></constructor></class><class name='AvoidXfermode.Mode' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.AvoidXfermode.Mode'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.AvoidXfermode.Mode[]'/></class><class name='Bitmap' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='4' name='DENSITY_NONE' final='true' static='true' value='0' type='int'/><method name='compress' return='boolean'><parameter name='format' type='android.graphics.Bitmap.CompressFormat'/><parameter name='quality' type='int'/><parameter name='stream' type='java.io.OutputStream'/></method><method name='copy' return='android.graphics.Bitmap'><parameter name='config' type='android.graphics.Bitmap.Config'/><parameter name='isMutable' type='boolean'/></method><method name='copyPixelsToBuffer'><parameter name='dst' type='java.nio.Buffer'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='src' type='android.graphics.Bitmap'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='source' type='android.graphics.Bitmap'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='source' type='android.graphics.Bitmap'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='m' type='android.graphics.Matrix'/><parameter name='filter' type='boolean'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='config' type='android.graphics.Bitmap.Config'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='colors' type='int[]'/><parameter name='offset' type='int'/><parameter name='stride' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='config' type='android.graphics.Bitmap.Config'/></method><method name='createBitmap' static='true' return='android.graphics.Bitmap'><parameter name='colors' type='int[]'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='config' type='android.graphics.Bitmap.Config'/></method><method name='createScaledBitmap' static='true' return='android.graphics.Bitmap'><parameter name='src' type='android.graphics.Bitmap'/><parameter name='dstWidth' type='int'/><parameter name='dstHeight' type='int'/><parameter name='filter' type='boolean'/></method><method name='describeContents' return='int'/><method name='eraseColor'><parameter name='c' type='int'/></method><method name='extractAlpha' return='android.graphics.Bitmap'/><method name='extractAlpha' return='android.graphics.Bitmap'><parameter name='paint' type='android.graphics.Paint'/><parameter name='offsetXY' type='int[]'/></method><method name='getConfig' final='true' return='android.graphics.Bitmap.Config'/><method name='getHeight' final='true' return='int'/><method name='getNinePatchChunk' return='byte[]'/><method name='getPixel' return='int'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='getPixels'><parameter name='pixels' type='int[]'/><parameter name='offset' type='int'/><parameter name='stride' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='getRowBytes' final='true' return='int'/><method name='getWidth' final='true' return='int'/><method name='hasAlpha' final='true' return='boolean'/><method name='isMutable' final='true' return='boolean'/><method name='isRecycled' final='true' return='boolean'/><method name='recycle'/><method name='setPixel'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='color' type='int'/></method><method name='setPixels'><parameter name='pixels' type='int[]'/><parameter name='offset' type='int'/><parameter name='stride' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='writeToParcel'><parameter name='p' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='copyPixelsFromBuffer'><parameter name='src' type='java.nio.Buffer'/></method><method api_added='4' name='getDensity' return='int'/><method api_added='4' name='getScaledHeight' return='int'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='4' name='getScaledHeight' return='int'><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method api_added='4' name='getScaledHeight' return='int'><parameter name='targetDensity' type='int'/></method><method api_added='4' name='getScaledWidth' return='int'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='4' name='getScaledWidth' return='int'><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method api_added='4' name='getScaledWidth' return='int'><parameter name='targetDensity' type='int'/></method><method api_added='4' name='prepareToDraw'/><method api_added='4' name='setDensity'><parameter name='density' type='int'/></method></class><class name='Bitmap.CompressFormat' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Bitmap.CompressFormat'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Bitmap.CompressFormat[]'/></class><class name='Bitmap.Config' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Bitmap.Config'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Bitmap.Config[]'/></class><class name='BitmapFactory' extends='java.lang.Object'><constructor name='BitmapFactory' type='android.graphics.BitmapFactory'/><method name='decodeByteArray' static='true' return='android.graphics.Bitmap'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method><method name='decodeByteArray' static='true' return='android.graphics.Bitmap'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='decodeFile' static='true' return='android.graphics.Bitmap'><parameter name='pathName' type='java.lang.String'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method><method name='decodeFile' static='true' return='android.graphics.Bitmap'><parameter name='pathName' type='java.lang.String'/></method><method name='decodeFileDescriptor' static='true' return='android.graphics.Bitmap'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='outPadding' type='android.graphics.Rect'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method><method name='decodeFileDescriptor' static='true' return='android.graphics.Bitmap'><parameter name='fd' type='java.io.FileDescriptor'/></method><method name='decodeResource' static='true' return='android.graphics.Bitmap'><parameter name='res' type='android.content.res.Resources'/><parameter name='id' type='int'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method><method name='decodeResource' static='true' return='android.graphics.Bitmap'><parameter name='res' type='android.content.res.Resources'/><parameter name='id' type='int'/></method><method name='decodeStream' static='true' return='android.graphics.Bitmap'><parameter name='is' type='java.io.InputStream'/><parameter name='outPadding' type='android.graphics.Rect'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method><method name='decodeStream' static='true' return='android.graphics.Bitmap'><parameter name='is' type='java.io.InputStream'/></method><method api_added='4' name='decodeResourceStream' static='true' return='android.graphics.Bitmap'><parameter name='res' type='android.content.res.Resources'/><parameter name='value' type='android.util.TypedValue'/><parameter name='is' type='java.io.InputStream'/><parameter name='pad' type='android.graphics.Rect'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method></class><class name='BitmapFactory.Options' extends='java.lang.Object' static='true'><constructor name='BitmapFactory.Options' type='android.graphics.BitmapFactory.Options'/><field name='inDither' type='boolean'/><field name='inJustDecodeBounds' type='boolean'/><field name='inPreferredConfig' type='android.graphics.Bitmap.Config'/><field name='inSampleSize' type='int'/><field name='inTempStorage' value='null' type='byte[]'/><field name='mCancel' type='boolean'/><field name='outHeight' type='int'/><field name='outMimeType' type='java.lang.String'/><field name='outWidth' type='int'/><field api_added='4' name='inDensity' type='int'/><field api_added='4' name='inInputShareable' type='boolean'/><field api_added='4' name='inPurgeable' type='boolean'/><field api_added='4' name='inScaled' type='boolean'/><field api_added='4' name='inScreenDensity' type='int'/><field api_added='4' name='inTargetDensity' type='int'/><method name='requestCancelDecode'/></class><class name='BitmapShader' extends='android.graphics.Shader'><constructor name='BitmapShader' type='android.graphics.BitmapShader'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='tileX' type='android.graphics.Shader.TileMode'/><parameter name='tileY' type='android.graphics.Shader.TileMode'/></constructor></class><class name='BlurMaskFilter' extends='android.graphics.MaskFilter'><constructor name='BlurMaskFilter' type='android.graphics.BlurMaskFilter'><parameter name='radius' type='float'/><parameter name='style' type='android.graphics.BlurMaskFilter.Blur'/></constructor></class><class name='BlurMaskFilter.Blur' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.BlurMaskFilter.Blur'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.BlurMaskFilter.Blur[]'/></class><class name='Camera' extends='java.lang.Object'><constructor name='Camera' type='android.graphics.Camera'/><method name='applyToCanvas'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='dotWithNormal' native='true' return='float'><parameter name='dx' type='float'/><parameter name='dy' type='float'/><parameter name='dz' type='float'/></method><method name='getMatrix'><parameter name='matrix' type='android.graphics.Matrix'/></method><method name='restore' native='true'/><method name='rotateX' native='true'><parameter name='deg' type='float'/></method><method name='rotateY' native='true'><parameter name='deg' type='float'/></method><method name='rotateZ' native='true'><parameter name='deg' type='float'/></method><method name='save' native='true'/><method name='translate' native='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method></class><class name='Canvas' extends='java.lang.Object'><constructor name='Canvas' type='android.graphics.Canvas'/><constructor name='Canvas' type='android.graphics.Canvas'><parameter name='bitmap' type='android.graphics.Bitmap'/></constructor><constructor name='Canvas' type='android.graphics.Canvas'><parameter name='gl' type='javax.microedition.khronos.opengles.GL'/></constructor><field name='ALL_SAVE_FLAG' final='true' static='true' value='31' type='int'/><field name='CLIP_SAVE_FLAG' final='true' static='true' value='2' type='int'/><field name='CLIP_TO_LAYER_SAVE_FLAG' final='true' static='true' value='16' type='int'/><field name='FULL_COLOR_LAYER_SAVE_FLAG' final='true' static='true' value='8' type='int'/><field name='HAS_ALPHA_LAYER_SAVE_FLAG' final='true' static='true' value='4' type='int'/><field name='MATRIX_SAVE_FLAG' final='true' static='true' value='1' type='int'/><method name='clipPath' return='boolean'><parameter name='path' type='android.graphics.Path'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='clipPath' return='boolean'><parameter name='path' type='android.graphics.Path'/></method><method name='clipRect' return='boolean'><parameter name='rect' type='android.graphics.RectF'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='clipRect' return='boolean'><parameter name='rect' type='android.graphics.Rect'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='clipRect' native='true' return='boolean'><parameter name='rect' type='android.graphics.RectF'/></method><method name='clipRect' native='true' return='boolean'><parameter name='rect' type='android.graphics.Rect'/></method><method name='clipRect' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='clipRect' native='true' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='clipRect' native='true' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='clipRegion' return='boolean'><parameter name='region' type='android.graphics.Region'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='clipRegion' return='boolean'><parameter name='region' type='android.graphics.Region'/></method><method name='concat'><parameter name='matrix' type='android.graphics.Matrix'/></method><method name='drawARGB'><parameter name='a' type='int'/><parameter name='r' type='int'/><parameter name='g' type='int'/><parameter name='b' type='int'/></method><method name='drawArc'><parameter name='oval' type='android.graphics.RectF'/><parameter name='startAngle' type='float'/><parameter name='sweepAngle' type='float'/><parameter name='useCenter' type='boolean'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='src' type='android.graphics.Rect'/><parameter name='dst' type='android.graphics.RectF'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='src' type='android.graphics.Rect'/><parameter name='dst' type='android.graphics.Rect'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmap'><parameter name='colors' type='int[]'/><parameter name='offset' type='int'/><parameter name='stride' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='hasAlpha' type='boolean'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='matrix' type='android.graphics.Matrix'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawBitmapMesh'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='meshWidth' type='int'/><parameter name='meshHeight' type='int'/><parameter name='verts' type='float[]'/><parameter name='vertOffset' type='int'/><parameter name='colors' type='int[]'/><parameter name='colorOffset' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawCircle'><parameter name='cx' type='float'/><parameter name='cy' type='float'/><parameter name='radius' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawColor'><parameter name='color' type='int'/></method><method name='drawColor'><parameter name='color' type='int'/><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></method><method name='drawLine'><parameter name='startX' type='float'/><parameter name='startY' type='float'/><parameter name='stopX' type='float'/><parameter name='stopY' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawLines' native='true'><parameter name='pts' type='float[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawLines'><parameter name='pts' type='float[]'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawOval'><parameter name='oval' type='android.graphics.RectF'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPaint'><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPath'><parameter name='path' type='android.graphics.Path'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPicture'><parameter name='picture' type='android.graphics.Picture'/></method><method name='drawPicture'><parameter name='picture' type='android.graphics.Picture'/><parameter name='dst' type='android.graphics.RectF'/></method><method name='drawPicture'><parameter name='picture' type='android.graphics.Picture'/><parameter name='dst' type='android.graphics.Rect'/></method><method name='drawPoint' native='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPoints' native='true'><parameter name='pts' type='float[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPoints'><parameter name='pts' type='float[]'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPosText'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='pos' type='float[]'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawPosText'><parameter name='text' type='java.lang.String'/><parameter name='pos' type='float[]'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawRGB'><parameter name='r' type='int'/><parameter name='g' type='int'/><parameter name='b' type='int'/></method><method name='drawRect'><parameter name='rect' type='android.graphics.RectF'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawRect'><parameter name='r' type='android.graphics.Rect'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawRect'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawRoundRect'><parameter name='rect' type='android.graphics.RectF'/><parameter name='rx' type='float'/><parameter name='ry' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawText'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawText' native='true'><parameter name='text' type='java.lang.String'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawText'><parameter name='text' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawText'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawTextOnPath'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='path' type='android.graphics.Path'/><parameter name='hOffset' type='float'/><parameter name='vOffset' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawTextOnPath'><parameter name='text' type='java.lang.String'/><parameter name='path' type='android.graphics.Path'/><parameter name='hOffset' type='float'/><parameter name='vOffset' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='drawVertices'><parameter name='mode' type='android.graphics.Canvas.VertexMode'/><parameter name='vertexCount' type='int'/><parameter name='verts' type='float[]'/><parameter name='vertOffset' type='int'/><parameter name='texs' type='float[]'/><parameter name='texOffset' type='int'/><parameter name='colors' type='int[]'/><parameter name='colorOffset' type='int'/><parameter name='indices' type='short[]'/><parameter name='indexOffset' type='int'/><parameter name='indexCount' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='freeGlCaches' native='true' static='true'/><method name='getClipBounds' return='boolean'><parameter name='bounds' type='android.graphics.Rect'/></method><method name='getClipBounds' final='true' return='android.graphics.Rect'/><method name='getDrawFilter' return='android.graphics.DrawFilter'/><method name='getGL' return='javax.microedition.khronos.opengles.GL'/><method name='getHeight' native='true' return='int'/><method name='getMatrix'><parameter name='ctm' type='android.graphics.Matrix'/></method><method name='getMatrix' final='true' return='android.graphics.Matrix'/><method name='getSaveCount' native='true' return='int'/><method name='getWidth' native='true' return='int'/><method name='isOpaque' native='true' return='boolean'/><method name='quickReject' return='boolean'><parameter name='rect' type='android.graphics.RectF'/><parameter name='type' type='android.graphics.Canvas.EdgeType'/></method><method name='quickReject' return='boolean'><parameter name='path' type='android.graphics.Path'/><parameter name='type' type='android.graphics.Canvas.EdgeType'/></method><method name='quickReject' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='type' type='android.graphics.Canvas.EdgeType'/></method><method name='restore' native='true'/><method name='restoreToCount' native='true'><parameter name='saveCount' type='int'/></method><method name='rotate' native='true'><parameter name='degrees' type='float'/></method><method name='rotate' final='true'><parameter name='degrees' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='save' native='true' return='int'/><method name='save' native='true' return='int'><parameter name='saveFlags' type='int'/></method><method name='saveLayer' return='int'><parameter name='bounds' type='android.graphics.RectF'/><parameter name='paint' type='android.graphics.Paint'/><parameter name='saveFlags' type='int'/></method><method name='saveLayer' return='int'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='paint' type='android.graphics.Paint'/><parameter name='saveFlags' type='int'/></method><method name='saveLayerAlpha' return='int'><parameter name='bounds' type='android.graphics.RectF'/><parameter name='alpha' type='int'/><parameter name='saveFlags' type='int'/></method><method name='saveLayerAlpha' return='int'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='alpha' type='int'/><parameter name='saveFlags' type='int'/></method><method name='scale' native='true'><parameter name='sx' type='float'/><parameter name='sy' type='float'/></method><method name='scale' final='true'><parameter name='sx' type='float'/><parameter name='sy' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='setBitmap'><parameter name='bitmap' type='android.graphics.Bitmap'/></method><method name='setDrawFilter'><parameter name='filter' type='android.graphics.DrawFilter'/></method><method name='setMatrix'><parameter name='matrix' type='android.graphics.Matrix'/></method><method name='setViewport'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='skew' native='true'><parameter name='sx' type='float'/><parameter name='sy' type='float'/></method><method name='translate' native='true'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method api_added='3' name='drawBitmap'><parameter name='colors' type='int[]'/><parameter name='offset' type='int'/><parameter name='stride' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='hasAlpha' type='boolean'/><parameter name='paint' type='android.graphics.Paint'/></method><method api_added='4' name='getDensity' return='int'/><method api_added='4' name='setDensity'><parameter name='density' type='int'/></method></class><class name='Canvas.EdgeType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Canvas.EdgeType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Canvas.EdgeType[]'/></class><class name='Canvas.VertexMode' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Canvas.VertexMode'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Canvas.VertexMode[]'/></class><class name='Color' extends='java.lang.Object'><constructor name='Color' type='android.graphics.Color'/><field name='BLACK' final='true' static='true' value='-16777216' type='int'/><field name='BLUE' final='true' static='true' value='-16776961' type='int'/><field name='CYAN' final='true' static='true' value='-16711681' type='int'/><field name='DKGRAY' final='true' static='true' value='-12303292' type='int'/><field name='GRAY' final='true' static='true' value='-7829368' type='int'/><field name='GREEN' final='true' static='true' value='-16711936' type='int'/><field name='LTGRAY' final='true' static='true' value='-3355444' type='int'/><field name='MAGENTA' final='true' static='true' value='-65281' type='int'/><field name='RED' final='true' static='true' value='-65536' type='int'/><field name='TRANSPARENT' final='true' static='true' value='0' type='int'/><field name='WHITE' final='true' static='true' value='-1' type='int'/><field name='YELLOW' final='true' static='true' value='-256' type='int'/><method name='HSVToColor' static='true' return='int'><parameter name='hsv' type='float[]'/></method><method name='HSVToColor' static='true' return='int'><parameter name='alpha' type='int'/><parameter name='hsv' type='float[]'/></method><method name='RGBToHSV' static='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='hsv' type='float[]'/></method><method name='alpha' static='true' return='int'><parameter name='color' type='int'/></method><method name='argb' static='true' return='int'><parameter name='alpha' type='int'/><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/></method><method name='blue' static='true' return='int'><parameter name='color' type='int'/></method><method name='colorToHSV' static='true'><parameter name='color' type='int'/><parameter name='hsv' type='float[]'/></method><method name='green' static='true' return='int'><parameter name='color' type='int'/></method><method name='parseColor' static='true' return='int'><parameter name='colorString' type='java.lang.String'/></method><method name='red' static='true' return='int'><parameter name='color' type='int'/></method><method name='rgb' static='true' return='int'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/></method></class><class name='ColorFilter' extends='java.lang.Object'><constructor name='ColorFilter' type='android.graphics.ColorFilter'/></class><class name='ColorMatrix' extends='java.lang.Object'><constructor name='ColorMatrix' type='android.graphics.ColorMatrix'/><constructor name='ColorMatrix' type='android.graphics.ColorMatrix'><parameter name='src' type='float[]'/></constructor><constructor name='ColorMatrix' type='android.graphics.ColorMatrix'><parameter name='src' type='android.graphics.ColorMatrix'/></constructor><method name='getArray' final='true' return='float[]'/><method name='postConcat'><parameter name='postmatrix' type='android.graphics.ColorMatrix'/></method><method name='preConcat'><parameter name='prematrix' type='android.graphics.ColorMatrix'/></method><method name='reset'/><method name='set'><parameter name='src' type='android.graphics.ColorMatrix'/></method><method name='set'><parameter name='src' type='float[]'/></method><method name='setConcat'><parameter name='matA' type='android.graphics.ColorMatrix'/><parameter name='matB' type='android.graphics.ColorMatrix'/></method><method name='setRGB2YUV'/><method name='setRotate'><parameter name='axis' type='int'/><parameter name='degrees' type='float'/></method><method name='setSaturation'><parameter name='sat' type='float'/></method><method name='setScale'><parameter name='rScale' type='float'/><parameter name='gScale' type='float'/><parameter name='bScale' type='float'/><parameter name='aScale' type='float'/></method><method name='setYUV2RGB'/></class><class name='ColorMatrixColorFilter' extends='android.graphics.ColorFilter'><constructor name='ColorMatrixColorFilter' type='android.graphics.ColorMatrixColorFilter'><parameter name='matrix' type='android.graphics.ColorMatrix'/></constructor><constructor name='ColorMatrixColorFilter' type='android.graphics.ColorMatrixColorFilter'><parameter name='array' type='float[]'/></constructor></class><class name='ComposePathEffect' extends='android.graphics.PathEffect'><constructor name='ComposePathEffect' type='android.graphics.ComposePathEffect'><parameter name='outerpe' type='android.graphics.PathEffect'/><parameter name='innerpe' type='android.graphics.PathEffect'/></constructor></class><class name='ComposeShader' extends='android.graphics.Shader'><constructor name='ComposeShader' type='android.graphics.ComposeShader'><parameter name='shaderA' type='android.graphics.Shader'/><parameter name='shaderB' type='android.graphics.Shader'/><parameter name='mode' type='android.graphics.Xfermode'/></constructor><constructor name='ComposeShader' type='android.graphics.ComposeShader'><parameter name='shaderA' type='android.graphics.Shader'/><parameter name='shaderB' type='android.graphics.Shader'/><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></constructor></class><class name='CornerPathEffect' extends='android.graphics.PathEffect'><constructor name='CornerPathEffect' type='android.graphics.CornerPathEffect'><parameter name='radius' type='float'/></constructor></class><class name='DashPathEffect' extends='android.graphics.PathEffect'><constructor name='DashPathEffect' type='android.graphics.DashPathEffect'><parameter name='intervals' type='float[]'/><parameter name='phase' type='float'/></constructor></class><class name='DiscretePathEffect' extends='android.graphics.PathEffect'><constructor name='DiscretePathEffect' type='android.graphics.DiscretePathEffect'><parameter name='segmentLength' type='float'/><parameter name='deviation' type='float'/></constructor></class><class name='DrawFilter' extends='java.lang.Object'><constructor name='DrawFilter' type='android.graphics.DrawFilter'/></class><class name='EmbossMaskFilter' extends='android.graphics.MaskFilter'><constructor name='EmbossMaskFilter' type='android.graphics.EmbossMaskFilter'><parameter name='direction' type='float[]'/><parameter name='ambient' type='float'/><parameter name='specular' type='float'/><parameter name='blurRadius' type='float'/></constructor></class><class name='Interpolator' extends='java.lang.Object'><constructor name='Interpolator' type='android.graphics.Interpolator'><parameter name='valueCount' type='int'/></constructor><constructor name='Interpolator' type='android.graphics.Interpolator'><parameter name='valueCount' type='int'/><parameter name='frameCount' type='int'/></constructor><method name='getKeyFrameCount' final='true' return='int'/><method name='getValueCount' final='true' return='int'/><method name='reset'><parameter name='valueCount' type='int'/></method><method name='reset'><parameter name='valueCount' type='int'/><parameter name='frameCount' type='int'/></method><method name='setKeyFrame'><parameter name='index' type='int'/><parameter name='msec' type='int'/><parameter name='values' type='float[]'/></method><method name='setKeyFrame'><parameter name='index' type='int'/><parameter name='msec' type='int'/><parameter name='values' type='float[]'/><parameter name='blend' type='float[]'/></method><method name='setRepeatMirror'><parameter name='repeatCount' type='float'/><parameter name='mirror' type='boolean'/></method><method name='timeToValues' return='android.graphics.Interpolator.Result'><parameter name='values' type='float[]'/></method><method name='timeToValues' return='android.graphics.Interpolator.Result'><parameter name='msec' type='int'/><parameter name='values' type='float[]'/></method></class><class name='Interpolator.Result' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Interpolator.Result'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Interpolator.Result[]'/></class><class name='LayerRasterizer' extends='android.graphics.Rasterizer'><constructor name='LayerRasterizer' type='android.graphics.LayerRasterizer'/><method name='addLayer'><parameter name='paint' type='android.graphics.Paint'/><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='addLayer'><parameter name='paint' type='android.graphics.Paint'/></method></class><class name='LightingColorFilter' extends='android.graphics.ColorFilter'><constructor name='LightingColorFilter' type='android.graphics.LightingColorFilter'><parameter name='mul' type='int'/><parameter name='add' type='int'/></constructor></class><class name='LinearGradient' extends='android.graphics.Shader'><constructor name='LinearGradient' type='android.graphics.LinearGradient'><parameter name='x0' type='float'/><parameter name='y0' type='float'/><parameter name='x1' type='float'/><parameter name='y1' type='float'/><parameter name='colors' type='int[]'/><parameter name='positions' type='float[]'/><parameter name='tile' type='android.graphics.Shader.TileMode'/></constructor><constructor name='LinearGradient' type='android.graphics.LinearGradient'><parameter name='x0' type='float'/><parameter name='y0' type='float'/><parameter name='x1' type='float'/><parameter name='y1' type='float'/><parameter name='color0' type='int'/><parameter name='color1' type='int'/><parameter name='tile' type='android.graphics.Shader.TileMode'/></constructor></class><class name='MaskFilter' extends='java.lang.Object'><constructor name='MaskFilter' type='android.graphics.MaskFilter'/></class><class name='Matrix' extends='java.lang.Object'><constructor name='Matrix' type='android.graphics.Matrix'/><constructor name='Matrix' type='android.graphics.Matrix'><parameter name='src' type='android.graphics.Matrix'/></constructor><field name='MPERSP_0' final='true' static='true' value='6' type='int'/><field name='MPERSP_1' final='true' static='true' value='7' type='int'/><field name='MPERSP_2' final='true' static='true' value='8' type='int'/><field name='MSCALE_X' final='true' static='true' value='0' type='int'/><field name='MSCALE_Y' final='true' static='true' value='4' type='int'/><field name='MSKEW_X' final='true' static='true' value='1' type='int'/><field name='MSKEW_Y' final='true' static='true' value='3' type='int'/><field name='MTRANS_X' final='true' static='true' value='2' type='int'/><field name='MTRANS_Y' final='true' static='true' value='5' type='int'/><method name='getValues'><parameter name='values' type='float[]'/></method><method name='invert' return='boolean'><parameter name='inverse' type='android.graphics.Matrix'/></method><method name='isIdentity' return='boolean'/><method name='mapPoints'><parameter name='dst' type='float[]'/><parameter name='dstIndex' type='int'/><parameter name='src' type='float[]'/><parameter name='srcIndex' type='int'/><parameter name='pointCount' type='int'/></method><method name='mapPoints'><parameter name='dst' type='float[]'/><parameter name='src' type='float[]'/></method><method name='mapPoints'><parameter name='pts' type='float[]'/></method><method name='mapRadius' return='float'><parameter name='radius' type='float'/></method><method name='mapRect' return='boolean'><parameter name='dst' type='android.graphics.RectF'/><parameter name='src' type='android.graphics.RectF'/></method><method name='mapRect' return='boolean'><parameter name='rect' type='android.graphics.RectF'/></method><method name='mapVectors'><parameter name='dst' type='float[]'/><parameter name='dstIndex' type='int'/><parameter name='src' type='float[]'/><parameter name='srcIndex' type='int'/><parameter name='vectorCount' type='int'/></method><method name='mapVectors'><parameter name='dst' type='float[]'/><parameter name='src' type='float[]'/></method><method name='mapVectors'><parameter name='vecs' type='float[]'/></method><method name='postConcat' return='boolean'><parameter name='other' type='android.graphics.Matrix'/></method><method name='postRotate' return='boolean'><parameter name='degrees' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='postRotate' return='boolean'><parameter name='degrees' type='float'/></method><method name='postScale' return='boolean'><parameter name='sx' type='float'/><parameter name='sy' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='postScale' return='boolean'><parameter name='sx' type='float'/><parameter name='sy' type='float'/></method><method name='postSkew' return='boolean'><parameter name='kx' type='float'/><parameter name='ky' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='postSkew' return='boolean'><parameter name='kx' type='float'/><parameter name='ky' type='float'/></method><method name='postTranslate' return='boolean'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='preConcat' return='boolean'><parameter name='other' type='android.graphics.Matrix'/></method><method name='preRotate' return='boolean'><parameter name='degrees' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='preRotate' return='boolean'><parameter name='degrees' type='float'/></method><method name='preScale' return='boolean'><parameter name='sx' type='float'/><parameter name='sy' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='preScale' return='boolean'><parameter name='sx' type='float'/><parameter name='sy' type='float'/></method><method name='preSkew' return='boolean'><parameter name='kx' type='float'/><parameter name='ky' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='preSkew' return='boolean'><parameter name='kx' type='float'/><parameter name='ky' type='float'/></method><method name='preTranslate' return='boolean'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='rectStaysRect' return='boolean'/><method name='reset'/><method name='set'><parameter name='src' type='android.graphics.Matrix'/></method><method name='setConcat' return='boolean'><parameter name='a' type='android.graphics.Matrix'/><parameter name='b' type='android.graphics.Matrix'/></method><method name='setPolyToPoly' return='boolean'><parameter name='src' type='float[]'/><parameter name='srcIndex' type='int'/><parameter name='dst' type='float[]'/><parameter name='dstIndex' type='int'/><parameter name='pointCount' type='int'/></method><method name='setRectToRect' return='boolean'><parameter name='src' type='android.graphics.RectF'/><parameter name='dst' type='android.graphics.RectF'/><parameter name='stf' type='android.graphics.Matrix.ScaleToFit'/></method><method name='setRotate'><parameter name='degrees' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='setRotate'><parameter name='degrees' type='float'/></method><method name='setScale'><parameter name='sx' type='float'/><parameter name='sy' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='setScale'><parameter name='sx' type='float'/><parameter name='sy' type='float'/></method><method name='setSinCos'><parameter name='sinValue' type='float'/><parameter name='cosValue' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='setSinCos'><parameter name='sinValue' type='float'/><parameter name='cosValue' type='float'/></method><method name='setSkew'><parameter name='kx' type='float'/><parameter name='ky' type='float'/><parameter name='px' type='float'/><parameter name='py' type='float'/></method><method name='setSkew'><parameter name='kx' type='float'/><parameter name='ky' type='float'/></method><method name='setTranslate'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='setValues'><parameter name='values' type='float[]'/></method><method name='toShortString' return='java.lang.String'/></class><class name='Matrix.ScaleToFit' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Matrix.ScaleToFit'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Matrix.ScaleToFit[]'/></class><class name='Movie' extends='java.lang.Object'><method name='decodeByteArray' native='true' static='true' return='android.graphics.Movie'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='decodeFile' static='true' return='android.graphics.Movie'><parameter name='pathName' type='java.lang.String'/></method><method name='decodeStream' native='true' static='true' return='android.graphics.Movie'><parameter name='is' type='java.io.InputStream'/></method><method name='draw' native='true'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='duration' native='true' return='int'/><method name='height' native='true' return='int'/><method name='isOpaque' native='true' return='boolean'/><method name='setTime' native='true' return='boolean'><parameter name='relativeMilliseconds' type='int'/></method><method name='width' native='true' return='int'/></class><class name='NinePatch' extends='java.lang.Object'><constructor name='NinePatch' type='android.graphics.NinePatch'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='chunk' type='byte[]'/><parameter name='srcName' type='java.lang.String'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='location' type='android.graphics.RectF'/></method><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='location' type='android.graphics.Rect'/></method><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='location' type='android.graphics.Rect'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='getHeight' return='int'/><method name='getTransparentRegion' final='true' return='android.graphics.Region'><parameter name='location' type='android.graphics.Rect'/></method><method name='getWidth' return='int'/><method name='hasAlpha' final='true' return='boolean'/><method name='isNinePatchChunk' native='true' static='true' return='boolean'><parameter name='chunk' type='byte[]'/></method><method name='setPaint'><parameter name='p' type='android.graphics.Paint'/></method><method api_added='4' name='getDensity' return='int'/></class><class name='Paint' extends='java.lang.Object'><constructor name='Paint' type='android.graphics.Paint'/><constructor name='Paint' type='android.graphics.Paint'><parameter name='flags' type='int'/></constructor><constructor name='Paint' type='android.graphics.Paint'><parameter name='paint' type='android.graphics.Paint'/></constructor><field name='ANTI_ALIAS_FLAG' final='true' static='true' value='1' type='int'/><field name='DEV_KERN_TEXT_FLAG' final='true' static='true' value='256' type='int'/><field name='DITHER_FLAG' final='true' static='true' value='4' type='int'/><field name='FAKE_BOLD_TEXT_FLAG' final='true' static='true' value='32' type='int'/><field name='FILTER_BITMAP_FLAG' final='true' static='true' value='2' type='int'/><field name='LINEAR_TEXT_FLAG' final='true' static='true' value='64' type='int'/><field name='STRIKE_THRU_TEXT_FLAG' final='true' static='true' value='16' type='int'/><field name='SUBPIXEL_TEXT_FLAG' final='true' static='true' value='128' type='int'/><field name='UNDERLINE_TEXT_FLAG' final='true' static='true' value='8' type='int'/><method name='ascent' native='true' return='float'/><method name='breakText' native='true' return='int'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='maxWidth' type='float'/><parameter name='measuredWidth' type='float[]'/></method><method name='breakText' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='measureForwards' type='boolean'/><parameter name='maxWidth' type='float'/><parameter name='measuredWidth' type='float[]'/></method><method name='breakText' native='true' return='int'><parameter name='text' type='java.lang.String'/><parameter name='measureForwards' type='boolean'/><parameter name='maxWidth' type='float'/><parameter name='measuredWidth' type='float[]'/></method><method name='clearShadowLayer'/><method name='descent' native='true' return='float'/><method name='getAlpha' native='true' return='int'/><method name='getColor' native='true' return='int'/><method name='getColorFilter' return='android.graphics.ColorFilter'/><method name='getFillPath' return='boolean'><parameter name='src' type='android.graphics.Path'/><parameter name='dst' type='android.graphics.Path'/></method><method name='getFlags' native='true' return='int'/><method name='getFontMetrics' native='true' return='float'><parameter name='metrics' type='android.graphics.Paint.FontMetrics'/></method><method name='getFontMetrics' return='android.graphics.Paint.FontMetrics'/><method name='getFontMetricsInt' native='true' return='int'><parameter name='fmi' type='android.graphics.Paint.FontMetricsInt'/></method><method name='getFontMetricsInt' return='android.graphics.Paint.FontMetricsInt'/><method name='getFontSpacing' return='float'/><method name='getMaskFilter' return='android.graphics.MaskFilter'/><method name='getPathEffect' return='android.graphics.PathEffect'/><method name='getRasterizer' return='android.graphics.Rasterizer'/><method name='getShader' return='android.graphics.Shader'/><method name='getStrokeCap' return='android.graphics.Paint.Cap'/><method name='getStrokeJoin' return='android.graphics.Paint.Join'/><method name='getStrokeMiter' native='true' return='float'/><method name='getStrokeWidth' native='true' return='float'/><method name='getStyle' return='android.graphics.Paint.Style'/><method name='getTextAlign' return='android.graphics.Paint.Align'/><method name='getTextBounds'><parameter name='text' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='bounds' type='android.graphics.Rect'/></method><method name='getTextBounds'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='bounds' type='android.graphics.Rect'/></method><method name='getTextPath'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='path' type='android.graphics.Path'/></method><method name='getTextPath'><parameter name='text' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='path' type='android.graphics.Path'/></method><method name='getTextScaleX' native='true' return='float'/><method name='getTextSize' native='true' return='float'/><method name='getTextSkewX' native='true' return='float'/><method name='getTextWidths' return='int'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/><parameter name='widths' type='float[]'/></method><method name='getTextWidths' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='widths' type='float[]'/></method><method name='getTextWidths' return='int'><parameter name='text' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='widths' type='float[]'/></method><method name='getTextWidths' return='int'><parameter name='text' type='java.lang.String'/><parameter name='widths' type='float[]'/></method><method name='getTypeface' return='android.graphics.Typeface'/><method name='getXfermode' return='android.graphics.Xfermode'/><method name='isAntiAlias' final='true' return='boolean'/><method name='isDither' final='true' return='boolean'/><method name='isFakeBoldText' final='true' return='boolean'/><method name='isFilterBitmap' final='true' return='boolean'/><method name='isLinearText' final='true' return='boolean'/><method name='isStrikeThruText' final='true' return='boolean'/><method name='isSubpixelText' final='true' return='boolean'/><method name='isUnderlineText' final='true' return='boolean'/><method name='measureText' native='true' return='float'><parameter name='text' type='char[]'/><parameter name='index' type='int'/><parameter name='count' type='int'/></method><method name='measureText' native='true' return='float'><parameter name='text' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='measureText' native='true' return='float'><parameter name='text' type='java.lang.String'/></method><method name='measureText' return='float'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='reset'/><method name='set'><parameter name='src' type='android.graphics.Paint'/></method><method name='setARGB'><parameter name='a' type='int'/><parameter name='r' type='int'/><parameter name='g' type='int'/><parameter name='b' type='int'/></method><method name='setAlpha' native='true'><parameter name='a' type='int'/></method><method name='setAntiAlias' native='true'><parameter name='aa' type='boolean'/></method><method name='setColor' native='true'><parameter name='color' type='int'/></method><method name='setColorFilter' return='android.graphics.ColorFilter'><parameter name='filter' type='android.graphics.ColorFilter'/></method><method name='setDither' native='true'><parameter name='dither' type='boolean'/></method><method name='setFakeBoldText' native='true'><parameter name='fakeBoldText' type='boolean'/></method><method name='setFilterBitmap' native='true'><parameter name='filter' type='boolean'/></method><method name='setFlags' native='true'><parameter name='flags' type='int'/></method><method name='setLinearText' native='true'><parameter name='linearText' type='boolean'/></method><method name='setMaskFilter' return='android.graphics.MaskFilter'><parameter name='maskfilter' type='android.graphics.MaskFilter'/></method><method name='setPathEffect' return='android.graphics.PathEffect'><parameter name='effect' type='android.graphics.PathEffect'/></method><method name='setRasterizer' return='android.graphics.Rasterizer'><parameter name='rasterizer' type='android.graphics.Rasterizer'/></method><method name='setShader' return='android.graphics.Shader'><parameter name='shader' type='android.graphics.Shader'/></method><method name='setShadowLayer' native='true'><parameter name='radius' type='float'/><parameter name='dx' type='float'/><parameter name='dy' type='float'/><parameter name='color' type='int'/></method><method name='setStrikeThruText' native='true'><parameter name='strikeThruText' type='boolean'/></method><method name='setStrokeCap'><parameter name='cap' type='android.graphics.Paint.Cap'/></method><method name='setStrokeJoin'><parameter name='join' type='android.graphics.Paint.Join'/></method><method name='setStrokeMiter' native='true'><parameter name='miter' type='float'/></method><method name='setStrokeWidth' native='true'><parameter name='width' type='float'/></method><method name='setStyle'><parameter name='style' type='android.graphics.Paint.Style'/></method><method name='setSubpixelText' native='true'><parameter name='subpixelText' type='boolean'/></method><method name='setTextAlign'><parameter name='align' type='android.graphics.Paint.Align'/></method><method name='setTextScaleX' native='true'><parameter name='scaleX' type='float'/></method><method name='setTextSize' native='true'><parameter name='textSize' type='float'/></method><method name='setTextSkewX' native='true'><parameter name='skewX' type='float'/></method><method name='setTypeface' return='android.graphics.Typeface'><parameter name='typeface' type='android.graphics.Typeface'/></method><method name='setUnderlineText' native='true'><parameter name='underlineText' type='boolean'/></method><method name='setXfermode' return='android.graphics.Xfermode'><parameter name='xfermode' type='android.graphics.Xfermode'/></method></class><class name='Paint.Align' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Paint.Align'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Paint.Align[]'/></class><class name='Paint.Cap' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Paint.Cap'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Paint.Cap[]'/></class><class name='Paint.FontMetrics' extends='java.lang.Object' static='true'><constructor name='Paint.FontMetrics' type='android.graphics.Paint.FontMetrics'/><field name='ascent' type='float'/><field name='bottom' type='float'/><field name='descent' type='float'/><field name='leading' type='float'/><field name='top' type='float'/></class><class name='Paint.FontMetricsInt' extends='java.lang.Object' static='true'><constructor name='Paint.FontMetricsInt' type='android.graphics.Paint.FontMetricsInt'/><field name='ascent' type='int'/><field name='bottom' type='int'/><field name='descent' type='int'/><field name='leading' type='int'/><field name='top' type='int'/></class><class name='Paint.Join' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Paint.Join'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Paint.Join[]'/></class><class name='Paint.Style' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Paint.Style'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Paint.Style[]'/></class><class name='PaintFlagsDrawFilter' extends='android.graphics.DrawFilter'><constructor name='PaintFlagsDrawFilter' type='android.graphics.PaintFlagsDrawFilter'><parameter name='clearBits' type='int'/><parameter name='setBits' type='int'/></constructor></class><class name='Path' extends='java.lang.Object'><constructor name='Path' type='android.graphics.Path'/><constructor name='Path' type='android.graphics.Path'><parameter name='src' type='android.graphics.Path'/></constructor><method name='addArc'><parameter name='oval' type='android.graphics.RectF'/><parameter name='startAngle' type='float'/><parameter name='sweepAngle' type='float'/></method><method name='addCircle'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='radius' type='float'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='addOval'><parameter name='oval' type='android.graphics.RectF'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='addPath'><parameter name='src' type='android.graphics.Path'/><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='addPath'><parameter name='src' type='android.graphics.Path'/></method><method name='addPath'><parameter name='src' type='android.graphics.Path'/><parameter name='matrix' type='android.graphics.Matrix'/></method><method name='addRect'><parameter name='rect' type='android.graphics.RectF'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='addRect'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='addRoundRect'><parameter name='rect' type='android.graphics.RectF'/><parameter name='rx' type='float'/><parameter name='ry' type='float'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='addRoundRect'><parameter name='rect' type='android.graphics.RectF'/><parameter name='radii' type='float[]'/><parameter name='dir' type='android.graphics.Path.Direction'/></method><method name='arcTo'><parameter name='oval' type='android.graphics.RectF'/><parameter name='startAngle' type='float'/><parameter name='sweepAngle' type='float'/><parameter name='forceMoveTo' type='boolean'/></method><method name='arcTo'><parameter name='oval' type='android.graphics.RectF'/><parameter name='startAngle' type='float'/><parameter name='sweepAngle' type='float'/></method><method name='close'/><method name='computeBounds'><parameter name='bounds' type='android.graphics.RectF'/><parameter name='exact' type='boolean'/></method><method name='cubicTo'><parameter name='x1' type='float'/><parameter name='y1' type='float'/><parameter name='x2' type='float'/><parameter name='y2' type='float'/><parameter name='x3' type='float'/><parameter name='y3' type='float'/></method><method name='getFillType' return='android.graphics.Path.FillType'/><method name='incReserve'><parameter name='extraPtCount' type='int'/></method><method name='isEmpty' return='boolean'/><method name='isInverseFillType' return='boolean'/><method name='isRect' return='boolean'><parameter name='rect' type='android.graphics.RectF'/></method><method name='lineTo'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='moveTo'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='offset'><parameter name='dx' type='float'/><parameter name='dy' type='float'/><parameter name='dst' type='android.graphics.Path'/></method><method name='offset'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='quadTo'><parameter name='x1' type='float'/><parameter name='y1' type='float'/><parameter name='x2' type='float'/><parameter name='y2' type='float'/></method><method name='rCubicTo'><parameter name='x1' type='float'/><parameter name='y1' type='float'/><parameter name='x2' type='float'/><parameter name='y2' type='float'/><parameter name='x3' type='float'/><parameter name='y3' type='float'/></method><method name='rLineTo'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='rMoveTo'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='rQuadTo'><parameter name='dx1' type='float'/><parameter name='dy1' type='float'/><parameter name='dx2' type='float'/><parameter name='dy2' type='float'/></method><method name='reset'/><method name='rewind'/><method name='set'><parameter name='src' type='android.graphics.Path'/></method><method name='setFillType'><parameter name='ft' type='android.graphics.Path.FillType'/></method><method name='setLastPoint'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='toggleInverseFillType'/><method name='transform'><parameter name='matrix' type='android.graphics.Matrix'/><parameter name='dst' type='android.graphics.Path'/></method><method name='transform'><parameter name='matrix' type='android.graphics.Matrix'/></method></class><class name='Path.Direction' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Path.Direction'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Path.Direction[]'/></class><class name='Path.FillType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Path.FillType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Path.FillType[]'/></class><class name='PathDashPathEffect' extends='android.graphics.PathEffect'><constructor name='PathDashPathEffect' type='android.graphics.PathDashPathEffect'><parameter name='shape' type='android.graphics.Path'/><parameter name='advance' type='float'/><parameter name='phase' type='float'/><parameter name='style' type='android.graphics.PathDashPathEffect.Style'/></constructor></class><class name='PathDashPathEffect.Style' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.PathDashPathEffect.Style'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.PathDashPathEffect.Style[]'/></class><class name='PathEffect' extends='java.lang.Object'><constructor name='PathEffect' type='android.graphics.PathEffect'/></class><class name='PathMeasure' extends='java.lang.Object'><constructor name='PathMeasure' type='android.graphics.PathMeasure'/><constructor name='PathMeasure' type='android.graphics.PathMeasure'><parameter name='path' type='android.graphics.Path'/><parameter name='forceClosed' type='boolean'/></constructor><field name='POSITION_MATRIX_FLAG' final='true' static='true' value='1' type='int'/><field name='TANGENT_MATRIX_FLAG' final='true' static='true' value='2' type='int'/><method name='getLength' return='float'/><method name='getMatrix' return='boolean'><parameter name='distance' type='float'/><parameter name='matrix' type='android.graphics.Matrix'/><parameter name='flags' type='int'/></method><method name='getPosTan' return='boolean'><parameter name='distance' type='float'/><parameter name='pos' type='float[]'/><parameter name='tan' type='float[]'/></method><method name='getSegment' return='boolean'><parameter name='startD' type='float'/><parameter name='stopD' type='float'/><parameter name='dst' type='android.graphics.Path'/><parameter name='startWithMoveTo' type='boolean'/></method><method name='isClosed' return='boolean'/><method name='nextContour' return='boolean'/><method name='setPath'><parameter name='path' type='android.graphics.Path'/><parameter name='forceClosed' type='boolean'/></method></class><class name='Picture' extends='java.lang.Object'><constructor name='Picture' type='android.graphics.Picture'/><constructor name='Picture' type='android.graphics.Picture'><parameter name='src' type='android.graphics.Picture'/></constructor><method name='beginRecording' return='android.graphics.Canvas'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='createFromStream' static='true' return='android.graphics.Picture'><parameter name='stream' type='java.io.InputStream'/></method><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='endRecording'/><method name='getHeight' native='true' return='int'/><method name='getWidth' native='true' return='int'/><method name='writeToStream'><parameter name='stream' type='java.io.OutputStream'/></method></class><class name='PixelFormat' extends='java.lang.Object'><constructor name='PixelFormat' type='android.graphics.PixelFormat'/><field name='A_8' final='true' static='true' value='8' type='int'/><field name='JPEG' final='true' static='true' value='256' type='int' deprecated='8'/><field name='LA_88' final='true' static='true' value='10' type='int'/><field name='L_8' final='true' static='true' value='9' type='int'/><field name='OPAQUE' final='true' static='true' value='-1' type='int'/><field name='RGBA_4444' final='true' static='true' value='7' type='int'/><field name='RGBA_5551' final='true' static='true' value='6' type='int'/><field name='RGBA_8888' final='true' static='true' value='1' type='int'/><field name='RGBX_8888' final='true' static='true' value='2' type='int'/><field name='RGB_332' final='true' static='true' value='11' type='int'/><field name='RGB_565' final='true' static='true' value='4' type='int'/><field name='RGB_888' final='true' static='true' value='3' type='int'/><field name='TRANSLUCENT' final='true' static='true' value='-3' type='int'/><field name='TRANSPARENT' final='true' static='true' value='-2' type='int'/><field name='UNKNOWN' final='true' static='true' value='0' type='int'/><field name='YCbCr_420_SP' final='true' static='true' value='17' type='int' deprecated='8'/><field name='YCbCr_422_SP' final='true' static='true' value='16' type='int' deprecated='8'/><field name='bitsPerPixel' type='int'/><field name='bytesPerPixel' type='int'/><field api_added='5' name='YCbCr_422_I' final='true' static='true' value='20' type='int' deprecated='8'/><method name='formatHasAlpha' static='true' return='boolean'><parameter name='format' type='int'/></method><method name='getPixelFormatInfo' native='true' static='true'><parameter name='format' type='int'/><parameter name='info' type='android.graphics.PixelFormat'/></method></class><class name='PixelXorXfermode' extends='android.graphics.Xfermode'><constructor name='PixelXorXfermode' type='android.graphics.PixelXorXfermode'><parameter name='opColor' type='int'/></constructor></class><class name='Point' extends='java.lang.Object'><constructor name='Point' type='android.graphics.Point'/><constructor name='Point' type='android.graphics.Point'><parameter name='x' type='int'/><parameter name='y' type='int'/></constructor><constructor name='Point' type='android.graphics.Point'><parameter name='src' type='android.graphics.Point'/></constructor><field name='x' type='int'/><field name='y' type='int'/><method name='equals' final='true' return='boolean'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='negate' final='true'/><method name='offset' final='true'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='set'><parameter name='x' type='int'/><parameter name='y' type='int'/></method></class><class name='PointF' extends='java.lang.Object'><constructor name='PointF' type='android.graphics.PointF'/><constructor name='PointF' type='android.graphics.PointF'><parameter name='x' type='float'/><parameter name='y' type='float'/></constructor><constructor name='PointF' type='android.graphics.PointF'><parameter name='p' type='android.graphics.Point'/></constructor><field name='x' type='float'/><field name='y' type='float'/><method name='equals' final='true' return='boolean'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='length' final='true' return='float'/><method name='length' static='true' return='float'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='negate' final='true'/><method name='offset' final='true'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='set' final='true'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='set' final='true'><parameter name='p' type='android.graphics.PointF'/></method></class><class name='PorterDuff' extends='java.lang.Object'><constructor name='PorterDuff' type='android.graphics.PorterDuff'/></class><class name='PorterDuff.Mode' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.PorterDuff.Mode'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.PorterDuff.Mode[]'/></class><class name='PorterDuffColorFilter' extends='android.graphics.ColorFilter'><constructor name='PorterDuffColorFilter' type='android.graphics.PorterDuffColorFilter'><parameter name='srcColor' type='int'/><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></constructor></class><class name='PorterDuffXfermode' extends='android.graphics.Xfermode'><constructor name='PorterDuffXfermode' type='android.graphics.PorterDuffXfermode'><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></constructor></class><class name='RadialGradient' extends='android.graphics.Shader'><constructor name='RadialGradient' type='android.graphics.RadialGradient'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='radius' type='float'/><parameter name='colors' type='int[]'/><parameter name='positions' type='float[]'/><parameter name='tile' type='android.graphics.Shader.TileMode'/></constructor><constructor name='RadialGradient' type='android.graphics.RadialGradient'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='radius' type='float'/><parameter name='color0' type='int'/><parameter name='color1' type='int'/><parameter name='tile' type='android.graphics.Shader.TileMode'/></constructor></class><class name='Rasterizer' extends='java.lang.Object'><constructor name='Rasterizer' type='android.graphics.Rasterizer'/></class><class name='Rect' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Rect' type='android.graphics.Rect'/><constructor name='Rect' type='android.graphics.Rect'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></constructor><constructor name='Rect' type='android.graphics.Rect'><parameter name='r' type='android.graphics.Rect'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='bottom' type='int'/><field name='left' type='int'/><field name='right' type='int'/><field name='top' type='int'/><method name='centerX' final='true' return='int'/><method name='centerY' final='true' return='int'/><method name='contains' return='boolean'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='contains' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='contains' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='describeContents' return='int'/><method name='exactCenterX' final='true' return='float'/><method name='exactCenterY' final='true' return='float'/><method name='height' final='true' return='int'/><method name='inset'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='intersect' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='intersect' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='intersects' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='intersects' static='true' return='boolean'><parameter name='a' type='android.graphics.Rect'/><parameter name='b' type='android.graphics.Rect'/></method><method name='isEmpty' final='true' return='boolean'/><method name='offset'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='offsetTo'><parameter name='newLeft' type='int'/><parameter name='newTop' type='int'/></method><method name='readFromParcel'><parameter name='in' type='android.os.Parcel'/></method><method name='set'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='set'><parameter name='src' type='android.graphics.Rect'/></method><method name='setEmpty'/><method name='setIntersect' return='boolean'><parameter name='a' type='android.graphics.Rect'/><parameter name='b' type='android.graphics.Rect'/></method><method name='sort'/><method name='union'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='union'><parameter name='r' type='android.graphics.Rect'/></method><method name='union'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='width' final='true' return='int'/><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='toShortString' return='java.lang.String'/><method api_added='7' name='flattenToString' return='java.lang.String'/><method api_added='7' name='unflattenFromString' static='true' return='android.graphics.Rect'><parameter name='str' type='java.lang.String'/></method></class><class name='RectF' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='RectF' type='android.graphics.RectF'/><constructor name='RectF' type='android.graphics.RectF'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></constructor><constructor name='RectF' type='android.graphics.RectF'><parameter name='r' type='android.graphics.RectF'/></constructor><constructor name='RectF' type='android.graphics.RectF'><parameter name='r' type='android.graphics.Rect'/></constructor><field name='bottom' type='float'/><field name='left' type='float'/><field name='right' type='float'/><field name='top' type='float'/><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='centerX' final='true' return='float'/><method name='centerY' final='true' return='float'/><method name='contains' return='boolean'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='contains' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='contains' return='boolean'><parameter name='r' type='android.graphics.RectF'/></method><method name='height' final='true' return='float'/><method name='inset'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='intersect' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='intersect' return='boolean'><parameter name='r' type='android.graphics.RectF'/></method><method name='intersects' return='boolean'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='intersects' static='true' return='boolean'><parameter name='a' type='android.graphics.RectF'/><parameter name='b' type='android.graphics.RectF'/></method><method name='isEmpty' final='true' return='boolean'/><method name='offset'><parameter name='dx' type='float'/><parameter name='dy' type='float'/></method><method name='offsetTo'><parameter name='newLeft' type='float'/><parameter name='newTop' type='float'/></method><method name='round'><parameter name='dst' type='android.graphics.Rect'/></method><method name='roundOut'><parameter name='dst' type='android.graphics.Rect'/></method><method name='set'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='set'><parameter name='src' type='android.graphics.RectF'/></method><method name='set'><parameter name='src' type='android.graphics.Rect'/></method><method name='setEmpty'/><method name='setIntersect' return='boolean'><parameter name='a' type='android.graphics.RectF'/><parameter name='b' type='android.graphics.RectF'/></method><method name='sort'/><method name='union'><parameter name='left' type='float'/><parameter name='top' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/></method><method name='union'><parameter name='r' type='android.graphics.RectF'/></method><method name='union'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='width' final='true' return='float'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='readFromParcel'><parameter name='in' type='android.os.Parcel'/></method><method api_added='3' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Region' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Region' type='android.graphics.Region'/><constructor name='Region' type='android.graphics.Region'><parameter name='region' type='android.graphics.Region'/></constructor><constructor name='Region' type='android.graphics.Region'><parameter name='r' type='android.graphics.Rect'/></constructor><constructor name='Region' type='android.graphics.Region'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='contains' native='true' return='boolean'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='describeContents' return='int'/><method name='getBoundaryPath' return='android.graphics.Path'/><method name='getBoundaryPath' return='boolean'><parameter name='path' type='android.graphics.Path'/></method><method name='getBounds' return='android.graphics.Rect'/><method name='getBounds' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='isComplex' native='true' return='boolean'/><method name='isEmpty' native='true' return='boolean'/><method name='isRect' native='true' return='boolean'/><method name='op' return='boolean'><parameter name='r' type='android.graphics.Rect'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='op' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='op' return='boolean'><parameter name='region' type='android.graphics.Region'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='op' return='boolean'><parameter name='rect' type='android.graphics.Rect'/><parameter name='region' type='android.graphics.Region'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='op' return='boolean'><parameter name='region1' type='android.graphics.Region'/><parameter name='region2' type='android.graphics.Region'/><parameter name='op' type='android.graphics.Region.Op'/></method><method name='quickContains' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='quickContains' native='true' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='quickReject' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='quickReject' native='true' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='quickReject' native='true' return='boolean'><parameter name='rgn' type='android.graphics.Region'/></method><method name='set' return='boolean'><parameter name='region' type='android.graphics.Region'/></method><method name='set' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='set' return='boolean'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='setEmpty'/><method name='setPath' return='boolean'><parameter name='path' type='android.graphics.Path'/><parameter name='clip' type='android.graphics.Region'/></method><method name='translate'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='translate' native='true'><parameter name='dx' type='int'/><parameter name='dy' type='int'/><parameter name='dst' type='android.graphics.Region'/></method><method name='union' final='true' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='writeToParcel'><parameter name='p' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Region.Op' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Region.Op'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Region.Op[]'/></class><class name='RegionIterator' extends='java.lang.Object'><constructor name='RegionIterator' type='android.graphics.RegionIterator'><parameter name='region' type='android.graphics.Region'/></constructor><method name='next' final='true' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method></class><class name='Shader' extends='java.lang.Object'><constructor name='Shader' type='android.graphics.Shader'/><method name='getLocalMatrix' return='boolean'><parameter name='localM' type='android.graphics.Matrix'/></method><method name='setLocalMatrix'><parameter name='localM' type='android.graphics.Matrix'/></method></class><class name='Shader.TileMode' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.Shader.TileMode'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.Shader.TileMode[]'/></class><class name='SumPathEffect' extends='android.graphics.PathEffect'><constructor name='SumPathEffect' type='android.graphics.SumPathEffect'><parameter name='first' type='android.graphics.PathEffect'/><parameter name='second' type='android.graphics.PathEffect'/></constructor></class><class name='SweepGradient' extends='android.graphics.Shader'><constructor name='SweepGradient' type='android.graphics.SweepGradient'><parameter name='cx' type='float'/><parameter name='cy' type='float'/><parameter name='colors' type='int[]'/><parameter name='positions' type='float[]'/></constructor><constructor name='SweepGradient' type='android.graphics.SweepGradient'><parameter name='cx' type='float'/><parameter name='cy' type='float'/><parameter name='color0' type='int'/><parameter name='color1' type='int'/></constructor></class><class name='Typeface' extends='java.lang.Object'><field name='BOLD' final='true' static='true' value='1' type='int'/><field name='BOLD_ITALIC' final='true' static='true' value='3' type='int'/><field name='DEFAULT' final='true' static='true' type='android.graphics.Typeface'/><field name='DEFAULT_BOLD' final='true' static='true' type='android.graphics.Typeface'/><field name='ITALIC' final='true' static='true' value='2' type='int'/><field name='MONOSPACE' final='true' static='true' type='android.graphics.Typeface'/><field name='NORMAL' final='true' static='true' value='0' type='int'/><field name='SANS_SERIF' final='true' static='true' type='android.graphics.Typeface'/><field name='SERIF' final='true' static='true' type='android.graphics.Typeface'/><method name='create' static='true' return='android.graphics.Typeface'><parameter name='familyName' type='java.lang.String'/><parameter name='style' type='int'/></method><method name='create' static='true' return='android.graphics.Typeface'><parameter name='family' type='android.graphics.Typeface'/><parameter name='style' type='int'/></method><method name='createFromAsset' static='true' return='android.graphics.Typeface'><parameter name='mgr' type='android.content.res.AssetManager'/><parameter name='path' type='java.lang.String'/></method><method name='defaultFromStyle' static='true' return='android.graphics.Typeface'><parameter name='style' type='int'/></method><method name='getStyle' return='int'/><method name='isBold' final='true' return='boolean'/><method name='isItalic' final='true' return='boolean'/><method api_added='4' name='createFromFile' static='true' return='android.graphics.Typeface'><parameter name='path' type='java.io.File'/></method><method api_added='4' name='createFromFile' static='true' return='android.graphics.Typeface'><parameter name='path' type='java.lang.String'/></method></class><class name='Xfermode' extends='java.lang.Object'><constructor name='Xfermode' type='android.graphics.Xfermode'/></class><class api_added='8' name='ImageFormat' extends='java.lang.Object'><constructor api_added='8' name='ImageFormat' type='android.graphics.ImageFormat'/><field api_added='8' name='JPEG' final='true' static='true' value='256' type='int'/><field api_added='8' name='NV16' final='true' static='true' value='16' type='int'/><field api_added='8' name='NV21' final='true' static='true' value='17' type='int'/><field api_added='8' name='RGB_565' final='true' static='true' value='4' type='int'/><field api_added='8' name='UNKNOWN' final='true' static='true' value='0' type='int'/><field api_added='8' name='YUY2' final='true' static='true' value='20' type='int'/><method api_added='8' name='getBitsPerPixel' static='true' return='int'><parameter name='format' type='int'/></method></class><class api_added='8' name='YuvImage' extends='java.lang.Object'><constructor api_added='8' name='YuvImage' type='android.graphics.YuvImage'><parameter name='yuv' type='byte[]'/><parameter name='format' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='strides' type='int[]'/></constructor><method api_added='8' name='compressToJpeg' return='boolean'><parameter name='rectangle' type='android.graphics.Rect'/><parameter name='quality' type='int'/><parameter name='stream' type='java.io.OutputStream'/></method><method api_added='8' name='getHeight' return='int'/><method api_added='8' name='getStrides' return='int[]'/><method api_added='8' name='getWidth' return='int'/><method api_added='8' name='getYuvData' return='byte[]'/><method api_added='8' name='getYuvFormat' return='int'/></class></package><package name='android.graphics.drawable'><class name='AnimationDrawable' extends='android.graphics.drawable.DrawableContainer'><implements name='java.lang.Runnable'/><implements name='android.graphics.drawable.Animatable'/><constructor name='AnimationDrawable' type='android.graphics.drawable.AnimationDrawable'/><method name='addFrame'><parameter name='frame' type='android.graphics.drawable.Drawable'/><parameter name='duration' type='int'/></method><method name='getDuration' return='int'><parameter name='i' type='int'/></method><method name='getFrame' return='android.graphics.drawable.Drawable'><parameter name='index' type='int'/></method><method name='getNumberOfFrames' return='int'/><method name='isOneShot' return='boolean'/><method name='isRunning' return='boolean'/><method name='run'/><method name='setOneShot'><parameter name='oneShot' type='boolean'/></method><method name='start'/><method name='stop'/></class><class name='BitmapDrawable' extends='android.graphics.drawable.Drawable'><constructor name='BitmapDrawable' type='android.graphics.drawable.BitmapDrawable'/><constructor name='BitmapDrawable' type='android.graphics.drawable.BitmapDrawable'><parameter name='bitmap' type='android.graphics.Bitmap'/></constructor><constructor name='BitmapDrawable' type='android.graphics.drawable.BitmapDrawable'><parameter name='filepath' type='java.lang.String'/></constructor><constructor name='BitmapDrawable' type='android.graphics.drawable.BitmapDrawable'><parameter name='is' type='java.io.InputStream'/><parameter name='res' type='android.content.res.Resources'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getBitmap' final='true' return='android.graphics.Bitmap'/><method name='getConstantState' final='true' return='android.graphics.drawable.Drawable.ConstantState'/><method name='getGravity' return='int'/><method name='getOpacity' return='int'/><method name='getPaint' final='true' return='android.graphics.Paint'/><method name='getTileModeX' return='android.graphics.Shader.TileMode'/><method name='getTileModeY' return='android.graphics.Shader.TileMode'/><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setAntiAlias'><parameter name='aa' type='boolean'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setTileModeX'><parameter name='mode' type='android.graphics.Shader.TileMode'/></method><method name='setTileModeXY'><parameter name='xmode' type='android.graphics.Shader.TileMode'/><parameter name='ymode' type='android.graphics.Shader.TileMode'/></method><method name='setTileModeY' final='true'><parameter name='mode' type='android.graphics.Shader.TileMode'/></method><method api_added='4' name='setTargetDensity'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='4' name='setTargetDensity'><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method api_added='4' name='setTargetDensity'><parameter name='density' type='int'/></method></class><class name='ClipDrawable' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='ClipDrawable' type='android.graphics.drawable.ClipDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/><parameter name='gravity' type='int'/><parameter name='orientation' type='int'/></constructor><field name='HORIZONTAL' final='true' static='true' value='1' type='int'/><field name='VERTICAL' final='true' static='true' value='2' type='int'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method></class><class name='ColorDrawable' extends='android.graphics.drawable.Drawable'><constructor name='ColorDrawable' type='android.graphics.drawable.ColorDrawable'/><constructor name='ColorDrawable' type='android.graphics.drawable.ColorDrawable'><parameter name='color' type='int'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getAlpha' return='int'/><method name='getOpacity' return='int'/><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='colorFilter' type='android.graphics.ColorFilter'/></method></class><class name='Drawable' extends='java.lang.Object' abstract='true'><constructor name='Drawable' type='android.graphics.drawable.Drawable'/><method name='clearColorFilter'/><method name='copyBounds' final='true'><parameter name='bounds' type='android.graphics.Rect'/></method><method name='copyBounds' final='true' return='android.graphics.Rect'/><method name='createFromPath' static='true' return='android.graphics.drawable.Drawable'><parameter name='pathName' type='java.lang.String'/></method><method name='createFromStream' static='true' return='android.graphics.drawable.Drawable'><parameter name='is' type='java.io.InputStream'/><parameter name='srcName' type='java.lang.String'/></method><method name='createFromXml' static='true' return='android.graphics.drawable.Drawable'><parameter name='r' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='createFromXmlInner' static='true' return='android.graphics.drawable.Drawable'><parameter name='r' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='attrs' type='android.util.AttributeSet'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='draw' abstract='true'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getBounds' final='true' return='android.graphics.Rect'/><method name='getChangingConfigurations' return='int'/><method name='getConstantState' return='android.graphics.drawable.Drawable.ConstantState'/><method name='getCurrent' return='android.graphics.drawable.Drawable'/><method name='getIntrinsicHeight' return='int'/><method name='getIntrinsicWidth' return='int'/><method name='getLevel' final='true' return='int'/><method name='getMinimumHeight' return='int'/><method name='getMinimumWidth' return='int'/><method name='getOpacity' abstract='true' return='int'/><method name='getPadding' return='boolean'><parameter name='padding' type='android.graphics.Rect'/></method><method name='getState' return='int[]'/><method name='getTransparentRegion' return='android.graphics.Region'/><method name='inflate'><parameter name='r' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='attrs' type='android.util.AttributeSet'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='invalidateSelf'/><method name='isStateful' return='boolean'/><method name='isVisible' final='true' return='boolean'/><method name='onBoundsChange' visibility='protected'><parameter name='bounds' type='android.graphics.Rect'/></method><method name='onLevelChange' visibility='protected' return='boolean'><parameter name='level' type='int'/></method><method name='onStateChange' visibility='protected' return='boolean'><parameter name='state' type='int[]'/></method><method name='resolveOpacity' static='true' return='int'><parameter name='op1' type='int'/><parameter name='op2' type='int'/></method><method name='scheduleSelf'><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha' abstract='true'><parameter name='alpha' type='int'/></method><method name='setBounds'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='setBounds'><parameter name='bounds' type='android.graphics.Rect'/></method><method name='setCallback' final='true'><parameter name='cb' type='android.graphics.drawable.Drawable.Callback'/></method><method name='setChangingConfigurations'><parameter name='configs' type='int'/></method><method name='setColorFilter' abstract='true'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setColorFilter'><parameter name='color' type='int'/><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></method><method name='setDither'><parameter name='dither' type='boolean'/></method><method name='setFilterBitmap'><parameter name='filter' type='boolean'/></method><method name='setLevel' final='true' return='boolean'><parameter name='level' type='int'/></method><method name='setState' return='boolean'><parameter name='stateSet' type='int[]'/></method><method name='setVisible' return='boolean'><parameter name='visible' type='boolean'/><parameter name='restart' type='boolean'/></method><method name='unscheduleSelf'><parameter name='what' type='java.lang.Runnable'/></method><method api_added='3' name='mutate' return='android.graphics.drawable.Drawable'/><method api_added='4' name='createFromResourceStream' static='true' return='android.graphics.drawable.Drawable'><parameter name='res' type='android.content.res.Resources'/><parameter name='value' type='android.util.TypedValue'/><parameter name='is' type='java.io.InputStream'/><parameter name='srcName' type='java.lang.String'/></method><method api_added='5' name='createFromResourceStream' static='true' return='android.graphics.drawable.Drawable'><parameter name='res' type='android.content.res.Resources'/><parameter name='value' type='android.util.TypedValue'/><parameter name='is' type='java.io.InputStream'/><parameter name='srcName' type='java.lang.String'/><parameter name='opts' type='android.graphics.BitmapFactory.Options'/></method></class><class name='Drawable.ConstantState' extends='java.lang.Object' abstract='true' static='true'><constructor name='Drawable.ConstantState' type='android.graphics.drawable.Drawable.ConstantState'/><method name='getChangingConfigurations' abstract='true' return='int'/><method name='newDrawable' abstract='true' return='android.graphics.drawable.Drawable'/><method api_added='5' name='newDrawable' return='android.graphics.drawable.Drawable'><parameter name='res' type='android.content.res.Resources'/></method></class><class name='DrawableContainer' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='DrawableContainer' type='android.graphics.drawable.DrawableContainer'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='selectDrawable' return='boolean'><parameter name='idx' type='int'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setConstantState' visibility='protected'><parameter name='state' type='android.graphics.drawable.DrawableContainer.DrawableContainerState'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method></class><class name='DrawableContainer.DrawableContainerState' extends='android.graphics.drawable.Drawable.ConstantState' abstract='true' static='true'><method name='addChild' final='true' return='int'><parameter name='dr' type='android.graphics.drawable.Drawable'/></method><method name='canConstantState' synchronized='true' return='boolean'/><method name='getChangingConfigurations' return='int'/><method name='getChildCount' final='true' return='int'/><method name='getChildren' final='true' return='android.graphics.drawable.Drawable[]'/><method name='getConstantHeight' final='true' return='int'/><method name='getConstantMinimumHeight' final='true' return='int'/><method name='getConstantMinimumWidth' final='true' return='int'/><method name='getConstantPadding' final='true' return='android.graphics.Rect'/><method name='getConstantWidth' final='true' return='int'/><method name='getOpacity' final='true' return='int'/><method name='growArray'><parameter name='oldSize' type='int'/><parameter name='newSize' type='int'/></method><method name='isConstantSize' final='true' return='boolean'/><method name='isStateful' final='true' return='boolean'/><method name='setConstantSize' final='true'><parameter name='constant' type='boolean'/></method><method name='setVariablePadding' final='true'><parameter name='variable' type='boolean'/></method></class><class name='GradientDrawable' extends='android.graphics.drawable.Drawable'><constructor name='GradientDrawable' type='android.graphics.drawable.GradientDrawable'/><constructor name='GradientDrawable' type='android.graphics.drawable.GradientDrawable'><parameter name='orientation' type='android.graphics.drawable.GradientDrawable.Orientation'/><parameter name='colors' type='int[]'/></constructor><field name='LINE' final='true' static='true' value='2' type='int'/><field name='LINEAR_GRADIENT' final='true' static='true' value='0' type='int'/><field name='OVAL' final='true' static='true' value='1' type='int'/><field name='RADIAL_GRADIENT' final='true' static='true' value='1' type='int'/><field name='RECTANGLE' final='true' static='true' value='0' type='int'/><field name='RING' final='true' static='true' value='3' type='int'/><field name='SWEEP_GRADIENT' final='true' static='true' value='2' type='int'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColor'><parameter name='argb' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setCornerRadii'><parameter name='radii' type='float[]'/></method><method name='setCornerRadius'><parameter name='radius' type='float'/></method><method name='setGradientCenter'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='setGradientRadius'><parameter name='gradientRadius' type='float'/></method><method name='setGradientType'><parameter name='gradient' type='int'/></method><method name='setShape'><parameter name='shape' type='int'/></method><method name='setSize'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='setStroke'><parameter name='width' type='int'/><parameter name='color' type='int'/></method><method name='setStroke'><parameter name='width' type='int'/><parameter name='color' type='int'/><parameter name='dashWidth' type='float'/><parameter name='dashGap' type='float'/></method><method name='setUseLevel'><parameter name='useLevel' type='boolean'/></method></class><class name='GradientDrawable.Orientation' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.graphics.drawable.GradientDrawable.Orientation'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.graphics.drawable.GradientDrawable.Orientation[]'/></class><class name='InsetDrawable' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='InsetDrawable' type='android.graphics.drawable.InsetDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/><parameter name='inset' type='int'/></constructor><constructor name='InsetDrawable' type='android.graphics.drawable.InsetDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/><parameter name='insetLeft' type='int'/><parameter name='insetTop' type='int'/><parameter name='insetRight' type='int'/><parameter name='insetBottom' type='int'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method></class><class name='LayerDrawable' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='LayerDrawable' type='android.graphics.drawable.LayerDrawable'><parameter name='array' type='android.graphics.drawable.Drawable[]'/><parameter name='layers' type='android.graphics.drawable.Drawable[]'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='findDrawableByLayerId' return='android.graphics.drawable.Drawable'><parameter name='id' type='int'/></method><method name='getDrawable' return='android.graphics.drawable.Drawable'><parameter name='index' type='int'/></method><method name='getId' return='int'><parameter name='index' type='int'/></method><method name='getNumberOfLayers' return='int'/><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setDrawableByLayerId' return='boolean'><parameter name='id' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setId'><parameter name='index' type='int'/><parameter name='id' type='int'/></method><method name='setLayerInset'><parameter name='index' type='int'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method></class><class name='LevelListDrawable' extends='android.graphics.drawable.DrawableContainer'><constructor name='LevelListDrawable' type='android.graphics.drawable.LevelListDrawable'/><method name='addLevel'><parameter name='low' type='int'/><parameter name='high' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method></class><class name='NinePatchDrawable' extends='android.graphics.drawable.Drawable'><constructor name='NinePatchDrawable' type='android.graphics.drawable.NinePatchDrawable'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='chunk' type='byte[]'/><parameter name='padding' type='android.graphics.Rect'/><parameter name='srcName' type='java.lang.String'/></constructor><constructor name='NinePatchDrawable' type='android.graphics.drawable.NinePatchDrawable'><parameter name='patch' type='android.graphics.NinePatch'/><parameter name='res' type='android.content.res.Resources'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='getPaint' return='android.graphics.Paint'/><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method api_added='4' name='setTargetDensity'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='4' name='setTargetDensity'><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method api_added='4' name='setTargetDensity'><parameter name='density' type='int'/></method></class><class name='PaintDrawable' extends='android.graphics.drawable.ShapeDrawable'><constructor name='PaintDrawable' type='android.graphics.drawable.PaintDrawable'/><constructor name='PaintDrawable' type='android.graphics.drawable.PaintDrawable'><parameter name='color' type='int'/></constructor><method name='setCornerRadii'><parameter name='radii' type='float[]'/></method><method name='setCornerRadius'><parameter name='radius' type='float'/></method></class><class name='PictureDrawable' extends='android.graphics.drawable.Drawable'><constructor name='PictureDrawable' type='android.graphics.drawable.PictureDrawable'><parameter name='picture' type='android.graphics.Picture'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='getPicture' return='android.graphics.Picture'/><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='colorFilter' type='android.graphics.ColorFilter'/></method><method name='setPicture'><parameter name='picture' type='android.graphics.Picture'/></method></class><class name='RotateDrawable' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='RotateDrawable' type='android.graphics.drawable.RotateDrawable'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method><method api_added='3' name='getDrawable' return='android.graphics.drawable.Drawable'/></class><class name='ScaleDrawable' extends='android.graphics.drawable.Drawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor name='ScaleDrawable' type='android.graphics.drawable.ScaleDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/><parameter name='gravity' type='int'/><parameter name='scaleWidth' type='float'/><parameter name='scaleHeight' type='float'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='invalidateDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method><method api_added='3' name='getDrawable' return='android.graphics.drawable.Drawable'/></class><class name='ShapeDrawable' extends='android.graphics.drawable.Drawable'><constructor name='ShapeDrawable' type='android.graphics.drawable.ShapeDrawable'/><constructor name='ShapeDrawable' type='android.graphics.drawable.ShapeDrawable'><parameter name='s' type='android.graphics.drawable.shapes.Shape'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='getOpacity' return='int'/><method name='getPaint' return='android.graphics.Paint'/><method name='getShaderFactory' return='android.graphics.drawable.ShapeDrawable.ShaderFactory'/><method name='getShape' return='android.graphics.drawable.shapes.Shape'/><method name='inflateTag' visibility='protected' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='r' type='android.content.res.Resources'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='attrs' type='android.util.AttributeSet'/></method><method name='onDraw' visibility='protected'><parameter name='shape' type='android.graphics.drawable.shapes.Shape'/><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setIntrinsicHeight'><parameter name='height' type='int'/></method><method name='setIntrinsicWidth'><parameter name='width' type='int'/></method><method name='setPadding'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='setPadding'><parameter name='padding' type='android.graphics.Rect'/></method><method name='setShaderFactory'><parameter name='fact' type='android.graphics.drawable.ShapeDrawable.ShaderFactory'/></method><method name='setShape'><parameter name='s' type='android.graphics.drawable.shapes.Shape'/></method></class><class name='ShapeDrawable.ShaderFactory' extends='java.lang.Object' abstract='true' static='true'><constructor name='ShapeDrawable.ShaderFactory' type='android.graphics.drawable.ShapeDrawable.ShaderFactory'/><method name='resize' abstract='true' return='android.graphics.Shader'><parameter name='width' type='int'/><parameter name='height' type='int'/></method></class><class name='StateListDrawable' extends='android.graphics.drawable.DrawableContainer'><constructor name='StateListDrawable' type='android.graphics.drawable.StateListDrawable'/><method name='addState'><parameter name='stateSet' type='int[]'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method></class><class name='TransitionDrawable' extends='android.graphics.drawable.LayerDrawable'><implements name='android.graphics.drawable.Drawable.Callback'/><constructor api_added='3' name='TransitionDrawable' type='android.graphics.drawable.TransitionDrawable'><parameter name='layers' type='android.graphics.drawable.Drawable[]'/></constructor><method name='isCrossFadeEnabled' return='boolean'/><method name='resetTransition'/><method name='reverseTransition'><parameter name='duration' type='int'/></method><method name='setCrossFadeEnabled'><parameter name='enabled' type='boolean'/></method><method name='startTransition'><parameter name='durationMillis' type='int'/></method></class><interface name='Drawable.Callback' abstract='true' static='true'><method name='invalidateDrawable' abstract='true'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='scheduleDrawable' abstract='true'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='unscheduleDrawable' abstract='true'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method></interface><interface api_added='4' name='Animatable' abstract='true'><method api_added='4' name='isRunning' abstract='true' return='boolean'/><method api_added='4' name='start' abstract='true'/><method api_added='4' name='stop' abstract='true'/></interface></package><package name='android.graphics.drawable.shapes'><class name='ArcShape' extends='android.graphics.drawable.shapes.RectShape'><constructor name='ArcShape' type='android.graphics.drawable.shapes.ArcShape'><parameter name='startAngle' type='float'/><parameter name='sweepAngle' type='float'/></constructor></class><class name='OvalShape' extends='android.graphics.drawable.shapes.RectShape'><constructor name='OvalShape' type='android.graphics.drawable.shapes.OvalShape'/></class><class name='PathShape' extends='android.graphics.drawable.shapes.Shape'><constructor name='PathShape' type='android.graphics.drawable.shapes.PathShape'><parameter name='path' type='android.graphics.Path'/><parameter name='stdWidth' type='float'/><parameter name='stdHeight' type='float'/></constructor><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='paint' type='android.graphics.Paint'/></method></class><class name='RectShape' extends='android.graphics.drawable.shapes.Shape'><constructor name='RectShape' type='android.graphics.drawable.shapes.RectShape'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='rect' final='true' visibility='protected' return='android.graphics.RectF'/></class><class name='RoundRectShape' extends='android.graphics.drawable.shapes.RectShape'><constructor name='RoundRectShape' type='android.graphics.drawable.shapes.RoundRectShape'><parameter name='outerRadii' type='float[]'/><parameter name='inset' type='android.graphics.RectF'/><parameter name='innerRadii' type='float[]'/></constructor></class><class name='Shape' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><constructor name='Shape' type='android.graphics.drawable.shapes.Shape'/><method name='draw' abstract='true'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='getHeight' final='true' return='float'/><method name='getWidth' final='true' return='float'/><method name='hasAlpha' return='boolean'/><method name='onResize' visibility='protected'><parameter name='width' type='float'/><parameter name='height' type='float'/></method><method name='resize' final='true'><parameter name='width' type='float'/><parameter name='height' type='float'/></method><method api_added='3' name='clone' return='android.graphics.drawable.shapes.Shape'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method></class></package><package name='android.hardware'><class name='Camera' extends='java.lang.Object'><field name='CAMERA_ERROR_SERVER_DIED' final='true' static='true' value='100' type='int'/><field name='CAMERA_ERROR_UNKNOWN' final='true' static='true' value='1' type='int'/><method name='autoFocus' final='true'><parameter name='cb' type='android.hardware.Camera.AutoFocusCallback'/></method><method name='getParameters' return='android.hardware.Camera.Parameters'/><method name='open' static='true' return='android.hardware.Camera'/><method name='release' final='true'/><method name='setErrorCallback' final='true'><parameter name='cb' type='android.hardware.Camera.ErrorCallback'/></method><method name='setParameters'><parameter name='params' type='android.hardware.Camera.Parameters'/></method><method name='setPreviewCallback' final='true'><parameter name='cb' type='android.hardware.Camera.PreviewCallback'/></method><method name='setPreviewDisplay' final='true'><parameter name='holder' type='android.view.SurfaceHolder'/><exception name='IOException' type='java.io.IOException'/></method><method name='startPreview' final='true' native='true'/><method name='stopPreview' final='true' native='true'/><method name='takePicture' final='true'><parameter name='shutter' type='android.hardware.Camera.ShutterCallback'/><parameter name='raw' type='android.hardware.Camera.PictureCallback'/><parameter name='jpeg' type='android.hardware.Camera.PictureCallback'/></method><method api_added='3' name='setOneShotPreviewCallback' final='true'><parameter name='cb' type='android.hardware.Camera.PreviewCallback'/></method><method api_added='5' name='cancelAutoFocus' final='true'/><method api_added='5' name='lock' final='true' native='true'/><method api_added='5' name='takePicture' final='true'><parameter name='shutter' type='android.hardware.Camera.ShutterCallback'/><parameter name='raw' type='android.hardware.Camera.PictureCallback'/><parameter name='postview' type='android.hardware.Camera.PictureCallback'/><parameter name='jpeg' type='android.hardware.Camera.PictureCallback'/></method><method api_added='5' name='unlock' final='true' native='true'/><method api_added='8' name='addCallbackBuffer' final='true' native='true'><parameter name='callbackBuffer' type='byte[]'/></method><method api_added='8' name='reconnect' final='true' native='true'><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='setDisplayOrientation' final='true' native='true'><parameter name='degrees' type='int'/></method><method api_added='8' name='setPreviewCallbackWithBuffer' final='true'><parameter name='cb' type='android.hardware.Camera.PreviewCallback'/></method><method api_added='8' name='setZoomChangeListener' final='true'><parameter name='listener' type='android.hardware.Camera.OnZoomChangeListener'/></method><method api_added='8' name='startSmoothZoom' final='true' native='true'><parameter name='value' type='int'/></method><method api_added='8' name='stopSmoothZoom' final='true' native='true'/></class><class name='Camera.Parameters' extends='java.lang.Object'><field api_added='5' name='ANTIBANDING_50HZ' final='true' static='true' value='&quot;50hz&quot;' type='java.lang.String'/><field api_added='5' name='ANTIBANDING_60HZ' final='true' static='true' value='&quot;60hz&quot;' type='java.lang.String'/><field api_added='5' name='ANTIBANDING_AUTO' final='true' static='true' value='&quot;auto&quot;' type='java.lang.String'/><field api_added='5' name='ANTIBANDING_OFF' final='true' static='true' value='&quot;off&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_AQUA' final='true' static='true' value='&quot;aqua&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_BLACKBOARD' final='true' static='true' value='&quot;blackboard&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_MONO' final='true' static='true' value='&quot;mono&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_NEGATIVE' final='true' static='true' value='&quot;negative&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_NONE' final='true' static='true' value='&quot;none&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_POSTERIZE' final='true' static='true' value='&quot;posterize&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_SEPIA' final='true' static='true' value='&quot;sepia&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_SOLARIZE' final='true' static='true' value='&quot;solarize&quot;' type='java.lang.String'/><field api_added='5' name='EFFECT_WHITEBOARD' final='true' static='true' value='&quot;whiteboard&quot;' type='java.lang.String'/><field api_added='5' name='FLASH_MODE_AUTO' final='true' static='true' value='&quot;auto&quot;' type='java.lang.String'/><field api_added='5' name='FLASH_MODE_OFF' final='true' static='true' value='&quot;off&quot;' type='java.lang.String'/><field api_added='5' name='FLASH_MODE_ON' final='true' static='true' value='&quot;on&quot;' type='java.lang.String'/><field api_added='5' name='FLASH_MODE_RED_EYE' final='true' static='true' value='&quot;red-eye&quot;' type='java.lang.String'/><field api_added='5' name='FLASH_MODE_TORCH' final='true' static='true' value='&quot;torch&quot;' type='java.lang.String'/><field api_added='5' name='FOCUS_MODE_AUTO' final='true' static='true' value='&quot;auto&quot;' type='java.lang.String'/><field api_added='5' name='FOCUS_MODE_FIXED' final='true' static='true' value='&quot;fixed&quot;' type='java.lang.String'/><field api_added='5' name='FOCUS_MODE_INFINITY' final='true' static='true' value='&quot;infinity&quot;' type='java.lang.String'/><field api_added='5' name='FOCUS_MODE_MACRO' final='true' static='true' value='&quot;macro&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_ACTION' final='true' static='true' value='&quot;action&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_AUTO' final='true' static='true' value='&quot;auto&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_BEACH' final='true' static='true' value='&quot;beach&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_CANDLELIGHT' final='true' static='true' value='&quot;candlelight&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_FIREWORKS' final='true' static='true' value='&quot;fireworks&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_LANDSCAPE' final='true' static='true' value='&quot;landscape&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_NIGHT' final='true' static='true' value='&quot;night&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_NIGHT_PORTRAIT' final='true' static='true' value='&quot;night-portrait&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_PARTY' final='true' static='true' value='&quot;party&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_PORTRAIT' final='true' static='true' value='&quot;portrait&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_SNOW' final='true' static='true' value='&quot;snow&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_SPORTS' final='true' static='true' value='&quot;sports&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_STEADYPHOTO' final='true' static='true' value='&quot;steadyphoto&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_SUNSET' final='true' static='true' value='&quot;sunset&quot;' type='java.lang.String'/><field api_added='5' name='SCENE_MODE_THEATRE' final='true' static='true' value='&quot;theatre&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_AUTO' final='true' static='true' value='&quot;auto&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_CLOUDY_DAYLIGHT' final='true' static='true' value='&quot;cloudy-daylight&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_DAYLIGHT' final='true' static='true' value='&quot;daylight&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_FLUORESCENT' final='true' static='true' value='&quot;fluorescent&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_INCANDESCENT' final='true' static='true' value='&quot;incandescent&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_SHADE' final='true' static='true' value='&quot;shade&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_TWILIGHT' final='true' static='true' value='&quot;twilight&quot;' type='java.lang.String'/><field api_added='5' name='WHITE_BALANCE_WARM_FLUORESCENT' final='true' static='true' value='&quot;warm-fluorescent&quot;' type='java.lang.String'/><field api_added='8' name='FOCUS_MODE_EDOF' final='true' static='true' value='&quot;edof&quot;' type='java.lang.String'/><field api_added='8' name='SCENE_MODE_BARCODE' final='true' static='true' value='&quot;barcode&quot;' type='java.lang.String'/><method name='flatten' return='java.lang.String'/><method name='get' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getInt' return='int'><parameter name='key' type='java.lang.String'/></method><method name='getPictureFormat' return='int'/><method name='getPictureSize' return='android.hardware.Camera.Size'/><method name='getPreviewFormat' return='int'/><method name='getPreviewFrameRate' return='int'/><method name='getPreviewSize' return='android.hardware.Camera.Size'/><method name='remove'><parameter name='key' type='java.lang.String'/></method><method name='set'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='set'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='setPictureFormat'><parameter name='pixel_format' type='int'/></method><method name='setPictureSize'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='setPreviewFormat'><parameter name='pixel_format' type='int'/></method><method name='setPreviewFrameRate'><parameter name='fps' type='int'/></method><method name='setPreviewSize'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='unflatten'><parameter name='flattened' type='java.lang.String'/></method><method api_added='5' name='getAntibanding' return='java.lang.String'/><method api_added='5' name='getColorEffect' return='java.lang.String'/><method api_added='5' name='getFlashMode' return='java.lang.String'/><method api_added='5' name='getFocusMode' return='java.lang.String'/><method api_added='5' name='getJpegQuality' return='int'/><method api_added='5' name='getJpegThumbnailQuality' return='int'/><method api_added='5' name='getJpegThumbnailSize' return='android.hardware.Camera.Size'/><method api_added='5' name='getSceneMode' return='java.lang.String'/><method api_added='5' name='getSupportedAntibanding' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getSupportedColorEffects' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getSupportedFlashModes' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getSupportedFocusModes' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getSupportedPictureFormats' return='java.util.List&lt;java.lang.Integer&gt;'/><method api_added='5' name='getSupportedPictureSizes' return='java.util.List&lt;android.hardware.Camera.Size&gt;'/><method api_added='5' name='getSupportedPreviewFormats' return='java.util.List&lt;java.lang.Integer&gt;'/><method api_added='5' name='getSupportedPreviewFrameRates' return='java.util.List&lt;java.lang.Integer&gt;'/><method api_added='5' name='getSupportedPreviewSizes' return='java.util.List&lt;android.hardware.Camera.Size&gt;'/><method api_added='5' name='getSupportedSceneModes' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getSupportedWhiteBalance' return='java.util.List&lt;java.lang.String&gt;'/><method api_added='5' name='getWhiteBalance' return='java.lang.String'/><method api_added='5' name='removeGpsData'/><method api_added='5' name='setAntibanding'><parameter name='antibanding' type='java.lang.String'/></method><method api_added='5' name='setColorEffect'><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='setFlashMode'><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='setFocusMode'><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='setGpsAltitude'><parameter name='altitude' type='double'/></method><method api_added='5' name='setGpsLatitude'><parameter name='latitude' type='double'/></method><method api_added='5' name='setGpsLongitude'><parameter name='longitude' type='double'/></method><method api_added='5' name='setGpsTimestamp'><parameter name='timestamp' type='long'/></method><method api_added='5' name='setJpegQuality'><parameter name='quality' type='int'/></method><method api_added='5' name='setJpegThumbnailQuality'><parameter name='quality' type='int'/></method><method api_added='5' name='setJpegThumbnailSize'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='5' name='setRotation'><parameter name='rotation' type='int'/></method><method api_added='5' name='setSceneMode'><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='setWhiteBalance'><parameter name='value' type='java.lang.String'/></method><method api_added='8' name='getExposureCompensation' return='int'/><method api_added='8' name='getExposureCompensationStep' return='float'/><method api_added='8' name='getFocalLength' return='float'/><method api_added='8' name='getHorizontalViewAngle' return='float'/><method api_added='8' name='getMaxExposureCompensation' return='int'/><method api_added='8' name='getMaxZoom' return='int'/><method api_added='8' name='getMinExposureCompensation' return='int'/><method api_added='8' name='getSupportedJpegThumbnailSizes' return='java.util.List&lt;android.hardware.Camera.Size&gt;'/><method api_added='8' name='getVerticalViewAngle' return='float'/><method api_added='8' name='getZoom' return='int'/><method api_added='8' name='getZoomRatios' return='java.util.List&lt;java.lang.Integer&gt;'/><method api_added='8' name='isSmoothZoomSupported' return='boolean'/><method api_added='8' name='isZoomSupported' return='boolean'/><method api_added='8' name='setExposureCompensation'><parameter name='value' type='int'/></method><method api_added='8' name='setGpsProcessingMethod'><parameter name='processing_method' type='java.lang.String'/></method><method api_added='8' name='setZoom'><parameter name='value' type='int'/></method></class><class name='Camera.Size' extends='java.lang.Object'><constructor name='Camera.Size' type='android.hardware.Camera.Size'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><field name='height' type='int'/><field name='width' type='int'/></class><class name='SensorManager' extends='java.lang.Object'><field name='DATA_X' final='true' static='true' value='0' type='int' deprecated='3'/><field name='DATA_Y' final='true' static='true' value='1' type='int' deprecated='3'/><field name='DATA_Z' final='true' static='true' value='2' type='int' deprecated='3'/><field name='GRAVITY_DEATH_STAR_I' final='true' static='true' value='3.5303614E-7f' type='float'/><field name='GRAVITY_EARTH' final='true' static='true' value='9.80665f' type='float'/><field name='GRAVITY_JUPITER' final='true' static='true' value='23.12f' type='float'/><field name='GRAVITY_MARS' final='true' static='true' value='3.71f' type='float'/><field name='GRAVITY_MERCURY' final='true' static='true' value='3.7f' type='float'/><field name='GRAVITY_MOON' final='true' static='true' value='1.6f' type='float'/><field name='GRAVITY_NEPTUNE' final='true' static='true' value='11.0f' type='float'/><field name='GRAVITY_PLUTO' final='true' static='true' value='0.6f' type='float'/><field name='GRAVITY_SATURN' final='true' static='true' value='8.96f' type='float'/><field name='GRAVITY_SUN' final='true' static='true' value='275.0f' type='float'/><field name='GRAVITY_THE_ISLAND' final='true' static='true' value='4.815162f' type='float'/><field name='GRAVITY_URANUS' final='true' static='true' value='8.69f' type='float'/><field name='GRAVITY_VENUS' final='true' static='true' value='8.87f' type='float'/><field name='LIGHT_CLOUDY' final='true' static='true' value='100.0f' type='float'/><field name='LIGHT_FULLMOON' final='true' static='true' value='0.25f' type='float'/><field name='LIGHT_NO_MOON' final='true' static='true' value='0.0010f' type='float'/><field name='LIGHT_OVERCAST' final='true' static='true' value='10000.0f' type='float'/><field name='LIGHT_SHADE' final='true' static='true' value='20000.0f' type='float'/><field name='LIGHT_SUNLIGHT' final='true' static='true' value='110000.0f' type='float'/><field name='LIGHT_SUNLIGHT_MAX' final='true' static='true' value='120000.0f' type='float'/><field name='LIGHT_SUNRISE' final='true' static='true' value='400.0f' type='float'/><field name='MAGNETIC_FIELD_EARTH_MAX' final='true' static='true' value='60.0f' type='float'/><field name='MAGNETIC_FIELD_EARTH_MIN' final='true' static='true' value='30.0f' type='float'/><field name='RAW_DATA_INDEX' final='true' static='true' value='3' type='int' deprecated='3'/><field name='RAW_DATA_X' final='true' static='true' value='3' type='int' deprecated='3'/><field name='RAW_DATA_Y' final='true' static='true' value='4' type='int' deprecated='3'/><field name='RAW_DATA_Z' final='true' static='true' value='5' type='int' deprecated='3'/><field name='SENSOR_ACCELEROMETER' final='true' static='true' value='2' type='int' deprecated='3'/><field name='SENSOR_ALL' final='true' static='true' value='127' type='int' deprecated='3'/><field name='SENSOR_DELAY_FASTEST' final='true' static='true' value='0' type='int'/><field name='SENSOR_DELAY_GAME' final='true' static='true' value='1' type='int'/><field name='SENSOR_DELAY_NORMAL' final='true' static='true' value='3' type='int'/><field name='SENSOR_DELAY_UI' final='true' static='true' value='2' type='int'/><field name='SENSOR_LIGHT' final='true' static='true' value='16' type='int' deprecated='3'/><field name='SENSOR_MAGNETIC_FIELD' final='true' static='true' value='8' type='int' deprecated='3'/><field name='SENSOR_MAX' final='true' static='true' value='64' type='int' deprecated='3'/><field name='SENSOR_MIN' final='true' static='true' value='1' type='int' deprecated='3'/><field name='SENSOR_ORIENTATION' final='true' static='true' value='1' type='int' deprecated='3'/><field name='SENSOR_ORIENTATION_RAW' final='true' static='true' value='128' type='int' deprecated='3'/><field name='SENSOR_PROXIMITY' final='true' static='true' value='32' type='int' deprecated='3'/><field name='SENSOR_STATUS_ACCURACY_HIGH' final='true' static='true' value='3' type='int'/><field name='SENSOR_STATUS_ACCURACY_LOW' final='true' static='true' value='1' type='int'/><field name='SENSOR_STATUS_ACCURACY_MEDIUM' final='true' static='true' value='2' type='int'/><field name='SENSOR_STATUS_UNRELIABLE' final='true' static='true' value='0' type='int'/><field name='SENSOR_TEMPERATURE' final='true' static='true' value='4' type='int' deprecated='3'/><field name='SENSOR_TRICORDER' final='true' static='true' value='64' type='int' deprecated='3'/><field name='STANDARD_GRAVITY' final='true' static='true' value='9.80665f' type='float'/><field api_added='3' name='AXIS_MINUS_X' final='true' static='true' value='129' type='int'/><field api_added='3' name='AXIS_MINUS_Y' final='true' static='true' value='130' type='int'/><field api_added='3' name='AXIS_MINUS_Z' final='true' static='true' value='131' type='int'/><field api_added='3' name='AXIS_X' final='true' static='true' value='1' type='int'/><field api_added='3' name='AXIS_Y' final='true' static='true' value='2' type='int'/><field api_added='3' name='AXIS_Z' final='true' static='true' value='3' type='int'/><method name='getSensors' deprecated='3' return='int'/><method name='registerListener' deprecated='3' return='boolean'><parameter name='listener' type='android.hardware.SensorListener'/><parameter name='sensors' type='int'/></method><method name='registerListener' deprecated='3' return='boolean'><parameter name='listener' type='android.hardware.SensorListener'/><parameter name='sensors' type='int'/><parameter name='rate' type='int'/></method><method name='unregisterListener' deprecated='3'><parameter name='listener' type='android.hardware.SensorListener'/><parameter name='sensors' type='int'/></method><method name='unregisterListener' deprecated='3'><parameter name='listener' type='android.hardware.SensorListener'/></method><method api_added='3' name='getDefaultSensor' return='android.hardware.Sensor'><parameter name='type' type='int'/></method><method api_added='3' name='getInclination' static='true' return='float'><parameter name='I' type='float[]'/></method><method api_added='3' name='getOrientation' static='true' return='float[]'><parameter name='R' type='float[]'/><parameter name='values' type='float[]'/></method><method api_added='3' name='getRotationMatrix' static='true' return='boolean'><parameter name='R' type='float[]'/><parameter name='I' type='float[]'/><parameter name='gravity' type='float[]'/><parameter name='geomagnetic' type='float[]'/></method><method api_added='3' name='getSensorList' return='java.util.List&lt;android.hardware.Sensor&gt;'><parameter name='type' type='int'/></method><method api_added='3' name='registerListener' return='boolean'><parameter name='listener' type='android.hardware.SensorEventListener'/><parameter name='sensor' type='android.hardware.Sensor'/><parameter name='rate' type='int'/></method><method api_added='3' name='registerListener' return='boolean'><parameter name='listener' type='android.hardware.SensorEventListener'/><parameter name='sensor' type='android.hardware.Sensor'/><parameter name='rate' type='int'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='3' name='remapCoordinateSystem' static='true' return='boolean'><parameter name='inR' type='float[]'/><parameter name='X' type='int'/><parameter name='Y' type='int'/><parameter name='outR' type='float[]'/></method><method api_added='3' name='unregisterListener'><parameter name='listener' type='android.hardware.SensorEventListener'/><parameter name='sensor' type='android.hardware.Sensor'/></method><method api_added='3' name='unregisterListener'><parameter name='listener' type='android.hardware.SensorEventListener'/></method></class><class api_added='3' name='GeomagneticField' extends='java.lang.Object'><constructor api_added='3' name='GeomagneticField' type='android.hardware.GeomagneticField'><parameter name='gdLatitudeDeg' type='float'/><parameter name='gdLongitudeDeg' type='float'/><parameter name='altitudeMeters' type='float'/><parameter name='timeMillis' type='long'/></constructor><method api_added='3' name='getDeclination' return='float'/><method api_added='3' name='getFieldStrength' return='float'/><method api_added='3' name='getHorizontalStrength' return='float'/><method api_added='3' name='getInclination' return='float'/><method api_added='3' name='getX' return='float'/><method api_added='3' name='getY' return='float'/><method api_added='3' name='getZ' return='float'/></class><class api_added='3' name='Sensor' extends='java.lang.Object'><field api_added='3' name='TYPE_ACCELEROMETER' final='true' static='true' value='1' type='int'/><field api_added='3' name='TYPE_ALL' final='true' static='true' value='-1' type='int'/><field api_added='3' name='TYPE_GYROSCOPE' final='true' static='true' value='4' type='int'/><field api_added='3' name='TYPE_LIGHT' final='true' static='true' value='5' type='int'/><field api_added='3' name='TYPE_MAGNETIC_FIELD' final='true' static='true' value='2' type='int'/><field api_added='3' name='TYPE_ORIENTATION' final='true' static='true' value='3' type='int' deprecated='8'/><field api_added='3' name='TYPE_PRESSURE' final='true' static='true' value='6' type='int'/><field api_added='3' name='TYPE_PROXIMITY' final='true' static='true' value='8' type='int'/><field api_added='3' name='TYPE_TEMPERATURE' final='true' static='true' value='7' type='int'/><method api_added='3' name='getMaximumRange' return='float'/><method api_added='3' name='getName' return='java.lang.String'/><method api_added='3' name='getPower' return='float'/><method api_added='3' name='getResolution' return='float'/><method api_added='3' name='getType' return='int'/><method api_added='3' name='getVendor' return='java.lang.String'/><method api_added='3' name='getVersion' return='int'/></class><class api_added='3' name='SensorEvent' extends='java.lang.Object'><field api_added='3' name='accuracy' type='int'/><field api_added='3' name='sensor' type='android.hardware.Sensor'/><field api_added='3' name='timestamp' type='long'/><field api_added='3' name='values' final='true' value='null' type='float[]'/></class><interface name='Camera.AutoFocusCallback' abstract='true' static='true'><method name='onAutoFocus' abstract='true'><parameter name='success' type='boolean'/><parameter name='camera' type='android.hardware.Camera'/></method></interface><interface name='Camera.ErrorCallback' abstract='true' static='true'><method name='onError' abstract='true'><parameter name='error' type='int'/><parameter name='camera' type='android.hardware.Camera'/></method></interface><interface name='Camera.PictureCallback' abstract='true' static='true'><method name='onPictureTaken' abstract='true'><parameter name='data' type='byte[]'/><parameter name='camera' type='android.hardware.Camera'/></method></interface><interface name='Camera.PreviewCallback' abstract='true' static='true'><method name='onPreviewFrame' abstract='true'><parameter name='data' type='byte[]'/><parameter name='camera' type='android.hardware.Camera'/></method></interface><interface name='Camera.ShutterCallback' abstract='true' static='true'><method name='onShutter' abstract='true'/></interface><interface name='SensorListener' abstract='true' deprecated='3'><method name='onAccuracyChanged' abstract='true'><parameter name='sensor' type='int'/><parameter name='accuracy' type='int'/></method><method name='onSensorChanged' abstract='true'><parameter name='sensor' type='int'/><parameter name='values' type='float[]'/></method></interface><interface api_added='3' name='SensorEventListener' abstract='true'><method api_added='3' name='onAccuracyChanged' abstract='true'><parameter name='sensor' type='android.hardware.Sensor'/><parameter name='accuracy' type='int'/></method><method api_added='3' name='onSensorChanged' abstract='true'><parameter name='event' type='android.hardware.SensorEvent'/></method></interface><interface api_added='8' name='Camera.OnZoomChangeListener' abstract='true' static='true'><method api_added='8' name='onZoomChange' abstract='true'><parameter name='zoomValue' type='int'/><parameter name='stopped' type='boolean'/><parameter name='camera' type='android.hardware.Camera'/></method></interface></package><package name='android.location'><class name='Address' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Address' type='android.location.Address'><parameter name='locale' type='java.util.Locale'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='clearLatitude'/><method name='clearLongitude'/><method name='describeContents' return='int'/><method name='getAddressLine' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAdminArea' return='java.lang.String'/><method name='getCountryCode' return='java.lang.String'/><method name='getCountryName' return='java.lang.String'/><method name='getExtras' return='android.os.Bundle'/><method name='getFeatureName' return='java.lang.String'/><method name='getLatitude' return='double'/><method name='getLocale' return='java.util.Locale'/><method name='getLocality' return='java.lang.String'/><method name='getLongitude' return='double'/><method name='getMaxAddressLineIndex' return='int'/><method name='getPhone' return='java.lang.String'/><method name='getPostalCode' return='java.lang.String'/><method name='getSubAdminArea' return='java.lang.String'/><method name='getThoroughfare' return='java.lang.String'/><method name='getUrl' return='java.lang.String'/><method name='hasLatitude' return='boolean'/><method name='hasLongitude' return='boolean'/><method name='setAddressLine'><parameter name='index' type='int'/><parameter name='line' type='java.lang.String'/></method><method name='setAdminArea'><parameter name='adminArea' type='java.lang.String'/></method><method name='setCountryCode'><parameter name='countryCode' type='java.lang.String'/></method><method name='setCountryName'><parameter name='countryName' type='java.lang.String'/></method><method name='setExtras'><parameter name='extras' type='android.os.Bundle'/></method><method name='setFeatureName'><parameter name='featureName' type='java.lang.String'/></method><method name='setLatitude'><parameter name='latitude' type='double'/></method><method name='setLocality'><parameter name='locality' type='java.lang.String'/></method><method name='setLongitude'><parameter name='longitude' type='double'/></method><method name='setPhone'><parameter name='phone' type='java.lang.String'/></method><method name='setPostalCode'><parameter name='postalCode' type='java.lang.String'/></method><method name='setSubAdminArea'><parameter name='subAdminArea' type='java.lang.String'/></method><method name='setThoroughfare'><parameter name='thoroughfare' type='java.lang.String'/></method><method name='setUrl'><parameter name='Url' type='java.lang.String'/></method><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='4' name='getPremises' return='java.lang.String'/><method api_added='4' name='getSubLocality' return='java.lang.String'/><method api_added='4' name='getSubThoroughfare' return='java.lang.String'/><method api_added='4' name='setPremises'><parameter name='premises' type='java.lang.String'/></method><method api_added='4' name='setSubLocality'><parameter name='sublocality' type='java.lang.String'/></method><method api_added='4' name='setSubThoroughfare'><parameter name='subthoroughfare' type='java.lang.String'/></method></class><class name='Criteria' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Criteria' type='android.location.Criteria'/><constructor name='Criteria' type='android.location.Criteria'><parameter name='criteria' type='android.location.Criteria'/></constructor><field name='ACCURACY_COARSE' final='true' static='true' value='2' type='int'/><field name='ACCURACY_FINE' final='true' static='true' value='1' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='NO_REQUIREMENT' final='true' static='true' value='0' type='int'/><field name='POWER_HIGH' final='true' static='true' value='3' type='int'/><field name='POWER_LOW' final='true' static='true' value='1' type='int'/><field name='POWER_MEDIUM' final='true' static='true' value='2' type='int'/><method name='describeContents' return='int'/><method name='getAccuracy' return='int'/><method name='getPowerRequirement' return='int'/><method name='isAltitudeRequired' return='boolean'/><method name='isBearingRequired' return='boolean'/><method name='isCostAllowed' return='boolean'/><method name='isSpeedRequired' return='boolean'/><method name='setAccuracy'><parameter name='accuracy' type='int'/></method><method name='setAltitudeRequired'><parameter name='altitudeRequired' type='boolean'/></method><method name='setBearingRequired'><parameter name='bearingRequired' type='boolean'/></method><method name='setCostAllowed'><parameter name='costAllowed' type='boolean'/></method><method name='setPowerRequirement'><parameter name='level' type='int'/></method><method name='setSpeedRequired'><parameter name='speedRequired' type='boolean'/></method><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Geocoder' final='true' extends='java.lang.Object'><constructor name='Geocoder' type='android.location.Geocoder'><parameter name='context' type='android.content.Context'/><parameter name='locale' type='java.util.Locale'/></constructor><constructor name='Geocoder' type='android.location.Geocoder'><parameter name='context' type='android.content.Context'/></constructor><method name='getFromLocation' return='java.util.List&lt;android.location.Address&gt;'><parameter name='latitude' type='double'/><parameter name='longitude' type='double'/><parameter name='maxResults' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getFromLocationName' return='java.util.List&lt;android.location.Address&gt;'><parameter name='locationName' type='java.lang.String'/><parameter name='maxResults' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getFromLocationName' return='java.util.List&lt;android.location.Address&gt;'><parameter name='locationName' type='java.lang.String'/><parameter name='maxResults' type='int'/><parameter name='lowerLeftLatitude' type='double'/><parameter name='lowerLeftLongitude' type='double'/><parameter name='upperRightLatitude' type='double'/><parameter name='upperRightLongitude' type='double'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='Location' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Location' type='android.location.Location'><parameter name='provider' type='java.lang.String'/></constructor><constructor name='Location' type='android.location.Location'><parameter name='l' type='android.location.Location'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FORMAT_DEGREES' final='true' static='true' value='0' type='int'/><field name='FORMAT_MINUTES' final='true' static='true' value='1' type='int'/><field name='FORMAT_SECONDS' final='true' static='true' value='2' type='int'/><method name='bearingTo' return='float'><parameter name='dest' type='android.location.Location'/></method><method name='convert' static='true' return='java.lang.String'><parameter name='coordinate' type='double'/><parameter name='outputType' type='int'/></method><method name='convert' static='true' return='double'><parameter name='coordinate' type='java.lang.String'/></method><method name='describeContents' return='int'/><method name='distanceBetween' static='true'><parameter name='startLatitude' type='double'/><parameter name='startLongitude' type='double'/><parameter name='endLatitude' type='double'/><parameter name='endLongitude' type='double'/><parameter name='results' type='float[]'/></method><method name='distanceTo' return='float'><parameter name='dest' type='android.location.Location'/></method><method name='getAccuracy' return='float'/><method name='getAltitude' return='double'/><method name='getBearing' return='float'/><method name='getExtras' return='android.os.Bundle'/><method name='getLatitude' return='double'/><method name='getLongitude' return='double'/><method name='getProvider' return='java.lang.String'/><method name='getSpeed' return='float'/><method name='getTime' return='long'/><method name='hasAccuracy' return='boolean'/><method name='hasAltitude' return='boolean'/><method name='hasBearing' return='boolean'/><method name='hasSpeed' return='boolean'/><method name='removeAccuracy'/><method name='removeAltitude'/><method name='removeBearing'/><method name='removeSpeed'/><method name='reset'/><method name='set'><parameter name='l' type='android.location.Location'/></method><method name='setAccuracy'><parameter name='accuracy' type='float'/></method><method name='setAltitude'><parameter name='altitude' type='double'/></method><method name='setBearing'><parameter name='bearing' type='float'/></method><method name='setExtras'><parameter name='extras' type='android.os.Bundle'/></method><method name='setLatitude'><parameter name='latitude' type='double'/></method><method name='setLongitude'><parameter name='longitude' type='double'/></method><method name='setProvider'><parameter name='provider' type='java.lang.String'/></method><method name='setSpeed'><parameter name='speed' type='float'/></method><method name='setTime'><parameter name='time' type='long'/></method><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method></class><class name='LocationManager' extends='java.lang.Object'><field name='GPS_PROVIDER' final='true' static='true' value='&quot;gps&quot;' type='java.lang.String'/><field name='KEY_PROXIMITY_ENTERING' final='true' static='true' value='&quot;entering&quot;' type='java.lang.String'/><field name='NETWORK_PROVIDER' final='true' static='true' value='&quot;network&quot;' type='java.lang.String'/><field api_added='3' name='KEY_LOCATION_CHANGED' final='true' static='true' value='&quot;location&quot;' type='java.lang.String'/><field api_added='3' name='KEY_PROVIDER_ENABLED' final='true' static='true' value='&quot;providerEnabled&quot;' type='java.lang.String'/><field api_added='3' name='KEY_STATUS_CHANGED' final='true' static='true' value='&quot;status&quot;' type='java.lang.String'/><field api_added='8' name='PASSIVE_PROVIDER' final='true' static='true' value='&quot;passive&quot;' type='java.lang.String'/><method name='addProximityAlert'><parameter name='latitude' type='double'/><parameter name='longitude' type='double'/><parameter name='radius' type='float'/><parameter name='expiration' type='long'/><parameter name='intent' type='android.app.PendingIntent'/></method><method name='getAllProviders' return='java.util.List&lt;java.lang.String&gt;'/><method name='getBestProvider' return='java.lang.String'><parameter name='criteria' type='android.location.Criteria'/><parameter name='enabledOnly' type='boolean'/></method><method name='getLastKnownLocation' return='android.location.Location'><parameter name='provider' type='java.lang.String'/></method><method name='getProvider' return='android.location.LocationProvider'><parameter name='name' type='java.lang.String'/></method><method name='getProviders' return='java.util.List&lt;java.lang.String&gt;'><parameter name='enabledOnly' type='boolean'/></method><method name='getProviders' return='java.util.List&lt;java.lang.String&gt;'><parameter name='criteria' type='android.location.Criteria'/><parameter name='enabledOnly' type='boolean'/></method><method name='isProviderEnabled' return='boolean'><parameter name='provider' type='java.lang.String'/></method><method name='removeProximityAlert'><parameter name='intent' type='android.app.PendingIntent'/></method><method name='removeUpdates'><parameter name='listener' type='android.location.LocationListener'/></method><method name='requestLocationUpdates'><parameter name='provider' type='java.lang.String'/><parameter name='minTime' type='long'/><parameter name='minDistance' type='float'/><parameter name='listener' type='android.location.LocationListener'/></method><method name='requestLocationUpdates'><parameter name='provider' type='java.lang.String'/><parameter name='minTime' type='long'/><parameter name='minDistance' type='float'/><parameter name='listener' type='android.location.LocationListener'/><parameter name='looper' type='android.os.Looper'/></method><method api_added='3' name='addGpsStatusListener' return='boolean'><parameter name='listener' type='android.location.GpsStatus.Listener'/></method><method api_added='3' name='addTestProvider'><parameter name='name' type='java.lang.String'/><parameter name='requiresNetwork' type='boolean'/><parameter name='requiresSatellite' type='boolean'/><parameter name='requiresCell' type='boolean'/><parameter name='hasMonetaryCost' type='boolean'/><parameter name='supportsAltitude' type='boolean'/><parameter name='supportsSpeed' type='boolean'/><parameter name='supportsBearing' type='boolean'/><parameter name='powerRequirement' type='int'/><parameter name='accuracy' type='int'/></method><method api_added='3' name='clearTestProviderEnabled'><parameter name='provider' type='java.lang.String'/></method><method api_added='3' name='clearTestProviderLocation'><parameter name='provider' type='java.lang.String'/></method><method api_added='3' name='clearTestProviderStatus'><parameter name='provider' type='java.lang.String'/></method><method api_added='3' name='getGpsStatus' return='android.location.GpsStatus'><parameter name='status' type='android.location.GpsStatus'/></method><method api_added='3' name='removeGpsStatusListener'><parameter name='listener' type='android.location.GpsStatus.Listener'/></method><method api_added='3' name='removeTestProvider'><parameter name='provider' type='java.lang.String'/></method><method api_added='3' name='removeUpdates'><parameter name='intent' type='android.app.PendingIntent'/></method><method api_added='3' name='requestLocationUpdates'><parameter name='provider' type='java.lang.String'/><parameter name='minTime' type='long'/><parameter name='minDistance' type='float'/><parameter name='intent' type='android.app.PendingIntent'/></method><method api_added='3' name='sendExtraCommand' return='boolean'><parameter name='provider' type='java.lang.String'/><parameter name='command' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/></method><method api_added='3' name='setTestProviderEnabled'><parameter name='provider' type='java.lang.String'/><parameter name='enabled' type='boolean'/></method><method api_added='3' name='setTestProviderLocation'><parameter name='provider' type='java.lang.String'/><parameter name='loc' type='android.location.Location'/></method><method api_added='3' name='setTestProviderStatus'><parameter name='provider' type='java.lang.String'/><parameter name='status' type='int'/><parameter name='extras' type='android.os.Bundle'/><parameter name='updateTime' type='long'/></method><method api_added='5' name='addNmeaListener' return='boolean'><parameter name='listener' type='android.location.GpsStatus.NmeaListener'/></method><method api_added='5' name='removeNmeaListener'><parameter name='listener' type='android.location.GpsStatus.NmeaListener'/></method></class><class name='LocationProvider' extends='java.lang.Object' abstract='true'><field name='AVAILABLE' final='true' static='true' value='2' type='int'/><field name='OUT_OF_SERVICE' final='true' static='true' value='0' type='int'/><field name='TEMPORARILY_UNAVAILABLE' final='true' static='true' value='1' type='int'/><method name='getAccuracy' abstract='true' return='int'/><method name='getName' return='java.lang.String'/><method name='getPowerRequirement' abstract='true' return='int'/><method name='hasMonetaryCost' abstract='true' return='boolean'/><method name='meetsCriteria' return='boolean'><parameter name='criteria' type='android.location.Criteria'/></method><method name='requiresCell' abstract='true' return='boolean'/><method name='requiresNetwork' abstract='true' return='boolean'/><method name='requiresSatellite' abstract='true' return='boolean'/><method name='supportsAltitude' abstract='true' return='boolean'/><method name='supportsBearing' abstract='true' return='boolean'/><method name='supportsSpeed' abstract='true' return='boolean'/></class><class api_added='3' name='GpsSatellite' final='true' extends='java.lang.Object'><method api_added='3' name='getAzimuth' return='float'/><method api_added='3' name='getElevation' return='float'/><method api_added='3' name='getPrn' return='int'/><method api_added='3' name='getSnr' return='float'/><method api_added='3' name='hasAlmanac' return='boolean'/><method api_added='3' name='hasEphemeris' return='boolean'/><method api_added='3' name='usedInFix' return='boolean'/></class><class api_added='3' name='GpsStatus' final='true' extends='java.lang.Object'><field api_added='3' name='GPS_EVENT_FIRST_FIX' final='true' static='true' value='3' type='int'/><field api_added='3' name='GPS_EVENT_SATELLITE_STATUS' final='true' static='true' value='4' type='int'/><field api_added='3' name='GPS_EVENT_STARTED' final='true' static='true' value='1' type='int'/><field api_added='3' name='GPS_EVENT_STOPPED' final='true' static='true' value='2' type='int'/><method api_added='3' name='getMaxSatellites' return='int'/><method api_added='3' name='getSatellites' return='java.lang.Iterable&lt;android.location.GpsSatellite&gt;'/><method api_added='3' name='getTimeToFirstFix' return='int'/></class><interface name='LocationListener' abstract='true'><method name='onLocationChanged' abstract='true'><parameter name='location' type='android.location.Location'/></method><method name='onProviderDisabled' abstract='true'><parameter name='provider' type='java.lang.String'/></method><method name='onProviderEnabled' abstract='true'><parameter name='provider' type='java.lang.String'/></method><method name='onStatusChanged' abstract='true'><parameter name='provider' type='java.lang.String'/><parameter name='status' type='int'/><parameter name='extras' type='android.os.Bundle'/></method></interface><interface api_added='3' name='GpsStatus.Listener' abstract='true' static='true'><method api_added='3' name='onGpsStatusChanged' abstract='true'><parameter name='event' type='int'/></method></interface><interface api_added='5' name='GpsStatus.NmeaListener' abstract='true' static='true'><method api_added='5' name='onNmeaReceived' abstract='true'><parameter name='timestamp' type='long'/><parameter name='nmea' type='java.lang.String'/></method></interface></package><package name='android.media'><class name='AsyncPlayer' extends='java.lang.Object'><constructor name='AsyncPlayer' type='android.media.AsyncPlayer'><parameter name='tag' type='java.lang.String'/></constructor><method name='play'><parameter name='context' type='android.content.Context'/><parameter name='uri' type='android.net.Uri'/><parameter name='looping' type='boolean'/><parameter name='stream' type='int'/></method><method name='stop'/></class><class name='AudioManager' extends='java.lang.Object'><field name='ADJUST_LOWER' final='true' static='true' value='-1' type='int'/><field name='ADJUST_RAISE' final='true' static='true' value='1' type='int'/><field name='ADJUST_SAME' final='true' static='true' value='0' type='int'/><field name='EXTRA_RINGER_MODE' final='true' static='true' value='&quot;android.media.EXTRA_RINGER_MODE&quot;' type='java.lang.String'/><field name='EXTRA_VIBRATE_SETTING' final='true' static='true' value='&quot;android.media.EXTRA_VIBRATE_SETTING&quot;' type='java.lang.String'/><field name='EXTRA_VIBRATE_TYPE' final='true' static='true' value='&quot;android.media.EXTRA_VIBRATE_TYPE&quot;' type='java.lang.String'/><field name='FLAG_ALLOW_RINGER_MODES' final='true' static='true' value='2' type='int'/><field name='FLAG_PLAY_SOUND' final='true' static='true' value='4' type='int'/><field name='FLAG_REMOVE_SOUND_AND_VIBRATE' final='true' static='true' value='8' type='int'/><field name='FLAG_SHOW_UI' final='true' static='true' value='1' type='int'/><field name='FLAG_VIBRATE' final='true' static='true' value='16' type='int'/><field name='FX_FOCUS_NAVIGATION_DOWN' final='true' static='true' value='2' type='int'/><field name='FX_FOCUS_NAVIGATION_LEFT' final='true' static='true' value='3' type='int'/><field name='FX_FOCUS_NAVIGATION_RIGHT' final='true' static='true' value='4' type='int'/><field name='FX_FOCUS_NAVIGATION_UP' final='true' static='true' value='1' type='int'/><field name='FX_KEY_CLICK' final='true' static='true' value='0' type='int'/><field name='MODE_CURRENT' final='true' static='true' value='-1' type='int'/><field name='MODE_INVALID' final='true' static='true' value='-2' type='int'/><field name='MODE_IN_CALL' final='true' static='true' value='2' type='int'/><field name='MODE_NORMAL' final='true' static='true' value='0' type='int'/><field name='MODE_RINGTONE' final='true' static='true' value='1' type='int'/><field name='NUM_STREAMS' final='true' static='true' value='5' type='int' deprecated='3'/><field name='RINGER_MODE_CHANGED_ACTION' final='true' static='true' value='&quot;android.media.RINGER_MODE_CHANGED&quot;' type='java.lang.String'/><field name='RINGER_MODE_NORMAL' final='true' static='true' value='2' type='int'/><field name='RINGER_MODE_SILENT' final='true' static='true' value='0' type='int'/><field name='RINGER_MODE_VIBRATE' final='true' static='true' value='1' type='int'/><field name='ROUTE_ALL' final='true' static='true' value='-1' type='int' deprecated='5'/><field name='ROUTE_BLUETOOTH' final='true' static='true' value='4' type='int' deprecated='3'/><field name='ROUTE_EARPIECE' final='true' static='true' value='1' type='int' deprecated='5'/><field name='ROUTE_HEADSET' final='true' static='true' value='8' type='int' deprecated='5'/><field name='ROUTE_SPEAKER' final='true' static='true' value='2' type='int' deprecated='5'/><field name='STREAM_ALARM' final='true' static='true' value='4' type='int'/><field name='STREAM_MUSIC' final='true' static='true' value='3' type='int'/><field name='STREAM_RING' final='true' static='true' value='2' type='int'/><field name='STREAM_SYSTEM' final='true' static='true' value='1' type='int'/><field name='STREAM_VOICE_CALL' final='true' static='true' value='0' type='int'/><field name='USE_DEFAULT_STREAM_TYPE' final='true' static='true' value='-2147483648' type='int'/><field name='VIBRATE_SETTING_CHANGED_ACTION' final='true' static='true' value='&quot;android.media.VIBRATE_SETTING_CHANGED&quot;' type='java.lang.String'/><field name='VIBRATE_SETTING_OFF' final='true' static='true' value='0' type='int'/><field name='VIBRATE_SETTING_ON' final='true' static='true' value='1' type='int'/><field name='VIBRATE_SETTING_ONLY_SILENT' final='true' static='true' value='2' type='int'/><field name='VIBRATE_TYPE_NOTIFICATION' final='true' static='true' value='1' type='int'/><field name='VIBRATE_TYPE_RINGER' final='true' static='true' value='0' type='int'/><field api_added='3' name='ACTION_AUDIO_BECOMING_NOISY' final='true' static='true' value='&quot;android.media.AUDIO_BECOMING_NOISY&quot;' type='java.lang.String'/><field api_added='3' name='FX_KEYPRESS_DELETE' final='true' static='true' value='7' type='int'/><field api_added='3' name='FX_KEYPRESS_RETURN' final='true' static='true' value='8' type='int'/><field api_added='3' name='FX_KEYPRESS_SPACEBAR' final='true' static='true' value='6' type='int'/><field api_added='3' name='FX_KEYPRESS_STANDARD' final='true' static='true' value='5' type='int'/><field api_added='3' name='ROUTE_BLUETOOTH_A2DP' final='true' static='true' value='16' type='int' deprecated='5'/><field api_added='3' name='ROUTE_BLUETOOTH_SCO' final='true' static='true' value='4' type='int' deprecated='5'/><field api_added='3' name='STREAM_NOTIFICATION' final='true' static='true' value='5' type='int'/><field api_added='5' name='STREAM_DTMF' final='true' static='true' value='8' type='int'/><field api_added='8' name='ACTION_SCO_AUDIO_STATE_CHANGED' final='true' static='true' value='&quot;android.media.SCO_AUDIO_STATE_CHANGED&quot;' type='java.lang.String'/><field api_added='8' name='AUDIOFOCUS_GAIN' final='true' static='true' value='1' type='int'/><field api_added='8' name='AUDIOFOCUS_GAIN_TRANSIENT' final='true' static='true' value='2' type='int'/><field api_added='8' name='AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK' final='true' static='true' value='3' type='int'/><field api_added='8' name='AUDIOFOCUS_LOSS' final='true' static='true' value='-1' type='int'/><field api_added='8' name='AUDIOFOCUS_LOSS_TRANSIENT' final='true' static='true' value='-2' type='int'/><field api_added='8' name='AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK' final='true' static='true' value='-3' type='int'/><field api_added='8' name='AUDIOFOCUS_REQUEST_FAILED' final='true' static='true' value='0' type='int'/><field api_added='8' name='AUDIOFOCUS_REQUEST_GRANTED' final='true' static='true' value='1' type='int'/><field api_added='8' name='EXTRA_SCO_AUDIO_STATE' final='true' static='true' value='&quot;android.media.extra.SCO_AUDIO_STATE&quot;' type='java.lang.String'/><field api_added='8' name='SCO_AUDIO_STATE_CONNECTED' final='true' static='true' value='1' type='int'/><field api_added='8' name='SCO_AUDIO_STATE_DISCONNECTED' final='true' static='true' value='0' type='int'/><field api_added='8' name='SCO_AUDIO_STATE_ERROR' final='true' static='true' value='-1' type='int'/><method name='adjustStreamVolume'><parameter name='streamType' type='int'/><parameter name='direction' type='int'/><parameter name='flags' type='int'/></method><method name='adjustSuggestedStreamVolume'><parameter name='direction' type='int'/><parameter name='suggestedStreamType' type='int'/><parameter name='flags' type='int'/></method><method name='adjustVolume'><parameter name='direction' type='int'/><parameter name='flags' type='int'/></method><method name='getMode' return='int'/><method name='getRingerMode' return='int'/><method name='getRouting' deprecated='4' return='int'><parameter name='mode' type='int'/></method><method name='getStreamMaxVolume' return='int'><parameter name='streamType' type='int'/></method><method name='getStreamVolume' return='int'><parameter name='streamType' type='int'/></method><method name='getVibrateSetting' return='int'><parameter name='vibrateType' type='int'/></method><method name='isBluetoothScoOn' return='boolean'/><method name='isMicrophoneMute' return='boolean'/><method name='isMusicActive' return='boolean'/><method name='isSpeakerphoneOn' return='boolean'/><method name='loadSoundEffects'/><method name='playSoundEffect'><parameter name='effectType' type='int'/></method><method name='setBluetoothScoOn'><parameter name='on' type='boolean'/></method><method name='setMicrophoneMute'><parameter name='on' type='boolean'/></method><method name='setMode'><parameter name='mode' type='int'/></method><method name='setRingerMode'><parameter name='ringerMode' type='int'/></method><method name='setRouting' deprecated='4'><parameter name='mode' type='int'/><parameter name='routes' type='int'/><parameter name='mask' type='int'/></method><method name='setSpeakerphoneOn'><parameter name='on' type='boolean'/></method><method name='setStreamMute'><parameter name='streamType' type='int'/><parameter name='state' type='boolean'/></method><method name='setStreamSolo'><parameter name='streamType' type='int'/><parameter name='state' type='boolean'/></method><method name='setStreamVolume'><parameter name='streamType' type='int'/><parameter name='index' type='int'/><parameter name='flags' type='int'/></method><method name='setVibrateSetting'><parameter name='vibrateType' type='int'/><parameter name='vibrateSetting' type='int'/></method><method name='shouldVibrate' return='boolean'><parameter name='vibrateType' type='int'/></method><method name='unloadSoundEffects'/><method api_added='3' name='isBluetoothA2dpOn' return='boolean'/><method api_added='3' name='playSoundEffect'><parameter name='effectType' type='int'/><parameter name='volume' type='float'/></method><method api_added='3' name='setBluetoothA2dpOn' deprecated='5'><parameter name='on' type='boolean'/></method><method api_added='5' name='getParameters' return='java.lang.String'><parameter name='keys' type='java.lang.String'/></method><method api_added='5' name='isWiredHeadsetOn' return='boolean'/><method api_added='5' name='setParameters'><parameter name='keyValuePairs' type='java.lang.String'/></method><method api_added='5' name='setWiredHeadsetOn' deprecated='5'><parameter name='on' type='boolean'/></method><method api_added='8' name='abandonAudioFocus' return='int'><parameter name='l' type='android.media.AudioManager.OnAudioFocusChangeListener'/></method><method api_added='8' name='isBluetoothScoAvailableOffCall' return='boolean'/><method api_added='8' name='registerMediaButtonEventReceiver'><parameter name='eventReceiver' type='android.content.ComponentName'/></method><method api_added='8' name='requestAudioFocus' return='int'><parameter name='l' type='android.media.AudioManager.OnAudioFocusChangeListener'/><parameter name='streamType' type='int'/><parameter name='durationHint' type='int'/></method><method api_added='8' name='startBluetoothSco'/><method api_added='8' name='stopBluetoothSco'/><method api_added='8' name='unregisterMediaButtonEventReceiver'><parameter name='eventReceiver' type='android.content.ComponentName'/></method></class><class name='FaceDetector' extends='java.lang.Object'><constructor name='FaceDetector' type='android.media.FaceDetector'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='maxFaces' type='int'/></constructor><method name='findFaces' return='int'><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='faces' type='android.media.FaceDetector.Face[]'/></method></class><class name='FaceDetector.Face' extends='java.lang.Object'><field name='CONFIDENCE_THRESHOLD' final='true' static='true' value='0.4f' type='float'/><field name='EULER_X' final='true' static='true' value='0' type='int'/><field name='EULER_Y' final='true' static='true' value='1' type='int'/><field name='EULER_Z' final='true' static='true' value='2' type='int'/><method name='confidence' return='float'/><method name='eyesDistance' return='float'/><method name='getMidPoint'><parameter name='point' type='android.graphics.PointF'/></method><method name='pose' return='float'><parameter name='euler' type='int'/></method></class><class name='MediaPlayer' extends='java.lang.Object'><constructor name='MediaPlayer' type='android.media.MediaPlayer'/><field name='MEDIA_ERROR_SERVER_DIED' final='true' static='true' value='100' type='int'/><field name='MEDIA_ERROR_UNKNOWN' final='true' static='true' value='1' type='int'/><field api_added='3' name='MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK' final='true' static='true' value='200' type='int'/><field api_added='3' name='MEDIA_INFO_BAD_INTERLEAVING' final='true' static='true' value='800' type='int'/><field api_added='3' name='MEDIA_INFO_NOT_SEEKABLE' final='true' static='true' value='801' type='int'/><field api_added='3' name='MEDIA_INFO_UNKNOWN' final='true' static='true' value='1' type='int'/><field api_added='3' name='MEDIA_INFO_VIDEO_TRACK_LAGGING' final='true' static='true' value='700' type='int'/><field api_added='5' name='MEDIA_INFO_METADATA_UPDATE' final='true' static='true' value='802' type='int'/><method name='create' static='true' return='android.media.MediaPlayer'><parameter name='context' type='android.content.Context'/><parameter name='uri' type='android.net.Uri'/></method><method name='create' static='true' return='android.media.MediaPlayer'><parameter name='context' type='android.content.Context'/><parameter name='uri' type='android.net.Uri'/><parameter name='holder' type='android.view.SurfaceHolder'/></method><method name='create' static='true' return='android.media.MediaPlayer'><parameter name='context' type='android.content.Context'/><parameter name='resid' type='int'/></method><method name='getCurrentPosition' native='true' return='int'/><method name='getDuration' native='true' return='int'/><method name='getVideoHeight' native='true' return='int'/><method name='getVideoWidth' native='true' return='int'/><method name='isPlaying' native='true' return='boolean'/><method name='pause'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='prepare' native='true'><exception name='IOException' type='java.io.IOException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='prepareAsync' native='true'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='release'/><method name='reset'/><method name='seekTo' native='true'><parameter name='msec' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setAudioStreamType' native='true'><parameter name='streamtype' type='int'/></method><method name='setDataSource'><parameter name='context' type='android.content.Context'/><parameter name='uri' type='android.net.Uri'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='setDataSource' native='true'><parameter name='path' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setDataSource'><parameter name='fd' type='java.io.FileDescriptor'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setDataSource' native='true'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='offset' type='long'/><parameter name='length' type='long'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setDisplay'><parameter name='sh' type='android.view.SurfaceHolder'/></method><method name='setLooping' native='true'><parameter name='looping' type='boolean'/></method><method name='setOnBufferingUpdateListener' api_removed='4'><parameter name='l' type='android.media.MediaPlayer.OnBufferingUpdateListener'/><parameter name='listener' type='android.media.MediaPlayer.OnBufferingUpdateListener'/></method><method name='setOnCompletionListener' api_removed='4'><parameter name='l' type='android.media.MediaPlayer.OnCompletionListener'/><parameter name='listener' type='android.media.MediaPlayer.OnCompletionListener'/></method><method name='setOnErrorListener' api_removed='4'><parameter name='l' type='android.media.MediaPlayer.OnErrorListener'/><parameter name='listener' type='android.media.MediaPlayer.OnErrorListener'/></method><method name='setOnPreparedListener' api_removed='4'><parameter name='l' type='android.media.MediaPlayer.OnPreparedListener'/><parameter name='listener' type='android.media.MediaPlayer.OnPreparedListener'/></method><method name='setOnSeekCompleteListener' api_removed='4'><parameter name='l' type='android.media.MediaPlayer.OnSeekCompleteListener'/><parameter name='listener' type='android.media.MediaPlayer.OnSeekCompleteListener'/></method><method name='setScreenOnWhilePlaying'><parameter name='screenOn' type='boolean'/></method><method name='setVolume' native='true'><parameter name='leftVolume' type='float'/><parameter name='rightVolume' type='float'/></method><method name='setWakeMode'><parameter name='context' type='android.content.Context'/><parameter name='mode' type='int'/></method><method name='start'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='stop'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='isLooping' native='true' return='boolean'/><method api_added='3' name='setOnInfoListener'><parameter name='listener' type='android.media.MediaPlayer.OnInfoListener'/></method><method api_added='3' name='setOnVideoSizeChangedListener'><parameter name='listener' type='android.media.MediaPlayer.OnVideoSizeChangedListener'/></method><method api_added='4' name='setOnBufferingUpdateListener'><parameter name='listener' type='android.media.MediaPlayer.OnBufferingUpdateListener'/></method><method api_added='4' name='setOnCompletionListener'><parameter name='listener' type='android.media.MediaPlayer.OnCompletionListener'/></method><method api_added='4' name='setOnErrorListener'><parameter name='listener' type='android.media.MediaPlayer.OnErrorListener'/></method><method api_added='4' name='setOnPreparedListener'><parameter name='listener' type='android.media.MediaPlayer.OnPreparedListener'/></method><method api_added='4' name='setOnSeekCompleteListener'><parameter name='listener' type='android.media.MediaPlayer.OnSeekCompleteListener'/></method></class><class name='MediaRecorder' extends='java.lang.Object'><constructor name='MediaRecorder' type='android.media.MediaRecorder'/><field api_added='3' name='MEDIA_RECORDER_ERROR_UNKNOWN' final='true' static='true' value='1' type='int'/><field api_added='3' name='MEDIA_RECORDER_INFO_MAX_DURATION_REACHED' final='true' static='true' value='800' type='int'/><field api_added='3' name='MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED' final='true' static='true' value='801' type='int'/><field api_added='3' name='MEDIA_RECORDER_INFO_UNKNOWN' final='true' static='true' value='1' type='int'/><method name='getMaxAmplitude' native='true' return='int'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='prepare' native='true'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='IOException' type='java.io.IOException'/></method><method name='release' native='true'/><method name='reset' native='true'/><method name='setAudioEncoder' native='true'><parameter name='audio_encoder' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setAudioSource' native='true'><parameter name='audio_source' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setOutputFile' native='true'><parameter name='path' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setOutputFormat' native='true'><parameter name='output_format' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setPreviewDisplay'><parameter name='sv' type='android.view.Surface'/></method><method name='start' native='true'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='stop' native='true'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='setCamera' native='true'><parameter name='c' type='android.hardware.Camera'/></method><method api_added='3' name='setMaxDuration' native='true'><parameter name='max_duration_ms' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='3' name='setMaxFileSize' native='true'><parameter name='max_filesize_bytes' type='long'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='3' name='setOnErrorListener'><parameter name='l' type='android.media.MediaRecorder.OnErrorListener'/></method><method api_added='3' name='setOnInfoListener'><parameter name='listener' type='android.media.MediaRecorder.OnInfoListener'/></method><method api_added='3' name='setOutputFile'><parameter name='fd' type='java.io.FileDescriptor'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='setVideoEncoder' native='true'><parameter name='video_encoder' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='setVideoFrameRate' native='true'><parameter name='rate' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='setVideoSize' native='true'><parameter name='width' type='int'/><parameter name='height' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='setVideoSource' native='true'><parameter name='video_source' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='4' name='getAudioSourceMax' final='true' static='true' return='int'/><method api_added='8' name='setAudioChannels'><parameter name='numChannels' type='int'/></method><method api_added='8' name='setAudioEncodingBitRate'><parameter name='bitRate' type='int'/></method><method api_added='8' name='setAudioSamplingRate'><parameter name='samplingRate' type='int'/></method><method api_added='8' name='setProfile'><parameter name='profile' type='android.media.CamcorderProfile'/></method><method api_added='8' name='setVideoEncodingBitRate'><parameter name='bitRate' type='int'/></method></class><class name='MediaRecorder.AudioEncoder' final='true' extends='java.lang.Object'><field name='AMR_NB' final='true' static='true' value='1' type='int'/><field name='DEFAULT' final='true' static='true' value='0' type='int'/></class><class name='MediaRecorder.AudioSource' final='true' extends='java.lang.Object'><field name='DEFAULT' final='true' static='true' value='0' type='int'/><field name='MIC' final='true' static='true' value='1' type='int'/><field api_added='4' name='VOICE_CALL' final='true' static='true' value='4' type='int'/><field api_added='4' name='VOICE_DOWNLINK' final='true' static='true' value='3' type='int'/><field api_added='4' name='VOICE_UPLINK' final='true' static='true' value='2' type='int'/><field api_added='7' name='CAMCORDER' final='true' static='true' value='5' type='int'/><field api_added='7' name='VOICE_RECOGNITION' final='true' static='true' value='6' type='int'/></class><class name='MediaRecorder.OutputFormat' final='true' extends='java.lang.Object'><field name='DEFAULT' final='true' static='true' value='0' type='int'/><field name='MPEG_4' final='true' static='true' value='2' type='int'/><field name='THREE_GPP' final='true' static='true' value='1' type='int'/><field api_added='3' name='RAW_AMR' final='true' static='true' value='3' type='int'/></class><class name='MediaScannerConnection' extends='java.lang.Object'><implements name='android.content.ServiceConnection'/><constructor name='MediaScannerConnection' type='android.media.MediaScannerConnection'><parameter name='context' type='android.content.Context'/><parameter name='client' type='android.media.MediaScannerConnection.MediaScannerConnectionClient'/></constructor><method name='connect'/><method name='disconnect'/><method name='isConnected' synchronized='true' return='boolean'/><method name='onServiceConnected'><parameter name='className' type='android.content.ComponentName'/><parameter name='service' type='android.os.IBinder'/></method><method name='onServiceDisconnected'><parameter name='className' type='android.content.ComponentName'/></method><method name='scanFile'><parameter name='path' type='java.lang.String'/><parameter name='mimeType' type='java.lang.String'/></method><method api_added='8' name='scanFile' static='true'><parameter name='context' type='android.content.Context'/><parameter name='paths' type='java.lang.String[]'/><parameter name='mimeTypes' type='java.lang.String[]'/><parameter name='callback' type='android.media.MediaScannerConnection.OnScanCompletedListener'/></method></class><class name='Ringtone' extends='java.lang.Object'><method name='getStreamType' return='int'/><method name='getTitle' return='java.lang.String'><parameter name='context' type='android.content.Context'/></method><method name='isPlaying' return='boolean'/><method name='play'/><method name='setStreamType'><parameter name='streamType' type='int'/></method><method name='stop'/></class><class name='RingtoneManager' extends='java.lang.Object'><constructor name='RingtoneManager' type='android.media.RingtoneManager'><parameter name='activity' type='android.app.Activity'/></constructor><constructor name='RingtoneManager' type='android.media.RingtoneManager'><parameter name='context' type='android.content.Context'/></constructor><field name='ACTION_RINGTONE_PICKER' final='true' static='true' value='&quot;android.intent.action.RINGTONE_PICKER&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_DEFAULT_URI' final='true' static='true' value='&quot;android.intent.extra.ringtone.DEFAULT_URI&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_EXISTING_URI' final='true' static='true' value='&quot;android.intent.extra.ringtone.EXISTING_URI&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_INCLUDE_DRM' final='true' static='true' value='&quot;android.intent.extra.ringtone.INCLUDE_DRM&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_PICKED_URI' final='true' static='true' value='&quot;android.intent.extra.ringtone.PICKED_URI&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_SHOW_DEFAULT' final='true' static='true' value='&quot;android.intent.extra.ringtone.SHOW_DEFAULT&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_SHOW_SILENT' final='true' static='true' value='&quot;android.intent.extra.ringtone.SHOW_SILENT&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_TITLE' final='true' static='true' value='&quot;android.intent.extra.ringtone.TITLE&quot;' type='java.lang.String'/><field name='EXTRA_RINGTONE_TYPE' final='true' static='true' value='&quot;android.intent.extra.ringtone.TYPE&quot;' type='java.lang.String'/><field name='ID_COLUMN_INDEX' final='true' static='true' value='0' type='int'/><field name='TITLE_COLUMN_INDEX' final='true' static='true' value='1' type='int'/><field name='TYPE_ALARM' final='true' static='true' value='4' type='int'/><field name='TYPE_ALL' final='true' static='true' value='7' type='int'/><field name='TYPE_NOTIFICATION' final='true' static='true' value='2' type='int'/><field name='TYPE_RINGTONE' final='true' static='true' value='1' type='int'/><field name='URI_COLUMN_INDEX' final='true' static='true' value='2' type='int'/><method name='getActualDefaultRingtoneUri' static='true' return='android.net.Uri'><parameter name='context' type='android.content.Context'/><parameter name='type' type='int'/></method><method name='getCursor' return='android.database.Cursor'/><method name='getDefaultType' static='true' return='int'><parameter name='defaultRingtoneUri' type='android.net.Uri'/></method><method name='getDefaultUri' static='true' return='android.net.Uri'><parameter name='type' type='int'/></method><method name='getIncludeDrm' return='boolean'/><method name='getRingtone' return='android.media.Ringtone'><parameter name='position' type='int'/></method><method name='getRingtone' static='true' return='android.media.Ringtone'><parameter name='context' type='android.content.Context'/><parameter name='ringtoneUri' type='android.net.Uri'/></method><method name='getRingtonePosition' return='int'><parameter name='ringtoneUri' type='android.net.Uri'/></method><method name='getRingtoneUri' return='android.net.Uri'><parameter name='position' type='int'/></method><method name='getStopPreviousRingtone' return='boolean'/><method name='getValidRingtoneUri' static='true' return='android.net.Uri'><parameter name='context' type='android.content.Context'/></method><method name='isDefault' static='true' return='boolean'><parameter name='ringtoneUri' type='android.net.Uri'/></method><method name='setActualDefaultRingtoneUri' static='true'><parameter name='context' type='android.content.Context'/><parameter name='type' type='int'/><parameter name='ringtoneUri' type='android.net.Uri'/></method><method name='setIncludeDrm'><parameter name='includeDrm' type='boolean'/></method><method name='setStopPreviousRingtone'><parameter name='stopPreviousRingtone' type='boolean'/></method><method name='setType'><parameter name='type' type='int'/></method><method name='stopPreviousRingtone'/><method api_added='3' name='inferStreamType' return='int'/></class><class name='SoundPool' extends='java.lang.Object'><constructor name='SoundPool' type='android.media.SoundPool'><parameter name='maxStreams' type='int'/><parameter name='streamType' type='int'/><parameter name='srcQuality' type='int'/></constructor><method name='load' return='int'><parameter name='path' type='java.lang.String'/><parameter name='priority' type='int'/></method><method name='load' return='int'><parameter name='context' type='android.content.Context'/><parameter name='resId' type='int'/><parameter name='priority' type='int'/></method><method name='pause' final='true' native='true'><parameter name='streamID' type='int'/></method><method name='play' final='true' native='true' return='int'><parameter name='soundID' type='int'/><parameter name='leftVolume' type='float'/><parameter name='rightVolume' type='float'/><parameter name='priority' type='int'/><parameter name='loop' type='int'/><parameter name='rate' type='float'/></method><method name='release' final='true' native='true'/><method name='resume' final='true' native='true'><parameter name='streamID' type='int'/></method><method name='setLoop' final='true' native='true'><parameter name='streamID' type='int'/><parameter name='loop' type='int'/></method><method name='setPriority' final='true' native='true'><parameter name='streamID' type='int'/><parameter name='priority' type='int'/></method><method name='setRate' final='true' native='true'><parameter name='streamID' type='int'/><parameter name='rate' type='float'/></method><method name='setVolume' final='true' native='true'><parameter name='streamID' type='int'/><parameter name='leftVolume' type='float'/><parameter name='rightVolume' type='float'/></method><method name='stop' final='true' native='true'><parameter name='streamID' type='int'/></method><method name='unload' final='true' native='true' return='boolean'><parameter name='soundID' type='int'/></method><method api_added='3' name='load' return='int'><parameter name='afd' type='android.content.res.AssetFileDescriptor'/><parameter name='priority' type='int'/></method><method api_added='3' name='load' return='int'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='offset' type='long'/><parameter name='length' type='long'/><parameter name='priority' type='int'/></method><method api_added='8' name='autoPause' final='true' native='true'/><method api_added='8' name='autoResume' final='true' native='true'/><method api_added='8' name='setOnLoadCompleteListener'><parameter name='listener' type='android.media.SoundPool.OnLoadCompleteListener'/></method></class><class name='ToneGenerator' extends='java.lang.Object'><constructor name='ToneGenerator' type='android.media.ToneGenerator'><parameter name='streamType' type='int'/><parameter name='volume' type='int'/></constructor><field name='MAX_VOLUME' final='true' static='true' value='100' type='int'/><field name='MIN_VOLUME' final='true' static='true' value='0' type='int'/><field name='TONE_DTMF_0' final='true' static='true' value='0' type='int'/><field name='TONE_DTMF_1' final='true' static='true' value='1' type='int'/><field name='TONE_DTMF_2' final='true' static='true' value='2' type='int'/><field name='TONE_DTMF_3' final='true' static='true' value='3' type='int'/><field name='TONE_DTMF_4' final='true' static='true' value='4' type='int'/><field name='TONE_DTMF_5' final='true' static='true' value='5' type='int'/><field name='TONE_DTMF_6' final='true' static='true' value='6' type='int'/><field name='TONE_DTMF_7' final='true' static='true' value='7' type='int'/><field name='TONE_DTMF_8' final='true' static='true' value='8' type='int'/><field name='TONE_DTMF_9' final='true' static='true' value='9' type='int'/><field name='TONE_DTMF_A' final='true' static='true' value='12' type='int'/><field name='TONE_DTMF_B' final='true' static='true' value='13' type='int'/><field name='TONE_DTMF_C' final='true' static='true' value='14' type='int'/><field name='TONE_DTMF_D' final='true' static='true' value='15' type='int'/><field name='TONE_DTMF_P' final='true' static='true' value='11' type='int'/><field name='TONE_DTMF_S' final='true' static='true' value='10' type='int'/><field name='TONE_PROP_ACK' final='true' static='true' value='25' type='int'/><field name='TONE_PROP_BEEP' final='true' static='true' value='24' type='int'/><field name='TONE_PROP_BEEP2' final='true' static='true' value='28' type='int'/><field name='TONE_PROP_NACK' final='true' static='true' value='26' type='int'/><field name='TONE_PROP_PROMPT' final='true' static='true' value='27' type='int'/><field name='TONE_SUP_BUSY' final='true' static='true' value='17' type='int'/><field name='TONE_SUP_CALL_WAITING' final='true' static='true' value='22' type='int'/><field name='TONE_SUP_CONGESTION' final='true' static='true' value='18' type='int'/><field name='TONE_SUP_DIAL' final='true' static='true' value='16' type='int'/><field name='TONE_SUP_ERROR' final='true' static='true' value='21' type='int'/><field name='TONE_SUP_RADIO_ACK' final='true' static='true' value='19' type='int'/><field name='TONE_SUP_RADIO_NOTAVAIL' final='true' static='true' value='20' type='int'/><field name='TONE_SUP_RINGTONE' final='true' static='true' value='23' type='int'/><field api_added='4' name='TONE_CDMA_ABBR_ALERT' final='true' static='true' value='97' type='int'/><field api_added='4' name='TONE_CDMA_ABBR_INTERCEPT' final='true' static='true' value='37' type='int'/><field api_added='4' name='TONE_CDMA_ABBR_REORDER' final='true' static='true' value='39' type='int'/><field api_added='4' name='TONE_CDMA_ALERT_AUTOREDIAL_LITE' final='true' static='true' value='87' type='int'/><field api_added='4' name='TONE_CDMA_ALERT_CALL_GUARD' final='true' static='true' value='93' type='int'/><field api_added='4' name='TONE_CDMA_ALERT_INCALL_LITE' final='true' static='true' value='91' type='int'/><field api_added='4' name='TONE_CDMA_ALERT_NETWORK_LITE' final='true' static='true' value='86' type='int'/><field api_added='4' name='TONE_CDMA_ANSWER' final='true' static='true' value='42' type='int'/><field api_added='4' name='TONE_CDMA_CALLDROP_LITE' final='true' static='true' value='95' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_INTERGROUP' final='true' static='true' value='46' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_NORMAL' final='true' static='true' value='45' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_PAT3' final='true' static='true' value='48' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_PAT5' final='true' static='true' value='50' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_PAT6' final='true' static='true' value='51' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_PAT7' final='true' static='true' value='52' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_PING_RING' final='true' static='true' value='49' type='int'/><field api_added='4' name='TONE_CDMA_CALL_SIGNAL_ISDN_SP_PRI' final='true' static='true' value='47' type='int'/><field api_added='4' name='TONE_CDMA_CONFIRM' final='true' static='true' value='41' type='int'/><field api_added='4' name='TONE_CDMA_DIAL_TONE_LITE' final='true' static='true' value='34' type='int'/><field api_added='4' name='TONE_CDMA_EMERGENCY_RINGBACK' final='true' static='true' value='92' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_L' final='true' static='true' value='53' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_PBX_L' final='true' static='true' value='71' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_PBX_SLS' final='true' static='true' value='80' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_PBX_SS' final='true' static='true' value='74' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_PBX_SSL' final='true' static='true' value='77' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_PBX_S_X4' final='true' static='true' value='83' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_SLS' final='true' static='true' value='65' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_SS' final='true' static='true' value='56' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_SSL' final='true' static='true' value='59' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_SS_2' final='true' static='true' value='62' type='int'/><field api_added='4' name='TONE_CDMA_HIGH_S_X4' final='true' static='true' value='68' type='int'/><field api_added='4' name='TONE_CDMA_INTERCEPT' final='true' static='true' value='36' type='int'/><field api_added='4' name='TONE_CDMA_KEYPAD_VOLUME_KEY_LITE' final='true' static='true' value='89' type='int'/><field api_added='4' name='TONE_CDMA_LOW_L' final='true' static='true' value='55' type='int'/><field api_added='4' name='TONE_CDMA_LOW_PBX_L' final='true' static='true' value='73' type='int'/><field api_added='4' name='TONE_CDMA_LOW_PBX_SLS' final='true' static='true' value='82' type='int'/><field api_added='4' name='TONE_CDMA_LOW_PBX_SS' final='true' static='true' value='76' type='int'/><field api_added='4' name='TONE_CDMA_LOW_PBX_SSL' final='true' static='true' value='79' type='int'/><field api_added='4' name='TONE_CDMA_LOW_PBX_S_X4' final='true' static='true' value='85' type='int'/><field api_added='4' name='TONE_CDMA_LOW_SLS' final='true' static='true' value='67' type='int'/><field api_added='4' name='TONE_CDMA_LOW_SS' final='true' static='true' value='58' type='int'/><field api_added='4' name='TONE_CDMA_LOW_SSL' final='true' static='true' value='61' type='int'/><field api_added='4' name='TONE_CDMA_LOW_SS_2' final='true' static='true' value='64' type='int'/><field api_added='4' name='TONE_CDMA_LOW_S_X4' final='true' static='true' value='70' type='int'/><field api_added='4' name='TONE_CDMA_MED_L' final='true' static='true' value='54' type='int'/><field api_added='4' name='TONE_CDMA_MED_PBX_L' final='true' static='true' value='72' type='int'/><field api_added='4' name='TONE_CDMA_MED_PBX_SLS' final='true' static='true' value='81' type='int'/><field api_added='4' name='TONE_CDMA_MED_PBX_SS' final='true' static='true' value='75' type='int'/><field api_added='4' name='TONE_CDMA_MED_PBX_SSL' final='true' static='true' value='78' type='int'/><field api_added='4' name='TONE_CDMA_MED_PBX_S_X4' final='true' static='true' value='84' type='int'/><field api_added='4' name='TONE_CDMA_MED_SLS' final='true' static='true' value='66' type='int'/><field api_added='4' name='TONE_CDMA_MED_SS' final='true' static='true' value='57' type='int'/><field api_added='4' name='TONE_CDMA_MED_SSL' final='true' static='true' value='60' type='int'/><field api_added='4' name='TONE_CDMA_MED_SS_2' final='true' static='true' value='63' type='int'/><field api_added='4' name='TONE_CDMA_MED_S_X4' final='true' static='true' value='69' type='int'/><field api_added='4' name='TONE_CDMA_NETWORK_BUSY' final='true' static='true' value='40' type='int'/><field api_added='4' name='TONE_CDMA_NETWORK_BUSY_ONE_SHOT' final='true' static='true' value='96' type='int'/><field api_added='4' name='TONE_CDMA_NETWORK_CALLWAITING' final='true' static='true' value='43' type='int'/><field api_added='4' name='TONE_CDMA_NETWORK_USA_RINGBACK' final='true' static='true' value='35' type='int'/><field api_added='4' name='TONE_CDMA_ONE_MIN_BEEP' final='true' static='true' value='88' type='int'/><field api_added='4' name='TONE_CDMA_PIP' final='true' static='true' value='44' type='int'/><field api_added='4' name='TONE_CDMA_PRESSHOLDKEY_LITE' final='true' static='true' value='90' type='int'/><field api_added='4' name='TONE_CDMA_REORDER' final='true' static='true' value='38' type='int'/><field api_added='4' name='TONE_CDMA_SIGNAL_OFF' final='true' static='true' value='98' type='int'/><field api_added='4' name='TONE_CDMA_SOFT_ERROR_LITE' final='true' static='true' value='94' type='int'/><field api_added='4' name='TONE_SUP_CONFIRM' final='true' static='true' value='32' type='int'/><field api_added='4' name='TONE_SUP_CONGESTION_ABBREV' final='true' static='true' value='31' type='int'/><field api_added='4' name='TONE_SUP_INTERCEPT' final='true' static='true' value='29' type='int'/><field api_added='4' name='TONE_SUP_INTERCEPT_ABBREV' final='true' static='true' value='30' type='int'/><field api_added='4' name='TONE_SUP_PIP' final='true' static='true' value='33' type='int'/><method name='release' native='true'/><method name='startTone' native='true' return='boolean'><parameter name='toneType' type='int'/></method><method name='stopTone' native='true'/><method api_added='5' name='startTone' native='true' return='boolean'><parameter name='toneType' type='int'/><parameter name='durationMs' type='int'/></method></class><class api_added='3' name='AudioFormat' extends='java.lang.Object'><constructor api_added='3' name='AudioFormat' type='android.media.AudioFormat'/><field api_added='3' name='CHANNEL_CONFIGURATION_DEFAULT' final='true' static='true' value='1' type='int' deprecated='5'/><field api_added='3' name='CHANNEL_CONFIGURATION_INVALID' final='true' static='true' value='0' type='int' deprecated='5'/><field api_added='3' name='CHANNEL_CONFIGURATION_MONO' final='true' static='true' value='2' type='int' deprecated='5'/><field api_added='3' name='CHANNEL_CONFIGURATION_STEREO' final='true' static='true' value='3' type='int' deprecated='5'/><field api_added='3' name='ENCODING_DEFAULT' final='true' static='true' value='1' type='int'/><field api_added='3' name='ENCODING_INVALID' final='true' static='true' value='0' type='int'/><field api_added='3' name='ENCODING_PCM_16BIT' final='true' static='true' value='2' type='int'/><field api_added='3' name='ENCODING_PCM_8BIT' final='true' static='true' value='3' type='int'/><field api_added='5' name='CHANNEL_INVALID' final='true' static='true' value='0' type='int'/><field api_added='5' name='CHANNEL_IN_BACK' final='true' static='true' value='32' type='int'/><field api_added='5' name='CHANNEL_IN_BACK_PROCESSED' final='true' static='true' value='512' type='int'/><field api_added='5' name='CHANNEL_IN_DEFAULT' final='true' static='true' value='1' type='int'/><field api_added='5' name='CHANNEL_IN_FRONT' final='true' static='true' value='16' type='int'/><field api_added='5' name='CHANNEL_IN_FRONT_PROCESSED' final='true' static='true' value='256' type='int'/><field api_added='5' name='CHANNEL_IN_LEFT' final='true' static='true' value='4' type='int'/><field api_added='5' name='CHANNEL_IN_LEFT_PROCESSED' final='true' static='true' value='64' type='int'/><field api_added='5' name='CHANNEL_IN_MONO' final='true' static='true' value='16' type='int'/><field api_added='5' name='CHANNEL_IN_PRESSURE' final='true' static='true' value='1024' type='int'/><field api_added='5' name='CHANNEL_IN_RIGHT' final='true' static='true' value='8' type='int'/><field api_added='5' name='CHANNEL_IN_RIGHT_PROCESSED' final='true' static='true' value='128' type='int'/><field api_added='5' name='CHANNEL_IN_STEREO' final='true' static='true' value='12' type='int'/><field api_added='5' name='CHANNEL_IN_VOICE_DNLINK' final='true' static='true' value='32768' type='int'/><field api_added='5' name='CHANNEL_IN_VOICE_UPLINK' final='true' static='true' value='16384' type='int'/><field api_added='5' name='CHANNEL_IN_X_AXIS' final='true' static='true' value='2048' type='int'/><field api_added='5' name='CHANNEL_IN_Y_AXIS' final='true' static='true' value='4096' type='int'/><field api_added='5' name='CHANNEL_IN_Z_AXIS' final='true' static='true' value='8192' type='int'/><field api_added='5' name='CHANNEL_OUT_5POINT1' final='true' static='true' value='252' type='int'/><field api_added='5' name='CHANNEL_OUT_7POINT1' final='true' static='true' value='1020' type='int'/><field api_added='5' name='CHANNEL_OUT_BACK_CENTER' final='true' static='true' value='1024' type='int'/><field api_added='5' name='CHANNEL_OUT_BACK_LEFT' final='true' static='true' value='64' type='int'/><field api_added='5' name='CHANNEL_OUT_BACK_RIGHT' final='true' static='true' value='128' type='int'/><field api_added='5' name='CHANNEL_OUT_DEFAULT' final='true' static='true' value='1' type='int'/><field api_added='5' name='CHANNEL_OUT_FRONT_CENTER' final='true' static='true' value='16' type='int'/><field api_added='5' name='CHANNEL_OUT_FRONT_LEFT' final='true' static='true' value='4' type='int'/><field api_added='5' name='CHANNEL_OUT_FRONT_LEFT_OF_CENTER' final='true' static='true' value='256' type='int'/><field api_added='5' name='CHANNEL_OUT_FRONT_RIGHT' final='true' static='true' value='8' type='int'/><field api_added='5' name='CHANNEL_OUT_FRONT_RIGHT_OF_CENTER' final='true' static='true' value='512' type='int'/><field api_added='5' name='CHANNEL_OUT_LOW_FREQUENCY' final='true' static='true' value='32' type='int'/><field api_added='5' name='CHANNEL_OUT_MONO' final='true' static='true' value='4' type='int'/><field api_added='5' name='CHANNEL_OUT_QUAD' final='true' static='true' value='204' type='int'/><field api_added='5' name='CHANNEL_OUT_STEREO' final='true' static='true' value='12' type='int'/><field api_added='5' name='CHANNEL_OUT_SURROUND' final='true' static='true' value='1052' type='int'/></class><class api_added='3' name='AudioRecord' extends='java.lang.Object'><constructor api_added='3' name='AudioRecord' type='android.media.AudioRecord'><parameter name='audioSource' type='int'/><parameter name='sampleRateInHz' type='int'/><parameter name='channelConfig' type='int'/><parameter name='audioFormat' type='int'/><parameter name='bufferSizeInBytes' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></constructor><field api_added='3' name='ERROR' final='true' static='true' value='-1' type='int'/><field api_added='3' name='ERROR_BAD_VALUE' final='true' static='true' value='-2' type='int'/><field api_added='3' name='ERROR_INVALID_OPERATION' final='true' static='true' value='-3' type='int'/><field api_added='3' name='RECORDSTATE_RECORDING' final='true' static='true' value='3' type='int'/><field api_added='3' name='RECORDSTATE_STOPPED' final='true' static='true' value='1' type='int'/><field api_added='3' name='STATE_INITIALIZED' final='true' static='true' value='1' type='int'/><field api_added='3' name='STATE_UNINITIALIZED' final='true' static='true' value='0' type='int'/><field api_added='3' name='SUCCESS' final='true' static='true' value='0' type='int'/><method api_added='3' name='getAudioFormat' return='int'/><method api_added='3' name='getAudioSource' return='int'/><method api_added='3' name='getChannelConfiguration' return='int'/><method api_added='3' name='getChannelCount' return='int'/><method api_added='3' name='getMinBufferSize' static='true' return='int'><parameter name='sampleRateInHz' type='int'/><parameter name='channelConfig' type='int'/><parameter name='audioFormat' type='int'/></method><method api_added='3' name='getNotificationMarkerPosition' return='int'/><method api_added='3' name='getPositionNotificationPeriod' return='int'/><method api_added='3' name='getRecordingState' return='int'/><method api_added='3' name='getSampleRate' return='int'/><method api_added='3' name='getState' return='int'/><method api_added='3' name='read' return='int'><parameter name='audioData' type='byte[]'/><parameter name='offsetInBytes' type='int'/><parameter name='sizeInBytes' type='int'/></method><method api_added='3' name='read' return='int'><parameter name='audioData' type='short[]'/><parameter name='offsetInShorts' type='int'/><parameter name='sizeInShorts' type='int'/></method><method api_added='3' name='read' return='int'><parameter name='audioBuffer' type='java.nio.ByteBuffer'/><parameter name='sizeInBytes' type='int'/></method><method api_added='3' name='release'/><method api_added='3' name='setNotificationMarkerPosition' return='int'><parameter name='markerInFrames' type='int'/></method><method api_added='3' name='setPositionNotificationPeriod' return='int'><parameter name='periodInFrames' type='int'/></method><method api_added='3' name='setRecordPositionUpdateListener'><parameter name='listener' type='android.media.AudioRecord.OnRecordPositionUpdateListener'/></method><method api_added='3' name='setRecordPositionUpdateListener'><parameter name='listener' type='android.media.AudioRecord.OnRecordPositionUpdateListener'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='3' name='startRecording'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='stop'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method></class><class api_added='3' name='AudioTrack' extends='java.lang.Object'><constructor api_added='3' name='AudioTrack' type='android.media.AudioTrack'><parameter name='streamType' type='int'/><parameter name='sampleRateInHz' type='int'/><parameter name='channelConfig' type='int'/><parameter name='audioFormat' type='int'/><parameter name='bufferSizeInBytes' type='int'/><parameter name='mode' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></constructor><field api_added='3' name='ERROR' final='true' static='true' value='-1' type='int'/><field api_added='3' name='ERROR_BAD_VALUE' final='true' static='true' value='-2' type='int'/><field api_added='3' name='ERROR_INVALID_OPERATION' final='true' static='true' value='-3' type='int'/><field api_added='3' name='MODE_STATIC' final='true' static='true' value='0' type='int'/><field api_added='3' name='MODE_STREAM' final='true' static='true' value='1' type='int'/><field api_added='3' name='PLAYSTATE_PAUSED' final='true' static='true' value='2' type='int'/><field api_added='3' name='PLAYSTATE_PLAYING' final='true' static='true' value='3' type='int'/><field api_added='3' name='PLAYSTATE_STOPPED' final='true' static='true' value='1' type='int'/><field api_added='3' name='STATE_INITIALIZED' final='true' static='true' value='1' type='int'/><field api_added='3' name='STATE_NO_STATIC_DATA' final='true' static='true' value='2' type='int'/><field api_added='3' name='STATE_UNINITIALIZED' final='true' static='true' value='0' type='int'/><field api_added='3' name='SUCCESS' final='true' static='true' value='0' type='int'/><method api_added='3' name='flush'/><method api_added='3' name='getAudioFormat' return='int'/><method api_added='3' name='getChannelConfiguration' return='int'/><method api_added='3' name='getChannelCount' return='int'/><method api_added='3' name='getMaxVolume' static='true' return='float'/><method api_added='3' name='getMinBufferSize' static='true' return='int'><parameter name='sampleRateInHz' type='int'/><parameter name='channelConfig' type='int'/><parameter name='audioFormat' type='int'/></method><method api_added='3' name='getMinVolume' static='true' return='float'/><method api_added='3' name='getNativeFrameCount' visibility='protected' return='int'/><method api_added='3' name='getNativeOutputSampleRate' static='true' return='int'><parameter name='streamType' type='int'/></method><method api_added='3' name='getNotificationMarkerPosition' return='int'/><method api_added='3' name='getPlayState' return='int'/><method api_added='3' name='getPlaybackHeadPosition' return='int'/><method api_added='3' name='getPlaybackRate' return='int'/><method api_added='3' name='getPositionNotificationPeriod' return='int'/><method api_added='3' name='getSampleRate' return='int'/><method api_added='3' name='getState' return='int'/><method api_added='3' name='getStreamType' return='int'/><method api_added='3' name='pause'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='play'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='release'/><method api_added='3' name='reloadStaticData' return='int'/><method api_added='3' name='setLoopPoints' return='int'><parameter name='startInFrames' type='int'/><parameter name='endInFrames' type='int'/><parameter name='loopCount' type='int'/></method><method api_added='3' name='setNotificationMarkerPosition' return='int'><parameter name='markerInFrames' type='int'/></method><method api_added='3' name='setPlaybackHeadPosition' return='int'><parameter name='positionInFrames' type='int'/></method><method api_added='3' name='setPlaybackPositionUpdateListener'><parameter name='listener' type='android.media.AudioTrack.OnPlaybackPositionUpdateListener'/></method><method api_added='3' name='setPlaybackPositionUpdateListener'><parameter name='listener' type='android.media.AudioTrack.OnPlaybackPositionUpdateListener'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='3' name='setPlaybackRate' return='int'><parameter name='sampleRateInHz' type='int'/></method><method api_added='3' name='setPositionNotificationPeriod' return='int'><parameter name='periodInFrames' type='int'/></method><method api_added='3' name='setState' visibility='protected'><parameter name='state' type='int'/></method><method api_added='3' name='setStereoVolume' return='int'><parameter name='leftVolume' type='float'/><parameter name='rightVolume' type='float'/></method><method api_added='3' name='stop'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method api_added='3' name='write' return='int'><parameter name='audioData' type='byte[]'/><parameter name='offsetInBytes' type='int'/><parameter name='sizeInBytes' type='int'/></method><method api_added='3' name='write' return='int'><parameter name='audioData' type='short[]'/><parameter name='offsetInShorts' type='int'/><parameter name='sizeInShorts' type='int'/></method></class><class api_added='3' name='JetPlayer' extends='java.lang.Object'><method api_added='3' name='clearQueue' return='boolean'/><method api_added='3' name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method api_added='3' name='closeJetFile' return='boolean'/><method api_added='3' name='getJetPlayer' static='true' return='android.media.JetPlayer'/><method api_added='3' name='getMaxTracks' static='true' return='int'/><method api_added='3' name='loadJetFile' return='boolean'><parameter name='path' type='java.lang.String'/></method><method api_added='3' name='loadJetFile' return='boolean'><parameter name='afd' type='android.content.res.AssetFileDescriptor'/></method><method api_added='3' name='pause' return='boolean'/><method api_added='3' name='play' return='boolean'/><method api_added='3' name='queueJetSegment' return='boolean'><parameter name='segmentNum' type='int'/><parameter name='libNum' type='int'/><parameter name='repeatCount' type='int'/><parameter name='transpose' type='int'/><parameter name='muteFlags' type='int'/><parameter name='userID' type='byte'/></method><method api_added='3' name='queueJetSegmentMuteArray' return='boolean'><parameter name='segmentNum' type='int'/><parameter name='libNum' type='int'/><parameter name='repeatCount' type='int'/><parameter name='transpose' type='int'/><parameter name='muteArray' type='boolean[]'/><parameter name='userID' type='byte'/></method><method api_added='3' name='release'/><method api_added='3' name='setEventListener'><parameter name='listener' type='android.media.JetPlayer.OnJetEventListener'/></method><method api_added='3' name='setEventListener'><parameter name='listener' type='android.media.JetPlayer.OnJetEventListener'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='3' name='setMuteArray' return='boolean'><parameter name='muteArray' type='boolean[]'/><parameter name='sync' type='boolean'/></method><method api_added='3' name='setMuteFlag' return='boolean'><parameter name='trackId' type='int'/><parameter name='muteFlag' type='boolean'/><parameter name='sync' type='boolean'/></method><method api_added='3' name='setMuteFlags' return='boolean'><parameter name='muteFlags' type='int'/><parameter name='sync' type='boolean'/></method><method api_added='3' name='triggerClip' return='boolean'><parameter name='clipId' type='int'/></method></class><class api_added='3' name='MediaRecorder.VideoEncoder' final='true' extends='java.lang.Object'><field api_added='3' name='DEFAULT' final='true' static='true' value='0' type='int'/><field api_added='3' name='H263' final='true' static='true' value='1' type='int'/><field api_added='3' name='H264' final='true' static='true' value='2' type='int'/><field api_added='3' name='MPEG_4_SP' final='true' static='true' value='3' type='int'/></class><class api_added='3' name='MediaRecorder.VideoSource' final='true' extends='java.lang.Object'><field api_added='3' name='CAMERA' final='true' static='true' value='1' type='int'/><field api_added='3' name='DEFAULT' final='true' static='true' value='0' type='int'/></class><class api_added='5' name='ExifInterface' extends='java.lang.Object'><constructor api_added='5' name='ExifInterface' type='android.media.ExifInterface'><parameter name='filename' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><field api_added='5' name='ORIENTATION_FLIP_HORIZONTAL' final='true' static='true' value='2' type='int'/><field api_added='5' name='ORIENTATION_FLIP_VERTICAL' final='true' static='true' value='4' type='int'/><field api_added='5' name='ORIENTATION_NORMAL' final='true' static='true' value='1' type='int'/><field api_added='5' name='ORIENTATION_ROTATE_180' final='true' static='true' value='3' type='int'/><field api_added='5' name='ORIENTATION_ROTATE_270' final='true' static='true' value='8' type='int'/><field api_added='5' name='ORIENTATION_ROTATE_90' final='true' static='true' value='6' type='int'/><field api_added='5' name='ORIENTATION_TRANSPOSE' final='true' static='true' value='5' type='int'/><field api_added='5' name='ORIENTATION_TRANSVERSE' final='true' static='true' value='7' type='int'/><field api_added='5' name='ORIENTATION_UNDEFINED' final='true' static='true' value='0' type='int'/><field api_added='5' name='TAG_DATETIME' final='true' static='true' value='&quot;DateTime&quot;' type='java.lang.String'/><field api_added='5' name='TAG_FLASH' final='true' static='true' value='&quot;Flash&quot;' type='java.lang.String'/><field api_added='5' name='TAG_GPS_LATITUDE' final='true' static='true' value='&quot;GPSLatitude&quot;' type='java.lang.String'/><field api_added='5' name='TAG_GPS_LATITUDE_REF' final='true' static='true' value='&quot;GPSLatitudeRef&quot;' type='java.lang.String'/><field api_added='5' name='TAG_GPS_LONGITUDE' final='true' static='true' value='&quot;GPSLongitude&quot;' type='java.lang.String'/><field api_added='5' name='TAG_GPS_LONGITUDE_REF' final='true' static='true' value='&quot;GPSLongitudeRef&quot;' type='java.lang.String'/><field api_added='5' name='TAG_IMAGE_LENGTH' final='true' static='true' value='&quot;ImageLength&quot;' type='java.lang.String'/><field api_added='5' name='TAG_IMAGE_WIDTH' final='true' static='true' value='&quot;ImageWidth&quot;' type='java.lang.String'/><field api_added='5' name='TAG_MAKE' final='true' static='true' value='&quot;Make&quot;' type='java.lang.String'/><field api_added='5' name='TAG_MODEL' final='true' static='true' value='&quot;Model&quot;' type='java.lang.String'/><field api_added='5' name='TAG_ORIENTATION' final='true' static='true' value='&quot;Orientation&quot;' type='java.lang.String'/><field api_added='5' name='TAG_WHITE_BALANCE' final='true' static='true' value='&quot;WhiteBalance&quot;' type='java.lang.String'/><field api_added='5' name='WHITEBALANCE_AUTO' final='true' static='true' value='0' type='int'/><field api_added='5' name='WHITEBALANCE_MANUAL' final='true' static='true' value='1' type='int'/><field api_added='8' name='TAG_FOCAL_LENGTH' final='true' static='true' value='&quot;FocalLength&quot;' type='java.lang.String'/><field api_added='8' name='TAG_GPS_DATESTAMP' final='true' static='true' value='&quot;GPSDateStamp&quot;' type='java.lang.String'/><field api_added='8' name='TAG_GPS_PROCESSING_METHOD' final='true' static='true' value='&quot;GPSProcessingMethod&quot;' type='java.lang.String'/><field api_added='8' name='TAG_GPS_TIMESTAMP' final='true' static='true' value='&quot;GPSTimeStamp&quot;' type='java.lang.String'/><method api_added='5' name='getAttribute' return='java.lang.String'><parameter name='tag' type='java.lang.String'/></method><method api_added='5' name='getAttributeInt' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method api_added='5' name='getLatLong' return='boolean'><parameter name='output' type='float[]'/></method><method api_added='5' name='getThumbnail' return='byte[]'/><method api_added='5' name='hasThumbnail' return='boolean'/><method api_added='5' name='saveAttributes'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='setAttribute'><parameter name='tag' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method api_added='8' name='getAttributeDouble' return='double'><parameter name='tag' type='java.lang.String'/><parameter name='defaultValue' type='double'/></method></class><class api_added='8' name='CamcorderProfile' extends='java.lang.Object'><field api_added='8' name='QUALITY_HIGH' final='true' static='true' value='1' type='int'/><field api_added='8' name='QUALITY_LOW' final='true' static='true' value='0' type='int'/><field api_added='8' name='audioBitRate' type='int'/><field api_added='8' name='audioChannels' type='int'/><field api_added='8' name='audioCodec' type='int'/><field api_added='8' name='audioSampleRate' type='int'/><field api_added='8' name='duration' type='int'/><field api_added='8' name='fileFormat' type='int'/><field api_added='8' name='quality' type='int'/><field api_added='8' name='videoBitRate' type='int'/><field api_added='8' name='videoCodec' type='int'/><field api_added='8' name='videoFrameHeight' type='int'/><field api_added='8' name='videoFrameRate' type='int'/><field api_added='8' name='videoFrameWidth' type='int'/><method api_added='8' name='get' static='true' return='android.media.CamcorderProfile'><parameter name='quality' type='int'/></method></class><class api_added='8' name='CameraProfile' extends='java.lang.Object'><constructor api_added='8' name='CameraProfile' type='android.media.CameraProfile'/><field api_added='8' name='QUALITY_HIGH' final='true' static='true' value='2' type='int'/><field api_added='8' name='QUALITY_LOW' final='true' static='true' value='0' type='int'/><field api_added='8' name='QUALITY_MEDIUM' final='true' static='true' value='1' type='int'/><method api_added='8' name='getJpegEncodingQualityParameter' static='true' return='int'><parameter name='quality' type='int'/></method></class><class api_added='8' name='ThumbnailUtils' extends='java.lang.Object'><constructor api_added='8' name='ThumbnailUtils' type='android.media.ThumbnailUtils'/><field api_added='8' name='OPTIONS_RECYCLE_INPUT' final='true' static='true' value='2' type='int'/><method api_added='8' name='createVideoThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='filePath' type='java.lang.String'/><parameter name='kind' type='int'/></method><method api_added='8' name='extractThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='source' type='android.graphics.Bitmap'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='extractThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='source' type='android.graphics.Bitmap'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='options' type='int'/></method></class><interface name='MediaPlayer.OnBufferingUpdateListener' abstract='true' static='true'><method name='onBufferingUpdate' abstract='true'><parameter name='mp' type='android.media.MediaPlayer'/><parameter name='percent' type='int'/></method></interface><interface name='MediaPlayer.OnCompletionListener' abstract='true' static='true'><method name='onCompletion' abstract='true'><parameter name='mp' type='android.media.MediaPlayer'/></method></interface><interface name='MediaPlayer.OnErrorListener' abstract='true' static='true'><method name='onError' abstract='true' return='boolean'><parameter name='mp' type='android.media.MediaPlayer'/><parameter name='what' type='int'/><parameter name='extra' type='int'/></method></interface><interface name='MediaPlayer.OnPreparedListener' abstract='true' static='true'><method name='onPrepared' abstract='true'><parameter name='mp' type='android.media.MediaPlayer'/></method></interface><interface name='MediaPlayer.OnSeekCompleteListener' abstract='true' static='true'><method name='onSeekComplete' abstract='true'><parameter name='mp' type='android.media.MediaPlayer'/></method></interface><interface name='MediaScannerConnection.MediaScannerConnectionClient' abstract='true' static='true'><implements name='android.media.MediaScannerConnection.OnScanCompletedListener'/><method name='onMediaScannerConnected' abstract='true'/><method name='onScanCompleted' abstract='true'><parameter name='path' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/></method></interface><interface api_added='3' name='AudioRecord.OnRecordPositionUpdateListener' abstract='true' static='true'><method api_added='3' name='onMarkerReached' abstract='true'><parameter name='recorder' type='android.media.AudioRecord'/></method><method api_added='3' name='onPeriodicNotification' abstract='true'><parameter name='recorder' type='android.media.AudioRecord'/></method></interface><interface api_added='3' name='AudioTrack.OnPlaybackPositionUpdateListener' abstract='true' static='true'><method api_added='3' name='onMarkerReached' abstract='true'><parameter name='track' type='android.media.AudioTrack'/></method><method api_added='3' name='onPeriodicNotification' abstract='true'><parameter name='track' type='android.media.AudioTrack'/></method></interface><interface api_added='3' name='JetPlayer.OnJetEventListener' abstract='true' static='true'><method api_added='3' name='onJetEvent' abstract='true'><parameter name='player' type='android.media.JetPlayer'/><parameter name='segment' type='short'/><parameter name='track' type='byte'/><parameter name='channel' type='byte'/><parameter name='controller' type='byte'/><parameter name='value' type='byte'/></method><method api_added='3' name='onJetNumQueuedSegmentUpdate' abstract='true'><parameter name='player' type='android.media.JetPlayer'/><parameter name='nbSegments' type='int'/></method><method api_added='3' name='onJetPauseUpdate' abstract='true'><parameter name='player' type='android.media.JetPlayer'/><parameter name='paused' type='int'/></method><method api_added='3' name='onJetUserIdUpdate' abstract='true'><parameter name='player' type='android.media.JetPlayer'/><parameter name='userId' type='int'/><parameter name='repeatCount' type='int'/></method></interface><interface api_added='3' name='MediaPlayer.OnInfoListener' abstract='true' static='true'><method api_added='3' name='onInfo' abstract='true' return='boolean'><parameter name='mp' type='android.media.MediaPlayer'/><parameter name='what' type='int'/><parameter name='extra' type='int'/></method></interface><interface api_added='3' name='MediaPlayer.OnVideoSizeChangedListener' abstract='true' static='true'><method api_added='3' name='onVideoSizeChanged' abstract='true'><parameter name='mp' type='android.media.MediaPlayer'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method></interface><interface api_added='3' name='MediaRecorder.OnErrorListener' abstract='true' static='true'><method api_added='3' name='onError' abstract='true'><parameter name='mr' type='android.media.MediaRecorder'/><parameter name='what' type='int'/><parameter name='extra' type='int'/></method></interface><interface api_added='3' name='MediaRecorder.OnInfoListener' abstract='true' static='true'><method api_added='3' name='onInfo' abstract='true'><parameter name='mr' type='android.media.MediaRecorder'/><parameter name='what' type='int'/><parameter name='extra' type='int'/></method></interface><interface api_added='8' name='AudioManager.OnAudioFocusChangeListener' abstract='true' static='true'><method api_added='8' name='onAudioFocusChange' abstract='true'><parameter name='focusChange' type='int'/></method></interface><interface api_added='8' name='MediaScannerConnection.OnScanCompletedListener' abstract='true' static='true'><method api_added='8' name='onScanCompleted' abstract='true'><parameter name='path' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/></method></interface><interface api_added='8' name='SoundPool.OnLoadCompleteListener' abstract='true' static='true'><method api_added='8' name='onLoadComplete' abstract='true'><parameter name='soundPool' type='android.media.SoundPool'/><parameter name='sampleId' type='int'/><parameter name='status' type='int'/></method></interface></package><package name='android.net'><class name='ConnectivityManager' extends='java.lang.Object'><field name='CONNECTIVITY_ACTION' final='true' static='true' value='&quot;android.net.conn.CONNECTIVITY_CHANGE&quot;' type='java.lang.String'/><field name='DEFAULT_NETWORK_PREFERENCE' final='true' static='true' value='1' type='int'/><field name='EXTRA_EXTRA_INFO' final='true' static='true' value='&quot;extraInfo&quot;' type='java.lang.String'/><field name='EXTRA_IS_FAILOVER' final='true' static='true' value='&quot;isFailover&quot;' type='java.lang.String'/><field name='EXTRA_NETWORK_INFO' final='true' static='true' value='&quot;networkInfo&quot;' type='java.lang.String'/><field name='EXTRA_NO_CONNECTIVITY' final='true' static='true' value='&quot;noConnectivity&quot;' type='java.lang.String'/><field name='EXTRA_OTHER_NETWORK_INFO' final='true' static='true' value='&quot;otherNetwork&quot;' type='java.lang.String'/><field name='EXTRA_REASON' final='true' static='true' value='&quot;reason&quot;' type='java.lang.String'/><field name='TYPE_MOBILE' final='true' static='true' value='0' type='int'/><field name='TYPE_WIFI' final='true' static='true' value='1' type='int'/><field api_added='3' name='ACTION_BACKGROUND_DATA_SETTING_CHANGED' final='true' static='true' value='&quot;android.net.conn.BACKGROUND_DATA_SETTING_CHANGED&quot;' type='java.lang.String'/><field api_added='8' name='TYPE_MOBILE_DUN' final='true' static='true' value='4' type='int'/><field api_added='8' name='TYPE_MOBILE_HIPRI' final='true' static='true' value='5' type='int'/><field api_added='8' name='TYPE_MOBILE_MMS' final='true' static='true' value='2' type='int'/><field api_added='8' name='TYPE_MOBILE_SUPL' final='true' static='true' value='3' type='int'/><field api_added='8' name='TYPE_WIMAX' final='true' static='true' value='6' type='int'/><method name='getActiveNetworkInfo' return='android.net.NetworkInfo'/><method name='getAllNetworkInfo' return='android.net.NetworkInfo[]'/><method name='getNetworkInfo' return='android.net.NetworkInfo'><parameter name='networkType' type='int'/></method><method name='getNetworkPreference' return='int'/><method name='isNetworkTypeValid' static='true' return='boolean'><parameter name='networkType' type='int'/></method><method name='requestRouteToHost' return='boolean'><parameter name='networkType' type='int'/><parameter name='hostAddress' type='int'/></method><method name='setNetworkPreference'><parameter name='preference' type='int'/></method><method name='startUsingNetworkFeature' return='int'><parameter name='networkType' type='int'/><parameter name='feature' type='java.lang.String'/></method><method name='stopUsingNetworkFeature' return='int'><parameter name='networkType' type='int'/><parameter name='feature' type='java.lang.String'/></method><method api_added='3' name='getBackgroundDataSetting' return='boolean'/></class><class name='Credentials' extends='java.lang.Object'><constructor name='Credentials' type='android.net.Credentials'><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='gid' type='int'/></constructor><method name='getGid' return='int'/><method name='getPid' return='int'/><method name='getUid' return='int'/></class><class name='DhcpInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='DhcpInfo' type='android.net.DhcpInfo'/><field name='dns1' type='int'/><field name='dns2' type='int'/><field name='gateway' type='int'/><field name='ipAddress' type='int'/><field name='leaseDuration' type='int'/><field name='netmask' type='int'/><field name='serverAddress' type='int'/><method name='describeContents' return='int'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='LocalServerSocket' extends='java.lang.Object'><constructor name='LocalServerSocket' type='android.net.LocalServerSocket'><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='LocalServerSocket' type='android.net.LocalServerSocket'><parameter name='fd' type='java.io.FileDescriptor'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='accept' return='android.net.LocalSocket'><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getFileDescriptor' return='java.io.FileDescriptor'/><method name='getLocalSocketAddress' return='android.net.LocalSocketAddress'/></class><class name='LocalSocket' extends='java.lang.Object'><constructor name='LocalSocket' type='android.net.LocalSocket'/><method name='bind'><parameter name='bindpoint' type='android.net.LocalSocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='endpoint' type='android.net.LocalSocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='endpoint' type='android.net.LocalSocketAddress'/><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getAncillaryFileDescriptors' return='java.io.FileDescriptor[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getFileDescriptor' return='java.io.FileDescriptor'/><method name='getInputStream' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getLocalSocketAddress' return='android.net.LocalSocketAddress'/><method name='getOutputStream' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getPeerCredentials' return='android.net.Credentials'><exception name='IOException' type='java.io.IOException'/></method><method name='getReceiveBufferSize' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='getRemoteSocketAddress' return='android.net.LocalSocketAddress'/><method name='getSendBufferSize' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='getSoTimeout' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='isBound' synchronized='true' return='boolean'/><method name='isClosed' return='boolean'/><method name='isConnected' synchronized='true' return='boolean'/><method name='isInputShutdown' return='boolean'/><method name='isOutputShutdown' return='boolean'/><method name='setFileDescriptorsForSend'><parameter name='fds' type='java.io.FileDescriptor[]'/></method><method name='setReceiveBufferSize'><parameter name='size' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSendBufferSize'><parameter name='n' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSoTimeout'><parameter name='n' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='shutdownInput'><exception name='IOException' type='java.io.IOException'/></method><method name='shutdownOutput'><exception name='IOException' type='java.io.IOException'/></method></class><class name='LocalSocketAddress' extends='java.lang.Object'><constructor name='LocalSocketAddress' type='android.net.LocalSocketAddress'><parameter name='name' type='java.lang.String'/><parameter name='namespace' type='android.net.LocalSocketAddress.Namespace'/></constructor><constructor name='LocalSocketAddress' type='android.net.LocalSocketAddress'><parameter name='name' type='java.lang.String'/></constructor><method name='getName' return='java.lang.String'/><method name='getNamespace' return='android.net.LocalSocketAddress.Namespace'/></class><class name='LocalSocketAddress.Namespace' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.net.LocalSocketAddress.Namespace'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.net.LocalSocketAddress.Namespace[]'/></class><class name='MailTo' extends='java.lang.Object'><field name='MAILTO_SCHEME' final='true' static='true' value='&quot;mailto:&quot;' type='java.lang.String'/><method name='getBody' return='java.lang.String'/><method name='getCc' return='java.lang.String'/><method name='getHeaders' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/><method name='getSubject' return='java.lang.String'/><method name='getTo' return='java.lang.String'/><method name='isMailTo' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='parse' static='true' return='android.net.MailTo'><parameter name='url' type='java.lang.String'/><exception name='ParseException' type='android.net.ParseException'/></method></class><class name='NetworkInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='NetworkInfo' api_removed='3' type='android.net.NetworkInfo'><parameter name='type' type='int'/></constructor><method name='describeContents' return='int'/><method name='getDetailedState' return='android.net.NetworkInfo.DetailedState'/><method name='getExtraInfo' return='java.lang.String'/><method name='getReason' return='java.lang.String'/><method name='getState' return='android.net.NetworkInfo.State'/><method name='getType' return='int'/><method name='getTypeName' return='java.lang.String'/><method name='isAvailable' return='boolean'/><method name='isConnected' return='boolean'/><method name='isConnectedOrConnecting' return='boolean'/><method name='isFailover' return='boolean'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='getSubtype' return='int'/><method api_added='3' name='getSubtypeName' return='java.lang.String'/><method api_added='3' name='isRoaming' return='boolean'/></class><class name='NetworkInfo.DetailedState' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.net.NetworkInfo.DetailedState'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.net.NetworkInfo.DetailedState[]'/></class><class name='NetworkInfo.State' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.net.NetworkInfo.State'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.net.NetworkInfo.State[]'/></class><class name='ParseException' extends='java.lang.RuntimeException'><field name='response' type='java.lang.String'/></class><class name='Proxy' final='true' extends='java.lang.Object'><constructor name='Proxy' type='android.net.Proxy'/><field name='PROXY_CHANGE_ACTION' final='true' static='true' value='&quot;android.intent.action.PROXY_CHANGE&quot;' type='java.lang.String'/><method name='getDefaultHost' final='true' static='true' return='java.lang.String'/><method name='getDefaultPort' final='true' static='true' return='int'/><method name='getHost' final='true' static='true' return='java.lang.String'><parameter name='ctx' type='android.content.Context'/></method><method name='getPort' final='true' static='true' return='int'><parameter name='ctx' type='android.content.Context'/></method></class><class name='SSLCertificateSocketFactory' extends='javax.net.ssl.SSLSocketFactory'><constructor name='SSLCertificateSocketFactory' type='android.net.SSLCertificateSocketFactory' deprecated='8'><parameter name='socketReadTimeoutForSslHandshake' type='int'/><parameter name='handshakeTimeoutMillis' type='int'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></constructor><method name='createSocket' return='java.net.Socket'><parameter name='socket' type='java.net.Socket'/><parameter name='s' type='java.lang.String'/><parameter name='i' type='int'/><parameter name='flag' type='boolean'/><parameter name='k' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='close' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><parameter name='inaddr' type='java.net.InetAddress'/><parameter name='i' type='int'/><parameter name='inaddr2' type='java.net.InetAddress'/><parameter name='j' type='int'/><parameter name='addr' type='java.net.InetAddress'/><parameter name='port' type='int'/><parameter name='localAddr' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><parameter name='inaddr' type='java.net.InetAddress'/><parameter name='i' type='int'/><parameter name='addr' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><parameter name='s' type='java.lang.String'/><parameter name='i' type='int'/><parameter name='inaddr' type='java.net.InetAddress'/><parameter name='j' type='int'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localAddr' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><parameter name='s' type='java.lang.String'/><parameter name='i' type='int'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' static='true' return='javax.net.SocketFactory'><parameter name='socketReadTimeoutForSslHandshake' type='int'/><parameter name='handshakeTimeoutMillis' type='int'/></method><method name='getDefaultCipherSuites' return='java.lang.String[]'/><method name='getSupportedCipherSuites' return='java.lang.String[]'/><method api_added='8' name='getDefault' static='true' return='javax.net.ssl.SSLSocketFactory'><parameter name='handshakeTimeoutMillis' type='int'/><parameter name='cache' type='android.net.SSLSessionCache'/></method><method api_added='8' name='getHttpSocketFactory' static='true' return='org.apache.http.conn.ssl.SSLSocketFactory'><parameter name='handshakeTimeoutMillis' type='int'/><parameter name='cache' type='android.net.SSLSessionCache'/></method><method api_added='8' name='getInsecure' static='true' return='javax.net.ssl.SSLSocketFactory'><parameter name='handshakeTimeoutMillis' type='int'/><parameter name='cache' type='android.net.SSLSessionCache'/></method></class><class name='Uri' extends='java.lang.Object' abstract='true'><implements name='java.lang.Comparable'/><implements name='android.os.Parcelable'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='EMPTY' final='true' static='true' type='android.net.Uri'/><method name='buildUpon' abstract='true' return='android.net.Uri.Builder'/><method name='compareTo' return='int'><parameter name='other' type='android.net.Uri'/></method><method name='decode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='encode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='encode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/><parameter name='allow' type='java.lang.String'/></method><method name='fromFile' static='true' return='android.net.Uri'><parameter name='file' type='java.io.File'/></method><method name='fromParts' static='true' return='android.net.Uri'><parameter name='scheme' type='java.lang.String'/><parameter name='ssp' type='java.lang.String'/><parameter name='fragment' type='java.lang.String'/></method><method name='getAuthority' abstract='true' return='java.lang.String'/><method name='getEncodedAuthority' abstract='true' return='java.lang.String'/><method name='getEncodedFragment' abstract='true' return='java.lang.String'/><method name='getEncodedPath' abstract='true' return='java.lang.String'/><method name='getEncodedQuery' abstract='true' return='java.lang.String'/><method name='getEncodedSchemeSpecificPart' abstract='true' return='java.lang.String'/><method name='getEncodedUserInfo' abstract='true' return='java.lang.String'/><method name='getFragment' abstract='true' return='java.lang.String'/><method name='getHost' abstract='true' return='java.lang.String'/><method name='getLastPathSegment' abstract='true' return='java.lang.String'/><method name='getPath' abstract='true' return='java.lang.String'/><method name='getPathSegments' abstract='true' return='java.util.List&lt;java.lang.String&gt;'/><method name='getPort' abstract='true' return='int'/><method name='getQuery' abstract='true' return='java.lang.String'/><method name='getQueryParameter' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getQueryParameters' return='java.util.List&lt;java.lang.String&gt;'><parameter name='key' type='java.lang.String'/></method><method name='getScheme' abstract='true' return='java.lang.String'/><method name='getSchemeSpecificPart' abstract='true' return='java.lang.String'/><method name='getUserInfo' abstract='true' return='java.lang.String'/><method name='isAbsolute' return='boolean'/><method name='isHierarchical' abstract='true' return='boolean'/><method name='isOpaque' return='boolean'/><method name='isRelative' abstract='true' return='boolean'/><method name='parse' static='true' return='android.net.Uri'><parameter name='uriString' type='java.lang.String'/></method><method name='toString' abstract='true' return='java.lang.String'/><method name='withAppendedPath' static='true' return='android.net.Uri'><parameter name='baseUri' type='android.net.Uri'/><parameter name='pathSegment' type='java.lang.String'/></method><method name='writeToParcel' static='true'><parameter name='out' type='android.os.Parcel'/><parameter name='uri' type='android.net.Uri'/></method></class><class name='Uri.Builder' final='true' extends='java.lang.Object' static='true'><constructor name='Uri.Builder' type='android.net.Uri.Builder'/><method name='appendEncodedPath' return='android.net.Uri.Builder'><parameter name='newSegment' type='java.lang.String'/></method><method name='appendPath' return='android.net.Uri.Builder'><parameter name='newSegment' type='java.lang.String'/></method><method name='appendQueryParameter' return='android.net.Uri.Builder'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='authority' return='android.net.Uri.Builder'><parameter name='authority' type='java.lang.String'/></method><method name='build' return='android.net.Uri'/><method name='encodedAuthority' return='android.net.Uri.Builder'><parameter name='authority' type='java.lang.String'/></method><method name='encodedFragment' return='android.net.Uri.Builder'><parameter name='fragment' type='java.lang.String'/></method><method name='encodedOpaquePart' return='android.net.Uri.Builder'><parameter name='opaquePart' type='java.lang.String'/></method><method name='encodedPath' return='android.net.Uri.Builder'><parameter name='path' type='java.lang.String'/></method><method name='encodedQuery' return='android.net.Uri.Builder'><parameter name='query' type='java.lang.String'/></method><method name='fragment' return='android.net.Uri.Builder'><parameter name='fragment' type='java.lang.String'/></method><method name='opaquePart' return='android.net.Uri.Builder'><parameter name='opaquePart' type='java.lang.String'/></method><method name='path' return='android.net.Uri.Builder'><parameter name='path' type='java.lang.String'/></method><method name='query' return='android.net.Uri.Builder'><parameter name='query' type='java.lang.String'/></method><method name='scheme' return='android.net.Uri.Builder'><parameter name='scheme' type='java.lang.String'/></method></class><class name='UrlQuerySanitizer' extends='java.lang.Object'><constructor name='UrlQuerySanitizer' type='android.net.UrlQuerySanitizer'/><constructor name='UrlQuerySanitizer' type='android.net.UrlQuerySanitizer'><parameter name='url' type='java.lang.String'/></constructor><method name='addSanitizedEntry' visibility='protected'><parameter name='parameter' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='clear' visibility='protected'/><method name='decodeHexDigit' visibility='protected' return='int'><parameter name='c' type='char'/></method><method name='getAllButNulAndAngleBracketsLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getAllButNulLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getAllButWhitespaceLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getAllIllegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getAllowUnregisteredParamaters' return='boolean'/><method name='getAmpAndSpaceLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getAmpLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getEffectiveValueSanitizer' return='android.net.UrlQuerySanitizer.ValueSanitizer'><parameter name='parameter' type='java.lang.String'/></method><method name='getParameterList' return='java.util.List&lt;android.net.UrlQuerySanitizer.ParameterValuePair&gt;'/><method name='getParameterSet' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getPreferFirstRepeatedParameter' return='boolean'/><method name='getSpaceLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getUnregisteredParameterValueSanitizer' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getUrlAndSpaceLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getUrlLegal' final='true' static='true' return='android.net.UrlQuerySanitizer.ValueSanitizer'/><method name='getValue' return='java.lang.String'><parameter name='parameter' type='java.lang.String'/></method><method name='getValueSanitizer' return='android.net.UrlQuerySanitizer.ValueSanitizer'><parameter name='parameter' type='java.lang.String'/></method><method name='hasParameter' return='boolean'><parameter name='parameter' type='java.lang.String'/></method><method name='isHexDigit' visibility='protected' return='boolean'><parameter name='c' type='char'/></method><method name='parseEntry' visibility='protected'><parameter name='parameter' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='parseQuery'><parameter name='query' type='java.lang.String'/></method><method name='parseUrl'><parameter name='url' type='java.lang.String'/></method><method name='registerParameter'><parameter name='parameter' type='java.lang.String'/><parameter name='valueSanitizer' type='android.net.UrlQuerySanitizer.ValueSanitizer'/></method><method name='registerParameters'><parameter name='parameters' type='java.lang.String[]'/><parameter name='valueSanitizer' type='android.net.UrlQuerySanitizer.ValueSanitizer'/></method><method name='setAllowUnregisteredParamaters'><parameter name='allowUnregisteredParamaters' type='boolean'/></method><method name='setPreferFirstRepeatedParameter'><parameter name='preferFirstRepeatedParameter' type='boolean'/></method><method name='setUnregisteredParameterValueSanitizer'><parameter name='sanitizer' type='android.net.UrlQuerySanitizer.ValueSanitizer'/></method><method name='unescape' return='java.lang.String'><parameter name='string' type='java.lang.String'/></method></class><class name='UrlQuerySanitizer.IllegalCharacterValueSanitizer' extends='java.lang.Object' static='true'><implements name='android.net.UrlQuerySanitizer.ValueSanitizer'/><constructor name='UrlQuerySanitizer.IllegalCharacterValueSanitizer' type='android.net.UrlQuerySanitizer.IllegalCharacterValueSanitizer'><parameter name='flags' type='int'/></constructor><field name='ALL_BUT_NUL_AND_ANGLE_BRACKETS_LEGAL' final='true' static='true' value='1439' type='int'/><field name='ALL_BUT_NUL_LEGAL' final='true' static='true' value='1535' type='int'/><field name='ALL_BUT_WHITESPACE_LEGAL' final='true' static='true' value='1532' type='int'/><field name='ALL_ILLEGAL' final='true' static='true' value='0' type='int'/><field name='ALL_OK' final='true' static='true' value='2047' type='int'/><field name='ALL_WHITESPACE_OK' final='true' static='true' value='3' type='int'/><field name='AMP_AND_SPACE_LEGAL' final='true' static='true' value='129' type='int'/><field name='AMP_LEGAL' final='true' static='true' value='128' type='int'/><field name='AMP_OK' final='true' static='true' value='128' type='int'/><field name='DQUOTE_OK' final='true' static='true' value='8' type='int'/><field name='GT_OK' final='true' static='true' value='64' type='int'/><field name='LT_OK' final='true' static='true' value='32' type='int'/><field name='NON_7_BIT_ASCII_OK' final='true' static='true' value='4' type='int'/><field name='NUL_OK' final='true' static='true' value='512' type='int'/><field name='OTHER_WHITESPACE_OK' final='true' static='true' value='2' type='int'/><field name='PCT_OK' final='true' static='true' value='256' type='int'/><field name='SCRIPT_URL_OK' final='true' static='true' value='1024' type='int'/><field name='SPACE_LEGAL' final='true' static='true' value='1' type='int'/><field name='SPACE_OK' final='true' static='true' value='1' type='int'/><field name='SQUOTE_OK' final='true' static='true' value='16' type='int'/><field name='URL_AND_SPACE_LEGAL' final='true' static='true' value='405' type='int'/><field name='URL_LEGAL' final='true' static='true' value='404' type='int'/><method name='sanitize' return='java.lang.String'><parameter name='value' type='java.lang.String'/></method></class><class name='UrlQuerySanitizer.ParameterValuePair' extends='java.lang.Object'><constructor name='UrlQuerySanitizer.ParameterValuePair' type='android.net.UrlQuerySanitizer.ParameterValuePair'><parameter name='parameter' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><field name='mParameter' type='java.lang.String'/><field name='mValue' type='java.lang.String'/></class><class api_added='8' name='SSLSessionCache' final='true' extends='java.lang.Object'><constructor api_added='8' name='SSLSessionCache' type='android.net.SSLSessionCache'><parameter name='dir' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor api_added='8' name='SSLSessionCache' type='android.net.SSLSessionCache'><parameter name='context' type='android.content.Context'/></constructor></class><class api_added='8' name='TrafficStats' extends='java.lang.Object'><constructor api_added='8' name='TrafficStats' type='android.net.TrafficStats'/><field api_added='8' name='UNSUPPORTED' final='true' static='true' value='-1' type='int'/><method api_added='8' name='getMobileRxBytes' native='true' static='true' return='long'/><method api_added='8' name='getMobileRxPackets' native='true' static='true' return='long'/><method api_added='8' name='getMobileTxBytes' native='true' static='true' return='long'/><method api_added='8' name='getMobileTxPackets' native='true' static='true' return='long'/><method api_added='8' name='getTotalRxBytes' native='true' static='true' return='long'/><method api_added='8' name='getTotalRxPackets' native='true' static='true' return='long'/><method api_added='8' name='getTotalTxBytes' native='true' static='true' return='long'/><method api_added='8' name='getTotalTxPackets' native='true' static='true' return='long'/><method api_added='8' name='getUidRxBytes' native='true' static='true' return='long'><parameter name='uid' type='int'/></method><method api_added='8' name='getUidTxBytes' native='true' static='true' return='long'><parameter name='uid' type='int'/></method></class><interface name='UrlQuerySanitizer.ValueSanitizer' abstract='true' static='true'><method name='sanitize' abstract='true' return='java.lang.String'><parameter name='value' type='java.lang.String'/></method></interface></package><package name='android.net.http'><class name='SslCertificate' extends='java.lang.Object'><constructor name='SslCertificate' type='android.net.http.SslCertificate'><parameter name='issuedTo' type='java.lang.String'/><parameter name='issuedBy' type='java.lang.String'/><parameter name='validNotBefore' type='java.lang.String'/><parameter name='validNotAfter' type='java.lang.String'/></constructor><constructor name='SslCertificate' type='android.net.http.SslCertificate'><parameter name='certificate' type='java.security.cert.X509Certificate'/></constructor><method name='getIssuedBy' return='android.net.http.SslCertificate.DName'/><method name='getIssuedTo' return='android.net.http.SslCertificate.DName'/><method name='getValidNotAfter' deprecated='8' return='java.lang.String'/><method name='getValidNotBefore' deprecated='8' return='java.lang.String'/><method name='restoreState' static='true' return='android.net.http.SslCertificate'><parameter name='bundle' type='android.os.Bundle'/></method><method name='saveState' static='true' return='android.os.Bundle'><parameter name='certificate' type='android.net.http.SslCertificate'/></method><method api_added='8' name='getValidNotAfterDate' return='java.util.Date'/><method api_added='8' name='getValidNotBeforeDate' return='java.util.Date'/></class><class name='SslCertificate.DName' extends='java.lang.Object'><constructor name='SslCertificate.DName' type='android.net.http.SslCertificate.DName'><parameter name='dName' type='java.lang.String'/></constructor><method name='getCName' return='java.lang.String'/><method name='getDName' return='java.lang.String'/><method name='getOName' return='java.lang.String'/><method name='getUName' return='java.lang.String'/></class><class api_added='8' name='AndroidHttpClient' final='true' extends='java.lang.Object'><implements name='org.apache.http.client.HttpClient'/><field api_added='8' name='DEFAULT_SYNC_MIN_GZIP_BYTES' static='true' type='long'/><method api_added='8' name='close'/><method api_added='8' name='disableCurlLogging'/><method api_added='8' name='enableCurlLogging'><parameter name='name' type='java.lang.String'/><parameter name='level' type='int'/></method><method api_added='8' name='execute' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='execute' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='getCompressedEntity' static='true' return='org.apache.http.entity.AbstractHttpEntity'><parameter name='data' type='byte[]'/><parameter name='resolver' type='android.content.ContentResolver'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='getConnectionManager' return='org.apache.http.conn.ClientConnectionManager'/><method api_added='8' name='getMinGzipSize' static='true' return='long'><parameter name='resolver' type='android.content.ContentResolver'/></method><method api_added='8' name='getParams' return='org.apache.http.params.HttpParams'/><method api_added='8' name='getUngzippedContent' static='true' return='java.io.InputStream'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='modifyRequestToAcceptGzipResponse' static='true'><parameter name='request' type='org.apache.http.HttpRequest'/></method><method api_added='8' name='newInstance' static='true' return='android.net.http.AndroidHttpClient'><parameter name='userAgent' type='java.lang.String'/><parameter name='context' type='android.content.Context'/></method><method api_added='8' name='newInstance' static='true' return='android.net.http.AndroidHttpClient'><parameter name='userAgent' type='java.lang.String'/></method><method api_added='8' name='parseDate' static='true' return='long'><parameter name='dateString' type='java.lang.String'/></method></class><class api_added='8' name='SslError' extends='java.lang.Object'><constructor api_added='8' name='SslError' type='android.net.http.SslError'><parameter name='error' type='int'/><parameter name='certificate' type='android.net.http.SslCertificate'/></constructor><constructor api_added='8' name='SslError' type='android.net.http.SslError'><parameter name='error' type='int'/><parameter name='certificate' type='java.security.cert.X509Certificate'/></constructor><field api_added='8' name='SSL_EXPIRED' final='true' static='true' value='1' type='int'/><field api_added='8' name='SSL_IDMISMATCH' final='true' static='true' value='2' type='int'/><field api_added='8' name='SSL_MAX_ERROR' final='true' static='true' value='4' type='int'/><field api_added='8' name='SSL_NOTYETVALID' final='true' static='true' value='0' type='int'/><field api_added='8' name='SSL_UNTRUSTED' final='true' static='true' value='3' type='int'/><method api_added='8' name='addError' return='boolean'><parameter name='error' type='int'/></method><method api_added='8' name='getCertificate' return='android.net.http.SslCertificate'/><method api_added='8' name='getPrimaryError' return='int'/><method api_added='8' name='hasError' return='boolean'><parameter name='error' type='int'/></method></class></package><package name='android.net.wifi'><class name='ScanResult' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='BSSID' type='java.lang.String'/><field name='SSID' type='java.lang.String'/><field name='capabilities' type='java.lang.String'/><field name='frequency' type='int'/><field name='level' type='int'/><method name='describeContents' return='int'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='SupplicantState' final='true' extends='java.lang.Enum'><implements name='android.os.Parcelable'/><method name='describeContents' return='int'/><method name='isValidState' static='true' return='boolean'><parameter name='state' type='android.net.wifi.SupplicantState'/></method><method name='valueOf' static='true' return='android.net.wifi.SupplicantState'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.net.wifi.SupplicantState[]'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='WifiConfiguration' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='WifiConfiguration' type='android.net.wifi.WifiConfiguration'/><field name='BSSID' type='java.lang.String'/><field name='SSID' type='java.lang.String'/><field name='allowedAuthAlgorithms' type='java.util.BitSet'/><field name='allowedGroupCiphers' type='java.util.BitSet'/><field name='allowedKeyManagement' type='java.util.BitSet'/><field name='allowedPairwiseCiphers' type='java.util.BitSet'/><field name='allowedProtocols' type='java.util.BitSet'/><field name='hiddenSSID' type='boolean'/><field name='networkId' type='int'/><field name='preSharedKey' type='java.lang.String'/><field name='priority' type='int'/><field name='status' type='int'/><field name='wepKeys' value='null' type='java.lang.String[]'/><field name='wepTxKeyIndex' type='int'/><method name='describeContents' return='int'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='WifiConfiguration.AuthAlgorithm' extends='java.lang.Object' static='true'><field name='LEAP' final='true' static='true' value='2' type='int'/><field name='OPEN' final='true' static='true' value='0' type='int'/><field name='SHARED' final='true' static='true' value='1' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/><field name='varName' final='true' static='true' value='&quot;auth_alg&quot;' type='java.lang.String'/></class><class name='WifiConfiguration.GroupCipher' extends='java.lang.Object' static='true'><field name='CCMP' final='true' static='true' value='3' type='int'/><field name='TKIP' final='true' static='true' value='2' type='int'/><field name='WEP104' final='true' static='true' value='1' type='int'/><field name='WEP40' final='true' static='true' value='0' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/><field name='varName' final='true' static='true' value='&quot;group&quot;' type='java.lang.String'/></class><class name='WifiConfiguration.KeyMgmt' extends='java.lang.Object' static='true'><field name='IEEE8021X' final='true' static='true' value='3' type='int'/><field name='NONE' final='true' static='true' value='0' type='int'/><field name='WPA_EAP' final='true' static='true' value='2' type='int'/><field name='WPA_PSK' final='true' static='true' value='1' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/><field name='varName' final='true' static='true' value='&quot;key_mgmt&quot;' type='java.lang.String'/></class><class name='WifiConfiguration.PairwiseCipher' extends='java.lang.Object' static='true'><field name='CCMP' final='true' static='true' value='2' type='int'/><field name='NONE' final='true' static='true' value='0' type='int'/><field name='TKIP' final='true' static='true' value='1' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/><field name='varName' final='true' static='true' value='&quot;pairwise&quot;' type='java.lang.String'/></class><class name='WifiConfiguration.Protocol' extends='java.lang.Object' static='true'><field name='RSN' final='true' static='true' value='1' type='int'/><field name='WPA' final='true' static='true' value='0' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/><field name='varName' final='true' static='true' value='&quot;proto&quot;' type='java.lang.String'/></class><class name='WifiConfiguration.Status' extends='java.lang.Object' static='true'><field name='CURRENT' final='true' static='true' value='0' type='int'/><field name='DISABLED' final='true' static='true' value='1' type='int'/><field name='ENABLED' final='true' static='true' value='2' type='int'/><field name='strings' final='true' static='true' value='null' type='java.lang.String[]'/></class><class name='WifiInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='LINK_SPEED_UNITS' final='true' static='true' value='&quot;Mbps&quot;' type='java.lang.String'/><method name='describeContents' return='int'/><method name='getBSSID' return='java.lang.String'/><method name='getDetailedStateOf' static='true' return='android.net.NetworkInfo.DetailedState'><parameter name='suppState' type='android.net.wifi.SupplicantState'/></method><method name='getHiddenSSID' return='boolean'/><method name='getIpAddress' return='int'/><method name='getLinkSpeed' return='int'/><method name='getMacAddress' return='java.lang.String'/><method name='getNetworkId' return='int'/><method name='getRssi' return='int'/><method name='getSSID' return='java.lang.String'/><method name='getSupplicantState' return='android.net.wifi.SupplicantState'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='WifiManager' extends='java.lang.Object'><field name='ACTION_PICK_WIFI_NETWORK' final='true' static='true' value='&quot;android.net.wifi.PICK_WIFI_NETWORK&quot;' type='java.lang.String'/><field name='ERROR_AUTHENTICATING' final='true' static='true' value='1' type='int'/><field name='EXTRA_BSSID' final='true' static='true' value='&quot;bssid&quot;' type='java.lang.String'/><field name='EXTRA_NETWORK_INFO' final='true' static='true' value='&quot;networkInfo&quot;' type='java.lang.String'/><field name='EXTRA_NEW_RSSI' final='true' static='true' value='&quot;newRssi&quot;' type='java.lang.String'/><field name='EXTRA_NEW_STATE' final='true' static='true' value='&quot;newState&quot;' type='java.lang.String'/><field name='EXTRA_PREVIOUS_WIFI_STATE' final='true' static='true' value='&quot;previous_wifi_state&quot;' type='java.lang.String'/><field name='EXTRA_SUPPLICANT_CONNECTED' final='true' static='true' value='&quot;connected&quot;' type='java.lang.String'/><field name='EXTRA_SUPPLICANT_ERROR' final='true' static='true' value='&quot;supplicantError&quot;' type='java.lang.String'/><field name='EXTRA_WIFI_STATE' final='true' static='true' value='&quot;wifi_state&quot;' type='java.lang.String'/><field name='NETWORK_IDS_CHANGED_ACTION' final='true' static='true' value='&quot;android.net.wifi.NETWORK_IDS_CHANGED&quot;' type='java.lang.String'/><field name='NETWORK_STATE_CHANGED_ACTION' final='true' static='true' value='&quot;android.net.wifi.STATE_CHANGE&quot;' type='java.lang.String'/><field name='RSSI_CHANGED_ACTION' final='true' static='true' value='&quot;android.net.wifi.RSSI_CHANGED&quot;' type='java.lang.String'/><field name='SCAN_RESULTS_AVAILABLE_ACTION' final='true' static='true' value='&quot;android.net.wifi.SCAN_RESULTS&quot;' type='java.lang.String'/><field name='SUPPLICANT_CONNECTION_CHANGE_ACTION' final='true' static='true' value='&quot;android.net.wifi.supplicant.CONNECTION_CHANGE&quot;' type='java.lang.String'/><field name='SUPPLICANT_STATE_CHANGED_ACTION' final='true' static='true' value='&quot;android.net.wifi.supplicant.STATE_CHANGE&quot;' type='java.lang.String'/><field name='WIFI_STATE_CHANGED_ACTION' final='true' static='true' value='&quot;android.net.wifi.WIFI_STATE_CHANGED&quot;' type='java.lang.String'/><field name='WIFI_STATE_DISABLED' final='true' static='true' value='1' type='int'/><field name='WIFI_STATE_DISABLING' final='true' static='true' value='0' type='int'/><field name='WIFI_STATE_ENABLED' final='true' static='true' value='3' type='int'/><field name='WIFI_STATE_ENABLING' final='true' static='true' value='2' type='int'/><field name='WIFI_STATE_UNKNOWN' final='true' static='true' value='4' type='int'/><field api_added='3' name='WIFI_MODE_FULL' final='true' static='true' value='1' type='int'/><field api_added='3' name='WIFI_MODE_SCAN_ONLY' final='true' static='true' value='2' type='int'/><method name='addNetwork' return='int'><parameter name='config' type='android.net.wifi.WifiConfiguration'/></method><method name='calculateSignalLevel' static='true' return='int'><parameter name='rssi' type='int'/><parameter name='numLevels' type='int'/></method><method name='compareSignalLevel' static='true' return='int'><parameter name='rssiA' type='int'/><parameter name='rssiB' type='int'/></method><method name='createWifiLock' return='android.net.wifi.WifiManager.WifiLock'><parameter name='tag' type='java.lang.String'/></method><method name='disableNetwork' return='boolean'><parameter name='netId' type='int'/></method><method name='disconnect' return='boolean'/><method name='enableNetwork' return='boolean'><parameter name='netId' type='int'/><parameter name='disableOthers' type='boolean'/></method><method name='getConfiguredNetworks' return='java.util.List&lt;android.net.wifi.WifiConfiguration&gt;'/><method name='getConnectionInfo' return='android.net.wifi.WifiInfo'/><method name='getDhcpInfo' return='android.net.DhcpInfo'/><method name='getScanResults' return='java.util.List&lt;android.net.wifi.ScanResult&gt;'/><method name='getWifiState' return='int'/><method name='isWifiEnabled' return='boolean'/><method name='pingSupplicant' return='boolean'/><method name='reassociate' return='boolean'/><method name='reconnect' return='boolean'/><method name='removeNetwork' return='boolean'><parameter name='netId' type='int'/></method><method name='saveConfiguration' return='boolean'/><method name='setWifiEnabled' return='boolean'><parameter name='enabled' type='boolean'/></method><method name='startScan' return='boolean'/><method name='updateNetwork' return='int'><parameter name='config' type='android.net.wifi.WifiConfiguration'/></method><method api_added='3' name='createWifiLock' return='android.net.wifi.WifiManager.WifiLock'><parameter name='lockType' type='int'/><parameter name='tag' type='java.lang.String'/></method><method api_added='4' name='createMulticastLock' return='android.net.wifi.WifiManager.MulticastLock'><parameter name='tag' type='java.lang.String'/></method></class><class name='WifiManager.WifiLock' extends='java.lang.Object'><method name='acquire'/><method name='isHeld' return='boolean'/><method name='release'/><method name='setReferenceCounted'><parameter name='refCounted' type='boolean'/></method></class><class api_added='4' name='WifiManager.MulticastLock' extends='java.lang.Object'><method api_added='4' name='acquire'/><method api_added='4' name='isHeld' return='boolean'/><method api_added='4' name='release'/><method api_added='4' name='setReferenceCounted'><parameter name='refCounted' type='boolean'/></method></class></package><package name='android.opengl'><class name='GLDebugHelper' extends='java.lang.Object'><constructor name='GLDebugHelper' type='android.opengl.GLDebugHelper'/><field name='CONFIG_CHECK_GL_ERROR' final='true' static='true' value='1' type='int'/><field name='CONFIG_CHECK_THREAD' final='true' static='true' value='2' type='int'/><field name='CONFIG_LOG_ARGUMENT_NAMES' final='true' static='true' value='4' type='int'/><field name='ERROR_WRONG_THREAD' final='true' static='true' value='28672' type='int'/><method name='wrap' static='true' return='javax.microedition.khronos.opengles.GL'><parameter name='gl' type='javax.microedition.khronos.opengles.GL'/><parameter name='configFlags' type='int'/><parameter name='log' type='java.io.Writer'/></method><method name='wrap' static='true' return='javax.microedition.khronos.egl.EGL'><parameter name='egl' type='javax.microedition.khronos.egl.EGL'/><parameter name='configFlags' type='int'/><parameter name='log' type='java.io.Writer'/></method></class><class name='GLException' extends='java.lang.RuntimeException'><constructor name='GLException' type='android.opengl.GLException'><parameter name='error' type='int'/></constructor><constructor name='GLException' type='android.opengl.GLException'><parameter name='error' type='int'/><parameter name='string' type='java.lang.String'/></constructor></class><class name='GLU' extends='java.lang.Object'><constructor name='GLU' type='android.opengl.GLU'/><method name='gluErrorString' static='true' return='java.lang.String'><parameter name='error' type='int'/></method><method name='gluLookAt' static='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/><parameter name='eyeX' type='float'/><parameter name='eyeY' type='float'/><parameter name='eyeZ' type='float'/><parameter name='centerX' type='float'/><parameter name='centerY' type='float'/><parameter name='centerZ' type='float'/><parameter name='upX' type='float'/><parameter name='upY' type='float'/><parameter name='upZ' type='float'/></method><method name='gluOrtho2D' static='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/></method><method name='gluPerspective' static='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/><parameter name='fovy' type='float'/><parameter name='aspect' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method name='gluProject' static='true' return='int'><parameter name='objX' type='float'/><parameter name='objY' type='float'/><parameter name='objZ' type='float'/><parameter name='model' type='float[]'/><parameter name='modelOffset' type='int'/><parameter name='project' type='float[]'/><parameter name='projectOffset' type='int'/><parameter name='view' type='int[]'/><parameter name='viewOffset' type='int'/><parameter name='win' type='float[]'/><parameter name='winOffset' type='int'/></method><method name='gluUnProject' static='true' return='int'><parameter name='winX' type='float'/><parameter name='winY' type='float'/><parameter name='winZ' type='float'/><parameter name='model' type='float[]'/><parameter name='modelOffset' type='int'/><parameter name='project' type='float[]'/><parameter name='projectOffset' type='int'/><parameter name='view' type='int[]'/><parameter name='viewOffset' type='int'/><parameter name='obj' type='float[]'/><parameter name='objOffset' type='int'/></method></class><class name='GLUtils' final='true' extends='java.lang.Object'><method name='getInternalFormat' static='true' return='int'><parameter name='bitmap' type='android.graphics.Bitmap'/></method><method name='getType' static='true' return='int'><parameter name='bitmap' type='android.graphics.Bitmap'/></method><method name='texImage2D' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='border' type='int'/></method><method name='texImage2D' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='type' type='int'/><parameter name='border' type='int'/></method><method name='texImage2D' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='border' type='int'/></method><method name='texSubImage2D' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/></method><method name='texSubImage2D' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/><parameter name='format' type='int'/><parameter name='type' type='int'/></method></class><class name='Matrix' extends='java.lang.Object'><constructor name='Matrix' type='android.opengl.Matrix'/><method name='frustumM' static='true'><parameter name='m' type='float[]'/><parameter name='offset' type='int'/><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='near' type='float'/><parameter name='far' type='float'/></method><method name='invertM' static='true' return='boolean'><parameter name='mInv' type='float[]'/><parameter name='mInvOffset' type='int'/><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/></method><method name='length' static='true' return='float'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='multiplyMM' native='true' static='true'><parameter name='result' type='float[]'/><parameter name='resultOffset' type='int'/><parameter name='lhs' type='float[]'/><parameter name='lhsOffset' type='int'/><parameter name='rhs' type='float[]'/><parameter name='rhsOffset' type='int'/></method><method name='multiplyMV' native='true' static='true'><parameter name='resultVec' type='float[]'/><parameter name='resultVecOffset' type='int'/><parameter name='lhsMat' type='float[]'/><parameter name='lhsMatOffset' type='int'/><parameter name='rhsVec' type='float[]'/><parameter name='rhsVecOffset' type='int'/></method><method name='orthoM' static='true'><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='near' type='float'/><parameter name='far' type='float'/></method><method name='rotateM' static='true'><parameter name='rm' type='float[]'/><parameter name='rmOffset' type='int'/><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='a' type='float'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='rotateM' static='true'><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='a' type='float'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='scaleM' static='true'><parameter name='sm' type='float[]'/><parameter name='smOffset' type='int'/><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='scaleM' static='true'><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='setIdentityM' static='true'><parameter name='sm' type='float[]'/><parameter name='smOffset' type='int'/></method><method name='setRotateEulerM' static='true'><parameter name='rm' type='float[]'/><parameter name='rmOffset' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='setRotateM' static='true'><parameter name='rm' type='float[]'/><parameter name='rmOffset' type='int'/><parameter name='a' type='float'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='translateM' static='true'><parameter name='tm' type='float[]'/><parameter name='tmOffset' type='int'/><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='translateM' static='true'><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='transposeM' static='true'><parameter name='mTrans' type='float[]'/><parameter name='mTransOffset' type='int'/><parameter name='m' type='float[]'/><parameter name='mOffset' type='int'/></method><method api_added='8' name='setLookAtM' static='true'><parameter name='rm' type='float[]'/><parameter name='rmOffset' type='int'/><parameter name='eyeX' type='float'/><parameter name='eyeY' type='float'/><parameter name='eyeZ' type='float'/><parameter name='centerX' type='float'/><parameter name='centerY' type='float'/><parameter name='centerZ' type='float'/><parameter name='upX' type='float'/><parameter name='upY' type='float'/><parameter name='upZ' type='float'/></method></class><class api_added='3' name='GLSurfaceView' extends='android.view.SurfaceView'><implements name='android.view.SurfaceHolder.Callback'/><constructor api_added='3' name='GLSurfaceView' type='android.opengl.GLSurfaceView'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='3' name='GLSurfaceView' type='android.opengl.GLSurfaceView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><field api_added='3' name='DEBUG_CHECK_GL_ERROR' final='true' static='true' value='1' type='int'/><field api_added='3' name='DEBUG_LOG_GL_CALLS' final='true' static='true' value='2' type='int'/><field api_added='3' name='RENDERMODE_CONTINUOUSLY' final='true' static='true' value='1' type='int'/><field api_added='3' name='RENDERMODE_WHEN_DIRTY' final='true' static='true' value='0' type='int'/><method api_added='3' name='getDebugFlags' return='int'/><method api_added='3' name='getRenderMode' return='int'/><method api_added='3' name='onPause'/><method api_added='3' name='onResume'/><method api_added='3' name='queueEvent'><parameter name='r' type='java.lang.Runnable'/></method><method api_added='3' name='requestRender'/><method api_added='3' name='setDebugFlags'><parameter name='debugFlags' type='int'/></method><method api_added='3' name='setEGLConfigChooser'><parameter name='configChooser' type='android.opengl.GLSurfaceView.EGLConfigChooser'/></method><method api_added='3' name='setEGLConfigChooser'><parameter name='needDepth' type='boolean'/></method><method api_added='3' name='setEGLConfigChooser'><parameter name='redSize' type='int'/><parameter name='greenSize' type='int'/><parameter name='blueSize' type='int'/><parameter name='alphaSize' type='int'/><parameter name='depthSize' type='int'/><parameter name='stencilSize' type='int'/></method><method api_added='3' name='setGLWrapper'><parameter name='glWrapper' type='android.opengl.GLSurfaceView.GLWrapper'/></method><method api_added='3' name='setRenderMode'><parameter name='renderMode' type='int'/></method><method api_added='3' name='setRenderer'><parameter name='renderer' type='android.opengl.GLSurfaceView.Renderer'/></method><method api_added='3' name='surfaceChanged'><parameter name='holder' type='android.view.SurfaceHolder'/><parameter name='format' type='int'/><parameter name='w' type='int'/><parameter name='h' type='int'/></method><method api_added='3' name='surfaceCreated'><parameter name='holder' type='android.view.SurfaceHolder'/></method><method api_added='3' name='surfaceDestroyed'><parameter name='holder' type='android.view.SurfaceHolder'/></method><method api_added='5' name='setEGLContextFactory'><parameter name='factory' type='android.opengl.GLSurfaceView.EGLContextFactory'/></method><method api_added='5' name='setEGLWindowSurfaceFactory'><parameter name='factory' type='android.opengl.GLSurfaceView.EGLWindowSurfaceFactory'/></method><method api_added='8' name='setEGLContextClientVersion'><parameter name='version' type='int'/></method></class><class api_added='3' name='Visibility' extends='java.lang.Object'><constructor api_added='3' name='Visibility' type='android.opengl.Visibility'/><method api_added='3' name='computeBoundingSphere' native='true' static='true'><parameter name='positions' type='float[]'/><parameter name='positionsOffset' type='int'/><parameter name='positionsCount' type='int'/><parameter name='sphere' type='float[]'/><parameter name='sphereOffset' type='int'/></method><method api_added='3' name='frustumCullSpheres' native='true' static='true' return='int'><parameter name='mvp' type='float[]'/><parameter name='mvpOffset' type='int'/><parameter name='spheres' type='float[]'/><parameter name='spheresOffset' type='int'/><parameter name='spheresCount' type='int'/><parameter name='results' type='int[]'/><parameter name='resultsOffset' type='int'/><parameter name='resultsCapacity' type='int'/></method><method api_added='3' name='visibilityTest' native='true' static='true' return='int'><parameter name='ws' type='float[]'/><parameter name='wsOffset' type='int'/><parameter name='positions' type='float[]'/><parameter name='positionsOffset' type='int'/><parameter name='indices' type='char[]'/><parameter name='indicesOffset' type='int'/><parameter name='indexCount' type='int'/></method></class><class api_added='4' name='GLES10' extends='java.lang.Object'><constructor api_added='4' name='GLES10' type='android.opengl.GLES10'/><field api_added='4' name='GL_ADD' final='true' static='true' value='260' type='int'/><field api_added='4' name='GL_ALIASED_LINE_WIDTH_RANGE' final='true' static='true' value='33902' type='int'/><field api_added='4' name='GL_ALIASED_POINT_SIZE_RANGE' final='true' static='true' value='33901' type='int'/><field api_added='4' name='GL_ALPHA' final='true' static='true' value='6406' type='int'/><field api_added='4' name='GL_ALPHA_BITS' final='true' static='true' value='3413' type='int'/><field api_added='4' name='GL_ALPHA_TEST' final='true' static='true' value='3008' type='int'/><field api_added='4' name='GL_ALWAYS' final='true' static='true' value='519' type='int'/><field api_added='4' name='GL_AMBIENT' final='true' static='true' value='4608' type='int'/><field api_added='4' name='GL_AMBIENT_AND_DIFFUSE' final='true' static='true' value='5634' type='int'/><field api_added='4' name='GL_AND' final='true' static='true' value='5377' type='int'/><field api_added='4' name='GL_AND_INVERTED' final='true' static='true' value='5380' type='int'/><field api_added='4' name='GL_AND_REVERSE' final='true' static='true' value='5378' type='int'/><field api_added='4' name='GL_BACK' final='true' static='true' value='1029' type='int'/><field api_added='4' name='GL_BLEND' final='true' static='true' value='3042' type='int'/><field api_added='4' name='GL_BLUE_BITS' final='true' static='true' value='3412' type='int'/><field api_added='4' name='GL_BYTE' final='true' static='true' value='5120' type='int'/><field api_added='4' name='GL_CCW' final='true' static='true' value='2305' type='int'/><field api_added='4' name='GL_CLAMP_TO_EDGE' final='true' static='true' value='33071' type='int'/><field api_added='4' name='GL_CLEAR' final='true' static='true' value='5376' type='int'/><field api_added='4' name='GL_COLOR_ARRAY' final='true' static='true' value='32886' type='int'/><field api_added='4' name='GL_COLOR_BUFFER_BIT' final='true' static='true' value='16384' type='int'/><field api_added='4' name='GL_COLOR_LOGIC_OP' final='true' static='true' value='3058' type='int'/><field api_added='4' name='GL_COLOR_MATERIAL' final='true' static='true' value='2903' type='int'/><field api_added='4' name='GL_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34467' type='int'/><field api_added='4' name='GL_CONSTANT_ATTENUATION' final='true' static='true' value='4615' type='int'/><field api_added='4' name='GL_COPY' final='true' static='true' value='5379' type='int'/><field api_added='4' name='GL_COPY_INVERTED' final='true' static='true' value='5388' type='int'/><field api_added='4' name='GL_CULL_FACE' final='true' static='true' value='2884' type='int'/><field api_added='4' name='GL_CW' final='true' static='true' value='2304' type='int'/><field api_added='4' name='GL_DECAL' final='true' static='true' value='8449' type='int'/><field api_added='4' name='GL_DECR' final='true' static='true' value='7683' type='int'/><field api_added='4' name='GL_DEPTH_BITS' final='true' static='true' value='3414' type='int'/><field api_added='4' name='GL_DEPTH_BUFFER_BIT' final='true' static='true' value='256' type='int'/><field api_added='4' name='GL_DEPTH_TEST' final='true' static='true' value='2929' type='int'/><field api_added='4' name='GL_DIFFUSE' final='true' static='true' value='4609' type='int'/><field api_added='4' name='GL_DITHER' final='true' static='true' value='3024' type='int'/><field api_added='4' name='GL_DONT_CARE' final='true' static='true' value='4352' type='int'/><field api_added='4' name='GL_DST_ALPHA' final='true' static='true' value='772' type='int'/><field api_added='4' name='GL_DST_COLOR' final='true' static='true' value='774' type='int'/><field api_added='4' name='GL_EMISSION' final='true' static='true' value='5632' type='int'/><field api_added='4' name='GL_EQUAL' final='true' static='true' value='514' type='int'/><field api_added='4' name='GL_EQUIV' final='true' static='true' value='5385' type='int'/><field api_added='4' name='GL_EXP' final='true' static='true' value='2048' type='int'/><field api_added='4' name='GL_EXP2' final='true' static='true' value='2049' type='int'/><field api_added='4' name='GL_EXTENSIONS' final='true' static='true' value='7939' type='int'/><field api_added='4' name='GL_FALSE' final='true' static='true' value='0' type='int'/><field api_added='4' name='GL_FASTEST' final='true' static='true' value='4353' type='int'/><field api_added='4' name='GL_FIXED' final='true' static='true' value='5132' type='int'/><field api_added='4' name='GL_FLAT' final='true' static='true' value='7424' type='int'/><field api_added='4' name='GL_FLOAT' final='true' static='true' value='5126' type='int'/><field api_added='4' name='GL_FOG' final='true' static='true' value='2912' type='int'/><field api_added='4' name='GL_FOG_COLOR' final='true' static='true' value='2918' type='int'/><field api_added='4' name='GL_FOG_DENSITY' final='true' static='true' value='2914' type='int'/><field api_added='4' name='GL_FOG_END' final='true' static='true' value='2916' type='int'/><field api_added='4' name='GL_FOG_HINT' final='true' static='true' value='3156' type='int'/><field api_added='4' name='GL_FOG_MODE' final='true' static='true' value='2917' type='int'/><field api_added='4' name='GL_FOG_START' final='true' static='true' value='2915' type='int'/><field api_added='4' name='GL_FRONT' final='true' static='true' value='1028' type='int'/><field api_added='4' name='GL_FRONT_AND_BACK' final='true' static='true' value='1032' type='int'/><field api_added='4' name='GL_GEQUAL' final='true' static='true' value='518' type='int'/><field api_added='4' name='GL_GREATER' final='true' static='true' value='516' type='int'/><field api_added='4' name='GL_GREEN_BITS' final='true' static='true' value='3411' type='int'/><field api_added='4' name='GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES' final='true' static='true' value='35739' type='int'/><field api_added='4' name='GL_IMPLEMENTATION_COLOR_READ_TYPE_OES' final='true' static='true' value='35738' type='int'/><field api_added='4' name='GL_INCR' final='true' static='true' value='7682' type='int'/><field api_added='4' name='GL_INVALID_ENUM' final='true' static='true' value='1280' type='int'/><field api_added='4' name='GL_INVALID_OPERATION' final='true' static='true' value='1282' type='int'/><field api_added='4' name='GL_INVALID_VALUE' final='true' static='true' value='1281' type='int'/><field api_added='4' name='GL_INVERT' final='true' static='true' value='5386' type='int'/><field api_added='4' name='GL_KEEP' final='true' static='true' value='7680' type='int'/><field api_added='4' name='GL_LEQUAL' final='true' static='true' value='515' type='int'/><field api_added='4' name='GL_LESS' final='true' static='true' value='513' type='int'/><field api_added='4' name='GL_LIGHT0' final='true' static='true' value='16384' type='int'/><field api_added='4' name='GL_LIGHT1' final='true' static='true' value='16385' type='int'/><field api_added='4' name='GL_LIGHT2' final='true' static='true' value='16386' type='int'/><field api_added='4' name='GL_LIGHT3' final='true' static='true' value='16387' type='int'/><field api_added='4' name='GL_LIGHT4' final='true' static='true' value='16388' type='int'/><field api_added='4' name='GL_LIGHT5' final='true' static='true' value='16389' type='int'/><field api_added='4' name='GL_LIGHT6' final='true' static='true' value='16390' type='int'/><field api_added='4' name='GL_LIGHT7' final='true' static='true' value='16391' type='int'/><field api_added='4' name='GL_LIGHTING' final='true' static='true' value='2896' type='int'/><field api_added='4' name='GL_LIGHT_MODEL_AMBIENT' final='true' static='true' value='2899' type='int'/><field api_added='4' name='GL_LIGHT_MODEL_TWO_SIDE' final='true' static='true' value='2898' type='int'/><field api_added='4' name='GL_LINEAR' final='true' static='true' value='9729' type='int'/><field api_added='4' name='GL_LINEAR_ATTENUATION' final='true' static='true' value='4616' type='int'/><field api_added='4' name='GL_LINEAR_MIPMAP_LINEAR' final='true' static='true' value='9987' type='int'/><field api_added='4' name='GL_LINEAR_MIPMAP_NEAREST' final='true' static='true' value='9985' type='int'/><field api_added='4' name='GL_LINES' final='true' static='true' value='1' type='int'/><field api_added='4' name='GL_LINE_LOOP' final='true' static='true' value='2' type='int'/><field api_added='4' name='GL_LINE_SMOOTH' final='true' static='true' value='2848' type='int'/><field api_added='4' name='GL_LINE_SMOOTH_HINT' final='true' static='true' value='3154' type='int'/><field api_added='4' name='GL_LINE_STRIP' final='true' static='true' value='3' type='int'/><field api_added='4' name='GL_LUMINANCE' final='true' static='true' value='6409' type='int'/><field api_added='4' name='GL_LUMINANCE_ALPHA' final='true' static='true' value='6410' type='int'/><field api_added='4' name='GL_MAX_ELEMENTS_INDICES' final='true' static='true' value='33001' type='int'/><field api_added='4' name='GL_MAX_ELEMENTS_VERTICES' final='true' static='true' value='33000' type='int'/><field api_added='4' name='GL_MAX_LIGHTS' final='true' static='true' value='3377' type='int'/><field api_added='4' name='GL_MAX_MODELVIEW_STACK_DEPTH' final='true' static='true' value='3382' type='int'/><field api_added='4' name='GL_MAX_PROJECTION_STACK_DEPTH' final='true' static='true' value='3384' type='int'/><field api_added='4' name='GL_MAX_TEXTURE_SIZE' final='true' static='true' value='3379' type='int'/><field api_added='4' name='GL_MAX_TEXTURE_STACK_DEPTH' final='true' static='true' value='3385' type='int'/><field api_added='4' name='GL_MAX_TEXTURE_UNITS' final='true' static='true' value='34018' type='int'/><field api_added='4' name='GL_MAX_VIEWPORT_DIMS' final='true' static='true' value='3386' type='int'/><field api_added='4' name='GL_MODELVIEW' final='true' static='true' value='5888' type='int'/><field api_added='4' name='GL_MODULATE' final='true' static='true' value='8448' type='int'/><field api_added='4' name='GL_MULTISAMPLE' final='true' static='true' value='32925' type='int'/><field api_added='4' name='GL_NAND' final='true' static='true' value='5390' type='int'/><field api_added='4' name='GL_NEAREST' final='true' static='true' value='9728' type='int'/><field api_added='4' name='GL_NEAREST_MIPMAP_LINEAR' final='true' static='true' value='9986' type='int'/><field api_added='4' name='GL_NEAREST_MIPMAP_NEAREST' final='true' static='true' value='9984' type='int'/><field api_added='4' name='GL_NEVER' final='true' static='true' value='512' type='int'/><field api_added='4' name='GL_NICEST' final='true' static='true' value='4354' type='int'/><field api_added='4' name='GL_NOOP' final='true' static='true' value='5381' type='int'/><field api_added='4' name='GL_NOR' final='true' static='true' value='5384' type='int'/><field api_added='4' name='GL_NORMALIZE' final='true' static='true' value='2977' type='int'/><field api_added='4' name='GL_NORMAL_ARRAY' final='true' static='true' value='32885' type='int'/><field api_added='4' name='GL_NOTEQUAL' final='true' static='true' value='517' type='int'/><field api_added='4' name='GL_NO_ERROR' final='true' static='true' value='0' type='int'/><field api_added='4' name='GL_NUM_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34466' type='int'/><field api_added='4' name='GL_ONE' final='true' static='true' value='1' type='int'/><field api_added='4' name='GL_ONE_MINUS_DST_ALPHA' final='true' static='true' value='773' type='int'/><field api_added='4' name='GL_ONE_MINUS_DST_COLOR' final='true' static='true' value='775' type='int'/><field api_added='4' name='GL_ONE_MINUS_SRC_ALPHA' final='true' static='true' value='771' type='int'/><field api_added='4' name='GL_ONE_MINUS_SRC_COLOR' final='true' static='true' value='769' type='int'/><field api_added='4' name='GL_OR' final='true' static='true' value='5383' type='int'/><field api_added='4' name='GL_OR_INVERTED' final='true' static='true' value='5389' type='int'/><field api_added='4' name='GL_OR_REVERSE' final='true' static='true' value='5387' type='int'/><field api_added='4' name='GL_OUT_OF_MEMORY' final='true' static='true' value='1285' type='int'/><field api_added='4' name='GL_PACK_ALIGNMENT' final='true' static='true' value='3333' type='int'/><field api_added='4' name='GL_PALETTE4_R5_G6_B5_OES' final='true' static='true' value='35730' type='int'/><field api_added='4' name='GL_PALETTE4_RGB5_A1_OES' final='true' static='true' value='35732' type='int'/><field api_added='4' name='GL_PALETTE4_RGB8_OES' final='true' static='true' value='35728' type='int'/><field api_added='4' name='GL_PALETTE4_RGBA4_OES' final='true' static='true' value='35731' type='int'/><field api_added='4' name='GL_PALETTE4_RGBA8_OES' final='true' static='true' value='35729' type='int'/><field api_added='4' name='GL_PALETTE8_R5_G6_B5_OES' final='true' static='true' value='35735' type='int'/><field api_added='4' name='GL_PALETTE8_RGB5_A1_OES' final='true' static='true' value='35737' type='int'/><field api_added='4' name='GL_PALETTE8_RGB8_OES' final='true' static='true' value='35733' type='int'/><field api_added='4' name='GL_PALETTE8_RGBA4_OES' final='true' static='true' value='35736' type='int'/><field api_added='4' name='GL_PALETTE8_RGBA8_OES' final='true' static='true' value='35734' type='int'/><field api_added='4' name='GL_PERSPECTIVE_CORRECTION_HINT' final='true' static='true' value='3152' type='int'/><field api_added='4' name='GL_POINTS' final='true' static='true' value='0' type='int'/><field api_added='4' name='GL_POINT_FADE_THRESHOLD_SIZE' final='true' static='true' value='33064' type='int'/><field api_added='4' name='GL_POINT_SIZE' final='true' static='true' value='2833' type='int'/><field api_added='4' name='GL_POINT_SMOOTH' final='true' static='true' value='2832' type='int'/><field api_added='4' name='GL_POINT_SMOOTH_HINT' final='true' static='true' value='3153' type='int'/><field api_added='4' name='GL_POLYGON_OFFSET_FILL' final='true' static='true' value='32823' type='int'/><field api_added='4' name='GL_POLYGON_SMOOTH_HINT' final='true' static='true' value='3155' type='int'/><field api_added='4' name='GL_POSITION' final='true' static='true' value='4611' type='int'/><field api_added='4' name='GL_PROJECTION' final='true' static='true' value='5889' type='int'/><field api_added='4' name='GL_QUADRATIC_ATTENUATION' final='true' static='true' value='4617' type='int'/><field api_added='4' name='GL_RED_BITS' final='true' static='true' value='3410' type='int'/><field api_added='4' name='GL_RENDERER' final='true' static='true' value='7937' type='int'/><field api_added='4' name='GL_REPEAT' final='true' static='true' value='10497' type='int'/><field api_added='4' name='GL_REPLACE' final='true' static='true' value='7681' type='int'/><field api_added='4' name='GL_RESCALE_NORMAL' final='true' static='true' value='32826' type='int'/><field api_added='4' name='GL_RGB' final='true' static='true' value='6407' type='int'/><field api_added='4' name='GL_RGBA' final='true' static='true' value='6408' type='int'/><field api_added='4' name='GL_SAMPLE_ALPHA_TO_COVERAGE' final='true' static='true' value='32926' type='int'/><field api_added='4' name='GL_SAMPLE_ALPHA_TO_ONE' final='true' static='true' value='32927' type='int'/><field api_added='4' name='GL_SAMPLE_COVERAGE' final='true' static='true' value='32928' type='int'/><field api_added='4' name='GL_SCISSOR_TEST' final='true' static='true' value='3089' type='int'/><field api_added='4' name='GL_SET' final='true' static='true' value='5391' type='int'/><field api_added='4' name='GL_SHININESS' final='true' static='true' value='5633' type='int'/><field api_added='4' name='GL_SHORT' final='true' static='true' value='5122' type='int'/><field api_added='4' name='GL_SMOOTH' final='true' static='true' value='7425' type='int'/><field api_added='4' name='GL_SMOOTH_LINE_WIDTH_RANGE' final='true' static='true' value='2850' type='int'/><field api_added='4' name='GL_SMOOTH_POINT_SIZE_RANGE' final='true' static='true' value='2834' type='int'/><field api_added='4' name='GL_SPECULAR' final='true' static='true' value='4610' type='int'/><field api_added='4' name='GL_SPOT_CUTOFF' final='true' static='true' value='4614' type='int'/><field api_added='4' name='GL_SPOT_DIRECTION' final='true' static='true' value='4612' type='int'/><field api_added='4' name='GL_SPOT_EXPONENT' final='true' static='true' value='4613' type='int'/><field api_added='4' name='GL_SRC_ALPHA' final='true' static='true' value='770' type='int'/><field api_added='4' name='GL_SRC_ALPHA_SATURATE' final='true' static='true' value='776' type='int'/><field api_added='4' name='GL_SRC_COLOR' final='true' static='true' value='768' type='int'/><field api_added='4' name='GL_STACK_OVERFLOW' final='true' static='true' value='1283' type='int'/><field api_added='4' name='GL_STACK_UNDERFLOW' final='true' static='true' value='1284' type='int'/><field api_added='4' name='GL_STENCIL_BITS' final='true' static='true' value='3415' type='int'/><field api_added='4' name='GL_STENCIL_BUFFER_BIT' final='true' static='true' value='1024' type='int'/><field api_added='4' name='GL_STENCIL_TEST' final='true' static='true' value='2960' type='int'/><field api_added='4' name='GL_SUBPIXEL_BITS' final='true' static='true' value='3408' type='int'/><field api_added='4' name='GL_TEXTURE' final='true' static='true' value='5890' type='int'/><field api_added='4' name='GL_TEXTURE0' final='true' static='true' value='33984' type='int'/><field api_added='4' name='GL_TEXTURE1' final='true' static='true' value='33985' type='int'/><field api_added='4' name='GL_TEXTURE10' final='true' static='true' value='33994' type='int'/><field api_added='4' name='GL_TEXTURE11' final='true' static='true' value='33995' type='int'/><field api_added='4' name='GL_TEXTURE12' final='true' static='true' value='33996' type='int'/><field api_added='4' name='GL_TEXTURE13' final='true' static='true' value='33997' type='int'/><field api_added='4' name='GL_TEXTURE14' final='true' static='true' value='33998' type='int'/><field api_added='4' name='GL_TEXTURE15' final='true' static='true' value='33999' type='int'/><field api_added='4' name='GL_TEXTURE16' final='true' static='true' value='34000' type='int'/><field api_added='4' name='GL_TEXTURE17' final='true' static='true' value='34001' type='int'/><field api_added='4' name='GL_TEXTURE18' final='true' static='true' value='34002' type='int'/><field api_added='4' name='GL_TEXTURE19' final='true' static='true' value='34003' type='int'/><field api_added='4' name='GL_TEXTURE2' final='true' static='true' value='33986' type='int'/><field api_added='4' name='GL_TEXTURE20' final='true' static='true' value='34004' type='int'/><field api_added='4' name='GL_TEXTURE21' final='true' static='true' value='34005' type='int'/><field api_added='4' name='GL_TEXTURE22' final='true' static='true' value='34006' type='int'/><field api_added='4' name='GL_TEXTURE23' final='true' static='true' value='34007' type='int'/><field api_added='4' name='GL_TEXTURE24' final='true' static='true' value='34008' type='int'/><field api_added='4' name='GL_TEXTURE25' final='true' static='true' value='34009' type='int'/><field api_added='4' name='GL_TEXTURE26' final='true' static='true' value='34010' type='int'/><field api_added='4' name='GL_TEXTURE27' final='true' static='true' value='34011' type='int'/><field api_added='4' name='GL_TEXTURE28' final='true' static='true' value='34012' type='int'/><field api_added='4' name='GL_TEXTURE29' final='true' static='true' value='34013' type='int'/><field api_added='4' name='GL_TEXTURE3' final='true' static='true' value='33987' type='int'/><field api_added='4' name='GL_TEXTURE30' final='true' static='true' value='34014' type='int'/><field api_added='4' name='GL_TEXTURE31' final='true' static='true' value='34015' type='int'/><field api_added='4' name='GL_TEXTURE4' final='true' static='true' value='33988' type='int'/><field api_added='4' name='GL_TEXTURE5' final='true' static='true' value='33989' type='int'/><field api_added='4' name='GL_TEXTURE6' final='true' static='true' value='33990' type='int'/><field api_added='4' name='GL_TEXTURE7' final='true' static='true' value='33991' type='int'/><field api_added='4' name='GL_TEXTURE8' final='true' static='true' value='33992' type='int'/><field api_added='4' name='GL_TEXTURE9' final='true' static='true' value='33993' type='int'/><field api_added='4' name='GL_TEXTURE_2D' final='true' static='true' value='3553' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY' final='true' static='true' value='32888' type='int'/><field api_added='4' name='GL_TEXTURE_ENV' final='true' static='true' value='8960' type='int'/><field api_added='4' name='GL_TEXTURE_ENV_COLOR' final='true' static='true' value='8705' type='int'/><field api_added='4' name='GL_TEXTURE_ENV_MODE' final='true' static='true' value='8704' type='int'/><field api_added='4' name='GL_TEXTURE_MAG_FILTER' final='true' static='true' value='10240' type='int'/><field api_added='4' name='GL_TEXTURE_MIN_FILTER' final='true' static='true' value='10241' type='int'/><field api_added='4' name='GL_TEXTURE_WRAP_S' final='true' static='true' value='10242' type='int'/><field api_added='4' name='GL_TEXTURE_WRAP_T' final='true' static='true' value='10243' type='int'/><field api_added='4' name='GL_TRIANGLES' final='true' static='true' value='4' type='int'/><field api_added='4' name='GL_TRIANGLE_FAN' final='true' static='true' value='6' type='int'/><field api_added='4' name='GL_TRIANGLE_STRIP' final='true' static='true' value='5' type='int'/><field api_added='4' name='GL_TRUE' final='true' static='true' value='1' type='int'/><field api_added='4' name='GL_UNPACK_ALIGNMENT' final='true' static='true' value='3317' type='int'/><field api_added='4' name='GL_UNSIGNED_BYTE' final='true' static='true' value='5121' type='int'/><field api_added='4' name='GL_UNSIGNED_SHORT' final='true' static='true' value='5123' type='int'/><field api_added='4' name='GL_UNSIGNED_SHORT_4_4_4_4' final='true' static='true' value='32819' type='int'/><field api_added='4' name='GL_UNSIGNED_SHORT_5_5_5_1' final='true' static='true' value='32820' type='int'/><field api_added='4' name='GL_UNSIGNED_SHORT_5_6_5' final='true' static='true' value='33635' type='int'/><field api_added='4' name='GL_VENDOR' final='true' static='true' value='7936' type='int'/><field api_added='4' name='GL_VERSION' final='true' static='true' value='7938' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY' final='true' static='true' value='32884' type='int'/><field api_added='4' name='GL_XOR' final='true' static='true' value='5382' type='int'/><field api_added='4' name='GL_ZERO' final='true' static='true' value='0' type='int'/><method api_added='4' name='glActiveTexture' native='true' static='true'><parameter name='texture' type='int'/></method><method api_added='4' name='glAlphaFunc' native='true' static='true'><parameter name='func' type='int'/><parameter name='ref' type='float'/></method><method api_added='4' name='glAlphaFuncx' native='true' static='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/></method><method api_added='4' name='glBindTexture' native='true' static='true'><parameter name='target' type='int'/><parameter name='texture' type='int'/></method><method api_added='4' name='glBlendFunc' native='true' static='true'><parameter name='sfactor' type='int'/><parameter name='dfactor' type='int'/></method><method api_added='4' name='glClear' native='true' static='true'><parameter name='mask' type='int'/></method><method api_added='4' name='glClearColor' native='true' static='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method api_added='4' name='glClearColorx' native='true' static='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method api_added='4' name='glClearDepthf' native='true' static='true'><parameter name='depth' type='float'/></method><method api_added='4' name='glClearDepthx' native='true' static='true'><parameter name='depth' type='int'/></method><method api_added='4' name='glClearStencil' native='true' static='true'><parameter name='s' type='int'/></method><method api_added='4' name='glClientActiveTexture' native='true' static='true'><parameter name='texture' type='int'/></method><method api_added='4' name='glColor4f' native='true' static='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method api_added='4' name='glColor4x' native='true' static='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method api_added='4' name='glColorMask' native='true' static='true'><parameter name='red' type='boolean'/><parameter name='green' type='boolean'/><parameter name='blue' type='boolean'/><parameter name='alpha' type='boolean'/></method><method api_added='4' name='glColorPointer' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glCompressedTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='4' name='glCompressedTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='4' name='glCopyTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/></method><method api_added='4' name='glCopyTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='4' name='glCullFace' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='4' name='glDeleteTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDeleteTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method api_added='4' name='glDepthFunc' native='true' static='true'><parameter name='func' type='int'/></method><method api_added='4' name='glDepthMask' native='true' static='true'><parameter name='flag' type='boolean'/></method><method api_added='4' name='glDepthRangef' native='true' static='true'><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glDepthRangex' native='true' static='true'><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glDisable' native='true' static='true'><parameter name='cap' type='int'/></method><method api_added='4' name='glDisableClientState' native='true' static='true'><parameter name='array' type='int'/></method><method api_added='4' name='glDrawArrays' native='true' static='true'><parameter name='mode' type='int'/><parameter name='first' type='int'/><parameter name='count' type='int'/></method><method api_added='4' name='glDrawElements' native='true' static='true'><parameter name='mode' type='int'/><parameter name='count' type='int'/><parameter name='type' type='int'/><parameter name='indices' type='java.nio.Buffer'/></method><method api_added='4' name='glEnable' native='true' static='true'><parameter name='cap' type='int'/></method><method api_added='4' name='glEnableClientState' native='true' static='true'><parameter name='array' type='int'/></method><method api_added='4' name='glFinish' native='true' static='true'/><method api_added='4' name='glFlush' native='true' static='true'/><method api_added='4' name='glFogf' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glFogfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glFogfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glFogx' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glFogxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glFogxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glFrontFace' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='4' name='glFrustumf' native='true' static='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glFrustumx' native='true' static='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glGenTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGenTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetError' native='true' static='true' return='int'/><method api_added='4' name='glGetIntegerv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetIntegerv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetString' native='true' static='true' return='java.lang.String'><parameter name='name' type='int'/></method><method api_added='4' name='glHint' native='true' static='true'><parameter name='target' type='int'/><parameter name='mode' type='int'/></method><method api_added='4' name='glLightModelf' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glLightModelfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightModelfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glLightModelx' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glLightModelxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightModelxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLightf' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glLightfv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightfv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glLightx' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glLightxv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightxv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLineWidth' native='true' static='true'><parameter name='width' type='float'/></method><method api_added='4' name='glLineWidthx' native='true' static='true'><parameter name='width' type='int'/></method><method api_added='4' name='glLoadIdentity' native='true' static='true'/><method api_added='4' name='glLoadMatrixf' native='true' static='true'><parameter name='m' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLoadMatrixf' native='true' static='true'><parameter name='m' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glLoadMatrixx' native='true' static='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLoadMatrixx' native='true' static='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLogicOp' native='true' static='true'><parameter name='opcode' type='int'/></method><method api_added='4' name='glMaterialf' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glMaterialfv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMaterialfv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glMaterialx' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glMaterialxv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMaterialxv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glMatrixMode' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='4' name='glMultMatrixf' native='true' static='true'><parameter name='m' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMultMatrixf' native='true' static='true'><parameter name='m' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glMultMatrixx' native='true' static='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMultMatrixx' native='true' static='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method api_added='4' name='glMultiTexCoord4f' native='true' static='true'><parameter name='target' type='int'/><parameter name='s' type='float'/><parameter name='t' type='float'/><parameter name='r' type='float'/><parameter name='q' type='float'/></method><method api_added='4' name='glMultiTexCoord4x' native='true' static='true'><parameter name='target' type='int'/><parameter name='s' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='q' type='int'/></method><method api_added='4' name='glNormal3f' native='true' static='true'><parameter name='nx' type='float'/><parameter name='ny' type='float'/><parameter name='nz' type='float'/></method><method api_added='4' name='glNormal3x' native='true' static='true'><parameter name='nx' type='int'/><parameter name='ny' type='int'/><parameter name='nz' type='int'/></method><method api_added='4' name='glNormalPointer' static='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glOrthof' native='true' static='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glOrthox' native='true' static='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glPixelStorei' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glPointSize' native='true' static='true'><parameter name='size' type='float'/></method><method api_added='4' name='glPointSizex' native='true' static='true'><parameter name='size' type='int'/></method><method api_added='4' name='glPolygonOffset' native='true' static='true'><parameter name='factor' type='float'/><parameter name='units' type='float'/></method><method api_added='4' name='glPolygonOffsetx' native='true' static='true'><parameter name='factor' type='int'/><parameter name='units' type='int'/></method><method api_added='4' name='glPopMatrix' native='true' static='true'/><method api_added='4' name='glPushMatrix' native='true' static='true'/><method api_added='4' name='glReadPixels' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='4' name='glRotatef' native='true' static='true'><parameter name='angle' type='float'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method api_added='4' name='glRotatex' native='true' static='true'><parameter name='angle' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glSampleCoverage' native='true' static='true'><parameter name='value' type='float'/><parameter name='invert' type='boolean'/></method><method api_added='4' name='glSampleCoveragex' native='true' static='true'><parameter name='value' type='int'/><parameter name='invert' type='boolean'/></method><method api_added='4' name='glScalef' native='true' static='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method api_added='4' name='glScalex' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glScissor' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='4' name='glShadeModel' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='4' name='glStencilFunc' native='true' static='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/><parameter name='mask' type='int'/></method><method api_added='4' name='glStencilMask' native='true' static='true'><parameter name='mask' type='int'/></method><method api_added='4' name='glStencilOp' native='true' static='true'><parameter name='fail' type='int'/><parameter name='zfail' type='int'/><parameter name='zpass' type='int'/></method><method api_added='4' name='glTexCoordPointer' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glTexEnvf' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glTexEnvfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexEnvfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glTexEnvx' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexEnvxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexEnvxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='4' name='glTexParameterf' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glTexParameterx' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='4' name='glTranslatef' native='true' static='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method api_added='4' name='glTranslatex' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glVertexPointer' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glViewport' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method></class><class api_added='4' name='GLES10Ext' extends='java.lang.Object'><constructor api_added='4' name='GLES10Ext' type='android.opengl.GLES10Ext'/><method api_added='4' name='glQueryMatrixxOES' native='true' static='true' return='int'><parameter name='mantissa' type='int[]'/><parameter name='mantissaOffset' type='int'/><parameter name='exponent' type='int[]'/><parameter name='exponentOffset' type='int'/></method><method api_added='4' name='glQueryMatrixxOES' native='true' static='true' return='int'><parameter name='mantissa' type='java.nio.IntBuffer'/><parameter name='exponent' type='java.nio.IntBuffer'/></method></class><class api_added='4' name='GLES11' extends='android.opengl.GLES10'><constructor api_added='4' name='GLES11' type='android.opengl.GLES11'/><field api_added='4' name='GL_ACTIVE_TEXTURE' final='true' static='true' value='34016' type='int'/><field api_added='4' name='GL_ADD_SIGNED' final='true' static='true' value='34164' type='int'/><field api_added='4' name='GL_ALPHA_SCALE' final='true' static='true' value='3356' type='int'/><field api_added='4' name='GL_ALPHA_TEST_FUNC' final='true' static='true' value='3009' type='int'/><field api_added='4' name='GL_ALPHA_TEST_REF' final='true' static='true' value='3010' type='int'/><field api_added='4' name='GL_ARRAY_BUFFER' final='true' static='true' value='34962' type='int'/><field api_added='4' name='GL_ARRAY_BUFFER_BINDING' final='true' static='true' value='34964' type='int'/><field api_added='4' name='GL_BLEND_DST' final='true' static='true' value='3040' type='int'/><field api_added='4' name='GL_BLEND_SRC' final='true' static='true' value='3041' type='int'/><field api_added='4' name='GL_BUFFER_ACCESS' final='true' static='true' value='35003' type='int'/><field api_added='4' name='GL_BUFFER_SIZE' final='true' static='true' value='34660' type='int'/><field api_added='4' name='GL_BUFFER_USAGE' final='true' static='true' value='34661' type='int'/><field api_added='4' name='GL_CLIENT_ACTIVE_TEXTURE' final='true' static='true' value='34017' type='int'/><field api_added='4' name='GL_CLIP_PLANE0' final='true' static='true' value='12288' type='int'/><field api_added='4' name='GL_CLIP_PLANE1' final='true' static='true' value='12289' type='int'/><field api_added='4' name='GL_CLIP_PLANE2' final='true' static='true' value='12290' type='int'/><field api_added='4' name='GL_CLIP_PLANE3' final='true' static='true' value='12291' type='int'/><field api_added='4' name='GL_CLIP_PLANE4' final='true' static='true' value='12292' type='int'/><field api_added='4' name='GL_CLIP_PLANE5' final='true' static='true' value='12293' type='int'/><field api_added='4' name='GL_COLOR_ARRAY_BUFFER_BINDING' final='true' static='true' value='34968' type='int'/><field api_added='4' name='GL_COLOR_ARRAY_POINTER' final='true' static='true' value='32912' type='int'/><field api_added='4' name='GL_COLOR_ARRAY_SIZE' final='true' static='true' value='32897' type='int'/><field api_added='4' name='GL_COLOR_ARRAY_STRIDE' final='true' static='true' value='32899' type='int'/><field api_added='4' name='GL_COLOR_ARRAY_TYPE' final='true' static='true' value='32898' type='int'/><field api_added='4' name='GL_COLOR_CLEAR_VALUE' final='true' static='true' value='3106' type='int'/><field api_added='4' name='GL_COLOR_WRITEMASK' final='true' static='true' value='3107' type='int'/><field api_added='4' name='GL_COMBINE' final='true' static='true' value='34160' type='int'/><field api_added='4' name='GL_COMBINE_ALPHA' final='true' static='true' value='34162' type='int'/><field api_added='4' name='GL_COMBINE_RGB' final='true' static='true' value='34161' type='int'/><field api_added='4' name='GL_CONSTANT' final='true' static='true' value='34166' type='int'/><field api_added='4' name='GL_COORD_REPLACE_OES' final='true' static='true' value='34914' type='int'/><field api_added='4' name='GL_CULL_FACE_MODE' final='true' static='true' value='2885' type='int'/><field api_added='4' name='GL_CURRENT_COLOR' final='true' static='true' value='2816' type='int'/><field api_added='4' name='GL_CURRENT_NORMAL' final='true' static='true' value='2818' type='int'/><field api_added='4' name='GL_CURRENT_TEXTURE_COORDS' final='true' static='true' value='2819' type='int'/><field api_added='4' name='GL_DEPTH_CLEAR_VALUE' final='true' static='true' value='2931' type='int'/><field api_added='4' name='GL_DEPTH_FUNC' final='true' static='true' value='2932' type='int'/><field api_added='4' name='GL_DEPTH_RANGE' final='true' static='true' value='2928' type='int'/><field api_added='4' name='GL_DEPTH_WRITEMASK' final='true' static='true' value='2930' type='int'/><field api_added='4' name='GL_DOT3_RGB' final='true' static='true' value='34478' type='int'/><field api_added='4' name='GL_DOT3_RGBA' final='true' static='true' value='34479' type='int'/><field api_added='4' name='GL_DYNAMIC_DRAW' final='true' static='true' value='35048' type='int'/><field api_added='4' name='GL_ELEMENT_ARRAY_BUFFER' final='true' static='true' value='34963' type='int'/><field api_added='4' name='GL_ELEMENT_ARRAY_BUFFER_BINDING' final='true' static='true' value='34965' type='int'/><field api_added='4' name='GL_FRONT_FACE' final='true' static='true' value='2886' type='int'/><field api_added='4' name='GL_GENERATE_MIPMAP' final='true' static='true' value='33169' type='int'/><field api_added='4' name='GL_GENERATE_MIPMAP_HINT' final='true' static='true' value='33170' type='int'/><field api_added='4' name='GL_INTERPOLATE' final='true' static='true' value='34165' type='int'/><field api_added='4' name='GL_LINE_WIDTH' final='true' static='true' value='2849' type='int'/><field api_added='4' name='GL_LOGIC_OP_MODE' final='true' static='true' value='3056' type='int'/><field api_added='4' name='GL_MATRIX_MODE' final='true' static='true' value='2976' type='int'/><field api_added='4' name='GL_MAX_CLIP_PLANES' final='true' static='true' value='3378' type='int'/><field api_added='4' name='GL_MODELVIEW_MATRIX' final='true' static='true' value='2982' type='int'/><field api_added='4' name='GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35213' type='int'/><field api_added='4' name='GL_MODELVIEW_STACK_DEPTH' final='true' static='true' value='2979' type='int'/><field api_added='4' name='GL_NORMAL_ARRAY_BUFFER_BINDING' final='true' static='true' value='34967' type='int'/><field api_added='4' name='GL_NORMAL_ARRAY_POINTER' final='true' static='true' value='32911' type='int'/><field api_added='4' name='GL_NORMAL_ARRAY_STRIDE' final='true' static='true' value='32895' type='int'/><field api_added='4' name='GL_NORMAL_ARRAY_TYPE' final='true' static='true' value='32894' type='int'/><field api_added='4' name='GL_OPERAND0_ALPHA' final='true' static='true' value='34200' type='int'/><field api_added='4' name='GL_OPERAND0_RGB' final='true' static='true' value='34192' type='int'/><field api_added='4' name='GL_OPERAND1_ALPHA' final='true' static='true' value='34201' type='int'/><field api_added='4' name='GL_OPERAND1_RGB' final='true' static='true' value='34193' type='int'/><field api_added='4' name='GL_OPERAND2_ALPHA' final='true' static='true' value='34202' type='int'/><field api_added='4' name='GL_OPERAND2_RGB' final='true' static='true' value='34194' type='int'/><field api_added='4' name='GL_POINT_DISTANCE_ATTENUATION' final='true' static='true' value='33065' type='int'/><field api_added='4' name='GL_POINT_FADE_THRESHOLD_SIZE' final='true' static='true' value='33064' type='int'/><field api_added='4' name='GL_POINT_SIZE' final='true' static='true' value='2833' type='int'/><field api_added='4' name='GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='35743' type='int'/><field api_added='4' name='GL_POINT_SIZE_ARRAY_OES' final='true' static='true' value='35740' type='int'/><field api_added='4' name='GL_POINT_SIZE_ARRAY_POINTER_OES' final='true' static='true' value='35212' type='int'/><field api_added='4' name='GL_POINT_SIZE_ARRAY_STRIDE_OES' final='true' static='true' value='35211' type='int'/><field api_added='4' name='GL_POINT_SIZE_ARRAY_TYPE_OES' final='true' static='true' value='35210' type='int'/><field api_added='4' name='GL_POINT_SIZE_MAX' final='true' static='true' value='33063' type='int'/><field api_added='4' name='GL_POINT_SIZE_MIN' final='true' static='true' value='33062' type='int'/><field api_added='4' name='GL_POINT_SPRITE_OES' final='true' static='true' value='34913' type='int'/><field api_added='4' name='GL_POLYGON_OFFSET_FACTOR' final='true' static='true' value='32824' type='int'/><field api_added='4' name='GL_POLYGON_OFFSET_UNITS' final='true' static='true' value='10752' type='int'/><field api_added='4' name='GL_PREVIOUS' final='true' static='true' value='34168' type='int'/><field api_added='4' name='GL_PRIMARY_COLOR' final='true' static='true' value='34167' type='int'/><field api_added='4' name='GL_PROJECTION_MATRIX' final='true' static='true' value='2983' type='int'/><field api_added='4' name='GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35214' type='int'/><field api_added='4' name='GL_PROJECTION_STACK_DEPTH' final='true' static='true' value='2980' type='int'/><field api_added='4' name='GL_RGB_SCALE' final='true' static='true' value='34163' type='int'/><field api_added='4' name='GL_SAMPLES' final='true' static='true' value='32937' type='int'/><field api_added='4' name='GL_SAMPLE_BUFFERS' final='true' static='true' value='32936' type='int'/><field api_added='4' name='GL_SAMPLE_COVERAGE_INVERT' final='true' static='true' value='32939' type='int'/><field api_added='4' name='GL_SAMPLE_COVERAGE_VALUE' final='true' static='true' value='32938' type='int'/><field api_added='4' name='GL_SCISSOR_BOX' final='true' static='true' value='3088' type='int'/><field api_added='4' name='GL_SHADE_MODEL' final='true' static='true' value='2900' type='int'/><field api_added='4' name='GL_SRC0_ALPHA' final='true' static='true' value='34184' type='int'/><field api_added='4' name='GL_SRC0_RGB' final='true' static='true' value='34176' type='int'/><field api_added='4' name='GL_SRC1_ALPHA' final='true' static='true' value='34185' type='int'/><field api_added='4' name='GL_SRC1_RGB' final='true' static='true' value='34177' type='int'/><field api_added='4' name='GL_SRC2_ALPHA' final='true' static='true' value='34186' type='int'/><field api_added='4' name='GL_SRC2_RGB' final='true' static='true' value='34178' type='int'/><field api_added='4' name='GL_STATIC_DRAW' final='true' static='true' value='35044' type='int'/><field api_added='4' name='GL_STENCIL_CLEAR_VALUE' final='true' static='true' value='2961' type='int'/><field api_added='4' name='GL_STENCIL_FAIL' final='true' static='true' value='2964' type='int'/><field api_added='4' name='GL_STENCIL_FUNC' final='true' static='true' value='2962' type='int'/><field api_added='4' name='GL_STENCIL_PASS_DEPTH_FAIL' final='true' static='true' value='2965' type='int'/><field api_added='4' name='GL_STENCIL_PASS_DEPTH_PASS' final='true' static='true' value='2966' type='int'/><field api_added='4' name='GL_STENCIL_REF' final='true' static='true' value='2967' type='int'/><field api_added='4' name='GL_STENCIL_VALUE_MASK' final='true' static='true' value='2963' type='int'/><field api_added='4' name='GL_STENCIL_WRITEMASK' final='true' static='true' value='2968' type='int'/><field api_added='4' name='GL_SUBTRACT' final='true' static='true' value='34023' type='int'/><field api_added='4' name='GL_TEXTURE_BINDING_2D' final='true' static='true' value='32873' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING' final='true' static='true' value='34970' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY_POINTER' final='true' static='true' value='32914' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY_SIZE' final='true' static='true' value='32904' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY_STRIDE' final='true' static='true' value='32906' type='int'/><field api_added='4' name='GL_TEXTURE_COORD_ARRAY_TYPE' final='true' static='true' value='32905' type='int'/><field api_added='4' name='GL_TEXTURE_MATRIX' final='true' static='true' value='2984' type='int'/><field api_added='4' name='GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35215' type='int'/><field api_added='4' name='GL_TEXTURE_STACK_DEPTH' final='true' static='true' value='2981' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY_BUFFER_BINDING' final='true' static='true' value='34966' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY_POINTER' final='true' static='true' value='32910' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY_SIZE' final='true' static='true' value='32890' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY_STRIDE' final='true' static='true' value='32892' type='int'/><field api_added='4' name='GL_VERTEX_ARRAY_TYPE' final='true' static='true' value='32891' type='int'/><field api_added='4' name='GL_VIEWPORT' final='true' static='true' value='2978' type='int'/><field api_added='4' name='GL_WRITE_ONLY' final='true' static='true' value='35001' type='int'/><method api_added='4' name='glBindBuffer' native='true' static='true'><parameter name='target' type='int'/><parameter name='buffer' type='int'/></method><method api_added='4' name='glBufferData' native='true' static='true'><parameter name='target' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/><parameter name='usage' type='int'/></method><method api_added='4' name='glBufferSubData' native='true' static='true'><parameter name='target' type='int'/><parameter name='offset' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='4' name='glClipPlanef' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glClipPlanef' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glClipPlanex' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glClipPlanex' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.IntBuffer'/></method><method api_added='4' name='glColor4ub' native='true' static='true'><parameter name='red' type='byte'/><parameter name='green' type='byte'/><parameter name='blue' type='byte'/><parameter name='alpha' type='byte'/></method><method api_added='4' name='glColorPointer' native='true' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDeleteBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDeleteBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glDrawElements' native='true' static='true'><parameter name='mode' type='int'/><parameter name='count' type='int'/><parameter name='type' type='int'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGenBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGenBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetBooleanv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='boolean[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetBooleanv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetBufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetBufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetClipPlanef' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetClipPlanef' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetClipPlanex' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetClipPlanex' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetFixedv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetFixedv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetFloatv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetFloatv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetLightfv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetLightfv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetLightxv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetLightxv' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetMaterialfv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetMaterialfv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetMaterialxv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetMaterialxv' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexEnvfv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexEnvfv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetTexEnviv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexEnviv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexEnvxv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexEnvxv' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexParameterxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexParameterxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glIsBuffer' native='true' static='true' return='boolean'><parameter name='buffer' type='int'/></method><method api_added='4' name='glIsEnabled' native='true' static='true' return='boolean'><parameter name='cap' type='int'/></method><method api_added='4' name='glIsTexture' native='true' static='true' return='boolean'><parameter name='texture' type='int'/></method><method api_added='4' name='glNormalPointer' native='true' static='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method api_added='4' name='glPointParameterf' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glPointParameterfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glPointParameterfv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glPointParameterx' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glPointParameterxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glPointParameterxv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glPointSizePointerOES' native='true' static='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glTexCoordPointer' native='true' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexEnvi' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexEnviv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexEnviv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glTexParameteri' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexParameterxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexParameterxv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glVertexPointer' native='true' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method></class><class api_added='4' name='GLES11Ext' extends='java.lang.Object'><constructor api_added='4' name='GLES11Ext' type='android.opengl.GLES11Ext'/><field api_added='4' name='GL_3DC_XY_AMD' final='true' static='true' value='34810' type='int'/><field api_added='4' name='GL_3DC_X_AMD' final='true' static='true' value='34809' type='int'/><field api_added='4' name='GL_ATC_RGBA_EXPLICIT_ALPHA_AMD' final='true' static='true' value='35987' type='int'/><field api_added='4' name='GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD' final='true' static='true' value='34798' type='int'/><field api_added='4' name='GL_ATC_RGB_AMD' final='true' static='true' value='35986' type='int'/><field api_added='4' name='GL_BGRA' final='true' static='true' value='32993' type='int'/><field api_added='4' name='GL_BLEND_DST_ALPHA_OES' final='true' static='true' value='32970' type='int'/><field api_added='4' name='GL_BLEND_DST_RGB_OES' final='true' static='true' value='32968' type='int'/><field api_added='4' name='GL_BLEND_EQUATION_ALPHA_OES' final='true' static='true' value='34877' type='int'/><field api_added='4' name='GL_BLEND_EQUATION_OES' final='true' static='true' value='32777' type='int'/><field api_added='4' name='GL_BLEND_EQUATION_RGB_OES' final='true' static='true' value='32777' type='int'/><field api_added='4' name='GL_BLEND_SRC_ALPHA_OES' final='true' static='true' value='32971' type='int'/><field api_added='4' name='GL_BLEND_SRC_RGB_OES' final='true' static='true' value='32969' type='int'/><field api_added='4' name='GL_BUFFER_ACCESS_OES' final='true' static='true' value='35003' type='int'/><field api_added='4' name='GL_BUFFER_MAPPED_OES' final='true' static='true' value='35004' type='int'/><field api_added='4' name='GL_BUFFER_MAP_POINTER_OES' final='true' static='true' value='35005' type='int'/><field api_added='4' name='GL_COLOR_ATTACHMENT0_OES' final='true' static='true' value='36064' type='int'/><field api_added='4' name='GL_CURRENT_PALETTE_MATRIX_OES' final='true' static='true' value='34883' type='int'/><field api_added='4' name='GL_DECR_WRAP_OES' final='true' static='true' value='34056' type='int'/><field api_added='4' name='GL_DEPTH24_STENCIL8_OES' final='true' static='true' value='35056' type='int'/><field api_added='4' name='GL_DEPTH_ATTACHMENT_OES' final='true' static='true' value='36096' type='int'/><field api_added='4' name='GL_DEPTH_COMPONENT16_OES' final='true' static='true' value='33189' type='int'/><field api_added='4' name='GL_DEPTH_COMPONENT24_OES' final='true' static='true' value='33190' type='int'/><field api_added='4' name='GL_DEPTH_COMPONENT32_OES' final='true' static='true' value='33191' type='int'/><field api_added='4' name='GL_DEPTH_STENCIL_OES' final='true' static='true' value='34041' type='int'/><field api_added='4' name='GL_ETC1_RGB8_OES' final='true' static='true' value='36196' type='int'/><field api_added='4' name='GL_FIXED_OES' final='true' static='true' value='5132' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES' final='true' static='true' value='36049' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES' final='true' static='true' value='36048' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES' final='true' static='true' value='36051' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES' final='true' static='true' value='36050' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_BINDING_OES' final='true' static='true' value='36006' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_COMPLETE_OES' final='true' static='true' value='36053' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES' final='true' static='true' value='36054' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES' final='true' static='true' value='36057' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES' final='true' static='true' value='36058' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES' final='true' static='true' value='36055' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_OES' final='true' static='true' value='36160' type='int'/><field api_added='4' name='GL_FRAMEBUFFER_UNSUPPORTED_OES' final='true' static='true' value='36061' type='int'/><field api_added='4' name='GL_FUNC_ADD_OES' final='true' static='true' value='32774' type='int'/><field api_added='4' name='GL_FUNC_REVERSE_SUBTRACT_OES' final='true' static='true' value='32779' type='int'/><field api_added='4' name='GL_FUNC_SUBTRACT_OES' final='true' static='true' value='32778' type='int'/><field api_added='4' name='GL_INCR_WRAP_OES' final='true' static='true' value='34055' type='int'/><field api_added='4' name='GL_INVALID_FRAMEBUFFER_OPERATION_OES' final='true' static='true' value='1286' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='35742' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_OES' final='true' static='true' value='34884' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_POINTER_OES' final='true' static='true' value='34889' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_SIZE_OES' final='true' static='true' value='34886' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_STRIDE_OES' final='true' static='true' value='34888' type='int'/><field api_added='4' name='GL_MATRIX_INDEX_ARRAY_TYPE_OES' final='true' static='true' value='34887' type='int'/><field api_added='4' name='GL_MATRIX_PALETTE_OES' final='true' static='true' value='34880' type='int'/><field api_added='4' name='GL_MAX_CUBE_MAP_TEXTURE_SIZE_OES' final='true' static='true' value='34076' type='int'/><field api_added='4' name='GL_MAX_PALETTE_MATRICES_OES' final='true' static='true' value='34882' type='int'/><field api_added='4' name='GL_MAX_RENDERBUFFER_SIZE_OES' final='true' static='true' value='34024' type='int'/><field api_added='4' name='GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT' final='true' static='true' value='34047' type='int'/><field api_added='4' name='GL_MAX_VERTEX_UNITS_OES' final='true' static='true' value='34468' type='int'/><field api_added='4' name='GL_MIRRORED_REPEAT_OES' final='true' static='true' value='33648' type='int'/><field api_added='4' name='GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35213' type='int'/><field api_added='4' name='GL_NONE_OES' final='true' static='true' value='0' type='int'/><field api_added='4' name='GL_NORMAL_MAP_OES' final='true' static='true' value='34065' type='int'/><field api_added='4' name='GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35214' type='int'/><field api_added='4' name='GL_REFLECTION_MAP_OES' final='true' static='true' value='34066' type='int'/><field api_added='4' name='GL_RENDERBUFFER_ALPHA_SIZE_OES' final='true' static='true' value='36179' type='int'/><field api_added='4' name='GL_RENDERBUFFER_BINDING_OES' final='true' static='true' value='36007' type='int'/><field api_added='4' name='GL_RENDERBUFFER_BLUE_SIZE_OES' final='true' static='true' value='36178' type='int'/><field api_added='4' name='GL_RENDERBUFFER_DEPTH_SIZE_OES' final='true' static='true' value='36180' type='int'/><field api_added='4' name='GL_RENDERBUFFER_GREEN_SIZE_OES' final='true' static='true' value='36177' type='int'/><field api_added='4' name='GL_RENDERBUFFER_HEIGHT_OES' final='true' static='true' value='36163' type='int'/><field api_added='4' name='GL_RENDERBUFFER_INTERNAL_FORMAT_OES' final='true' static='true' value='36164' type='int'/><field api_added='4' name='GL_RENDERBUFFER_OES' final='true' static='true' value='36161' type='int'/><field api_added='4' name='GL_RENDERBUFFER_RED_SIZE_OES' final='true' static='true' value='36176' type='int'/><field api_added='4' name='GL_RENDERBUFFER_STENCIL_SIZE_OES' final='true' static='true' value='36181' type='int'/><field api_added='4' name='GL_RENDERBUFFER_WIDTH_OES' final='true' static='true' value='36162' type='int'/><field api_added='4' name='GL_RGB565_OES' final='true' static='true' value='36194' type='int'/><field api_added='4' name='GL_RGB5_A1_OES' final='true' static='true' value='32855' type='int'/><field api_added='4' name='GL_RGB8_OES' final='true' static='true' value='32849' type='int'/><field api_added='4' name='GL_RGBA4_OES' final='true' static='true' value='32854' type='int'/><field api_added='4' name='GL_RGBA8_OES' final='true' static='true' value='32856' type='int'/><field api_added='4' name='GL_STENCIL_ATTACHMENT_OES' final='true' static='true' value='36128' type='int'/><field api_added='4' name='GL_STENCIL_INDEX1_OES' final='true' static='true' value='36166' type='int'/><field api_added='4' name='GL_STENCIL_INDEX4_OES' final='true' static='true' value='36167' type='int'/><field api_added='4' name='GL_STENCIL_INDEX8_OES' final='true' static='true' value='36168' type='int'/><field api_added='4' name='GL_TEXTURE_BINDING_CUBE_MAP_OES' final='true' static='true' value='34068' type='int'/><field api_added='4' name='GL_TEXTURE_CROP_RECT_OES' final='true' static='true' value='35741' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X_OES' final='true' static='true' value='34070' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_OES' final='true' static='true' value='34072' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_OES' final='true' static='true' value='34074' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_OES' final='true' static='true' value='34067' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_POSITIVE_X_OES' final='true' static='true' value='34069' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y_OES' final='true' static='true' value='34071' type='int'/><field api_added='4' name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z_OES' final='true' static='true' value='34073' type='int'/><field api_added='4' name='GL_TEXTURE_GEN_MODE_OES' final='true' static='true' value='9472' type='int'/><field api_added='4' name='GL_TEXTURE_GEN_STR_OES' final='true' static='true' value='36192' type='int'/><field api_added='4' name='GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35215' type='int'/><field api_added='4' name='GL_TEXTURE_MAX_ANISOTROPY_EXT' final='true' static='true' value='34046' type='int'/><field api_added='4' name='GL_UNSIGNED_INT_24_8_OES' final='true' static='true' value='34042' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='34974' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_OES' final='true' static='true' value='34477' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_POINTER_OES' final='true' static='true' value='34476' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_SIZE_OES' final='true' static='true' value='34475' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_STRIDE_OES' final='true' static='true' value='34474' type='int'/><field api_added='4' name='GL_WEIGHT_ARRAY_TYPE_OES' final='true' static='true' value='34473' type='int'/><field api_added='4' name='GL_WRITE_ONLY_OES' final='true' static='true' value='35001' type='int'/><method api_added='4' name='glAlphaFuncxOES' native='true' static='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/></method><method api_added='4' name='glBindFramebufferOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='framebuffer' type='int'/></method><method api_added='4' name='glBindRenderbufferOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='renderbuffer' type='int'/></method><method api_added='4' name='glBlendEquationOES' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='4' name='glBlendEquationSeparateOES' native='true' static='true'><parameter name='modeRGB' type='int'/><parameter name='modeAlpha' type='int'/></method><method api_added='4' name='glBlendFuncSeparateOES' native='true' static='true'><parameter name='srcRGB' type='int'/><parameter name='dstRGB' type='int'/><parameter name='srcAlpha' type='int'/><parameter name='dstAlpha' type='int'/></method><method api_added='4' name='glCheckFramebufferStatusOES' native='true' static='true' return='int'><parameter name='target' type='int'/></method><method api_added='4' name='glClearColorxOES' native='true' static='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method api_added='4' name='glClearDepthfOES' native='true' static='true'><parameter name='depth' type='float'/></method><method api_added='4' name='glClearDepthxOES' native='true' static='true'><parameter name='depth' type='int'/></method><method api_added='4' name='glClipPlanefOES' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glClipPlanefOES' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glClipPlanexOES' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glClipPlanexOES' native='true' static='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.IntBuffer'/></method><method api_added='4' name='glColor4xOES' native='true' static='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method api_added='4' name='glCurrentPaletteMatrixOES' native='true' static='true'><parameter name='matrixpaletteindex' type='int'/></method><method api_added='4' name='glDeleteFramebuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDeleteFramebuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glDeleteRenderbuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDeleteRenderbuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glDepthRangefOES' native='true' static='true'><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glDepthRangexOES' native='true' static='true'><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glDrawTexfOES' native='true' static='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/><parameter name='width' type='float'/><parameter name='height' type='float'/></method><method api_added='4' name='glDrawTexfvOES' native='true' static='true'><parameter name='coords' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDrawTexfvOES' native='true' static='true'><parameter name='coords' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glDrawTexiOES' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='4' name='glDrawTexivOES' native='true' static='true'><parameter name='coords' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDrawTexivOES' native='true' static='true'><parameter name='coords' type='java.nio.IntBuffer'/></method><method api_added='4' name='glDrawTexsOES' native='true' static='true'><parameter name='x' type='short'/><parameter name='y' type='short'/><parameter name='z' type='short'/><parameter name='width' type='short'/><parameter name='height' type='short'/></method><method api_added='4' name='glDrawTexsvOES' native='true' static='true'><parameter name='coords' type='short[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDrawTexsvOES' native='true' static='true'><parameter name='coords' type='java.nio.ShortBuffer'/></method><method api_added='4' name='glDrawTexxOES' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='4' name='glDrawTexxvOES' native='true' static='true'><parameter name='coords' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glDrawTexxvOES' native='true' static='true'><parameter name='coords' type='java.nio.IntBuffer'/></method><method api_added='4' name='glEGLImageTargetRenderbufferStorageOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='image' type='java.nio.Buffer'/></method><method api_added='4' name='glEGLImageTargetTexture2DOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='image' type='java.nio.Buffer'/></method><method api_added='4' name='glFogxOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glFogxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glFogxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glFramebufferRenderbufferOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='renderbuffertarget' type='int'/><parameter name='renderbuffer' type='int'/></method><method api_added='4' name='glFramebufferTexture2DOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='textarget' type='int'/><parameter name='texture' type='int'/><parameter name='level' type='int'/></method><method api_added='4' name='glFrustumfOES' native='true' static='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glFrustumxOES' native='true' static='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glGenFramebuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGenFramebuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGenRenderbuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGenRenderbuffersOES' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGenerateMipmapOES' native='true' static='true'><parameter name='target' type='int'/></method><method api_added='4' name='glGetClipPlanefOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetClipPlanefOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetClipPlanexOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetClipPlanexOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetFixedvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetFixedvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetFramebufferAttachmentParameterivOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetFramebufferAttachmentParameterivOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetLightxvOES' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetLightxvOES' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetMaterialxvOES' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetMaterialxvOES' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetRenderbufferParameterivOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetRenderbufferParameterivOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexEnvxvOES' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexEnvxvOES' native='true' static='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexGenfvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexGenfvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glGetTexGenivOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexGenivOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexGenxvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexGenxvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glGetTexParameterxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glGetTexParameterxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glIsFramebufferOES' native='true' static='true' return='boolean'><parameter name='framebuffer' type='int'/></method><method api_added='4' name='glIsRenderbufferOES' native='true' static='true' return='boolean'><parameter name='renderbuffer' type='int'/></method><method api_added='4' name='glLightModelxOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glLightModelxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightModelxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLightxOES' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glLightxvOES' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLightxvOES' native='true' static='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLineWidthxOES' native='true' static='true'><parameter name='width' type='int'/></method><method api_added='4' name='glLoadMatrixxOES' native='true' static='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glLoadMatrixxOES' native='true' static='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method api_added='4' name='glLoadPaletteFromModelViewMatrixOES' native='true' static='true'/><method api_added='4' name='glMaterialxOES' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glMaterialxvOES' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMaterialxvOES' native='true' static='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glMatrixIndexPointerOES' native='true' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method api_added='4' name='glMultMatrixxOES' native='true' static='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glMultMatrixxOES' native='true' static='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method api_added='4' name='glMultiTexCoord4xOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='s' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='q' type='int'/></method><method api_added='4' name='glNormal3xOES' native='true' static='true'><parameter name='nx' type='int'/><parameter name='ny' type='int'/><parameter name='nz' type='int'/></method><method api_added='4' name='glOrthofOES' native='true' static='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='4' name='glOrthoxOES' native='true' static='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method api_added='4' name='glPointParameterxOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glPointParameterxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glPointParameterxvOES' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glPointSizexOES' native='true' static='true'><parameter name='size' type='int'/></method><method api_added='4' name='glPolygonOffsetxOES' native='true' static='true'><parameter name='factor' type='int'/><parameter name='units' type='int'/></method><method api_added='4' name='glRenderbufferStorageOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='4' name='glRotatexOES' native='true' static='true'><parameter name='angle' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glSampleCoveragexOES' native='true' static='true'><parameter name='value' type='int'/><parameter name='invert' type='boolean'/></method><method api_added='4' name='glScalexOES' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glTexEnvxOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexEnvxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexEnvxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexGenfOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='4' name='glTexGenfvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexGenfvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='4' name='glTexGeniOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexGenivOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexGenivOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexGenxOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexGenxvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexGenxvOES' native='true' static='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTexParameterxOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='4' name='glTexParameterxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='4' name='glTexParameterxvOES' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='4' name='glTranslatexOES' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='4' name='glWeightPointerOES' native='true' static='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method></class><class api_added='8' name='ETC1' extends='java.lang.Object'><constructor api_added='8' name='ETC1' type='android.opengl.ETC1'/><field api_added='8' name='DECODED_BLOCK_SIZE' final='true' static='true' value='48' type='int'/><field api_added='8' name='ENCODED_BLOCK_SIZE' final='true' static='true' value='8' type='int'/><field api_added='8' name='ETC1_RGB8_OES' final='true' static='true' value='36196' type='int'/><field api_added='8' name='ETC_PKM_HEADER_SIZE' final='true' static='true' value='16' type='int'/><method api_added='8' name='decodeBlock' native='true' static='true'><parameter name='in' type='java.nio.Buffer'/><parameter name='out' type='java.nio.Buffer'/></method><method api_added='8' name='decodeImage' native='true' static='true'><parameter name='in' type='java.nio.Buffer'/><parameter name='out' type='java.nio.Buffer'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='pixelSize' type='int'/><parameter name='stride' type='int'/></method><method api_added='8' name='encodeBlock' native='true' static='true'><parameter name='in' type='java.nio.Buffer'/><parameter name='validPixelMask' type='int'/><parameter name='out' type='java.nio.Buffer'/></method><method api_added='8' name='encodeImage' native='true' static='true'><parameter name='in' type='java.nio.Buffer'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='pixelSize' type='int'/><parameter name='stride' type='int'/><parameter name='out' type='java.nio.Buffer'/></method><method api_added='8' name='formatHeader' native='true' static='true'><parameter name='header' type='java.nio.Buffer'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='getEncodedDataSize' native='true' static='true' return='int'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='getHeight' native='true' static='true' return='int'><parameter name='header' type='java.nio.Buffer'/></method><method api_added='8' name='getWidth' native='true' static='true' return='int'><parameter name='header' type='java.nio.Buffer'/></method><method api_added='8' name='isValid' native='true' static='true' return='boolean'><parameter name='header' type='java.nio.Buffer'/></method></class><class api_added='8' name='ETC1Util' extends='java.lang.Object'><constructor api_added='8' name='ETC1Util' type='android.opengl.ETC1Util'/><method api_added='8' name='compressTexture' static='true' return='android.opengl.ETC1Util.ETC1Texture'><parameter name='input' type='java.nio.Buffer'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='pixelSize' type='int'/><parameter name='stride' type='int'/></method><method api_added='8' name='createTexture' static='true' return='android.opengl.ETC1Util.ETC1Texture'><parameter name='input' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='isETC1Supported' static='true' return='boolean'/><method api_added='8' name='loadTexture' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='border' type='int'/><parameter name='fallbackFormat' type='int'/><parameter name='fallbackType' type='int'/><parameter name='input' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='loadTexture' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='border' type='int'/><parameter name='fallbackFormat' type='int'/><parameter name='fallbackType' type='int'/><parameter name='texture' type='android.opengl.ETC1Util.ETC1Texture'/></method><method api_added='8' name='writeTexture' static='true'><parameter name='texture' type='android.opengl.ETC1Util.ETC1Texture'/><parameter name='output' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='8' name='ETC1Util.ETC1Texture' extends='java.lang.Object' static='true'><constructor api_added='8' name='ETC1Util.ETC1Texture' type='android.opengl.ETC1Util.ETC1Texture'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='data' type='java.nio.ByteBuffer'/></constructor><method api_added='8' name='getData' return='java.nio.ByteBuffer'/><method api_added='8' name='getHeight' return='int'/><method api_added='8' name='getWidth' return='int'/></class><class api_added='8' name='GLES20' extends='java.lang.Object'><constructor api_added='8' name='GLES20' type='android.opengl.GLES20'/><field api_added='8' name='GL_ACTIVE_ATTRIBUTES' final='true' static='true' value='35721' type='int'/><field api_added='8' name='GL_ACTIVE_ATTRIBUTE_MAX_LENGTH' final='true' static='true' value='35722' type='int'/><field api_added='8' name='GL_ACTIVE_TEXTURE' final='true' static='true' value='34016' type='int'/><field api_added='8' name='GL_ACTIVE_UNIFORMS' final='true' static='true' value='35718' type='int'/><field api_added='8' name='GL_ACTIVE_UNIFORM_MAX_LENGTH' final='true' static='true' value='35719' type='int'/><field api_added='8' name='GL_ALIASED_LINE_WIDTH_RANGE' final='true' static='true' value='33902' type='int'/><field api_added='8' name='GL_ALIASED_POINT_SIZE_RANGE' final='true' static='true' value='33901' type='int'/><field api_added='8' name='GL_ALPHA' final='true' static='true' value='6406' type='int'/><field api_added='8' name='GL_ALPHA_BITS' final='true' static='true' value='3413' type='int'/><field api_added='8' name='GL_ALWAYS' final='true' static='true' value='519' type='int'/><field api_added='8' name='GL_ARRAY_BUFFER' final='true' static='true' value='34962' type='int'/><field api_added='8' name='GL_ARRAY_BUFFER_BINDING' final='true' static='true' value='34964' type='int'/><field api_added='8' name='GL_ATTACHED_SHADERS' final='true' static='true' value='35717' type='int'/><field api_added='8' name='GL_BACK' final='true' static='true' value='1029' type='int'/><field api_added='8' name='GL_BLEND' final='true' static='true' value='3042' type='int'/><field api_added='8' name='GL_BLEND_COLOR' final='true' static='true' value='32773' type='int'/><field api_added='8' name='GL_BLEND_DST_ALPHA' final='true' static='true' value='32970' type='int'/><field api_added='8' name='GL_BLEND_DST_RGB' final='true' static='true' value='32968' type='int'/><field api_added='8' name='GL_BLEND_EQUATION' final='true' static='true' value='32777' type='int'/><field api_added='8' name='GL_BLEND_EQUATION_ALPHA' final='true' static='true' value='34877' type='int'/><field api_added='8' name='GL_BLEND_EQUATION_RGB' final='true' static='true' value='32777' type='int'/><field api_added='8' name='GL_BLEND_SRC_ALPHA' final='true' static='true' value='32971' type='int'/><field api_added='8' name='GL_BLEND_SRC_RGB' final='true' static='true' value='32969' type='int'/><field api_added='8' name='GL_BLUE_BITS' final='true' static='true' value='3412' type='int'/><field api_added='8' name='GL_BOOL' final='true' static='true' value='35670' type='int'/><field api_added='8' name='GL_BOOL_VEC2' final='true' static='true' value='35671' type='int'/><field api_added='8' name='GL_BOOL_VEC3' final='true' static='true' value='35672' type='int'/><field api_added='8' name='GL_BOOL_VEC4' final='true' static='true' value='35673' type='int'/><field api_added='8' name='GL_BUFFER_SIZE' final='true' static='true' value='34660' type='int'/><field api_added='8' name='GL_BUFFER_USAGE' final='true' static='true' value='34661' type='int'/><field api_added='8' name='GL_BYTE' final='true' static='true' value='5120' type='int'/><field api_added='8' name='GL_CCW' final='true' static='true' value='2305' type='int'/><field api_added='8' name='GL_CLAMP_TO_EDGE' final='true' static='true' value='33071' type='int'/><field api_added='8' name='GL_COLOR_ATTACHMENT0' final='true' static='true' value='36064' type='int'/><field api_added='8' name='GL_COLOR_BUFFER_BIT' final='true' static='true' value='16384' type='int'/><field api_added='8' name='GL_COLOR_CLEAR_VALUE' final='true' static='true' value='3106' type='int'/><field api_added='8' name='GL_COLOR_WRITEMASK' final='true' static='true' value='3107' type='int'/><field api_added='8' name='GL_COMPILE_STATUS' final='true' static='true' value='35713' type='int'/><field api_added='8' name='GL_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34467' type='int'/><field api_added='8' name='GL_CONSTANT_ALPHA' final='true' static='true' value='32771' type='int'/><field api_added='8' name='GL_CONSTANT_COLOR' final='true' static='true' value='32769' type='int'/><field api_added='8' name='GL_CULL_FACE' final='true' static='true' value='2884' type='int'/><field api_added='8' name='GL_CULL_FACE_MODE' final='true' static='true' value='2885' type='int'/><field api_added='8' name='GL_CURRENT_PROGRAM' final='true' static='true' value='35725' type='int'/><field api_added='8' name='GL_CURRENT_VERTEX_ATTRIB' final='true' static='true' value='34342' type='int'/><field api_added='8' name='GL_CW' final='true' static='true' value='2304' type='int'/><field api_added='8' name='GL_DECR' final='true' static='true' value='7683' type='int'/><field api_added='8' name='GL_DECR_WRAP' final='true' static='true' value='34056' type='int'/><field api_added='8' name='GL_DELETE_STATUS' final='true' static='true' value='35712' type='int'/><field api_added='8' name='GL_DEPTH_ATTACHMENT' final='true' static='true' value='36096' type='int'/><field api_added='8' name='GL_DEPTH_BITS' final='true' static='true' value='3414' type='int'/><field api_added='8' name='GL_DEPTH_BUFFER_BIT' final='true' static='true' value='256' type='int'/><field api_added='8' name='GL_DEPTH_CLEAR_VALUE' final='true' static='true' value='2931' type='int'/><field api_added='8' name='GL_DEPTH_COMPONENT' final='true' static='true' value='6402' type='int'/><field api_added='8' name='GL_DEPTH_COMPONENT16' final='true' static='true' value='33189' type='int'/><field api_added='8' name='GL_DEPTH_FUNC' final='true' static='true' value='2932' type='int'/><field api_added='8' name='GL_DEPTH_RANGE' final='true' static='true' value='2928' type='int'/><field api_added='8' name='GL_DEPTH_TEST' final='true' static='true' value='2929' type='int'/><field api_added='8' name='GL_DEPTH_WRITEMASK' final='true' static='true' value='2930' type='int'/><field api_added='8' name='GL_DITHER' final='true' static='true' value='3024' type='int'/><field api_added='8' name='GL_DONT_CARE' final='true' static='true' value='4352' type='int'/><field api_added='8' name='GL_DST_ALPHA' final='true' static='true' value='772' type='int'/><field api_added='8' name='GL_DST_COLOR' final='true' static='true' value='774' type='int'/><field api_added='8' name='GL_DYNAMIC_DRAW' final='true' static='true' value='35048' type='int'/><field api_added='8' name='GL_ELEMENT_ARRAY_BUFFER' final='true' static='true' value='34963' type='int'/><field api_added='8' name='GL_ELEMENT_ARRAY_BUFFER_BINDING' final='true' static='true' value='34965' type='int'/><field api_added='8' name='GL_EQUAL' final='true' static='true' value='514' type='int'/><field api_added='8' name='GL_EXTENSIONS' final='true' static='true' value='7939' type='int'/><field api_added='8' name='GL_FALSE' final='true' static='true' value='0' type='int'/><field api_added='8' name='GL_FASTEST' final='true' static='true' value='4353' type='int'/><field api_added='8' name='GL_FIXED' final='true' static='true' value='5132' type='int'/><field api_added='8' name='GL_FLOAT' final='true' static='true' value='5126' type='int'/><field api_added='8' name='GL_FLOAT_MAT2' final='true' static='true' value='35674' type='int'/><field api_added='8' name='GL_FLOAT_MAT3' final='true' static='true' value='35675' type='int'/><field api_added='8' name='GL_FLOAT_MAT4' final='true' static='true' value='35676' type='int'/><field api_added='8' name='GL_FLOAT_VEC2' final='true' static='true' value='35664' type='int'/><field api_added='8' name='GL_FLOAT_VEC3' final='true' static='true' value='35665' type='int'/><field api_added='8' name='GL_FLOAT_VEC4' final='true' static='true' value='35666' type='int'/><field api_added='8' name='GL_FRAGMENT_SHADER' final='true' static='true' value='35632' type='int'/><field api_added='8' name='GL_FRAMEBUFFER' final='true' static='true' value='36160' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME' final='true' static='true' value='36049' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE' final='true' static='true' value='36048' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE' final='true' static='true' value='36051' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL' final='true' static='true' value='36050' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_BINDING' final='true' static='true' value='36006' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_COMPLETE' final='true' static='true' value='36053' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT' final='true' static='true' value='36054' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS' final='true' static='true' value='36057' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT' final='true' static='true' value='36055' type='int'/><field api_added='8' name='GL_FRAMEBUFFER_UNSUPPORTED' final='true' static='true' value='36061' type='int'/><field api_added='8' name='GL_FRONT' final='true' static='true' value='1028' type='int'/><field api_added='8' name='GL_FRONT_AND_BACK' final='true' static='true' value='1032' type='int'/><field api_added='8' name='GL_FRONT_FACE' final='true' static='true' value='2886' type='int'/><field api_added='8' name='GL_FUNC_ADD' final='true' static='true' value='32774' type='int'/><field api_added='8' name='GL_FUNC_REVERSE_SUBTRACT' final='true' static='true' value='32779' type='int'/><field api_added='8' name='GL_FUNC_SUBTRACT' final='true' static='true' value='32778' type='int'/><field api_added='8' name='GL_GENERATE_MIPMAP_HINT' final='true' static='true' value='33170' type='int'/><field api_added='8' name='GL_GEQUAL' final='true' static='true' value='518' type='int'/><field api_added='8' name='GL_GREATER' final='true' static='true' value='516' type='int'/><field api_added='8' name='GL_GREEN_BITS' final='true' static='true' value='3411' type='int'/><field api_added='8' name='GL_HIGH_FLOAT' final='true' static='true' value='36338' type='int'/><field api_added='8' name='GL_HIGH_INT' final='true' static='true' value='36341' type='int'/><field api_added='8' name='GL_IMPLEMENTATION_COLOR_READ_FORMAT' final='true' static='true' value='35739' type='int'/><field api_added='8' name='GL_IMPLEMENTATION_COLOR_READ_TYPE' final='true' static='true' value='35738' type='int'/><field api_added='8' name='GL_INCR' final='true' static='true' value='7682' type='int'/><field api_added='8' name='GL_INCR_WRAP' final='true' static='true' value='34055' type='int'/><field api_added='8' name='GL_INFO_LOG_LENGTH' final='true' static='true' value='35716' type='int'/><field api_added='8' name='GL_INT' final='true' static='true' value='5124' type='int'/><field api_added='8' name='GL_INT_VEC2' final='true' static='true' value='35667' type='int'/><field api_added='8' name='GL_INT_VEC3' final='true' static='true' value='35668' type='int'/><field api_added='8' name='GL_INT_VEC4' final='true' static='true' value='35669' type='int'/><field api_added='8' name='GL_INVALID_ENUM' final='true' static='true' value='1280' type='int'/><field api_added='8' name='GL_INVALID_FRAMEBUFFER_OPERATION' final='true' static='true' value='1286' type='int'/><field api_added='8' name='GL_INVALID_OPERATION' final='true' static='true' value='1282' type='int'/><field api_added='8' name='GL_INVALID_VALUE' final='true' static='true' value='1281' type='int'/><field api_added='8' name='GL_INVERT' final='true' static='true' value='5386' type='int'/><field api_added='8' name='GL_KEEP' final='true' static='true' value='7680' type='int'/><field api_added='8' name='GL_LEQUAL' final='true' static='true' value='515' type='int'/><field api_added='8' name='GL_LESS' final='true' static='true' value='513' type='int'/><field api_added='8' name='GL_LINEAR' final='true' static='true' value='9729' type='int'/><field api_added='8' name='GL_LINEAR_MIPMAP_LINEAR' final='true' static='true' value='9987' type='int'/><field api_added='8' name='GL_LINEAR_MIPMAP_NEAREST' final='true' static='true' value='9985' type='int'/><field api_added='8' name='GL_LINES' final='true' static='true' value='1' type='int'/><field api_added='8' name='GL_LINE_LOOP' final='true' static='true' value='2' type='int'/><field api_added='8' name='GL_LINE_STRIP' final='true' static='true' value='3' type='int'/><field api_added='8' name='GL_LINE_WIDTH' final='true' static='true' value='2849' type='int'/><field api_added='8' name='GL_LINK_STATUS' final='true' static='true' value='35714' type='int'/><field api_added='8' name='GL_LOW_FLOAT' final='true' static='true' value='36336' type='int'/><field api_added='8' name='GL_LOW_INT' final='true' static='true' value='36339' type='int'/><field api_added='8' name='GL_LUMINANCE' final='true' static='true' value='6409' type='int'/><field api_added='8' name='GL_LUMINANCE_ALPHA' final='true' static='true' value='6410' type='int'/><field api_added='8' name='GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS' final='true' static='true' value='35661' type='int'/><field api_added='8' name='GL_MAX_CUBE_MAP_TEXTURE_SIZE' final='true' static='true' value='34076' type='int'/><field api_added='8' name='GL_MAX_FRAGMENT_UNIFORM_VECTORS' final='true' static='true' value='36349' type='int'/><field api_added='8' name='GL_MAX_RENDERBUFFER_SIZE' final='true' static='true' value='34024' type='int'/><field api_added='8' name='GL_MAX_TEXTURE_IMAGE_UNITS' final='true' static='true' value='34930' type='int'/><field api_added='8' name='GL_MAX_TEXTURE_SIZE' final='true' static='true' value='3379' type='int'/><field api_added='8' name='GL_MAX_VARYING_VECTORS' final='true' static='true' value='36348' type='int'/><field api_added='8' name='GL_MAX_VERTEX_ATTRIBS' final='true' static='true' value='34921' type='int'/><field api_added='8' name='GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS' final='true' static='true' value='35660' type='int'/><field api_added='8' name='GL_MAX_VERTEX_UNIFORM_VECTORS' final='true' static='true' value='36347' type='int'/><field api_added='8' name='GL_MAX_VIEWPORT_DIMS' final='true' static='true' value='3386' type='int'/><field api_added='8' name='GL_MEDIUM_FLOAT' final='true' static='true' value='36337' type='int'/><field api_added='8' name='GL_MEDIUM_INT' final='true' static='true' value='36340' type='int'/><field api_added='8' name='GL_MIRRORED_REPEAT' final='true' static='true' value='33648' type='int'/><field api_added='8' name='GL_NEAREST' final='true' static='true' value='9728' type='int'/><field api_added='8' name='GL_NEAREST_MIPMAP_LINEAR' final='true' static='true' value='9986' type='int'/><field api_added='8' name='GL_NEAREST_MIPMAP_NEAREST' final='true' static='true' value='9984' type='int'/><field api_added='8' name='GL_NEVER' final='true' static='true' value='512' type='int'/><field api_added='8' name='GL_NICEST' final='true' static='true' value='4354' type='int'/><field api_added='8' name='GL_NONE' final='true' static='true' value='0' type='int'/><field api_added='8' name='GL_NOTEQUAL' final='true' static='true' value='517' type='int'/><field api_added='8' name='GL_NO_ERROR' final='true' static='true' value='0' type='int'/><field api_added='8' name='GL_NUM_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34466' type='int'/><field api_added='8' name='GL_NUM_SHADER_BINARY_FORMATS' final='true' static='true' value='36345' type='int'/><field api_added='8' name='GL_ONE' final='true' static='true' value='1' type='int'/><field api_added='8' name='GL_ONE_MINUS_CONSTANT_ALPHA' final='true' static='true' value='32772' type='int'/><field api_added='8' name='GL_ONE_MINUS_CONSTANT_COLOR' final='true' static='true' value='32770' type='int'/><field api_added='8' name='GL_ONE_MINUS_DST_ALPHA' final='true' static='true' value='773' type='int'/><field api_added='8' name='GL_ONE_MINUS_DST_COLOR' final='true' static='true' value='775' type='int'/><field api_added='8' name='GL_ONE_MINUS_SRC_ALPHA' final='true' static='true' value='771' type='int'/><field api_added='8' name='GL_ONE_MINUS_SRC_COLOR' final='true' static='true' value='769' type='int'/><field api_added='8' name='GL_OUT_OF_MEMORY' final='true' static='true' value='1285' type='int'/><field api_added='8' name='GL_PACK_ALIGNMENT' final='true' static='true' value='3333' type='int'/><field api_added='8' name='GL_POINTS' final='true' static='true' value='0' type='int'/><field api_added='8' name='GL_POLYGON_OFFSET_FACTOR' final='true' static='true' value='32824' type='int'/><field api_added='8' name='GL_POLYGON_OFFSET_FILL' final='true' static='true' value='32823' type='int'/><field api_added='8' name='GL_POLYGON_OFFSET_UNITS' final='true' static='true' value='10752' type='int'/><field api_added='8' name='GL_RED_BITS' final='true' static='true' value='3410' type='int'/><field api_added='8' name='GL_RENDERBUFFER' final='true' static='true' value='36161' type='int'/><field api_added='8' name='GL_RENDERBUFFER_ALPHA_SIZE' final='true' static='true' value='36179' type='int'/><field api_added='8' name='GL_RENDERBUFFER_BINDING' final='true' static='true' value='36007' type='int'/><field api_added='8' name='GL_RENDERBUFFER_BLUE_SIZE' final='true' static='true' value='36178' type='int'/><field api_added='8' name='GL_RENDERBUFFER_DEPTH_SIZE' final='true' static='true' value='36180' type='int'/><field api_added='8' name='GL_RENDERBUFFER_GREEN_SIZE' final='true' static='true' value='36177' type='int'/><field api_added='8' name='GL_RENDERBUFFER_HEIGHT' final='true' static='true' value='36163' type='int'/><field api_added='8' name='GL_RENDERBUFFER_INTERNAL_FORMAT' final='true' static='true' value='36164' type='int'/><field api_added='8' name='GL_RENDERBUFFER_RED_SIZE' final='true' static='true' value='36176' type='int'/><field api_added='8' name='GL_RENDERBUFFER_STENCIL_SIZE' final='true' static='true' value='36181' type='int'/><field api_added='8' name='GL_RENDERBUFFER_WIDTH' final='true' static='true' value='36162' type='int'/><field api_added='8' name='GL_RENDERER' final='true' static='true' value='7937' type='int'/><field api_added='8' name='GL_REPEAT' final='true' static='true' value='10497' type='int'/><field api_added='8' name='GL_REPLACE' final='true' static='true' value='7681' type='int'/><field api_added='8' name='GL_RGB' final='true' static='true' value='6407' type='int'/><field api_added='8' name='GL_RGB565' final='true' static='true' value='36194' type='int'/><field api_added='8' name='GL_RGB5_A1' final='true' static='true' value='32855' type='int'/><field api_added='8' name='GL_RGBA' final='true' static='true' value='6408' type='int'/><field api_added='8' name='GL_RGBA4' final='true' static='true' value='32854' type='int'/><field api_added='8' name='GL_SAMPLER_2D' final='true' static='true' value='35678' type='int'/><field api_added='8' name='GL_SAMPLER_CUBE' final='true' static='true' value='35680' type='int'/><field api_added='8' name='GL_SAMPLES' final='true' static='true' value='32937' type='int'/><field api_added='8' name='GL_SAMPLE_ALPHA_TO_COVERAGE' final='true' static='true' value='32926' type='int'/><field api_added='8' name='GL_SAMPLE_BUFFERS' final='true' static='true' value='32936' type='int'/><field api_added='8' name='GL_SAMPLE_COVERAGE' final='true' static='true' value='32928' type='int'/><field api_added='8' name='GL_SAMPLE_COVERAGE_INVERT' final='true' static='true' value='32939' type='int'/><field api_added='8' name='GL_SAMPLE_COVERAGE_VALUE' final='true' static='true' value='32938' type='int'/><field api_added='8' name='GL_SCISSOR_BOX' final='true' static='true' value='3088' type='int'/><field api_added='8' name='GL_SCISSOR_TEST' final='true' static='true' value='3089' type='int'/><field api_added='8' name='GL_SHADER_BINARY_FORMATS' final='true' static='true' value='36344' type='int'/><field api_added='8' name='GL_SHADER_COMPILER' final='true' static='true' value='36346' type='int'/><field api_added='8' name='GL_SHADER_SOURCE_LENGTH' final='true' static='true' value='35720' type='int'/><field api_added='8' name='GL_SHADER_TYPE' final='true' static='true' value='35663' type='int'/><field api_added='8' name='GL_SHADING_LANGUAGE_VERSION' final='true' static='true' value='35724' type='int'/><field api_added='8' name='GL_SHORT' final='true' static='true' value='5122' type='int'/><field api_added='8' name='GL_SRC_ALPHA' final='true' static='true' value='770' type='int'/><field api_added='8' name='GL_SRC_ALPHA_SATURATE' final='true' static='true' value='776' type='int'/><field api_added='8' name='GL_SRC_COLOR' final='true' static='true' value='768' type='int'/><field api_added='8' name='GL_STATIC_DRAW' final='true' static='true' value='35044' type='int'/><field api_added='8' name='GL_STENCIL_ATTACHMENT' final='true' static='true' value='36128' type='int'/><field api_added='8' name='GL_STENCIL_BACK_FAIL' final='true' static='true' value='34817' type='int'/><field api_added='8' name='GL_STENCIL_BACK_FUNC' final='true' static='true' value='34816' type='int'/><field api_added='8' name='GL_STENCIL_BACK_PASS_DEPTH_FAIL' final='true' static='true' value='34818' type='int'/><field api_added='8' name='GL_STENCIL_BACK_PASS_DEPTH_PASS' final='true' static='true' value='34819' type='int'/><field api_added='8' name='GL_STENCIL_BACK_REF' final='true' static='true' value='36003' type='int'/><field api_added='8' name='GL_STENCIL_BACK_VALUE_MASK' final='true' static='true' value='36004' type='int'/><field api_added='8' name='GL_STENCIL_BACK_WRITEMASK' final='true' static='true' value='36005' type='int'/><field api_added='8' name='GL_STENCIL_BITS' final='true' static='true' value='3415' type='int'/><field api_added='8' name='GL_STENCIL_BUFFER_BIT' final='true' static='true' value='1024' type='int'/><field api_added='8' name='GL_STENCIL_CLEAR_VALUE' final='true' static='true' value='2961' type='int'/><field api_added='8' name='GL_STENCIL_FAIL' final='true' static='true' value='2964' type='int'/><field api_added='8' name='GL_STENCIL_FUNC' final='true' static='true' value='2962' type='int'/><field api_added='8' name='GL_STENCIL_INDEX' final='true' static='true' value='6401' type='int'/><field api_added='8' name='GL_STENCIL_INDEX8' final='true' static='true' value='36168' type='int'/><field api_added='8' name='GL_STENCIL_PASS_DEPTH_FAIL' final='true' static='true' value='2965' type='int'/><field api_added='8' name='GL_STENCIL_PASS_DEPTH_PASS' final='true' static='true' value='2966' type='int'/><field api_added='8' name='GL_STENCIL_REF' final='true' static='true' value='2967' type='int'/><field api_added='8' name='GL_STENCIL_TEST' final='true' static='true' value='2960' type='int'/><field api_added='8' name='GL_STENCIL_VALUE_MASK' final='true' static='true' value='2963' type='int'/><field api_added='8' name='GL_STENCIL_WRITEMASK' final='true' static='true' value='2968' type='int'/><field api_added='8' name='GL_STREAM_DRAW' final='true' static='true' value='35040' type='int'/><field api_added='8' name='GL_SUBPIXEL_BITS' final='true' static='true' value='3408' type='int'/><field api_added='8' name='GL_TEXTURE' final='true' static='true' value='5890' type='int'/><field api_added='8' name='GL_TEXTURE0' final='true' static='true' value='33984' type='int'/><field api_added='8' name='GL_TEXTURE1' final='true' static='true' value='33985' type='int'/><field api_added='8' name='GL_TEXTURE10' final='true' static='true' value='33994' type='int'/><field api_added='8' name='GL_TEXTURE11' final='true' static='true' value='33995' type='int'/><field api_added='8' name='GL_TEXTURE12' final='true' static='true' value='33996' type='int'/><field api_added='8' name='GL_TEXTURE13' final='true' static='true' value='33997' type='int'/><field api_added='8' name='GL_TEXTURE14' final='true' static='true' value='33998' type='int'/><field api_added='8' name='GL_TEXTURE15' final='true' static='true' value='33999' type='int'/><field api_added='8' name='GL_TEXTURE16' final='true' static='true' value='34000' type='int'/><field api_added='8' name='GL_TEXTURE17' final='true' static='true' value='34001' type='int'/><field api_added='8' name='GL_TEXTURE18' final='true' static='true' value='34002' type='int'/><field api_added='8' name='GL_TEXTURE19' final='true' static='true' value='34003' type='int'/><field api_added='8' name='GL_TEXTURE2' final='true' static='true' value='33986' type='int'/><field api_added='8' name='GL_TEXTURE20' final='true' static='true' value='34004' type='int'/><field api_added='8' name='GL_TEXTURE21' final='true' static='true' value='34005' type='int'/><field api_added='8' name='GL_TEXTURE22' final='true' static='true' value='34006' type='int'/><field api_added='8' name='GL_TEXTURE23' final='true' static='true' value='34007' type='int'/><field api_added='8' name='GL_TEXTURE24' final='true' static='true' value='34008' type='int'/><field api_added='8' name='GL_TEXTURE25' final='true' static='true' value='34009' type='int'/><field api_added='8' name='GL_TEXTURE26' final='true' static='true' value='34010' type='int'/><field api_added='8' name='GL_TEXTURE27' final='true' static='true' value='34011' type='int'/><field api_added='8' name='GL_TEXTURE28' final='true' static='true' value='34012' type='int'/><field api_added='8' name='GL_TEXTURE29' final='true' static='true' value='34013' type='int'/><field api_added='8' name='GL_TEXTURE3' final='true' static='true' value='33987' type='int'/><field api_added='8' name='GL_TEXTURE30' final='true' static='true' value='34014' type='int'/><field api_added='8' name='GL_TEXTURE31' final='true' static='true' value='34015' type='int'/><field api_added='8' name='GL_TEXTURE4' final='true' static='true' value='33988' type='int'/><field api_added='8' name='GL_TEXTURE5' final='true' static='true' value='33989' type='int'/><field api_added='8' name='GL_TEXTURE6' final='true' static='true' value='33990' type='int'/><field api_added='8' name='GL_TEXTURE7' final='true' static='true' value='33991' type='int'/><field api_added='8' name='GL_TEXTURE8' final='true' static='true' value='33992' type='int'/><field api_added='8' name='GL_TEXTURE9' final='true' static='true' value='33993' type='int'/><field api_added='8' name='GL_TEXTURE_2D' final='true' static='true' value='3553' type='int'/><field api_added='8' name='GL_TEXTURE_BINDING_2D' final='true' static='true' value='32873' type='int'/><field api_added='8' name='GL_TEXTURE_BINDING_CUBE_MAP' final='true' static='true' value='34068' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP' final='true' static='true' value='34067' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X' final='true' static='true' value='34070' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y' final='true' static='true' value='34072' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z' final='true' static='true' value='34074' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_POSITIVE_X' final='true' static='true' value='34069' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y' final='true' static='true' value='34071' type='int'/><field api_added='8' name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z' final='true' static='true' value='34073' type='int'/><field api_added='8' name='GL_TEXTURE_MAG_FILTER' final='true' static='true' value='10240' type='int'/><field api_added='8' name='GL_TEXTURE_MIN_FILTER' final='true' static='true' value='10241' type='int'/><field api_added='8' name='GL_TEXTURE_WRAP_S' final='true' static='true' value='10242' type='int'/><field api_added='8' name='GL_TEXTURE_WRAP_T' final='true' static='true' value='10243' type='int'/><field api_added='8' name='GL_TRIANGLES' final='true' static='true' value='4' type='int'/><field api_added='8' name='GL_TRIANGLE_FAN' final='true' static='true' value='6' type='int'/><field api_added='8' name='GL_TRIANGLE_STRIP' final='true' static='true' value='5' type='int'/><field api_added='8' name='GL_TRUE' final='true' static='true' value='1' type='int'/><field api_added='8' name='GL_UNPACK_ALIGNMENT' final='true' static='true' value='3317' type='int'/><field api_added='8' name='GL_UNSIGNED_BYTE' final='true' static='true' value='5121' type='int'/><field api_added='8' name='GL_UNSIGNED_INT' final='true' static='true' value='5125' type='int'/><field api_added='8' name='GL_UNSIGNED_SHORT' final='true' static='true' value='5123' type='int'/><field api_added='8' name='GL_UNSIGNED_SHORT_4_4_4_4' final='true' static='true' value='32819' type='int'/><field api_added='8' name='GL_UNSIGNED_SHORT_5_5_5_1' final='true' static='true' value='32820' type='int'/><field api_added='8' name='GL_UNSIGNED_SHORT_5_6_5' final='true' static='true' value='33635' type='int'/><field api_added='8' name='GL_VALIDATE_STATUS' final='true' static='true' value='35715' type='int'/><field api_added='8' name='GL_VENDOR' final='true' static='true' value='7936' type='int'/><field api_added='8' name='GL_VERSION' final='true' static='true' value='7938' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING' final='true' static='true' value='34975' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_ENABLED' final='true' static='true' value='34338' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_NORMALIZED' final='true' static='true' value='34922' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_POINTER' final='true' static='true' value='34373' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_SIZE' final='true' static='true' value='34339' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_STRIDE' final='true' static='true' value='34340' type='int'/><field api_added='8' name='GL_VERTEX_ATTRIB_ARRAY_TYPE' final='true' static='true' value='34341' type='int'/><field api_added='8' name='GL_VERTEX_SHADER' final='true' static='true' value='35633' type='int'/><field api_added='8' name='GL_VIEWPORT' final='true' static='true' value='2978' type='int'/><field api_added='8' name='GL_ZERO' final='true' static='true' value='0' type='int'/><method api_added='8' name='glActiveTexture' native='true' static='true'><parameter name='texture' type='int'/></method><method api_added='8' name='glAttachShader' native='true' static='true'><parameter name='program' type='int'/><parameter name='shader' type='int'/></method><method api_added='8' name='glBindAttribLocation' native='true' static='true'><parameter name='program' type='int'/><parameter name='index' type='int'/><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='glBindBuffer' native='true' static='true'><parameter name='target' type='int'/><parameter name='buffer' type='int'/></method><method api_added='8' name='glBindFramebuffer' native='true' static='true'><parameter name='target' type='int'/><parameter name='framebuffer' type='int'/></method><method api_added='8' name='glBindRenderbuffer' native='true' static='true'><parameter name='target' type='int'/><parameter name='renderbuffer' type='int'/></method><method api_added='8' name='glBindTexture' native='true' static='true'><parameter name='target' type='int'/><parameter name='texture' type='int'/></method><method api_added='8' name='glBlendColor' native='true' static='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method api_added='8' name='glBlendEquation' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='8' name='glBlendEquationSeparate' native='true' static='true'><parameter name='modeRGB' type='int'/><parameter name='modeAlpha' type='int'/></method><method api_added='8' name='glBlendFunc' native='true' static='true'><parameter name='sfactor' type='int'/><parameter name='dfactor' type='int'/></method><method api_added='8' name='glBlendFuncSeparate' native='true' static='true'><parameter name='srcRGB' type='int'/><parameter name='dstRGB' type='int'/><parameter name='srcAlpha' type='int'/><parameter name='dstAlpha' type='int'/></method><method api_added='8' name='glBufferData' native='true' static='true'><parameter name='target' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/><parameter name='usage' type='int'/></method><method api_added='8' name='glBufferSubData' native='true' static='true'><parameter name='target' type='int'/><parameter name='offset' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='8' name='glCheckFramebufferStatus' native='true' static='true' return='int'><parameter name='target' type='int'/></method><method api_added='8' name='glClear' native='true' static='true'><parameter name='mask' type='int'/></method><method api_added='8' name='glClearColor' native='true' static='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method api_added='8' name='glClearDepthf' native='true' static='true'><parameter name='depth' type='float'/></method><method api_added='8' name='glClearStencil' native='true' static='true'><parameter name='s' type='int'/></method><method api_added='8' name='glColorMask' native='true' static='true'><parameter name='red' type='boolean'/><parameter name='green' type='boolean'/><parameter name='blue' type='boolean'/><parameter name='alpha' type='boolean'/></method><method api_added='8' name='glCompileShader' native='true' static='true'><parameter name='shader' type='int'/></method><method api_added='8' name='glCompressedTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='8' name='glCompressedTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method api_added='8' name='glCopyTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/></method><method api_added='8' name='glCopyTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='glCreateProgram' native='true' static='true' return='int'/><method api_added='8' name='glCreateShader' native='true' static='true' return='int'><parameter name='type' type='int'/></method><method api_added='8' name='glCullFace' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='8' name='glDeleteBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glDeleteBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glDeleteFramebuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glDeleteFramebuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glDeleteProgram' native='true' static='true'><parameter name='program' type='int'/></method><method api_added='8' name='glDeleteRenderbuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glDeleteRenderbuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glDeleteShader' native='true' static='true'><parameter name='shader' type='int'/></method><method api_added='8' name='glDeleteTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glDeleteTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method api_added='8' name='glDepthFunc' native='true' static='true'><parameter name='func' type='int'/></method><method api_added='8' name='glDepthMask' native='true' static='true'><parameter name='flag' type='boolean'/></method><method api_added='8' name='glDepthRangef' native='true' static='true'><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method api_added='8' name='glDetachShader' native='true' static='true'><parameter name='program' type='int'/><parameter name='shader' type='int'/></method><method api_added='8' name='glDisable' native='true' static='true'><parameter name='cap' type='int'/></method><method api_added='8' name='glDisableVertexAttribArray' native='true' static='true'><parameter name='index' type='int'/></method><method api_added='8' name='glDrawArrays' native='true' static='true'><parameter name='mode' type='int'/><parameter name='first' type='int'/><parameter name='count' type='int'/></method><method api_added='8' name='glDrawElements' native='true' static='true'><parameter name='mode' type='int'/><parameter name='count' type='int'/><parameter name='type' type='int'/><parameter name='indices' type='java.nio.Buffer'/></method><method api_added='8' name='glEnable' native='true' static='true'><parameter name='cap' type='int'/></method><method api_added='8' name='glEnableVertexAttribArray' native='true' static='true'><parameter name='index' type='int'/></method><method api_added='8' name='glFinish' native='true' static='true'/><method api_added='8' name='glFlush' native='true' static='true'/><method api_added='8' name='glFramebufferRenderbuffer' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='renderbuffertarget' type='int'/><parameter name='renderbuffer' type='int'/></method><method api_added='8' name='glFramebufferTexture2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='textarget' type='int'/><parameter name='texture' type='int'/><parameter name='level' type='int'/></method><method api_added='8' name='glFrontFace' native='true' static='true'><parameter name='mode' type='int'/></method><method api_added='8' name='glGenBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGenBuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGenFramebuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGenFramebuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGenRenderbuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGenRenderbuffers' native='true' static='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGenTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGenTextures' native='true' static='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGenerateMipmap' native='true' static='true'><parameter name='target' type='int'/></method><method api_added='8' name='glGetActiveAttrib' native='true' static='true'><parameter name='program' type='int'/><parameter name='index' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='int[]'/><parameter name='lengthOffset' type='int'/><parameter name='size' type='int[]'/><parameter name='sizeOffset' type='int'/><parameter name='type' type='int[]'/><parameter name='typeOffset' type='int'/><parameter name='name' type='byte[]'/><parameter name='nameOffset' type='int'/></method><method api_added='8' name='glGetActiveAttrib' native='true' static='true'><parameter name='program' type='int'/><parameter name='index' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='java.nio.IntBuffer'/><parameter name='size' type='java.nio.IntBuffer'/><parameter name='type' type='java.nio.IntBuffer'/><parameter name='name' type='byte'/></method><method api_added='8' name='glGetActiveUniform' native='true' static='true'><parameter name='program' type='int'/><parameter name='index' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='int[]'/><parameter name='lengthOffset' type='int'/><parameter name='size' type='int[]'/><parameter name='sizeOffset' type='int'/><parameter name='type' type='int[]'/><parameter name='typeOffset' type='int'/><parameter name='name' type='byte[]'/><parameter name='nameOffset' type='int'/></method><method api_added='8' name='glGetActiveUniform' native='true' static='true'><parameter name='program' type='int'/><parameter name='index' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='java.nio.IntBuffer'/><parameter name='size' type='java.nio.IntBuffer'/><parameter name='type' type='java.nio.IntBuffer'/><parameter name='name' type='byte'/></method><method api_added='8' name='glGetAttachedShaders' native='true' static='true'><parameter name='program' type='int'/><parameter name='maxcount' type='int'/><parameter name='count' type='int[]'/><parameter name='countOffset' type='int'/><parameter name='shaders' type='int[]'/><parameter name='shadersOffset' type='int'/></method><method api_added='8' name='glGetAttachedShaders' native='true' static='true'><parameter name='program' type='int'/><parameter name='maxcount' type='int'/><parameter name='count' type='java.nio.IntBuffer'/><parameter name='shaders' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetAttribLocation' native='true' static='true' return='int'><parameter name='program' type='int'/><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='glGetBooleanv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='boolean[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetBooleanv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetBufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetBufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetError' native='true' static='true' return='int'/><method api_added='8' name='glGetFloatv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetFloatv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glGetFramebufferAttachmentParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetFramebufferAttachmentParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetIntegerv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetIntegerv' native='true' static='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetProgramInfoLog' native='true' static='true' return='java.lang.String'><parameter name='program' type='int'/></method><method api_added='8' name='glGetProgramiv' native='true' static='true'><parameter name='program' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetProgramiv' native='true' static='true'><parameter name='program' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetRenderbufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetRenderbufferParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetShaderInfoLog' native='true' static='true' return='java.lang.String'><parameter name='shader' type='int'/></method><method api_added='8' name='glGetShaderPrecisionFormat' native='true' static='true'><parameter name='shadertype' type='int'/><parameter name='precisiontype' type='int'/><parameter name='range' type='int[]'/><parameter name='rangeOffset' type='int'/><parameter name='precision' type='int[]'/><parameter name='precisionOffset' type='int'/></method><method api_added='8' name='glGetShaderPrecisionFormat' native='true' static='true'><parameter name='shadertype' type='int'/><parameter name='precisiontype' type='int'/><parameter name='range' type='java.nio.IntBuffer'/><parameter name='precision' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetShaderSource' native='true' static='true'><parameter name='shader' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='int[]'/><parameter name='lengthOffset' type='int'/><parameter name='source' type='byte[]'/><parameter name='sourceOffset' type='int'/></method><method api_added='8' name='glGetShaderSource' native='true' static='true'><parameter name='shader' type='int'/><parameter name='bufsize' type='int'/><parameter name='length' type='java.nio.IntBuffer'/><parameter name='source' type='byte'/></method><method api_added='8' name='glGetShaderiv' native='true' static='true'><parameter name='shader' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetShaderiv' native='true' static='true'><parameter name='shader' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetString' native='true' static='true' return='java.lang.String'><parameter name='name' type='int'/></method><method api_added='8' name='glGetTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glGetTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetUniformLocation' native='true' static='true' return='int'><parameter name='program' type='int'/><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='glGetUniformfv' native='true' static='true'><parameter name='program' type='int'/><parameter name='location' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetUniformfv' native='true' static='true'><parameter name='program' type='int'/><parameter name='location' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glGetUniformiv' native='true' static='true'><parameter name='program' type='int'/><parameter name='location' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetUniformiv' native='true' static='true'><parameter name='program' type='int'/><parameter name='location' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glGetVertexAttribfv' native='true' static='true'><parameter name='index' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetVertexAttribfv' native='true' static='true'><parameter name='index' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glGetVertexAttribiv' native='true' static='true'><parameter name='index' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glGetVertexAttribiv' native='true' static='true'><parameter name='index' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glHint' native='true' static='true'><parameter name='target' type='int'/><parameter name='mode' type='int'/></method><method api_added='8' name='glIsBuffer' native='true' static='true' return='boolean'><parameter name='buffer' type='int'/></method><method api_added='8' name='glIsEnabled' native='true' static='true' return='boolean'><parameter name='cap' type='int'/></method><method api_added='8' name='glIsFramebuffer' native='true' static='true' return='boolean'><parameter name='framebuffer' type='int'/></method><method api_added='8' name='glIsProgram' native='true' static='true' return='boolean'><parameter name='program' type='int'/></method><method api_added='8' name='glIsRenderbuffer' native='true' static='true' return='boolean'><parameter name='renderbuffer' type='int'/></method><method api_added='8' name='glIsShader' native='true' static='true' return='boolean'><parameter name='shader' type='int'/></method><method api_added='8' name='glIsTexture' native='true' static='true' return='boolean'><parameter name='texture' type='int'/></method><method api_added='8' name='glLineWidth' native='true' static='true'><parameter name='width' type='float'/></method><method api_added='8' name='glLinkProgram' native='true' static='true'><parameter name='program' type='int'/></method><method api_added='8' name='glPixelStorei' native='true' static='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='8' name='glPolygonOffset' native='true' static='true'><parameter name='factor' type='float'/><parameter name='units' type='float'/></method><method api_added='8' name='glReadPixels' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='8' name='glReleaseShaderCompiler' native='true' static='true'/><method api_added='8' name='glRenderbufferStorage' native='true' static='true'><parameter name='target' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='glSampleCoverage' native='true' static='true'><parameter name='value' type='float'/><parameter name='invert' type='boolean'/></method><method api_added='8' name='glScissor' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='8' name='glShaderBinary' native='true' static='true'><parameter name='n' type='int'/><parameter name='shaders' type='int[]'/><parameter name='offset' type='int'/><parameter name='binaryformat' type='int'/><parameter name='binary' type='java.nio.Buffer'/><parameter name='length' type='int'/></method><method api_added='8' name='glShaderBinary' native='true' static='true'><parameter name='n' type='int'/><parameter name='shaders' type='java.nio.IntBuffer'/><parameter name='binaryformat' type='int'/><parameter name='binary' type='java.nio.Buffer'/><parameter name='length' type='int'/></method><method api_added='8' name='glShaderSource' native='true' static='true'><parameter name='shader' type='int'/><parameter name='string' type='java.lang.String'/></method><method api_added='8' name='glStencilFunc' native='true' static='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/><parameter name='mask' type='int'/></method><method api_added='8' name='glStencilFuncSeparate' native='true' static='true'><parameter name='face' type='int'/><parameter name='func' type='int'/><parameter name='ref' type='int'/><parameter name='mask' type='int'/></method><method api_added='8' name='glStencilMask' native='true' static='true'><parameter name='mask' type='int'/></method><method api_added='8' name='glStencilMaskSeparate' native='true' static='true'><parameter name='face' type='int'/><parameter name='mask' type='int'/></method><method api_added='8' name='glStencilOp' native='true' static='true'><parameter name='fail' type='int'/><parameter name='zfail' type='int'/><parameter name='zpass' type='int'/></method><method api_added='8' name='glStencilOpSeparate' native='true' static='true'><parameter name='face' type='int'/><parameter name='fail' type='int'/><parameter name='zfail' type='int'/><parameter name='zpass' type='int'/></method><method api_added='8' name='glTexImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='8' name='glTexParameterf' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method api_added='8' name='glTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glTexParameterfv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glTexParameteri' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method api_added='8' name='glTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glTexParameteriv' native='true' static='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method api_added='8' name='glTexSubImage2D' native='true' static='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method api_added='8' name='glUniform1f' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='float'/></method><method api_added='8' name='glUniform1fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform1fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniform1i' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='int'/></method><method api_added='8' name='glUniform1iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform1iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.IntBuffer'/></method><method api_added='8' name='glUniform2f' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method api_added='8' name='glUniform2fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform2fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniform2i' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method api_added='8' name='glUniform2iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform2iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.IntBuffer'/></method><method api_added='8' name='glUniform3f' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method api_added='8' name='glUniform3fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform3fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniform3i' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method api_added='8' name='glUniform3iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform3iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.IntBuffer'/></method><method api_added='8' name='glUniform4f' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/><parameter name='w' type='float'/></method><method api_added='8' name='glUniform4fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform4fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniform4i' native='true' static='true'><parameter name='location' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='w' type='int'/></method><method api_added='8' name='glUniform4iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='int[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniform4iv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='v' type='java.nio.IntBuffer'/></method><method api_added='8' name='glUniformMatrix2fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniformMatrix2fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniformMatrix3fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniformMatrix3fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUniformMatrix4fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glUniformMatrix4fv' native='true' static='true'><parameter name='location' type='int'/><parameter name='count' type='int'/><parameter name='transpose' type='boolean'/><parameter name='value' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glUseProgram' native='true' static='true'><parameter name='program' type='int'/></method><method api_added='8' name='glValidateProgram' native='true' static='true'><parameter name='program' type='int'/></method><method api_added='8' name='glVertexAttrib1f' native='true' static='true'><parameter name='indx' type='int'/><parameter name='x' type='float'/></method><method api_added='8' name='glVertexAttrib1fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glVertexAttrib1fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glVertexAttrib2f' native='true' static='true'><parameter name='indx' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method api_added='8' name='glVertexAttrib2fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glVertexAttrib2fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glVertexAttrib3f' native='true' static='true'><parameter name='indx' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method api_added='8' name='glVertexAttrib3fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glVertexAttrib3fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glVertexAttrib4f' native='true' static='true'><parameter name='indx' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/><parameter name='w' type='float'/></method><method api_added='8' name='glVertexAttrib4fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='float[]'/><parameter name='offset' type='int'/></method><method api_added='8' name='glVertexAttrib4fv' native='true' static='true'><parameter name='indx' type='int'/><parameter name='values' type='java.nio.FloatBuffer'/></method><method api_added='8' name='glVertexAttribPointer' static='true'><parameter name='indx' type='int'/><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='normalized' type='boolean'/><parameter name='stride' type='int'/><parameter name='ptr' type='java.nio.Buffer'/></method><method api_added='8' name='glViewport' native='true' static='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method></class><interface api_added='3' name='GLSurfaceView.EGLConfigChooser' abstract='true' static='true'><method api_added='3' name='chooseConfig' abstract='true' return='javax.microedition.khronos.egl.EGLConfig'><parameter name='egl' type='javax.microedition.khronos.egl.EGL10'/><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/></method></interface><interface api_added='3' name='GLSurfaceView.GLWrapper' abstract='true' static='true'><method api_added='3' name='wrap' abstract='true' return='javax.microedition.khronos.opengles.GL'><parameter name='gl' type='javax.microedition.khronos.opengles.GL'/></method></interface><interface api_added='3' name='GLSurfaceView.Renderer' abstract='true' static='true'><method api_added='3' name='onDrawFrame' abstract='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/></method><method api_added='3' name='onSurfaceChanged' abstract='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='3' name='onSurfaceCreated' abstract='true'><parameter name='gl' type='javax.microedition.khronos.opengles.GL10'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/></method></interface><interface api_added='5' name='GLSurfaceView.EGLContextFactory' abstract='true' static='true'><method api_added='5' name='createContext' abstract='true' return='javax.microedition.khronos.egl.EGLContext'><parameter name='egl' type='javax.microedition.khronos.egl.EGL10'/><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='eglConfig' type='javax.microedition.khronos.egl.EGLConfig'/></method><method api_added='5' name='destroyContext' abstract='true'><parameter name='egl' type='javax.microedition.khronos.egl.EGL10'/><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='context' type='javax.microedition.khronos.egl.EGLContext'/></method></interface><interface api_added='5' name='GLSurfaceView.EGLWindowSurfaceFactory' abstract='true' static='true'><method api_added='5' name='createWindowSurface' abstract='true' return='javax.microedition.khronos.egl.EGLSurface'><parameter name='egl' type='javax.microedition.khronos.egl.EGL10'/><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='nativeWindow' type='java.lang.Object'/></method><method api_added='5' name='destroySurface' abstract='true'><parameter name='egl' type='javax.microedition.khronos.egl.EGL10'/><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='surface' type='javax.microedition.khronos.egl.EGLSurface'/></method></interface></package><package name='android.os'><class name='BadParcelableException' extends='android.util.AndroidRuntimeException'><constructor name='BadParcelableException' type='android.os.BadParcelableException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='BadParcelableException' type='android.os.BadParcelableException'><parameter name='cause' type='java.lang.Exception'/></constructor></class><class name='BatteryManager' extends='java.lang.Object'><constructor name='BatteryManager' type='android.os.BatteryManager'/><field name='BATTERY_HEALTH_DEAD' final='true' static='true' value='4' type='int'/><field name='BATTERY_HEALTH_GOOD' final='true' static='true' value='2' type='int'/><field name='BATTERY_HEALTH_OVERHEAT' final='true' static='true' value='3' type='int'/><field name='BATTERY_HEALTH_OVER_VOLTAGE' final='true' static='true' value='5' type='int'/><field name='BATTERY_HEALTH_UNKNOWN' final='true' static='true' value='1' type='int'/><field name='BATTERY_HEALTH_UNSPECIFIED_FAILURE' final='true' static='true' value='6' type='int'/><field name='BATTERY_PLUGGED_AC' final='true' static='true' value='1' type='int'/><field name='BATTERY_PLUGGED_USB' final='true' static='true' value='2' type='int'/><field name='BATTERY_STATUS_CHARGING' final='true' static='true' value='2' type='int'/><field name='BATTERY_STATUS_DISCHARGING' final='true' static='true' value='3' type='int'/><field name='BATTERY_STATUS_FULL' final='true' static='true' value='5' type='int'/><field name='BATTERY_STATUS_NOT_CHARGING' final='true' static='true' value='4' type='int'/><field name='BATTERY_STATUS_UNKNOWN' final='true' static='true' value='1' type='int'/><field api_added='5' name='EXTRA_HEALTH' final='true' static='true' value='&quot;health&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_ICON_SMALL' final='true' static='true' value='&quot;icon-small&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_LEVEL' final='true' static='true' value='&quot;level&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_PLUGGED' final='true' static='true' value='&quot;plugged&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_PRESENT' final='true' static='true' value='&quot;present&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_SCALE' final='true' static='true' value='&quot;scale&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_STATUS' final='true' static='true' value='&quot;status&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_TECHNOLOGY' final='true' static='true' value='&quot;technology&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_TEMPERATURE' final='true' static='true' value='&quot;temperature&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_VOLTAGE' final='true' static='true' value='&quot;voltage&quot;' type='java.lang.String'/></class><class name='Binder' extends='java.lang.Object'><implements name='android.os.IBinder'/><constructor name='Binder' type='android.os.Binder'/><method name='attachInterface'><parameter name='owner' type='android.os.IInterface'/><parameter name='descriptor' type='java.lang.String'/></method><method name='clearCallingIdentity' final='true' native='true' static='true' return='long'/><method name='dump' visibility='protected'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='fout' type='java.io.PrintWriter'/><parameter name='args' type='java.lang.String[]'/></method><method name='flushPendingCommands' final='true' native='true' static='true'/><method name='getCallingPid' final='true' native='true' static='true' return='int'/><method name='getCallingUid' final='true' native='true' static='true' return='int'/><method name='getInterfaceDescriptor' return='java.lang.String'/><method name='isBinderAlive' return='boolean'/><method name='joinThreadPool' final='true' native='true' static='true'/><method name='linkToDeath'><parameter name='recipient' type='android.os.IBinder.DeathRecipient'/><parameter name='flags' type='int'/></method><method name='onTransact' visibility='protected' return='boolean'><parameter name='code' type='int'/><parameter name='data' type='android.os.Parcel'/><parameter name='reply' type='android.os.Parcel'/><parameter name='flags' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='pingBinder' return='boolean'/><method name='queryLocalInterface' return='android.os.IInterface'><parameter name='descriptor' type='java.lang.String'/></method><method name='restoreCallingIdentity' final='true' native='true' static='true'><parameter name='token' type='long'/></method><method name='transact' final='true' return='boolean'><parameter name='code' type='int'/><parameter name='data' type='android.os.Parcel'/><parameter name='reply' type='android.os.Parcel'/><parameter name='flags' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='unlinkToDeath' return='boolean'><parameter name='recipient' type='android.os.IBinder.DeathRecipient'/><parameter name='flags' type='int'/></method><method api_added='3' name='dump'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='args' type='java.lang.String[]'/></method></class><class name='Build' extends='java.lang.Object'><constructor name='Build' type='android.os.Build'/><field name='BOARD' final='true' static='true' type='java.lang.String'/><field name='BRAND' final='true' static='true' type='java.lang.String'/><field name='DEVICE' final='true' static='true' type='java.lang.String'/><field name='FINGERPRINT' final='true' static='true' type='java.lang.String'/><field name='HOST' final='true' static='true' type='java.lang.String'/><field name='ID' final='true' static='true' type='java.lang.String'/><field name='MODEL' final='true' static='true' type='java.lang.String'/><field name='PRODUCT' final='true' static='true' type='java.lang.String'/><field name='TAGS' final='true' static='true' type='java.lang.String'/><field name='TIME' final='true' static='true' type='long'/><field name='TYPE' final='true' static='true' type='java.lang.String'/><field name='USER' final='true' static='true' type='java.lang.String'/><field api_added='3' name='DISPLAY' final='true' static='true' type='java.lang.String'/><field api_added='4' name='CPU_ABI' final='true' static='true' type='java.lang.String'/><field api_added='4' name='MANUFACTURER' final='true' static='true' type='java.lang.String'/><field api_added='8' name='BOOTLOADER' final='true' static='true' type='java.lang.String'/><field api_added='8' name='CPU_ABI2' final='true' static='true' type='java.lang.String'/><field api_added='8' name='HARDWARE' final='true' static='true' type='java.lang.String'/><field api_added='8' name='RADIO' final='true' static='true' type='java.lang.String'/><field api_added='8' name='UNKNOWN' final='true' static='true' value='&quot;unknown&quot;' type='java.lang.String'/></class><class name='Build.VERSION' extends='java.lang.Object' static='true'><constructor name='Build.VERSION' type='android.os.Build.VERSION'/><field name='INCREMENTAL' final='true' static='true' type='java.lang.String'/><field name='RELEASE' final='true' static='true' type='java.lang.String'/><field name='SDK' final='true' static='true' type='java.lang.String' deprecated='4'/><field api_added='4' name='CODENAME' final='true' static='true' type='java.lang.String'/><field api_added='4' name='SDK_INT' final='true' static='true' type='int'/></class><class name='Bundle' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='android.os.Parcelable'/><constructor name='Bundle' type='android.os.Bundle'/><constructor name='Bundle' type='android.os.Bundle'><parameter name='loader' type='java.lang.ClassLoader'/></constructor><constructor name='Bundle' type='android.os.Bundle'><parameter name='capacity' type='int'/></constructor><constructor name='Bundle' type='android.os.Bundle'><parameter name='b' type='android.os.Bundle'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='EMPTY' final='true' static='true' type='android.os.Bundle'/><method name='clear'/><method name='clone' return='java.lang.Object'/><method name='containsKey' return='boolean'><parameter name='key' type='java.lang.String'/></method><method name='describeContents' return='int'/><method name='get' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method><method name='getBoolean' return='boolean'><parameter name='key' type='java.lang.String'/></method><method name='getBoolean' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/></method><method name='getBooleanArray' return='boolean[]'><parameter name='key' type='java.lang.String'/></method><method name='getBundle' return='android.os.Bundle'><parameter name='key' type='java.lang.String'/></method><method name='getByte' return='byte'><parameter name='key' type='java.lang.String'/></method><method name='getByte' return='java.lang.Byte'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='byte'/></method><method name='getByteArray' return='byte[]'><parameter name='key' type='java.lang.String'/></method><method name='getChar' return='char'><parameter name='key' type='java.lang.String'/></method><method name='getChar' return='char'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='char'/></method><method name='getCharArray' return='char[]'><parameter name='key' type='java.lang.String'/></method><method name='getCharSequence' return='java.lang.CharSequence'><parameter name='key' type='java.lang.String'/></method><method name='getDouble' return='double'><parameter name='key' type='java.lang.String'/></method><method name='getDouble' return='double'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='double'/></method><method name='getDoubleArray' return='double[]'><parameter name='key' type='java.lang.String'/></method><method name='getFloat' return='float'><parameter name='key' type='java.lang.String'/></method><method name='getFloat' return='float'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='float'/></method><method name='getFloatArray' return='float[]'><parameter name='key' type='java.lang.String'/></method><method name='getInt' return='int'><parameter name='key' type='java.lang.String'/></method><method name='getInt' return='int'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getIntArray' return='int[]'><parameter name='key' type='java.lang.String'/></method><method name='getIntegerArrayList' return='java.util.ArrayList&lt;java.lang.Integer&gt;'><parameter name='key' type='java.lang.String'/></method><method name='getLong' return='long'><parameter name='key' type='java.lang.String'/></method><method name='getLong' return='long'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='getLongArray' return='long[]'><parameter name='key' type='java.lang.String'/></method><method name='getParcelable' return='T'><parameter name='key' type='java.lang.String'/></method><method name='getParcelableArray' return='android.os.Parcelable[]'><parameter name='key' type='java.lang.String'/></method><method name='getParcelableArrayList' return='java.util.ArrayList&lt;T&gt;'><parameter name='key' type='java.lang.String'/></method><method name='getSerializable' return='java.io.Serializable'><parameter name='key' type='java.lang.String'/></method><method name='getShort' return='short'><parameter name='key' type='java.lang.String'/></method><method name='getShort' return='short'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='short'/></method><method name='getShortArray' return='short[]'><parameter name='key' type='java.lang.String'/></method><method name='getSparseParcelableArray' return='android.util.SparseArray&lt;T&gt;'><parameter name='key' type='java.lang.String'/></method><method name='getString' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getStringArray' return='java.lang.String[]'><parameter name='key' type='java.lang.String'/></method><method name='getStringArrayList' return='java.util.ArrayList&lt;java.lang.String&gt;'><parameter name='key' type='java.lang.String'/></method><method name='hasFileDescriptors' return='boolean'/><method name='isEmpty' return='boolean'/><method name='keySet' return='java.util.Set&lt;java.lang.String&gt;'/><method name='putAll'><parameter name='map' type='android.os.Bundle'/></method><method name='putBoolean'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='putBooleanArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean[]'/></method><method name='putBundle'><parameter name='key' type='java.lang.String'/><parameter name='value' type='android.os.Bundle'/></method><method name='putByte'><parameter name='key' type='java.lang.String'/><parameter name='value' type='byte'/></method><method name='putByteArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='byte[]'/></method><method name='putChar'><parameter name='key' type='java.lang.String'/><parameter name='value' type='char'/></method><method name='putCharArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='char[]'/></method><method name='putCharSequence'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.CharSequence'/></method><method name='putDouble'><parameter name='key' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='putDoubleArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='double[]'/></method><method name='putFloat'><parameter name='key' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putFloatArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='float[]'/></method><method name='putInt'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putIntArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int[]'/></method><method name='putIntegerArrayList'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.Integer&gt;'/></method><method name='putLong'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='putLongArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long[]'/></method><method name='putParcelable'><parameter name='key' type='java.lang.String'/><parameter name='value' type='android.os.Parcelable'/></method><method name='putParcelableArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='android.os.Parcelable[]'/></method><method name='putParcelableArrayList'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;? extends android.os.Parcelable&gt;'/></method><method name='putSerializable'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.io.Serializable'/></method><method name='putShort'><parameter name='key' type='java.lang.String'/><parameter name='value' type='short'/></method><method name='putShortArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='short[]'/></method><method name='putSparseParcelableArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='android.util.SparseArray&lt;? extends android.os.Parcelable&gt;'/></method><method name='putString'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='putStringArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String[]'/></method><method name='putStringArrayList'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.String&gt;'/></method><method name='readFromParcel'><parameter name='parcel' type='android.os.Parcel'/></method><method name='remove'><parameter name='key' type='java.lang.String'/></method><method name='setClassLoader'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='size' return='int'/><method name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='8' name='getCharSequenceArray' return='java.lang.CharSequence[]'><parameter name='key' type='java.lang.String'/></method><method api_added='8' name='getCharSequenceArrayList' return='java.util.ArrayList&lt;java.lang.CharSequence&gt;'><parameter name='key' type='java.lang.String'/></method><method api_added='8' name='putCharSequenceArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.CharSequence[]'/></method><method api_added='8' name='putCharSequenceArrayList'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.util.ArrayList&lt;java.lang.CharSequence&gt;'/></method></class><class name='ConditionVariable' extends='java.lang.Object'><constructor name='ConditionVariable' type='android.os.ConditionVariable'/><constructor name='ConditionVariable' type='android.os.ConditionVariable'><parameter name='state' type='boolean'/></constructor><method name='block'/><method name='block' return='boolean'><parameter name='timeout' type='long'/></method><method name='close'/><method name='open'/></class><class name='CountDownTimer' extends='java.lang.Object' abstract='true'><constructor name='CountDownTimer' type='android.os.CountDownTimer'><parameter name='millisInFuture' type='long'/><parameter name='countDownInterval' type='long'/></constructor><method name='cancel' final='true'/><method name='onFinish' abstract='true'/><method name='onTick' abstract='true'><parameter name='millisUntilFinished' type='long'/></method><method name='start' final='true' synchronized='true' return='android.os.CountDownTimer'/></class><class name='DeadObjectException' extends='android.os.RemoteException'><constructor name='DeadObjectException' type='android.os.DeadObjectException'/></class><class name='Debug' final='true' extends='java.lang.Object'><field name='SHOW_CLASSLOADER' final='true' static='true' value='2' type='int'/><field name='SHOW_FULL_DETAIL' final='true' static='true' value='1' type='int'/><field name='SHOW_INITIALIZED' final='true' static='true' value='4' type='int'/><field name='TRACE_COUNT_ALLOCS' final='true' static='true' value='1' type='int'/><method name='changeDebugPort' static='true' deprecated='3'><parameter name='port' type='int'/></method><method name='enableEmulatorTraceOutput' static='true'/><method name='getBinderDeathObjectCount' final='true' native='true' static='true' return='int'/><method name='getBinderLocalObjectCount' final='true' native='true' static='true' return='int'/><method name='getBinderProxyObjectCount' final='true' native='true' static='true' return='int'/><method name='getBinderReceivedTransactions' native='true' static='true' return='int'/><method name='getBinderSentTransactions' native='true' static='true' return='int'/><method name='getGlobalAllocCount' static='true' return='int'/><method name='getGlobalAllocSize' static='true' return='int'/><method name='getGlobalExternalAllocCount' static='true' return='int'/><method name='getGlobalExternalAllocSize' static='true' return='int'/><method name='getGlobalExternalFreedCount' static='true' return='int'/><method name='getGlobalExternalFreedSize' static='true' return='int'/><method name='getGlobalFreedCount' static='true' return='int'/><method name='getGlobalFreedSize' static='true' return='int'/><method name='getGlobalGcInvocationCount' static='true' return='int'/><method name='getLoadedClassCount' static='true' return='int'/><method name='getMemoryInfo' native='true' static='true'><parameter name='memoryInfo' type='android.os.Debug.MemoryInfo'/></method><method name='getNativeHeapAllocatedSize' native='true' static='true' return='long'/><method name='getNativeHeapFreeSize' native='true' static='true' return='long'/><method name='getNativeHeapSize' native='true' static='true' return='long'/><method name='getThreadAllocCount' static='true' return='int'/><method name='getThreadAllocSize' static='true' return='int'/><method name='getThreadExternalAllocCount' static='true' return='int'/><method name='getThreadExternalAllocSize' static='true' return='int'/><method name='getThreadGcInvocationCount' static='true' return='int'/><method name='isDebuggerConnected' static='true' return='boolean'/><method name='printLoadedClasses' static='true'><parameter name='flags' type='int'/></method><method name='resetAllCounts' static='true'/><method name='resetGlobalAllocCount' static='true'/><method name='resetGlobalAllocSize' static='true'/><method name='resetGlobalExternalAllocCount' static='true'/><method name='resetGlobalExternalAllocSize' static='true'/><method name='resetGlobalExternalFreedCount' static='true'/><method name='resetGlobalExternalFreedSize' static='true'/><method name='resetGlobalFreedCount' static='true'/><method name='resetGlobalFreedSize' static='true'/><method name='resetGlobalGcInvocationCount' static='true'/><method name='resetThreadAllocCount' static='true'/><method name='resetThreadAllocSize' static='true'/><method name='resetThreadExternalAllocCount' static='true'/><method name='resetThreadExternalAllocSize' static='true'/><method name='resetThreadGcInvocationCount' static='true'/><method name='setAllocationLimit' static='true' return='int'><parameter name='limit' type='int'/></method><method name='setGlobalAllocationLimit' static='true' return='int'><parameter name='limit' type='int'/></method><method name='startAllocCounting' static='true'/><method name='startMethodTracing' static='true'/><method name='startMethodTracing' static='true'><parameter name='traceName' type='java.lang.String'/></method><method name='startMethodTracing' static='true'><parameter name='traceName' type='java.lang.String'/><parameter name='bufferSize' type='int'/></method><method name='startMethodTracing' static='true'><parameter name='traceName' type='java.lang.String'/><parameter name='bufferSize' type='int'/><parameter name='flags' type='int'/></method><method name='startNativeTracing' static='true'/><method name='stopAllocCounting' static='true'/><method name='stopMethodTracing' static='true'/><method name='stopNativeTracing' static='true'/><method name='threadCpuTimeNanos' static='true' return='long'/><method name='waitForDebugger' static='true'/><method name='waitingForDebugger' static='true' return='boolean'/><method api_added='3' name='dumpHprofData' static='true'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='dumpService' static='true' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='args' type='java.lang.String[]'/></method><method api_added='8' name='getGlobalClassInitCount' static='true' return='int'/><method api_added='8' name='getGlobalClassInitTime' static='true' return='int'/><method api_added='8' name='resetGlobalClassInitCount' static='true'/><method api_added='8' name='resetGlobalClassInitTime' static='true'/></class><class name='Debug.InstructionCount' extends='java.lang.Object' static='true'><constructor name='Debug.InstructionCount' type='android.os.Debug.InstructionCount'/><method name='collect' return='boolean'/><method name='globalMethodInvocations' return='int'/><method name='globalTotal' return='int'/><method name='resetAndStart' return='boolean'/></class><class name='Debug.MemoryInfo' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor name='Debug.MemoryInfo' type='android.os.Debug.MemoryInfo'/><field name='dalvikPrivateDirty' type='int'/><field name='dalvikPss' type='int'/><field name='dalvikSharedDirty' type='int'/><field name='nativePrivateDirty' type='int'/><field name='nativePss' type='int'/><field name='nativeSharedDirty' type='int'/><field name='otherPrivateDirty' type='int'/><field name='otherPss' type='int'/><field name='otherSharedDirty' type='int'/><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='getTotalPrivateDirty' return='int'/><method api_added='5' name='getTotalPss' return='int'/><method api_added='5' name='getTotalSharedDirty' return='int'/><method api_added='5' name='readFromParcel'><parameter name='source' type='android.os.Parcel'/></method><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Environment' extends='java.lang.Object'><constructor name='Environment' type='android.os.Environment'/><field name='MEDIA_BAD_REMOVAL' final='true' static='true' value='&quot;bad_removal&quot;' type='java.lang.String'/><field name='MEDIA_MOUNTED' final='true' static='true' value='&quot;mounted&quot;' type='java.lang.String'/><field name='MEDIA_MOUNTED_READ_ONLY' final='true' static='true' value='&quot;mounted_ro&quot;' type='java.lang.String'/><field name='MEDIA_REMOVED' final='true' static='true' value='&quot;removed&quot;' type='java.lang.String'/><field name='MEDIA_SHARED' final='true' static='true' value='&quot;shared&quot;' type='java.lang.String'/><field name='MEDIA_UNMOUNTABLE' final='true' static='true' value='&quot;unmountable&quot;' type='java.lang.String'/><field name='MEDIA_UNMOUNTED' final='true' static='true' value='&quot;unmounted&quot;' type='java.lang.String'/><field api_added='3' name='MEDIA_CHECKING' final='true' static='true' value='&quot;checking&quot;' type='java.lang.String'/><field api_added='3' name='MEDIA_NOFS' final='true' static='true' value='&quot;nofs&quot;' type='java.lang.String'/><field api_added='8' name='DIRECTORY_ALARMS' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_DCIM' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_DOWNLOADS' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_MOVIES' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_MUSIC' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_NOTIFICATIONS' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_PICTURES' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_PODCASTS' static='true' type='java.lang.String'/><field api_added='8' name='DIRECTORY_RINGTONES' static='true' type='java.lang.String'/><method name='getDataDirectory' static='true' return='java.io.File'/><method name='getDownloadCacheDirectory' static='true' return='java.io.File'/><method name='getExternalStorageDirectory' static='true' return='java.io.File'/><method name='getExternalStorageState' static='true' return='java.lang.String'/><method name='getRootDirectory' static='true' return='java.io.File'/><method api_added='8' name='getExternalStoragePublicDirectory' static='true' return='java.io.File'><parameter name='type' type='java.lang.String'/></method></class><class name='FileObserver' extends='java.lang.Object' abstract='true'><constructor name='FileObserver' type='android.os.FileObserver'><parameter name='path' type='java.lang.String'/></constructor><constructor name='FileObserver' type='android.os.FileObserver'><parameter name='path' type='java.lang.String'/><parameter name='mask' type='int'/></constructor><field name='ACCESS' final='true' static='true' value='1' type='int'/><field name='ALL_EVENTS' final='true' static='true' value='4095' type='int'/><field name='ATTRIB' final='true' static='true' value='4' type='int'/><field name='CLOSE_NOWRITE' final='true' static='true' value='16' type='int'/><field name='CLOSE_WRITE' final='true' static='true' value='8' type='int'/><field name='CREATE' final='true' static='true' value='256' type='int'/><field name='DELETE' final='true' static='true' value='512' type='int'/><field name='DELETE_SELF' final='true' static='true' value='1024' type='int'/><field name='MODIFY' final='true' static='true' value='2' type='int'/><field name='MOVED_FROM' final='true' static='true' value='64' type='int'/><field name='MOVED_TO' final='true' static='true' value='128' type='int'/><field name='MOVE_SELF' final='true' static='true' value='2048' type='int'/><field name='OPEN' final='true' static='true' value='32' type='int'/><method name='onEvent' abstract='true'><parameter name='event' type='int'/><parameter name='path' type='java.lang.String'/></method><method name='startWatching'/><method name='stopWatching'/></class><class name='Handler' extends='java.lang.Object'><constructor name='Handler' type='android.os.Handler'/><constructor name='Handler' type='android.os.Handler'><parameter name='looper' type='android.os.Looper'/><parameter name='callback' type='android.os.Handler.Callback'/></constructor><method name='dispatchMessage'><parameter name='msg' type='android.os.Message'/></method><method name='dump' final='true'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='getLooper' final='true' return='android.os.Looper'/><method name='handleMessage'><parameter name='msg' type='android.os.Message'/></method><method name='hasMessages' final='true' return='boolean'><parameter name='what' type='int'/></method><method name='hasMessages' final='true' return='boolean'><parameter name='what' type='int'/><parameter name='object' type='java.lang.Object'/></method><method name='obtainMessage' final='true' return='android.os.Message'/><method name='obtainMessage' final='true' return='android.os.Message'><parameter name='what' type='int'/></method><method name='obtainMessage' final='true' return='android.os.Message'><parameter name='what' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='obtainMessage' final='true' return='android.os.Message'><parameter name='what' type='int'/><parameter name='arg1' type='int'/><parameter name='arg2' type='int'/></method><method name='obtainMessage' final='true' return='android.os.Message'><parameter name='what' type='int'/><parameter name='arg1' type='int'/><parameter name='arg2' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='post' final='true' return='boolean'><parameter name='r' type='java.lang.Runnable'/></method><method name='postAtFrontOfQueue' final='true' return='boolean'><parameter name='r' type='java.lang.Runnable'/></method><method name='postAtTime' final='true' return='boolean'><parameter name='r' type='java.lang.Runnable'/><parameter name='uptimeMillis' type='long'/></method><method name='postAtTime' final='true' return='boolean'><parameter name='r' type='java.lang.Runnable'/><parameter name='token' type='java.lang.Object'/><parameter name='uptimeMillis' type='long'/></method><method name='postDelayed' final='true' return='boolean'><parameter name='r' type='java.lang.Runnable'/><parameter name='delayMillis' type='long'/></method><method name='removeCallbacks' final='true'><parameter name='r' type='java.lang.Runnable'/></method><method name='removeCallbacks' final='true'><parameter name='r' type='java.lang.Runnable'/><parameter name='token' type='java.lang.Object'/></method><method name='removeCallbacksAndMessages' final='true'><parameter name='token' type='java.lang.Object'/></method><method name='removeMessages' final='true'><parameter name='what' type='int'/></method><method name='removeMessages' final='true'><parameter name='what' type='int'/><parameter name='object' type='java.lang.Object'/></method><method name='sendEmptyMessage' final='true' return='boolean'><parameter name='what' type='int'/></method><method name='sendEmptyMessageAtTime' final='true' return='boolean'><parameter name='what' type='int'/><parameter name='uptimeMillis' type='long'/></method><method name='sendEmptyMessageDelayed' final='true' return='boolean'><parameter name='what' type='int'/><parameter name='delayMillis' type='long'/></method><method name='sendMessage' final='true' return='boolean'><parameter name='msg' type='android.os.Message'/></method><method name='sendMessageAtFrontOfQueue' final='true' return='boolean'><parameter name='msg' type='android.os.Message'/></method><method name='sendMessageAtTime' return='boolean'><parameter name='msg' type='android.os.Message'/><parameter name='uptimeMillis' type='long'/></method><method name='sendMessageDelayed' final='true' return='boolean'><parameter name='msg' type='android.os.Message'/><parameter name='delayMillis' type='long'/></method></class><class name='HandlerThread' extends='java.lang.Thread'><constructor name='HandlerThread' type='android.os.HandlerThread'><parameter name='name' type='java.lang.String'/></constructor><constructor name='HandlerThread' type='android.os.HandlerThread'><parameter name='name' type='java.lang.String'/><parameter name='priority' type='int'/></constructor><method name='getLooper' return='android.os.Looper'/><method name='getThreadId' return='int'/><method name='onLooperPrepared' visibility='protected'/><method api_added='5' name='quit' return='boolean'/></class><class name='Looper' extends='java.lang.Object'><method name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method name='getMainLooper' final='true' synchronized='true' static='true' return='android.os.Looper'/><method name='loop' final='true' static='true'/><method name='myLooper' final='true' static='true' return='android.os.Looper'/><method name='myQueue' final='true' static='true' return='android.os.MessageQueue'/><method name='prepare' final='true' static='true'/><method name='prepareMainLooper' final='true' static='true'/><method name='quit'/><method name='setMessageLogging'><parameter name='printer' type='android.util.Printer'/></method><method api_added='3' name='getThread' return='java.lang.Thread'/></class><class name='MemoryFile' extends='java.lang.Object'><constructor name='MemoryFile' type='android.os.MemoryFile'><parameter name='name' type='java.lang.String'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='allowPurging' synchronized='true' return='boolean'><parameter name='allowPurging' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='close'/><method name='getInputStream' return='java.io.InputStream'/><method name='getOutputStream' return='java.io.OutputStream'/><method name='isPurgingAllowed' return='boolean'/><method name='length' return='int'/><method name='readBytes' return='int'><parameter name='buffer' type='byte[]'/><parameter name='srcOffset' type='int'/><parameter name='destOffset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBytes'><parameter name='buffer' type='byte[]'/><parameter name='srcOffset' type='int'/><parameter name='destOffset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='Message' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Message' type='android.os.Message'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='arg1' type='int'/><field name='arg2' type='int'/><field name='obj' type='java.lang.Object'/><field name='replyTo' type='android.os.Messenger'/><field name='what' type='int'/><method name='copyFrom'><parameter name='o' type='android.os.Message'/></method><method name='describeContents' return='int'/><method name='getCallback' return='java.lang.Runnable'/><method name='getData' return='android.os.Bundle'/><method name='getTarget' return='android.os.Handler'/><method name='getWhen' return='long'/><method name='obtain' static='true' return='android.os.Message'/><method name='obtain' static='true' return='android.os.Message'><parameter name='orig' type='android.os.Message'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/><parameter name='callback' type='java.lang.Runnable'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/><parameter name='what' type='int'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/><parameter name='what' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/><parameter name='what' type='int'/><parameter name='arg1' type='int'/><parameter name='arg2' type='int'/></method><method name='obtain' static='true' return='android.os.Message'><parameter name='h' type='android.os.Handler'/><parameter name='what' type='int'/><parameter name='arg1' type='int'/><parameter name='arg2' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='peekData' return='android.os.Bundle'/><method name='recycle'/><method name='sendToTarget'/><method name='setData'><parameter name='data' type='android.os.Bundle'/></method><method name='setTarget'><parameter name='target' type='android.os.Handler'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='MessageQueue' extends='java.lang.Object'><method name='addIdleHandler' final='true'><parameter name='handler' type='android.os.MessageQueue.IdleHandler'/></method><method name='removeIdleHandler' final='true'><parameter name='handler' type='android.os.MessageQueue.IdleHandler'/></method></class><class name='Messenger' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='Messenger' type='android.os.Messenger'><parameter name='target' type='android.os.Handler'/></constructor><constructor name='Messenger' type='android.os.Messenger'><parameter name='target' type='android.os.IBinder'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='describeContents' return='int'/><method name='getBinder' return='android.os.IBinder'/><method name='readMessengerOrNullFromParcel' static='true' return='android.os.Messenger'><parameter name='in' type='android.os.Parcel'/></method><method name='send'><parameter name='message' type='android.os.Message'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='writeMessengerOrNullToParcel' static='true'><parameter name='messenger' type='android.os.Messenger'/><parameter name='out' type='android.os.Parcel'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Parcel' final='true' extends='java.lang.Object'><field name='STRING_CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='appendFrom' final='true' native='true'><parameter name='parcel' type='android.os.Parcel'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='createBinderArray' final='true' return='android.os.IBinder[]'/><method name='createBinderArrayList' final='true' return='java.util.ArrayList&lt;android.os.IBinder&gt;'/><method name='createBooleanArray' final='true' return='boolean[]'/><method name='createByteArray' final='true' native='true' return='byte[]'/><method name='createCharArray' final='true' return='char[]'/><method name='createDoubleArray' final='true' return='double[]'/><method name='createFloatArray' final='true' return='float[]'/><method name='createIntArray' final='true' return='int[]'/><method name='createLongArray' final='true' return='long[]'/><method name='createStringArray' final='true' return='java.lang.String[]'/><method name='createStringArrayList' final='true' return='java.util.ArrayList&lt;java.lang.String&gt;'/><method name='createTypedArray' final='true' return='T[]'><parameter name='c' type='android.os.Parcelable.Creator&lt;T&gt;'/></method><method name='createTypedArrayList' final='true' return='java.util.ArrayList&lt;T&gt;'><parameter name='c' type='android.os.Parcelable.Creator&lt;T&gt;'/></method><method name='dataAvail' final='true' native='true' return='int'/><method name='dataCapacity' final='true' native='true' return='int'/><method name='dataPosition' final='true' native='true' return='int'/><method name='dataSize' final='true' native='true' return='int'/><method name='enforceInterface' final='true' native='true'><parameter name='interfaceName' type='java.lang.String'/></method><method name='hasFileDescriptors' final='true' native='true' return='boolean'/><method name='marshall' final='true' native='true' return='byte[]'/><method name='obtain' static='true' return='android.os.Parcel'/><method name='obtain' final='true' static='true' visibility='protected' return='android.os.Parcel'><parameter name='obj' type='int'/></method><method name='readArray' final='true' return='java.lang.Object[]'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readArrayList' final='true' return='java.util.ArrayList'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readBinderArray' final='true'><parameter name='val' type='android.os.IBinder[]'/></method><method name='readBinderList' final='true'><parameter name='list' type='java.util.List&lt;android.os.IBinder&gt;'/></method><method name='readBooleanArray' final='true'><parameter name='val' type='boolean[]'/></method><method name='readBundle' final='true' return='android.os.Bundle'/><method name='readBundle' final='true' return='android.os.Bundle'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readByte' final='true' return='byte'/><method name='readByteArray' final='true'><parameter name='val' type='byte[]'/></method><method name='readCharArray' final='true'><parameter name='val' type='char[]'/></method><method name='readDouble' final='true' native='true' return='double'/><method name='readDoubleArray' final='true'><parameter name='val' type='double[]'/></method><method name='readException' final='true'/><method name='readException' final='true'><parameter name='code' type='int'/><parameter name='msg' type='java.lang.String'/></method><method name='readFileDescriptor' final='true' return='android.os.ParcelFileDescriptor'/><method name='readFloat' final='true' native='true' return='float'/><method name='readFloatArray' final='true'><parameter name='val' type='float[]'/></method><method name='readHashMap' final='true' deprecated='2' return='java.util.HashMap'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readInt' final='true' native='true' return='int'/><method name='readIntArray' final='true'><parameter name='val' type='int[]'/></method><method name='readList' final='true'><parameter name='outVal' type='java.util.List'/><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readLong' final='true' native='true' return='long'/><method name='readLongArray' final='true'><parameter name='val' type='long[]'/></method><method name='readMap' final='true' deprecated='2'><parameter name='outVal' type='java.util.Map'/><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readParcelable' final='true' return='T'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readParcelableArray' final='true' return='android.os.Parcelable[]'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readSerializable' final='true' return='java.io.Serializable'/><method name='readSparseArray' final='true' return='android.util.SparseArray'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='readSparseBooleanArray' final='true' return='android.util.SparseBooleanArray'/><method name='readString' final='true' native='true' return='java.lang.String'/><method name='readStringArray' final='true'><parameter name='val' type='java.lang.String[]'/></method><method name='readStringList' final='true'><parameter name='list' type='java.util.List&lt;java.lang.String&gt;'/></method><method name='readStrongBinder' final='true' native='true' return='android.os.IBinder'/><method name='readTypedArray' final='true'><parameter name='val' type='T[]'/><parameter name='c' type='android.os.Parcelable.Creator&lt;T&gt;'/></method><method name='readTypedList' final='true'><parameter name='list' type='java.util.List&lt;T&gt;'/><parameter name='c' type='android.os.Parcelable.Creator&lt;T&gt;'/></method><method name='readValue' final='true' return='java.lang.Object'><parameter name='loader' type='java.lang.ClassLoader'/></method><method name='recycle' final='true'/><method name='setDataCapacity' final='true' native='true'><parameter name='size' type='int'/></method><method name='setDataPosition' final='true' native='true'><parameter name='pos' type='int'/></method><method name='setDataSize' final='true' native='true'><parameter name='size' type='int'/></method><method name='unmarshall' final='true' native='true'><parameter name='data' type='byte[]'/><parameter name='offest' type='int'/><parameter name='length' type='int'/></method><method name='writeArray' final='true'><parameter name='val' type='java.lang.Object[]'/></method><method name='writeBinderArray' final='true'><parameter name='val' type='android.os.IBinder[]'/></method><method name='writeBinderList' final='true'><parameter name='val' type='java.util.List&lt;android.os.IBinder&gt;'/></method><method name='writeBooleanArray' final='true'><parameter name='val' type='boolean[]'/></method><method name='writeBundle' final='true'><parameter name='val' type='android.os.Bundle'/></method><method name='writeByte' final='true'><parameter name='val' type='byte'/></method><method name='writeByteArray' final='true'><parameter name='b' type='byte[]'/></method><method name='writeByteArray' final='true'><parameter name='b' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='writeCharArray' final='true'><parameter name='val' type='char[]'/></method><method name='writeDouble' final='true' native='true'><parameter name='val' type='double'/></method><method name='writeDoubleArray' final='true'><parameter name='val' type='double[]'/></method><method name='writeException' final='true'><parameter name='e' type='java.lang.Exception'/></method><method name='writeFileDescriptor' final='true' native='true'><parameter name='val' type='java.io.FileDescriptor'/></method><method name='writeFloat' final='true' native='true'><parameter name='val' type='float'/></method><method name='writeFloatArray' final='true'><parameter name='val' type='float[]'/></method><method name='writeInt' final='true' native='true'><parameter name='val' type='int'/></method><method name='writeIntArray' final='true'><parameter name='val' type='int[]'/></method><method name='writeInterfaceToken' final='true' native='true'><parameter name='interfaceName' type='java.lang.String'/></method><method name='writeList' final='true'><parameter name='val' type='java.util.List'/></method><method name='writeLong' final='true' native='true'><parameter name='val' type='long'/></method><method name='writeLongArray' final='true'><parameter name='val' type='long[]'/></method><method name='writeMap' final='true' deprecated='2'><parameter name='val' type='java.util.Map'/></method><method name='writeNoException' final='true'/><method name='writeParcelable' final='true'><parameter name='p' type='android.os.Parcelable'/><parameter name='parcelableFlags' type='int'/></method><method name='writeParcelableArray' final='true'><parameter name='value' type='T[]'/><parameter name='parcelableFlags' type='int'/></method><method name='writeSerializable' final='true'><parameter name='s' type='java.io.Serializable'/></method><method name='writeSparseArray' final='true'><parameter name='val' type='android.util.SparseArray&lt;java.lang.Object&gt;'/></method><method name='writeSparseBooleanArray' final='true'><parameter name='val' type='android.util.SparseBooleanArray'/></method><method name='writeString' final='true' native='true'><parameter name='val' type='java.lang.String'/></method><method name='writeStringArray' final='true'><parameter name='val' type='java.lang.String[]'/></method><method name='writeStringList' final='true'><parameter name='val' type='java.util.List&lt;java.lang.String&gt;'/></method><method name='writeStrongBinder' final='true' native='true'><parameter name='val' type='android.os.IBinder'/></method><method name='writeStrongInterface' final='true'><parameter name='val' type='android.os.IInterface'/></method><method name='writeTypedArray' final='true'><parameter name='val' type='T[]'/><parameter name='parcelableFlags' type='int'/></method><method name='writeTypedList' final='true'><parameter name='val' type='java.util.List&lt;T&gt;'/></method><method name='writeValue' final='true'><parameter name='v' type='java.lang.Object'/></method></class><class name='ParcelFileDescriptor' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='ParcelFileDescriptor' type='android.os.ParcelFileDescriptor'><parameter name='descriptor' type='android.os.ParcelFileDescriptor'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='MODE_CREATE' final='true' static='true' value='134217728' type='int'/><field name='MODE_READ_ONLY' final='true' static='true' value='268435456' type='int'/><field name='MODE_READ_WRITE' final='true' static='true' value='805306368' type='int'/><field name='MODE_TRUNCATE' final='true' static='true' value='67108864' type='int'/><field name='MODE_WORLD_READABLE' final='true' static='true' value='1' type='int'/><field name='MODE_WORLD_WRITEABLE' final='true' static='true' value='2' type='int'/><field name='MODE_WRITE_ONLY' final='true' static='true' value='536870912' type='int'/><field api_added='3' name='MODE_APPEND' final='true' static='true' value='33554432' type='int'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='describeContents' return='int'/><method name='fromSocket' static='true' return='android.os.ParcelFileDescriptor'><parameter name='socket' type='java.net.Socket'/></method><method name='getFileDescriptor' return='java.io.FileDescriptor'/><method name='open' static='true' return='android.os.ParcelFileDescriptor'><parameter name='file' type='java.io.File'/><parameter name='mode' type='int'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='getStatSize' native='true' return='long'/></class><class name='ParcelFileDescriptor.AutoCloseInputStream' extends='java.io.FileInputStream' static='true'><constructor name='ParcelFileDescriptor.AutoCloseInputStream' type='android.os.ParcelFileDescriptor.AutoCloseInputStream'><parameter name='fd' type='android.os.ParcelFileDescriptor'/></constructor></class><class name='ParcelFileDescriptor.AutoCloseOutputStream' extends='java.io.FileOutputStream' static='true'><constructor name='ParcelFileDescriptor.AutoCloseOutputStream' type='android.os.ParcelFileDescriptor.AutoCloseOutputStream'><parameter name='fd' type='android.os.ParcelFileDescriptor'/></constructor></class><class name='ParcelFormatException' extends='java.lang.RuntimeException'><constructor name='ParcelFormatException' type='android.os.ParcelFormatException'/><constructor name='ParcelFormatException' type='android.os.ParcelFormatException'><parameter name='reason' type='java.lang.String'/></constructor></class><class name='PatternMatcher' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='PatternMatcher' type='android.os.PatternMatcher'><parameter name='pattern' type='java.lang.String'/><parameter name='type' type='int'/></constructor><constructor name='PatternMatcher' type='android.os.PatternMatcher'><parameter name='src' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='PATTERN_LITERAL' final='true' static='true' value='0' type='int'/><field name='PATTERN_PREFIX' final='true' static='true' value='1' type='int'/><field name='PATTERN_SIMPLE_GLOB' final='true' static='true' value='2' type='int'/><method name='describeContents' return='int'/><method name='getPath' final='true' return='java.lang.String'/><method name='getType' final='true' return='int'/><method name='match' return='boolean'><parameter name='str' type='java.lang.String'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='PowerManager' extends='java.lang.Object'><field name='ACQUIRE_CAUSES_WAKEUP' final='true' static='true' value='268435456' type='int'/><field name='FULL_WAKE_LOCK' final='true' static='true' value='26' type='int'/><field name='ON_AFTER_RELEASE' final='true' static='true' value='536870912' type='int'/><field name='PARTIAL_WAKE_LOCK' final='true' static='true' value='1' type='int'/><field name='SCREEN_BRIGHT_WAKE_LOCK' final='true' static='true' value='10' type='int'/><field name='SCREEN_DIM_WAKE_LOCK' final='true' static='true' value='6' type='int'/><method name='goToSleep'><parameter name='time' type='long'/></method><method name='newWakeLock' return='android.os.PowerManager.WakeLock'><parameter name='flags' type='int'/><parameter name='tag' type='java.lang.String'/></method><method name='userActivity'><parameter name='when' type='long'/><parameter name='noChangeLights' type='boolean'/></method><method api_added='7' name='isScreenOn' return='boolean'/><method api_added='8' name='reboot'><parameter name='reason' type='java.lang.String'/></method></class><class name='PowerManager.WakeLock' extends='java.lang.Object'><method name='acquire'/><method name='acquire'><parameter name='timeout' type='long'/></method><method name='isHeld' return='boolean'/><method name='release'/><method name='setReferenceCounted'><parameter name='value' type='boolean'/></method></class><class name='Process' extends='java.lang.Object'><constructor name='Process' type='android.os.Process'/><field name='BLUETOOTH_GID' final='true' static='true' value='2000' type='int'/><field name='FIRST_APPLICATION_UID' final='true' static='true' value='10000' type='int'/><field name='LAST_APPLICATION_UID' final='true' static='true' value='99999' type='int'/><field name='PHONE_UID' final='true' static='true' value='1001' type='int'/><field name='SIGNAL_KILL' final='true' static='true' value='9' type='int'/><field name='SIGNAL_QUIT' final='true' static='true' value='3' type='int'/><field name='SIGNAL_USR1' final='true' static='true' value='10' type='int'/><field name='SYSTEM_UID' final='true' static='true' value='1000' type='int'/><field name='THREAD_PRIORITY_AUDIO' final='true' static='true' value='-16' type='int'/><field name='THREAD_PRIORITY_BACKGROUND' final='true' static='true' value='10' type='int'/><field name='THREAD_PRIORITY_DEFAULT' final='true' static='true' value='0' type='int'/><field name='THREAD_PRIORITY_DISPLAY' final='true' static='true' value='-4' type='int'/><field name='THREAD_PRIORITY_FOREGROUND' final='true' static='true' value='-2' type='int'/><field name='THREAD_PRIORITY_LESS_FAVORABLE' final='true' static='true' value='1' type='int'/><field name='THREAD_PRIORITY_LOWEST' final='true' static='true' value='19' type='int'/><field name='THREAD_PRIORITY_MORE_FAVORABLE' final='true' static='true' value='-1' type='int'/><field name='THREAD_PRIORITY_URGENT_AUDIO' final='true' static='true' value='-19' type='int'/><field name='THREAD_PRIORITY_URGENT_DISPLAY' final='true' static='true' value='-8' type='int'/><method name='getElapsedCpuTime' final='true' native='true' static='true' return='long'/><method name='getGidForName' final='true' native='true' static='true' return='int'><parameter name='name' type='java.lang.String'/></method><method name='getThreadPriority' final='true' native='true' static='true' return='int'><parameter name='tid' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getUidForName' final='true' native='true' static='true' return='int'><parameter name='name' type='java.lang.String'/></method><method name='killProcess' final='true' static='true'><parameter name='pid' type='int'/></method><method name='myPid' final='true' native='true' static='true' return='int'/><method name='myTid' final='true' native='true' static='true' return='int'/><method name='sendSignal' final='true' native='true' static='true'><parameter name='pid' type='int'/><parameter name='signal' type='int'/></method><method name='setThreadPriority' final='true' native='true' static='true'><parameter name='tid' type='int'/><parameter name='priority' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='setThreadPriority' final='true' native='true' static='true'><parameter name='priority' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='supportsProcesses' final='true' native='true' static='true' return='boolean'/><method api_added='2' name='myUid' final='true' native='true' static='true' return='int'/></class><class name='RemoteCallbackList' extends='java.lang.Object'><constructor name='RemoteCallbackList' type='android.os.RemoteCallbackList'/><method name='beginBroadcast' return='int'/><method name='finishBroadcast'/><method name='getBroadcastItem' return='E'><parameter name='index' type='int'/></method><method name='kill'/><method name='onCallbackDied'><parameter name='callback' type='E'/></method><method name='register' return='boolean'><parameter name='callback' type='E'/></method><method name='unregister' return='boolean'><parameter name='callback' type='E'/></method><method api_added='4' name='getBroadcastCookie' return='java.lang.Object'><parameter name='index' type='int'/></method><method api_added='4' name='onCallbackDied'><parameter name='callback' type='E'/><parameter name='cookie' type='java.lang.Object'/></method><method api_added='4' name='register' return='boolean'><parameter name='callback' type='E'/><parameter name='cookie' type='java.lang.Object'/></method></class><class name='RemoteException' extends='android.util.AndroidException'><constructor name='RemoteException' type='android.os.RemoteException'/></class><class name='StatFs' extends='java.lang.Object'><constructor name='StatFs' type='android.os.StatFs'><parameter name='path' type='java.lang.String'/></constructor><method name='getAvailableBlocks' native='true' return='int'/><method name='getBlockCount' native='true' return='int'/><method name='getBlockSize' native='true' return='int'/><method name='getFreeBlocks' native='true' return='int'/><method name='restat'><parameter name='path' type='java.lang.String'/></method></class><class name='SystemClock' final='true' extends='java.lang.Object'><method name='currentThreadTimeMillis' native='true' static='true' return='long'/><method name='elapsedRealtime' native='true' static='true' return='long'/><method name='setCurrentTimeMillis' native='true' static='true' return='boolean'><parameter name='millis' type='long'/></method><method name='sleep' static='true'><parameter name='ms' type='long'/></method><method name='uptimeMillis' native='true' static='true' return='long'/></class><class name='TokenWatcher' extends='java.lang.Object' abstract='true'><constructor name='TokenWatcher' type='android.os.TokenWatcher'><parameter name='h' type='android.os.Handler'/><parameter name='tag' type='java.lang.String'/></constructor><method name='acquire'><parameter name='token' type='android.os.IBinder'/><parameter name='tag' type='java.lang.String'/></method><method name='acquired' abstract='true'/><method name='cleanup'><parameter name='token' type='android.os.IBinder'/><parameter name='unlink' type='boolean'/></method><method name='dump'/><method name='isAcquired' return='boolean'/><method name='release'><parameter name='token' type='android.os.IBinder'/></method><method name='released' abstract='true'/></class><class name='Vibrator' extends='java.lang.Object'><method name='cancel'/><method name='vibrate'><parameter name='milliseconds' type='long'/></method><method name='vibrate'><parameter name='pattern' type='long[]'/><parameter name='repeat' type='int'/></method></class><class api_added='3' name='AsyncTask' extends='java.lang.Object' abstract='true'><constructor api_added='3' name='AsyncTask' type='android.os.AsyncTask'/><method api_added='3' name='cancel' final='true' return='boolean'><parameter name='mayInterruptIfRunning' type='boolean'/></method><method api_added='3' name='doInBackground' abstract='true' visibility='protected' return='Result'><parameter name='params' type='Params...'/></method><method api_added='3' name='execute' final='true' return='android.os.AsyncTask&lt;Params, Progress, Result&gt;'><parameter name='params' type='Params...'/></method><method api_added='3' name='get' final='true' return='Result'><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='3' name='get' final='true' return='Result'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method api_added='3' name='getStatus' final='true' return='android.os.AsyncTask.Status'/><method api_added='3' name='isCancelled' final='true' return='boolean'/><method api_added='3' name='onCancelled' visibility='protected'/><method api_added='3' name='onPostExecute' visibility='protected'><parameter name='result' type='Result'/></method><method api_added='3' name='onPreExecute' visibility='protected'/><method api_added='3' name='onProgressUpdate' visibility='protected'><parameter name='values' type='Progress...'/></method><method api_added='3' name='publishProgress' final='true' visibility='protected'><parameter name='values' type='Progress...'/></method></class><class api_added='3' name='AsyncTask.Status' final='true' extends='java.lang.Enum' static='true'><method api_added='3' name='valueOf' static='true' return='android.os.AsyncTask.Status'><parameter name='name' type='java.lang.String'/></method><method api_added='3' name='values' final='true' static='true' return='android.os.AsyncTask.Status[]'/></class><class api_added='3' name='ResultReceiver' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='ResultReceiver' type='android.os.ResultReceiver'><parameter name='handler' type='android.os.Handler'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='onReceiveResult' visibility='protected'><parameter name='resultCode' type='int'/><parameter name='resultData' type='android.os.Bundle'/></method><method api_added='3' name='send'><parameter name='resultCode' type='int'/><parameter name='resultData' type='android.os.Bundle'/></method><method api_added='3' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='4' name='Build.VERSION_CODES' extends='java.lang.Object' static='true'><constructor api_added='4' name='Build.VERSION_CODES' type='android.os.Build.VERSION_CODES'/><field api_added='4' name='BASE' final='true' static='true' value='1' type='int'/><field api_added='4' name='BASE_1_1' final='true' static='true' value='2' type='int'/><field api_added='4' name='CUPCAKE' final='true' static='true' value='3' type='int'/><field api_added='4' name='CUR_DEVELOPMENT' final='true' static='true' value='10000' type='int'/><field api_added='4' name='DONUT' final='true' static='true' value='4' type='int'/><field api_added='5' name='ECLAIR' final='true' static='true' value='5' type='int'/><field api_added='6' name='ECLAIR_0_1' final='true' static='true' value='6' type='int'/><field api_added='7' name='ECLAIR_MR1' final='true' static='true' value='7' type='int'/><field api_added='8' name='FROYO' final='true' static='true' value='8' type='int'/></class><class api_added='5' name='ParcelUuid' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='ParcelUuid' type='android.os.ParcelUuid'><parameter name='uuid' type='java.util.UUID'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='fromString' static='true' return='android.os.ParcelUuid'><parameter name='uuid' type='java.lang.String'/></method><method api_added='5' name='getUuid' return='java.util.UUID'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='DropBoxManager' extends='java.lang.Object'><constructor api_added='8' name='DropBoxManager' type='android.os.DropBoxManager' visibility='protected'/><field api_added='8' name='IS_EMPTY' final='true' static='true' value='1' type='int'/><field api_added='8' name='IS_GZIPPED' final='true' static='true' value='4' type='int'/><field api_added='8' name='IS_TEXT' final='true' static='true' value='2' type='int'/><method api_added='8' name='addData'><parameter name='tag' type='java.lang.String'/><parameter name='data' type='byte[]'/><parameter name='flags' type='int'/></method><method api_added='8' name='addFile'><parameter name='tag' type='java.lang.String'/><parameter name='file' type='java.io.File'/><parameter name='flags' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='addText'><parameter name='tag' type='java.lang.String'/><parameter name='data' type='java.lang.String'/></method><method api_added='8' name='getNextEntry' return='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='msec' type='long'/></method><method api_added='8' name='isTagEnabled' return='boolean'><parameter name='tag' type='java.lang.String'/></method></class><class api_added='8' name='DropBoxManager.Entry' extends='java.lang.Object' static='true'><implements name='android.os.Parcelable'/><constructor api_added='8' name='DropBoxManager.Entry' type='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='millis' type='long'/></constructor><constructor api_added='8' name='DropBoxManager.Entry' type='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='millis' type='long'/><parameter name='text' type='java.lang.String'/></constructor><constructor api_added='8' name='DropBoxManager.Entry' type='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='millis' type='long'/><parameter name='data' type='byte[]'/><parameter name='flags' type='int'/></constructor><constructor api_added='8' name='DropBoxManager.Entry' type='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='millis' type='long'/><parameter name='data' type='android.os.ParcelFileDescriptor'/><parameter name='flags' type='int'/></constructor><constructor api_added='8' name='DropBoxManager.Entry' type='android.os.DropBoxManager.Entry'><parameter name='tag' type='java.lang.String'/><parameter name='millis' type='long'/><parameter name='data' type='java.io.File'/><parameter name='flags' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><field api_added='8' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='8' name='close'/><method api_added='8' name='describeContents' return='int'/><method api_added='8' name='getFlags' return='int'/><method api_added='8' name='getInputStream' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='getTag' return='java.lang.String'/><method api_added='8' name='getText' return='java.lang.String'><parameter name='maxBytes' type='int'/></method><method api_added='8' name='getTimeMillis' return='long'/><method api_added='8' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='RecoverySystem' extends='java.lang.Object'><constructor api_added='8' name='RecoverySystem' type='android.os.RecoverySystem'/><method api_added='8' name='installPackage' static='true'><parameter name='context' type='android.content.Context'/><parameter name='packageFile' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='rebootWipeUserData' static='true'><parameter name='context' type='android.content.Context'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='verifyPackage' static='true'><parameter name='packageFile' type='java.io.File'/><parameter name='listener' type='android.os.RecoverySystem.ProgressListener'/><parameter name='deviceCertsZipFile' type='java.io.File'/><exception name='GeneralSecurityException' type='java.security.GeneralSecurityException'/><exception name='IOException' type='java.io.IOException'/></method></class><interface name='IBinder' abstract='true'><field name='DUMP_TRANSACTION' final='true' static='true' value='1598311760' type='int'/><field name='FIRST_CALL_TRANSACTION' final='true' static='true' value='1' type='int'/><field name='FLAG_ONEWAY' final='true' static='true' value='1' type='int'/><field name='INTERFACE_TRANSACTION' final='true' static='true' value='1598968902' type='int'/><field name='LAST_CALL_TRANSACTION' final='true' static='true' value='16777215' type='int'/><field name='PING_TRANSACTION' final='true' static='true' value='1599098439' type='int'/><method name='getInterfaceDescriptor' abstract='true' return='java.lang.String'><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='isBinderAlive' abstract='true' return='boolean'/><method name='linkToDeath' abstract='true'><parameter name='recipient' type='android.os.IBinder.DeathRecipient'/><parameter name='flags' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='pingBinder' abstract='true' return='boolean'/><method name='queryLocalInterface' abstract='true' return='android.os.IInterface'><parameter name='descriptor' type='java.lang.String'/></method><method name='transact' abstract='true' return='boolean'><parameter name='code' type='int'/><parameter name='data' type='android.os.Parcel'/><parameter name='reply' type='android.os.Parcel'/><parameter name='flags' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method name='unlinkToDeath' abstract='true' return='boolean'><parameter name='recipient' type='android.os.IBinder.DeathRecipient'/><parameter name='flags' type='int'/></method><method api_added='3' name='dump' abstract='true'><parameter name='fd' type='java.io.FileDescriptor'/><parameter name='args' type='java.lang.String[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method></interface><interface name='IBinder.DeathRecipient' abstract='true' static='true'><method name='binderDied' abstract='true'/></interface><interface name='IInterface' abstract='true'><method name='asBinder' abstract='true' return='android.os.IBinder'/></interface><interface name='MessageQueue.IdleHandler' abstract='true' static='true'><method name='queueIdle' abstract='true' return='boolean'/></interface><interface name='Parcelable' abstract='true'><field name='CONTENTS_FILE_DESCRIPTOR' final='true' static='true' value='1' type='int'/><field name='PARCELABLE_WRITE_RETURN_VALUE' final='true' static='true' value='1' type='int'/><method name='describeContents' abstract='true' return='int'/><method name='writeToParcel' abstract='true'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></interface><interface name='Parcelable.Creator' abstract='true' static='true'><method name='createFromParcel' abstract='true' return='T'><parameter name='source' type='android.os.Parcel'/></method><method name='newArray' abstract='true' return='T[]'><parameter name='size' type='int'/></method></interface><interface api_added='3' name='Handler.Callback' abstract='true' static='true'><method api_added='3' name='handleMessage' abstract='true' return='boolean'><parameter name='msg' type='android.os.Message'/></method></interface><interface api_added='8' name='RecoverySystem.ProgressListener' abstract='true' static='true'><method api_added='8' name='onProgress' abstract='true'><parameter name='progress' type='int'/></method></interface></package><package name='android.preference'><class name='CheckBoxPreference' extends='android.preference.Preference'><constructor name='CheckBoxPreference' type='android.preference.CheckBoxPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='CheckBoxPreference' type='android.preference.CheckBoxPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='CheckBoxPreference' type='android.preference.CheckBoxPreference'><parameter name='context' type='android.content.Context'/></constructor><method name='getDisableDependentsState' return='boolean'/><method name='getSummaryOff' return='java.lang.CharSequence'/><method name='getSummaryOn' return='java.lang.CharSequence'/><method name='isChecked' return='boolean'/><method name='setChecked'><parameter name='checked' type='boolean'/></method><method name='setDisableDependentsState'><parameter name='disableDependentsState' type='boolean'/></method><method name='setSummaryOff'><parameter name='summary' type='java.lang.CharSequence'/></method><method name='setSummaryOff'><parameter name='summaryResId' type='int'/></method><method name='setSummaryOn'><parameter name='summary' type='java.lang.CharSequence'/></method><method name='setSummaryOn'><parameter name='summaryResId' type='int'/></method></class><class name='DialogPreference' extends='android.preference.Preference' abstract='true'><implements name='android.content.DialogInterface.OnClickListener'/><implements name='android.content.DialogInterface.OnDismissListener'/><implements name='android.preference.PreferenceManager.OnActivityDestroyListener'/><constructor name='DialogPreference' type='android.preference.DialogPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='DialogPreference' type='android.preference.DialogPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getDialogIcon' return='android.graphics.drawable.Drawable'/><method name='getDialogLayoutResource' return='int'/><method name='getDialogMessage' return='java.lang.CharSequence'/><method name='getDialogTitle' return='java.lang.CharSequence'/><method name='getNegativeButtonText' return='java.lang.CharSequence'/><method name='getPositiveButtonText' return='java.lang.CharSequence'/><method name='onActivityDestroy'/><method name='onBindDialogView' visibility='protected'><parameter name='view' type='android.view.View'/></method><method name='onClick'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/></method><method name='onCreateDialogView' visibility='protected' return='android.view.View'/><method name='onDialogClosed' visibility='protected'><parameter name='positiveResult' type='boolean'/></method><method name='onDismiss'><parameter name='dialog' type='android.content.DialogInterface'/></method><method name='onPrepareDialogBuilder' visibility='protected'><parameter name='builder' type='android.app.AlertDialog.Builder'/></method><method name='setDialogIcon'><parameter name='dialogIcon' type='android.graphics.drawable.Drawable'/></method><method name='setDialogIcon'><parameter name='dialogIconRes' type='int'/></method><method name='setDialogLayoutResource'><parameter name='dialogLayoutResId' type='int'/></method><method name='setDialogMessage'><parameter name='dialogMessage' type='java.lang.CharSequence'/></method><method name='setDialogMessage'><parameter name='dialogMessageResId' type='int'/></method><method name='setDialogTitle'><parameter name='dialogTitle' type='java.lang.CharSequence'/></method><method name='setDialogTitle'><parameter name='dialogTitleResId' type='int'/></method><method name='setNegativeButtonText'><parameter name='negativeButtonText' type='java.lang.CharSequence'/></method><method name='setNegativeButtonText'><parameter name='negativeButtonTextResId' type='int'/></method><method name='setPositiveButtonText'><parameter name='positiveButtonText' type='java.lang.CharSequence'/></method><method name='setPositiveButtonText'><parameter name='positiveButtonTextResId' type='int'/></method><method name='showDialog' visibility='protected'><parameter name='state' type='android.os.Bundle'/></method><method api_added='3' name='getDialog' return='android.app.Dialog'/></class><class name='EditTextPreference' extends='android.preference.DialogPreference'><constructor name='EditTextPreference' type='android.preference.EditTextPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='EditTextPreference' type='android.preference.EditTextPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='EditTextPreference' type='android.preference.EditTextPreference'><parameter name='context' type='android.content.Context'/></constructor><method name='getEditText' return='android.widget.EditText'/><method name='getText' return='java.lang.String'/><method name='onAddEditTextToDialogView' visibility='protected'><parameter name='dialogView' type='android.view.View'/><parameter name='editText' type='android.widget.EditText'/></method><method name='setText'><parameter name='text' type='java.lang.String'/></method></class><class name='ListPreference' extends='android.preference.DialogPreference'><constructor name='ListPreference' type='android.preference.ListPreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ListPreference' type='android.preference.ListPreference'><parameter name='context' type='android.content.Context'/></constructor><method name='findIndexOfValue' return='int'><parameter name='value' type='java.lang.String'/></method><method name='getEntries' return='java.lang.CharSequence[]'/><method name='getEntry' return='java.lang.CharSequence'/><method name='getEntryValues' return='java.lang.CharSequence[]'/><method name='getValue' return='java.lang.String'/><method name='setEntries'><parameter name='entries' type='java.lang.CharSequence[]'/></method><method name='setEntries'><parameter name='entriesResId' type='int'/></method><method name='setEntryValues'><parameter name='entryValues' type='java.lang.CharSequence[]'/></method><method name='setEntryValues'><parameter name='entryValuesResId' type='int'/></method><method name='setValue'><parameter name='value' type='java.lang.String'/></method><method name='setValueIndex'><parameter name='index' type='int'/></method></class><class name='Preference' extends='java.lang.Object'><implements name='java.lang.Comparable'/><constructor name='Preference' type='android.preference.Preference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='Preference' type='android.preference.Preference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Preference' type='android.preference.Preference'><parameter name='context' type='android.content.Context'/></constructor><field name='DEFAULT_ORDER' final='true' static='true' value='2147483647' type='int'/><method name='callChangeListener' visibility='protected' return='boolean'><parameter name='newValue' type='java.lang.Object'/></method><method name='compareTo' return='int'><parameter name='another' type='android.preference.Preference'/></method><method name='findPreferenceInHierarchy' visibility='protected' return='android.preference.Preference'><parameter name='key' type='java.lang.String'/></method><method name='getContext' return='android.content.Context'/><method name='getDependency' return='java.lang.String'/><method name='getEditor' return='android.content.SharedPreferences.Editor'/><method name='getIntent' return='android.content.Intent'/><method name='getKey' return='java.lang.String'/><method name='getLayoutResource' return='int'/><method name='getOnPreferenceChangeListener' return='android.preference.Preference.OnPreferenceChangeListener'/><method name='getOnPreferenceClickListener' return='android.preference.Preference.OnPreferenceClickListener'/><method name='getOrder' return='int'/><method name='getPersistedBoolean' visibility='protected' return='boolean'><parameter name='defaultReturnValue' type='boolean'/></method><method name='getPersistedFloat' visibility='protected' return='float'><parameter name='defaultReturnValue' type='float'/></method><method name='getPersistedInt' visibility='protected' return='int'><parameter name='defaultReturnValue' type='int'/></method><method name='getPersistedLong' visibility='protected' return='long'><parameter name='defaultReturnValue' type='long'/></method><method name='getPersistedString' visibility='protected' return='java.lang.String'><parameter name='defaultReturnValue' type='java.lang.String'/></method><method name='getPreferenceManager' return='android.preference.PreferenceManager'/><method name='getSharedPreferences' return='android.content.SharedPreferences'/><method name='getShouldDisableView' return='boolean'/><method name='getSummary' return='java.lang.CharSequence'/><method name='getTitle' return='java.lang.CharSequence'/><method name='getView' return='android.view.View'><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getWidgetLayoutResource' return='int'/><method name='hasKey' return='boolean'/><method name='isEnabled' return='boolean'/><method name='isPersistent' return='boolean'/><method name='isSelectable' return='boolean'/><method name='notifyChanged' visibility='protected'/><method name='notifyDependencyChange'><parameter name='disableDependents' type='boolean'/></method><method name='notifyHierarchyChanged' visibility='protected'/><method name='onAttachedToActivity' visibility='protected'/><method name='onAttachedToHierarchy' visibility='protected'><parameter name='preferenceManager' type='android.preference.PreferenceManager'/></method><method name='onBindView' visibility='protected'><parameter name='view' type='android.view.View'/></method><method name='onClick' visibility='protected'/><method name='onCreateView' visibility='protected' return='android.view.View'><parameter name='parent' type='android.view.ViewGroup'/></method><method name='onDependencyChanged'><parameter name='dependency' type='android.preference.Preference'/><parameter name='disableDependent' type='boolean'/></method><method name='onGetDefaultValue' visibility='protected' return='java.lang.Object'><parameter name='a' type='android.content.res.TypedArray'/><parameter name='index' type='int'/></method><method name='onPrepareForRemoval' visibility='protected'/><method name='onRestoreInstanceState' visibility='protected'><parameter name='state' type='android.os.Parcelable'/></method><method name='onSaveInstanceState' visibility='protected' return='android.os.Parcelable'/><method name='onSetInitialValue' visibility='protected'><parameter name='restorePersistedValue' type='boolean'/><parameter name='defaultValue' type='java.lang.Object'/></method><method name='persistBoolean' visibility='protected' return='boolean'><parameter name='value' type='boolean'/></method><method name='persistFloat' visibility='protected' return='boolean'><parameter name='value' type='float'/></method><method name='persistInt' visibility='protected' return='boolean'><parameter name='value' type='int'/></method><method name='persistLong' visibility='protected' return='boolean'><parameter name='value' type='long'/></method><method name='persistString' visibility='protected' return='boolean'><parameter name='value' type='java.lang.String'/></method><method name='restoreHierarchyState'><parameter name='container' type='android.os.Bundle'/></method><method name='saveHierarchyState'><parameter name='container' type='android.os.Bundle'/></method><method name='setDefaultValue'><parameter name='defaultValue' type='java.lang.Object'/></method><method name='setDependency'><parameter name='dependencyKey' type='java.lang.String'/></method><method name='setEnabled'><parameter name='enabled' type='boolean'/></method><method name='setIntent'><parameter name='intent' type='android.content.Intent'/></method><method name='setKey'><parameter name='key' type='java.lang.String'/></method><method name='setLayoutResource'><parameter name='layoutResId' type='int'/></method><method name='setOnPreferenceChangeListener'><parameter name='onPreferenceChangeListener' type='android.preference.Preference.OnPreferenceChangeListener'/></method><method name='setOnPreferenceClickListener'><parameter name='onPreferenceClickListener' type='android.preference.Preference.OnPreferenceClickListener'/></method><method name='setOrder'><parameter name='order' type='int'/></method><method name='setPersistent'><parameter name='persistent' type='boolean'/></method><method name='setSelectable'><parameter name='selectable' type='boolean'/></method><method name='setShouldDisableView'><parameter name='shouldDisableView' type='boolean'/></method><method name='setSummary'><parameter name='summary' type='java.lang.CharSequence'/></method><method name='setSummary'><parameter name='summaryResId' type='int'/></method><method name='setTitle'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setTitle'><parameter name='titleResId' type='int'/></method><method name='setWidgetLayoutResource'><parameter name='widgetLayoutResId' type='int'/></method><method name='shouldCommit' return='boolean'/><method name='shouldDisableDependents' return='boolean'/><method name='shouldPersist' visibility='protected' return='boolean'/></class><class name='Preference.BaseSavedState' extends='android.view.AbsSavedState' static='true'><constructor name='Preference.BaseSavedState' type='android.preference.Preference.BaseSavedState'><parameter name='source' type='android.os.Parcel'/></constructor><constructor name='Preference.BaseSavedState' type='android.preference.Preference.BaseSavedState'><parameter name='superState' type='android.os.Parcelable'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/></class><class name='PreferenceActivity' extends='android.app.ListActivity' abstract='true'><constructor name='PreferenceActivity' type='android.preference.PreferenceActivity'/><method name='addPreferencesFromIntent'><parameter name='intent' type='android.content.Intent'/></method><method name='addPreferencesFromResource'><parameter name='preferencesResId' type='int'/></method><method name='findPreference' return='android.preference.Preference'><parameter name='key' type='java.lang.CharSequence'/></method><method name='getPreferenceManager' return='android.preference.PreferenceManager'/><method name='getPreferenceScreen' return='android.preference.PreferenceScreen'/><method name='onPreferenceTreeClick' return='boolean'><parameter name='preferenceScreen' type='android.preference.PreferenceScreen'/><parameter name='preference' type='android.preference.Preference'/></method><method name='setPreferenceScreen'><parameter name='preferenceScreen' type='android.preference.PreferenceScreen'/></method></class><class name='PreferenceCategory' extends='android.preference.PreferenceGroup'><constructor name='PreferenceCategory' type='android.preference.PreferenceCategory'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='PreferenceCategory' type='android.preference.PreferenceCategory'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='PreferenceCategory' type='android.preference.PreferenceCategory'><parameter name='context' type='android.content.Context'/></constructor></class><class name='PreferenceGroup' extends='android.preference.Preference' abstract='true'><constructor name='PreferenceGroup' type='android.preference.PreferenceGroup'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='PreferenceGroup' type='android.preference.PreferenceGroup'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='addItemFromInflater'><parameter name='preference' type='android.preference.Preference'/></method><method name='addPreference' return='boolean'><parameter name='preference' type='android.preference.Preference'/></method><method name='dispatchRestoreInstanceState' visibility='protected'><parameter name='container' type='android.os.Bundle'/></method><method name='dispatchSaveInstanceState' visibility='protected'><parameter name='container' type='android.os.Bundle'/></method><method name='findPreference' return='android.preference.Preference'><parameter name='key' type='java.lang.CharSequence'/></method><method name='getPreference' return='android.preference.Preference'><parameter name='index' type='int'/></method><method name='getPreferenceCount' return='int'/><method name='isOnSameScreenAsChildren' visibility='protected' return='boolean'/><method name='isOrderingAsAdded' return='boolean'/><method name='onPrepareAddPreference' visibility='protected' return='boolean'><parameter name='preference' type='android.preference.Preference'/></method><method name='removeAll'/><method name='removePreference' return='boolean'><parameter name='preference' type='android.preference.Preference'/></method><method name='setOrderingAsAdded'><parameter name='orderingAsAdded' type='boolean'/></method></class><class name='PreferenceManager' extends='java.lang.Object'><field name='KEY_HAS_SET_DEFAULT_VALUES' final='true' static='true' value='&quot;_has_set_default_values&quot;' type='java.lang.String'/><field name='METADATA_KEY_PREFERENCES' final='true' static='true' value='&quot;android.preference&quot;' type='java.lang.String'/><method name='createPreferenceScreen' return='android.preference.PreferenceScreen'><parameter name='context' type='android.content.Context'/></method><method name='findPreference' return='android.preference.Preference'><parameter name='key' type='java.lang.CharSequence'/></method><method name='getDefaultSharedPreferences' static='true' return='android.content.SharedPreferences'><parameter name='context' type='android.content.Context'/></method><method name='getSharedPreferences' return='android.content.SharedPreferences'/><method name='getSharedPreferencesMode' return='int'/><method name='getSharedPreferencesName' return='java.lang.String'/><method name='setDefaultValues' static='true'><parameter name='context' type='android.content.Context'/><parameter name='resId' type='int'/><parameter name='readAgain' type='boolean'/></method><method name='setDefaultValues' static='true'><parameter name='context' type='android.content.Context'/><parameter name='sharedPreferencesName' type='java.lang.String'/><parameter name='sharedPreferencesMode' type='int'/><parameter name='resId' type='int'/><parameter name='readAgain' type='boolean'/></method><method name='setSharedPreferencesMode'><parameter name='sharedPreferencesMode' type='int'/></method><method name='setSharedPreferencesName'><parameter name='sharedPreferencesName' type='java.lang.String'/></method></class><class name='PreferenceScreen' final='true' extends='android.preference.PreferenceGroup'><implements name='android.widget.AdapterView.OnItemClickListener'/><implements name='android.content.DialogInterface.OnDismissListener'/><method name='bind'><parameter name='listView' type='android.widget.ListView'/></method><method name='getDialog' return='android.app.Dialog'/><method name='getRootAdapter' return='android.widget.ListAdapter'/><method name='onCreateRootAdapter' visibility='protected' return='android.widget.ListAdapter'/><method name='onDismiss'><parameter name='dialog' type='android.content.DialogInterface'/></method><method name='onItemClick'><parameter name='parent' type='android.widget.AdapterView'/><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method></class><class name='RingtonePreference' extends='android.preference.Preference'><implements name='android.preference.PreferenceManager.OnActivityResultListener'/><constructor name='RingtonePreference' type='android.preference.RingtonePreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='RingtonePreference' type='android.preference.RingtonePreference'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RingtonePreference' type='android.preference.RingtonePreference'><parameter name='context' type='android.content.Context'/></constructor><method name='getRingtoneType' return='int'/><method name='getShowDefault' return='boolean'/><method name='getShowSilent' return='boolean'/><method name='onActivityResult' return='boolean'><parameter name='requestCode' type='int'/><parameter name='resultCode' type='int'/><parameter name='data' type='android.content.Intent'/></method><method name='onPrepareRingtonePickerIntent' visibility='protected'><parameter name='ringtonePickerIntent' type='android.content.Intent'/></method><method name='onRestoreRingtone' visibility='protected' return='android.net.Uri'/><method name='onSaveRingtone' visibility='protected'><parameter name='ringtoneUri' type='android.net.Uri'/></method><method name='setRingtoneType'><parameter name='type' type='int'/></method><method name='setShowDefault'><parameter name='showDefault' type='boolean'/></method><method name='setShowSilent'><parameter name='showSilent' type='boolean'/></method></class><interface name='Preference.OnPreferenceChangeListener' abstract='true' static='true'><method name='onPreferenceChange' abstract='true' return='boolean'><parameter name='preference' type='android.preference.Preference'/><parameter name='newValue' type='java.lang.Object'/></method></interface><interface name='Preference.OnPreferenceClickListener' abstract='true' static='true'><method name='onPreferenceClick' abstract='true' return='boolean'><parameter name='preference' type='android.preference.Preference'/></method></interface><interface name='PreferenceManager.OnActivityDestroyListener' abstract='true' static='true'><method name='onActivityDestroy' abstract='true'/></interface><interface name='PreferenceManager.OnActivityResultListener' abstract='true' static='true'><method name='onActivityResult' abstract='true' return='boolean'><parameter name='requestCode' type='int'/><parameter name='resultCode' type='int'/><parameter name='data' type='android.content.Intent'/></method></interface><interface name='PreferenceManager.OnActivityStopListener' abstract='true' static='true'><method name='onActivityStop' abstract='true'/></interface></package><package name='android.provider'><class name='Browser' extends='java.lang.Object'><constructor name='Browser' type='android.provider.Browser'/><field name='BOOKMARKS_URI' final='true' static='true' type='android.net.Uri'/><field name='HISTORY_PROJECTION' final='true' static='true' value='null' type='java.lang.String[]'/><field name='HISTORY_PROJECTION_BOOKMARK_INDEX' final='true' static='true' value='4' type='int'/><field name='HISTORY_PROJECTION_DATE_INDEX' final='true' static='true' value='3' type='int'/><field name='HISTORY_PROJECTION_FAVICON_INDEX' final='true' static='true' value='6' type='int'/><field name='HISTORY_PROJECTION_ID_INDEX' final='true' static='true' value='0' type='int'/><field name='HISTORY_PROJECTION_TITLE_INDEX' final='true' static='true' value='5' type='int'/><field name='HISTORY_PROJECTION_URL_INDEX' final='true' static='true' value='1' type='int'/><field name='HISTORY_PROJECTION_VISITS_INDEX' final='true' static='true' value='2' type='int'/><field name='INITIAL_ZOOM_LEVEL' final='true' static='true' value='&quot;browser.initialZoomLevel&quot;' type='java.lang.String'/><field name='SEARCHES_PROJECTION' final='true' static='true' value='null' type='java.lang.String[]'/><field name='SEARCHES_PROJECTION_DATE_INDEX' final='true' static='true' value='2' type='int'/><field name='SEARCHES_PROJECTION_SEARCH_INDEX' final='true' static='true' value='1' type='int'/><field name='SEARCHES_URI' final='true' static='true' type='android.net.Uri'/><field name='TRUNCATE_HISTORY_PROJECTION' final='true' static='true' value='null' type='java.lang.String[]'/><field name='TRUNCATE_HISTORY_PROJECTION_ID_INDEX' final='true' static='true' value='0' type='int'/><field name='TRUNCATE_N_OLDEST' final='true' static='true' value='5' type='int'/><field api_added='3' name='EXTRA_APPLICATION_ID' final='true' static='true' value='&quot;com.android.browser.application_id&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_HEADERS' final='true' static='true' value='&quot;com.android.browser.headers&quot;' type='java.lang.String'/><method name='addSearchUrl' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='search' type='java.lang.String'/></method><method name='canClearHistory' final='true' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/></method><method name='clearHistory' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/></method><method name='clearSearches' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/></method><method name='deleteFromHistory' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='url' type='java.lang.String'/></method><method name='deleteHistoryTimeFrame' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='begin' type='long'/><parameter name='end' type='long'/></method><method name='getAllBookmarks' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getAllVisitedUrls' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='requestAllIcons' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='where' type='java.lang.String'/><parameter name='listener' type='android.webkit.WebIconDatabase.IconListener'/></method><method name='saveBookmark' final='true' static='true'><parameter name='c' type='android.content.Context'/><parameter name='title' type='java.lang.String'/><parameter name='url' type='java.lang.String'/></method><method name='sendString' final='true' static='true'><parameter name='c' type='android.content.Context'/><parameter name='s' type='java.lang.String'/></method><method name='truncateHistory' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/></method><method name='updateVisitedHistory' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='url' type='java.lang.String'/><parameter name='real' type='boolean'/></method></class><class name='Browser.BookmarkColumns' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor name='Browser.BookmarkColumns' type='android.provider.Browser.BookmarkColumns'/><field name='BOOKMARK' final='true' static='true' value='&quot;bookmark&quot;' type='java.lang.String'/><field name='CREATED' final='true' static='true' value='&quot;created&quot;' type='java.lang.String'/><field name='DATE' final='true' static='true' value='&quot;date&quot;' type='java.lang.String'/><field name='FAVICON' final='true' static='true' value='&quot;favicon&quot;' type='java.lang.String'/><field name='TITLE' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/><field name='URL' final='true' static='true' value='&quot;url&quot;' type='java.lang.String'/><field name='VISITS' final='true' static='true' value='&quot;visits&quot;' type='java.lang.String'/></class><class name='Browser.SearchColumns' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor name='Browser.SearchColumns' type='android.provider.Browser.SearchColumns'/><field name='DATE' final='true' static='true' value='&quot;date&quot;' type='java.lang.String'/><field name='SEARCH' final='true' static='true' value='&quot;search&quot;' type='java.lang.String'/><field name='URL' final='true' static='true' value='&quot;url&quot;' type='java.lang.String'/></class><class name='CallLog' extends='java.lang.Object'><constructor name='CallLog' type='android.provider.CallLog'/><field name='AUTHORITY' final='true' static='true' value='&quot;call_log&quot;' type='java.lang.String'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/></class><class name='CallLog.Calls' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor name='CallLog.Calls' type='android.provider.CallLog.Calls'/><field name='CACHED_NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/><field name='CACHED_NUMBER_LABEL' final='true' static='true' value='&quot;numberlabel&quot;' type='java.lang.String'/><field name='CACHED_NUMBER_TYPE' final='true' static='true' value='&quot;numbertype&quot;' type='java.lang.String'/><field name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/calls&quot;' type='java.lang.String'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/calls&quot;' type='java.lang.String'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='DATE' final='true' static='true' value='&quot;date&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;date DESC&quot;' type='java.lang.String'/><field name='DURATION' final='true' static='true' value='&quot;duration&quot;' type='java.lang.String'/><field name='INCOMING_TYPE' final='true' static='true' value='1' type='int'/><field name='MISSED_TYPE' final='true' static='true' value='3' type='int'/><field name='NEW' final='true' static='true' value='&quot;new&quot;' type='java.lang.String'/><field name='NUMBER' final='true' static='true' value='&quot;number&quot;' type='java.lang.String'/><field name='OUTGOING_TYPE' final='true' static='true' value='2' type='int'/><field name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String'/><method api_added='8' name='getLastOutgoingCall' static='true' return='java.lang.String'><parameter name='context' type='android.content.Context'/></method></class><class name='Contacts' extends='java.lang.Object' deprecated='5'><field name='AUTHORITY' final='true' static='true' value='&quot;contacts&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='KIND_EMAIL' final='true' static='true' value='1' type='int' deprecated='5'/><field name='KIND_IM' final='true' static='true' value='3' type='int' deprecated='5'/><field name='KIND_ORGANIZATION' final='true' static='true' value='4' type='int' deprecated='5'/><field name='KIND_PHONE' final='true' static='true' value='5' type='int' deprecated='5'/><field name='KIND_POSTAL' final='true' static='true' value='2' type='int' deprecated='5'/></class><class name='Contacts.ContactMethods' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.ContactMethodsColumns'/><implements name='android.provider.Contacts.PeopleColumns'/><field name='CONTENT_EMAIL_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/email&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_EMAIL_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/email&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_EMAIL_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='CONTENT_IM_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/jabber-im&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_POSTAL_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/postal-address&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_POSTAL_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/postal-address&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/contact-methods&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/><field name='POSTAL_LOCATION_LATITUDE' final='true' static='true' value='&quot;data&quot;' type='java.lang.String' deprecated='5'/><field name='POSTAL_LOCATION_LONGITUDE' final='true' static='true' value='&quot;aux_data&quot;' type='java.lang.String' deprecated='5'/><field name='PROTOCOL_AIM' final='true' static='true' value='0' type='int' deprecated='5'/><field name='PROTOCOL_GOOGLE_TALK' final='true' static='true' value='5' type='int' deprecated='5'/><field name='PROTOCOL_ICQ' final='true' static='true' value='6' type='int' deprecated='5'/><field name='PROTOCOL_JABBER' final='true' static='true' value='7' type='int' deprecated='5'/><field name='PROTOCOL_MSN' final='true' static='true' value='1' type='int' deprecated='5'/><field name='PROTOCOL_QQ' final='true' static='true' value='4' type='int' deprecated='5'/><field name='PROTOCOL_SKYPE' final='true' static='true' value='3' type='int' deprecated='5'/><field name='PROTOCOL_YAHOO' final='true' static='true' value='2' type='int' deprecated='5'/><method name='addPostalLocation' deprecated='5'><parameter name='context' type='android.content.Context'/><parameter name='postalId' type='long'/><parameter name='latitude' type='double'/><parameter name='longitude' type='double'/></method><method name='decodeImProtocol' static='true' deprecated='5' return='java.lang.Object'><parameter name='encodedString' type='java.lang.String'/></method><method name='encodeCustomImProtocol' static='true' deprecated='5' return='java.lang.String'><parameter name='protocolString' type='java.lang.String'/></method><method name='encodePredefinedImProtocol' static='true' deprecated='5' return='java.lang.String'><parameter name='protocol' type='int'/></method><method name='getDisplayLabel' final='true' static='true' deprecated='5' return='java.lang.CharSequence'><parameter name='context' type='android.content.Context'/><parameter name='kind' type='int'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method></class><class name='Contacts.Extensions' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.ExtensionsColumns'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/contact_extensions&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/contact_extensions&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;person, name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.GroupMembership' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.GroupsColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;groupmembership&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/contactsgroupmembership&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/contactsgroupmembership&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;group_id ASC&quot;' type='java.lang.String' deprecated='5'/><field name='GROUP_ID' final='true' static='true' value='&quot;group_id&quot;' type='java.lang.String' deprecated='5'/><field name='GROUP_SYNC_ACCOUNT' final='true' static='true' value='&quot;group_sync_account&quot;' type='java.lang.String' deprecated='5'/><field name='GROUP_SYNC_ID' final='true' static='true' value='&quot;group_sync_id&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/><field name='RAW_CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field api_added='5' name='GROUP_SYNC_ACCOUNT_TYPE' final='true' static='true' value='&quot;group_sync_account_type&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Groups' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.GroupsColumns'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/contactsgroup&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/contactsgroup&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='DELETED_CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='GROUP_ANDROID_STARRED' final='true' static='true' value='&quot;Starred in Android&quot;' type='java.lang.String' deprecated='5'/><field name='GROUP_MY_CONTACTS' final='true' static='true' value='&quot;Contacts&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Intents' final='true' extends='java.lang.Object' static='true' deprecated='5'><constructor name='Contacts.Intents' type='android.provider.Contacts.Intents' deprecated='5'/><field name='ATTACH_IMAGE' final='true' static='true' value='&quot;com.android.contacts.action.ATTACH_IMAGE&quot;' type='java.lang.String' deprecated='5'/><field name='SEARCH_SUGGESTION_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_CLICKED&quot;' type='java.lang.String' deprecated='5'/><field name='SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED&quot;' type='java.lang.String' deprecated='5'/><field name='SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='EXTRA_CREATE_DESCRIPTION' final='true' static='true' value='&quot;com.android.contacts.action.CREATE_DESCRIPTION&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='EXTRA_FORCE_CREATE' final='true' static='true' value='&quot;com.android.contacts.action.FORCE_CREATE&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='SHOW_OR_CREATE_CONTACT' final='true' static='true' value='&quot;com.android.contacts.action.SHOW_OR_CREATE_CONTACT&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Intents.Insert' final='true' extends='java.lang.Object' static='true' deprecated='5'><constructor name='Contacts.Intents.Insert' type='android.provider.Contacts.Intents.Insert' deprecated='5'/><field name='ACTION' final='true' static='true' value='&quot;android.intent.action.INSERT&quot;' type='java.lang.String' deprecated='5'/><field name='COMPANY' final='true' static='true' value='&quot;company&quot;' type='java.lang.String' deprecated='5'/><field name='EMAIL' final='true' static='true' value='&quot;email&quot;' type='java.lang.String' deprecated='5'/><field name='EMAIL_ISPRIMARY' final='true' static='true' value='&quot;email_isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='EMAIL_TYPE' final='true' static='true' value='&quot;email_type&quot;' type='java.lang.String' deprecated='5'/><field name='FULL_MODE' final='true' static='true' value='&quot;full_mode&quot;' type='java.lang.String' deprecated='5'/><field name='IM_HANDLE' final='true' static='true' value='&quot;im_handle&quot;' type='java.lang.String' deprecated='5'/><field name='IM_ISPRIMARY' final='true' static='true' value='&quot;im_isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='IM_PROTOCOL' final='true' static='true' value='&quot;im_protocol&quot;' type='java.lang.String' deprecated='5'/><field name='JOB_TITLE' final='true' static='true' value='&quot;job_title&quot;' type='java.lang.String' deprecated='5'/><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String' deprecated='5'/><field name='NOTES' final='true' static='true' value='&quot;notes&quot;' type='java.lang.String' deprecated='5'/><field name='PHONE' final='true' static='true' value='&quot;phone&quot;' type='java.lang.String' deprecated='5'/><field name='PHONE_ISPRIMARY' final='true' static='true' value='&quot;phone_isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='PHONE_TYPE' final='true' static='true' value='&quot;phone_type&quot;' type='java.lang.String' deprecated='5'/><field name='POSTAL' final='true' static='true' value='&quot;postal&quot;' type='java.lang.String' deprecated='5'/><field name='POSTAL_ISPRIMARY' final='true' static='true' value='&quot;postal_isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='POSTAL_TYPE' final='true' static='true' value='&quot;postal_type&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='PHONETIC_NAME' final='true' static='true' value='&quot;phonetic_name&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='SECONDARY_EMAIL' final='true' static='true' value='&quot;secondary_email&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='SECONDARY_EMAIL_TYPE' final='true' static='true' value='&quot;secondary_email_type&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='SECONDARY_PHONE' final='true' static='true' value='&quot;secondary_phone&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='SECONDARY_PHONE_TYPE' final='true' static='true' value='&quot;secondary_phone_type&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='TERTIARY_EMAIL' final='true' static='true' value='&quot;tertiary_email&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='TERTIARY_EMAIL_TYPE' final='true' static='true' value='&quot;tertiary_email_type&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='TERTIARY_PHONE' final='true' static='true' value='&quot;tertiary_phone&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='TERTIARY_PHONE_TYPE' final='true' static='true' value='&quot;tertiary_phone_type&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Intents.UI' final='true' extends='java.lang.Object' static='true' deprecated='5'><constructor name='Contacts.Intents.UI' type='android.provider.Contacts.Intents.UI' deprecated='5'/><field name='FILTER_CONTACTS_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.FILTER_CONTACTS&quot;' type='java.lang.String' deprecated='5'/><field name='FILTER_TEXT_EXTRA_KEY' final='true' static='true' value='&quot;com.android.contacts.extra.FILTER_TEXT&quot;' type='java.lang.String' deprecated='5'/><field name='GROUP_NAME_EXTRA_KEY' final='true' static='true' value='&quot;com.android.contacts.extra.GROUP&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_ALL_CONTACTS_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_ALL_CONTACTS&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_CONTACTS_WITH_PHONES_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_CONTACTS_WITH_PHONES&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_DEFAULT' final='true' static='true' value='&quot;com.android.contacts.action.LIST_DEFAULT&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_FREQUENT_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_FREQUENT&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_GROUP_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_GROUP&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_STARRED_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_STARRED&quot;' type='java.lang.String' deprecated='5'/><field name='LIST_STREQUENT_ACTION' final='true' static='true' value='&quot;com.android.contacts.action.LIST_STREQUENT&quot;' type='java.lang.String' deprecated='5'/><field name='TITLE_EXTRA_KEY' final='true' static='true' value='&quot;com.android.contacts.extra.TITLE_EXTRA&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Organizations' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.OrganizationColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;organizations&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;company, title, isprimary ASC&quot;' type='java.lang.String' deprecated='5'/><method name='getDisplayLabel' final='true' static='true' deprecated='5' return='java.lang.CharSequence'><parameter name='context' type='android.content.Context'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method></class><class name='Contacts.People' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.PeopleColumns'/><implements name='android.provider.Contacts.PhonesColumns'/><implements name='android.provider.Contacts.PresenceColumns'/><field name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/person&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/person&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='DELETED_CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='PRIMARY_EMAIL_ID' final='true' static='true' value='&quot;primary_email&quot;' type='java.lang.String' deprecated='5'/><field name='PRIMARY_ORGANIZATION_ID' final='true' static='true' value='&quot;primary_organization&quot;' type='java.lang.String' deprecated='5'/><field name='PRIMARY_PHONE_ID' final='true' static='true' value='&quot;primary_phone&quot;' type='java.lang.String' deprecated='5'/><method name='addToGroup' static='true' deprecated='5' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='personId' type='long'/><parameter name='groupName' type='java.lang.String'/></method><method name='addToGroup' static='true' deprecated='5' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='personId' type='long'/><parameter name='groupId' type='long'/></method><method name='addToMyContactsGroup' static='true' deprecated='5' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='personId' type='long'/></method><method name='createPersonInMyContactsGroup' static='true' deprecated='5' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='values' type='android.content.ContentValues'/></method><method name='loadContactPhoto' static='true' deprecated='5' return='android.graphics.Bitmap'><parameter name='context' type='android.content.Context'/><parameter name='person' type='android.net.Uri'/><parameter name='placeholderImageResource' type='int'/><parameter name='options' type='android.graphics.BitmapFactory.Options'/></method><method name='markAsContacted' static='true' deprecated='5'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='personId' type='long'/></method><method name='openContactPhotoInputStream' static='true' deprecated='5' return='java.io.InputStream'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='person' type='android.net.Uri'/></method><method name='queryGroups' static='true' deprecated='5' return='android.database.Cursor'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='person' type='long'/></method><method name='setPhotoData' static='true' deprecated='5'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='person' type='android.net.Uri'/><parameter name='data' type='byte[]'/></method></class><class name='Contacts.People.ContactMethods' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.ContactMethodsColumns'/><implements name='android.provider.Contacts.PeopleColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;contact_methods&quot;' type='java.lang.String' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;data ASC&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.People.Extensions' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.ExtensionsColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;extensions&quot;' type='java.lang.String' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.People.Phones' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.PeopleColumns'/><implements name='android.provider.Contacts.PhonesColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;phones&quot;' type='java.lang.String' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;number ASC&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Phones' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.PeopleColumns'/><implements name='android.provider.Contacts.PhonesColumns'/><field name='CONTENT_FILTER_URL' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/phone&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/phone&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/><method name='getDisplayLabel' final='true' static='true' deprecated='5' return='java.lang.CharSequence'><parameter name='context' type='android.content.Context'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/><parameter name='labelArray' type='java.lang.CharSequence[]'/></method><method name='getDisplayLabel' final='true' static='true' deprecated='5' return='java.lang.CharSequence'><parameter name='context' type='android.content.Context'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method></class><class name='Contacts.Photos' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.PhotosColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;photo&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;person ASC&quot;' type='java.lang.String' deprecated='5'/></class><class name='Contacts.Settings' final='true' extends='java.lang.Object' static='true' deprecated='5'><implements name='android.provider.BaseColumns'/><implements name='android.provider.Contacts.SettingsColumns'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;settings&quot;' type='java.lang.String' deprecated='5'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri' deprecated='5'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;key ASC&quot;' type='java.lang.String' deprecated='5'/><field name='SYNC_EVERYTHING' final='true' static='true' value='&quot;syncEverything&quot;' type='java.lang.String' deprecated='5'/><method name='getSetting' static='true' deprecated='5' return='java.lang.String'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='account' type='java.lang.String'/><parameter name='key' type='java.lang.String'/></method><method name='setSetting' static='true' deprecated='5'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='account' type='java.lang.String'/><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method></class><class name='MediaStore' final='true' extends='java.lang.Object'><constructor name='MediaStore' type='android.provider.MediaStore'/><field name='AUTHORITY' final='true' static='true' value='&quot;media&quot;' type='java.lang.String'/><field name='MEDIA_SCANNER_VOLUME' final='true' static='true' value='&quot;volume&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_IMAGE_CAPTURE' final='true' static='true' value='&quot;android.media.action.IMAGE_CAPTURE&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_VIDEO_CAPTURE' final='true' static='true' value='&quot;android.media.action.VIDEO_CAPTURE&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_FINISH_ON_COMPLETION' final='true' static='true' value='&quot;android.intent.extra.finishOnCompletion&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MEDIA_ALBUM' final='true' static='true' value='&quot;android.intent.extra.album&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MEDIA_ARTIST' final='true' static='true' value='&quot;android.intent.extra.artist&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MEDIA_FOCUS' final='true' static='true' value='&quot;android.intent.extra.focus&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MEDIA_TITLE' final='true' static='true' value='&quot;android.intent.extra.title&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_OUTPUT' final='true' static='true' value='&quot;output&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_SCREEN_ORIENTATION' final='true' static='true' value='&quot;android.intent.extra.screenOrientation&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_VIDEO_QUALITY' final='true' static='true' value='&quot;android.intent.extra.videoQuality&quot;' type='java.lang.String'/><field api_added='3' name='INTENT_ACTION_MEDIA_SEARCH' final='true' static='true' value='&quot;android.intent.action.MEDIA_SEARCH&quot;' type='java.lang.String'/><field api_added='3' name='INTENT_ACTION_STILL_IMAGE_CAMERA' final='true' static='true' value='&quot;android.media.action.STILL_IMAGE_CAMERA&quot;' type='java.lang.String'/><field api_added='3' name='INTENT_ACTION_VIDEO_CAMERA' final='true' static='true' value='&quot;android.media.action.VIDEO_CAMERA&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_DURATION_LIMIT' final='true' static='true' value='&quot;android.intent.extra.durationLimit&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_FULL_SCREEN' final='true' static='true' value='&quot;android.intent.extra.fullScreen&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SHOW_ACTION_ICONS' final='true' static='true' value='&quot;android.intent.extra.showActionIcons&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SIZE_LIMIT' final='true' static='true' value='&quot;android.intent.extra.sizeLimit&quot;' type='java.lang.String'/><field api_added='8' name='INTENT_ACTION_MUSIC_PLAYER' final='true' static='true' value='&quot;android.intent.action.MUSIC_PLAYER&quot;' type='java.lang.String'/><field api_added='8' name='UNKNOWN_STRING' final='true' static='true' value='&quot;&lt;unknown&gt;&quot;' type='java.lang.String'/><method name='getMediaScannerUri' static='true' return='android.net.Uri'/></class><class name='MediaStore.Audio' final='true' extends='java.lang.Object' static='true'><constructor name='MediaStore.Audio' type='android.provider.MediaStore.Audio'/><method name='keyFor' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Albums' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.MediaStore.Audio.AlbumColumns'/><constructor name='MediaStore.Audio.Albums' type='android.provider.MediaStore.Audio.Albums'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/albums&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;album_key&quot;' type='java.lang.String'/><field name='ENTRY_CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/album&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Artists' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.MediaStore.Audio.ArtistColumns'/><constructor name='MediaStore.Audio.Artists' type='android.provider.MediaStore.Audio.Artists'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/artists&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;artist_key&quot;' type='java.lang.String'/><field name='ENTRY_CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/artist&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Artists.Albums' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Audio.AlbumColumns'/><constructor name='MediaStore.Audio.Artists.Albums' type='android.provider.MediaStore.Audio.Artists.Albums'/><method name='getContentUri' final='true' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/><parameter name='artistId' type='long'/></method></class><class name='MediaStore.Audio.Genres' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.MediaStore.Audio.GenresColumns'/><constructor name='MediaStore.Audio.Genres' type='android.provider.MediaStore.Audio.Genres'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/genre&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/><field name='ENTRY_CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/genre&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Genres.Members' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Audio.AudioColumns'/><constructor name='MediaStore.Audio.Genres.Members' type='android.provider.MediaStore.Audio.Genres.Members'/><field name='AUDIO_ID' final='true' static='true' value='&quot;audio_id&quot;' type='java.lang.String'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;members&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/><field name='GENRE_ID' final='true' static='true' value='&quot;genre_id&quot;' type='java.lang.String'/><method name='getContentUri' final='true' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/><parameter name='genreId' type='long'/></method></class><class name='MediaStore.Audio.Media' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Audio.AudioColumns'/><constructor name='MediaStore.Audio.Media' type='android.provider.MediaStore.Audio.Media'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/audio&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='RECORD_SOUND_ACTION' final='true' static='true' value='&quot;android.provider.MediaStore.RECORD_SOUND&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MAX_BYTES' final='true' static='true' value='&quot;android.provider.MediaStore.extra.MAX_BYTES&quot;' type='java.lang.String'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method><method name='getContentUriForPath' static='true' return='android.net.Uri'><parameter name='path' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Playlists' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.MediaStore.Audio.PlaylistsColumns'/><constructor name='MediaStore.Audio.Playlists' type='android.provider.MediaStore.Audio.Playlists'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/playlist&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/><field name='ENTRY_CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/playlist&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method></class><class name='MediaStore.Audio.Playlists.Members' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Audio.AudioColumns'/><constructor name='MediaStore.Audio.Playlists.Members' type='android.provider.MediaStore.Audio.Playlists.Members'/><field name='AUDIO_ID' final='true' static='true' value='&quot;audio_id&quot;' type='java.lang.String'/><field name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;members&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;play_order&quot;' type='java.lang.String'/><field name='PLAYLIST_ID' final='true' static='true' value='&quot;playlist_id&quot;' type='java.lang.String'/><field name='PLAY_ORDER' final='true' static='true' value='&quot;play_order&quot;' type='java.lang.String'/><field name='_ID' final='true' static='true' value='&quot;_id&quot;' type='java.lang.String'/><method name='getContentUri' final='true' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/><parameter name='playlistId' type='long'/></method><method api_added='8' name='moveItem' final='true' static='true' return='boolean'><parameter name='res' type='android.content.ContentResolver'/><parameter name='playlistId' type='long'/><parameter name='from' type='int'/><parameter name='to' type='int'/></method></class><class name='MediaStore.Images' final='true' extends='java.lang.Object' static='true'><constructor name='MediaStore.Images' type='android.provider.MediaStore.Images'/></class><class name='MediaStore.Images.Media' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Images.ImageColumns'/><constructor name='MediaStore.Images.Media' type='android.provider.MediaStore.Images.Media'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/image&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getBitmap' final='true' static='true' return='android.graphics.Bitmap'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='url' type='android.net.Uri'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method><method name='insertImage' final='true' static='true' return='java.lang.String'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='imagePath' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><parameter name='description' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='insertImage' final='true' static='true' return='java.lang.String'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='source' type='android.graphics.Bitmap'/><parameter name='title' type='java.lang.String'/><parameter name='description' type='java.lang.String'/></method><method name='query' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/></method><method name='query' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='where' type='java.lang.String'/><parameter name='orderBy' type='java.lang.String'/></method><method name='query' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='orderBy' type='java.lang.String'/></method></class><class name='MediaStore.Images.Thumbnails' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor name='MediaStore.Images.Thumbnails' type='android.provider.MediaStore.Images.Thumbnails'/><field name='DATA' final='true' static='true' value='&quot;_data&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;image_id ASC&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='FULL_SCREEN_KIND' final='true' static='true' value='2' type='int'/><field name='HEIGHT' final='true' static='true' value='&quot;height&quot;' type='java.lang.String'/><field name='IMAGE_ID' final='true' static='true' value='&quot;image_id&quot;' type='java.lang.String'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='KIND' final='true' static='true' value='&quot;kind&quot;' type='java.lang.String'/><field name='MICRO_KIND' final='true' static='true' value='3' type='int'/><field name='MINI_KIND' final='true' static='true' value='1' type='int'/><field name='WIDTH' final='true' static='true' value='&quot;width&quot;' type='java.lang.String'/><field api_added='5' name='THUMB_DATA' final='true' static='true' value='&quot;thumb_data&quot;' type='java.lang.String'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method><method name='query' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/></method><method name='queryMiniThumbnail' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='kind' type='int'/><parameter name='projection' type='java.lang.String[]'/></method><method name='queryMiniThumbnails' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='kind' type='int'/><parameter name='projection' type='java.lang.String[]'/></method><method api_added='5' name='cancelThumbnailRequest' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/></method><method api_added='5' name='getThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='kind' type='int'/><parameter name='options' type='android.graphics.BitmapFactory.Options'/></method><method api_added='8' name='cancelThumbnailRequest' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='groupId' type='long'/></method><method api_added='8' name='getThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='groupId' type='long'/><parameter name='kind' type='int'/><parameter name='options' type='android.graphics.BitmapFactory.Options'/></method></class><class name='MediaStore.Video' final='true' extends='java.lang.Object' static='true'><constructor name='MediaStore.Video' type='android.provider.MediaStore.Video'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;name ASC&quot;' type='java.lang.String'/><method name='query' final='true' static='true' return='android.database.Cursor'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/></method></class><class name='MediaStore.Video.Media' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.MediaStore.Video.VideoColumns'/><constructor name='MediaStore.Video.Media' type='android.provider.MediaStore.Video.Media'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/video&quot;' type='java.lang.String'/><field name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/><field name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method></class><class name='SearchRecentSuggestions' extends='java.lang.Object'><constructor name='SearchRecentSuggestions' type='android.provider.SearchRecentSuggestions'><parameter name='context' type='android.content.Context'/><parameter name='authority' type='java.lang.String'/><parameter name='mode' type='int'/></constructor><field name='QUERIES_PROJECTION_1LINE' final='true' static='true' value='null' type='java.lang.String[]'/><field name='QUERIES_PROJECTION_2LINE' final='true' static='true' value='null' type='java.lang.String[]'/><field name='QUERIES_PROJECTION_DATE_INDEX' final='true' static='true' value='1' type='int'/><field name='QUERIES_PROJECTION_DISPLAY1_INDEX' final='true' static='true' value='3' type='int'/><field name='QUERIES_PROJECTION_DISPLAY2_INDEX' final='true' static='true' value='4' type='int'/><field name='QUERIES_PROJECTION_QUERY_INDEX' final='true' static='true' value='2' type='int'/><method name='clearHistory'/><method name='saveRecentQuery'><parameter name='queryString' type='java.lang.String'/><parameter name='line2' type='java.lang.String'/></method><method name='truncateHistory' visibility='protected'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='maxEntries' type='int'/></method></class><class name='Settings' final='true' extends='java.lang.Object'><constructor name='Settings' type='android.provider.Settings'/><field name='ACTION_APN_SETTINGS' final='true' static='true' value='&quot;android.settings.APN_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_APPLICATION_SETTINGS' final='true' static='true' value='&quot;android.settings.APPLICATION_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_BLUETOOTH_SETTINGS' final='true' static='true' value='&quot;android.settings.BLUETOOTH_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_DATE_SETTINGS' final='true' static='true' value='&quot;android.settings.DATE_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_DISPLAY_SETTINGS' final='true' static='true' value='&quot;android.settings.DISPLAY_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_LOCALE_SETTINGS' final='true' static='true' value='&quot;android.settings.LOCALE_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_LOCATION_SOURCE_SETTINGS' final='true' static='true' value='&quot;android.settings.LOCATION_SOURCE_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_SECURITY_SETTINGS' final='true' static='true' value='&quot;android.settings.SECURITY_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_SETTINGS' final='true' static='true' value='&quot;android.settings.SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_SOUND_SETTINGS' final='true' static='true' value='&quot;android.settings.SOUND_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_WIFI_SETTINGS' final='true' static='true' value='&quot;android.settings.WIFI_SETTINGS&quot;' type='java.lang.String'/><field name='ACTION_WIRELESS_SETTINGS' final='true' static='true' value='&quot;android.settings.WIRELESS_SETTINGS&quot;' type='java.lang.String'/><field name='AUTHORITY' final='true' static='true' value='&quot;settings&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_AIRPLANE_MODE_SETTINGS' final='true' static='true' value='&quot;android.settings.AIRPLANE_MODE_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPLICATION_DEVELOPMENT_SETTINGS' final='true' static='true' value='&quot;android.settings.APPLICATION_DEVELOPMENT_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_DATA_ROAMING_SETTINGS' final='true' static='true' value='&quot;android.settings.DATA_ROAMING_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_INPUT_METHOD_SETTINGS' final='true' static='true' value='&quot;android.settings.INPUT_METHOD_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_INTERNAL_STORAGE_SETTINGS' final='true' static='true' value='&quot;android.settings.INTERNAL_STORAGE_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_MANAGE_APPLICATIONS_SETTINGS' final='true' static='true' value='&quot;android.settings.MANAGE_APPLICATIONS_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_MEMORY_CARD_SETTINGS' final='true' static='true' value='&quot;android.settings.MEMORY_CARD_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_NETWORK_OPERATOR_SETTINGS' final='true' static='true' value='&quot;android.settings.NETWORK_OPERATOR_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_QUICK_LAUNCH_SETTINGS' final='true' static='true' value='&quot;android.settings.QUICK_LAUNCH_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_SYNC_SETTINGS' final='true' static='true' value='&quot;android.settings.SYNC_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_USER_DICTIONARY_SETTINGS' final='true' static='true' value='&quot;android.settings.USER_DICTIONARY_SETTINGS&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_WIFI_IP_SETTINGS' final='true' static='true' value='&quot;android.settings.WIFI_IP_SETTINGS&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_ACCESSIBILITY_SETTINGS' final='true' static='true' value='&quot;android.settings.ACCESSIBILITY_SETTINGS&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_PRIVACY_SETTINGS' final='true' static='true' value='&quot;android.settings.PRIVACY_SETTINGS&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_ADD_ACCOUNT' final='true' static='true' value='&quot;android.settings.ADD_ACCOUNT_SETTINGS&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_DEVICE_INFO_SETTINGS' final='true' static='true' value='&quot;android.settings.DEVICE_INFO_SETTINGS&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_SEARCH_SETTINGS' final='true' static='true' value='&quot;android.search.action.SEARCH_SETTINGS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_AUTHORITIES' final='true' static='true' value='&quot;authorities&quot;' type='java.lang.String'/></class><class name='Settings.NameValueTable' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor name='Settings.NameValueTable' type='android.provider.Settings.NameValueTable'/><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/><field name='VALUE' final='true' static='true' value='&quot;value&quot;' type='java.lang.String'/><method name='getUriFor' static='true' return='android.net.Uri'><parameter name='uri' type='android.net.Uri'/><parameter name='name' type='java.lang.String'/></method><method name='putString' static='true' visibility='protected' return='boolean'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method></class><class name='Settings.SettingNotFoundException' extends='android.util.AndroidException' static='true'><constructor name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'><parameter name='msg' type='java.lang.String'/></constructor></class><class name='Settings.System' final='true' extends='android.provider.Settings.NameValueTable' static='true'><constructor name='Settings.System' type='android.provider.Settings.System'/><field name='ADB_ENABLED' final='true' static='true' value='&quot;adb_enabled&quot;' type='java.lang.String' deprecated='3'/><field name='AIRPLANE_MODE_ON' final='true' static='true' value='&quot;airplane_mode_on&quot;' type='java.lang.String'/><field name='AIRPLANE_MODE_RADIOS' final='true' static='true' value='&quot;airplane_mode_radios&quot;' type='java.lang.String'/><field name='ALWAYS_FINISH_ACTIVITIES' final='true' static='true' value='&quot;always_finish_activities&quot;' type='java.lang.String'/><field name='ANDROID_ID' final='true' static='true' value='&quot;android_id&quot;' type='java.lang.String' deprecated='3'/><field name='APPEND_FOR_LAST_AUDIBLE' final='true' static='true' value='&quot;_last_audible&quot;' type='java.lang.String'/><field name='AUTO_TIME' final='true' static='true' value='&quot;auto_time&quot;' type='java.lang.String'/><field name='BLUETOOTH_DISCOVERABILITY' final='true' static='true' value='&quot;bluetooth_discoverability&quot;' type='java.lang.String'/><field name='BLUETOOTH_DISCOVERABILITY_TIMEOUT' final='true' static='true' value='&quot;bluetooth_discoverability_timeout&quot;' type='java.lang.String'/><field name='BLUETOOTH_ON' final='true' static='true' value='&quot;bluetooth_on&quot;' type='java.lang.String' deprecated='3'/><field name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field name='DATA_ROAMING' final='true' static='true' value='&quot;data_roaming&quot;' type='java.lang.String' deprecated='3'/><field name='DATE_FORMAT' final='true' static='true' value='&quot;date_format&quot;' type='java.lang.String'/><field name='DEBUG_APP' final='true' static='true' value='&quot;debug_app&quot;' type='java.lang.String'/><field name='DEFAULT_NOTIFICATION_URI' final='true' static='true' type='android.net.Uri'/><field name='DEFAULT_RINGTONE_URI' final='true' static='true' type='android.net.Uri'/><field name='DEVICE_PROVISIONED' final='true' static='true' value='&quot;device_provisioned&quot;' type='java.lang.String' deprecated='3'/><field name='DIM_SCREEN' final='true' static='true' value='&quot;dim_screen&quot;' type='java.lang.String'/><field name='DTMF_TONE_WHEN_DIALING' final='true' static='true' value='&quot;dtmf_tone&quot;' type='java.lang.String'/><field name='END_BUTTON_BEHAVIOR' final='true' static='true' value='&quot;end_button_behavior&quot;' type='java.lang.String'/><field name='FONT_SCALE' final='true' static='true' value='&quot;font_scale&quot;' type='java.lang.String'/><field name='HTTP_PROXY' final='true' static='true' value='&quot;http_proxy&quot;' type='java.lang.String' deprecated='3'/><field name='INSTALL_NON_MARKET_APPS' final='true' static='true' value='&quot;install_non_market_apps&quot;' type='java.lang.String' deprecated='3'/><field name='LOCATION_PROVIDERS_ALLOWED' final='true' static='true' value='&quot;location_providers_allowed&quot;' type='java.lang.String' deprecated='3'/><field name='LOCK_PATTERN_ENABLED' final='true' static='true' value='&quot;lock_pattern_autolock&quot;' type='java.lang.String' deprecated='8'/><field name='LOCK_PATTERN_VISIBLE' final='true' static='true' value='&quot;lock_pattern_visible_pattern&quot;' type='java.lang.String' deprecated='8'/><field name='LOGGING_ID' final='true' static='true' value='&quot;logging_id&quot;' type='java.lang.String' deprecated='3'/><field name='MODE_RINGER' final='true' static='true' value='&quot;mode_ringer&quot;' type='java.lang.String'/><field name='MODE_RINGER_STREAMS_AFFECTED' final='true' static='true' value='&quot;mode_ringer_streams_affected&quot;' type='java.lang.String'/><field name='MUTE_STREAMS_AFFECTED' final='true' static='true' value='&quot;mute_streams_affected&quot;' type='java.lang.String'/><field name='NETWORK_PREFERENCE' final='true' static='true' value='&quot;network_preference&quot;' type='java.lang.String' deprecated='3'/><field name='NEXT_ALARM_FORMATTED' final='true' static='true' value='&quot;next_alarm_formatted&quot;' type='java.lang.String'/><field name='NOTIFICATION_SOUND' final='true' static='true' value='&quot;notification_sound&quot;' type='java.lang.String'/><field name='PARENTAL_CONTROL_ENABLED' final='true' static='true' value='&quot;parental_control_enabled&quot;' type='java.lang.String' deprecated='3'/><field name='PARENTAL_CONTROL_LAST_UPDATE' final='true' static='true' value='&quot;parental_control_last_update&quot;' type='java.lang.String' deprecated='3'/><field name='PARENTAL_CONTROL_REDIRECT_URL' final='true' static='true' value='&quot;parental_control_redirect_url&quot;' type='java.lang.String' deprecated='3'/><field name='RADIO_BLUETOOTH' final='true' static='true' value='&quot;bluetooth&quot;' type='java.lang.String'/><field name='RADIO_CELL' final='true' static='true' value='&quot;cell&quot;' type='java.lang.String'/><field name='RADIO_WIFI' final='true' static='true' value='&quot;wifi&quot;' type='java.lang.String'/><field name='RINGTONE' final='true' static='true' value='&quot;ringtone&quot;' type='java.lang.String'/><field name='SCREEN_BRIGHTNESS' final='true' static='true' value='&quot;screen_brightness&quot;' type='java.lang.String'/><field name='SCREEN_OFF_TIMEOUT' final='true' static='true' value='&quot;screen_off_timeout&quot;' type='java.lang.String'/><field name='SETTINGS_CLASSNAME' final='true' static='true' value='&quot;settings_classname&quot;' type='java.lang.String' deprecated='3'/><field name='SETUP_WIZARD_HAS_RUN' final='true' static='true' value='&quot;setup_wizard_has_run&quot;' type='java.lang.String'/><field name='SHOW_GTALK_SERVICE_STATUS' final='true' static='true' value='&quot;SHOW_GTALK_SERVICE_STATUS&quot;' type='java.lang.String'/><field name='SHOW_PROCESSES' final='true' static='true' value='&quot;show_processes&quot;' type='java.lang.String'/><field name='SOUND_EFFECTS_ENABLED' final='true' static='true' value='&quot;sound_effects_enabled&quot;' type='java.lang.String'/><field name='STAY_ON_WHILE_PLUGGED_IN' final='true' static='true' value='&quot;stay_on_while_plugged_in&quot;' type='java.lang.String'/><field name='SYS_PROP_SETTING_VERSION' final='true' static='true' value='&quot;sys.settings_system_version&quot;' type='java.lang.String'/><field name='TEXT_AUTO_CAPS' final='true' static='true' value='&quot;auto_caps&quot;' type='java.lang.String'/><field name='TEXT_AUTO_PUNCTUATE' final='true' static='true' value='&quot;auto_punctuate&quot;' type='java.lang.String'/><field name='TEXT_AUTO_REPLACE' final='true' static='true' value='&quot;auto_replace&quot;' type='java.lang.String'/><field name='TEXT_SHOW_PASSWORD' final='true' static='true' value='&quot;show_password&quot;' type='java.lang.String'/><field name='TIME_12_24' final='true' static='true' value='&quot;time_12_24&quot;' type='java.lang.String'/><field name='TRANSITION_ANIMATION_SCALE' final='true' static='true' value='&quot;transition_animation_scale&quot;' type='java.lang.String'/><field name='USB_MASS_STORAGE_ENABLED' final='true' static='true' value='&quot;usb_mass_storage_enabled&quot;' type='java.lang.String' deprecated='3'/><field name='USE_GOOGLE_MAIL' final='true' static='true' value='&quot;use_google_mail&quot;' type='java.lang.String' deprecated='3'/><field name='VIBRATE_ON' final='true' static='true' value='&quot;vibrate_on&quot;' type='java.lang.String'/><field name='VOLUME_ALARM' final='true' static='true' value='&quot;volume_alarm&quot;' type='java.lang.String'/><field name='VOLUME_MUSIC' final='true' static='true' value='&quot;volume_music&quot;' type='java.lang.String'/><field name='VOLUME_RING' final='true' static='true' value='&quot;volume_ring&quot;' type='java.lang.String'/><field name='VOLUME_SETTINGS' final='true' static='true' value='null' type='java.lang.String[]'/><field name='VOLUME_SYSTEM' final='true' static='true' value='&quot;volume_system&quot;' type='java.lang.String'/><field name='VOLUME_VOICE' final='true' static='true' value='&quot;volume_voice&quot;' type='java.lang.String'/><field name='WAIT_FOR_DEBUGGER' final='true' static='true' value='&quot;wait_for_debugger&quot;' type='java.lang.String'/><field name='WALLPAPER_ACTIVITY' final='true' static='true' value='&quot;wallpaper_activity&quot;' type='java.lang.String'/><field name='WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON' final='true' static='true' value='&quot;wifi_networks_available_notification_on&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY' final='true' static='true' value='&quot;wifi_networks_available_repeat_delay&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_NUM_OPEN_NETWORKS_KEPT' final='true' static='true' value='&quot;wifi_num_open_networks_kept&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_ON' final='true' static='true' value='&quot;wifi_on&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_STATIC_DNS1' final='true' static='true' value='&quot;wifi_static_dns1&quot;' type='java.lang.String'/><field name='WIFI_STATIC_DNS2' final='true' static='true' value='&quot;wifi_static_dns2&quot;' type='java.lang.String'/><field name='WIFI_STATIC_GATEWAY' final='true' static='true' value='&quot;wifi_static_gateway&quot;' type='java.lang.String'/><field name='WIFI_STATIC_IP' final='true' static='true' value='&quot;wifi_static_ip&quot;' type='java.lang.String'/><field name='WIFI_STATIC_NETMASK' final='true' static='true' value='&quot;wifi_static_netmask&quot;' type='java.lang.String'/><field name='WIFI_USE_STATIC_IP' final='true' static='true' value='&quot;wifi_use_static_ip&quot;' type='java.lang.String'/><field name='WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE' final='true' static='true' value='&quot;wifi_watchdog_acceptable_packet_loss_percentage&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_AP_COUNT' final='true' static='true' value='&quot;wifi_watchdog_ap_count&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS' final='true' static='true' value='&quot;wifi_watchdog_background_check_delay_ms&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED' final='true' static='true' value='&quot;wifi_watchdog_background_check_enabled&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_watchdog_background_check_timeout_ms&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT' final='true' static='true' value='&quot;wifi_watchdog_initial_ignored_ping_count&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_MAX_AP_CHECKS' final='true' static='true' value='&quot;wifi_watchdog_max_ap_checks&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_ON' final='true' static='true' value='&quot;wifi_watchdog_on&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_PING_COUNT' final='true' static='true' value='&quot;wifi_watchdog_ping_count&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_PING_DELAY_MS' final='true' static='true' value='&quot;wifi_watchdog_ping_delay_ms&quot;' type='java.lang.String' deprecated='3'/><field name='WIFI_WATCHDOG_PING_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_watchdog_ping_timeout_ms&quot;' type='java.lang.String' deprecated='3'/><field name='WINDOW_ANIMATION_SCALE' final='true' static='true' value='&quot;window_animation_scale&quot;' type='java.lang.String'/><field api_added='3' name='ACCELEROMETER_ROTATION' final='true' static='true' value='&quot;accelerometer_rotation&quot;' type='java.lang.String'/><field api_added='3' name='HAPTIC_FEEDBACK_ENABLED' final='true' static='true' value='&quot;haptic_feedback_enabled&quot;' type='java.lang.String'/><field api_added='3' name='LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED' final='true' static='true' value='&quot;lock_pattern_tactile_feedback_enabled&quot;' type='java.lang.String' deprecated='8'/><field api_added='3' name='VOLUME_NOTIFICATION' final='true' static='true' value='&quot;volume_notification&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_MAX_DHCP_RETRY_COUNT' final='true' static='true' value='&quot;wifi_max_dhcp_retry_count&quot;' type='java.lang.String' deprecated='3'/><field api_added='3' name='WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_mobile_data_transition_wakelock_timeout_ms&quot;' type='java.lang.String' deprecated='3'/><field api_added='3' name='WIFI_SLEEP_POLICY' final='true' static='true' value='&quot;wifi_sleep_policy&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_SLEEP_POLICY_DEFAULT' final='true' static='true' value='0' type='int'/><field api_added='3' name='WIFI_SLEEP_POLICY_NEVER' final='true' static='true' value='2' type='int'/><field api_added='3' name='WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED' final='true' static='true' value='1' type='int'/><field api_added='4' name='SHOW_WEB_SUGGESTIONS' final='true' static='true' value='&quot;show_web_suggestions&quot;' type='java.lang.String'/><field api_added='5' name='ALARM_ALERT' final='true' static='true' value='&quot;alarm_alert&quot;' type='java.lang.String'/><field api_added='5' name='DEFAULT_ALARM_ALERT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='8' name='SCREEN_BRIGHTNESS_MODE' final='true' static='true' value='&quot;screen_brightness_mode&quot;' type='java.lang.String'/><field api_added='8' name='SCREEN_BRIGHTNESS_MODE_AUTOMATIC' final='true' static='true' value='1' type='int'/><field api_added='8' name='SCREEN_BRIGHTNESS_MODE_MANUAL' final='true' static='true' value='0' type='int'/><field api_added='8' name='VOLUME_BLUETOOTH_SCO' final='true' static='true' value='&quot;volume_bluetooth_sco&quot;' type='java.lang.String'/><method name='getConfiguration' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='outConfig' type='android.content.res.Configuration'/></method><method name='getFloat' static='true' return='float'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='float'/></method><method name='getFloat' static='true' return='float'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method name='getInt' static='true' return='int'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='int'/></method><method name='getInt' static='true' return='int'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method name='getShowGTalkServiceStatus' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/></method><method name='getString' synchronized='true' static='true' return='java.lang.String'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/></method><method name='getUriFor' static='true' return='android.net.Uri'><parameter name='name' type='java.lang.String'/></method><method name='putConfiguration' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='config' type='android.content.res.Configuration'/></method><method name='putFloat' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putInt' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putString' static='true' return='boolean'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setShowGTalkServiceStatus' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='flag' type='boolean'/></method><method api_added='3' name='getLong' static='true' return='long'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='long'/></method><method api_added='3' name='getLong' static='true' return='long'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method api_added='3' name='putLong' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method></class><class api_added='3' name='LiveFolders' final='true' extends='java.lang.Object'><implements name='android.provider.BaseColumns'/><field api_added='3' name='ACTION_CREATE_LIVE_FOLDER' final='true' static='true' value='&quot;android.intent.action.CREATE_LIVE_FOLDER&quot;' type='java.lang.String'/><field api_added='3' name='DESCRIPTION' final='true' static='true' value='&quot;description&quot;' type='java.lang.String'/><field api_added='3' name='DISPLAY_MODE_GRID' final='true' static='true' value='1' type='int'/><field api_added='3' name='DISPLAY_MODE_LIST' final='true' static='true' value='2' type='int'/><field api_added='3' name='EXTRA_LIVE_FOLDER_BASE_INTENT' final='true' static='true' value='&quot;android.intent.extra.livefolder.BASE_INTENT&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_LIVE_FOLDER_DISPLAY_MODE' final='true' static='true' value='&quot;android.intent.extra.livefolder.DISPLAY_MODE&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_LIVE_FOLDER_ICON' final='true' static='true' value='&quot;android.intent.extra.livefolder.ICON&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_LIVE_FOLDER_NAME' final='true' static='true' value='&quot;android.intent.extra.livefolder.NAME&quot;' type='java.lang.String'/><field api_added='3' name='ICON_BITMAP' final='true' static='true' value='&quot;icon_bitmap&quot;' type='java.lang.String'/><field api_added='3' name='ICON_PACKAGE' final='true' static='true' value='&quot;icon_package&quot;' type='java.lang.String'/><field api_added='3' name='ICON_RESOURCE' final='true' static='true' value='&quot;icon_resource&quot;' type='java.lang.String'/><field api_added='3' name='INTENT' final='true' static='true' value='&quot;intent&quot;' type='java.lang.String'/><field api_added='3' name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/></class><class api_added='3' name='Settings.Secure' final='true' extends='android.provider.Settings.NameValueTable' static='true'><constructor api_added='3' name='Settings.Secure' type='android.provider.Settings.Secure'/><field api_added='3' name='ADB_ENABLED' final='true' static='true' value='&quot;adb_enabled&quot;' type='java.lang.String'/><field api_added='3' name='ALLOW_MOCK_LOCATION' final='true' static='true' value='&quot;mock_location&quot;' type='java.lang.String'/><field api_added='3' name='ANDROID_ID' final='true' static='true' value='&quot;android_id&quot;' type='java.lang.String'/><field api_added='3' name='BACKGROUND_DATA' final='true' static='true' value='&quot;background_data&quot;' type='java.lang.String'/><field api_added='3' name='BLUETOOTH_ON' final='true' static='true' value='&quot;bluetooth_on&quot;' type='java.lang.String'/><field api_added='3' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='3' name='DATA_ROAMING' final='true' static='true' value='&quot;data_roaming&quot;' type='java.lang.String'/><field api_added='3' name='DEFAULT_INPUT_METHOD' final='true' static='true' value='&quot;default_input_method&quot;' type='java.lang.String'/><field api_added='3' name='DEVICE_PROVISIONED' final='true' static='true' value='&quot;device_provisioned&quot;' type='java.lang.String'/><field api_added='3' name='ENABLED_INPUT_METHODS' final='true' static='true' value='&quot;enabled_input_methods&quot;' type='java.lang.String'/><field api_added='3' name='HTTP_PROXY' final='true' static='true' value='&quot;http_proxy&quot;' type='java.lang.String'/><field api_added='3' name='INSTALL_NON_MARKET_APPS' final='true' static='true' value='&quot;install_non_market_apps&quot;' type='java.lang.String'/><field api_added='3' name='LOCATION_PROVIDERS_ALLOWED' final='true' static='true' value='&quot;location_providers_allowed&quot;' type='java.lang.String'/><field api_added='3' name='LOGGING_ID' final='true' static='true' value='&quot;logging_id&quot;' type='java.lang.String' deprecated='3'/><field api_added='3' name='NETWORK_PREFERENCE' final='true' static='true' value='&quot;network_preference&quot;' type='java.lang.String'/><field api_added='3' name='PARENTAL_CONTROL_ENABLED' final='true' static='true' value='&quot;parental_control_enabled&quot;' type='java.lang.String'/><field api_added='3' name='PARENTAL_CONTROL_LAST_UPDATE' final='true' static='true' value='&quot;parental_control_last_update&quot;' type='java.lang.String'/><field api_added='3' name='PARENTAL_CONTROL_REDIRECT_URL' final='true' static='true' value='&quot;parental_control_redirect_url&quot;' type='java.lang.String'/><field api_added='3' name='SETTINGS_CLASSNAME' final='true' static='true' value='&quot;settings_classname&quot;' type='java.lang.String'/><field api_added='3' name='SYS_PROP_SETTING_VERSION' final='true' static='true' value='&quot;sys.settings_secure_version&quot;' type='java.lang.String'/><field api_added='3' name='USB_MASS_STORAGE_ENABLED' final='true' static='true' value='&quot;usb_mass_storage_enabled&quot;' type='java.lang.String'/><field api_added='3' name='USE_GOOGLE_MAIL' final='true' static='true' value='&quot;use_google_mail&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_MAX_DHCP_RETRY_COUNT' final='true' static='true' value='&quot;wifi_max_dhcp_retry_count&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_mobile_data_transition_wakelock_timeout_ms&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON' final='true' static='true' value='&quot;wifi_networks_available_notification_on&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY' final='true' static='true' value='&quot;wifi_networks_available_repeat_delay&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_NUM_OPEN_NETWORKS_KEPT' final='true' static='true' value='&quot;wifi_num_open_networks_kept&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_ON' final='true' static='true' value='&quot;wifi_on&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_ACCEPTABLE_PACKET_LOSS_PERCENTAGE' final='true' static='true' value='&quot;wifi_watchdog_acceptable_packet_loss_percentage&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_AP_COUNT' final='true' static='true' value='&quot;wifi_watchdog_ap_count&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_BACKGROUND_CHECK_DELAY_MS' final='true' static='true' value='&quot;wifi_watchdog_background_check_delay_ms&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_BACKGROUND_CHECK_ENABLED' final='true' static='true' value='&quot;wifi_watchdog_background_check_enabled&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_BACKGROUND_CHECK_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_watchdog_background_check_timeout_ms&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_INITIAL_IGNORED_PING_COUNT' final='true' static='true' value='&quot;wifi_watchdog_initial_ignored_ping_count&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_MAX_AP_CHECKS' final='true' static='true' value='&quot;wifi_watchdog_max_ap_checks&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_ON' final='true' static='true' value='&quot;wifi_watchdog_on&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_PING_COUNT' final='true' static='true' value='&quot;wifi_watchdog_ping_count&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_PING_DELAY_MS' final='true' static='true' value='&quot;wifi_watchdog_ping_delay_ms&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_PING_TIMEOUT_MS' final='true' static='true' value='&quot;wifi_watchdog_ping_timeout_ms&quot;' type='java.lang.String'/><field api_added='3' name='WIFI_WATCHDOG_WATCH_LIST' final='true' static='true' value='&quot;wifi_watchdog_watch_list&quot;' type='java.lang.String'/><field api_added='4' name='ACCESSIBILITY_ENABLED' final='true' static='true' value='&quot;accessibility_enabled&quot;' type='java.lang.String'/><field api_added='4' name='ENABLED_ACCESSIBILITY_SERVICES' final='true' static='true' value='&quot;enabled_accessibility_services&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_COUNTRY' final='true' static='true' value='&quot;tts_default_country&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_LANG' final='true' static='true' value='&quot;tts_default_lang&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_PITCH' final='true' static='true' value='&quot;tts_default_pitch&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_RATE' final='true' static='true' value='&quot;tts_default_rate&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_SYNTH' final='true' static='true' value='&quot;tts_default_synth&quot;' type='java.lang.String'/><field api_added='4' name='TTS_DEFAULT_VARIANT' final='true' static='true' value='&quot;tts_default_variant&quot;' type='java.lang.String'/><field api_added='4' name='TTS_USE_DEFAULTS' final='true' static='true' value='&quot;tts_use_defaults&quot;' type='java.lang.String'/><field api_added='8' name='ALLOWED_GEOLOCATION_ORIGINS' final='true' static='true' value='&quot;allowed_geolocation_origins&quot;' type='java.lang.String'/><field api_added='8' name='LOCK_PATTERN_ENABLED' final='true' static='true' value='&quot;lock_pattern_autolock&quot;' type='java.lang.String'/><field api_added='8' name='LOCK_PATTERN_TACTILE_FEEDBACK_ENABLED' final='true' static='true' value='&quot;lock_pattern_tactile_feedback_enabled&quot;' type='java.lang.String'/><field api_added='8' name='LOCK_PATTERN_VISIBLE' final='true' static='true' value='&quot;lock_pattern_visible_pattern&quot;' type='java.lang.String'/><field api_added='8' name='TTS_ENABLED_PLUGINS' final='true' static='true' value='&quot;tts_enabled_plugins&quot;' type='java.lang.String'/><method api_added='3' name='getFloat' static='true' return='float'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='float'/></method><method api_added='3' name='getFloat' static='true' return='float'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method api_added='3' name='getInt' static='true' return='int'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='int'/></method><method api_added='3' name='getInt' static='true' return='int'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method api_added='3' name='getLong' static='true' return='long'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='def' type='long'/></method><method api_added='3' name='getLong' static='true' return='long'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><exception name='Settings.SettingNotFoundException' type='android.provider.Settings.SettingNotFoundException'/></method><method api_added='3' name='getString' synchronized='true' static='true' return='java.lang.String'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/></method><method api_added='3' name='getUriFor' static='true' return='android.net.Uri'><parameter name='name' type='java.lang.String'/></method><method api_added='3' name='putFloat' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='float'/></method><method api_added='3' name='putInt' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method api_added='3' name='putLong' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method><method api_added='3' name='putString' static='true' return='boolean'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method api_added='8' name='isLocationProviderEnabled' final='true' static='true' return='boolean'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='provider' type='java.lang.String'/></method><method api_added='8' name='setLocationProviderEnabled' final='true' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='provider' type='java.lang.String'/><parameter name='enabled' type='boolean'/></method></class><class api_added='3' name='UserDictionary' extends='java.lang.Object'><constructor api_added='3' name='UserDictionary' type='android.provider.UserDictionary'/><field api_added='3' name='AUTHORITY' final='true' static='true' value='&quot;user_dictionary&quot;' type='java.lang.String'/><field api_added='3' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/></class><class api_added='3' name='UserDictionary.Words' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor api_added='3' name='UserDictionary.Words' type='android.provider.UserDictionary.Words'/><field api_added='3' name='APP_ID' final='true' static='true' value='&quot;appid&quot;' type='java.lang.String'/><field api_added='3' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/vnd.google.userword&quot;' type='java.lang.String'/><field api_added='3' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/vnd.google.userword&quot;' type='java.lang.String'/><field api_added='3' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='3' name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;frequency DESC&quot;' type='java.lang.String'/><field api_added='3' name='FREQUENCY' final='true' static='true' value='&quot;frequency&quot;' type='java.lang.String'/><field api_added='3' name='LOCALE' final='true' static='true' value='&quot;locale&quot;' type='java.lang.String'/><field api_added='3' name='LOCALE_TYPE_ALL' final='true' static='true' value='0' type='int'/><field api_added='3' name='LOCALE_TYPE_CURRENT' final='true' static='true' value='1' type='int'/><field api_added='3' name='WORD' final='true' static='true' value='&quot;word&quot;' type='java.lang.String'/><field api_added='3' name='_ID' final='true' static='true' value='&quot;_id&quot;' type='java.lang.String'/><method api_added='3' name='addWord' static='true'><parameter name='context' type='android.content.Context'/><parameter name='word' type='java.lang.String'/><parameter name='frequency' type='int'/><parameter name='localeType' type='int'/></method></class><class api_added='5' name='ContactsContract' final='true' extends='java.lang.Object'><constructor api_added='5' name='ContactsContract' type='android.provider.ContactsContract'/><field api_added='5' name='AUTHORITY' final='true' static='true' value='&quot;com.android.contacts&quot;' type='java.lang.String'/><field api_added='5' name='AUTHORITY_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CALLER_IS_SYNCADAPTER' final='true' static='true' value='&quot;caller_is_syncadapter&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.AggregationExceptions' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/aggregation_exception&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/aggregation_exception&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='RAW_CONTACT_ID1' final='true' static='true' value='&quot;raw_contact_id1&quot;' type='java.lang.String'/><field api_added='5' name='RAW_CONTACT_ID2' final='true' static='true' value='&quot;raw_contact_id2&quot;' type='java.lang.String'/><field api_added='5' name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_AUTOMATIC' final='true' static='true' value='0' type='int'/><field api_added='5' name='TYPE_KEEP_SEPARATE' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_KEEP_TOGETHER' final='true' static='true' value='1' type='int'/></class><class api_added='5' name='ContactsContract.CommonDataKinds' final='true' extends='java.lang.Object' static='true'/><class api_added='5' name='ContactsContract.CommonDataKinds.Email' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/email_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_LOOKUP_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/email_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='DISPLAY_NAME' final='true' static='true' value='&quot;data4&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_HOME' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_MOBILE' final='true' static='true' value='4' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='2' type='int'/><method api_added='5' name='getTypeLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getTypeLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.Event' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/contact_event&quot;' type='java.lang.String'/><field api_added='5' name='START_DATE' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_ANNIVERSARY' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_BIRTHDAY' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='2' type='int'/><method api_added='5' name='getTypeResource' static='true' return='int'><parameter name='type' type='java.lang.Integer'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.GroupMembership' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/group_membership&quot;' type='java.lang.String'/><field api_added='5' name='GROUP_ROW_ID' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='GROUP_SOURCE_ID' final='true' static='true' value='&quot;group_sourceid&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.Im' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/im&quot;' type='java.lang.String'/><field api_added='5' name='CUSTOM_PROTOCOL' final='true' static='true' value='&quot;data6&quot;' type='java.lang.String'/><field api_added='5' name='PROTOCOL' final='true' static='true' value='&quot;data5&quot;' type='java.lang.String'/><field api_added='5' name='PROTOCOL_AIM' final='true' static='true' value='0' type='int'/><field api_added='5' name='PROTOCOL_CUSTOM' final='true' static='true' value='-1' type='int'/><field api_added='5' name='PROTOCOL_GOOGLE_TALK' final='true' static='true' value='5' type='int'/><field api_added='5' name='PROTOCOL_ICQ' final='true' static='true' value='6' type='int'/><field api_added='5' name='PROTOCOL_JABBER' final='true' static='true' value='7' type='int'/><field api_added='5' name='PROTOCOL_MSN' final='true' static='true' value='1' type='int'/><field api_added='5' name='PROTOCOL_NETMEETING' final='true' static='true' value='8' type='int'/><field api_added='5' name='PROTOCOL_QQ' final='true' static='true' value='4' type='int'/><field api_added='5' name='PROTOCOL_SKYPE' final='true' static='true' value='3' type='int'/><field api_added='5' name='PROTOCOL_YAHOO' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_HOME' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='2' type='int'/><method api_added='5' name='getProtocolLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getProtocolLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method><method api_added='5' name='getTypeLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getTypeLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.Nickname' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/nickname&quot;' type='java.lang.String'/><field api_added='5' name='NAME' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_DEFAULT' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_INITIALS' final='true' static='true' value='5' type='int'/><field api_added='5' name='TYPE_MAINDEN_NAME' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_OTHER_NAME' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_SHORT_NAME' final='true' static='true' value='4' type='int'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.Note' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/note&quot;' type='java.lang.String'/><field api_added='5' name='NOTE' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.Organization' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='COMPANY' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/organization&quot;' type='java.lang.String'/><field api_added='5' name='DEPARTMENT' final='true' static='true' value='&quot;data5&quot;' type='java.lang.String'/><field api_added='5' name='JOB_DESCRIPTION' final='true' static='true' value='&quot;data6&quot;' type='java.lang.String'/><field api_added='5' name='OFFICE_LOCATION' final='true' static='true' value='&quot;data9&quot;' type='java.lang.String'/><field api_added='5' name='PHONETIC_NAME' final='true' static='true' value='&quot;data8&quot;' type='java.lang.String'/><field api_added='5' name='SYMBOL' final='true' static='true' value='&quot;data7&quot;' type='java.lang.String'/><field api_added='5' name='TITLE' final='true' static='true' value='&quot;data4&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='1' type='int'/><method api_added='5' name='getTypeLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getTypeLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.Phone' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/phone_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/phone_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='NUMBER' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_ASSISTANT' final='true' static='true' value='19' type='int'/><field api_added='5' name='TYPE_CALLBACK' final='true' static='true' value='8' type='int'/><field api_added='5' name='TYPE_CAR' final='true' static='true' value='9' type='int'/><field api_added='5' name='TYPE_COMPANY_MAIN' final='true' static='true' value='10' type='int'/><field api_added='5' name='TYPE_FAX_HOME' final='true' static='true' value='5' type='int'/><field api_added='5' name='TYPE_FAX_WORK' final='true' static='true' value='4' type='int'/><field api_added='5' name='TYPE_HOME' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_ISDN' final='true' static='true' value='11' type='int'/><field api_added='5' name='TYPE_MAIN' final='true' static='true' value='12' type='int'/><field api_added='5' name='TYPE_MMS' final='true' static='true' value='20' type='int'/><field api_added='5' name='TYPE_MOBILE' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='7' type='int'/><field api_added='5' name='TYPE_OTHER_FAX' final='true' static='true' value='13' type='int'/><field api_added='5' name='TYPE_PAGER' final='true' static='true' value='6' type='int'/><field api_added='5' name='TYPE_RADIO' final='true' static='true' value='14' type='int'/><field api_added='5' name='TYPE_TELEX' final='true' static='true' value='15' type='int'/><field api_added='5' name='TYPE_TTY_TDD' final='true' static='true' value='16' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_WORK_MOBILE' final='true' static='true' value='17' type='int'/><field api_added='5' name='TYPE_WORK_PAGER' final='true' static='true' value='18' type='int'/><method api_added='5' name='getTypeLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getTypeLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.Photo' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/photo&quot;' type='java.lang.String'/><field api_added='5' name='PHOTO' final='true' static='true' value='&quot;data15&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.Relation' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/relation&quot;' type='java.lang.String'/><field api_added='5' name='NAME' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_ASSISTANT' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_BROTHER' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_CHILD' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_DOMESTIC_PARTNER' final='true' static='true' value='4' type='int'/><field api_added='5' name='TYPE_FATHER' final='true' static='true' value='5' type='int'/><field api_added='5' name='TYPE_FRIEND' final='true' static='true' value='6' type='int'/><field api_added='5' name='TYPE_MANAGER' final='true' static='true' value='7' type='int'/><field api_added='5' name='TYPE_MOTHER' final='true' static='true' value='8' type='int'/><field api_added='5' name='TYPE_PARENT' final='true' static='true' value='9' type='int'/><field api_added='5' name='TYPE_PARTNER' final='true' static='true' value='10' type='int'/><field api_added='5' name='TYPE_REFERRED_BY' final='true' static='true' value='11' type='int'/><field api_added='5' name='TYPE_RELATIVE' final='true' static='true' value='12' type='int'/><field api_added='5' name='TYPE_SISTER' final='true' static='true' value='13' type='int'/><field api_added='5' name='TYPE_SPOUSE' final='true' static='true' value='14' type='int'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.StructuredName' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/name&quot;' type='java.lang.String'/><field api_added='5' name='DISPLAY_NAME' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='FAMILY_NAME' final='true' static='true' value='&quot;data3&quot;' type='java.lang.String'/><field api_added='5' name='GIVEN_NAME' final='true' static='true' value='&quot;data2&quot;' type='java.lang.String'/><field api_added='5' name='MIDDLE_NAME' final='true' static='true' value='&quot;data5&quot;' type='java.lang.String'/><field api_added='5' name='PHONETIC_FAMILY_NAME' final='true' static='true' value='&quot;data9&quot;' type='java.lang.String'/><field api_added='5' name='PHONETIC_GIVEN_NAME' final='true' static='true' value='&quot;data7&quot;' type='java.lang.String'/><field api_added='5' name='PHONETIC_MIDDLE_NAME' final='true' static='true' value='&quot;data8&quot;' type='java.lang.String'/><field api_added='5' name='PREFIX' final='true' static='true' value='&quot;data4&quot;' type='java.lang.String'/><field api_added='5' name='SUFFIX' final='true' static='true' value='&quot;data6&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.CommonDataKinds.StructuredPostal' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CITY' final='true' static='true' value='&quot;data7&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/postal-address_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/postal-address_v2&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='COUNTRY' final='true' static='true' value='&quot;data10&quot;' type='java.lang.String'/><field api_added='5' name='FORMATTED_ADDRESS' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='NEIGHBORHOOD' final='true' static='true' value='&quot;data6&quot;' type='java.lang.String'/><field api_added='5' name='POBOX' final='true' static='true' value='&quot;data5&quot;' type='java.lang.String'/><field api_added='5' name='POSTCODE' final='true' static='true' value='&quot;data9&quot;' type='java.lang.String'/><field api_added='5' name='REGION' final='true' static='true' value='&quot;data8&quot;' type='java.lang.String'/><field api_added='5' name='STREET' final='true' static='true' value='&quot;data4&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_HOME' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='2' type='int'/><method api_added='5' name='getTypeLabel' final='true' static='true' return='java.lang.CharSequence'><parameter name='res' type='android.content.res.Resources'/><parameter name='type' type='int'/><parameter name='label' type='java.lang.CharSequence'/></method><method api_added='5' name='getTypeLabelResource' final='true' static='true' return='int'><parameter name='type' type='int'/></method></class><class api_added='5' name='ContactsContract.CommonDataKinds.Website' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.CommonDataKinds.CommonColumns'/><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/website&quot;' type='java.lang.String'/><field api_added='5' name='TYPE_BLOG' final='true' static='true' value='2' type='int'/><field api_added='5' name='TYPE_FTP' final='true' static='true' value='6' type='int'/><field api_added='5' name='TYPE_HOME' final='true' static='true' value='4' type='int'/><field api_added='5' name='TYPE_HOMEPAGE' final='true' static='true' value='1' type='int'/><field api_added='5' name='TYPE_OTHER' final='true' static='true' value='7' type='int'/><field api_added='5' name='TYPE_PROFILE' final='true' static='true' value='3' type='int'/><field api_added='5' name='TYPE_WORK' final='true' static='true' value='5' type='int'/><field api_added='5' name='URL' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Contacts' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.ContactOptionsColumns'/><implements name='android.provider.ContactsContract.ContactStatusColumns'/><implements name='android.provider.ContactsContract.ContactsColumns'/><field api_added='5' name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_GROUP_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/contact&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_LOOKUP_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_STREQUENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_STREQUENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/contact&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_VCARD_TYPE' final='true' static='true' value='&quot;text/x-vcard&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_VCARD_URI' final='true' static='true' type='android.net.Uri'/><method api_added='5' name='getLookupUri' static='true' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='contactUri' type='android.net.Uri'/></method><method api_added='5' name='getLookupUri' static='true' return='android.net.Uri'><parameter name='contactId' type='long'/><parameter name='lookupKey' type='java.lang.String'/></method><method api_added='5' name='lookupContact' static='true' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='lookupUri' type='android.net.Uri'/></method><method api_added='5' name='markAsContacted' static='true'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='contactId' type='long'/></method><method api_added='5' name='openContactPhotoInputStream' static='true' return='java.io.InputStream'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='contactUri' type='android.net.Uri'/></method></class><class api_added='5' name='ContactsContract.Contacts.AggregationSuggestions' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.ContactsColumns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;suggestions&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Contacts.Data' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;data&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Contacts.Photo' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;photo&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Data' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.DataColumnsWithJoins'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/data&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method api_added='5' name='getContactLookupUri' static='true' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='dataUri' type='android.net.Uri'/></method></class><class api_added='5' name='ContactsContract.Groups' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.GroupsColumns'/><implements name='android.provider.ContactsContract.SyncColumns'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/group&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_SUMMARY_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/group&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method api_added='8' name='newEntityIterator' static='true' return='android.content.EntityIterator'><parameter name='cursor' type='android.database.Cursor'/></method></class><class api_added='5' name='ContactsContract.Intents' final='true' extends='java.lang.Object' static='true'><constructor api_added='5' name='ContactsContract.Intents' type='android.provider.ContactsContract.Intents'/><field api_added='5' name='ATTACH_IMAGE' final='true' static='true' value='&quot;com.android.contacts.action.ATTACH_IMAGE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_CREATE_DESCRIPTION' final='true' static='true' value='&quot;com.android.contacts.action.CREATE_DESCRIPTION&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_FORCE_CREATE' final='true' static='true' value='&quot;com.android.contacts.action.FORCE_CREATE&quot;' type='java.lang.String'/><field api_added='5' name='SEARCH_SUGGESTION_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_CLICKED&quot;' type='java.lang.String'/><field api_added='5' name='SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED&quot;' type='java.lang.String'/><field api_added='5' name='SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED' final='true' static='true' value='&quot;android.provider.Contacts.SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED&quot;' type='java.lang.String'/><field api_added='5' name='SHOW_OR_CREATE_CONTACT' final='true' static='true' value='&quot;com.android.contacts.action.SHOW_OR_CREATE_CONTACT&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Intents.Insert' final='true' extends='java.lang.Object' static='true'><constructor api_added='5' name='ContactsContract.Intents.Insert' type='android.provider.ContactsContract.Intents.Insert'/><field api_added='5' name='ACTION' final='true' static='true' value='&quot;android.intent.action.INSERT&quot;' type='java.lang.String'/><field api_added='5' name='COMPANY' final='true' static='true' value='&quot;company&quot;' type='java.lang.String'/><field api_added='5' name='EMAIL' final='true' static='true' value='&quot;email&quot;' type='java.lang.String'/><field api_added='5' name='EMAIL_ISPRIMARY' final='true' static='true' value='&quot;email_isprimary&quot;' type='java.lang.String'/><field api_added='5' name='EMAIL_TYPE' final='true' static='true' value='&quot;email_type&quot;' type='java.lang.String'/><field api_added='5' name='FULL_MODE' final='true' static='true' value='&quot;full_mode&quot;' type='java.lang.String'/><field api_added='5' name='IM_HANDLE' final='true' static='true' value='&quot;im_handle&quot;' type='java.lang.String'/><field api_added='5' name='IM_ISPRIMARY' final='true' static='true' value='&quot;im_isprimary&quot;' type='java.lang.String'/><field api_added='5' name='IM_PROTOCOL' final='true' static='true' value='&quot;im_protocol&quot;' type='java.lang.String'/><field api_added='5' name='JOB_TITLE' final='true' static='true' value='&quot;job_title&quot;' type='java.lang.String'/><field api_added='5' name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/><field api_added='5' name='NOTES' final='true' static='true' value='&quot;notes&quot;' type='java.lang.String'/><field api_added='5' name='PHONE' final='true' static='true' value='&quot;phone&quot;' type='java.lang.String'/><field api_added='5' name='PHONETIC_NAME' final='true' static='true' value='&quot;phonetic_name&quot;' type='java.lang.String'/><field api_added='5' name='PHONE_ISPRIMARY' final='true' static='true' value='&quot;phone_isprimary&quot;' type='java.lang.String'/><field api_added='5' name='PHONE_TYPE' final='true' static='true' value='&quot;phone_type&quot;' type='java.lang.String'/><field api_added='5' name='POSTAL' final='true' static='true' value='&quot;postal&quot;' type='java.lang.String'/><field api_added='5' name='POSTAL_ISPRIMARY' final='true' static='true' value='&quot;postal_isprimary&quot;' type='java.lang.String'/><field api_added='5' name='POSTAL_TYPE' final='true' static='true' value='&quot;postal_type&quot;' type='java.lang.String'/><field api_added='5' name='SECONDARY_EMAIL' final='true' static='true' value='&quot;secondary_email&quot;' type='java.lang.String'/><field api_added='5' name='SECONDARY_EMAIL_TYPE' final='true' static='true' value='&quot;secondary_email_type&quot;' type='java.lang.String'/><field api_added='5' name='SECONDARY_PHONE' final='true' static='true' value='&quot;secondary_phone&quot;' type='java.lang.String'/><field api_added='5' name='SECONDARY_PHONE_TYPE' final='true' static='true' value='&quot;secondary_phone_type&quot;' type='java.lang.String'/><field api_added='5' name='TERTIARY_EMAIL' final='true' static='true' value='&quot;tertiary_email&quot;' type='java.lang.String'/><field api_added='5' name='TERTIARY_EMAIL_TYPE' final='true' static='true' value='&quot;tertiary_email_type&quot;' type='java.lang.String'/><field api_added='5' name='TERTIARY_PHONE' final='true' static='true' value='&quot;tertiary_phone&quot;' type='java.lang.String'/><field api_added='5' name='TERTIARY_PHONE_TYPE' final='true' static='true' value='&quot;tertiary_phone_type&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.PhoneLookup' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.ContactOptionsColumns'/><implements name='android.provider.ContactsContract.ContactsColumns'/><implements name='android.provider.ContactsContract.PhoneLookupColumns'/><field api_added='5' name='CONTENT_FILTER_URI' final='true' static='true' type='android.net.Uri'/></class><class api_added='5' name='ContactsContract.Presence' final='true' extends='android.provider.ContactsContract.StatusUpdates' static='true' deprecated='5'><constructor api_added='5' name='ContactsContract.Presence' type='android.provider.ContactsContract.Presence'/></class><class api_added='5' name='ContactsContract.QuickContact' final='true' extends='java.lang.Object' static='true'><constructor api_added='5' name='ContactsContract.QuickContact' type='android.provider.ContactsContract.QuickContact'/><field api_added='5' name='MODE_LARGE' final='true' static='true' value='3' type='int'/><field api_added='5' name='MODE_MEDIUM' final='true' static='true' value='2' type='int'/><field api_added='5' name='MODE_SMALL' final='true' static='true' value='1' type='int'/><method api_added='5' name='showQuickContact' static='true'><parameter name='context' type='android.content.Context'/><parameter name='target' type='android.view.View'/><parameter name='lookupUri' type='android.net.Uri'/><parameter name='mode' type='int'/><parameter name='excludeMimes' type='java.lang.String[]'/></method><method api_added='5' name='showQuickContact' static='true'><parameter name='context' type='android.content.Context'/><parameter name='target' type='android.graphics.Rect'/><parameter name='lookupUri' type='android.net.Uri'/><parameter name='mode' type='int'/><parameter name='excludeMimes' type='java.lang.String[]'/></method></class><class api_added='5' name='ContactsContract.RawContacts' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.ContactOptionsColumns'/><implements name='android.provider.ContactsContract.RawContactsColumns'/><implements name='android.provider.ContactsContract.SyncColumns'/><field api_added='5' name='AGGREGATION_MODE_DEFAULT' final='true' static='true' value='0' type='int'/><field api_added='5' name='AGGREGATION_MODE_DISABLED' final='true' static='true' value='3' type='int'/><field api_added='5' name='AGGREGATION_MODE_IMMEDIATE' final='true' static='true' value='1' type='int'/><field api_added='5' name='AGGREGATION_MODE_SUSPENDED' final='true' static='true' value='2' type='int'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/raw_contact&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/raw_contact&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method api_added='5' name='getContactLookupUri' static='true' return='android.net.Uri'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='rawContactUri' type='android.net.Uri'/></method><method api_added='8' name='newEntityIterator' static='true' return='android.content.EntityIterator'><parameter name='cursor' type='android.database.Cursor'/></method></class><class api_added='5' name='ContactsContract.RawContacts.Data' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;data&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.RawContacts.Entity' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;entity&quot;' type='java.lang.String'/><field api_added='5' name='DATA_ID' final='true' static='true' value='&quot;data_id&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.RawContactsEntity' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><implements name='android.provider.ContactsContract.RawContactsColumns'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/raw_contact_entity&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='DATA_ID' final='true' static='true' value='&quot;data_id&quot;' type='java.lang.String'/></class><class api_added='5' name='ContactsContract.Settings' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.SettingsColumns'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/setting&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/setting&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/></class><class api_added='5' name='ContactsContract.StatusUpdates' extends='java.lang.Object' static='true'><implements name='android.provider.ContactsContract.PresenceColumns'/><implements name='android.provider.ContactsContract.StatusColumns'/><field api_added='5' name='CONTENT_ITEM_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.item/status-update&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_TYPE' final='true' static='true' value='&quot;vnd.android.cursor.dir/status-update&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method api_added='5' name='getPresenceIconResourceId' final='true' static='true' return='int'><parameter name='status' type='int'/></method><method api_added='5' name='getPresencePrecedence' final='true' static='true' return='int'><parameter name='status' type='int'/></method></class><class api_added='5' name='ContactsContract.SyncState' final='true' extends='java.lang.Object' static='true'><implements name='android.provider.SyncStateContract.Columns'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;syncstate&quot;' type='java.lang.String'/><field api_added='5' name='CONTENT_URI' final='true' static='true' type='android.net.Uri'/><method api_added='5' name='get' static='true' return='byte[]'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='account' type='android.accounts.Account'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='getWithUri' static='true' return='android.util.Pair&lt;android.net.Uri, byte[]&gt;'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='account' type='android.accounts.Account'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='newSetOperation' static='true' return='android.content.ContentProviderOperation'><parameter name='account' type='android.accounts.Account'/><parameter name='data' type='byte[]'/></method><method api_added='5' name='set' static='true'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='account' type='android.accounts.Account'/><parameter name='data' type='byte[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method></class><class api_added='5' name='MediaStore.Video.Thumbnails' extends='java.lang.Object' static='true'><implements name='android.provider.BaseColumns'/><constructor api_added='5' name='MediaStore.Video.Thumbnails' type='android.provider.MediaStore.Video.Thumbnails'/><field api_added='5' name='DATA' final='true' static='true' value='&quot;_data&quot;' type='java.lang.String'/><field api_added='5' name='DEFAULT_SORT_ORDER' final='true' static='true' value='&quot;video_id ASC&quot;' type='java.lang.String'/><field api_added='5' name='EXTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='FULL_SCREEN_KIND' final='true' static='true' value='2' type='int'/><field api_added='5' name='HEIGHT' final='true' static='true' value='&quot;height&quot;' type='java.lang.String'/><field api_added='5' name='INTERNAL_CONTENT_URI' final='true' static='true' type='android.net.Uri'/><field api_added='5' name='KIND' final='true' static='true' value='&quot;kind&quot;' type='java.lang.String'/><field api_added='5' name='MICRO_KIND' final='true' static='true' value='3' type='int'/><field api_added='5' name='MINI_KIND' final='true' static='true' value='1' type='int'/><field api_added='5' name='VIDEO_ID' final='true' static='true' value='&quot;video_id&quot;' type='java.lang.String'/><field api_added='5' name='WIDTH' final='true' static='true' value='&quot;width&quot;' type='java.lang.String'/><method api_added='5' name='cancelThumbnailRequest' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/></method><method api_added='5' name='getContentUri' static='true' return='android.net.Uri'><parameter name='volumeName' type='java.lang.String'/></method><method api_added='5' name='getThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='kind' type='int'/><parameter name='options' type='android.graphics.BitmapFactory.Options'/></method><method api_added='8' name='cancelThumbnailRequest' static='true'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='groupId' type='long'/></method><method api_added='8' name='getThumbnail' static='true' return='android.graphics.Bitmap'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='origId' type='long'/><parameter name='groupId' type='long'/><parameter name='kind' type='int'/><parameter name='options' type='android.graphics.BitmapFactory.Options'/></method></class><class api_added='5' name='SyncStateContract' extends='java.lang.Object'><constructor api_added='5' name='SyncStateContract' type='android.provider.SyncStateContract'/></class><class api_added='5' name='SyncStateContract.Constants' extends='java.lang.Object' static='true'><implements name='android.provider.SyncStateContract.Columns'/><constructor api_added='5' name='SyncStateContract.Constants' type='android.provider.SyncStateContract.Constants'/><field api_added='5' name='CONTENT_DIRECTORY' final='true' static='true' value='&quot;syncstate&quot;' type='java.lang.String'/></class><class api_added='5' name='SyncStateContract.Helpers' final='true' extends='java.lang.Object' static='true'><constructor api_added='5' name='SyncStateContract.Helpers' type='android.provider.SyncStateContract.Helpers'/><method api_added='5' name='get' static='true' return='byte[]'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='android.accounts.Account'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='getWithUri' static='true' return='android.util.Pair&lt;android.net.Uri, byte[]&gt;'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='android.accounts.Account'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='insert' static='true' return='android.net.Uri'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='android.accounts.Account'/><parameter name='data' type='byte[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='newSetOperation' static='true' return='android.content.ContentProviderOperation'><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='android.accounts.Account'/><parameter name='data' type='byte[]'/></method><method api_added='5' name='newUpdateOperation' static='true' return='android.content.ContentProviderOperation'><parameter name='uri' type='android.net.Uri'/><parameter name='data' type='byte[]'/></method><method api_added='5' name='set' static='true'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='android.accounts.Account'/><parameter name='data' type='byte[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='5' name='update' static='true'><parameter name='provider' type='android.content.ContentProviderClient'/><parameter name='uri' type='android.net.Uri'/><parameter name='data' type='byte[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method></class><interface name='BaseColumns' abstract='true'><field name='_COUNT' final='true' static='true' value='&quot;_count&quot;' type='java.lang.String'/><field name='_ID' final='true' static='true' value='&quot;_id&quot;' type='java.lang.String'/></interface><interface name='Contacts.ContactMethodsColumns' abstract='true' static='true' deprecated='5'><field name='AUX_DATA' final='true' static='true' value='&quot;aux_data&quot;' type='java.lang.String' deprecated='5'/><field name='DATA' final='true' static='true' value='&quot;data&quot;' type='java.lang.String' deprecated='5'/><field name='ISPRIMARY' final='true' static='true' value='&quot;isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='KIND' final='true' static='true' value='&quot;kind&quot;' type='java.lang.String' deprecated='5'/><field name='LABEL' final='true' static='true' value='&quot;label&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE_CUSTOM' final='true' static='true' value='0' type='int' deprecated='5'/><field name='TYPE_HOME' final='true' static='true' value='1' type='int' deprecated='5'/><field name='TYPE_OTHER' final='true' static='true' value='3' type='int' deprecated='5'/><field name='TYPE_WORK' final='true' static='true' value='2' type='int' deprecated='5'/></interface><interface name='Contacts.ExtensionsColumns' abstract='true' static='true' deprecated='5'><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String' deprecated='5'/><field name='VALUE' final='true' static='true' value='&quot;value&quot;' type='java.lang.String' deprecated='5'/></interface><interface name='Contacts.GroupsColumns' abstract='true' static='true' deprecated='5'><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String' deprecated='5'/><field name='NOTES' final='true' static='true' value='&quot;notes&quot;' type='java.lang.String' deprecated='5'/><field name='SHOULD_SYNC' final='true' static='true' value='&quot;should_sync&quot;' type='java.lang.String' deprecated='5'/><field name='SYSTEM_ID' final='true' static='true' value='&quot;system_id&quot;' type='java.lang.String' deprecated='5'/></interface><interface name='Contacts.OrganizationColumns' abstract='true' static='true' deprecated='5'><field name='COMPANY' final='true' static='true' value='&quot;company&quot;' type='java.lang.String' deprecated='5'/><field name='ISPRIMARY' final='true' static='true' value='&quot;isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='LABEL' final='true' static='true' value='&quot;label&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/><field name='TITLE' final='true' static='true' value='&quot;title&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE_CUSTOM' final='true' static='true' value='0' type='int' deprecated='5'/><field name='TYPE_OTHER' final='true' static='true' value='2' type='int' deprecated='5'/><field name='TYPE_WORK' final='true' static='true' value='1' type='int' deprecated='5'/></interface><interface name='Contacts.PeopleColumns' abstract='true' static='true' deprecated='5'><field name='CUSTOM_RINGTONE' final='true' static='true' value='&quot;custom_ringtone&quot;' type='java.lang.String' deprecated='5'/><field name='DISPLAY_NAME' final='true' static='true' value='&quot;display_name&quot;' type='java.lang.String' deprecated='5'/><field name='LAST_TIME_CONTACTED' final='true' static='true' value='&quot;last_time_contacted&quot;' type='java.lang.String' deprecated='5'/><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String' deprecated='5'/><field name='NOTES' final='true' static='true' value='&quot;notes&quot;' type='java.lang.String' deprecated='5'/><field name='PHOTO_VERSION' final='true' static='true' value='&quot;photo_version&quot;' type='java.lang.String' deprecated='5'/><field name='SEND_TO_VOICEMAIL' final='true' static='true' value='&quot;send_to_voicemail&quot;' type='java.lang.String' deprecated='5'/><field name='STARRED' final='true' static='true' value='&quot;starred&quot;' type='java.lang.String' deprecated='5'/><field name='TIMES_CONTACTED' final='true' static='true' value='&quot;times_contacted&quot;' type='java.lang.String' deprecated='5'/><field api_added='3' name='PHONETIC_NAME' final='true' static='true' value='&quot;phonetic_name&quot;' type='java.lang.String' deprecated='5'/></interface><interface name='Contacts.PhonesColumns' abstract='true' static='true' deprecated='5'><field name='ISPRIMARY' final='true' static='true' value='&quot;isprimary&quot;' type='java.lang.String' deprecated='5'/><field name='LABEL' final='true' static='true' value='&quot;label&quot;' type='java.lang.String' deprecated='5'/><field name='NUMBER' final='true' static='true' value='&quot;number&quot;' type='java.lang.String' deprecated='5'/><field name='NUMBER_KEY' final='true' static='true' value='&quot;number_key&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String' deprecated='5'/><field name='TYPE_CUSTOM' final='true' static='true' value='0' type='int' deprecated='5'/><field name='TYPE_FAX_HOME' final='true' static='true' value='5' type='int' deprecated='5'/><field name='TYPE_FAX_WORK' final='true' static='true' value='4' type='int' deprecated='5'/><field name='TYPE_HOME' final='true' static='true' value='1' type='int' deprecated='5'/><field name='TYPE_MOBILE' final='true' static='true' value='2' type='int' deprecated='5'/><field name='TYPE_OTHER' final='true' static='true' value='7' type='int' deprecated='5'/><field name='TYPE_PAGER' final='true' static='true' value='6' type='int' deprecated='5'/><field name='TYPE_WORK' final='true' static='true' value='3' type='int' deprecated='5'/></interface><interface name='Contacts.PhotosColumns' abstract='true' static='true' deprecated='5'><field name='DATA' final='true' static='true' value='&quot;data&quot;' type='java.lang.String' deprecated='5'/><field name='DOWNLOAD_REQUIRED' final='true' static='true' value='&quot;download_required&quot;' type='java.lang.String' deprecated='5'/><field name='EXISTS_ON_SERVER' final='true' static='true' value='&quot;exists_on_server&quot;' type='java.lang.String' deprecated='5'/><field name='LOCAL_VERSION' final='true' static='true' value='&quot;local_version&quot;' type='java.lang.String' deprecated='5'/><field name='PERSON_ID' final='true' static='true' value='&quot;person&quot;' type='java.lang.String' deprecated='5'/><field name='SYNC_ERROR' final='true' static='true' value='&quot;sync_error&quot;' type='java.lang.String' deprecated='5'/></interface><interface name='Contacts.PresenceColumns' abstract='true' static='true' deprecated='5'><field name='IM_ACCOUNT' final='true' static='true' value='&quot;im_account&quot;' type='java.lang.String' deprecated='5'/><field name='IM_HANDLE' final='true' static='true' value='&quot;im_handle&quot;' type='java.lang.String' deprecated='5'/><field name='IM_PROTOCOL' final='true' static='true' value='&quot;im_protocol&quot;' type='java.lang.String' deprecated='5'/><field api_added='8' name='AVAILABLE' final='true' static='true' value='5' type='int'/><field api_added='8' name='AWAY' final='true' static='true' value='2' type='int'/><field api_added='8' name='DO_NOT_DISTURB' final='true' static='true' value='4' type='int'/><field api_added='8' name='IDLE' final='true' static='true' value='3' type='int'/><field api_added='8' name='INVISIBLE' final='true' static='true' value='1' type='int'/><field api_added='8' name='OFFLINE' final='true' static='true' value='0' type='int'/><field api_added='8' name='PRESENCE_CUSTOM_STATUS' final='true' static='true' value='&quot;status&quot;' type='java.lang.String'/><field api_added='8' name='PRESENCE_STATUS' final='true' static='true' value='&quot;mode&quot;' type='java.lang.String'/><field api_added='8' name='PRIORITY' final='true' static='true' value='&quot;priority&quot;' type='java.lang.String'/></interface><interface name='Contacts.SettingsColumns' abstract='true' static='true' deprecated='5'><field name='KEY' final='true' static='true' value='&quot;key&quot;' type='java.lang.String' deprecated='5'/><field name='VALUE' final='true' static='true' value='&quot;value&quot;' type='java.lang.String' deprecated='5'/><field name='_SYNC_ACCOUNT' final='true' static='true' value='&quot;_sync_account&quot;' type='java.lang.String' deprecated='5'/><field api_added='5' name='_SYNC_ACCOUNT_TYPE' final='true' static='true' value='&quot;_sync_account_type&quot;' type='java.lang.String' deprecated='5'/></interface><interface name='MediaStore.Audio.AlbumColumns' abstract='true' static='true'><field name='ALBUM' final='true' static='true' value='&quot;album&quot;' type='java.lang.String'/><field name='ALBUM_ART' final='true' static='true' value='&quot;album_art&quot;' type='java.lang.String'/><field name='ALBUM_ID' final='true' static='true' value='&quot;album_id&quot;' type='java.lang.String'/><field name='ALBUM_KEY' final='true' static='true' value='&quot;album_key&quot;' type='java.lang.String'/><field name='ARTIST' final='true' static='true' value='&quot;artist&quot;' type='java.lang.String'/><field name='FIRST_YEAR' final='true' static='true' value='&quot;minyear&quot;' type='java.lang.String'/><field name='LAST_YEAR' final='true' static='true' value='&quot;maxyear&quot;' type='java.lang.String'/><field name='NUMBER_OF_SONGS' final='true' static='true' value='&quot;numsongs&quot;' type='java.lang.String'/><field api_added='3' name='NUMBER_OF_SONGS_FOR_ARTIST' final='true' static='true' value='&quot;numsongs_by_artist&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Audio.ArtistColumns' abstract='true' static='true'><field name='ARTIST' final='true' static='true' value='&quot;artist&quot;' type='java.lang.String'/><field name='ARTIST_KEY' final='true' static='true' value='&quot;artist_key&quot;' type='java.lang.String'/><field name='NUMBER_OF_ALBUMS' final='true' static='true' value='&quot;number_of_albums&quot;' type='java.lang.String'/><field name='NUMBER_OF_TRACKS' final='true' static='true' value='&quot;number_of_tracks&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Audio.AudioColumns' abstract='true' static='true'><implements name='android.provider.MediaStore.MediaColumns'/><field name='ALBUM' final='true' static='true' value='&quot;album&quot;' type='java.lang.String'/><field name='ALBUM_ART' final='true' static='true' value='&quot;album_art&quot;' type='java.lang.String'/><field name='ALBUM_ID' final='true' static='true' value='&quot;album_id&quot;' type='java.lang.String'/><field name='ALBUM_KEY' final='true' static='true' value='&quot;album_key&quot;' type='java.lang.String'/><field name='ARTIST' final='true' static='true' value='&quot;artist&quot;' type='java.lang.String'/><field name='ARTIST_ID' final='true' static='true' value='&quot;artist_id&quot;' type='java.lang.String'/><field name='ARTIST_KEY' final='true' static='true' value='&quot;artist_key&quot;' type='java.lang.String'/><field name='COMPOSER' final='true' static='true' value='&quot;composer&quot;' type='java.lang.String'/><field name='DURATION' final='true' static='true' value='&quot;duration&quot;' type='java.lang.String'/><field name='IS_ALARM' final='true' static='true' value='&quot;is_alarm&quot;' type='java.lang.String'/><field name='IS_MUSIC' final='true' static='true' value='&quot;is_music&quot;' type='java.lang.String'/><field name='IS_NOTIFICATION' final='true' static='true' value='&quot;is_notification&quot;' type='java.lang.String'/><field name='IS_RINGTONE' final='true' static='true' value='&quot;is_ringtone&quot;' type='java.lang.String'/><field name='TITLE_KEY' final='true' static='true' value='&quot;title_key&quot;' type='java.lang.String'/><field name='TRACK' final='true' static='true' value='&quot;track&quot;' type='java.lang.String'/><field name='YEAR' final='true' static='true' value='&quot;year&quot;' type='java.lang.String'/><field api_added='8' name='BOOKMARK' final='true' static='true' value='&quot;bookmark&quot;' type='java.lang.String'/><field api_added='8' name='IS_PODCAST' final='true' static='true' value='&quot;is_podcast&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Audio.GenresColumns' abstract='true' static='true'><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Audio.PlaylistsColumns' abstract='true' static='true'><field name='DATA' final='true' static='true' value='&quot;_data&quot;' type='java.lang.String'/><field name='DATE_ADDED' final='true' static='true' value='&quot;date_added&quot;' type='java.lang.String'/><field name='DATE_MODIFIED' final='true' static='true' value='&quot;date_modified&quot;' type='java.lang.String'/><field name='NAME' final='true' static='true' value='&quot;name&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Images.ImageColumns' abstract='true' static='true'><implements name='android.provider.MediaStore.MediaColumns'/><field name='BUCKET_DISPLAY_NAME' final='true' static='true' value='&quot;bucket_display_name&quot;' type='java.lang.String'/><field name='BUCKET_ID' final='true' static='true' value='&quot;bucket_id&quot;' type='java.lang.String'/><field name='DATE_TAKEN' final='true' static='true' value='&quot;datetaken&quot;' type='java.lang.String'/><field name='DESCRIPTION' final='true' static='true' value='&quot;description&quot;' type='java.lang.String'/><field name='IS_PRIVATE' final='true' static='true' value='&quot;isprivate&quot;' type='java.lang.String'/><field name='LATITUDE' final='true' static='true' value='&quot;latitude&quot;' type='java.lang.String'/><field name='LONGITUDE' final='true' static='true' value='&quot;longitude&quot;' type='java.lang.String'/><field name='MINI_THUMB_MAGIC' final='true' static='true' value='&quot;mini_thumb_magic&quot;' type='java.lang.String'/><field name='ORIENTATION' final='true' static='true' value='&quot;orientation&quot;' type='java.lang.String'/><field name='PICASA_ID' final='true' static='true' value='&quot;picasa_id&quot;' type='java.lang.String'/></interface><interface name='MediaStore.MediaColumns' abstract='true' static='true'><implements name='android.provider.BaseColumns'/><field name='DATA' final='true' static='true' value='&quot;_data&quot;' type='java.lang.String'/><field name='DATE_ADDED' final='true' static='true' value='&quot;date_added&quot;' type='java.lang.String'/><field name='DATE_MODIFIED' final='true' static='true' value='&quot;date_modified&quot;' type='java.lang.String'/><field name='DISPLAY_NAME' final='true' static='true' value='&quot;_display_name&quot;' type='java.lang.String'/><field name='MIME_TYPE' final='true' static='true' value='&quot;mime_type&quot;' type='java.lang.String'/><field name='SIZE' final='true' static='true' value='&quot;_size&quot;' type='java.lang.String'/><field name='TITLE' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/></interface><interface name='MediaStore.Video.VideoColumns' abstract='true' static='true'><implements name='android.provider.MediaStore.MediaColumns'/><field name='ALBUM' final='true' static='true' value='&quot;album&quot;' type='java.lang.String'/><field name='ARTIST' final='true' static='true' value='&quot;artist&quot;' type='java.lang.String'/><field name='CATEGORY' final='true' static='true' value='&quot;category&quot;' type='java.lang.String'/><field name='DATE_TAKEN' final='true' static='true' value='&quot;datetaken&quot;' type='java.lang.String'/><field name='DESCRIPTION' final='true' static='true' value='&quot;description&quot;' type='java.lang.String'/><field name='DURATION' final='true' static='true' value='&quot;duration&quot;' type='java.lang.String'/><field name='IS_PRIVATE' final='true' static='true' value='&quot;isprivate&quot;' type='java.lang.String'/><field name='LANGUAGE' final='true' static='true' value='&quot;language&quot;' type='java.lang.String'/><field name='LATITUDE' final='true' static='true' value='&quot;latitude&quot;' type='java.lang.String'/><field name='LONGITUDE' final='true' static='true' value='&quot;longitude&quot;' type='java.lang.String'/><field name='MINI_THUMB_MAGIC' final='true' static='true' value='&quot;mini_thumb_magic&quot;' type='java.lang.String'/><field name='RESOLUTION' final='true' static='true' value='&quot;resolution&quot;' type='java.lang.String'/><field name='TAGS' final='true' static='true' value='&quot;tags&quot;' type='java.lang.String'/><field api_added='3' name='BOOKMARK' final='true' static='true' value='&quot;bookmark&quot;' type='java.lang.String'/><field api_added='3' name='BUCKET_DISPLAY_NAME' final='true' static='true' value='&quot;bucket_display_name&quot;' type='java.lang.String'/><field api_added='3' name='BUCKET_ID' final='true' static='true' value='&quot;bucket_id&quot;' type='java.lang.String'/></interface><interface name='OpenableColumns' abstract='true'><field name='DISPLAY_NAME' final='true' static='true' value='&quot;_display_name&quot;' type='java.lang.String'/><field name='SIZE' final='true' static='true' value='&quot;_size&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.BaseSyncColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='SYNC1' final='true' static='true' value='&quot;sync1&quot;' type='java.lang.String'/><field api_added='5' name='SYNC2' final='true' static='true' value='&quot;sync2&quot;' type='java.lang.String'/><field api_added='5' name='SYNC3' final='true' static='true' value='&quot;sync3&quot;' type='java.lang.String'/><field api_added='5' name='SYNC4' final='true' static='true' value='&quot;sync4&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.CommonDataKinds.BaseTypes' abstract='true' static='true'><field api_added='5' name='TYPE_CUSTOM' final='true' static='true' value='0' type='int'/></interface><interface api_added='5' name='ContactsContract.CommonDataKinds.CommonColumns' abstract='true' static='true' visibility='protected'><implements name='android.provider.ContactsContract.CommonDataKinds.BaseTypes'/><field api_added='5' name='DATA' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='LABEL' final='true' static='true' value='&quot;data3&quot;' type='java.lang.String'/><field api_added='5' name='TYPE' final='true' static='true' value='&quot;data2&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.ContactOptionsColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='CUSTOM_RINGTONE' final='true' static='true' value='&quot;custom_ringtone&quot;' type='java.lang.String'/><field api_added='5' name='LAST_TIME_CONTACTED' final='true' static='true' value='&quot;last_time_contacted&quot;' type='java.lang.String'/><field api_added='5' name='SEND_TO_VOICEMAIL' final='true' static='true' value='&quot;send_to_voicemail&quot;' type='java.lang.String'/><field api_added='5' name='STARRED' final='true' static='true' value='&quot;starred&quot;' type='java.lang.String'/><field api_added='5' name='TIMES_CONTACTED' final='true' static='true' value='&quot;times_contacted&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.ContactStatusColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='CONTACT_PRESENCE' final='true' static='true' value='&quot;contact_presence&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_STATUS' final='true' static='true' value='&quot;contact_status&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_STATUS_ICON' final='true' static='true' value='&quot;contact_status_icon&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_STATUS_LABEL' final='true' static='true' value='&quot;contact_status_label&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_STATUS_RES_PACKAGE' final='true' static='true' value='&quot;contact_status_res_package&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_STATUS_TIMESTAMP' final='true' static='true' value='&quot;contact_status_ts&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.ContactsColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='DISPLAY_NAME' final='true' static='true' value='&quot;display_name&quot;' type='java.lang.String'/><field api_added='5' name='HAS_PHONE_NUMBER' final='true' static='true' value='&quot;has_phone_number&quot;' type='java.lang.String'/><field api_added='5' name='IN_VISIBLE_GROUP' final='true' static='true' value='&quot;in_visible_group&quot;' type='java.lang.String'/><field api_added='5' name='LOOKUP_KEY' final='true' static='true' value='&quot;lookup&quot;' type='java.lang.String'/><field api_added='5' name='PHOTO_ID' final='true' static='true' value='&quot;photo_id&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.DataColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='DATA1' final='true' static='true' value='&quot;data1&quot;' type='java.lang.String'/><field api_added='5' name='DATA10' final='true' static='true' value='&quot;data10&quot;' type='java.lang.String'/><field api_added='5' name='DATA11' final='true' static='true' value='&quot;data11&quot;' type='java.lang.String'/><field api_added='5' name='DATA12' final='true' static='true' value='&quot;data12&quot;' type='java.lang.String'/><field api_added='5' name='DATA13' final='true' static='true' value='&quot;data13&quot;' type='java.lang.String'/><field api_added='5' name='DATA14' final='true' static='true' value='&quot;data14&quot;' type='java.lang.String'/><field api_added='5' name='DATA15' final='true' static='true' value='&quot;data15&quot;' type='java.lang.String'/><field api_added='5' name='DATA2' final='true' static='true' value='&quot;data2&quot;' type='java.lang.String'/><field api_added='5' name='DATA3' final='true' static='true' value='&quot;data3&quot;' type='java.lang.String'/><field api_added='5' name='DATA4' final='true' static='true' value='&quot;data4&quot;' type='java.lang.String'/><field api_added='5' name='DATA5' final='true' static='true' value='&quot;data5&quot;' type='java.lang.String'/><field api_added='5' name='DATA6' final='true' static='true' value='&quot;data6&quot;' type='java.lang.String'/><field api_added='5' name='DATA7' final='true' static='true' value='&quot;data7&quot;' type='java.lang.String'/><field api_added='5' name='DATA8' final='true' static='true' value='&quot;data8&quot;' type='java.lang.String'/><field api_added='5' name='DATA9' final='true' static='true' value='&quot;data9&quot;' type='java.lang.String'/><field api_added='5' name='DATA_VERSION' final='true' static='true' value='&quot;data_version&quot;' type='java.lang.String'/><field api_added='5' name='IS_PRIMARY' final='true' static='true' value='&quot;is_primary&quot;' type='java.lang.String'/><field api_added='5' name='IS_SUPER_PRIMARY' final='true' static='true' value='&quot;is_super_primary&quot;' type='java.lang.String'/><field api_added='5' name='MIMETYPE' final='true' static='true' value='&quot;mimetype&quot;' type='java.lang.String'/><field api_added='5' name='RAW_CONTACT_ID' final='true' static='true' value='&quot;raw_contact_id&quot;' type='java.lang.String'/><field api_added='5' name='SYNC1' final='true' static='true' value='&quot;data_sync1&quot;' type='java.lang.String'/><field api_added='5' name='SYNC2' final='true' static='true' value='&quot;data_sync2&quot;' type='java.lang.String'/><field api_added='5' name='SYNC3' final='true' static='true' value='&quot;data_sync3&quot;' type='java.lang.String'/><field api_added='5' name='SYNC4' final='true' static='true' value='&quot;data_sync4&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.DataColumnsWithJoins' abstract='true' static='true' visibility='protected'><implements name='android.provider.BaseColumns'/><implements name='android.provider.ContactsContract.ContactOptionsColumns'/><implements name='android.provider.ContactsContract.ContactStatusColumns'/><implements name='android.provider.ContactsContract.ContactsColumns'/><implements name='android.provider.ContactsContract.DataColumns'/><implements name='android.provider.ContactsContract.RawContactsColumns'/><implements name='android.provider.ContactsContract.StatusColumns'/></interface><interface api_added='5' name='ContactsContract.GroupsColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='DELETED' final='true' static='true' value='&quot;deleted&quot;' type='java.lang.String'/><field api_added='5' name='GROUP_VISIBLE' final='true' static='true' value='&quot;group_visible&quot;' type='java.lang.String'/><field api_added='5' name='NOTES' final='true' static='true' value='&quot;notes&quot;' type='java.lang.String'/><field api_added='5' name='SHOULD_SYNC' final='true' static='true' value='&quot;should_sync&quot;' type='java.lang.String'/><field api_added='5' name='SUMMARY_COUNT' final='true' static='true' value='&quot;summ_count&quot;' type='java.lang.String'/><field api_added='5' name='SUMMARY_WITH_PHONES' final='true' static='true' value='&quot;summ_phones&quot;' type='java.lang.String'/><field api_added='5' name='SYSTEM_ID' final='true' static='true' value='&quot;system_id&quot;' type='java.lang.String'/><field api_added='5' name='TITLE' final='true' static='true' value='&quot;title&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.PhoneLookupColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='LABEL' final='true' static='true' value='&quot;label&quot;' type='java.lang.String'/><field api_added='5' name='NUMBER' final='true' static='true' value='&quot;number&quot;' type='java.lang.String'/><field api_added='5' name='TYPE' final='true' static='true' value='&quot;type&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.PresenceColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='CUSTOM_PROTOCOL' final='true' static='true' value='&quot;custom_protocol&quot;' type='java.lang.String'/><field api_added='5' name='DATA_ID' final='true' static='true' value='&quot;presence_data_id&quot;' type='java.lang.String'/><field api_added='5' name='IM_ACCOUNT' final='true' static='true' value='&quot;im_account&quot;' type='java.lang.String'/><field api_added='5' name='IM_HANDLE' final='true' static='true' value='&quot;im_handle&quot;' type='java.lang.String'/><field api_added='5' name='PROTOCOL' final='true' static='true' value='&quot;protocol&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.RawContactsColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='AGGREGATION_MODE' final='true' static='true' value='&quot;aggregation_mode&quot;' type='java.lang.String'/><field api_added='5' name='CONTACT_ID' final='true' static='true' value='&quot;contact_id&quot;' type='java.lang.String'/><field api_added='5' name='DELETED' final='true' static='true' value='&quot;deleted&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.SettingsColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='ACCOUNT_NAME' final='true' static='true' value='&quot;account_name&quot;' type='java.lang.String'/><field api_added='5' name='ACCOUNT_TYPE' final='true' static='true' value='&quot;account_type&quot;' type='java.lang.String'/><field api_added='5' name='ANY_UNSYNCED' final='true' static='true' value='&quot;any_unsynced&quot;' type='java.lang.String'/><field api_added='5' name='SHOULD_SYNC' final='true' static='true' value='&quot;should_sync&quot;' type='java.lang.String'/><field api_added='5' name='UNGROUPED_COUNT' final='true' static='true' value='&quot;summ_count&quot;' type='java.lang.String'/><field api_added='5' name='UNGROUPED_VISIBLE' final='true' static='true' value='&quot;ungrouped_visible&quot;' type='java.lang.String'/><field api_added='5' name='UNGROUPED_WITH_PHONES' final='true' static='true' value='&quot;summ_phones&quot;' type='java.lang.String'/></interface><interface api_added='5' name='ContactsContract.StatusColumns' abstract='true' static='true' visibility='protected'><field api_added='5' name='PRESENCE' final='true' static='true' value='&quot;mode&quot;' type='java.lang.String'/><field api_added='5' name='STATUS' final='true' static='true' value='&quot;status&quot;' type='java.lang.String'/><field api_added='5' name='STATUS_ICON' final='true' static='true' value='&quot;status_icon&quot;' type='java.lang.String'/><field api_added='5' name='STATUS_LABEL' final='true' static='true' value='&quot;status_label&quot;' type='java.lang.String'/><field api_added='5' name='STATUS_RES_PACKAGE' final='true' static='true' value='&quot;status_res_package&quot;' type='java.lang.String'/><field api_added='5' name='STATUS_TIMESTAMP' final='true' static='true' value='&quot;status_ts&quot;' type='java.lang.String'/><field api_added='8' name='AVAILABLE' final='true' static='true' value='5' type='int'/><field api_added='8' name='AWAY' final='true' static='true' value='2' type='int'/><field api_added='8' name='DO_NOT_DISTURB' final='true' static='true' value='4' type='int'/><field api_added='8' name='IDLE' final='true' static='true' value='3' type='int'/><field api_added='8' name='INVISIBLE' final='true' static='true' value='1' type='int'/><field api_added='8' name='OFFLINE' final='true' static='true' value='0' type='int'/><field api_added='8' name='PRESENCE_CUSTOM_STATUS' final='true' static='true' value='&quot;status&quot;' type='java.lang.String' deprecated='8'/><field api_added='8' name='PRESENCE_STATUS' final='true' static='true' value='&quot;mode&quot;' type='java.lang.String' deprecated='8'/></interface><interface api_added='5' name='ContactsContract.SyncColumns' abstract='true' static='true' visibility='protected'><implements name='android.provider.ContactsContract.BaseSyncColumns'/><field api_added='5' name='ACCOUNT_NAME' final='true' static='true' value='&quot;account_name&quot;' type='java.lang.String'/><field api_added='5' name='ACCOUNT_TYPE' final='true' static='true' value='&quot;account_type&quot;' type='java.lang.String'/><field api_added='5' name='DIRTY' final='true' static='true' value='&quot;dirty&quot;' type='java.lang.String'/><field api_added='5' name='SOURCE_ID' final='true' static='true' value='&quot;sourceid&quot;' type='java.lang.String'/><field api_added='5' name='VERSION' final='true' static='true' value='&quot;version&quot;' type='java.lang.String'/></interface><interface api_added='5' name='SyncStateContract.Columns' abstract='true' static='true'><implements name='android.provider.BaseColumns'/><field api_added='5' name='ACCOUNT_NAME' final='true' static='true' value='&quot;account_name&quot;' type='java.lang.String'/><field api_added='5' name='ACCOUNT_TYPE' final='true' static='true' value='&quot;account_type&quot;' type='java.lang.String'/><field api_added='5' name='DATA' final='true' static='true' value='&quot;data&quot;' type='java.lang.String'/></interface></package><package name='android.sax'><class name='Element' extends='java.lang.Object'><method name='getChild' return='android.sax.Element'><parameter name='localName' type='java.lang.String'/></method><method name='getChild' return='android.sax.Element'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='requireChild' return='android.sax.Element'><parameter name='localName' type='java.lang.String'/></method><method name='requireChild' return='android.sax.Element'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='setElementListener'><parameter name='elementListener' type='android.sax.ElementListener'/></method><method name='setEndElementListener'><parameter name='endElementListener' type='android.sax.EndElementListener'/></method><method name='setEndTextElementListener'><parameter name='endTextElementListener' type='android.sax.EndTextElementListener'/></method><method name='setStartElementListener'><parameter name='startElementListener' type='android.sax.StartElementListener'/></method><method name='setTextElementListener'><parameter name='elementListener' type='android.sax.TextElementListener'/></method></class><class name='RootElement' extends='android.sax.Element'><constructor name='RootElement' type='android.sax.RootElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></constructor><constructor name='RootElement' type='android.sax.RootElement'><parameter name='localName' type='java.lang.String'/></constructor><method name='getContentHandler' return='org.xml.sax.ContentHandler'/></class><interface name='ElementListener' abstract='true'><implements name='android.sax.EndElementListener'/><implements name='android.sax.StartElementListener'/></interface><interface name='EndElementListener' abstract='true'><method name='end' abstract='true'/></interface><interface name='EndTextElementListener' abstract='true'><method name='end' abstract='true'><parameter name='body' type='java.lang.String'/></method></interface><interface name='StartElementListener' abstract='true'><method name='start' abstract='true'><parameter name='attributes' type='org.xml.sax.Attributes'/></method></interface><interface name='TextElementListener' abstract='true'><implements name='android.sax.EndTextElementListener'/><implements name='android.sax.StartElementListener'/></interface></package><package name='android.telephony'><class name='CellLocation' extends='java.lang.Object' abstract='true'><constructor name='CellLocation' type='android.telephony.CellLocation'/><method name='getEmpty' static='true' return='android.telephony.CellLocation'/><method name='requestLocationUpdate' static='true'/></class><class name='PhoneNumberFormattingTextWatcher' extends='java.lang.Object'><implements name='android.text.TextWatcher'/><constructor name='PhoneNumberFormattingTextWatcher' type='android.telephony.PhoneNumberFormattingTextWatcher'/><method name='afterTextChanged' synchronized='true'><parameter name='text' type='android.text.Editable'/></method><method name='beforeTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='after' type='int'/></method><method name='onTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='before' type='int'/><parameter name='count' type='int'/></method></class><class name='PhoneNumberUtils' extends='java.lang.Object'><constructor name='PhoneNumberUtils' type='android.telephony.PhoneNumberUtils'/><field name='FORMAT_NANP' final='true' static='true' value='1' type='int'/><field name='FORMAT_UNKNOWN' final='true' static='true' value='0' type='int'/><field name='PAUSE' final='true' static='true' value='44' type='char'/><field name='TOA_International' final='true' static='true' value='145' type='int'/><field name='TOA_Unknown' final='true' static='true' value='129' type='int'/><field name='WAIT' final='true' static='true' value='59' type='char'/><field name='WILD' final='true' static='true' value='78' type='char'/><field api_added='3' name='FORMAT_JAPAN' final='true' static='true' value='2' type='int'/><method name='calledPartyBCDFragmentToString' static='true' return='java.lang.String'><parameter name='bytes' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='calledPartyBCDToString' static='true' return='java.lang.String'><parameter name='bytes' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='compare' static='true' return='boolean'><parameter name='a' type='java.lang.String'/><parameter name='b' type='java.lang.String'/></method><method name='convertKeypadLettersToDigits' static='true' return='java.lang.String'><parameter name='input' type='java.lang.String'/></method><method name='extractNetworkPortion' static='true' return='java.lang.String'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='extractPostDialPortion' static='true' return='java.lang.String'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='formatNanpNumber' static='true'><parameter name='text' type='android.text.Editable'/></method><method name='formatNumber' static='true' return='java.lang.String'><parameter name='source' type='java.lang.String'/></method><method name='formatNumber' static='true'><parameter name='text' type='android.text.Editable'/><parameter name='defaultFormattingType' type='int'/></method><method name='getFormatTypeForLocale' static='true' return='int'><parameter name='locale' type='java.util.Locale'/></method><method name='getNumberFromIntent' static='true' return='java.lang.String'><parameter name='intent' type='android.content.Intent'/><parameter name='context' type='android.content.Context'/></method><method name='getStrippedReversed' static='true' return='java.lang.String'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='is12Key' final='true' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isDialable' final='true' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isEmergencyNumber' static='true' return='boolean'><parameter name='number' type='java.lang.String'/></method><method name='isGlobalPhoneNumber' static='true' return='boolean'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='isISODigit' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isNonSeparator' final='true' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isReallyDialable' final='true' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isStartsPostDial' final='true' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isWellFormedSmsAddress' static='true' return='boolean'><parameter name='address' type='java.lang.String'/></method><method name='networkPortionToCalledPartyBCD' static='true' return='byte[]'><parameter name='s' type='java.lang.String'/></method><method name='networkPortionToCalledPartyBCDWithLength' static='true' return='byte[]'><parameter name='s' type='java.lang.String'/></method><method name='numberToCalledPartyBCD' static='true' return='byte[]'><parameter name='number' type='java.lang.String'/></method><method name='stringFromStringAndTOA' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/><parameter name='TOA' type='int'/></method><method name='stripSeparators' static='true' return='java.lang.String'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='toCallerIDMinMatch' static='true' return='java.lang.String'><parameter name='phoneNumber' type='java.lang.String'/></method><method name='toaFromString' static='true' return='int'><parameter name='s' type='java.lang.String'/></method><method api_added='3' name='formatJapaneseNumber' static='true'><parameter name='text' type='android.text.Editable'/></method><method api_added='5' name='compare' static='true' return='boolean'><parameter name='context' type='android.content.Context'/><parameter name='a' type='java.lang.String'/><parameter name='b' type='java.lang.String'/></method></class><class name='PhoneStateListener' extends='java.lang.Object'><constructor name='PhoneStateListener' type='android.telephony.PhoneStateListener'/><field name='LISTEN_CALL_FORWARDING_INDICATOR' final='true' static='true' value='8' type='int'/><field name='LISTEN_CALL_STATE' final='true' static='true' value='32' type='int'/><field name='LISTEN_CELL_LOCATION' final='true' static='true' value='16' type='int'/><field name='LISTEN_DATA_ACTIVITY' final='true' static='true' value='128' type='int'/><field name='LISTEN_DATA_CONNECTION_STATE' final='true' static='true' value='64' type='int'/><field name='LISTEN_MESSAGE_WAITING_INDICATOR' final='true' static='true' value='4' type='int'/><field name='LISTEN_NONE' final='true' static='true' value='0' type='int'/><field name='LISTEN_SERVICE_STATE' final='true' static='true' value='1' type='int'/><field name='LISTEN_SIGNAL_STRENGTH' final='true' static='true' value='2' type='int' deprecated='7'/><field api_added='7' name='LISTEN_SIGNAL_STRENGTHS' final='true' static='true' value='256' type='int'/><method name='onCallForwardingIndicatorChanged'><parameter name='cfi' type='boolean'/></method><method name='onCallStateChanged'><parameter name='state' type='int'/><parameter name='incomingNumber' type='java.lang.String'/></method><method name='onCellLocationChanged'><parameter name='location' type='android.telephony.CellLocation'/></method><method name='onDataActivity'><parameter name='direction' type='int'/></method><method name='onDataConnectionStateChanged'><parameter name='state' type='int'/></method><method name='onMessageWaitingIndicatorChanged'><parameter name='mwi' type='boolean'/></method><method name='onServiceStateChanged'><parameter name='serviceState' type='android.telephony.ServiceState'/></method><method name='onSignalStrengthChanged' deprecated='5'><parameter name='asu' type='int'/></method><method api_added='7' name='onDataConnectionStateChanged'><parameter name='state' type='int'/><parameter name='networkType' type='int'/></method><method api_added='7' name='onSignalStrengthsChanged'><parameter name='signalStrength' type='android.telephony.SignalStrength'/></method></class><class name='ServiceState' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='ServiceState' type='android.telephony.ServiceState'/><constructor name='ServiceState' type='android.telephony.ServiceState'><parameter name='s' type='android.telephony.ServiceState'/></constructor><constructor name='ServiceState' type='android.telephony.ServiceState'><parameter name='in' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='STATE_EMERGENCY_ONLY' final='true' static='true' value='2' type='int'/><field name='STATE_IN_SERVICE' final='true' static='true' value='0' type='int'/><field name='STATE_OUT_OF_SERVICE' final='true' static='true' value='1' type='int'/><field name='STATE_POWER_OFF' final='true' static='true' value='3' type='int'/><method name='copyFrom' visibility='protected'><parameter name='s' type='android.telephony.ServiceState'/></method><method name='describeContents' return='int'/><method name='getIsManualSelection' return='boolean'/><method name='getOperatorAlphaLong' return='java.lang.String'/><method name='getOperatorAlphaShort' return='java.lang.String'/><method name='getOperatorNumeric' return='java.lang.String'/><method name='getRoaming' return='boolean'/><method name='getState' return='int'/><method name='setIsManualSelection'><parameter name='isManual' type='boolean'/></method><method name='setOperatorName'><parameter name='longName' type='java.lang.String'/><parameter name='shortName' type='java.lang.String'/><parameter name='numeric' type='java.lang.String'/></method><method name='setRoaming'><parameter name='roaming' type='boolean'/></method><method name='setState'><parameter name='state' type='int'/></method><method name='setStateOff'/><method name='setStateOutOfService'/><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='TelephonyManager' extends='java.lang.Object'><field name='CALL_STATE_IDLE' final='true' static='true' value='0' type='int'/><field name='CALL_STATE_OFFHOOK' final='true' static='true' value='2' type='int'/><field name='CALL_STATE_RINGING' final='true' static='true' value='1' type='int'/><field name='DATA_ACTIVITY_IN' final='true' static='true' value='1' type='int'/><field name='DATA_ACTIVITY_INOUT' final='true' static='true' value='3' type='int'/><field name='DATA_ACTIVITY_NONE' final='true' static='true' value='0' type='int'/><field name='DATA_ACTIVITY_OUT' final='true' static='true' value='2' type='int'/><field name='DATA_CONNECTED' final='true' static='true' value='2' type='int'/><field name='DATA_CONNECTING' final='true' static='true' value='1' type='int'/><field name='DATA_DISCONNECTED' final='true' static='true' value='0' type='int'/><field name='DATA_SUSPENDED' final='true' static='true' value='3' type='int'/><field name='NETWORK_TYPE_EDGE' final='true' static='true' value='2' type='int'/><field name='NETWORK_TYPE_GPRS' final='true' static='true' value='1' type='int'/><field name='NETWORK_TYPE_UMTS' final='true' static='true' value='3' type='int'/><field name='NETWORK_TYPE_UNKNOWN' final='true' static='true' value='0' type='int'/><field name='PHONE_TYPE_GSM' final='true' static='true' value='1' type='int'/><field name='PHONE_TYPE_NONE' final='true' static='true' value='0' type='int'/><field name='SIM_STATE_ABSENT' final='true' static='true' value='1' type='int'/><field name='SIM_STATE_NETWORK_LOCKED' final='true' static='true' value='4' type='int'/><field name='SIM_STATE_PIN_REQUIRED' final='true' static='true' value='2' type='int'/><field name='SIM_STATE_PUK_REQUIRED' final='true' static='true' value='3' type='int'/><field name='SIM_STATE_READY' final='true' static='true' value='5' type='int'/><field name='SIM_STATE_UNKNOWN' final='true' static='true' value='0' type='int'/><field api_added='3' name='ACTION_PHONE_STATE_CHANGED' final='true' static='true' value='&quot;android.intent.action.PHONE_STATE&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_INCOMING_NUMBER' final='true' static='true' value='&quot;incoming_number&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_STATE' final='true' static='true' value='&quot;state&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_STATE_IDLE' final='true' static='true' type='java.lang.String'/><field api_added='3' name='EXTRA_STATE_OFFHOOK' final='true' static='true' type='java.lang.String'/><field api_added='3' name='EXTRA_STATE_RINGING' final='true' static='true' type='java.lang.String'/><field api_added='4' name='DATA_ACTIVITY_DORMANT' final='true' static='true' value='4' type='int'/><field api_added='4' name='NETWORK_TYPE_1xRTT' final='true' static='true' value='7' type='int'/><field api_added='4' name='NETWORK_TYPE_CDMA' final='true' static='true' value='4' type='int'/><field api_added='4' name='NETWORK_TYPE_EVDO_0' final='true' static='true' value='5' type='int'/><field api_added='4' name='NETWORK_TYPE_EVDO_A' final='true' static='true' value='6' type='int'/><field api_added='4' name='PHONE_TYPE_CDMA' final='true' static='true' value='2' type='int'/><field api_added='5' name='NETWORK_TYPE_HSDPA' final='true' static='true' value='8' type='int'/><field api_added='5' name='NETWORK_TYPE_HSPA' final='true' static='true' value='10' type='int'/><field api_added='5' name='NETWORK_TYPE_HSUPA' final='true' static='true' value='9' type='int'/><field api_added='8' name='NETWORK_TYPE_IDEN' final='true' static='true' value='11' type='int'/><method name='getCallState' return='int'/><method name='getCellLocation' return='android.telephony.CellLocation'/><method name='getDataActivity' return='int'/><method name='getDataState' return='int'/><method name='getDeviceId' return='java.lang.String'/><method name='getDeviceSoftwareVersion' return='java.lang.String'/><method name='getLine1Number' return='java.lang.String'/><method name='getNetworkCountryIso' return='java.lang.String'/><method name='getNetworkOperator' return='java.lang.String'/><method name='getNetworkOperatorName' return='java.lang.String'/><method name='getNetworkType' return='int'/><method name='getPhoneType' return='int'/><method name='getSimCountryIso' return='java.lang.String'/><method name='getSimOperator' return='java.lang.String'/><method name='getSimOperatorName' return='java.lang.String'/><method name='getSimSerialNumber' return='java.lang.String'/><method name='getSimState' return='int'/><method name='getSubscriberId' return='java.lang.String'/><method name='getVoiceMailAlphaTag' return='java.lang.String'/><method name='getVoiceMailNumber' return='java.lang.String'/><method name='isNetworkRoaming' return='boolean'/><method name='listen'><parameter name='listener' type='android.telephony.PhoneStateListener'/><parameter name='events' type='int'/></method><method api_added='3' name='getNeighboringCellInfo' return='java.util.List&lt;android.telephony.NeighboringCellInfo&gt;'/><method api_added='5' name='hasIccCard' return='boolean'/></class><class api_added='3' name='NeighboringCellInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='NeighboringCellInfo' type='android.telephony.NeighboringCellInfo'/><constructor api_added='3' name='NeighboringCellInfo' type='android.telephony.NeighboringCellInfo'><parameter name='rssi' type='int'/><parameter name='cid' type='int'/></constructor><constructor api_added='3' name='NeighboringCellInfo' type='android.telephony.NeighboringCellInfo'><parameter name='in' type='android.os.Parcel'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='UNKNOWN_CID' final='true' static='true' value='-1' type='int'/><field api_added='3' name='UNKNOWN_RSSI' final='true' static='true' value='99' type='int'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getCid' return='int'/><method api_added='3' name='getRssi' return='int'/><method api_added='3' name='setCid' deprecated='5'><parameter name='cid' type='int'/></method><method api_added='3' name='setRssi' deprecated='5'><parameter name='rssi' type='int'/></method><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='5' name='getLac' return='int'/><method api_added='5' name='getNetworkType' return='int'/><method api_added='5' name='getPsc' return='int'/></class><class api_added='4' name='SmsManager' final='true' extends='java.lang.Object'><field api_added='4' name='RESULT_ERROR_GENERIC_FAILURE' final='true' static='true' value='1' type='int'/><field api_added='4' name='RESULT_ERROR_NO_SERVICE' final='true' static='true' value='4' type='int'/><field api_added='4' name='RESULT_ERROR_NULL_PDU' final='true' static='true' value='3' type='int'/><field api_added='4' name='RESULT_ERROR_RADIO_OFF' final='true' static='true' value='2' type='int'/><field api_added='4' name='STATUS_ON_ICC_FREE' final='true' static='true' value='0' type='int'/><field api_added='4' name='STATUS_ON_ICC_READ' final='true' static='true' value='1' type='int'/><field api_added='4' name='STATUS_ON_ICC_SENT' final='true' static='true' value='5' type='int'/><field api_added='4' name='STATUS_ON_ICC_UNREAD' final='true' static='true' value='3' type='int'/><field api_added='4' name='STATUS_ON_ICC_UNSENT' final='true' static='true' value='7' type='int'/><method api_added='4' name='divideMessage' return='java.util.ArrayList&lt;java.lang.String&gt;'><parameter name='text' type='java.lang.String'/></method><method api_added='4' name='getDefault' static='true' return='android.telephony.SmsManager'/><method api_added='4' name='sendDataMessage'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationPort' type='short'/><parameter name='data' type='byte[]'/><parameter name='sentIntent' type='android.app.PendingIntent'/><parameter name='deliveryIntent' type='android.app.PendingIntent'/></method><method api_added='4' name='sendMultipartTextMessage'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='parts' type='java.util.ArrayList&lt;java.lang.String&gt;'/><parameter name='sentIntents' type='java.util.ArrayList&lt;android.app.PendingIntent&gt;'/><parameter name='deliveryIntents' type='java.util.ArrayList&lt;android.app.PendingIntent&gt;'/></method><method api_added='4' name='sendTextMessage'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='text' type='java.lang.String'/><parameter name='sentIntent' type='android.app.PendingIntent'/><parameter name='deliveryIntent' type='android.app.PendingIntent'/></method></class><class api_added='4' name='SmsMessage' extends='java.lang.Object'><field api_added='4' name='ENCODING_16BIT' final='true' static='true' value='3' type='int'/><field api_added='4' name='ENCODING_7BIT' final='true' static='true' value='1' type='int'/><field api_added='4' name='ENCODING_8BIT' final='true' static='true' value='2' type='int'/><field api_added='4' name='ENCODING_UNKNOWN' final='true' static='true' value='0' type='int'/><field api_added='4' name='MAX_USER_DATA_BYTES' final='true' static='true' value='140' type='int'/><field api_added='4' name='MAX_USER_DATA_BYTES_WITH_HEADER' final='true' static='true' value='134' type='int'/><field api_added='4' name='MAX_USER_DATA_SEPTETS' final='true' static='true' value='160' type='int'/><field api_added='4' name='MAX_USER_DATA_SEPTETS_WITH_HEADER' final='true' static='true' value='153' type='int'/><method api_added='4' name='calculateLength' static='true' return='int[]'><parameter name='msgBody' type='java.lang.CharSequence'/><parameter name='use7bitOnly' type='boolean'/></method><method api_added='4' name='calculateLength' static='true' return='int[]'><parameter name='messageBody' type='java.lang.String'/><parameter name='use7bitOnly' type='boolean'/></method><method api_added='4' name='createFromPdu' static='true' return='android.telephony.SmsMessage'><parameter name='pdu' type='byte[]'/></method><method api_added='4' name='getDisplayMessageBody' return='java.lang.String'/><method api_added='4' name='getDisplayOriginatingAddress' return='java.lang.String'/><method api_added='4' name='getEmailBody' return='java.lang.String'/><method api_added='4' name='getEmailFrom' return='java.lang.String'/><method api_added='4' name='getIndexOnIcc' return='int'/><method api_added='4' name='getIndexOnSim' deprecated='4' return='int'/><method api_added='4' name='getMessageBody' return='java.lang.String'/><method api_added='4' name='getMessageClass' return='android.telephony.SmsMessage.MessageClass'/><method api_added='4' name='getOriginatingAddress' return='java.lang.String'/><method api_added='4' name='getPdu' return='byte[]'/><method api_added='4' name='getProtocolIdentifier' return='int'/><method api_added='4' name='getPseudoSubject' return='java.lang.String'/><method api_added='4' name='getServiceCenterAddress' return='java.lang.String'/><method api_added='4' name='getStatus' return='int'/><method api_added='4' name='getStatusOnIcc' return='int'/><method api_added='4' name='getStatusOnSim' deprecated='4' return='int'/><method api_added='4' name='getSubmitPdu' static='true' return='android.telephony.SmsMessage.SubmitPdu'><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationAddress' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='statusReportRequested' type='boolean'/></method><method api_added='4' name='getSubmitPdu' static='true' return='android.telephony.SmsMessage.SubmitPdu'><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationAddress' type='java.lang.String'/><parameter name='destinationPort' type='short'/><parameter name='data' type='byte[]'/><parameter name='statusReportRequested' type='boolean'/></method><method api_added='4' name='getTPLayerLengthForPDU' static='true' return='int'><parameter name='pdu' type='java.lang.String'/></method><method api_added='4' name='getTimestampMillis' return='long'/><method api_added='4' name='getUserData' return='byte[]'/><method api_added='4' name='isCphsMwiMessage' return='boolean'/><method api_added='4' name='isEmail' return='boolean'/><method api_added='4' name='isMWIClearMessage' return='boolean'/><method api_added='4' name='isMWISetMessage' return='boolean'/><method api_added='4' name='isMwiDontStore' return='boolean'/><method api_added='4' name='isReplace' return='boolean'/><method api_added='4' name='isReplyPathPresent' return='boolean'/><method api_added='4' name='isStatusReportMessage' return='boolean'/></class><class api_added='4' name='SmsMessage.MessageClass' final='true' extends='java.lang.Enum' static='true'><method api_added='4' name='valueOf' static='true' return='android.telephony.SmsMessage.MessageClass'><parameter name='name' type='java.lang.String'/></method><method api_added='4' name='values' final='true' static='true' return='android.telephony.SmsMessage.MessageClass[]'/></class><class api_added='4' name='SmsMessage.SubmitPdu' extends='java.lang.Object' static='true'><field api_added='4' name='encodedMessage' value='null' type='byte[]'/><field api_added='4' name='encodedScAddress' value='null' type='byte[]'/></class><class api_added='7' name='SignalStrength' extends='java.lang.Object'><implements name='android.os.Parcelable'/><method api_added='7' name='describeContents' return='int'/><method api_added='7' name='getCdmaDbm' return='int'/><method api_added='7' name='getCdmaEcio' return='int'/><method api_added='7' name='getEvdoDbm' return='int'/><method api_added='7' name='getEvdoEcio' return='int'/><method api_added='7' name='getEvdoSnr' return='int'/><method api_added='7' name='getGsmBitErrorRate' return='int'/><method api_added='7' name='getGsmSignalStrength' return='int'/><method api_added='7' name='isGsm' return='boolean'/><method api_added='7' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class></package><package name='android.telephony.gsm'><class name='GsmCellLocation' extends='android.telephony.CellLocation'><constructor name='GsmCellLocation' type='android.telephony.gsm.GsmCellLocation'/><constructor name='GsmCellLocation' type='android.telephony.gsm.GsmCellLocation'><parameter name='bundle' type='android.os.Bundle'/></constructor><method name='fillInNotifierBundle'><parameter name='m' type='android.os.Bundle'/></method><method name='getCid' return='int'/><method name='getLac' return='int'/><method name='setLacAndCid'><parameter name='lac' type='int'/><parameter name='cid' type='int'/></method><method name='setStateInvalid'/></class><class name='SmsManager' final='true' extends='java.lang.Object' deprecated='4'><field name='RESULT_ERROR_GENERIC_FAILURE' final='true' static='true' value='1' type='int' deprecated='4'/><field name='RESULT_ERROR_NO_SERVICE' final='true' static='true' value='4' type='int' deprecated='4'/><field name='RESULT_ERROR_NULL_PDU' final='true' static='true' value='3' type='int' deprecated='4'/><field name='RESULT_ERROR_RADIO_OFF' final='true' static='true' value='2' type='int' deprecated='4'/><field name='STATUS_ON_SIM_FREE' final='true' static='true' value='0' type='int' deprecated='4'/><field name='STATUS_ON_SIM_READ' final='true' static='true' value='1' type='int' deprecated='4'/><field name='STATUS_ON_SIM_SENT' final='true' static='true' value='5' type='int' deprecated='4'/><field name='STATUS_ON_SIM_UNREAD' final='true' static='true' value='3' type='int' deprecated='4'/><field name='STATUS_ON_SIM_UNSENT' final='true' static='true' value='7' type='int' deprecated='4'/><method name='divideMessage' deprecated='4' return='java.util.ArrayList&lt;java.lang.String&gt;'><parameter name='text' type='java.lang.String'/></method><method name='getDefault' static='true' deprecated='4' return='android.telephony.gsm.SmsManager'/><method name='sendDataMessage' deprecated='4'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationPort' type='short'/><parameter name='data' type='byte[]'/><parameter name='sentIntent' type='android.app.PendingIntent'/><parameter name='deliveryIntent' type='android.app.PendingIntent'/></method><method name='sendMultipartTextMessage' deprecated='4'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='parts' type='java.util.ArrayList&lt;java.lang.String&gt;'/><parameter name='sentIntents' type='java.util.ArrayList&lt;android.app.PendingIntent&gt;'/><parameter name='deliveryIntents' type='java.util.ArrayList&lt;android.app.PendingIntent&gt;'/></method><method name='sendTextMessage' deprecated='4'><parameter name='destinationAddress' type='java.lang.String'/><parameter name='scAddress' type='java.lang.String'/><parameter name='text' type='java.lang.String'/><parameter name='sentIntent' type='android.app.PendingIntent'/><parameter name='deliveryIntent' type='android.app.PendingIntent'/></method></class><class name='SmsMessage' extends='java.lang.Object' deprecated='4'><constructor name='SmsMessage' type='android.telephony.gsm.SmsMessage' deprecated='4'/><field name='ENCODING_16BIT' final='true' static='true' value='3' type='int' deprecated='4'/><field name='ENCODING_7BIT' final='true' static='true' value='1' type='int' deprecated='4'/><field name='ENCODING_8BIT' final='true' static='true' value='2' type='int' deprecated='4'/><field name='ENCODING_UNKNOWN' final='true' static='true' value='0' type='int' deprecated='4'/><field name='MAX_USER_DATA_BYTES' final='true' static='true' value='140' type='int' deprecated='4'/><field name='MAX_USER_DATA_SEPTETS' final='true' static='true' value='160' type='int' deprecated='4'/><field name='MAX_USER_DATA_SEPTETS_WITH_HEADER' final='true' static='true' value='153' type='int' deprecated='4'/><method name='calculateLength' static='true' deprecated='4' return='int[]'><parameter name='messageBody' type='java.lang.String'/><parameter name='use7bitOnly' type='boolean'/></method><method name='createFromPdu' static='true' deprecated='4' return='android.telephony.gsm.SmsMessage'><parameter name='pdu' type='byte[]'/></method><method name='getDisplayMessageBody' deprecated='4' return='java.lang.String'/><method name='getDisplayOriginatingAddress' deprecated='4' return='java.lang.String'/><method name='getEmailBody' deprecated='4' return='java.lang.String'/><method name='getEmailFrom' deprecated='4' return='java.lang.String'/><method name='getIndexOnSim' deprecated='4' return='int'/><method name='getMessageBody' deprecated='4' return='java.lang.String'/><method name='getMessageClass' deprecated='4' return='android.telephony.gsm.SmsMessage.MessageClass'/><method name='getOriginatingAddress' deprecated='4' return='java.lang.String'/><method name='getPdu' deprecated='4' return='byte[]'/><method name='getProtocolIdentifier' deprecated='4' return='int'/><method name='getPseudoSubject' deprecated='4' return='java.lang.String'/><method name='getServiceCenterAddress' deprecated='4' return='java.lang.String'/><method name='getStatus' deprecated='4' return='int'/><method name='getStatusOnSim' deprecated='4' return='int'/><method name='getSubmitPdu' static='true' deprecated='4' return='android.telephony.gsm.SmsMessage.SubmitPdu'><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationAddress' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='statusReportRequested' type='boolean'/></method><method name='getSubmitPdu' static='true' deprecated='4' return='android.telephony.gsm.SmsMessage.SubmitPdu'><parameter name='scAddress' type='java.lang.String'/><parameter name='destinationAddress' type='java.lang.String'/><parameter name='destinationPort' type='short'/><parameter name='data' type='byte[]'/><parameter name='statusReportRequested' type='boolean'/></method><method name='getTPLayerLengthForPDU' static='true' deprecated='4' return='int'><parameter name='pdu' type='java.lang.String'/></method><method name='getTimestampMillis' deprecated='4' return='long'/><method name='getUserData' deprecated='4' return='byte[]'/><method name='isCphsMwiMessage' deprecated='4' return='boolean'/><method name='isEmail' deprecated='4' return='boolean'/><method name='isMWIClearMessage' deprecated='4' return='boolean'/><method name='isMWISetMessage' deprecated='4' return='boolean'/><method name='isMwiDontStore' deprecated='4' return='boolean'/><method name='isReplace' deprecated='4' return='boolean'/><method name='isReplyPathPresent' deprecated='4' return='boolean'/><method name='isStatusReportMessage' deprecated='4' return='boolean'/><method api_added='3' name='calculateLength' static='true' deprecated='4' return='int[]'><parameter name='messageBody' type='java.lang.CharSequence'/><parameter name='use7bitOnly' type='boolean'/></method></class><class name='SmsMessage.MessageClass' final='true' extends='java.lang.Enum' static='true' deprecated='4'><method name='valueOf' static='true' return='android.telephony.gsm.SmsMessage.MessageClass'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.telephony.gsm.SmsMessage.MessageClass[]'/></class><class name='SmsMessage.SubmitPdu' extends='java.lang.Object' static='true' deprecated='4'><constructor name='SmsMessage.SubmitPdu' type='android.telephony.gsm.SmsMessage.SubmitPdu' deprecated='4'/><field name='encodedMessage' value='null' type='byte[]' deprecated='4'/><field name='encodedScAddress' value='null' type='byte[]' deprecated='4'/></class></package><package name='android.test'><class name='ActivityInstrumentationTestCase' extends='android.test.ActivityTestCase' abstract='true' deprecated='3'><constructor name='ActivityInstrumentationTestCase' type='android.test.ActivityInstrumentationTestCase'><parameter name='pkg' type='java.lang.String'/><parameter name='activityClass' type='java.lang.Class&lt;T&gt;'/></constructor><constructor name='ActivityInstrumentationTestCase' type='android.test.ActivityInstrumentationTestCase'><parameter name='pkg' type='java.lang.String'/><parameter name='activityClass' type='java.lang.Class&lt;T&gt;'/><parameter name='initialTouchMode' type='boolean'/></constructor><method name='getActivity' return='T'/><method name='testActivityTestCaseSetUpProperly'><exception name='Exception' type='java.lang.Exception'/></method></class><class name='ActivityTestCase' extends='android.test.InstrumentationTestCase' abstract='true'><constructor name='ActivityTestCase' type='android.test.ActivityTestCase'/><method name='getActivity' visibility='protected' return='android.app.Activity'/><method name='scrubClass' visibility='protected'><parameter name='testCaseClass' type='java.lang.Class&lt;?&gt;'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/></method><method name='setActivity' visibility='protected'><parameter name='testActivity' type='android.app.Activity'/></method></class><class name='ActivityUnitTestCase' extends='android.test.ActivityTestCase' abstract='true'><constructor name='ActivityUnitTestCase' type='android.test.ActivityUnitTestCase'><parameter name='activityClass' type='java.lang.Class&lt;T&gt;'/></constructor><method name='getActivity' return='T'/><method name='getFinishedActivityRequest' return='int'/><method name='getRequestedOrientation' return='int'/><method name='getStartedActivityIntent' return='android.content.Intent'/><method name='getStartedActivityRequest' return='int'/><method name='isFinishCalled' return='boolean'/><method name='setActivityContext'><parameter name='activityContext' type='android.content.Context'/></method><method name='setApplication'><parameter name='application' type='android.app.Application'/></method><method name='startActivity' visibility='protected' return='T'><parameter name='intent' type='android.content.Intent'/><parameter name='savedInstanceState' type='android.os.Bundle'/><parameter name='lastNonConfigurationInstance' type='java.lang.Object'/></method></class><class name='AndroidTestCase' extends='junit.framework.TestCase'><constructor name='AndroidTestCase' type='android.test.AndroidTestCase'/><field name='mContext' type='android.content.Context' visibility='protected'/><method name='getContext' return='android.content.Context'/><method name='scrubClass' visibility='protected'><parameter name='testCaseClass' type='java.lang.Class&lt;?&gt;'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/></method><method name='setContext'><parameter name='context' type='android.content.Context'/></method><method name='testAndroidTestCaseSetupProperly'/><method api_added='4' name='assertActivityRequiresPermission'><parameter name='packageName' type='java.lang.String'/><parameter name='className' type='java.lang.String'/><parameter name='permission' type='java.lang.String'/></method><method api_added='4' name='assertReadingContentUriRequiresPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='permission' type='java.lang.String'/></method><method api_added='4' name='assertWritingContentUriRequiresPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='permission' type='java.lang.String'/></method></class><class name='AndroidTestRunner' extends='junit.runner.BaseTestRunner'><constructor name='AndroidTestRunner' type='android.test.AndroidTestRunner'/><method name='addTestListener'><parameter name='testListener' type='junit.framework.TestListener'/></method><method name='clearTestListeners'/><method name='createTestResult' visibility='protected' return='junit.framework.TestResult'/><method name='getTestCases' return='java.util.List&lt;junit.framework.TestCase&gt;'/><method name='getTestClassName' return='java.lang.String'/><method name='getTestResult' return='junit.framework.TestResult'/><method name='runFailed' visibility='protected'><parameter name='message' type='java.lang.String'/></method><method name='runTest'/><method name='runTest'><parameter name='testResult' type='junit.framework.TestResult'/></method><method name='setContext'><parameter name='context' type='android.content.Context'/></method><method name='setInstrumentaiton' deprecated='5'><parameter name='instrumentation' type='android.app.Instrumentation'/></method><method name='setTest'><parameter name='test' type='junit.framework.Test'/></method><method name='setTestClassName'><parameter name='testClassName' type='java.lang.String'/><parameter name='testMethodName' type='java.lang.String'/></method><method name='testEnded'><parameter name='testName' type='java.lang.String'/></method><method name='testFailed'><parameter name='status' type='int'/><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='java.lang.Throwable'/></method><method name='testStarted'><parameter name='testName' type='java.lang.String'/></method><method api_added='5' name='setInstrumentation'><parameter name='instrumentation' type='android.app.Instrumentation'/></method></class><class name='ApplicationTestCase' extends='android.test.AndroidTestCase' abstract='true'><constructor name='ApplicationTestCase' type='android.test.ApplicationTestCase'><parameter name='applicationClass' type='java.lang.Class&lt;T&gt;'/></constructor><method name='createApplication' final='true' visibility='protected'/><method name='getApplication' return='T'/><method name='getSystemContext' return='android.content.Context'/><method name='terminateApplication' final='true' visibility='protected'/><method name='testApplicationTestCaseSetUpProperly' final='true'><exception name='Exception' type='java.lang.Exception'/></method></class><class name='AssertionFailedError' extends='java.lang.Error'><constructor name='AssertionFailedError' type='android.test.AssertionFailedError'/><constructor name='AssertionFailedError' type='android.test.AssertionFailedError'><parameter name='message' type='java.lang.String'/><parameter name='errorMessage' type='java.lang.String'/></constructor></class><class name='ComparisonFailure' extends='android.test.AssertionFailedError'><constructor name='ComparisonFailure' type='android.test.ComparisonFailure'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></constructor></class><class name='FlakyTest' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='InstrumentationTestCase' extends='junit.framework.TestCase'><constructor name='InstrumentationTestCase' type='android.test.InstrumentationTestCase'/><method name='getInstrumentation' return='android.app.Instrumentation'/><method name='injectInsrumentation' deprecated='5'><parameter name='instrumentation' type='android.app.Instrumentation'/></method><method name='launchActivity' final='true' return='T'><parameter name='pkg' type='java.lang.String'/><parameter name='activityCls' type='java.lang.Class&lt;T&gt;'/><parameter name='extras' type='android.os.Bundle'/></method><method name='sendKeys'><parameter name='keysSequence' type='java.lang.String'/></method><method name='sendKeys'><parameter name='keys' type='int...'/></method><method name='sendRepeatedKeys'><parameter name='keys' type='int...'/></method><method api_added='3' name='launchActivityWithIntent' final='true' return='T'><parameter name='pkg' type='java.lang.String'/><parameter name='activityCls' type='java.lang.Class&lt;T&gt;'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='3' name='runTestOnUiThread'><parameter name='r' type='java.lang.Runnable'/><exception name='Throwable' type='java.lang.Throwable'/></method><method api_added='5' name='injectInstrumentation'><parameter name='instrumentation' type='android.app.Instrumentation'/></method></class><class name='InstrumentationTestRunner' extends='android.app.Instrumentation'><implements name='android.test.TestSuiteProvider'/><constructor name='InstrumentationTestRunner' type='android.test.InstrumentationTestRunner'/><field name='REPORT_KEY_NAME_CLASS' final='true' static='true' value='&quot;class&quot;' type='java.lang.String'/><field name='REPORT_KEY_NAME_TEST' final='true' static='true' value='&quot;test&quot;' type='java.lang.String'/><field name='REPORT_KEY_NUM_CURRENT' final='true' static='true' value='&quot;current&quot;' type='java.lang.String'/><field name='REPORT_KEY_NUM_TOTAL' final='true' static='true' value='&quot;numtests&quot;' type='java.lang.String'/><field name='REPORT_KEY_STACK' final='true' static='true' value='&quot;stack&quot;' type='java.lang.String'/><field name='REPORT_VALUE_ID' final='true' static='true' value='&quot;InstrumentationTestRunner&quot;' type='java.lang.String'/><field name='REPORT_VALUE_RESULT_ERROR' final='true' static='true' value='-1' type='int'/><field name='REPORT_VALUE_RESULT_FAILURE' final='true' static='true' value='-2' type='int'/><field name='REPORT_VALUE_RESULT_OK' final='true' static='true' value='0' type='int'/><field name='REPORT_VALUE_RESULT_START' final='true' static='true' value='1' type='int'/><method name='getAllTests' return='junit.framework.TestSuite'/><method name='getAndroidTestRunner' visibility='protected' return='android.test.AndroidTestRunner'/><method name='getLoader' return='java.lang.ClassLoader'/><method name='getTestSuite' return='junit.framework.TestSuite'/></class><class name='InstrumentationTestSuite' extends='junit.framework.TestSuite'><constructor name='InstrumentationTestSuite' type='android.test.InstrumentationTestSuite'><parameter name='instr' type='android.app.Instrumentation'/></constructor><constructor name='InstrumentationTestSuite' type='android.test.InstrumentationTestSuite'><parameter name='name' type='java.lang.String'/><parameter name='instr' type='android.app.Instrumentation'/></constructor><constructor name='InstrumentationTestSuite' type='android.test.InstrumentationTestSuite'><parameter name='theClass' type='java.lang.Class'/><parameter name='instr' type='android.app.Instrumentation'/></constructor></class><class name='IsolatedContext' extends='android.content.ContextWrapper'><constructor name='IsolatedContext' type='android.test.IsolatedContext'><parameter name='resolver' type='android.content.ContentResolver'/><parameter name='targetContext' type='android.content.Context'/></constructor><method name='getAndClearBroadcastIntents' return='java.util.List&lt;android.content.Intent&gt;'/></class><class name='MoreAsserts' final='true' extends='java.lang.Object'><method name='assertAssignableFrom' static='true'><parameter name='expected' type='java.lang.Class&lt;?&gt;'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertAssignableFrom' static='true'><parameter name='expected' type='java.lang.Class&lt;?&gt;'/><parameter name='actual' type='java.lang.Class&lt;?&gt;'/></method><method name='assertContainsRegex' static='true' return='java.util.regex.MatchResult'><parameter name='message' type='java.lang.String'/><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertContainsRegex' static='true' return='java.util.regex.MatchResult'><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertContentsInAnyOrder' static='true'><parameter name='message' type='java.lang.String'/><parameter name='actual' type='java.lang.Iterable&lt;?&gt;'/><parameter name='expected' type='java.lang.Object...'/></method><method name='assertContentsInAnyOrder' static='true'><parameter name='actual' type='java.lang.Iterable&lt;?&gt;'/><parameter name='expected' type='java.lang.Object...'/></method><method name='assertContentsInOrder' static='true'><parameter name='message' type='java.lang.String'/><parameter name='actual' type='java.lang.Iterable&lt;?&gt;'/><parameter name='expected' type='java.lang.Object...'/></method><method name='assertContentsInOrder' static='true'><parameter name='actual' type='java.lang.Iterable&lt;?&gt;'/><parameter name='expected' type='java.lang.Object...'/></method><method name='assertEmpty' static='true'><parameter name='message' type='java.lang.String'/><parameter name='iterable' type='java.lang.Iterable&lt;?&gt;'/></method><method name='assertEmpty' static='true'><parameter name='iterable' type='java.lang.Iterable&lt;?&gt;'/></method><method name='assertEmpty' static='true'><parameter name='message' type='java.lang.String'/><parameter name='map' type='java.util.Map&lt;?, ?&gt;'/></method><method name='assertEmpty' static='true'><parameter name='map' type='java.util.Map&lt;?, ?&gt;'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='byte[]'/><parameter name='actual' type='byte[]'/></method><method name='assertEquals' static='true'><parameter name='expected' type='byte[]'/><parameter name='actual' type='byte[]'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='int[]'/><parameter name='actual' type='int[]'/></method><method name='assertEquals' static='true'><parameter name='expected' type='int[]'/><parameter name='actual' type='int[]'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='double[]'/><parameter name='actual' type='double[]'/></method><method name='assertEquals' static='true'><parameter name='expected' type='double[]'/><parameter name='actual' type='double[]'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.Object[]'/><parameter name='actual' type='java.lang.Object[]'/></method><method name='assertEquals' static='true'><parameter name='expected' type='java.lang.Object[]'/><parameter name='actual' type='java.lang.Object[]'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.util.Set&lt;? extends java.lang.Object&gt;'/><parameter name='actual' type='java.util.Set&lt;? extends java.lang.Object&gt;'/></method><method name='assertEquals' static='true'><parameter name='expected' type='java.util.Set&lt;? extends java.lang.Object&gt;'/><parameter name='actual' type='java.util.Set&lt;? extends java.lang.Object&gt;'/></method><method name='assertMatchesRegex' static='true' return='java.util.regex.MatchResult'><parameter name='message' type='java.lang.String'/><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertMatchesRegex' static='true' return='java.util.regex.MatchResult'><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertNotContainsRegex' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertNotContainsRegex' static='true'><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertNotEmpty' static='true'><parameter name='message' type='java.lang.String'/><parameter name='iterable' type='java.lang.Iterable&lt;?&gt;'/></method><method name='assertNotEmpty' static='true'><parameter name='iterable' type='java.lang.Iterable&lt;?&gt;'/></method><method name='assertNotEmpty' static='true'><parameter name='message' type='java.lang.String'/><parameter name='map' type='java.util.Map&lt;?, ?&gt;'/></method><method name='assertNotEmpty' static='true'><parameter name='map' type='java.util.Map&lt;?, ?&gt;'/></method><method name='assertNotEqual' static='true'><parameter name='message' type='java.lang.String'/><parameter name='unexpected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertNotEqual' static='true'><parameter name='unexpected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertNotMatchesRegex' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertNotMatchesRegex' static='true'><parameter name='expectedRegex' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='checkEqualsAndHashCodeMethods' static='true'><parameter name='message' type='java.lang.String'/><parameter name='lhs' type='java.lang.Object'/><parameter name='rhs' type='java.lang.Object'/><parameter name='expectedResult' type='boolean'/></method><method name='checkEqualsAndHashCodeMethods' static='true'><parameter name='lhs' type='java.lang.Object'/><parameter name='rhs' type='java.lang.Object'/><parameter name='expectedResult' type='boolean'/></method></class><class name='ProviderTestCase' extends='android.test.InstrumentationTestCase' abstract='true' deprecated='3'><constructor name='ProviderTestCase' type='android.test.ProviderTestCase'><parameter name='providerClass' type='java.lang.Class&lt;T&gt;'/><parameter name='providerAuthority' type='java.lang.String'/></constructor><method name='getMockContentResolver' return='android.test.mock.MockContentResolver'/><method name='getMockContext' return='android.test.IsolatedContext'/><method name='getProvider' return='T'/><method name='newResolverWithContentProviderFromSql' static='true' return='android.content.ContentResolver'><parameter name='targetContext' type='android.content.Context'/><parameter name='providerClass' type='java.lang.Class&lt;T&gt;'/><parameter name='authority' type='java.lang.String'/><parameter name='databaseName' type='java.lang.String'/><parameter name='databaseVersion' type='int'/><parameter name='sql' type='java.lang.String'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method></class><class name='RenamingDelegatingContext' extends='android.content.ContextWrapper'><constructor name='RenamingDelegatingContext' type='android.test.RenamingDelegatingContext'><parameter name='context' type='android.content.Context'/><parameter name='filePrefix' type='java.lang.String'/></constructor><constructor name='RenamingDelegatingContext' type='android.test.RenamingDelegatingContext'><parameter name='context' type='android.content.Context'/><parameter name='fileContext' type='android.content.Context'/><parameter name='filePrefix' type='java.lang.String'/></constructor><method name='getDatabasePrefix' return='java.lang.String'/><method name='makeExistingFilesAndDbsAccessible'/><method name='providerWithRenamedContext' static='true' return='T'><parameter name='contentProvider' type='java.lang.Class&lt;T&gt;'/><parameter name='c' type='android.content.Context'/><parameter name='filePrefix' type='java.lang.String'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method><method name='providerWithRenamedContext' static='true' return='T'><parameter name='contentProvider' type='java.lang.Class&lt;T&gt;'/><parameter name='c' type='android.content.Context'/><parameter name='filePrefix' type='java.lang.String'/><parameter name='allowAccessToExistingFilesAndDbs' type='boolean'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method></class><class name='ServiceTestCase' extends='android.test.AndroidTestCase' abstract='true'><constructor name='ServiceTestCase' type='android.test.ServiceTestCase'><parameter name='serviceClass' type='java.lang.Class&lt;T&gt;'/></constructor><method name='bindService' visibility='protected' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method name='getApplication' return='android.app.Application'/><method name='getService' return='T'/><method name='getSystemContext' return='android.content.Context'/><method name='setApplication'><parameter name='application' type='android.app.Application'/></method><method name='setupService' visibility='protected'/><method name='shutdownService' visibility='protected'/><method name='startService' visibility='protected'><parameter name='intent' type='android.content.Intent'/></method><method name='testServiceTestCaseSetUpProperly'><exception name='Exception' type='java.lang.Exception'/></method></class><class name='SingleLaunchActivityTestCase' extends='android.test.InstrumentationTestCase' abstract='true'><constructor name='SingleLaunchActivityTestCase' type='android.test.SingleLaunchActivityTestCase'><parameter name='pkg' type='java.lang.String'/><parameter name='activityClass' type='java.lang.Class&lt;T&gt;'/></constructor><method name='getActivity' return='T'/><method name='testActivityTestCaseSetUpProperly'><exception name='Exception' type='java.lang.Exception'/></method></class><class name='SyncBaseInstrumentation' extends='android.test.InstrumentationTestCase'><constructor name='SyncBaseInstrumentation' type='android.test.SyncBaseInstrumentation'/><method name='cancelSyncsandDisableAutoSync' visibility='protected'/><method name='syncProvider' api_removed='6' visibility='protected'><parameter name='uri' type='android.net.Uri'/><parameter name='account' type='java.lang.String'/><parameter name='authority' type='java.lang.String'/><parameter name='accountName' type='java.lang.String'/><exception name='Exception' type='java.lang.Exception'/></method><method api_added='6' name='syncProvider' visibility='protected'><parameter name='uri' type='android.net.Uri'/><parameter name='accountName' type='java.lang.String'/><parameter name='authority' type='java.lang.String'/><exception name='Exception' type='java.lang.Exception'/></method></class><class name='TouchUtils' extends='java.lang.Object'><constructor name='TouchUtils' type='android.test.TouchUtils'/><method name='clickView' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method name='drag' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='fromX' type='float'/><parameter name='toX' type='float'/><parameter name='fromY' type='float'/><parameter name='toY' type='float'/><parameter name='stepCount' type='int'/></method><method name='dragQuarterScreenDown' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/></method><method name='dragQuarterScreenUp' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/></method><method name='dragViewBy' static='true' deprecated='3' return='int'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='deltaX' type='int'/><parameter name='deltaY' type='int'/></method><method name='dragViewTo' static='true' deprecated='3' return='int'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toX' type='int'/><parameter name='toY' type='int'/></method><method name='dragViewToBottom' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method name='dragViewToBottom' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='stepCount' type='int'/></method><method name='dragViewToTop' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method name='dragViewToTop' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='stepCount' type='int'/></method><method name='dragViewToX' static='true' deprecated='3' return='int'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toX' type='int'/></method><method name='dragViewToY' static='true' deprecated='3' return='int'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toY' type='int'/></method><method name='longClickView' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method name='scrollToBottom' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.ViewGroup'/></method><method name='scrollToTop' static='true' deprecated='3'><parameter name='test' type='android.test.ActivityInstrumentationTestCase'/><parameter name='v' type='android.view.ViewGroup'/></method><method name='tapView' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method name='touchAndCancelView' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method api_added='3' name='drag' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='fromX' type='float'/><parameter name='toX' type='float'/><parameter name='fromY' type='float'/><parameter name='toY' type='float'/><parameter name='stepCount' type='int'/></method><method api_added='3' name='dragQuarterScreenDown' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/></method><method api_added='3' name='dragQuarterScreenUp' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/></method><method api_added='3' name='dragViewBy' static='true' deprecated='3' return='int'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='deltaX' type='int'/><parameter name='deltaY' type='int'/></method><method api_added='3' name='dragViewTo' static='true' return='int'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toX' type='int'/><parameter name='toY' type='int'/></method><method api_added='3' name='dragViewToBottom' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/><parameter name='v' type='android.view.View'/></method><method api_added='3' name='dragViewToBottom' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/><parameter name='v' type='android.view.View'/><parameter name='stepCount' type='int'/></method><method api_added='3' name='dragViewToTop' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method api_added='3' name='dragViewToTop' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='stepCount' type='int'/></method><method api_added='3' name='dragViewToX' static='true' return='int'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toX' type='int'/></method><method api_added='3' name='dragViewToY' static='true' return='int'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='toY' type='int'/></method><method api_added='3' name='longClickView' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='v' type='android.view.View'/></method><method api_added='3' name='scrollToBottom' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/><parameter name='v' type='android.view.ViewGroup'/></method><method api_added='3' name='scrollToTop' static='true'><parameter name='test' type='android.test.InstrumentationTestCase'/><parameter name='activity' type='android.app.Activity'/><parameter name='v' type='android.view.ViewGroup'/></method></class><class name='UiThreadTest' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='ViewAsserts' extends='java.lang.Object'><method name='assertBaselineAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/></method><method name='assertBottomAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/></method><method name='assertBottomAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/><parameter name='margin' type='int'/></method><method name='assertGroupContains' static='true'><parameter name='parent' type='android.view.ViewGroup'/><parameter name='child' type='android.view.View'/></method><method name='assertGroupIntegrity' static='true'><parameter name='parent' type='android.view.ViewGroup'/></method><method name='assertGroupNotContains' static='true'><parameter name='parent' type='android.view.ViewGroup'/><parameter name='child' type='android.view.View'/></method><method name='assertHasScreenCoordinates' static='true'><parameter name='origin' type='android.view.View'/><parameter name='view' type='android.view.View'/><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='assertHorizontalCenterAligned' static='true'><parameter name='reference' type='android.view.View'/><parameter name='test' type='android.view.View'/></method><method name='assertLeftAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/></method><method name='assertLeftAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/><parameter name='margin' type='int'/></method><method name='assertOffScreenAbove' static='true'><parameter name='origin' type='android.view.View'/><parameter name='view' type='android.view.View'/></method><method name='assertOffScreenBelow' static='true'><parameter name='origin' type='android.view.View'/><parameter name='view' type='android.view.View'/></method><method name='assertOnScreen' static='true'><parameter name='origin' type='android.view.View'/><parameter name='view' type='android.view.View'/></method><method name='assertRightAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/></method><method name='assertRightAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/><parameter name='margin' type='int'/></method><method name='assertTopAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/></method><method name='assertTopAligned' static='true'><parameter name='first' type='android.view.View'/><parameter name='second' type='android.view.View'/><parameter name='margin' type='int'/></method><method name='assertVerticalCenterAligned' static='true'><parameter name='reference' type='android.view.View'/><parameter name='test' type='android.view.View'/></method></class><class api_added='3' name='ActivityInstrumentationTestCase2' extends='android.test.ActivityTestCase' abstract='true'><constructor api_added='3' name='ActivityInstrumentationTestCase2' type='android.test.ActivityInstrumentationTestCase2'><parameter name='pkg' type='java.lang.String'/><parameter name='activityClass' type='java.lang.Class&lt;T&gt;'/></constructor><method api_added='3' name='getActivity' return='T'/><method api_added='3' name='setActivityInitialTouchMode'><parameter name='initialTouchMode' type='boolean'/></method><method api_added='3' name='setActivityIntent'><parameter name='i' type='android.content.Intent'/></method></class><class api_added='3' name='ProviderTestCase2' extends='android.test.AndroidTestCase' abstract='true'><constructor api_added='3' name='ProviderTestCase2' type='android.test.ProviderTestCase2'><parameter name='providerClass' type='java.lang.Class&lt;T&gt;'/><parameter name='providerAuthority' type='java.lang.String'/></constructor><method api_added='3' name='getMockContentResolver' return='android.test.mock.MockContentResolver'/><method api_added='3' name='getMockContext' return='android.test.IsolatedContext'/><method api_added='3' name='getProvider' return='T'/><method api_added='3' name='newResolverWithContentProviderFromSql' static='true' return='android.content.ContentResolver'><parameter name='targetContext' type='android.content.Context'/><parameter name='filenamePrefix' type='java.lang.String'/><parameter name='providerClass' type='java.lang.Class&lt;T&gt;'/><parameter name='authority' type='java.lang.String'/><parameter name='databaseName' type='java.lang.String'/><parameter name='databaseVersion' type='int'/><parameter name='sql' type='java.lang.String'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method></class><interface name='PerformanceTestCase' abstract='true'><method name='isPerformanceOnly' abstract='true' return='boolean'/><method name='startPerformance' abstract='true' return='int'><parameter name='intermediates' type='android.test.PerformanceTestCase.Intermediates'/></method></interface><interface name='PerformanceTestCase.Intermediates' abstract='true' static='true'><method name='addIntermediate' abstract='true'><parameter name='name' type='java.lang.String'/></method><method name='addIntermediate' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='timeInNS' type='long'/></method><method name='finishTiming' abstract='true'><parameter name='realTime' type='boolean'/></method><method name='setInternalIterations' abstract='true'><parameter name='count' type='int'/></method><method name='startTiming' abstract='true'><parameter name='realTime' type='boolean'/></method></interface><interface name='TestSuiteProvider' abstract='true'><method name='getTestSuite' abstract='true' return='junit.framework.TestSuite'/></interface></package><package name='android.test.mock'><class name='MockApplication' extends='android.app.Application'><constructor name='MockApplication' type='android.test.mock.MockApplication'/></class><class name='MockContentResolver' extends='android.content.ContentResolver'><constructor name='MockContentResolver' type='android.test.mock.MockContentResolver'/><method name='addProvider'><parameter name='name' type='java.lang.String'/><parameter name='provider' type='android.content.ContentProvider'/></method></class><class name='MockContext' extends='android.content.Context'><constructor name='MockContext' type='android.test.mock.MockContext'/><method name='bindService' return='boolean'><parameter name='service' type='android.content.Intent'/><parameter name='conn' type='android.content.ServiceConnection'/><parameter name='flags' type='int'/></method><method name='checkCallingOrSelfPermission' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingOrSelfUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkCallingPermission' return='int'><parameter name='permission' type='java.lang.String'/></method><method name='checkCallingUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='checkPermission' return='int'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/></method><method name='checkUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='checkUriPermission' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/></method><method name='clearWallpaper'/><method name='createPackageContext' return='android.content.Context'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='databaseList' return='java.lang.String[]'/><method name='deleteDatabase' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='deleteFile' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='enforceCallingOrSelfPermission'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingOrSelfUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingPermission'><parameter name='permission' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='enforceCallingUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforcePermission'><parameter name='permission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='enforceUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pid' type='int'/><parameter name='uid' type='int'/><parameter name='modeFlags' type='int'/><parameter name='message' type='java.lang.String'/></method><method name='fileList' return='java.lang.String[]'/><method name='getApplicationContext' return='android.content.Context'/><method name='getAssets' return='android.content.res.AssetManager'/><method name='getCacheDir' return='java.io.File'/><method name='getClassLoader' return='java.lang.ClassLoader'/><method name='getContentResolver' return='android.content.ContentResolver'/><method name='getDatabasePath' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getDir' return='java.io.File'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getFileStreamPath' return='java.io.File'><parameter name='name' type='java.lang.String'/></method><method name='getFilesDir' return='java.io.File'/><method name='getMainLooper' return='android.os.Looper'/><method name='getPackageCodePath' return='java.lang.String'/><method name='getPackageManager' return='android.content.pm.PackageManager'/><method name='getPackageName' return='java.lang.String'/><method name='getPackageResourcePath' return='java.lang.String'/><method name='getResources' return='android.content.res.Resources'/><method name='getSharedPreferences' return='android.content.SharedPreferences'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/></method><method name='getSystemService' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getTheme' return='android.content.res.Resources.Theme'/><method name='getWallpaper' return='android.graphics.drawable.Drawable'/><method name='getWallpaperDesiredMinimumHeight' return='int'/><method name='getWallpaperDesiredMinimumWidth' return='int'/><method name='grantUriPermission'><parameter name='toPackage' type='java.lang.String'/><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='openFileInput' return='java.io.FileInputStream'><parameter name='name' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openFileOutput' return='java.io.FileOutputStream'><parameter name='name' type='java.lang.String'/><parameter name='mode' type='int'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></method><method name='openOrCreateDatabase' return='android.database.sqlite.SQLiteDatabase'><parameter name='file' type='java.lang.String'/><parameter name='mode' type='int'/><parameter name='factory' type='android.database.sqlite.SQLiteDatabase.CursorFactory'/></method><method name='peekWallpaper' return='android.graphics.drawable.Drawable'/><method name='registerReceiver' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/></method><method name='registerReceiver' return='android.content.Intent'><parameter name='receiver' type='android.content.BroadcastReceiver'/><parameter name='filter' type='android.content.IntentFilter'/><parameter name='broadcastPermission' type='java.lang.String'/><parameter name='scheduler' type='android.os.Handler'/></method><method name='removeStickyBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='revokeUriPermission'><parameter name='uri' type='android.net.Uri'/><parameter name='modeFlags' type='int'/></method><method name='sendBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='sendBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/></method><method name='sendOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='receiverPermission' type='java.lang.String'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method name='sendStickyBroadcast'><parameter name='intent' type='android.content.Intent'/></method><method name='setTheme'><parameter name='resid' type='int'/></method><method name='setWallpaper'><parameter name='bitmap' type='android.graphics.Bitmap'/><exception name='IOException' type='java.io.IOException'/></method><method name='setWallpaper'><parameter name='data' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='startActivity'><parameter name='intent' type='android.content.Intent'/></method><method name='startInstrumentation' return='boolean'><parameter name='className' type='android.content.ComponentName'/><parameter name='profileFile' type='java.lang.String'/><parameter name='arguments' type='android.os.Bundle'/></method><method name='startService' return='android.content.ComponentName'><parameter name='service' type='android.content.Intent'/></method><method name='stopService' return='boolean'><parameter name='service' type='android.content.Intent'/></method><method name='unbindService'><parameter name='conn' type='android.content.ServiceConnection'/></method><method name='unregisterReceiver'><parameter name='receiver' type='android.content.BroadcastReceiver'/></method><method api_added='4' name='getApplicationInfo' return='android.content.pm.ApplicationInfo'/><method api_added='5' name='sendStickyOrderedBroadcast'><parameter name='intent' type='android.content.Intent'/><parameter name='resultReceiver' type='android.content.BroadcastReceiver'/><parameter name='scheduler' type='android.os.Handler'/><parameter name='initialCode' type='int'/><parameter name='initialData' type='java.lang.String'/><parameter name='initialExtras' type='android.os.Bundle'/></method><method api_added='5' name='startIntentSender'><parameter name='intent' type='android.content.IntentSender'/><parameter name='fillInIntent' type='android.content.Intent'/><parameter name='flagsMask' type='int'/><parameter name='flagsValues' type='int'/><parameter name='extraFlags' type='int'/><exception name='IntentSender.SendIntentException' type='android.content.IntentSender.SendIntentException'/></method><method api_added='8' name='getExternalCacheDir' return='java.io.File'/><method api_added='8' name='getExternalFilesDir' return='java.io.File'><parameter name='type' type='java.lang.String'/></method></class><class name='MockDialogInterface' extends='java.lang.Object'><implements name='android.content.DialogInterface'/><constructor name='MockDialogInterface' type='android.test.mock.MockDialogInterface'/><method name='cancel'/><method name='dismiss'/></class><class name='MockPackageManager' extends='android.content.pm.PackageManager'><constructor name='MockPackageManager' type='android.test.mock.MockPackageManager'/><method name='addPackageToPreferred'><parameter name='packageName' type='java.lang.String'/></method><method name='addPermission' return='boolean'><parameter name='info' type='android.content.pm.PermissionInfo'/></method><method name='addPreferredActivity'><parameter name='filter' type='android.content.IntentFilter'/><parameter name='match' type='int'/><parameter name='set' type='android.content.ComponentName[]'/><parameter name='activity' type='android.content.ComponentName'/></method><method name='checkPermission' return='int'><parameter name='permName' type='java.lang.String'/><parameter name='pkgName' type='java.lang.String'/></method><method name='checkSignatures' return='int'><parameter name='pkg1' type='java.lang.String'/><parameter name='pkg2' type='java.lang.String'/></method><method name='clearPackagePreferredActivities'><parameter name='packageName' type='java.lang.String'/></method><method name='getActivityIcon' return='android.graphics.drawable.Drawable'><parameter name='activityName' type='android.content.ComponentName'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getActivityIcon' return='android.graphics.drawable.Drawable'><parameter name='intent' type='android.content.Intent'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getActivityInfo' return='android.content.pm.ActivityInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getAllPermissionGroups' return='java.util.List&lt;android.content.pm.PermissionGroupInfo&gt;'><parameter name='flags' type='int'/></method><method name='getApplicationEnabledSetting' return='int'><parameter name='packageName' type='java.lang.String'/></method><method name='getApplicationIcon' return='android.graphics.drawable.Drawable'><parameter name='info' type='android.content.pm.ApplicationInfo'/></method><method name='getApplicationIcon' return='android.graphics.drawable.Drawable'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getApplicationInfo' return='android.content.pm.ApplicationInfo'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getApplicationLabel' return='java.lang.CharSequence'><parameter name='info' type='android.content.pm.ApplicationInfo'/></method><method name='getComponentEnabledSetting' return='int'><parameter name='componentName' type='android.content.ComponentName'/></method><method name='getDefaultActivityIcon' return='android.graphics.drawable.Drawable'/><method name='getDrawable' return='android.graphics.drawable.Drawable'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='getInstalledApplications' return='java.util.List&lt;android.content.pm.ApplicationInfo&gt;'><parameter name='flags' type='int'/></method><method name='getInstalledPackages' return='java.util.List&lt;android.content.pm.PackageInfo&gt;'><parameter name='flags' type='int'/></method><method name='getInstrumentationInfo' return='android.content.pm.InstrumentationInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getNameForUid' return='java.lang.String'><parameter name='uid' type='int'/></method><method name='getPackageGids' return='int[]'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPackageInfo' return='android.content.pm.PackageInfo'><parameter name='packageName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPackagesForUid' return='java.lang.String[]'><parameter name='uid' type='int'/></method><method name='getPermissionGroupInfo' return='android.content.pm.PermissionGroupInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPermissionInfo' return='android.content.pm.PermissionInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getPreferredActivities' return='int'><parameter name='outFilters' type='java.util.List&lt;android.content.IntentFilter&gt;'/><parameter name='outActivities' type='java.util.List&lt;android.content.ComponentName&gt;'/><parameter name='packageName' type='java.lang.String'/></method><method name='getPreferredPackages' return='java.util.List&lt;android.content.pm.PackageInfo&gt;'><parameter name='flags' type='int'/></method><method name='getReceiverInfo' return='android.content.pm.ActivityInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getResourcesForActivity' return='android.content.res.Resources'><parameter name='activityName' type='android.content.ComponentName'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getResourcesForApplication' return='android.content.res.Resources'><parameter name='app' type='android.content.pm.ApplicationInfo'/></method><method name='getResourcesForApplication' return='android.content.res.Resources'><parameter name='appPackageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getServiceInfo' return='android.content.pm.ServiceInfo'><parameter name='className' type='android.content.ComponentName'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='getText' return='java.lang.CharSequence'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='getXml' return='android.content.res.XmlResourceParser'><parameter name='packageName' type='java.lang.String'/><parameter name='resid' type='int'/><parameter name='appInfo' type='android.content.pm.ApplicationInfo'/></method><method name='installPackage' api_removed='4'><parameter name='packageURI' type='android.net.Uri'/><parameter name='observer' type='android.content.pm.IPackageInstallObserver'/><parameter name='flags' type='int'/></method><method name='queryBroadcastReceivers' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryContentProviders' return='java.util.List&lt;android.content.pm.ProviderInfo&gt;'><parameter name='processName' type='java.lang.String'/><parameter name='uid' type='int'/><parameter name='flags' type='int'/></method><method name='queryInstrumentation' return='java.util.List&lt;android.content.pm.InstrumentationInfo&gt;'><parameter name='targetPackage' type='java.lang.String'/><parameter name='flags' type='int'/></method><method name='queryIntentActivities' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryIntentActivityOptions' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='caller' type='android.content.ComponentName'/><parameter name='specifics' type='android.content.Intent[]'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryIntentServices' return='java.util.List&lt;android.content.pm.ResolveInfo&gt;'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='queryPermissionsByGroup' return='java.util.List&lt;android.content.pm.PermissionInfo&gt;'><parameter name='group' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method name='removePackageFromPreferred'><parameter name='packageName' type='java.lang.String'/></method><method name='removePermission'><parameter name='name' type='java.lang.String'/></method><method name='resolveActivity' return='android.content.pm.ResolveInfo'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='resolveContentProvider' return='android.content.pm.ProviderInfo'><parameter name='name' type='java.lang.String'/><parameter name='flags' type='int'/></method><method name='resolveService' return='android.content.pm.ResolveInfo'><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/></method><method name='setApplicationEnabledSetting'><parameter name='packageName' type='java.lang.String'/><parameter name='newState' type='int'/><parameter name='flags' type='int'/></method><method name='setComponentEnabledSetting'><parameter name='componentName' type='android.content.ComponentName'/><parameter name='newState' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='getLaunchIntentForPackage' return='android.content.Intent'><parameter name='packageName' type='java.lang.String'/><exception name='PackageManager.NameNotFoundException' type='android.content.pm.PackageManager.NameNotFoundException'/></method><method api_added='3' name='getSystemSharedLibraryNames' return='java.lang.String[]'/><method api_added='3' name='isSafeMode' return='boolean'/><method api_added='5' name='checkSignatures' return='int'><parameter name='uid1' type='int'/><parameter name='uid2' type='int'/></method><method api_added='5' name='getInstallerPackageName' return='java.lang.String'><parameter name='packageName' type='java.lang.String'/></method><method api_added='5' name='getSystemAvailableFeatures' return='android.content.pm.FeatureInfo[]'/><method api_added='5' name='hasSystemFeature' return='boolean'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='addPermissionAsync' return='boolean'><parameter name='info' type='android.content.pm.PermissionInfo'/></method><method api_added='8' name='canonicalToCurrentPackageNames' return='java.lang.String[]'><parameter name='names' type='java.lang.String[]'/></method><method api_added='8' name='currentToCanonicalPackageNames' return='java.lang.String[]'><parameter name='names' type='java.lang.String[]'/></method></class><class name='MockResources' extends='android.content.res.Resources'><constructor name='MockResources' type='android.test.mock.MockResources'/></class><class api_added='8' name='MockContentProvider' extends='android.content.ContentProvider'><constructor api_added='8' name='MockContentProvider' type='android.test.mock.MockContentProvider' visibility='protected'/><constructor api_added='8' name='MockContentProvider' type='android.test.mock.MockContentProvider'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='8' name='MockContentProvider' type='android.test.mock.MockContentProvider'><parameter name='context' type='android.content.Context'/><parameter name='readPermission' type='java.lang.String'/><parameter name='writePermission' type='java.lang.String'/><parameter name='pathPermissions' type='android.content.pm.PathPermission[]'/></constructor><method api_added='8' name='delete' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method><method api_added='8' name='getType' return='java.lang.String'><parameter name='uri' type='android.net.Uri'/></method><method api_added='8' name='insert' return='android.net.Uri'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/></method><method api_added='8' name='onCreate' return='boolean'/><method api_added='8' name='query' return='android.database.Cursor'><parameter name='uri' type='android.net.Uri'/><parameter name='projection' type='java.lang.String[]'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/><parameter name='sortOrder' type='java.lang.String'/></method><method api_added='8' name='update' return='int'><parameter name='uri' type='android.net.Uri'/><parameter name='values' type='android.content.ContentValues'/><parameter name='selection' type='java.lang.String'/><parameter name='selectionArgs' type='java.lang.String[]'/></method></class><class api_added='8' name='MockCursor' extends='java.lang.Object'><implements name='android.database.Cursor'/><constructor api_added='8' name='MockCursor' type='android.test.mock.MockCursor'/><method api_added='8' name='abortUpdates'/><method api_added='8' name='close'/><method api_added='8' name='commitUpdates' return='boolean'/><method api_added='8' name='commitUpdates' return='boolean'><parameter name='values' type='java.util.Map&lt;? extends java.lang.Long, ? extends java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt;'/></method><method api_added='8' name='copyStringToBuffer'><parameter name='columnIndex' type='int'/><parameter name='buffer' type='android.database.CharArrayBuffer'/></method><method api_added='8' name='deactivate'/><method api_added='8' name='deleteRow' return='boolean'/><method api_added='8' name='getBlob' return='byte[]'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getColumnCount' return='int'/><method api_added='8' name='getColumnIndex' return='int'><parameter name='columnName' type='java.lang.String'/></method><method api_added='8' name='getColumnIndexOrThrow' return='int'><parameter name='columnName' type='java.lang.String'/></method><method api_added='8' name='getColumnName' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getColumnNames' return='java.lang.String[]'/><method api_added='8' name='getCount' return='int'/><method api_added='8' name='getDouble' return='double'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getExtras' return='android.os.Bundle'/><method api_added='8' name='getFloat' return='float'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getInt' return='int'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getLong' return='long'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getPosition' return='int'/><method api_added='8' name='getShort' return='short'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getString' return='java.lang.String'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='getWantsAllOnMoveCalls' return='boolean'/><method api_added='8' name='hasUpdates' return='boolean'/><method api_added='8' name='isAfterLast' return='boolean'/><method api_added='8' name='isBeforeFirst' return='boolean'/><method api_added='8' name='isClosed' return='boolean'/><method api_added='8' name='isFirst' return='boolean'/><method api_added='8' name='isLast' return='boolean'/><method api_added='8' name='isNull' return='boolean'><parameter name='columnIndex' type='int'/></method><method api_added='8' name='move' return='boolean'><parameter name='offset' type='int'/></method><method api_added='8' name='moveToFirst' return='boolean'/><method api_added='8' name='moveToLast' return='boolean'/><method api_added='8' name='moveToNext' return='boolean'/><method api_added='8' name='moveToPosition' return='boolean'><parameter name='position' type='int'/></method><method api_added='8' name='moveToPrevious' return='boolean'/><method api_added='8' name='registerContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method api_added='8' name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method api_added='8' name='requery' return='boolean'/><method api_added='8' name='respond' return='android.os.Bundle'><parameter name='extras' type='android.os.Bundle'/></method><method api_added='8' name='setNotificationUri'><parameter name='cr' type='android.content.ContentResolver'/><parameter name='uri' type='android.net.Uri'/></method><method api_added='8' name='supportsUpdates' return='boolean'/><method api_added='8' name='unregisterContentObserver'><parameter name='observer' type='android.database.ContentObserver'/></method><method api_added='8' name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method api_added='8' name='updateBlob' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='byte[]'/></method><method api_added='8' name='updateDouble' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='double'/></method><method api_added='8' name='updateFloat' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='float'/></method><method api_added='8' name='updateInt' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='int'/></method><method api_added='8' name='updateLong' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='long'/></method><method api_added='8' name='updateShort' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='short'/></method><method api_added='8' name='updateString' return='boolean'><parameter name='columnIndex' type='int'/><parameter name='value' type='java.lang.String'/></method><method api_added='8' name='updateToNull' return='boolean'><parameter name='columnIndex' type='int'/></method></class></package><package name='android.test.suitebuilder'><class name='TestMethod' extends='java.lang.Object'><constructor name='TestMethod' type='android.test.suitebuilder.TestMethod'><parameter name='method' type='java.lang.reflect.Method'/><parameter name='enclosingClass' type='java.lang.Class&lt;? extends junit.framework.TestCase&gt;'/><parameter name='testCase' type='junit.framework.TestCase'/></constructor><method name='createTest' return='junit.framework.TestCase'><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/><exception name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException'/></method><method name='getAnnotation' return='T'><parameter name='annotationClass' type='java.lang.Class&lt;T&gt;'/></method><method name='getEnclosingClass' return='java.lang.Class&lt;? extends junit.framework.TestCase&gt;'/><method name='getEnclosingClassname' return='java.lang.String'/><method name='getName' return='java.lang.String'/></class><class name='TestSuiteBuilder' extends='java.lang.Object'><constructor name='TestSuiteBuilder' type='android.test.suitebuilder.TestSuiteBuilder'><parameter name='clazz' type='java.lang.Class'/></constructor><constructor name='TestSuiteBuilder' type='android.test.suitebuilder.TestSuiteBuilder'><parameter name='name' type='java.lang.String'/><parameter name='classLoader' type='java.lang.ClassLoader'/></constructor><method name='addRequirements' return='android.test.suitebuilder.TestSuiteBuilder'><parameter name='predicates' type='java.util.List&lt;com.android.internal.util.Predicate&lt;android.test.suitebuilder.TestMethod&gt;&gt;'/></method><method name='addRequirements' final='true' return='android.test.suitebuilder.TestSuiteBuilder'><parameter name='predicates' type='com.android.internal.util.Predicate&lt;android.test.suitebuilder.TestMethod&gt;...'/></method><method name='build' final='true' return='junit.framework.TestSuite'/><method name='excludePackages' return='android.test.suitebuilder.TestSuiteBuilder'><parameter name='packageNames' type='java.lang.String...'/></method><method name='getSuiteName' visibility='protected' return='java.lang.String'/><method name='includeAllPackagesUnderHere' final='true' return='android.test.suitebuilder.TestSuiteBuilder'/><method name='includePackages' return='android.test.suitebuilder.TestSuiteBuilder'><parameter name='packageNames' type='java.lang.String...'/></method><method name='named' return='android.test.suitebuilder.TestSuiteBuilder'><parameter name='newSuiteName' type='java.lang.String'/></method></class><class name='TestSuiteBuilder.FailedToCreateTests' extends='junit.framework.TestCase' static='true'><constructor name='TestSuiteBuilder.FailedToCreateTests' type='android.test.suitebuilder.TestSuiteBuilder.FailedToCreateTests'><parameter name='exception' type='java.lang.Exception'/></constructor><method name='testSuiteConstructionFailed'/></class></package><package name='android.test.suitebuilder.annotation'><class name='Smoke' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='Suppress' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class api_added='2' name='LargeTest' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class api_added='2' name='MediumTest' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class api_added='2' name='SmallTest' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class></package><package name='android.text'><class name='AlteredCharSequence' extends='java.lang.Object'><implements name='java.lang.CharSequence'/><implements name='android.text.GetChars'/><method name='charAt' return='char'><parameter name='off' type='int'/></method><method name='getChars'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='off' type='int'/></method><method name='length' return='int'/><method name='make' static='true' return='android.text.AlteredCharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='sub' type='char[]'/><parameter name='substart' type='int'/><parameter name='subend' type='int'/></method><method name='subSequence' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method></class><class name='AndroidCharacter' extends='java.lang.Object'><constructor name='AndroidCharacter' type='android.text.AndroidCharacter'/><field api_added='8' name='EAST_ASIAN_WIDTH_AMBIGUOUS' final='true' static='true' value='1' type='int'/><field api_added='8' name='EAST_ASIAN_WIDTH_FULL_WIDTH' final='true' static='true' value='3' type='int'/><field api_added='8' name='EAST_ASIAN_WIDTH_HALF_WIDTH' final='true' static='true' value='2' type='int'/><field api_added='8' name='EAST_ASIAN_WIDTH_NARROW' final='true' static='true' value='4' type='int'/><field api_added='8' name='EAST_ASIAN_WIDTH_NEUTRAL' final='true' static='true' value='0' type='int'/><field api_added='8' name='EAST_ASIAN_WIDTH_WIDE' final='true' static='true' value='5' type='int'/><method name='getDirectionalities' native='true' static='true'><parameter name='src' type='char[]'/><parameter name='dest' type='byte[]'/><parameter name='count' type='int'/></method><method name='getMirror' native='true' static='true' return='char'><parameter name='ch' type='char'/></method><method name='mirror' native='true' static='true' return='boolean'><parameter name='text' type='char[]'/><parameter name='start' type='int'/><parameter name='count' type='int'/></method><method api_added='8' name='getEastAsianWidth' native='true' static='true' return='int'><parameter name='input' type='char'/></method><method api_added='8' name='getEastAsianWidths' native='true' static='true'><parameter name='src' type='char[]'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='dest' type='byte[]'/></method></class><class name='Annotation' extends='java.lang.Object'><implements name='android.text.ParcelableSpan'/><constructor name='Annotation' type='android.text.Annotation'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getKey' return='java.lang.String'/><method name='getValue' return='java.lang.String'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='AutoText' extends='java.lang.Object'><method name='get' static='true' return='java.lang.String'><parameter name='src' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='view' type='android.view.View'/></method><method api_added='3' name='getSize' static='true' return='int'><parameter name='view' type='android.view.View'/></method></class><class name='BoringLayout' extends='android.text.Layout'><implements name='android.text.TextUtils.EllipsizeCallback'/><constructor name='BoringLayout' type='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/></constructor><constructor name='BoringLayout' type='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/><parameter name='ellipsize' type='android.text.TextUtils.TruncateAt'/><parameter name='ellipsizedWidth' type='int'/></constructor><method name='ellipsized'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='getBottomPadding' return='int'/><method name='getEllipsisCount' return='int'><parameter name='line' type='int'/></method><method name='getEllipsisStart' return='int'><parameter name='line' type='int'/></method><method name='getLineContainsTab' return='boolean'><parameter name='line' type='int'/></method><method name='getLineCount' return='int'/><method name='getLineDescent' return='int'><parameter name='line' type='int'/></method><method name='getLineDirections' final='true' return='android.text.Layout.Directions'><parameter name='line' type='int'/></method><method name='getLineStart' return='int'><parameter name='line' type='int'/></method><method name='getLineTop' return='int'><parameter name='line' type='int'/></method><method name='getParagraphDirection' return='int'><parameter name='line' type='int'/></method><method name='getTopPadding' return='int'/><method name='isBoring' static='true' return='android.text.BoringLayout.Metrics'><parameter name='text' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/></method><method name='isBoring' static='true' return='android.text.BoringLayout.Metrics'><parameter name='text' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/></method><method name='make' static='true' return='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/></method><method name='make' static='true' return='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/><parameter name='ellipsize' type='android.text.TextUtils.TruncateAt'/><parameter name='ellipsizedWidth' type='int'/></method><method name='replaceOrMake' return='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/></method><method name='replaceOrMake' return='android.text.BoringLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='metrics' type='android.text.BoringLayout.Metrics'/><parameter name='includepad' type='boolean'/><parameter name='ellipsize' type='android.text.TextUtils.TruncateAt'/><parameter name='ellipsizedWidth' type='int'/></method></class><class name='BoringLayout.Metrics' extends='android.graphics.Paint.FontMetricsInt' static='true'><constructor name='BoringLayout.Metrics' type='android.text.BoringLayout.Metrics'/><field name='width' type='int'/></class><class name='ClipboardManager' extends='java.lang.Object'><method name='getText' return='java.lang.CharSequence'/><method name='hasText' return='boolean'/><method name='setText'><parameter name='text' type='java.lang.CharSequence'/></method></class><class name='DynamicLayout' extends='android.text.Layout'><constructor name='DynamicLayout' type='android.text.DynamicLayout'><parameter name='base' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='width' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/></constructor><constructor name='DynamicLayout' type='android.text.DynamicLayout'><parameter name='base' type='java.lang.CharSequence'/><parameter name='display' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='width' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/></constructor><constructor name='DynamicLayout' type='android.text.DynamicLayout'><parameter name='base' type='java.lang.CharSequence'/><parameter name='display' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='width' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/><parameter name='ellipsize' type='android.text.TextUtils.TruncateAt'/><parameter name='ellipsizedWidth' type='int'/></constructor><method name='getBottomPadding' return='int'/><method name='getEllipsisCount' return='int'><parameter name='line' type='int'/></method><method name='getEllipsisStart' return='int'><parameter name='line' type='int'/></method><method name='getLineContainsTab' return='boolean'><parameter name='line' type='int'/></method><method name='getLineCount' return='int'/><method name='getLineDescent' return='int'><parameter name='line' type='int'/></method><method name='getLineDirections' final='true' return='android.text.Layout.Directions'><parameter name='line' type='int'/></method><method name='getLineStart' return='int'><parameter name='line' type='int'/></method><method name='getLineTop' return='int'><parameter name='line' type='int'/></method><method name='getParagraphDirection' return='int'><parameter name='line' type='int'/></method><method name='getTopPadding' return='int'/></class><class name='Editable.Factory' extends='java.lang.Object' static='true'><constructor name='Editable.Factory' type='android.text.Editable.Factory'/><method name='getInstance' static='true' return='android.text.Editable.Factory'/><method name='newEditable' return='android.text.Editable'><parameter name='source' type='java.lang.CharSequence'/></method></class><class name='Html' extends='java.lang.Object'><method name='fromHtml' static='true' return='android.text.Spanned'><parameter name='source' type='java.lang.String'/></method><method name='fromHtml' static='true' return='android.text.Spanned'><parameter name='source' type='java.lang.String'/><parameter name='imageGetter' type='android.text.Html.ImageGetter'/><parameter name='tagHandler' type='android.text.Html.TagHandler'/></method><method name='toHtml' static='true' return='java.lang.String'><parameter name='text' type='android.text.Spanned'/></method></class><class name='InputFilter.AllCaps' extends='java.lang.Object' static='true'><implements name='android.text.InputFilter'/><constructor name='InputFilter.AllCaps' type='android.text.InputFilter.AllCaps'/><method name='filter' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.text.Spanned'/><parameter name='dstart' type='int'/><parameter name='dend' type='int'/></method></class><class name='InputFilter.LengthFilter' extends='java.lang.Object' static='true'><implements name='android.text.InputFilter'/><constructor name='InputFilter.LengthFilter' type='android.text.InputFilter.LengthFilter'><parameter name='max' type='int'/></constructor><method name='filter' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.text.Spanned'/><parameter name='dstart' type='int'/><parameter name='dend' type='int'/></method></class><class name='Layout' extends='java.lang.Object' abstract='true'><constructor name='Layout' type='android.text.Layout' visibility='protected'><parameter name='text' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='width' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='spacingMult' type='float'/><parameter name='spacingAdd' type='float'/></constructor><field name='DIR_LEFT_TO_RIGHT' final='true' static='true' value='1' type='int'/><field name='DIR_RIGHT_TO_LEFT' final='true' static='true' value='-1' type='int'/><method name='draw'><parameter name='c' type='android.graphics.Canvas'/></method><method name='draw'><parameter name='c' type='android.graphics.Canvas'/><parameter name='highlight' type='android.graphics.Path'/><parameter name='highlightpaint' type='android.graphics.Paint'/><parameter name='cursorOffsetVertical' type='int'/><parameter name='highlightPaint' type='android.graphics.Paint'/></method><method name='getAlignment' final='true' return='android.text.Layout.Alignment'/><method name='getBottomPadding' abstract='true' return='int'/><method name='getCursorPath'><parameter name='point' type='int'/><parameter name='dest' type='android.graphics.Path'/><parameter name='editingBuffer' type='java.lang.CharSequence'/></method><method name='getDesiredWidth' static='true' return='float'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/></method><method name='getDesiredWidth' static='true' return='float'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='paint' type='android.text.TextPaint'/></method><method name='getEllipsisCount' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getEllipsisStart' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getEllipsizedWidth' return='int'/><method name='getHeight' return='int'/><method name='getLineAscent' final='true' return='int'><parameter name='line' type='int'/></method><method name='getLineBaseline' final='true' return='int'><parameter name='line' type='int'/></method><method name='getLineBottom' final='true' return='int'><parameter name='line' type='int'/></method><method name='getLineBounds' return='int'><parameter name='line' type='int'/><parameter name='bounds' type='android.graphics.Rect'/></method><method name='getLineContainsTab' abstract='true' return='boolean'><parameter name='line' type='int'/></method><method name='getLineCount' abstract='true' return='int'/><method name='getLineDescent' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getLineDirections' abstract='true' return='android.text.Layout.Directions'><parameter name='line' type='int'/></method><method name='getLineEnd' final='true' return='int'><parameter name='line' type='int'/></method><method name='getLineForOffset' return='int'><parameter name='offset' type='int'/></method><method name='getLineForVertical' return='int'><parameter name='vertical' type='int'/></method><method name='getLineLeft' return='float'><parameter name='line' type='int'/></method><method name='getLineMax' return='float'><parameter name='line' type='int'/></method><method name='getLineRight' return='float'><parameter name='line' type='int'/></method><method name='getLineStart' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getLineTop' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getLineVisibleEnd' return='int'><parameter name='line' type='int'/></method><method name='getLineWidth' return='float'><parameter name='line' type='int'/></method><method name='getOffsetForHorizontal' return='int'><parameter name='line' type='int'/><parameter name='horiz' type='float'/></method><method name='getOffsetToLeftOf' return='int'><parameter name='offset' type='int'/></method><method name='getOffsetToRightOf' return='int'><parameter name='offset' type='int'/></method><method name='getPaint' final='true' return='android.text.TextPaint'/><method name='getParagraphAlignment' final='true' return='android.text.Layout.Alignment'><parameter name='line' type='int'/></method><method name='getParagraphDirection' abstract='true' return='int'><parameter name='line' type='int'/></method><method name='getParagraphLeft' final='true' return='int'><parameter name='line' type='int'/></method><method name='getParagraphRight' final='true' return='int'><parameter name='line' type='int'/></method><method name='getPrimaryHorizontal' return='float'><parameter name='offset' type='int'/></method><method name='getSecondaryHorizontal' return='float'><parameter name='offset' type='int'/></method><method name='getSelectionPath'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.graphics.Path'/></method><method name='getSpacingAdd' final='true' return='float'/><method name='getSpacingMultiplier' final='true' return='float'/><method name='getText' final='true' return='java.lang.CharSequence'/><method name='getTopPadding' abstract='true' return='int'/><method name='getWidth' final='true' return='int'/><method name='increaseWidthTo' final='true'><parameter name='wid' type='int'/></method><method name='isSpanned' final='true' visibility='protected' return='boolean'/></class><class name='Layout.Alignment' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.text.Layout.Alignment'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.text.Layout.Alignment[]'/></class><class name='Layout.Directions' extends='java.lang.Object' static='true'/><class name='LoginFilter' extends='java.lang.Object' abstract='true'><implements name='android.text.InputFilter'/><method name='filter' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.text.Spanned'/><parameter name='dstart' type='int'/><parameter name='dend' type='int'/></method><method name='isAllowed' abstract='true' return='boolean'><parameter name='c' type='char'/></method><method name='onInvalidCharacter'><parameter name='c' type='char'/></method><method name='onStart'/><method name='onStop'/></class><class name='LoginFilter.PasswordFilterGMail' extends='android.text.LoginFilter' static='true'><constructor name='LoginFilter.PasswordFilterGMail' type='android.text.LoginFilter.PasswordFilterGMail'/><constructor name='LoginFilter.PasswordFilterGMail' type='android.text.LoginFilter.PasswordFilterGMail'><parameter name='appendInvalid' type='boolean'/></constructor><method name='isAllowed' return='boolean'><parameter name='c' type='char'/></method></class><class name='LoginFilter.UsernameFilterGMail' extends='android.text.LoginFilter' static='true'><constructor name='LoginFilter.UsernameFilterGMail' type='android.text.LoginFilter.UsernameFilterGMail'/><constructor name='LoginFilter.UsernameFilterGMail' type='android.text.LoginFilter.UsernameFilterGMail'><parameter name='appendInvalid' type='boolean'/></constructor><method name='isAllowed' return='boolean'><parameter name='c' type='char'/></method></class><class name='LoginFilter.UsernameFilterGeneric' extends='android.text.LoginFilter' static='true'><constructor name='LoginFilter.UsernameFilterGeneric' type='android.text.LoginFilter.UsernameFilterGeneric'/><constructor name='LoginFilter.UsernameFilterGeneric' type='android.text.LoginFilter.UsernameFilterGeneric'><parameter name='appendInvalid' type='boolean'/></constructor><method name='isAllowed' return='boolean'><parameter name='c' type='char'/></method></class><class name='Selection' extends='java.lang.Object'><field name='SELECTION_END' final='true' static='true' type='java.lang.Object'/><field name='SELECTION_START' final='true' static='true' type='java.lang.Object'/><method name='extendDown' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='extendLeft' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='extendRight' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='extendSelection' final='true' static='true'><parameter name='text' type='android.text.Spannable'/><parameter name='index' type='int'/></method><method name='extendToLeftEdge' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='extendToRightEdge' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='extendUp' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='getSelectionEnd' final='true' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/></method><method name='getSelectionStart' final='true' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/></method><method name='moveDown' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='moveLeft' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='moveRight' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='moveToLeftEdge' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='moveToRightEdge' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='moveUp' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='layout' type='android.text.Layout'/></method><method name='removeSelection' final='true' static='true'><parameter name='text' type='android.text.Spannable'/></method><method name='selectAll' final='true' static='true'><parameter name='text' type='android.text.Spannable'/></method><method name='setSelection' static='true'><parameter name='text' type='android.text.Spannable'/><parameter name='start' type='int'/><parameter name='stop' type='int'/></method><method name='setSelection' final='true' static='true'><parameter name='text' type='android.text.Spannable'/><parameter name='index' type='int'/></method></class><class name='Spannable.Factory' extends='java.lang.Object' static='true'><constructor name='Spannable.Factory' type='android.text.Spannable.Factory'/><method name='getInstance' static='true' return='android.text.Spannable.Factory'/><method name='newSpannable' return='android.text.Spannable'><parameter name='source' type='java.lang.CharSequence'/></method></class><class name='SpannableString' extends='android.text.SpannableStringInternal'><implements name='java.lang.CharSequence'/><implements name='android.text.GetChars'/><implements name='android.text.Spannable'/><constructor name='SpannableString' type='android.text.SpannableString'><parameter name='source' type='java.lang.CharSequence'/></constructor><method name='removeSpan'><parameter name='what' type='java.lang.Object'/></method><method name='setSpan'><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='flags' type='int'/></method><method name='subSequence' final='true' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='valueOf' static='true' return='android.text.SpannableString'><parameter name='source' type='java.lang.CharSequence'/></method></class><class name='SpannableStringBuilder' extends='java.lang.Object'><implements name='java.lang.Appendable'/><implements name='java.lang.CharSequence'/><implements name='android.text.Editable'/><implements name='android.text.GetChars'/><implements name='android.text.Spannable'/><constructor name='SpannableStringBuilder' type='android.text.SpannableStringBuilder'/><constructor name='SpannableStringBuilder' type='android.text.SpannableStringBuilder'><parameter name='text' type='java.lang.CharSequence'/></constructor><constructor name='SpannableStringBuilder' type='android.text.SpannableStringBuilder'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></constructor><method name='append' return='android.text.SpannableStringBuilder'><parameter name='text' type='java.lang.CharSequence'/></method><method name='append' return='android.text.SpannableStringBuilder'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='append' return='android.text.SpannableStringBuilder'><parameter name='text' type='char'/></method><method name='charAt' return='char'><parameter name='where' type='int'/></method><method name='clear'/><method name='clearSpans'/><method name='delete' return='android.text.SpannableStringBuilder'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='getChars'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='destoff' type='int'/></method><method name='getFilters' return='android.text.InputFilter[]'/><method name='getSpanEnd' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpanFlags' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpanStart' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpans' return='T[]'><parameter name='queryStart' type='int'/><parameter name='queryEnd' type='int'/><parameter name='kind' type='java.lang.Class&lt;T&gt;'/></method><method name='insert' return='android.text.SpannableStringBuilder'><parameter name='where' type='int'/><parameter name='tb' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='insert' return='android.text.SpannableStringBuilder'><parameter name='where' type='int'/><parameter name='tb' type='java.lang.CharSequence'/></method><method name='length' return='int'/><method name='nextSpanTransition' return='int'><parameter name='start' type='int'/><parameter name='limit' type='int'/><parameter name='kind' type='java.lang.Class'/></method><method name='removeSpan'><parameter name='what' type='java.lang.Object'/></method><method name='replace' return='android.text.SpannableStringBuilder'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='tb' type='java.lang.CharSequence'/></method><method name='replace' return='android.text.SpannableStringBuilder'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='tb' type='java.lang.CharSequence'/><parameter name='tbstart' type='int'/><parameter name='tbend' type='int'/></method><method name='setFilters'><parameter name='filters' type='android.text.InputFilter[]'/></method><method name='setSpan'><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='flags' type='int'/></method><method name='subSequence' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='valueOf' static='true' return='android.text.SpannableStringBuilder'><parameter name='source' type='java.lang.CharSequence'/></method></class><class name='SpannableStringInternal' extends='java.lang.Object' abstract='true' visibility=''><method name='charAt' final='true' return='char'><parameter name='i' type='int'/></method><method name='getChars' final='true'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='off' type='int'/></method><method name='getSpanEnd' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpanFlags' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpanStart' return='int'><parameter name='what' type='java.lang.Object'/></method><method name='getSpans' return='T[]'><parameter name='queryStart' type='int'/><parameter name='queryEnd' type='int'/><parameter name='kind' type='java.lang.Class&lt;T&gt;'/></method><method name='length' final='true' return='int'/><method name='nextSpanTransition' return='int'><parameter name='start' type='int'/><parameter name='limit' type='int'/><parameter name='kind' type='java.lang.Class'/></method><method name='toString' final='true' return='java.lang.String'/></class><class name='SpannedString' final='true' extends='android.text.SpannableStringInternal'><implements name='java.lang.CharSequence'/><implements name='android.text.GetChars'/><implements name='android.text.Spanned'/><constructor name='SpannedString' type='android.text.SpannedString'><parameter name='source' type='java.lang.CharSequence'/></constructor><method name='subSequence' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='valueOf' static='true' return='android.text.SpannedString'><parameter name='source' type='java.lang.CharSequence'/></method></class><class name='StaticLayout' extends='android.text.Layout'><constructor name='StaticLayout' type='android.text.StaticLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='width' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/></constructor><constructor name='StaticLayout' type='android.text.StaticLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='bufstart' type='int'/><parameter name='bufend' type='int'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/></constructor><constructor name='StaticLayout' type='android.text.StaticLayout'><parameter name='source' type='java.lang.CharSequence'/><parameter name='bufstart' type='int'/><parameter name='bufend' type='int'/><parameter name='paint' type='android.text.TextPaint'/><parameter name='outerwidth' type='int'/><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='spacingmult' type='float'/><parameter name='spacingadd' type='float'/><parameter name='includepad' type='boolean'/><parameter name='ellipsize' type='android.text.TextUtils.TruncateAt'/><parameter name='ellipsizedWidth' type='int'/></constructor><method name='getBottomPadding' return='int'/><method name='getEllipsisCount' return='int'><parameter name='line' type='int'/></method><method name='getEllipsisStart' return='int'><parameter name='line' type='int'/></method><method name='getLineContainsTab' return='boolean'><parameter name='line' type='int'/></method><method name='getLineCount' return='int'/><method name='getLineDescent' return='int'><parameter name='line' type='int'/></method><method name='getLineDirections' final='true' return='android.text.Layout.Directions'><parameter name='line' type='int'/></method><method name='getLineStart' return='int'><parameter name='line' type='int'/></method><method name='getLineTop' return='int'><parameter name='line' type='int'/></method><method name='getParagraphDirection' return='int'><parameter name='line' type='int'/></method><method name='getTopPadding' return='int'/></class><class name='TextPaint' extends='android.graphics.Paint'><constructor name='TextPaint' type='android.text.TextPaint'/><constructor name='TextPaint' type='android.text.TextPaint'><parameter name='flags' type='int'/></constructor><constructor name='TextPaint' type='android.text.TextPaint'><parameter name='p' type='android.graphics.Paint'/></constructor><field name='baselineShift' type='int'/><field name='bgColor' type='int'/><field name='drawableState' value='null' type='int[]'/><field name='linkColor' type='int'/><field api_added='5' name='density' type='float'/><method name='set'><parameter name='tp' type='android.text.TextPaint'/></method></class><class name='TextUtils' extends='java.lang.Object'><field name='CHAR_SEQUENCE_CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='CAP_MODE_CHARACTERS' final='true' static='true' value='4096' type='int'/><field api_added='3' name='CAP_MODE_SENTENCES' final='true' static='true' value='16384' type='int'/><field api_added='3' name='CAP_MODE_WORDS' final='true' static='true' value='8192' type='int'/><method name='commaEllipsize' static='true' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/><parameter name='p' type='android.text.TextPaint'/><parameter name='avail' type='float'/><parameter name='oneMore' type='java.lang.String'/><parameter name='more' type='java.lang.String'/></method><method name='concat' static='true' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence...'/></method><method name='copySpansFrom' static='true'><parameter name='source' type='android.text.Spanned'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='kind' type='java.lang.Class'/><parameter name='dest' type='android.text.Spannable'/><parameter name='destoff' type='int'/></method><method name='ellipsize' static='true' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/><parameter name='p' type='android.text.TextPaint'/><parameter name='avail' type='float'/><parameter name='where' type='android.text.TextUtils.TruncateAt'/></method><method name='ellipsize' static='true' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/><parameter name='p' type='android.text.TextPaint'/><parameter name='avail' type='float'/><parameter name='where' type='android.text.TextUtils.TruncateAt'/><parameter name='preserveLength' type='boolean'/><parameter name='callback' type='android.text.TextUtils.EllipsizeCallback'/></method><method name='equals' static='true' return='boolean'><parameter name='a' type='java.lang.CharSequence'/><parameter name='b' type='java.lang.CharSequence'/></method><method name='expandTemplate' static='true' return='java.lang.CharSequence'><parameter name='template' type='java.lang.CharSequence'/><parameter name='values' type='java.lang.CharSequence...'/></method><method name='getChars' static='true'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='destoff' type='int'/></method><method name='getOffsetAfter' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='offset' type='int'/></method><method name='getOffsetBefore' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='offset' type='int'/></method><method name='getReverse' static='true' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='getTrimmedLength' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/></method><method name='htmlEncode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/><parameter name='start' type='int'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='needle' type='java.lang.CharSequence'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='needle' type='java.lang.CharSequence'/><parameter name='start' type='int'/></method><method name='indexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='needle' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='isDigitsOnly' static='true' return='boolean'><parameter name='str' type='java.lang.CharSequence'/></method><method name='isEmpty' static='true' return='boolean'><parameter name='str' type='java.lang.CharSequence'/></method><method name='isGraphic' static='true' return='boolean'><parameter name='str' type='java.lang.CharSequence'/></method><method name='isGraphic' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='join' static='true' return='java.lang.String'><parameter name='delimiter' type='java.lang.CharSequence'/><parameter name='tokens' type='java.lang.Object[]'/></method><method name='join' static='true' return='java.lang.String'><parameter name='delimiter' type='java.lang.CharSequence'/><parameter name='tokens' type='java.lang.Iterable'/></method><method name='lastIndexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/></method><method name='lastIndexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/><parameter name='last' type='int'/></method><method name='lastIndexOf' static='true' return='int'><parameter name='s' type='java.lang.CharSequence'/><parameter name='ch' type='char'/><parameter name='start' type='int'/><parameter name='last' type='int'/></method><method name='regionMatches' static='true' return='boolean'><parameter name='one' type='java.lang.CharSequence'/><parameter name='toffset' type='int'/><parameter name='two' type='java.lang.CharSequence'/><parameter name='ooffset' type='int'/><parameter name='len' type='int'/></method><method name='replace' static='true' return='java.lang.CharSequence'><parameter name='template' type='java.lang.CharSequence'/><parameter name='sources' type='java.lang.String[]'/><parameter name='destinations' type='java.lang.CharSequence[]'/></method><method name='split' static='true' return='java.lang.String[]'><parameter name='text' type='java.lang.String'/><parameter name='expression' type='java.lang.String'/></method><method name='split' static='true' return='java.lang.String[]'><parameter name='text' type='java.lang.String'/><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='stringOrSpannedString' static='true' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/></method><method name='substring' static='true' return='java.lang.String'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='writeToParcel' static='true'><parameter name='cs' type='java.lang.CharSequence'/><parameter name='p' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method><method api_added='3' name='dumpSpans' static='true'><parameter name='cs' type='java.lang.CharSequence'/><parameter name='printer' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method api_added='3' name='getCapsMode' static='true' return='int'><parameter name='cs' type='java.lang.CharSequence'/><parameter name='off' type='int'/><parameter name='reqModes' type='int'/></method></class><class name='TextUtils.SimpleStringSplitter' extends='java.lang.Object' static='true'><implements name='java.util.Iterator'/><implements name='android.text.TextUtils.StringSplitter'/><constructor name='TextUtils.SimpleStringSplitter' type='android.text.TextUtils.SimpleStringSplitter'><parameter name='delimiter' type='char'/></constructor><method name='hasNext' return='boolean'/><method name='iterator' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='next' return='java.lang.String'/><method name='remove'/><method name='setString'><parameter name='string' type='java.lang.String'/></method></class><class name='TextUtils.TruncateAt' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.text.TextUtils.TruncateAt'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.text.TextUtils.TruncateAt[]'/></class><class api_added='3' name='NoCopySpan.Concrete' extends='java.lang.Object' static='true'><implements name='android.text.NoCopySpan'/><constructor api_added='3' name='NoCopySpan.Concrete' type='android.text.NoCopySpan.Concrete'/></class><interface name='Editable' abstract='true'><implements name='java.lang.Appendable'/><implements name='java.lang.CharSequence'/><implements name='android.text.GetChars'/><implements name='android.text.Spannable'/><method name='append' abstract='true' return='android.text.Editable'><parameter name='text' type='java.lang.CharSequence'/></method><method name='append' abstract='true' return='android.text.Editable'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='append' abstract='true' return='android.text.Editable'><parameter name='text' type='char'/></method><method name='clear' abstract='true'/><method name='clearSpans' abstract='true'/><method name='delete' abstract='true' return='android.text.Editable'><parameter name='st' type='int'/><parameter name='en' type='int'/></method><method name='getFilters' abstract='true' return='android.text.InputFilter[]'/><method name='insert' abstract='true' return='android.text.Editable'><parameter name='where' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='insert' abstract='true' return='android.text.Editable'><parameter name='where' type='int'/><parameter name='text' type='java.lang.CharSequence'/></method><method name='replace' abstract='true' return='android.text.Editable'><parameter name='st' type='int'/><parameter name='en' type='int'/><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='replace' abstract='true' return='android.text.Editable'><parameter name='st' type='int'/><parameter name='en' type='int'/><parameter name='text' type='java.lang.CharSequence'/></method><method name='setFilters' abstract='true'><parameter name='filters' type='android.text.InputFilter[]'/></method></interface><interface name='GetChars' abstract='true'><implements name='java.lang.CharSequence'/><method name='getChars' abstract='true'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='destoff' type='int'/></method></interface><interface name='Html.ImageGetter' abstract='true' static='true'><method name='getDrawable' abstract='true' return='android.graphics.drawable.Drawable'><parameter name='source' type='java.lang.String'/></method></interface><interface name='Html.TagHandler' abstract='true' static='true'><method name='handleTag' abstract='true'><parameter name='opening' type='boolean'/><parameter name='tag' type='java.lang.String'/><parameter name='output' type='android.text.Editable'/><parameter name='xmlReader' type='org.xml.sax.XMLReader'/></method></interface><interface name='InputFilter' abstract='true'><method name='filter' abstract='true' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.text.Spanned'/><parameter name='dstart' type='int'/><parameter name='dend' type='int'/></method></interface><interface name='SpanWatcher' abstract='true'><implements name='android.text.NoCopySpan'/><method name='onSpanAdded' abstract='true'><parameter name='text' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='onSpanChanged' abstract='true'><parameter name='text' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='ostart' type='int'/><parameter name='oend' type='int'/><parameter name='nstart' type='int'/><parameter name='nend' type='int'/></method><method name='onSpanRemoved' abstract='true'><parameter name='text' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method></interface><interface name='Spannable' abstract='true'><implements name='android.text.Spanned'/><method name='removeSpan' abstract='true'><parameter name='what' type='java.lang.Object'/></method><method name='setSpan' abstract='true'><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='flags' type='int'/></method></interface><interface name='Spanned' abstract='true'><implements name='java.lang.CharSequence'/><field name='SPAN_EXCLUSIVE_EXCLUSIVE' final='true' static='true' value='33' type='int'/><field name='SPAN_EXCLUSIVE_INCLUSIVE' final='true' static='true' value='34' type='int'/><field name='SPAN_INCLUSIVE_EXCLUSIVE' final='true' static='true' value='17' type='int'/><field name='SPAN_INCLUSIVE_INCLUSIVE' final='true' static='true' value='18' type='int'/><field name='SPAN_MARK_MARK' final='true' static='true' value='17' type='int'/><field name='SPAN_MARK_POINT' final='true' static='true' value='18' type='int'/><field name='SPAN_PARAGRAPH' final='true' static='true' value='51' type='int'/><field name='SPAN_POINT_MARK' final='true' static='true' value='33' type='int'/><field name='SPAN_POINT_POINT' final='true' static='true' value='34' type='int'/><field name='SPAN_PRIORITY' final='true' static='true' value='16711680' type='int'/><field name='SPAN_PRIORITY_SHIFT' final='true' static='true' value='16' type='int'/><field name='SPAN_USER' final='true' static='true' value='-16777216' type='int'/><field name='SPAN_USER_SHIFT' final='true' static='true' value='24' type='int'/><field api_added='3' name='SPAN_COMPOSING' final='true' static='true' value='256' type='int'/><field api_added='3' name='SPAN_INTERMEDIATE' final='true' static='true' value='512' type='int'/><field api_added='3' name='SPAN_POINT_MARK_MASK' final='true' static='true' value='51' type='int'/><method name='getSpanEnd' abstract='true' return='int'><parameter name='tag' type='java.lang.Object'/></method><method name='getSpanFlags' abstract='true' return='int'><parameter name='tag' type='java.lang.Object'/></method><method name='getSpanStart' abstract='true' return='int'><parameter name='tag' type='java.lang.Object'/></method><method name='getSpans' abstract='true' return='T[]'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='type' type='java.lang.Class&lt;T&gt;'/></method><method name='nextSpanTransition' abstract='true' return='int'><parameter name='start' type='int'/><parameter name='limit' type='int'/><parameter name='type' type='java.lang.Class'/></method></interface><interface name='TextUtils.EllipsizeCallback' abstract='true' static='true'><method name='ellipsized' abstract='true'><parameter name='start' type='int'/><parameter name='end' type='int'/></method></interface><interface name='TextUtils.StringSplitter' abstract='true' static='true'><implements name='java.lang.Iterable'/><method name='setString' abstract='true'><parameter name='string' type='java.lang.String'/></method></interface><interface name='TextWatcher' abstract='true'><implements name='android.text.NoCopySpan'/><method name='afterTextChanged' abstract='true'><parameter name='s' type='android.text.Editable'/></method><method name='beforeTextChanged' abstract='true'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='after' type='int'/></method><method name='onTextChanged' abstract='true'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='before' type='int'/><parameter name='count' type='int'/></method></interface><interface api_added='3' name='InputType' abstract='true'><field api_added='3' name='TYPE_CLASS_DATETIME' final='true' static='true' value='4' type='int'/><field api_added='3' name='TYPE_CLASS_NUMBER' final='true' static='true' value='2' type='int'/><field api_added='3' name='TYPE_CLASS_PHONE' final='true' static='true' value='3' type='int'/><field api_added='3' name='TYPE_CLASS_TEXT' final='true' static='true' value='1' type='int'/><field api_added='3' name='TYPE_DATETIME_VARIATION_DATE' final='true' static='true' value='16' type='int'/><field api_added='3' name='TYPE_DATETIME_VARIATION_NORMAL' final='true' static='true' value='0' type='int'/><field api_added='3' name='TYPE_DATETIME_VARIATION_TIME' final='true' static='true' value='32' type='int'/><field api_added='3' name='TYPE_MASK_CLASS' final='true' static='true' value='15' type='int'/><field api_added='3' name='TYPE_MASK_FLAGS' final='true' static='true' value='16773120' type='int'/><field api_added='3' name='TYPE_MASK_VARIATION' final='true' static='true' value='4080' type='int'/><field api_added='3' name='TYPE_NULL' final='true' static='true' value='0' type='int'/><field api_added='3' name='TYPE_NUMBER_FLAG_DECIMAL' final='true' static='true' value='8192' type='int'/><field api_added='3' name='TYPE_NUMBER_FLAG_SIGNED' final='true' static='true' value='4096' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_AUTO_COMPLETE' final='true' static='true' value='65536' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_AUTO_CORRECT' final='true' static='true' value='32768' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_CAP_CHARACTERS' final='true' static='true' value='4096' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_CAP_SENTENCES' final='true' static='true' value='16384' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_CAP_WORDS' final='true' static='true' value='8192' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_IME_MULTI_LINE' final='true' static='true' value='262144' type='int'/><field api_added='3' name='TYPE_TEXT_FLAG_MULTI_LINE' final='true' static='true' value='131072' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_EMAIL_ADDRESS' final='true' static='true' value='32' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_EMAIL_SUBJECT' final='true' static='true' value='48' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_FILTER' final='true' static='true' value='176' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_LONG_MESSAGE' final='true' static='true' value='80' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_NORMAL' final='true' static='true' value='0' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_PASSWORD' final='true' static='true' value='128' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_PERSON_NAME' final='true' static='true' value='96' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_PHONETIC' final='true' static='true' value='192' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_POSTAL_ADDRESS' final='true' static='true' value='112' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_SHORT_MESSAGE' final='true' static='true' value='64' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_URI' final='true' static='true' value='16' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_VISIBLE_PASSWORD' final='true' static='true' value='144' type='int'/><field api_added='3' name='TYPE_TEXT_VARIATION_WEB_EDIT_TEXT' final='true' static='true' value='160' type='int'/><field api_added='5' name='TYPE_TEXT_FLAG_NO_SUGGESTIONS' final='true' static='true' value='524288' type='int'/></interface><interface api_added='3' name='NoCopySpan' abstract='true'/><interface api_added='3' name='ParcelableSpan' abstract='true'><implements name='android.os.Parcelable'/><method api_added='3' name='getSpanTypeId' abstract='true' return='int'/></interface></package><package name='android.text.method'><class name='ArrowKeyMovementMethod' extends='java.lang.Object'><implements name='android.text.method.MovementMethod'/><constructor name='ArrowKeyMovementMethod' type='android.text.method.ArrowKeyMovementMethod'/><method name='canSelectArbitrarily' return='boolean'/><method name='getInstance' static='true' return='android.text.method.MovementMethod'/><method name='initialize'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/></method><method name='onKeyDown' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onTakeFocus'><parameter name='view' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='dir' type='int'/></method><method name='onTouchEvent' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' api_removed='4' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='onKeyOther' return='boolean'><parameter name='view' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='4' name='onTrackballEvent' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method></class><class name='BaseKeyListener' extends='android.text.method.MetaKeyKeyListener' abstract='true'><implements name='android.text.method.KeyListener'/><constructor name='BaseKeyListener' type='android.text.method.BaseKeyListener'/><method name='backspace' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='onKeyOther' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='event' type='android.view.KeyEvent'/></method></class><class name='CharacterPickerDialog' extends='android.app.Dialog'><implements name='android.widget.AdapterView.OnItemClickListener'/><implements name='android.view.View.OnClickListener'/><constructor name='CharacterPickerDialog' type='android.text.method.CharacterPickerDialog'><parameter name='context' type='android.content.Context'/><parameter name='view' type='android.view.View'/><parameter name='text' type='android.text.Editable'/><parameter name='options' type='java.lang.String'/><parameter name='insert' type='boolean'/></constructor><method name='onClick'><parameter name='v' type='android.view.View'/></method><method name='onItemClick'><parameter name='parent' type='android.widget.AdapterView'/><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method></class><class name='DateKeyListener' extends='android.text.method.NumberKeyListener'><constructor name='DateKeyListener' type='android.text.method.DateKeyListener'/><field name='CHARACTERS' final='true' static='true' value='null' type='char[]'/><method name='getAcceptedChars' visibility='protected' return='char[]'/><method name='getInstance' static='true' return='android.text.method.DateKeyListener'/><method api_added='3' name='getInputType' return='int'/></class><class name='DateTimeKeyListener' extends='android.text.method.NumberKeyListener'><constructor name='DateTimeKeyListener' type='android.text.method.DateTimeKeyListener'/><field name='CHARACTERS' final='true' static='true' value='null' type='char[]'/><method name='getAcceptedChars' visibility='protected' return='char[]'/><method name='getInstance' static='true' return='android.text.method.DateTimeKeyListener'/><method api_added='3' name='getInputType' return='int'/></class><class name='DialerKeyListener' extends='android.text.method.NumberKeyListener'><constructor name='DialerKeyListener' type='android.text.method.DialerKeyListener'/><field name='CHARACTERS' final='true' static='true' value='null' type='char[]'/><method name='getAcceptedChars' visibility='protected' return='char[]'/><method name='getInstance' static='true' return='android.text.method.DialerKeyListener'/><method api_added='3' name='getInputType' return='int'/></class><class name='DigitsKeyListener' extends='android.text.method.NumberKeyListener'><constructor name='DigitsKeyListener' type='android.text.method.DigitsKeyListener'/><constructor name='DigitsKeyListener' type='android.text.method.DigitsKeyListener'><parameter name='sign' type='boolean'/><parameter name='decimal' type='boolean'/></constructor><method name='getAcceptedChars' visibility='protected' return='char[]'/><method name='getInstance' static='true' return='android.text.method.DigitsKeyListener'/><method name='getInstance' static='true' return='android.text.method.DigitsKeyListener'><parameter name='sign' type='boolean'/><parameter name='decimal' type='boolean'/></method><method name='getInstance' static='true' return='android.text.method.DigitsKeyListener'><parameter name='accepted' type='java.lang.String'/></method><method api_added='3' name='getInputType' return='int'/></class><class name='HideReturnsTransformationMethod' extends='android.text.method.ReplacementTransformationMethod'><constructor name='HideReturnsTransformationMethod' type='android.text.method.HideReturnsTransformationMethod'/><method name='getInstance' static='true' return='android.text.method.HideReturnsTransformationMethod'/><method name='getOriginal' visibility='protected' return='char[]'/><method name='getReplacement' visibility='protected' return='char[]'/></class><class name='LinkMovementMethod' extends='android.text.method.ScrollingMovementMethod'><constructor name='LinkMovementMethod' type='android.text.method.LinkMovementMethod'/><method name='getInstance' static='true' return='android.text.method.MovementMethod'/></class><class name='MetaKeyKeyListener' extends='java.lang.Object' abstract='true'><constructor name='MetaKeyKeyListener' type='android.text.method.MetaKeyKeyListener'/><field name='META_ALT_LOCKED' final='true' static='true' value='512' type='int'/><field name='META_ALT_ON' final='true' static='true' value='2' type='int'/><field name='META_CAP_LOCKED' final='true' static='true' value='256' type='int'/><field name='META_SHIFT_ON' final='true' static='true' value='1' type='int'/><field name='META_SYM_LOCKED' final='true' static='true' value='1024' type='int'/><field name='META_SYM_ON' final='true' static='true' value='4' type='int'/><method name='adjustMetaAfterKeypress' static='true'><parameter name='content' type='android.text.Spannable'/></method><method name='getMetaState' final='true' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/></method><method name='getMetaState' final='true' static='true' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='meta' type='int'/></method><method name='isMetaTracker' static='true' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='what' type='java.lang.Object'/></method><method name='onKeyDown' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='resetLockedMeta' static='true' visibility='protected'><parameter name='content' type='android.text.Spannable'/></method><method name='resetMetaState' static='true'><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='adjustMetaAfterKeypress' static='true' return='long'><parameter name='state' type='long'/></method><method api_added='3' name='clearMetaKeyState'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='states' type='int'/></method><method api_added='3' name='clearMetaKeyState' static='true'><parameter name='content' type='android.text.Editable'/><parameter name='states' type='int'/></method><method api_added='3' name='clearMetaKeyState' return='long'><parameter name='state' type='long'/><parameter name='which' type='int'/></method><method api_added='3' name='getMetaState' final='true' static='true' return='int'><parameter name='state' type='long'/></method><method api_added='3' name='getMetaState' final='true' static='true' return='int'><parameter name='state' type='long'/><parameter name='meta' type='int'/></method><method api_added='3' name='handleKeyDown' static='true' return='long'><parameter name='state' type='long'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='handleKeyUp' static='true' return='long'><parameter name='state' type='long'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='isSelectingMetaTracker' static='true' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='what' type='java.lang.Object'/></method><method api_added='3' name='resetLockedMeta' static='true' return='long'><parameter name='state' type='long'/></method></class><class name='MultiTapKeyListener' extends='android.text.method.BaseKeyListener'><implements name='android.text.SpanWatcher'/><constructor name='MultiTapKeyListener' type='android.text.method.MultiTapKeyListener'><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/><parameter name='autotext' type='boolean'/></constructor><method name='getInstance' static='true' return='android.text.method.MultiTapKeyListener'><parameter name='autotext' type='boolean'/><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/></method><method name='onSpanAdded'><parameter name='s' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='onSpanChanged'><parameter name='buf' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='s' type='int'/><parameter name='e' type='int'/><parameter name='start' type='int'/><parameter name='stop' type='int'/></method><method name='onSpanRemoved'><parameter name='s' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method api_added='3' name='getInputType' return='int'/></class><class name='NumberKeyListener' extends='android.text.method.BaseKeyListener' abstract='true'><implements name='android.text.InputFilter'/><constructor name='NumberKeyListener' type='android.text.method.NumberKeyListener'/><method name='filter' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='android.text.Spanned'/><parameter name='dstart' type='int'/><parameter name='dend' type='int'/></method><method name='getAcceptedChars' abstract='true' visibility='protected' return='char[]'/><method name='lookup' visibility='protected' return='int'><parameter name='event' type='android.view.KeyEvent'/><parameter name='content' type='android.text.Spannable'/></method><method name='ok' static='true' visibility='protected' return='boolean'><parameter name='accept' type='char[]'/><parameter name='c' type='char'/></method></class><class name='PasswordTransformationMethod' extends='java.lang.Object'><implements name='android.text.TextWatcher'/><implements name='android.text.method.TransformationMethod'/><constructor name='PasswordTransformationMethod' type='android.text.method.PasswordTransformationMethod'/><method name='afterTextChanged'><parameter name='s' type='android.text.Editable'/></method><method name='beforeTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='after' type='int'/></method><method name='getInstance' static='true' return='android.text.method.PasswordTransformationMethod'/><method name='getTransformation' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='view' type='android.view.View'/></method><method name='onFocusChanged'><parameter name='view' type='android.view.View'/><parameter name='sourceText' type='java.lang.CharSequence'/><parameter name='focused' type='boolean'/><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method><method name='onTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='before' type='int'/><parameter name='count' type='int'/></method></class><class name='QwertyKeyListener' extends='android.text.method.BaseKeyListener'><constructor name='QwertyKeyListener' type='android.text.method.QwertyKeyListener'><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/><parameter name='autotext' type='boolean'/></constructor><method name='getInstance' static='true' return='android.text.method.QwertyKeyListener'><parameter name='autotext' type='boolean'/><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/></method><method name='markAsReplaced' static='true'><parameter name='content' type='android.text.Spannable'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='original' type='java.lang.String'/></method><method api_added='3' name='getInputType' return='int'/></class><class name='ReplacementTransformationMethod' extends='java.lang.Object' abstract='true'><implements name='android.text.method.TransformationMethod'/><constructor name='ReplacementTransformationMethod' type='android.text.method.ReplacementTransformationMethod'/><method name='getOriginal' abstract='true' visibility='protected' return='char[]'/><method name='getReplacement' abstract='true' visibility='protected' return='char[]'/><method name='getTransformation' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='v' type='android.view.View'/></method><method name='onFocusChanged'><parameter name='view' type='android.view.View'/><parameter name='sourceText' type='java.lang.CharSequence'/><parameter name='focused' type='boolean'/><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method></class><class name='ScrollingMovementMethod' extends='java.lang.Object'><implements name='android.text.method.MovementMethod'/><constructor name='ScrollingMovementMethod' type='android.text.method.ScrollingMovementMethod'/><method name='canSelectArbitrarily' return='boolean'/><method name='down' visibility='protected' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method><method name='getInstance' static='true' return='android.text.method.MovementMethod'/><method name='initialize'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/></method><method name='left' visibility='protected' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method><method name='onKeyDown' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onTakeFocus'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='dir' type='int'/></method><method name='onTouchEvent' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' api_removed='4' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/><parameter name='text' type='android.text.Spannable'/></method><method name='right' visibility='protected' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method><method name='up' visibility='protected' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method><method api_added='3' name='onKeyOther' return='boolean'><parameter name='view' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='4' name='onTrackballEvent' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method></class><class name='SingleLineTransformationMethod' extends='android.text.method.ReplacementTransformationMethod'><constructor name='SingleLineTransformationMethod' type='android.text.method.SingleLineTransformationMethod'/><method name='getInstance' static='true' return='android.text.method.SingleLineTransformationMethod'/><method name='getOriginal' visibility='protected' return='char[]'/><method name='getReplacement' visibility='protected' return='char[]'/></class><class name='TextKeyListener' extends='android.text.method.BaseKeyListener'><implements name='android.text.SpanWatcher'/><constructor name='TextKeyListener' type='android.text.method.TextKeyListener'><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/><parameter name='autotext' type='boolean'/></constructor><method name='clear' static='true'><parameter name='e' type='android.text.Editable'/></method><method name='getInstance' static='true' return='android.text.method.TextKeyListener'><parameter name='autotext' type='boolean'/><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/></method><method name='getInstance' static='true' return='android.text.method.TextKeyListener'/><method name='onSpanAdded'><parameter name='s' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='onSpanChanged'><parameter name='s' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='st' type='int'/><parameter name='en' type='int'/></method><method name='onSpanRemoved'><parameter name='s' type='android.text.Spannable'/><parameter name='what' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='release'/><method name='shouldCap' static='true' return='boolean'><parameter name='cap' type='android.text.method.TextKeyListener.Capitalize'/><parameter name='cs' type='java.lang.CharSequence'/><parameter name='off' type='int'/></method><method api_added='3' name='getInputType' return='int'/></class><class name='TextKeyListener.Capitalize' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.text.method.TextKeyListener.Capitalize'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.text.method.TextKeyListener.Capitalize[]'/></class><class name='TimeKeyListener' extends='android.text.method.NumberKeyListener'><constructor name='TimeKeyListener' type='android.text.method.TimeKeyListener'/><field name='CHARACTERS' final='true' static='true' value='null' type='char[]'/><method name='getAcceptedChars' visibility='protected' return='char[]'/><method name='getInstance' static='true' return='android.text.method.TimeKeyListener'/><method api_added='3' name='getInputType' return='int'/></class><class name='Touch' extends='java.lang.Object'><method name='onTouchEvent' static='true' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method><method name='scrollTo' static='true'><parameter name='widget' type='android.widget.TextView'/><parameter name='layout' type='android.text.Layout'/><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method api_added='3' name='getInitialScrollX' static='true' return='int'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method><method api_added='3' name='getInitialScrollY' static='true' return='int'><parameter name='widget' type='android.widget.TextView'/><parameter name='buffer' type='android.text.Spannable'/></method></class><interface name='KeyListener' abstract='true'><method name='onKeyDown' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='text' type='android.text.Editable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='text' type='android.text.Editable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='clearMetaKeyState' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='content' type='android.text.Editable'/><parameter name='states' type='int'/></method><method api_added='3' name='getInputType' abstract='true' return='int'/><method api_added='3' name='onKeyOther' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='text' type='android.text.Editable'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface name='MovementMethod' abstract='true'><method name='canSelectArbitrarily' abstract='true' return='boolean'/><method name='initialize' abstract='true'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/></method><method name='onKeyDown' abstract='true' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' abstract='true' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onTakeFocus' abstract='true'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='direction' type='int'/></method><method name='onTouchEvent' abstract='true' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' abstract='true' return='boolean'><parameter name='widget' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='3' name='onKeyOther' abstract='true' return='boolean'><parameter name='view' type='android.widget.TextView'/><parameter name='text' type='android.text.Spannable'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface name='TransformationMethod' abstract='true'><method name='getTransformation' abstract='true' return='java.lang.CharSequence'><parameter name='source' type='java.lang.CharSequence'/><parameter name='view' type='android.view.View'/></method><method name='onFocusChanged' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='sourceText' type='java.lang.CharSequence'/><parameter name='focused' type='boolean'/><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method></interface></package><package name='android.text.style'><class name='AbsoluteSizeSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='AbsoluteSizeSpan' type='android.text.style.AbsoluteSizeSpan'><parameter name='size' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getSize' return='int'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='5' name='getDip' return='boolean'/></class><class name='AlignmentSpan.Standard' extends='java.lang.Object' static='true'><implements name='android.text.style.AlignmentSpan'/><implements name='android.text.ParcelableSpan'/><constructor name='AlignmentSpan.Standard' type='android.text.style.AlignmentSpan.Standard'><parameter name='align' type='android.text.Layout.Alignment'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getAlignment' return='android.text.Layout.Alignment'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='BackgroundColorSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.ParcelableSpan'/><implements name='android.text.style.UpdateAppearance'/><constructor name='BackgroundColorSpan' type='android.text.style.BackgroundColorSpan'><parameter name='color' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getBackgroundColor' return='int'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='BulletSpan' extends='java.lang.Object'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.ParcelableSpan'/><constructor name='BulletSpan' type='android.text.style.BulletSpan'/><constructor name='BulletSpan' type='android.text.style.BulletSpan'><parameter name='gapWidth' type='int'/></constructor><constructor name='BulletSpan' type='android.text.style.BulletSpan'><parameter name='gapWidth' type='int'/><parameter name='color' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><field name='STANDARD_GAP_WIDTH' final='true' static='true' value='2' type='int'/><method name='drawLeadingMargin'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='l' type='android.text.Layout'/></method><method name='getLeadingMargin' return='int'><parameter name='first' type='boolean'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='CharacterStyle' extends='java.lang.Object' abstract='true'><constructor name='CharacterStyle' type='android.text.style.CharacterStyle'/><method name='getUnderlying' return='android.text.style.CharacterStyle'/><method name='updateDrawState' abstract='true'><parameter name='tp' type='android.text.TextPaint'/></method><method name='wrap' static='true' return='android.text.style.CharacterStyle'><parameter name='cs' type='android.text.style.CharacterStyle'/></method></class><class name='ClickableSpan' extends='android.text.style.CharacterStyle' abstract='true'><implements name='android.text.style.UpdateAppearance'/><constructor name='ClickableSpan' type='android.text.style.ClickableSpan'/><method name='onClick' abstract='true'><parameter name='widget' type='android.view.View'/></method><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method></class><class name='DrawableMarginSpan' extends='java.lang.Object'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.style.LineHeightSpan'/><constructor name='DrawableMarginSpan' type='android.text.style.DrawableMarginSpan'><parameter name='b' type='android.graphics.drawable.Drawable'/></constructor><constructor name='DrawableMarginSpan' type='android.text.style.DrawableMarginSpan'><parameter name='b' type='android.graphics.drawable.Drawable'/><parameter name='pad' type='int'/></constructor><method name='chooseHeight'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='istartv' type='int'/><parameter name='v' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/></method><method name='drawLeadingMargin'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='layout' type='android.text.Layout'/></method><method name='getLeadingMargin' return='int'><parameter name='first' type='boolean'/></method></class><class name='DynamicDrawableSpan' extends='android.text.style.ReplacementSpan' abstract='true'><constructor name='DynamicDrawableSpan' type='android.text.style.DynamicDrawableSpan'><parameter name='verticalAlignment' type='int'/></constructor><field api_added='3' name='ALIGN_BASELINE' final='true' static='true' value='1' type='int'/><field api_added='3' name='ALIGN_BOTTOM' final='true' static='true' value='0' type='int'/><field api_added='3' name='mVerticalAlignment' final='true' type='int' visibility='protected'/><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='x' type='float'/><parameter name='top' type='int'/><parameter name='y' type='int'/><parameter name='bottom' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='getDrawable' abstract='true' return='android.graphics.drawable.Drawable'/><method name='getSize' return='int'><parameter name='paint' type='android.graphics.Paint'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/></method><method api_added='3' name='getVerticalAlignment' return='int'/></class><class name='ForegroundColorSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.ParcelableSpan'/><implements name='android.text.style.UpdateAppearance'/><constructor name='ForegroundColorSpan' type='android.text.style.ForegroundColorSpan'><parameter name='color' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getForegroundColor' return='int'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='IconMarginSpan' extends='java.lang.Object'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.style.LineHeightSpan'/><constructor name='IconMarginSpan' type='android.text.style.IconMarginSpan'><parameter name='b' type='android.graphics.Bitmap'/></constructor><constructor name='IconMarginSpan' type='android.text.style.IconMarginSpan'><parameter name='b' type='android.graphics.Bitmap'/><parameter name='pad' type='int'/></constructor><method name='chooseHeight'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='istartv' type='int'/><parameter name='v' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/></method><method name='drawLeadingMargin'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='layout' type='android.text.Layout'/></method><method name='getLeadingMargin' return='int'><parameter name='first' type='boolean'/></method></class><class name='ImageSpan' extends='android.text.style.DynamicDrawableSpan'><constructor name='ImageSpan' type='android.text.style.ImageSpan'><parameter name='b' type='android.graphics.Bitmap'/></constructor><constructor name='ImageSpan' type='android.text.style.ImageSpan'><parameter name='d' type='android.graphics.drawable.Drawable'/></constructor><constructor name='ImageSpan' type='android.text.style.ImageSpan'><parameter name='d' type='android.graphics.drawable.Drawable'/><parameter name='source' type='java.lang.String'/></constructor><constructor name='ImageSpan' type='android.text.style.ImageSpan'><parameter name='context' type='android.content.Context'/><parameter name='uri' type='android.net.Uri'/></constructor><constructor name='ImageSpan' type='android.text.style.ImageSpan'><parameter name='context' type='android.content.Context'/><parameter name='resourceId' type='int'/><parameter name='verticalAlignment' type='int'/></constructor><method name='getDrawable' return='android.graphics.drawable.Drawable'/><method name='getSource' return='java.lang.String'/></class><class name='LeadingMarginSpan.Standard' extends='java.lang.Object' static='true'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.ParcelableSpan'/><constructor name='LeadingMarginSpan.Standard' type='android.text.style.LeadingMarginSpan.Standard'><parameter name='first' type='int'/><parameter name='rest' type='int'/></constructor><constructor name='LeadingMarginSpan.Standard' type='android.text.style.LeadingMarginSpan.Standard'><parameter name='every' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='drawLeadingMargin'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='layout' type='android.text.Layout'/></method><method name='getLeadingMargin' return='int'><parameter name='first' type='boolean'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='MaskFilterSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.style.UpdateAppearance'/><constructor name='MaskFilterSpan' type='android.text.style.MaskFilterSpan'><parameter name='filter' type='android.graphics.MaskFilter'/></constructor><method name='getMaskFilter' return='android.graphics.MaskFilter'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method></class><class name='MetricAffectingSpan' extends='android.text.style.CharacterStyle' abstract='true'><implements name='android.text.style.UpdateLayout'/><constructor name='MetricAffectingSpan' type='android.text.style.MetricAffectingSpan'/><method name='updateMeasureState' abstract='true'><parameter name='p' type='android.text.TextPaint'/></method></class><class name='QuoteSpan' extends='java.lang.Object'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.ParcelableSpan'/><constructor name='QuoteSpan' type='android.text.style.QuoteSpan'/><constructor name='QuoteSpan' type='android.text.style.QuoteSpan'><parameter name='color' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='drawLeadingMargin'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='layout' type='android.text.Layout'/></method><method name='getColor' return='int'/><method name='getLeadingMargin' return='int'><parameter name='first' type='boolean'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='RasterizerSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.style.UpdateAppearance'/><constructor name='RasterizerSpan' type='android.text.style.RasterizerSpan'><parameter name='r' type='android.graphics.Rasterizer'/></constructor><method name='getRasterizer' return='android.graphics.Rasterizer'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method></class><class name='RelativeSizeSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='RelativeSizeSpan' type='android.text.style.RelativeSizeSpan'><parameter name='proportion' type='float'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getSizeChange' return='float'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ReplacementSpan' extends='android.text.style.MetricAffectingSpan' abstract='true'><constructor name='ReplacementSpan' type='android.text.style.ReplacementSpan'/><method name='draw' abstract='true'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='x' type='float'/><parameter name='top' type='int'/><parameter name='y' type='int'/><parameter name='bottom' type='int'/><parameter name='paint' type='android.graphics.Paint'/></method><method name='getSize' abstract='true' return='int'><parameter name='paint' type='android.graphics.Paint'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/></method><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='p' type='android.text.TextPaint'/></method></class><class name='ScaleXSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='ScaleXSpan' type='android.text.style.ScaleXSpan'><parameter name='proportion' type='float'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getScaleX' return='float'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='StrikethroughSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.ParcelableSpan'/><implements name='android.text.style.UpdateAppearance'/><constructor name='StrikethroughSpan' type='android.text.style.StrikethroughSpan'><parameter name='src' type='android.os.Parcel'/></constructor><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='StyleSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='StyleSpan' type='android.text.style.StyleSpan'><parameter name='style' type='int'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getStyle' return='int'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='paint' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='SubscriptSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='SubscriptSpan' type='android.text.style.SubscriptSpan'><parameter name='src' type='android.os.Parcel'/></constructor><method name='updateDrawState'><parameter name='tp' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='tp' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='SuperscriptSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='SuperscriptSpan' type='android.text.style.SuperscriptSpan'><parameter name='src' type='android.os.Parcel'/></constructor><method name='updateDrawState'><parameter name='tp' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='tp' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='TabStopSpan.Standard' extends='java.lang.Object' static='true'><implements name='android.text.style.TabStopSpan'/><constructor name='TabStopSpan.Standard' type='android.text.style.TabStopSpan.Standard'><parameter name='where' type='int'/></constructor><method name='getTabStop' return='int'/></class><class name='TextAppearanceSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='TextAppearanceSpan' type='android.text.style.TextAppearanceSpan'><parameter name='context' type='android.content.Context'/><parameter name='appearance' type='int'/></constructor><constructor name='TextAppearanceSpan' type='android.text.style.TextAppearanceSpan'><parameter name='context' type='android.content.Context'/><parameter name='appearance' type='int'/><parameter name='colorList' type='int'/></constructor><constructor name='TextAppearanceSpan' type='android.text.style.TextAppearanceSpan'><parameter name='family' type='java.lang.String'/><parameter name='style' type='int'/><parameter name='size' type='int'/><parameter name='color' type='android.content.res.ColorStateList'/><parameter name='linkColor' type='android.content.res.ColorStateList'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getFamily' return='java.lang.String'/><method name='getLinkTextColor' return='android.content.res.ColorStateList'/><method name='getTextColor' return='android.content.res.ColorStateList'/><method name='getTextSize' return='int'/><method name='getTextStyle' return='int'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='TypefaceSpan' extends='android.text.style.MetricAffectingSpan'><implements name='android.text.ParcelableSpan'/><constructor name='TypefaceSpan' type='android.text.style.TypefaceSpan'><parameter name='family' type='java.lang.String'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getFamily' return='java.lang.String'/><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method name='updateMeasureState'><parameter name='paint' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='URLSpan' extends='android.text.style.ClickableSpan'><implements name='android.text.ParcelableSpan'/><constructor name='URLSpan' type='android.text.style.URLSpan'><parameter name='url' type='java.lang.String'/><parameter name='src' type='android.os.Parcel'/></constructor><method name='getURL' return='java.lang.String'/><method name='onClick'><parameter name='widget' type='android.view.View'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='UnderlineSpan' extends='android.text.style.CharacterStyle'><implements name='android.text.ParcelableSpan'/><implements name='android.text.style.UpdateAppearance'/><constructor name='UnderlineSpan' type='android.text.style.UnderlineSpan'><parameter name='src' type='android.os.Parcel'/></constructor><method name='updateDrawState'><parameter name='ds' type='android.text.TextPaint'/></method><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getSpanTypeId' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><interface name='AlignmentSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/><method name='getAlignment' abstract='true' return='android.text.Layout.Alignment'/></interface><interface name='LeadingMarginSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/><method name='drawLeadingMargin' abstract='true'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='x' type='int'/><parameter name='dir' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='first' type='boolean'/><parameter name='layout' type='android.text.Layout'/></method><method name='getLeadingMargin' abstract='true' return='int'><parameter name='first' type='boolean'/></method></interface><interface name='LineBackgroundSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/><method name='drawBackground' abstract='true'><parameter name='c' type='android.graphics.Canvas'/><parameter name='p' type='android.graphics.Paint'/><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='top' type='int'/><parameter name='baseline' type='int'/><parameter name='bottom' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='lnum' type='int'/></method></interface><interface name='LineHeightSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/><implements name='android.text.style.WrapTogetherSpan'/><method name='chooseHeight' abstract='true'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='spanstartv' type='int'/><parameter name='v' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/></method></interface><interface name='ParagraphStyle' abstract='true'/><interface name='TabStopSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/><method name='getTabStop' abstract='true' return='int'/></interface><interface name='UpdateLayout' abstract='true'><implements name='android.text.style.UpdateAppearance'/></interface><interface name='WrapTogetherSpan' abstract='true'><implements name='android.text.style.ParagraphStyle'/></interface><interface api_added='3' name='UpdateAppearance' abstract='true'/><interface api_added='5' name='LineHeightSpan.WithDensity' abstract='true' static='true'><implements name='android.text.style.LineHeightSpan'/><method api_added='5' name='chooseHeight' abstract='true'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='spanstartv' type='int'/><parameter name='v' type='int'/><parameter name='fm' type='android.graphics.Paint.FontMetricsInt'/><parameter name='paint' type='android.text.TextPaint'/></method></interface><interface api_added='8' name='LeadingMarginSpan.LeadingMarginSpan2' abstract='true' static='true'><implements name='android.text.style.LeadingMarginSpan'/><implements name='android.text.style.WrapTogetherSpan'/><method api_added='8' name='getLeadingMarginLineCount' abstract='true' return='int'/></interface></package><package name='android.text.util'><class name='Linkify' extends='java.lang.Object'><constructor name='Linkify' type='android.text.util.Linkify'/><field name='ALL' final='true' static='true' value='15' type='int'/><field name='EMAIL_ADDRESSES' final='true' static='true' value='2' type='int'/><field name='MAP_ADDRESSES' final='true' static='true' value='8' type='int'/><field name='PHONE_NUMBERS' final='true' static='true' value='4' type='int'/><field name='WEB_URLS' final='true' static='true' value='1' type='int'/><field name='sPhoneNumberMatchFilter' final='true' static='true' type='android.text.util.Linkify.MatchFilter'/><field name='sPhoneNumberTransformFilter' final='true' static='true' type='android.text.util.Linkify.TransformFilter'/><field name='sUrlMatchFilter' final='true' static='true' type='android.text.util.Linkify.MatchFilter'/><method name='addLinks' final='true' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='mask' type='int'/></method><method name='addLinks' final='true' static='true' return='boolean'><parameter name='text' type='android.widget.TextView'/><parameter name='mask' type='int'/></method><method name='addLinks' final='true' static='true'><parameter name='text' type='android.widget.TextView'/><parameter name='pattern' type='java.util.regex.Pattern'/><parameter name='scheme' type='java.lang.String'/></method><method name='addLinks' final='true' static='true'><parameter name='text' type='android.widget.TextView'/><parameter name='p' type='java.util.regex.Pattern'/><parameter name='scheme' type='java.lang.String'/><parameter name='matchFilter' type='android.text.util.Linkify.MatchFilter'/><parameter name='transformFilter' type='android.text.util.Linkify.TransformFilter'/></method><method name='addLinks' final='true' static='true' return='boolean'><parameter name='text' type='android.text.Spannable'/><parameter name='pattern' type='java.util.regex.Pattern'/><parameter name='scheme' type='java.lang.String'/></method><method name='addLinks' final='true' static='true' return='boolean'><parameter name='s' type='android.text.Spannable'/><parameter name='p' type='java.util.regex.Pattern'/><parameter name='scheme' type='java.lang.String'/><parameter name='matchFilter' type='android.text.util.Linkify.MatchFilter'/><parameter name='transformFilter' type='android.text.util.Linkify.TransformFilter'/></method></class><class name='Rfc822Token' extends='java.lang.Object'><constructor name='Rfc822Token' type='android.text.util.Rfc822Token'><parameter name='name' type='java.lang.String'/><parameter name='address' type='java.lang.String'/><parameter name='comment' type='java.lang.String'/></constructor><method name='getAddress' return='java.lang.String'/><method name='getComment' return='java.lang.String'/><method name='getName' return='java.lang.String'/><method name='quoteComment' static='true' return='java.lang.String'><parameter name='comment' type='java.lang.String'/></method><method name='quoteName' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='quoteNameIfNecessary' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='setAddress'><parameter name='address' type='java.lang.String'/></method><method name='setComment'><parameter name='comment' type='java.lang.String'/></method><method name='setName'><parameter name='name' type='java.lang.String'/></method></class><class name='Rfc822Tokenizer' extends='java.lang.Object'><implements name='android.widget.MultiAutoCompleteTextView.Tokenizer'/><constructor name='Rfc822Tokenizer' type='android.text.util.Rfc822Tokenizer'/><method name='findTokenEnd' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='findTokenStart' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='terminateToken' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/></method><method name='tokenize' static='true' return='android.text.util.Rfc822Token[]'><parameter name='text' type='java.lang.CharSequence'/></method><method api_added='8' name='tokenize' static='true'><parameter name='text' type='java.lang.CharSequence'/><parameter name='out' type='java.util.Collection&lt;android.text.util.Rfc822Token&gt;'/></method></class><interface name='Linkify.MatchFilter' abstract='true' static='true'><method name='acceptMatch' abstract='true' return='boolean'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method></interface><interface name='Linkify.TransformFilter' abstract='true' static='true'><method name='transformUrl' abstract='true' return='java.lang.String'><parameter name='match' type='java.util.regex.Matcher'/><parameter name='url' type='java.lang.String'/></method></interface></package><package name='android.util'><class name='AndroidException' extends='java.lang.Exception'><constructor name='AndroidException' type='android.util.AndroidException'/><constructor name='AndroidException' type='android.util.AndroidException'><parameter name='name' type='java.lang.String'/></constructor><constructor name='AndroidException' type='android.util.AndroidException'><parameter name='cause' type='java.lang.Exception'/></constructor></class><class name='AndroidRuntimeException' extends='java.lang.RuntimeException'><constructor name='AndroidRuntimeException' type='android.util.AndroidRuntimeException'/><constructor name='AndroidRuntimeException' type='android.util.AndroidRuntimeException'><parameter name='name' type='java.lang.String'/></constructor><constructor name='AndroidRuntimeException' type='android.util.AndroidRuntimeException'><parameter name='cause' type='java.lang.Exception'/></constructor></class><class name='Config' final='true' extends='java.lang.Object'><constructor name='Config' type='android.util.Config'/><field name='DEBUG' final='true' static='true' value='false' type='boolean'/><field name='LOGD' final='true' static='true' value='true' type='boolean' deprecated='4'/><field name='LOGV' final='true' static='true' value='false' type='boolean' deprecated='4'/><field name='PROFILE' final='true' static='true' value='false' type='boolean' deprecated='4'/><field name='RELEASE' final='true' static='true' value='true' type='boolean' deprecated='4'/></class><class name='DebugUtils' extends='java.lang.Object'><constructor name='DebugUtils' type='android.util.DebugUtils'/><method name='isObjectSelected' static='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method></class><class name='DisplayMetrics' extends='java.lang.Object'><constructor name='DisplayMetrics' type='android.util.DisplayMetrics'/><field name='density' type='float'/><field name='heightPixels' type='int'/><field name='scaledDensity' type='float'/><field name='widthPixels' type='int'/><field name='xdpi' type='float'/><field name='ydpi' type='float'/><field api_added='4' name='DENSITY_DEFAULT' final='true' static='true' value='160' type='int'/><field api_added='4' name='DENSITY_HIGH' final='true' static='true' value='240' type='int'/><field api_added='4' name='DENSITY_LOW' final='true' static='true' value='120' type='int'/><field api_added='4' name='DENSITY_MEDIUM' final='true' static='true' value='160' type='int'/><field api_added='4' name='densityDpi' type='int'/><method name='setTo'><parameter name='o' type='android.util.DisplayMetrics'/></method><method name='setToDefaults'/></class><class name='EventLogTags' extends='java.lang.Object' deprecated='8'><constructor name='EventLogTags' type='android.util.EventLogTags'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='EventLogTags' type='android.util.EventLogTags'><parameter name='input' type='java.io.BufferedReader'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='get' return='android.util.EventLogTags.Description'><parameter name='name' type='java.lang.String'/></method><method name='get' return='android.util.EventLogTags.Description'><parameter name='tag' type='int'/></method></class><class name='EventLogTags.Description' extends='java.lang.Object' static='true'><field name='mName' final='true' type='java.lang.String'/><field name='mTag' final='true' type='int'/></class><class name='FloatMath' extends='java.lang.Object'><method name='ceil' native='true' static='true' return='float'><parameter name='value' type='float'/></method><method name='cos' native='true' static='true' return='float'><parameter name='angle' type='float'/></method><method name='floor' native='true' static='true' return='float'><parameter name='value' type='float'/></method><method name='sin' native='true' static='true' return='float'><parameter name='angle' type='float'/></method><method name='sqrt' native='true' static='true' return='float'><parameter name='value' type='float'/></method></class><class name='Log' final='true' extends='java.lang.Object'><field name='ASSERT' final='true' static='true' value='7' type='int'/><field name='DEBUG' final='true' static='true' value='3' type='int'/><field name='ERROR' final='true' static='true' value='6' type='int'/><field name='INFO' final='true' static='true' value='4' type='int'/><field name='VERBOSE' final='true' static='true' value='2' type='int'/><field name='WARN' final='true' static='true' value='5' type='int'/><method name='d' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='d' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method name='e' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='e' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method name='getStackTraceString' static='true' return='java.lang.String'><parameter name='tr' type='java.lang.Throwable'/></method><method name='i' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='i' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method name='isLoggable' native='true' static='true' return='boolean'><parameter name='tag' type='java.lang.String'/><parameter name='level' type='int'/></method><method name='println' native='true' static='true' return='int'><parameter name='priority' type='int'/><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='v' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='v' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method name='w' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='w' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method name='w' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method api_added='8' name='wtf' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method api_added='8' name='wtf' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method><method api_added='8' name='wtf' static='true' return='int'><parameter name='tag' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='tr' type='java.lang.Throwable'/></method></class><class name='LogPrinter' extends='java.lang.Object'><implements name='android.util.Printer'/><constructor name='LogPrinter' type='android.util.LogPrinter'><parameter name='priority' type='int'/><parameter name='tag' type='java.lang.String'/></constructor><method name='println'><parameter name='x' type='java.lang.String'/></method></class><class name='MonthDisplayHelper' extends='java.lang.Object'><constructor name='MonthDisplayHelper' type='android.util.MonthDisplayHelper'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='weekStartDay' type='int'/></constructor><constructor name='MonthDisplayHelper' type='android.util.MonthDisplayHelper'><parameter name='year' type='int'/><parameter name='month' type='int'/></constructor><method name='getColumnOf' return='int'><parameter name='day' type='int'/></method><method name='getDayAt' return='int'><parameter name='row' type='int'/><parameter name='column' type='int'/></method><method name='getDigitsForRow' return='int[]'><parameter name='row' type='int'/></method><method name='getFirstDayOfMonth' return='int'/><method name='getMonth' return='int'/><method name='getNumberOfDaysInMonth' return='int'/><method name='getOffset' return='int'/><method name='getRowOf' return='int'><parameter name='day' type='int'/></method><method name='getWeekStartDay' return='int'/><method name='getYear' return='int'/><method name='isWithinCurrentMonth' return='boolean'><parameter name='row' type='int'/><parameter name='column' type='int'/></method><method name='nextMonth'/><method name='previousMonth'/></class><class name='PrintWriterPrinter' extends='java.lang.Object'><implements name='android.util.Printer'/><constructor name='PrintWriterPrinter' type='android.util.PrintWriterPrinter'><parameter name='pw' type='java.io.PrintWriter'/></constructor><method name='println'><parameter name='x' type='java.lang.String'/></method></class><class name='SparseArray' extends='java.lang.Object'><constructor name='SparseArray' type='android.util.SparseArray'/><constructor name='SparseArray' type='android.util.SparseArray'><parameter name='initialCapacity' type='int'/></constructor><method name='append'><parameter name='key' type='int'/><parameter name='value' type='E'/></method><method name='clear'/><method name='delete'><parameter name='key' type='int'/></method><method name='get' return='E'><parameter name='key' type='int'/></method><method name='get' return='E'><parameter name='key' type='int'/><parameter name='valueIfKeyNotFound' type='E'/></method><method name='indexOfKey' return='int'><parameter name='key' type='int'/></method><method name='indexOfValue' return='int'><parameter name='value' type='E'/></method><method name='keyAt' return='int'><parameter name='index' type='int'/></method><method name='put'><parameter name='key' type='int'/><parameter name='value' type='E'/></method><method name='remove'><parameter name='key' type='int'/></method><method name='setValueAt'><parameter name='index' type='int'/><parameter name='value' type='E'/></method><method name='size' return='int'/><method name='valueAt' return='E'><parameter name='index' type='int'/></method></class><class name='SparseBooleanArray' extends='java.lang.Object'><constructor name='SparseBooleanArray' type='android.util.SparseBooleanArray'/><constructor name='SparseBooleanArray' type='android.util.SparseBooleanArray'><parameter name='initialCapacity' type='int'/></constructor><method name='append'><parameter name='key' type='int'/><parameter name='value' type='boolean'/></method><method name='clear'/><method name='delete'><parameter name='key' type='int'/></method><method name='get' return='boolean'><parameter name='key' type='int'/></method><method name='get' return='boolean'><parameter name='key' type='int'/><parameter name='valueIfKeyNotFound' type='boolean'/></method><method name='indexOfKey' return='int'><parameter name='key' type='int'/></method><method name='indexOfValue' return='int'><parameter name='value' type='boolean'/></method><method name='keyAt' return='int'><parameter name='index' type='int'/></method><method name='put'><parameter name='key' type='int'/><parameter name='value' type='boolean'/></method><method name='size' return='int'/><method name='valueAt' return='boolean'><parameter name='index' type='int'/></method></class><class name='SparseIntArray' extends='java.lang.Object'><constructor name='SparseIntArray' type='android.util.SparseIntArray'/><constructor name='SparseIntArray' type='android.util.SparseIntArray'><parameter name='initialCapacity' type='int'/></constructor><method name='append'><parameter name='key' type='int'/><parameter name='value' type='int'/></method><method name='clear'/><method name='delete'><parameter name='key' type='int'/></method><method name='get' return='int'><parameter name='key' type='int'/></method><method name='get' return='int'><parameter name='key' type='int'/><parameter name='valueIfKeyNotFound' type='int'/></method><method name='indexOfKey' return='int'><parameter name='key' type='int'/></method><method name='indexOfValue' return='int'><parameter name='value' type='int'/></method><method name='keyAt' return='int'><parameter name='index' type='int'/></method><method name='put'><parameter name='key' type='int'/><parameter name='value' type='int'/></method><method name='size' return='int'/><method name='valueAt' return='int'><parameter name='index' type='int'/></method><method api_added='3' name='removeAt'><parameter name='index' type='int'/></method></class><class name='StateSet' extends='java.lang.Object'><constructor name='StateSet' type='android.util.StateSet'/><field name='WILD_CARD' final='true' static='true' value='null' type='int[]'/><method name='dump' static='true' return='java.lang.String'><parameter name='states' type='int[]'/></method><method name='isWildCard' static='true' return='boolean'><parameter name='stateSetOrSpec' type='int[]'/></method><method name='stateSetMatches' static='true' return='boolean'><parameter name='stateSpec' type='int[]'/><parameter name='stateSet' type='int[]'/></method><method name='stateSetMatches' static='true' return='boolean'><parameter name='stateSpec' type='int[]'/><parameter name='state' type='int'/></method><method name='trimStateSet' static='true' return='int[]'><parameter name='states' type='int[]'/><parameter name='newSize' type='int'/></method></class><class name='StringBuilderPrinter' extends='java.lang.Object'><implements name='android.util.Printer'/><constructor name='StringBuilderPrinter' type='android.util.StringBuilderPrinter'><parameter name='builder' type='java.lang.StringBuilder'/></constructor><method name='println'><parameter name='x' type='java.lang.String'/></method></class><class name='TimeFormatException' extends='java.lang.RuntimeException'/><class name='TimeUtils' extends='java.lang.Object'><constructor name='TimeUtils' type='android.util.TimeUtils'/><method name='getTimeZone' static='true' return='java.util.TimeZone'><parameter name='offset' type='int'/><parameter name='dst' type='boolean'/><parameter name='when' type='long'/><parameter name='country' type='java.lang.String'/></method><method api_added='3' name='getTimeZoneDatabaseVersion' static='true' return='java.lang.String'/></class><class name='TimingLogger' extends='java.lang.Object'><constructor name='TimingLogger' type='android.util.TimingLogger'><parameter name='tag' type='java.lang.String'/><parameter name='label' type='java.lang.String'/></constructor><method name='addSplit'><parameter name='splitLabel' type='java.lang.String'/></method><method name='dumpToLog'/><method name='reset'><parameter name='tag' type='java.lang.String'/><parameter name='label' type='java.lang.String'/></method><method name='reset'/></class><class name='TypedValue' extends='java.lang.Object'><constructor name='TypedValue' type='android.util.TypedValue'/><field name='COMPLEX_MANTISSA_MASK' final='true' static='true' value='16777215' type='int'/><field name='COMPLEX_MANTISSA_SHIFT' final='true' static='true' value='8' type='int'/><field name='COMPLEX_RADIX_0p23' final='true' static='true' value='3' type='int'/><field name='COMPLEX_RADIX_16p7' final='true' static='true' value='1' type='int'/><field name='COMPLEX_RADIX_23p0' final='true' static='true' value='0' type='int'/><field name='COMPLEX_RADIX_8p15' final='true' static='true' value='2' type='int'/><field name='COMPLEX_RADIX_MASK' final='true' static='true' value='3' type='int'/><field name='COMPLEX_RADIX_SHIFT' final='true' static='true' value='4' type='int'/><field name='COMPLEX_UNIT_DIP' final='true' static='true' value='1' type='int'/><field name='COMPLEX_UNIT_FRACTION' final='true' static='true' value='0' type='int'/><field name='COMPLEX_UNIT_FRACTION_PARENT' final='true' static='true' value='1' type='int'/><field name='COMPLEX_UNIT_IN' final='true' static='true' value='4' type='int'/><field name='COMPLEX_UNIT_MASK' final='true' static='true' value='15' type='int'/><field name='COMPLEX_UNIT_MM' final='true' static='true' value='5' type='int'/><field name='COMPLEX_UNIT_PT' final='true' static='true' value='3' type='int'/><field name='COMPLEX_UNIT_PX' final='true' static='true' value='0' type='int'/><field name='COMPLEX_UNIT_SHIFT' final='true' static='true' value='0' type='int'/><field name='COMPLEX_UNIT_SP' final='true' static='true' value='2' type='int'/><field name='TYPE_ATTRIBUTE' final='true' static='true' value='2' type='int'/><field name='TYPE_DIMENSION' final='true' static='true' value='5' type='int'/><field name='TYPE_FIRST_COLOR_INT' final='true' static='true' value='28' type='int'/><field name='TYPE_FIRST_INT' final='true' static='true' value='16' type='int'/><field name='TYPE_FLOAT' final='true' static='true' value='4' type='int'/><field name='TYPE_FRACTION' final='true' static='true' value='6' type='int'/><field name='TYPE_INT_BOOLEAN' final='true' static='true' value='18' type='int'/><field name='TYPE_INT_COLOR_ARGB4' final='true' static='true' value='30' type='int'/><field name='TYPE_INT_COLOR_ARGB8' final='true' static='true' value='28' type='int'/><field name='TYPE_INT_COLOR_RGB4' final='true' static='true' value='31' type='int'/><field name='TYPE_INT_COLOR_RGB8' final='true' static='true' value='29' type='int'/><field name='TYPE_INT_DEC' final='true' static='true' value='16' type='int'/><field name='TYPE_INT_HEX' final='true' static='true' value='17' type='int'/><field name='TYPE_LAST_COLOR_INT' final='true' static='true' value='31' type='int'/><field name='TYPE_LAST_INT' final='true' static='true' value='31' type='int'/><field name='TYPE_NULL' final='true' static='true' value='0' type='int'/><field name='TYPE_REFERENCE' final='true' static='true' value='1' type='int'/><field name='TYPE_STRING' final='true' static='true' value='3' type='int'/><field name='assetCookie' type='int'/><field name='changingConfigurations' type='int'/><field name='data' type='int'/><field name='resourceId' type='int'/><field name='string' type='java.lang.CharSequence'/><field name='type' type='int'/><field api_added='4' name='DENSITY_DEFAULT' final='true' static='true' value='0' type='int'/><field api_added='4' name='DENSITY_NONE' final='true' static='true' value='65535' type='int'/><field api_added='4' name='density' type='int'/><method name='applyDimension' static='true' return='float'><parameter name='unit' type='int'/><parameter name='value' type='float'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='coerceToString' final='true' return='java.lang.CharSequence'/><method name='coerceToString' final='true' static='true' return='java.lang.String'><parameter name='type' type='int'/><parameter name='data' type='int'/></method><method name='complexToDimension' static='true' return='float'><parameter name='data' type='int'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='complexToDimensionNoisy' static='true' return='float'><parameter name='data' type='int'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='complexToDimensionPixelOffset' static='true' return='int'><parameter name='data' type='int'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='complexToDimensionPixelSize' static='true' return='int'><parameter name='data' type='int'/><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='complexToFloat' static='true' return='float'><parameter name='complex' type='int'/></method><method name='complexToFraction' static='true' return='float'><parameter name='data' type='int'/><parameter name='base' type='float'/><parameter name='pbase' type='float'/></method><method name='getDimension' return='float'><parameter name='metrics' type='android.util.DisplayMetrics'/></method><method name='getFloat' final='true' return='float'/><method name='getFraction' return='float'><parameter name='base' type='float'/><parameter name='pbase' type='float'/></method><method name='setTo'><parameter name='other' type='android.util.TypedValue'/></method></class><class name='Xml' extends='java.lang.Object'><constructor name='Xml' type='android.util.Xml'/><field name='FEATURE_RELAXED' static='true' type='java.lang.String'/><method name='asAttributeSet' static='true' return='android.util.AttributeSet'><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/></method><method name='findEncodingByName' static='true' return='android.util.Xml.Encoding'><parameter name='encodingName' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method><method name='newPullParser' static='true' return='org.xmlpull.v1.XmlPullParser'/><method name='newSerializer' static='true' return='org.xmlpull.v1.XmlSerializer'/><method name='parse' static='true'><parameter name='xml' type='java.lang.String'/><parameter name='contentHandler' type='org.xml.sax.ContentHandler'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' static='true'><parameter name='in' type='java.io.Reader'/><parameter name='contentHandler' type='org.xml.sax.ContentHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' static='true'><parameter name='in' type='java.io.InputStream'/><parameter name='encoding' type='android.util.Xml.Encoding'/><parameter name='contentHandler' type='org.xml.sax.ContentHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='Xml.Encoding' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.util.Xml.Encoding'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.util.Xml.Encoding[]'/></class><class api_added='3' name='PrintStreamPrinter' extends='java.lang.Object'><implements name='android.util.Printer'/><constructor api_added='3' name='PrintStreamPrinter' type='android.util.PrintStreamPrinter'><parameter name='pw' type='java.io.PrintStream'/></constructor><method api_added='3' name='println'><parameter name='x' type='java.lang.String'/></method></class><class api_added='5' name='Pair' extends='java.lang.Object'><constructor api_added='5' name='Pair' type='android.util.Pair'><parameter name='first' type='F'/><parameter name='second' type='S'/></constructor><field api_added='5' name='first' final='true' type='F'/><field api_added='5' name='second' final='true' type='S'/><method api_added='5' name='create' static='true' return='android.util.Pair&lt;A, B&gt;'><parameter name='a' type='A'/><parameter name='b' type='B'/></method></class><class api_added='8' name='Base64' extends='java.lang.Object'><field api_added='8' name='CRLF' final='true' static='true' value='4' type='int'/><field api_added='8' name='DEFAULT' final='true' static='true' value='0' type='int'/><field api_added='8' name='NO_CLOSE' final='true' static='true' value='16' type='int'/><field api_added='8' name='NO_PADDING' final='true' static='true' value='1' type='int'/><field api_added='8' name='NO_WRAP' final='true' static='true' value='2' type='int'/><field api_added='8' name='URL_SAFE' final='true' static='true' value='8' type='int'/><method api_added='8' name='decode' static='true' return='byte[]'><parameter name='str' type='java.lang.String'/><parameter name='flags' type='int'/></method><method api_added='8' name='decode' static='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='flags' type='int'/></method><method api_added='8' name='decode' static='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><parameter name='flags' type='int'/></method><method api_added='8' name='encode' static='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='flags' type='int'/></method><method api_added='8' name='encode' static='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><parameter name='flags' type='int'/></method><method api_added='8' name='encodeToString' static='true' return='java.lang.String'><parameter name='input' type='byte[]'/><parameter name='flags' type='int'/></method><method api_added='8' name='encodeToString' static='true' return='java.lang.String'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='Base64InputStream' extends='java.io.FilterInputStream'><constructor api_added='8' name='Base64InputStream' type='android.util.Base64InputStream'><parameter name='in' type='java.io.InputStream'/><parameter name='flags' type='int'/></constructor></class><class api_added='8' name='Base64OutputStream' extends='java.io.FilterOutputStream'><constructor api_added='8' name='Base64OutputStream' type='android.util.Base64OutputStream'><parameter name='out' type='java.io.OutputStream'/><parameter name='flags' type='int'/></constructor></class><class api_added='8' name='EventLog' extends='java.lang.Object'><constructor api_added='8' name='EventLog' type='android.util.EventLog'/><method api_added='8' name='getTagCode' static='true' return='int'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getTagName' static='true' return='java.lang.String'><parameter name='tag' type='int'/></method><method api_added='8' name='readEvents' native='true' static='true'><parameter name='tags' type='int[]'/><parameter name='output' type='java.util.Collection&lt;android.util.EventLog.Event&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='writeEvent' native='true' static='true' return='int'><parameter name='tag' type='int'/><parameter name='value' type='int'/></method><method api_added='8' name='writeEvent' native='true' static='true' return='int'><parameter name='tag' type='int'/><parameter name='value' type='long'/></method><method api_added='8' name='writeEvent' native='true' static='true' return='int'><parameter name='tag' type='int'/><parameter name='str' type='java.lang.String'/></method><method api_added='8' name='writeEvent' native='true' static='true' return='int'><parameter name='tag' type='int'/><parameter name='list' type='java.lang.Object...'/></method></class><class api_added='8' name='EventLog.Event' final='true' extends='java.lang.Object' static='true'><method api_added='8' name='getData' synchronized='true' return='java.lang.Object'/><method api_added='8' name='getProcessId' return='int'/><method api_added='8' name='getTag' return='int'/><method api_added='8' name='getThreadId' return='int'/><method api_added='8' name='getTimeNanos' return='long'/></class><class api_added='8' name='Patterns' extends='java.lang.Object'><field api_added='8' name='DOMAIN_NAME' final='true' static='true' type='java.util.regex.Pattern'/><field api_added='8' name='EMAIL_ADDRESS' final='true' static='true' type='java.util.regex.Pattern'/><field api_added='8' name='GOOD_IRI_CHAR' final='true' static='true' value='&quot;a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef&quot;' type='java.lang.String'/><field api_added='8' name='IP_ADDRESS' final='true' static='true' type='java.util.regex.Pattern'/><field api_added='8' name='PHONE' final='true' static='true' type='java.util.regex.Pattern'/><field api_added='8' name='TOP_LEVEL_DOMAIN' final='true' static='true' type='java.util.regex.Pattern'/><field api_added='8' name='TOP_LEVEL_DOMAIN_STR' final='true' static='true' value='&quot;((aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(biz|b[abdefghijmnorstvwyz])|(cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(edu|e[cegrstu])|f[ijkmor]|(gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(info|int|i[delmnoqrst])|(jobs|j[emop])|k[eghimnprwyz]|l[abcikrstuvy]|(mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])|(name|net|n[acefgilopruz])|(org|om)|(pro|p[aefghklmnrstwy])|qa|r[eosuw]|s[abcdeghijklmnortuvyz]|(tel|travel|t[cdfghjklmnoprtvwz])|u[agksyz]|v[aceginu]|w[fs]|(xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)|y[etu]|z[amw])&quot;' type='java.lang.String'/><field api_added='8' name='TOP_LEVEL_DOMAIN_STR_FOR_WEB_URL' final='true' static='true' value='&quot;(?:(?:aero|arpa|asia|a[cdefgilmnoqrstuwxz])|(?:biz|b[abdefghijmnorstvwyz])|(?:cat|com|coop|c[acdfghiklmnoruvxyz])|d[ejkmoz]|(?:edu|e[cegrstu])|f[ijkmor]|(?:gov|g[abdefghilmnpqrstuwy])|h[kmnrtu]|(?:info|int|i[delmnoqrst])|(?:jobs|j[emop])|k[eghimnprwyz]|l[abcikrstuvy]|(?:mil|mobi|museum|m[acdeghklmnopqrstuvwxyz])|(?:name|net|n[acefgilopruz])|(?:org|om)|(?:pro|p[aefghklmnrstwy])|qa|r[eosuw]|s[abcdeghijklmnortuvyz]|(?:tel|travel|t[cdfghjklmnoprtvwz])|u[agksyz]|v[aceginu]|w[fs]|(?:xn\\-\\-0zwm56d|xn\\-\\-11b5bs3a9aj6g|xn\\-\\-80akhbyknj4f|xn\\-\\-9t4b11yi5a|xn\\-\\-deba0ad|xn\\-\\-g6w251d|xn\\-\\-hgbk6aj7f53bba|xn\\-\\-hlcj6aya9esc7a|xn\\-\\-jxalpdlp|xn\\-\\-kgbechtv|xn\\-\\-zckzah)|y[etu]|z[amw]))&quot;' type='java.lang.String'/><field api_added='8' name='WEB_URL' final='true' static='true' type='java.util.regex.Pattern'/><method api_added='8' name='concatGroups' final='true' static='true' return='java.lang.String'><parameter name='matcher' type='java.util.regex.Matcher'/></method><method api_added='8' name='digitsAndPlusOnly' final='true' static='true' return='java.lang.String'><parameter name='matcher' type='java.util.regex.Matcher'/></method></class><interface name='AttributeSet' abstract='true'><method name='getAttributeBooleanValue' abstract='true' return='boolean'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/></method><method name='getAttributeBooleanValue' abstract='true' return='boolean'><parameter name='index' type='int'/><parameter name='defaultValue' type='boolean'/></method><method name='getAttributeCount' abstract='true' return='int'/><method name='getAttributeFloatValue' abstract='true' return='float'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='defaultValue' type='float'/></method><method name='getAttributeFloatValue' abstract='true' return='float'><parameter name='index' type='int'/><parameter name='defaultValue' type='float'/></method><method name='getAttributeIntValue' abstract='true' return='int'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeIntValue' abstract='true' return='int'><parameter name='index' type='int'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeListValue' abstract='true' return='int'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='options' type='java.lang.String[]'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeListValue' abstract='true' return='int'><parameter name='index' type='int'/><parameter name='options' type='java.lang.String[]'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeName' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeNameResource' abstract='true' return='int'><parameter name='index' type='int'/></method><method name='getAttributeResourceValue' abstract='true' return='int'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeResourceValue' abstract='true' return='int'><parameter name='index' type='int'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeUnsignedIntValue' abstract='true' return='int'><parameter name='namespace' type='java.lang.String'/><parameter name='attribute' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeUnsignedIntValue' abstract='true' return='int'><parameter name='index' type='int'/><parameter name='defaultValue' type='int'/></method><method name='getAttributeValue' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeValue' abstract='true' return='java.lang.String'><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='getClassAttribute' abstract='true' return='java.lang.String'/><method name='getIdAttribute' abstract='true' return='java.lang.String'/><method name='getIdAttributeResourceValue' abstract='true' return='int'><parameter name='defaultValue' type='int'/></method><method name='getPositionDescription' abstract='true' return='java.lang.String'/><method name='getStyleAttribute' abstract='true' return='int'/></interface><interface name='Printer' abstract='true'><method name='println' abstract='true'><parameter name='x' type='java.lang.String'/></method></interface></package><package name='android.view'><class name='AbsSavedState' extends='java.lang.Object' abstract='true'><implements name='android.os.Parcelable'/><constructor name='AbsSavedState' type='android.view.AbsSavedState' visibility='protected'><parameter name='superState' type='android.os.Parcelable'/></constructor><constructor name='AbsSavedState' type='android.view.AbsSavedState' visibility='protected'><parameter name='source' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='EMPTY_STATE' final='true' static='true' type='android.view.AbsSavedState'/><method name='describeContents' return='int'/><method name='getSuperState' final='true' return='android.os.Parcelable'/><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='ContextThemeWrapper' extends='android.content.ContextWrapper'><constructor name='ContextThemeWrapper' type='android.view.ContextThemeWrapper'/><constructor name='ContextThemeWrapper' type='android.view.ContextThemeWrapper'><parameter name='base' type='android.content.Context'/><parameter name='themeres' type='int'/></constructor><method name='onApplyThemeResource' visibility='protected'><parameter name='theme' type='android.content.res.Resources.Theme'/><parameter name='resid' type='int'/><parameter name='first' type='boolean'/></method></class><class name='Display' extends='java.lang.Object'><field name='DEFAULT_DISPLAY' final='true' static='true' value='0' type='int'/><method name='getDisplayId' return='int'/><method name='getHeight' native='true' return='int'/><method name='getMetrics'><parameter name='outMetrics' type='android.util.DisplayMetrics'/></method><method name='getOrientation' native='true' deprecated='8' return='int'/><method name='getPixelFormat' return='int'/><method name='getRefreshRate' return='float'/><method name='getWidth' native='true' return='int'/><method api_added='8' name='getRotation' return='int'/></class><class name='FocusFinder' extends='java.lang.Object'><method name='findNearestTouchable' return='android.view.View'><parameter name='root' type='android.view.ViewGroup'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='direction' type='int'/><parameter name='deltas' type='int[]'/></method><method name='findNextFocus' final='true' return='android.view.View'><parameter name='root' type='android.view.ViewGroup'/><parameter name='focused' type='android.view.View'/><parameter name='direction' type='int'/></method><method name='findNextFocusFromRect' return='android.view.View'><parameter name='root' type='android.view.ViewGroup'/><parameter name='focusedRect' type='android.graphics.Rect'/><parameter name='direction' type='int'/></method><method name='getInstance' static='true' return='android.view.FocusFinder'/></class><class name='GestureDetector' extends='java.lang.Object'><constructor name='GestureDetector' type='android.view.GestureDetector'><parameter name='listener' type='android.view.GestureDetector.OnGestureListener'/><parameter name='handler' type='android.os.Handler'/></constructor><constructor name='GestureDetector' type='android.view.GestureDetector'><parameter name='listener' type='android.view.GestureDetector.OnGestureListener'/><parameter name='context' type='android.content.Context'/><parameter name='handler' type='android.os.Handler'/><parameter name='ignoreMultitouch' type='boolean'/></constructor><method name='isLongpressEnabled' return='boolean'/><method name='onTouchEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='setIsLongpressEnabled'><parameter name='isLongpressEnabled' type='boolean'/></method><method api_added='3' name='setOnDoubleTapListener'><parameter name='onDoubleTapListener' type='android.view.GestureDetector.OnDoubleTapListener'/></method></class><class name='GestureDetector.SimpleOnGestureListener' extends='java.lang.Object' static='true'><implements name='android.view.GestureDetector.OnGestureListener'/><implements name='android.view.GestureDetector.OnDoubleTapListener'/><constructor name='GestureDetector.SimpleOnGestureListener' type='android.view.GestureDetector.SimpleOnGestureListener'/><method name='onDown' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onFling' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='velocityX' type='float'/><parameter name='velocityY' type='float'/></method><method name='onLongPress'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onScroll' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='distanceX' type='float'/><parameter name='distanceY' type='float'/></method><method name='onShowPress'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onSingleTapUp' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method api_added='3' name='onDoubleTap' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method api_added='3' name='onDoubleTapEvent' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method api_added='3' name='onSingleTapConfirmed' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method></class><class name='Gravity' extends='java.lang.Object'><constructor name='Gravity' type='android.view.Gravity'/><field name='AXIS_PULL_AFTER' final='true' static='true' value='4' type='int'/><field name='AXIS_PULL_BEFORE' final='true' static='true' value='2' type='int'/><field name='AXIS_SPECIFIED' final='true' static='true' value='1' type='int'/><field name='AXIS_X_SHIFT' final='true' static='true' value='0' type='int'/><field name='AXIS_Y_SHIFT' final='true' static='true' value='4' type='int'/><field name='BOTTOM' final='true' static='true' value='80' type='int'/><field name='CENTER' final='true' static='true' value='17' type='int'/><field name='CENTER_HORIZONTAL' final='true' static='true' value='1' type='int'/><field name='CENTER_VERTICAL' final='true' static='true' value='16' type='int'/><field name='FILL' final='true' static='true' value='119' type='int'/><field name='FILL_HORIZONTAL' final='true' static='true' value='7' type='int'/><field name='FILL_VERTICAL' final='true' static='true' value='112' type='int'/><field name='HORIZONTAL_GRAVITY_MASK' final='true' static='true' value='7' type='int'/><field name='LEFT' final='true' static='true' value='3' type='int'/><field name='NO_GRAVITY' final='true' static='true' value='0' type='int'/><field name='RIGHT' final='true' static='true' value='5' type='int'/><field name='TOP' final='true' static='true' value='48' type='int'/><field name='VERTICAL_GRAVITY_MASK' final='true' static='true' value='112' type='int'/><field api_added='3' name='AXIS_CLIP' final='true' static='true' value='8' type='int'/><field api_added='3' name='CLIP_HORIZONTAL' final='true' static='true' value='8' type='int'/><field api_added='3' name='CLIP_VERTICAL' final='true' static='true' value='128' type='int'/><field api_added='3' name='DISPLAY_CLIP_HORIZONTAL' final='true' static='true' value='16777216' type='int'/><field api_added='3' name='DISPLAY_CLIP_VERTICAL' final='true' static='true' value='268435456' type='int'/><method name='apply' static='true'><parameter name='gravity' type='int'/><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='container' type='android.graphics.Rect'/><parameter name='outRect' type='android.graphics.Rect'/></method><method name='apply' static='true'><parameter name='gravity' type='int'/><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='container' type='android.graphics.Rect'/><parameter name='xAdj' type='int'/><parameter name='yAdj' type='int'/><parameter name='outRect' type='android.graphics.Rect'/></method><method name='isHorizontal' static='true' return='boolean'><parameter name='gravity' type='int'/></method><method name='isVertical' static='true' return='boolean'><parameter name='gravity' type='int'/></method><method api_added='3' name='applyDisplay' static='true'><parameter name='gravity' type='int'/><parameter name='display' type='android.graphics.Rect'/><parameter name='inoutObj' type='android.graphics.Rect'/></method></class><class name='InflateException' extends='java.lang.RuntimeException'><constructor name='InflateException' type='android.view.InflateException'/><constructor name='InflateException' type='android.view.InflateException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='throwable' type='java.lang.Throwable'/></constructor><constructor name='InflateException' type='android.view.InflateException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='InflateException' type='android.view.InflateException'><parameter name='throwable' type='java.lang.Throwable'/></constructor></class><class name='KeyCharacterMap' extends='java.lang.Object'><field name='ALPHA' final='true' static='true' value='3' type='int'/><field name='BUILT_IN_KEYBOARD' final='true' static='true' value='0' type='int'/><field name='COMBINING_ACCENT' final='true' static='true' value='-2147483648' type='int'/><field name='COMBINING_ACCENT_MASK' final='true' static='true' value='2147483647' type='int'/><field name='HEX_INPUT' final='true' static='true' value='61184' type='char'/><field name='NUMERIC' final='true' static='true' value='1' type='int'/><field name='PICKER_DIALOG_INPUT' final='true' static='true' value='61185' type='char'/><field name='PREDICTIVE' final='true' static='true' value='2' type='int'/><method name='get' return='int'><parameter name='keyCode' type='int'/><parameter name='meta' type='int'/></method><method name='getDeadChar' static='true' return='int'><parameter name='accent' type='int'/><parameter name='c' type='int'/></method><method name='getDisplayLabel' return='char'><parameter name='keyCode' type='int'/></method><method name='getEvents' return='android.view.KeyEvent[]'><parameter name='chars' type='char[]'/></method><method name='getKeyData' return='boolean'><parameter name='keyCode' type='int'/><parameter name='results' type='android.view.KeyCharacterMap.KeyData'/></method><method name='getKeyboardType' return='int'/><method name='getMatch' return='char'><parameter name='keyCode' type='int'/><parameter name='chars' type='char[]'/></method><method name='getMatch' return='char'><parameter name='keyCode' type='int'/><parameter name='chars' type='char[]'/><parameter name='modifiers' type='int'/></method><method name='getNumber' return='char'><parameter name='keyCode' type='int'/></method><method name='isPrintingKey' return='boolean'><parameter name='keyCode' type='int'/></method><method name='load' static='true' return='android.view.KeyCharacterMap'><parameter name='keyboard' type='int'/></method><method api_added='3' name='deviceHasKey' static='true' return='boolean'><parameter name='keyCode' type='int'/></method><method api_added='3' name='deviceHasKeys' static='true' return='boolean[]'><parameter name='keyCodes' type='int[]'/></method></class><class name='KeyCharacterMap.KeyData' extends='java.lang.Object' static='true'><constructor name='KeyCharacterMap.KeyData' type='android.view.KeyCharacterMap.KeyData'/><field name='META_LENGTH' final='true' static='true' value='4' type='int'/><field name='displayLabel' type='char'/><field name='meta' value='null' type='char[]'/><field name='number' type='char'/></class><class name='KeyEvent' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor name='KeyEvent' type='android.view.KeyEvent'><parameter name='action' type='int'/><parameter name='code' type='int'/></constructor><constructor name='KeyEvent' type='android.view.KeyEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='code' type='int'/><parameter name='repeat' type='int'/></constructor><constructor name='KeyEvent' type='android.view.KeyEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='code' type='int'/><parameter name='repeat' type='int'/><parameter name='metaState' type='int'/></constructor><constructor name='KeyEvent' type='android.view.KeyEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='code' type='int'/><parameter name='repeat' type='int'/><parameter name='metaState' type='int'/><parameter name='device' type='int'/><parameter name='scancode' type='int'/></constructor><constructor name='KeyEvent' type='android.view.KeyEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='code' type='int'/><parameter name='repeat' type='int'/><parameter name='metaState' type='int'/><parameter name='device' type='int'/><parameter name='scancode' type='int'/><parameter name='flags' type='int'/></constructor><constructor name='KeyEvent' type='android.view.KeyEvent' deprecated='5'><parameter name='origEvent' type='android.view.KeyEvent'/><parameter name='eventTime' type='long'/><parameter name='newRepeat' type='int'/></constructor><field name='ACTION_DOWN' final='true' static='true' value='0' type='int'/><field name='ACTION_MULTIPLE' final='true' static='true' value='2' type='int'/><field name='ACTION_UP' final='true' static='true' value='1' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FLAG_WOKE_HERE' final='true' static='true' value='1' type='int'/><field name='KEYCODE_0' final='true' static='true' value='7' type='int'/><field name='KEYCODE_1' final='true' static='true' value='8' type='int'/><field name='KEYCODE_2' final='true' static='true' value='9' type='int'/><field name='KEYCODE_3' final='true' static='true' value='10' type='int'/><field name='KEYCODE_4' final='true' static='true' value='11' type='int'/><field name='KEYCODE_5' final='true' static='true' value='12' type='int'/><field name='KEYCODE_6' final='true' static='true' value='13' type='int'/><field name='KEYCODE_7' final='true' static='true' value='14' type='int'/><field name='KEYCODE_8' final='true' static='true' value='15' type='int'/><field name='KEYCODE_9' final='true' static='true' value='16' type='int'/><field name='KEYCODE_A' final='true' static='true' value='29' type='int'/><field name='KEYCODE_ALT_LEFT' final='true' static='true' value='57' type='int'/><field name='KEYCODE_ALT_RIGHT' final='true' static='true' value='58' type='int'/><field name='KEYCODE_APOSTROPHE' final='true' static='true' value='75' type='int'/><field name='KEYCODE_AT' final='true' static='true' value='77' type='int'/><field name='KEYCODE_B' final='true' static='true' value='30' type='int'/><field name='KEYCODE_BACK' final='true' static='true' value='4' type='int'/><field name='KEYCODE_BACKSLASH' final='true' static='true' value='73' type='int'/><field name='KEYCODE_C' final='true' static='true' value='31' type='int'/><field name='KEYCODE_CALL' final='true' static='true' value='5' type='int'/><field name='KEYCODE_CAMERA' final='true' static='true' value='27' type='int'/><field name='KEYCODE_CLEAR' final='true' static='true' value='28' type='int'/><field name='KEYCODE_COMMA' final='true' static='true' value='55' type='int'/><field name='KEYCODE_D' final='true' static='true' value='32' type='int'/><field name='KEYCODE_DEL' final='true' static='true' value='67' type='int'/><field name='KEYCODE_DPAD_CENTER' final='true' static='true' value='23' type='int'/><field name='KEYCODE_DPAD_DOWN' final='true' static='true' value='20' type='int'/><field name='KEYCODE_DPAD_LEFT' final='true' static='true' value='21' type='int'/><field name='KEYCODE_DPAD_RIGHT' final='true' static='true' value='22' type='int'/><field name='KEYCODE_DPAD_UP' final='true' static='true' value='19' type='int'/><field name='KEYCODE_E' final='true' static='true' value='33' type='int'/><field name='KEYCODE_ENDCALL' final='true' static='true' value='6' type='int'/><field name='KEYCODE_ENTER' final='true' static='true' value='66' type='int'/><field name='KEYCODE_ENVELOPE' final='true' static='true' value='65' type='int'/><field name='KEYCODE_EQUALS' final='true' static='true' value='70' type='int'/><field name='KEYCODE_EXPLORER' final='true' static='true' value='64' type='int'/><field name='KEYCODE_F' final='true' static='true' value='34' type='int'/><field name='KEYCODE_FOCUS' final='true' static='true' value='80' type='int'/><field name='KEYCODE_G' final='true' static='true' value='35' type='int'/><field name='KEYCODE_GRAVE' final='true' static='true' value='68' type='int'/><field name='KEYCODE_H' final='true' static='true' value='36' type='int'/><field name='KEYCODE_HEADSETHOOK' final='true' static='true' value='79' type='int'/><field name='KEYCODE_HOME' final='true' static='true' value='3' type='int'/><field name='KEYCODE_I' final='true' static='true' value='37' type='int'/><field name='KEYCODE_J' final='true' static='true' value='38' type='int'/><field name='KEYCODE_K' final='true' static='true' value='39' type='int'/><field name='KEYCODE_L' final='true' static='true' value='40' type='int'/><field name='KEYCODE_LEFT_BRACKET' final='true' static='true' value='71' type='int'/><field name='KEYCODE_M' final='true' static='true' value='41' type='int'/><field name='KEYCODE_MENU' final='true' static='true' value='82' type='int'/><field name='KEYCODE_MINUS' final='true' static='true' value='69' type='int'/><field name='KEYCODE_N' final='true' static='true' value='42' type='int'/><field name='KEYCODE_NOTIFICATION' final='true' static='true' value='83' type='int'/><field name='KEYCODE_NUM' final='true' static='true' value='78' type='int'/><field name='KEYCODE_O' final='true' static='true' value='43' type='int'/><field name='KEYCODE_P' final='true' static='true' value='44' type='int'/><field name='KEYCODE_PERIOD' final='true' static='true' value='56' type='int'/><field name='KEYCODE_PLUS' final='true' static='true' value='81' type='int'/><field name='KEYCODE_POUND' final='true' static='true' value='18' type='int'/><field name='KEYCODE_POWER' final='true' static='true' value='26' type='int'/><field name='KEYCODE_Q' final='true' static='true' value='45' type='int'/><field name='KEYCODE_R' final='true' static='true' value='46' type='int'/><field name='KEYCODE_RIGHT_BRACKET' final='true' static='true' value='72' type='int'/><field name='KEYCODE_S' final='true' static='true' value='47' type='int'/><field name='KEYCODE_SEARCH' final='true' static='true' value='84' type='int'/><field name='KEYCODE_SEMICOLON' final='true' static='true' value='74' type='int'/><field name='KEYCODE_SHIFT_LEFT' final='true' static='true' value='59' type='int'/><field name='KEYCODE_SHIFT_RIGHT' final='true' static='true' value='60' type='int'/><field name='KEYCODE_SLASH' final='true' static='true' value='76' type='int'/><field name='KEYCODE_SOFT_LEFT' final='true' static='true' value='1' type='int'/><field name='KEYCODE_SOFT_RIGHT' final='true' static='true' value='2' type='int'/><field name='KEYCODE_SPACE' final='true' static='true' value='62' type='int'/><field name='KEYCODE_STAR' final='true' static='true' value='17' type='int'/><field name='KEYCODE_SYM' final='true' static='true' value='63' type='int'/><field name='KEYCODE_T' final='true' static='true' value='48' type='int'/><field name='KEYCODE_TAB' final='true' static='true' value='61' type='int'/><field name='KEYCODE_U' final='true' static='true' value='49' type='int'/><field name='KEYCODE_UNKNOWN' final='true' static='true' value='0' type='int'/><field name='KEYCODE_V' final='true' static='true' value='50' type='int'/><field name='KEYCODE_VOLUME_DOWN' final='true' static='true' value='25' type='int'/><field name='KEYCODE_VOLUME_UP' final='true' static='true' value='24' type='int'/><field name='KEYCODE_W' final='true' static='true' value='51' type='int'/><field name='KEYCODE_X' final='true' static='true' value='52' type='int'/><field name='KEYCODE_Y' final='true' static='true' value='53' type='int'/><field name='KEYCODE_Z' final='true' static='true' value='54' type='int'/><field name='MAX_KEYCODE' final='true' static='true' value='84' type='int' deprecated='3'/><field name='META_ALT_LEFT_ON' final='true' static='true' value='16' type='int'/><field name='META_ALT_ON' final='true' static='true' value='2' type='int'/><field name='META_ALT_RIGHT_ON' final='true' static='true' value='32' type='int'/><field name='META_SHIFT_LEFT_ON' final='true' static='true' value='64' type='int'/><field name='META_SHIFT_ON' final='true' static='true' value='1' type='int'/><field name='META_SHIFT_RIGHT_ON' final='true' static='true' value='128' type='int'/><field name='META_SYM_ON' final='true' static='true' value='4' type='int'/><field api_added='3' name='FLAG_EDITOR_ACTION' final='true' static='true' value='16' type='int'/><field api_added='3' name='FLAG_FROM_SYSTEM' final='true' static='true' value='8' type='int'/><field api_added='3' name='FLAG_KEEP_TOUCH_MODE' final='true' static='true' value='4' type='int'/><field api_added='3' name='FLAG_SOFT_KEYBOARD' final='true' static='true' value='2' type='int'/><field api_added='3' name='KEYCODE_MEDIA_FAST_FORWARD' final='true' static='true' value='90' type='int'/><field api_added='3' name='KEYCODE_MEDIA_NEXT' final='true' static='true' value='87' type='int'/><field api_added='3' name='KEYCODE_MEDIA_PLAY_PAUSE' final='true' static='true' value='85' type='int'/><field api_added='3' name='KEYCODE_MEDIA_PREVIOUS' final='true' static='true' value='88' type='int'/><field api_added='3' name='KEYCODE_MEDIA_REWIND' final='true' static='true' value='89' type='int'/><field api_added='3' name='KEYCODE_MEDIA_STOP' final='true' static='true' value='86' type='int'/><field api_added='3' name='KEYCODE_MUTE' final='true' static='true' value='91' type='int'/><field api_added='5' name='FLAG_CANCELED' final='true' static='true' value='32' type='int'/><field api_added='5' name='FLAG_CANCELED_LONG_PRESS' final='true' static='true' value='256' type='int'/><field api_added='5' name='FLAG_LONG_PRESS' final='true' static='true' value='128' type='int'/><field api_added='5' name='FLAG_TRACKING' final='true' static='true' value='512' type='int'/><field api_added='5' name='FLAG_VIRTUAL_HARD_KEY' final='true' static='true' value='64' type='int'/><method name='describeContents' return='int'/><method name='dispatch' final='true' deprecated='5' return='boolean'><parameter name='receiver' type='android.view.KeyEvent.Callback'/></method><method name='getAction' final='true' return='int'/><method name='getDeadChar' static='true' return='int'><parameter name='accent' type='int'/><parameter name='c' type='int'/></method><method name='getDeviceId' final='true' return='int'/><method name='getDisplayLabel' return='char'/><method name='getDownTime' final='true' return='long'/><method name='getEventTime' final='true' return='long'/><method name='getFlags' final='true' return='int'/><method name='getKeyCode' final='true' return='int'/><method name='getKeyData' return='boolean'><parameter name='results' type='android.view.KeyCharacterMap.KeyData'/></method><method name='getMatch' return='char'><parameter name='chars' type='char[]'/></method><method name='getMatch' return='char'><parameter name='chars' type='char[]'/><parameter name='modifiers' type='int'/></method><method name='getMetaState' final='true' return='int'/><method name='getNumber' return='char'/><method name='getRepeatCount' final='true' return='int'/><method name='getScanCode' final='true' return='int'/><method name='getUnicodeChar' return='int'/><method name='getUnicodeChar' return='int'><parameter name='meta' type='int'/></method><method name='isAltPressed' final='true' return='boolean'/><method name='isModifierKey' static='true' return='boolean'><parameter name='keyCode' type='int'/></method><method name='isPrintingKey' return='boolean'/><method name='isShiftPressed' final='true' return='boolean'/><method name='isSymPressed' final='true' return='boolean'/><method name='isSystem' final='true' return='boolean'/><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='changeAction' static='true' return='android.view.KeyEvent'><parameter name='event' type='android.view.KeyEvent'/><parameter name='action' type='int'/></method><method api_added='3' name='changeFlags' static='true' return='android.view.KeyEvent'><parameter name='event' type='android.view.KeyEvent'/><parameter name='flags' type='int'/></method><method api_added='3' name='changeTimeRepeat' static='true' return='android.view.KeyEvent'><parameter name='event' type='android.view.KeyEvent'/><parameter name='eventTime' type='long'/><parameter name='newRepeat' type='int'/></method><method api_added='3' name='getCharacters' final='true' return='java.lang.String'/><method api_added='3' name='getMaxKeyCode' static='true' return='int'/><method api_added='5' name='changeTimeRepeat' static='true' return='android.view.KeyEvent'><parameter name='event' type='android.view.KeyEvent'/><parameter name='eventTime' type='long'/><parameter name='newRepeat' type='int'/><parameter name='newFlags' type='int'/></method><method api_added='5' name='dispatch' final='true' return='boolean'><parameter name='receiver' type='android.view.KeyEvent.Callback'/><parameter name='state' type='android.view.KeyEvent.DispatcherState'/><parameter name='target' type='java.lang.Object'/></method><method api_added='5' name='isCanceled' final='true' return='boolean'/><method api_added='5' name='isLongPress' final='true' return='boolean'/><method api_added='5' name='isTracking' final='true' return='boolean'/><method api_added='5' name='startTracking' final='true'/></class><class name='LayoutInflater' extends='java.lang.Object' abstract='true'><constructor name='LayoutInflater' type='android.view.LayoutInflater' visibility='protected'><parameter name='context' type='android.content.Context'/></constructor><constructor name='LayoutInflater' type='android.view.LayoutInflater' visibility='protected'><parameter name='original' type='android.view.LayoutInflater'/><parameter name='newContext' type='android.content.Context'/></constructor><method name='cloneInContext' abstract='true' return='android.view.LayoutInflater'><parameter name='newContext' type='android.content.Context'/></method><method name='createView' final='true' return='android.view.View'><parameter name='name' type='java.lang.String'/><parameter name='prefix' type='java.lang.String'/><parameter name='attrs' type='android.util.AttributeSet'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='InflateException' type='android.view.InflateException'/></method><method name='from' static='true' return='android.view.LayoutInflater'><parameter name='context' type='android.content.Context'/></method><method name='getContext' return='android.content.Context'/><method name='getFactory' final='true' return='android.view.LayoutInflater.Factory'/><method name='getFilter' return='android.view.LayoutInflater.Filter'/><method name='inflate' return='android.view.View'><parameter name='resource' type='int'/><parameter name='root' type='android.view.ViewGroup'/></method><method name='inflate' return='android.view.View'><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='root' type='android.view.ViewGroup'/></method><method name='inflate' return='android.view.View'><parameter name='resource' type='int'/><parameter name='root' type='android.view.ViewGroup'/><parameter name='attachToRoot' type='boolean'/></method><method name='inflate' return='android.view.View'><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='root' type='android.view.ViewGroup'/><parameter name='attachToRoot' type='boolean'/></method><method name='onCreateView' visibility='protected' return='android.view.View'><parameter name='name' type='java.lang.String'/><parameter name='attrs' type='android.util.AttributeSet'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='setFactory'><parameter name='factory' type='android.view.LayoutInflater.Factory'/></method><method name='setFilter'><parameter name='filter' type='android.view.LayoutInflater.Filter'/></method></class><class name='MenuInflater' extends='java.lang.Object'><constructor name='MenuInflater' type='android.view.MenuInflater'><parameter name='context' type='android.content.Context'/></constructor><method name='inflate'><parameter name='menuRes' type='int'/><parameter name='menu' type='android.view.Menu'/></method></class><class name='MotionEvent' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='ACTION_CANCEL' final='true' static='true' value='3' type='int'/><field name='ACTION_DOWN' final='true' static='true' value='0' type='int'/><field name='ACTION_MOVE' final='true' static='true' value='2' type='int'/><field name='ACTION_UP' final='true' static='true' value='1' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='EDGE_BOTTOM' final='true' static='true' value='2' type='int'/><field name='EDGE_LEFT' final='true' static='true' value='4' type='int'/><field name='EDGE_RIGHT' final='true' static='true' value='8' type='int'/><field name='EDGE_TOP' final='true' static='true' value='1' type='int'/><field api_added='3' name='ACTION_OUTSIDE' final='true' static='true' value='4' type='int'/><field api_added='5' name='ACTION_MASK' final='true' static='true' value='255' type='int'/><field api_added='5' name='ACTION_POINTER_1_DOWN' final='true' static='true' value='5' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_1_UP' final='true' static='true' value='6' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_2_DOWN' final='true' static='true' value='261' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_2_UP' final='true' static='true' value='262' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_3_DOWN' final='true' static='true' value='517' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_3_UP' final='true' static='true' value='518' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_DOWN' final='true' static='true' value='5' type='int'/><field api_added='5' name='ACTION_POINTER_ID_MASK' final='true' static='true' value='65280' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_ID_SHIFT' final='true' static='true' value='8' type='int' deprecated='8'/><field api_added='5' name='ACTION_POINTER_UP' final='true' static='true' value='6' type='int'/><field api_added='8' name='ACTION_POINTER_INDEX_MASK' final='true' static='true' value='65280' type='int'/><field api_added='8' name='ACTION_POINTER_INDEX_SHIFT' final='true' static='true' value='8' type='int'/><method name='addBatch' final='true'><parameter name='eventTime' type='long'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='pressure' type='float'/><parameter name='size' type='float'/><parameter name='metaState' type='int'/></method><method name='describeContents' return='int'/><method name='getAction' final='true' return='int'/><method name='getDeviceId' final='true' return='int'/><method name='getDownTime' final='true' return='long'/><method name='getEdgeFlags' final='true' return='int'/><method name='getEventTime' final='true' return='long'/><method name='getHistoricalEventTime' final='true' return='long'><parameter name='pos' type='int'/></method><method name='getHistoricalPressure' final='true' return='float'><parameter name='pos' type='int'/></method><method name='getHistoricalSize' final='true' return='float'><parameter name='pos' type='int'/></method><method name='getHistoricalX' final='true' return='float'><parameter name='pos' type='int'/></method><method name='getHistoricalY' final='true' return='float'><parameter name='pos' type='int'/></method><method name='getHistorySize' final='true' return='int'/><method name='getMetaState' final='true' return='int'/><method name='getPressure' final='true' return='float'/><method name='getRawX' final='true' return='float'/><method name='getRawY' final='true' return='float'/><method name='getSize' final='true' return='float'/><method name='getX' final='true' return='float'/><method name='getXPrecision' final='true' return='float'/><method name='getY' final='true' return='float'/><method name='getYPrecision' final='true' return='float'/><method name='obtain' static='true' return='android.view.MotionEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='pressure' type='float'/><parameter name='size' type='float'/><parameter name='metaState' type='int'/><parameter name='xPrecision' type='float'/><parameter name='yPrecision' type='float'/><parameter name='deviceId' type='int'/><parameter name='edgeFlags' type='int'/></method><method name='obtain' static='true' return='android.view.MotionEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='metaState' type='int'/></method><method name='obtain' static='true' return='android.view.MotionEvent'><parameter name='o' type='android.view.MotionEvent'/></method><method name='offsetLocation' final='true'><parameter name='deltaX' type='float'/><parameter name='deltaY' type='float'/></method><method name='recycle'/><method name='setAction' final='true'><parameter name='action' type='int'/></method><method name='setEdgeFlags' final='true'><parameter name='flags' type='int'/></method><method name='setLocation' final='true'><parameter name='x' type='float'/><parameter name='y' type='float'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='5' name='findPointerIndex' final='true' return='int'><parameter name='pointerId' type='int'/></method><method api_added='5' name='getHistoricalPressure' final='true' return='float'><parameter name='pointerIndex' type='int'/><parameter name='pos' type='int'/></method><method api_added='5' name='getHistoricalSize' final='true' return='float'><parameter name='pointerIndex' type='int'/><parameter name='pos' type='int'/></method><method api_added='5' name='getHistoricalX' final='true' return='float'><parameter name='pointerIndex' type='int'/><parameter name='pos' type='int'/></method><method api_added='5' name='getHistoricalY' final='true' return='float'><parameter name='pointerIndex' type='int'/><parameter name='pos' type='int'/></method><method api_added='5' name='getPointerCount' final='true' return='int'/><method api_added='5' name='getPointerId' final='true' return='int'><parameter name='pointerIndex' type='int'/></method><method api_added='5' name='getPressure' final='true' return='float'><parameter name='pointerIndex' type='int'/></method><method api_added='5' name='getSize' final='true' return='float'><parameter name='pointerIndex' type='int'/></method><method api_added='5' name='getX' final='true' return='float'><parameter name='pointerIndex' type='int'/></method><method api_added='5' name='getY' final='true' return='float'><parameter name='pointerIndex' type='int'/></method><method api_added='5' name='obtain' static='true' return='android.view.MotionEvent'><parameter name='downTime' type='long'/><parameter name='eventTime' type='long'/><parameter name='action' type='int'/><parameter name='pointers' type='int'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='pressure' type='float'/><parameter name='size' type='float'/><parameter name='metaState' type='int'/><parameter name='xPrecision' type='float'/><parameter name='yPrecision' type='float'/><parameter name='deviceId' type='int'/><parameter name='edgeFlags' type='int'/></method><method api_added='5' name='obtainNoHistory' static='true' return='android.view.MotionEvent'><parameter name='o' type='android.view.MotionEvent'/></method><method api_added='8' name='getActionIndex' final='true' return='int'/><method api_added='8' name='getActionMasked' final='true' return='int'/></class><class name='OrientationListener' extends='java.lang.Object' abstract='true' deprecated='3'><implements name='android.hardware.SensorListener'/><constructor name='OrientationListener' type='android.view.OrientationListener'><parameter name='context' type='android.content.Context'/><parameter name='rate' type='int'/></constructor><field name='ORIENTATION_UNKNOWN' final='true' static='true' value='-1' type='int'/><method name='disable'/><method name='enable'/><method name='onAccuracyChanged'><parameter name='sensor' type='int'/><parameter name='accuracy' type='int'/></method><method name='onOrientationChanged' abstract='true'><parameter name='orientation' type='int'/></method><method name='onSensorChanged'><parameter name='sensor' type='int'/><parameter name='values' type='float[]'/></method></class><class name='SoundEffectConstants' extends='java.lang.Object'><field name='CLICK' final='true' static='true' value='0' type='int'/><field name='NAVIGATION_DOWN' final='true' static='true' value='4' type='int'/><field name='NAVIGATION_LEFT' final='true' static='true' value='1' type='int'/><field name='NAVIGATION_RIGHT' final='true' static='true' value='3' type='int'/><field name='NAVIGATION_UP' final='true' static='true' value='2' type='int'/><method name='getContantForFocusDirection' static='true' return='int'><parameter name='direction' type='int'/></method></class><class name='Surface' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='FX_SURFACE_BLUR' final='true' static='true' value='65536' type='int'/><field name='FX_SURFACE_DIM' final='true' static='true' value='131072' type='int'/><field name='FX_SURFACE_MASK' final='true' static='true' value='983040' type='int'/><field name='FX_SURFACE_NORMAL' final='true' static='true' value='0' type='int'/><field name='GPU' final='true' static='true' value='40' type='int' deprecated='5'/><field name='HARDWARE' final='true' static='true' value='16' type='int' deprecated='5'/><field name='HIDDEN' final='true' static='true' value='4' type='int'/><field name='NON_PREMULTIPLIED' final='true' static='true' value='256' type='int'/><field name='PUSH_BUFFERS' final='true' static='true' value='512' type='int'/><field name='ROTATION_0' final='true' static='true' value='0' type='int'/><field name='ROTATION_180' final='true' static='true' value='2' type='int'/><field name='ROTATION_270' final='true' static='true' value='3' type='int'/><field name='ROTATION_90' final='true' static='true' value='1' type='int'/><field name='SECURE' final='true' static='true' value='128' type='int'/><field name='SURACE_FROZEN' final='true' static='true' value='2' type='int' deprecated='4'/><field name='SURFACE_BLUR_FREEZE' final='true' static='true' value='16' type='int'/><field name='SURFACE_DITHER' final='true' static='true' value='4' type='int'/><field name='SURFACE_HIDDEN' final='true' static='true' value='1' type='int'/><field api_added='4' name='SURFACE_FROZEN' final='true' static='true' value='2' type='int'/><method name='describeContents' return='int'/><method name='freeze' native='true'/><method name='hide' native='true'/><method name='isValid' native='true' return='boolean'/><method name='lockCanvas' return='android.graphics.Canvas'><parameter name='dirty' type='android.graphics.Rect'/><exception name='Surface.OutOfResourcesException' type='android.view.Surface.OutOfResourcesException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='readFromParcel' native='true'><parameter name='source' type='android.os.Parcel'/></method><method name='setAlpha' native='true'><parameter name='alpha' type='float'/></method><method name='setFlags' native='true'><parameter name='flags' type='int'/><parameter name='mask' type='int'/></method><method name='setFreezeTint' native='true'><parameter name='tint' type='int'/></method><method name='setLayer' native='true'><parameter name='zorder' type='int'/></method><method name='setMatrix' native='true'><parameter name='dsdx' type='float'/><parameter name='dtdx' type='float'/><parameter name='dsdy' type='float'/><parameter name='dtdy' type='float'/></method><method name='setOrientation' native='true' static='true'><parameter name='display' type='int'/><parameter name='orientation' type='int'/></method><method name='setPosition' native='true'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='setSize' native='true'><parameter name='w' type='int'/><parameter name='h' type='int'/></method><method name='setTransparentRegionHint' native='true'><parameter name='region' type='android.graphics.Region'/></method><method name='show' native='true'/><method name='unfreeze' native='true'/><method name='unlockCanvas' native='true'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='unlockCanvasAndPost' native='true'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='writeToParcel' native='true'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class name='Surface.OutOfResourcesException' extends='java.lang.Exception' static='true'><constructor name='Surface.OutOfResourcesException' type='android.view.Surface.OutOfResourcesException'/><constructor name='Surface.OutOfResourcesException' type='android.view.Surface.OutOfResourcesException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='SurfaceHolder.BadSurfaceTypeException' extends='java.lang.RuntimeException' static='true'><constructor name='SurfaceHolder.BadSurfaceTypeException' type='android.view.SurfaceHolder.BadSurfaceTypeException'/><constructor name='SurfaceHolder.BadSurfaceTypeException' type='android.view.SurfaceHolder.BadSurfaceTypeException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='SurfaceView' extends='android.view.View'><constructor name='SurfaceView' type='android.view.SurfaceView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='SurfaceView' type='android.view.SurfaceView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='SurfaceView' type='android.view.SurfaceView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='gatherTransparentRegion' return='boolean'><parameter name='region' type='android.graphics.Region'/></method><method name='getHolder' return='android.view.SurfaceHolder'/><method api_added='5' name='setZOrderMediaOverlay'><parameter name='isMediaOverlay' type='boolean'/></method><method api_added='5' name='setZOrderOnTop'><parameter name='onTop' type='boolean'/></method></class><class name='TouchDelegate' extends='java.lang.Object'><constructor name='TouchDelegate' type='android.view.TouchDelegate'><parameter name='bounds' type='android.graphics.Rect'/><parameter name='delegateView' type='android.view.View'/></constructor><field name='ABOVE' final='true' static='true' value='1' type='int'/><field name='BELOW' final='true' static='true' value='2' type='int'/><field name='TO_LEFT' final='true' static='true' value='4' type='int'/><field name='TO_RIGHT' final='true' static='true' value='8' type='int'/><method name='onTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method></class><class name='VelocityTracker' final='true' extends='java.lang.Object'><method name='addMovement'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='clear'/><method name='computeCurrentVelocity'><parameter name='units' type='int'/></method><method name='getXVelocity' return='float'/><method name='getYVelocity' return='float'/><method name='obtain' static='true' return='android.view.VelocityTracker'/><method name='recycle'/><method api_added='4' name='computeCurrentVelocity'><parameter name='units' type='int'/><parameter name='maxVelocity' type='float'/></method><method api_added='8' name='getXVelocity' return='float'><parameter name='id' type='int'/></method><method api_added='8' name='getYVelocity' return='float'><parameter name='id' type='int'/></method></class><class name='View' extends='java.lang.Object'><implements name='android.graphics.drawable.Drawable.Callback'/><implements name='android.view.KeyEvent.Callback'/><implements name='android.view.accessibility.AccessibilityEventSource'/><constructor name='View' type='android.view.View'><parameter name='context' type='android.content.Context'/></constructor><constructor name='View' type='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='View' type='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='DRAWING_CACHE_QUALITY_AUTO' final='true' static='true' value='0' type='int'/><field name='DRAWING_CACHE_QUALITY_HIGH' final='true' static='true' value='1048576' type='int'/><field name='DRAWING_CACHE_QUALITY_LOW' final='true' static='true' value='524288' type='int'/><field name='EMPTY_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_FOCUSED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='ENABLED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='FOCUSED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='FOCUSED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='FOCUS_BACKWARD' final='true' static='true' value='1' type='int'/><field name='FOCUS_DOWN' final='true' static='true' value='130' type='int'/><field name='FOCUS_FORWARD' final='true' static='true' value='2' type='int'/><field name='FOCUS_LEFT' final='true' static='true' value='17' type='int'/><field name='FOCUS_RIGHT' final='true' static='true' value='66' type='int'/><field name='FOCUS_UP' final='true' static='true' value='33' type='int'/><field name='GONE' final='true' static='true' value='8' type='int'/><field name='INVISIBLE' final='true' static='true' value='4' type='int'/><field name='KEEP_SCREEN_ON' final='true' static='true' value='67108864' type='int'/><field name='NO_ID' final='true' static='true' value='-1' type='int'/><field name='PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_FOCUSED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='PRESSED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='SCROLLBARS_INSIDE_INSET' final='true' static='true' value='16777216' type='int'/><field name='SCROLLBARS_INSIDE_OVERLAY' final='true' static='true' value='0' type='int'/><field name='SCROLLBARS_OUTSIDE_INSET' final='true' static='true' value='50331648' type='int'/><field name='SCROLLBARS_OUTSIDE_OVERLAY' final='true' static='true' value='33554432' type='int'/><field name='SELECTED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='SELECTED_WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field name='SOUND_EFFECTS_ENABLED' final='true' static='true' value='134217728' type='int'/><field name='VIEW_LOG_TAG' final='true' static='true' value='&quot;View&quot;' type='java.lang.String' visibility='protected'/><field name='VISIBLE' final='true' static='true' value='0' type='int'/><field name='WINDOW_FOCUSED_STATE_SET' final='true' static='true' value='null' type='int[]' visibility='protected'/><field api_added='3' name='HAPTIC_FEEDBACK_ENABLED' final='true' static='true' value='268435456' type='int'/><field api_added='4' name='FOCUSABLES_ALL' final='true' static='true' value='0' type='int'/><field api_added='4' name='FOCUSABLES_TOUCH_MODE' final='true' static='true' value='1' type='int'/><method name='addFocusables'><parameter name='views' type='java.util.ArrayList&lt;android.view.View&gt;'/><parameter name='direction' type='int'/></method><method name='addTouchables'><parameter name='views' type='java.util.ArrayList&lt;android.view.View&gt;'/></method><method name='bringToFront'/><method name='buildDrawingCache'/><method name='cancelLongPress'/><method name='clearAnimation'/><method name='clearFocus'/><method name='computeHorizontalScrollExtent' visibility='protected' return='int'/><method name='computeHorizontalScrollOffset' visibility='protected' return='int'/><method name='computeHorizontalScrollRange' visibility='protected' return='int'/><method name='computeScroll'/><method name='computeVerticalScrollExtent' visibility='protected' return='int'/><method name='computeVerticalScrollOffset' visibility='protected' return='int'/><method name='computeVerticalScrollRange' visibility='protected' return='int'/><method name='createContextMenu'><parameter name='menu' type='android.view.ContextMenu'/></method><method name='destroyDrawingCache'/><method name='dispatchDraw' visibility='protected'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='dispatchKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='dispatchKeyShortcutEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='dispatchRestoreInstanceState' visibility='protected'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='dispatchSaveInstanceState' visibility='protected'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='dispatchSetPressed' visibility='protected'><parameter name='pressed' type='boolean'/></method><method name='dispatchSetSelected' visibility='protected'><parameter name='selected' type='boolean'/></method><method name='dispatchTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='dispatchTrackballEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='dispatchUnhandledMove' return='boolean'><parameter name='focused' type='android.view.View'/><parameter name='direction' type='int'/></method><method name='dispatchWindowFocusChanged'><parameter name='hasFocus' type='boolean'/></method><method name='dispatchWindowVisibilityChanged'><parameter name='visibility' type='int'/></method><method name='draw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='drawableStateChanged' visibility='protected'/><method name='findFocus' return='android.view.View'/><method name='findViewById' final='true' return='android.view.View'><parameter name='id' type='int'/></method><method name='findViewWithTag' final='true' return='android.view.View'><parameter name='tag' type='java.lang.Object'/></method><method name='fitSystemWindows' visibility='protected' return='boolean'><parameter name='insets' type='android.graphics.Rect'/></method><method name='focusSearch' return='android.view.View'><parameter name='direction' type='int'/></method><method name='forceLayout'/><method name='getAnimation' return='android.view.animation.Animation'/><method name='getApplicationWindowToken' return='android.os.IBinder'/><method name='getBackground' return='android.graphics.drawable.Drawable'/><method name='getBaseline' return='int'/><method name='getBottom' final='true' return='int'/><method name='getBottomFadingEdgeStrength' visibility='protected' return='float'/><method name='getContext' final='true' return='android.content.Context'/><method name='getContextMenuInfo' visibility='protected' return='android.view.ContextMenu.ContextMenuInfo'/><method name='getDefaultSize' static='true' return='int'><parameter name='size' type='int'/><parameter name='measureSpec' type='int'/></method><method name='getDrawableState' final='true' return='int[]'/><method name='getDrawingCache' return='android.graphics.Bitmap'/><method name='getDrawingCacheBackgroundColor' return='int'/><method name='getDrawingCacheQuality' return='int'/><method name='getDrawingRect'><parameter name='outRect' type='android.graphics.Rect'/></method><method name='getDrawingTime' return='long'/><method name='getFocusables' return='java.util.ArrayList&lt;android.view.View&gt;'><parameter name='direction' type='int'/></method><method name='getFocusedRect'><parameter name='r' type='android.graphics.Rect'/></method><method name='getGlobalVisibleRect' return='boolean'><parameter name='r' type='android.graphics.Rect'/><parameter name='globalOffset' type='android.graphics.Point'/></method><method name='getGlobalVisibleRect' final='true' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='getHandler' visibility='protected' return='android.os.Handler'/><method name='getHeight' final='true' return='int'/><method name='getHitRect'><parameter name='outRect' type='android.graphics.Rect'/></method><method name='getHorizontalFadingEdgeLength' return='int'/><method name='getHorizontalScrollbarHeight' visibility='protected' return='int'/><method name='getId' return='int'/><method name='getKeepScreenOn' return='boolean'/><method name='getLayoutParams' return='android.view.ViewGroup.LayoutParams'/><method name='getLeft' final='true' return='int'/><method name='getLeftFadingEdgeStrength' visibility='protected' return='float'/><method name='getLocalVisibleRect' final='true' return='boolean'><parameter name='r' type='android.graphics.Rect'/></method><method name='getLocationInWindow'><parameter name='location' type='int[]'/></method><method name='getLocationOnScreen'><parameter name='location' type='int[]'/></method><method name='getMeasuredHeight' final='true' return='int'/><method name='getMeasuredWidth' final='true' return='int'/><method name='getNextFocusDownId' return='int'/><method name='getNextFocusLeftId' return='int'/><method name='getNextFocusRightId' return='int'/><method name='getNextFocusUpId' return='int'/><method name='getOnFocusChangeListener' return='android.view.View.OnFocusChangeListener'/><method name='getPaddingBottom' return='int'/><method name='getPaddingLeft' return='int'/><method name='getPaddingRight' return='int'/><method name='getPaddingTop' return='int'/><method name='getParent' final='true' return='android.view.ViewParent'/><method name='getResources' return='android.content.res.Resources'/><method name='getRight' final='true' return='int'/><method name='getRightFadingEdgeStrength' visibility='protected' return='float'/><method name='getRootView' return='android.view.View'/><method name='getScrollBarStyle' return='int'/><method name='getScrollX' final='true' return='int'/><method name='getScrollY' final='true' return='int'/><method name='getSolidColor' return='int'/><method name='getSuggestedMinimumHeight' visibility='protected' return='int'/><method name='getSuggestedMinimumWidth' visibility='protected' return='int'/><method name='getTag' return='java.lang.Object'/><method name='getTop' final='true' return='int'/><method name='getTopFadingEdgeStrength' visibility='protected' return='float'/><method name='getTouchDelegate' return='android.view.TouchDelegate'/><method name='getTouchables' return='java.util.ArrayList&lt;android.view.View&gt;'/><method name='getVerticalFadingEdgeLength' return='int'/><method name='getVerticalScrollbarWidth' return='int'/><method name='getViewTreeObserver' return='android.view.ViewTreeObserver'/><method name='getVisibility' return='int'/><method name='getWidth' final='true' return='int'/><method name='getWindowAttachCount' visibility='protected' return='int'/><method name='getWindowToken' return='android.os.IBinder'/><method name='getWindowVisibility' return='int'/><method name='hasFocus' return='boolean'/><method name='hasFocusable' return='boolean'/><method name='hasWindowFocus' return='boolean'/><method name='inflate' static='true' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='resource' type='int'/><parameter name='root' type='android.view.ViewGroup'/></method><method name='initializeFadingEdge' visibility='protected'><parameter name='a' type='android.content.res.TypedArray'/></method><method name='initializeScrollbars' visibility='protected'><parameter name='a' type='android.content.res.TypedArray'/></method><method name='invalidate'><parameter name='dirty' type='android.graphics.Rect'/></method><method name='invalidate'><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='invalidate'/><method name='invalidateDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='isClickable' return='boolean'/><method name='isDrawingCacheEnabled' return='boolean'/><method name='isDuplicateParentStateEnabled' return='boolean'/><method name='isEnabled' return='boolean'/><method name='isFocusable' final='true' return='boolean'/><method name='isFocusableInTouchMode' final='true' return='boolean'/><method name='isFocused' return='boolean'/><method name='isHorizontalFadingEdgeEnabled' return='boolean'/><method name='isHorizontalScrollBarEnabled' return='boolean'/><method name='isInTouchMode' return='boolean'/><method name='isLayoutRequested' return='boolean'/><method name='isLongClickable' return='boolean'/><method name='isPressed' return='boolean'/><method name='isSaveEnabled' return='boolean'/><method name='isSelected' return='boolean'/><method name='isShown' return='boolean'/><method name='isSoundEffectsEnabled' return='boolean'/><method name='isVerticalFadingEdgeEnabled' return='boolean'/><method name='isVerticalScrollBarEnabled' return='boolean'/><method name='layout' final='true'><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='measure' final='true'><parameter name='widthMeasureSpec' type='int'/><parameter name='heightMeasureSpec' type='int'/></method><method name='mergeDrawableStates' static='true' visibility='protected' return='int[]'><parameter name='baseState' type='int[]'/><parameter name='additionalState' type='int[]'/></method><method name='offsetLeftAndRight'><parameter name='offset' type='int'/></method><method name='offsetTopAndBottom'><parameter name='offset' type='int'/></method><method name='onAnimationEnd' visibility='protected'/><method name='onAnimationStart' visibility='protected'/><method name='onAttachedToWindow' visibility='protected'/><method name='onCreateContextMenu' visibility='protected'><parameter name='menu' type='android.view.ContextMenu'/></method><method name='onCreateDrawableState' visibility='protected' return='int[]'><parameter name='extraSpace' type='int'/></method><method name='onDetachedFromWindow' visibility='protected'/><method name='onDraw' visibility='protected'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='onFinishInflate' visibility='protected'/><method name='onFocusChanged' visibility='protected'><parameter name='gainFocus' type='boolean'/><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method><method name='onKeyDown' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyMultiple' return='boolean'><parameter name='keyCode' type='int'/><parameter name='repeatCount' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyShortcut' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='onMeasure' visibility='protected'><parameter name='widthMeasureSpec' type='int'/><parameter name='heightMeasureSpec' type='int'/></method><method name='onRestoreInstanceState' visibility='protected'><parameter name='state' type='android.os.Parcelable'/></method><method name='onSaveInstanceState' visibility='protected' return='android.os.Parcelable'/><method name='onScrollChanged' visibility='protected'><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='oldl' type='int'/><parameter name='oldt' type='int'/></method><method name='onSetAlpha' visibility='protected' return='boolean'><parameter name='alpha' type='int'/></method><method name='onSizeChanged' visibility='protected'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='oldw' type='int'/><parameter name='oldh' type='int'/></method><method name='onTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onTrackballEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onWindowFocusChanged'><parameter name='hasWindowFocus' type='boolean'/></method><method name='onWindowVisibilityChanged' visibility='protected'><parameter name='visibility' type='int'/></method><method name='performClick' return='boolean'/><method name='performLongClick' return='boolean'/><method name='playSoundEffect' visibility='protected'><parameter name='soundConstant' type='int'/></method><method name='post' return='boolean'><parameter name='action' type='java.lang.Runnable'/></method><method name='postDelayed' return='boolean'><parameter name='action' type='java.lang.Runnable'/><parameter name='delayMillis' type='long'/></method><method name='postInvalidate'/><method name='postInvalidate'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='postInvalidateDelayed'><parameter name='delayMilliseconds' type='long'/></method><method name='postInvalidateDelayed'><parameter name='delayMilliseconds' type='long'/><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='refreshDrawableState'/><method name='removeCallbacks' return='boolean'><parameter name='action' type='java.lang.Runnable'/></method><method name='requestFocus' final='true' return='boolean'/><method name='requestFocus' final='true' return='boolean'><parameter name='direction' type='int'/></method><method name='requestFocus' return='boolean'><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method><method name='requestFocusFromTouch' final='true' return='boolean'/><method name='requestLayout'/><method name='requestRectangleOnScreen' return='boolean'><parameter name='rectangle' type='android.graphics.Rect'/></method><method name='requestRectangleOnScreen' return='boolean'><parameter name='rectangle' type='android.graphics.Rect'/><parameter name='immediate' type='boolean'/></method><method name='resolveSize' static='true' return='int'><parameter name='size' type='int'/><parameter name='measureSpec' type='int'/></method><method name='restoreHierarchyState'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='saveHierarchyState'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='scheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/><parameter name='when' type='long'/></method><method name='scrollBy'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='scrollTo'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='setAnimation'><parameter name='animation' type='android.view.animation.Animation'/></method><method name='setBackgroundColor'><parameter name='color' type='int'/></method><method name='setBackgroundDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setBackgroundResource'><parameter name='resid' type='int'/></method><method name='setClickable'><parameter name='clickable' type='boolean'/></method><method name='setDrawingCacheBackgroundColor'><parameter name='color' type='int'/></method><method name='setDrawingCacheEnabled'><parameter name='enabled' type='boolean'/></method><method name='setDrawingCacheQuality'><parameter name='quality' type='int'/></method><method name='setDuplicateParentStateEnabled'><parameter name='enabled' type='boolean'/></method><method name='setEnabled'><parameter name='enabled' type='boolean'/></method><method name='setFadingEdgeLength'><parameter name='length' type='int'/></method><method name='setFocusable'><parameter name='focusable' type='boolean'/></method><method name='setFocusableInTouchMode'><parameter name='focusableInTouchMode' type='boolean'/></method><method name='setHorizontalFadingEdgeEnabled'><parameter name='horizontalFadingEdgeEnabled' type='boolean'/></method><method name='setHorizontalScrollBarEnabled'><parameter name='horizontalScrollBarEnabled' type='boolean'/></method><method name='setId'><parameter name='id' type='int'/></method><method name='setKeepScreenOn'><parameter name='keepScreenOn' type='boolean'/></method><method name='setLayoutParams'><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='setLongClickable'><parameter name='longClickable' type='boolean'/></method><method name='setMeasuredDimension' final='true' visibility='protected'><parameter name='measuredWidth' type='int'/><parameter name='measuredHeight' type='int'/></method><method name='setMinimumHeight'><parameter name='minHeight' type='int'/></method><method name='setMinimumWidth'><parameter name='minWidth' type='int'/></method><method name='setNextFocusDownId'><parameter name='nextFocusDownId' type='int'/></method><method name='setNextFocusLeftId'><parameter name='nextFocusLeftId' type='int'/></method><method name='setNextFocusRightId'><parameter name='nextFocusRightId' type='int'/></method><method name='setNextFocusUpId'><parameter name='nextFocusUpId' type='int'/></method><method name='setOnClickListener'><parameter name='l' type='android.view.View.OnClickListener'/></method><method name='setOnCreateContextMenuListener'><parameter name='l' type='android.view.View.OnCreateContextMenuListener'/></method><method name='setOnFocusChangeListener'><parameter name='l' type='android.view.View.OnFocusChangeListener'/></method><method name='setOnKeyListener'><parameter name='l' type='android.view.View.OnKeyListener'/></method><method name='setOnLongClickListener'><parameter name='l' type='android.view.View.OnLongClickListener'/></method><method name='setOnTouchListener'><parameter name='l' type='android.view.View.OnTouchListener'/></method><method name='setPadding'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='setPressed'><parameter name='pressed' type='boolean'/></method><method name='setSaveEnabled'><parameter name='enabled' type='boolean'/></method><method name='setScrollBarStyle'><parameter name='style' type='int'/></method><method name='setSelected'><parameter name='selected' type='boolean'/></method><method name='setSoundEffectsEnabled'><parameter name='soundEffectsEnabled' type='boolean'/></method><method name='setTag'><parameter name='tag' type='java.lang.Object'/></method><method name='setTouchDelegate'><parameter name='delegate' type='android.view.TouchDelegate'/></method><method name='setVerticalFadingEdgeEnabled'><parameter name='verticalFadingEdgeEnabled' type='boolean'/></method><method name='setVerticalScrollBarEnabled'><parameter name='verticalScrollBarEnabled' type='boolean'/></method><method name='setVisibility'><parameter name='visibility' type='int'/></method><method name='setWillNotCacheDrawing'><parameter name='willNotCacheDrawing' type='boolean'/></method><method name='setWillNotDraw'><parameter name='willNotDraw' type='boolean'/></method><method name='showContextMenu' return='boolean'/><method name='startAnimation'><parameter name='animation' type='android.view.animation.Animation'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/><parameter name='what' type='java.lang.Runnable'/></method><method name='unscheduleDrawable'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='verifyDrawable' visibility='protected' return='boolean'><parameter name='who' type='android.graphics.drawable.Drawable'/></method><method name='willNotCacheDrawing' return='boolean'/><method name='willNotDraw' return='boolean'/><method api_added='2' name='getBottomPaddingOffset' visibility='protected' return='int'/><method api_added='2' name='getLeftPaddingOffset' visibility='protected' return='int'/><method api_added='2' name='getRightPaddingOffset' visibility='protected' return='int'/><method api_added='2' name='getTopPaddingOffset' visibility='protected' return='int'/><method api_added='2' name='isPaddingOffsetRequired' visibility='protected' return='boolean'/><method api_added='3' name='checkInputConnectionProxy' return='boolean'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='dispatchKeyEventPreIme' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='getWindowVisibleDisplayFrame'><parameter name='outRect' type='android.graphics.Rect'/></method><method api_added='3' name='isHapticFeedbackEnabled' return='boolean'/><method api_added='3' name='isInEditMode' return='boolean'/><method api_added='3' name='onCheckIsTextEditor' return='boolean'/><method api_added='3' name='onCreateInputConnection' return='android.view.inputmethod.InputConnection'><parameter name='outAttrs' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='onFinishTemporaryDetach'/><method api_added='3' name='onKeyPreIme' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='onStartTemporaryDetach'/><method api_added='3' name='performHapticFeedback' return='boolean'><parameter name='feedbackConstant' type='int'/></method><method api_added='3' name='performHapticFeedback' return='boolean'><parameter name='feedbackConstant' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='setHapticFeedbackEnabled'><parameter name='hapticFeedbackEnabled' type='boolean'/></method><method api_added='3' name='setScrollContainer'><parameter name='isScrollContainer' type='boolean'/></method><method api_added='4' name='addFocusables'><parameter name='views' type='java.util.ArrayList&lt;android.view.View&gt;'/><parameter name='direction' type='int'/><parameter name='focusableMode' type='int'/></method><method api_added='4' name='buildDrawingCache'><parameter name='autoScale' type='boolean'/></method><method api_added='4' name='dispatchPopulateAccessibilityEvent' return='boolean'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='4' name='getContentDescription' return='java.lang.CharSequence'/><method api_added='4' name='getDrawingCache' return='android.graphics.Bitmap'><parameter name='autoScale' type='boolean'/></method><method api_added='4' name='getTag' return='java.lang.Object'><parameter name='key' type='int'/></method><method api_added='4' name='sendAccessibilityEvent'><parameter name='eventType' type='int'/></method><method api_added='4' name='sendAccessibilityEventUnchecked'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='4' name='setContentDescription'><parameter name='contentDescription' type='java.lang.CharSequence'/></method><method api_added='4' name='setTag'><parameter name='key' type='int'/><parameter name='tag' type='java.lang.Object'/></method><method api_added='5' name='awakenScrollBars' visibility='protected' return='boolean'/><method api_added='5' name='awakenScrollBars' visibility='protected' return='boolean'><parameter name='startDelay' type='int'/></method><method api_added='5' name='awakenScrollBars' visibility='protected' return='boolean'><parameter name='startDelay' type='int'/><parameter name='invalidate' type='boolean'/></method><method api_added='5' name='getKeyDispatcherState' return='android.view.KeyEvent.DispatcherState'/><method api_added='5' name='isScrollbarFadingEnabled' return='boolean'/><method api_added='5' name='onKeyLongPress' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='setScrollbarFadingEnabled'><parameter name='fadeScrollbars' type='boolean'/></method><method api_added='7' name='isOpaque' return='boolean'/><method api_added='7' name='onDrawScrollBars' final='true' visibility='protected'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='8' name='dispatchConfigurationChanged'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method api_added='8' name='dispatchDisplayHint'><parameter name='hint' type='int'/></method><method api_added='8' name='dispatchVisibilityChanged' visibility='protected'><parameter name='changedView' type='android.view.View'/><parameter name='visibility' type='int'/></method><method api_added='8' name='onConfigurationChanged' visibility='protected'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method api_added='8' name='onDisplayHint' visibility='protected'><parameter name='hint' type='int'/></method><method api_added='8' name='onVisibilityChanged' visibility='protected'><parameter name='changedView' type='android.view.View'/><parameter name='visibility' type='int'/></method></class><class name='View.BaseSavedState' extends='android.view.AbsSavedState' static='true'><constructor name='View.BaseSavedState' type='android.view.View.BaseSavedState'><parameter name='source' type='android.os.Parcel'/></constructor><constructor name='View.BaseSavedState' type='android.view.View.BaseSavedState'><parameter name='superState' type='android.os.Parcelable'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/></class><class name='View.MeasureSpec' extends='java.lang.Object' static='true'><constructor name='View.MeasureSpec' type='android.view.View.MeasureSpec'/><field name='AT_MOST' final='true' static='true' value='-2147483648' type='int'/><field name='EXACTLY' final='true' static='true' value='1073741824' type='int'/><field name='UNSPECIFIED' final='true' static='true' value='0' type='int'/><method name='getMode' static='true' return='int'><parameter name='measureSpec' type='int'/></method><method name='getSize' static='true' return='int'><parameter name='measureSpec' type='int'/></method><method name='makeMeasureSpec' static='true' return='int'><parameter name='size' type='int'/><parameter name='mode' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='measureSpec' type='int'/></method></class><class name='ViewConfiguration' extends='java.lang.Object'><constructor name='ViewConfiguration' type='android.view.ViewConfiguration' deprecated='3'/><method name='getEdgeSlop' static='true' deprecated='3' return='int'/><method name='getFadingEdgeLength' static='true' deprecated='3' return='int'/><method name='getGlobalActionKeyTimeout' static='true' return='long'/><method name='getJumpTapTimeout' static='true' return='int'/><method name='getLongPressTimeout' static='true' return='int'/><method name='getMaximumDrawingCacheSize' static='true' deprecated='3' return='int'/><method name='getMinimumFlingVelocity' static='true' deprecated='3' return='int'/><method name='getPressedStateDuration' static='true' return='int'/><method name='getScrollBarSize' static='true' deprecated='3' return='int'/><method name='getScrollFriction' static='true' return='float'/><method name='getTapTimeout' static='true' return='int'/><method name='getTouchSlop' static='true' deprecated='3' return='int'/><method name='getWindowTouchSlop' static='true' deprecated='3' return='int'/><method name='getZoomControlsTimeout' static='true' return='long'/><method api_added='3' name='get' static='true' return='android.view.ViewConfiguration'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='getDoubleTapTimeout' static='true' return='int'/><method api_added='3' name='getScaledDoubleTapSlop' return='int'/><method api_added='3' name='getScaledEdgeSlop' return='int'/><method api_added='3' name='getScaledFadingEdgeLength' return='int'/><method api_added='3' name='getScaledMaximumDrawingCacheSize' return='int'/><method api_added='3' name='getScaledMinimumFlingVelocity' return='int'/><method api_added='3' name='getScaledScrollBarSize' return='int'/><method api_added='3' name='getScaledTouchSlop' return='int'/><method api_added='3' name='getScaledWindowTouchSlop' return='int'/><method api_added='4' name='getMaximumFlingVelocity' static='true' deprecated='4' return='int'/><method api_added='4' name='getScaledMaximumFlingVelocity' return='int'/><method api_added='5' name='getScrollBarFadeDuration' static='true' return='int'/><method api_added='5' name='getScrollDefaultDelay' static='true' return='int'/><method api_added='8' name='getScaledPagingTouchSlop' return='int'/></class><class name='ViewDebug' extends='java.lang.Object'><constructor name='ViewDebug' type='android.view.ViewDebug'/><field name='TRACE_HIERARCHY' final='true' static='true' value='false' type='boolean'/><field name='TRACE_RECYCLER' final='true' static='true' value='false' type='boolean'/><method name='startHierarchyTracing' static='true'><parameter name='prefix' type='java.lang.String'/><parameter name='view' type='android.view.View'/></method><method name='startRecyclerTracing' static='true'><parameter name='prefix' type='java.lang.String'/><parameter name='view' type='android.view.View'/></method><method name='stopHierarchyTracing' static='true'/><method name='stopRecyclerTracing' static='true'/><method name='trace' static='true'><parameter name='view' type='android.view.View'/><parameter name='type' type='android.view.ViewDebug.RecyclerTraceType'/><parameter name='parameters' type='int...'/></method><method name='trace' static='true'><parameter name='view' type='android.view.View'/><parameter name='type' type='android.view.ViewDebug.HierarchyTraceType'/></method><method api_added='3' name='dumpCapturedView' static='true'><parameter name='tag' type='java.lang.String'/><parameter name='view' type='java.lang.Object'/></method></class><class name='ViewDebug.ExportedProperty' extends='java.lang.Object' abstract='true' static='true'><implements name='java.lang.annotation.Annotation'/></class><class name='ViewDebug.HierarchyTraceType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.view.ViewDebug.HierarchyTraceType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.view.ViewDebug.HierarchyTraceType[]'/></class><class name='ViewDebug.IntToString' extends='java.lang.Object' abstract='true' static='true'><implements name='java.lang.annotation.Annotation'/></class><class name='ViewDebug.RecyclerTraceType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.view.ViewDebug.RecyclerTraceType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.view.ViewDebug.RecyclerTraceType[]'/></class><class name='ViewGroup' extends='android.view.View' abstract='true'><implements name='android.view.ViewManager'/><implements name='android.view.ViewParent'/><constructor name='ViewGroup' type='android.view.ViewGroup'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ViewGroup' type='android.view.ViewGroup'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ViewGroup' type='android.view.ViewGroup'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='CLIP_TO_PADDING_MASK' final='true' static='true' value='34' type='int' visibility='protected'/><field name='FLAG_USE_CHILD_DRAWING_ORDER' final='true' api_removed='5' static='true' value='1024' type='int' visibility='protected'/><field name='FOCUS_AFTER_DESCENDANTS' final='true' static='true' value='262144' type='int'/><field name='FOCUS_BEFORE_DESCENDANTS' final='true' static='true' value='131072' type='int'/><field name='FOCUS_BLOCK_DESCENDANTS' final='true' static='true' value='393216' type='int'/><field name='PERSISTENT_ALL_CACHES' final='true' static='true' value='3' type='int'/><field name='PERSISTENT_ANIMATION_CACHE' final='true' static='true' value='1' type='int'/><field name='PERSISTENT_NO_CACHE' final='true' static='true' value='0' type='int'/><field name='PERSISTENT_SCROLLING_CACHE' final='true' static='true' value='2' type='int'/><method name='addStatesFromChildren' return='boolean'/><method name='addView'><parameter name='child' type='android.view.View'/></method><method name='addView'><parameter name='child' type='android.view.View'/><parameter name='index' type='int'/></method><method name='addView'><parameter name='child' type='android.view.View'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='addView'><parameter name='child' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='addView'><parameter name='child' type='android.view.View'/><parameter name='index' type='int'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='addViewInLayout' visibility='protected' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='index' type='int'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='addViewInLayout' visibility='protected' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='index' type='int'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/><parameter name='preventRequestLayout' type='boolean'/></method><method name='attachLayoutAnimationParameters' visibility='protected'><parameter name='child' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/><parameter name='index' type='int'/><parameter name='count' type='int'/></method><method name='attachViewToParent' visibility='protected'><parameter name='child' type='android.view.View'/><parameter name='index' type='int'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='bringChildToFront'><parameter name='child' type='android.view.View'/></method><method name='canAnimate' visibility='protected' return='boolean'/><method name='checkLayoutParams' visibility='protected' return='boolean'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></method><method name='childDrawableStateChanged'><parameter name='child' type='android.view.View'/></method><method name='cleanupLayoutState' visibility='protected'><parameter name='child' type='android.view.View'/></method><method name='clearChildFocus'><parameter name='child' type='android.view.View'/></method><method name='clearDisappearingChildren'/><method name='debug' visibility='protected'><parameter name='depth' type='int'/></method><method name='detachAllViewsFromParent' visibility='protected'/><method name='detachViewFromParent' visibility='protected'><parameter name='child' type='android.view.View'/></method><method name='detachViewFromParent' visibility='protected'><parameter name='index' type='int'/></method><method name='detachViewsFromParent' visibility='protected'><parameter name='start' type='int'/><parameter name='count' type='int'/></method><method name='dispatchFreezeSelfOnly' visibility='protected'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='dispatchSetSelected'><parameter name='selected' type='boolean'/></method><method name='dispatchThawSelfOnly' visibility='protected'><parameter name='container' type='android.util.SparseArray&lt;android.os.Parcelable&gt;'/></method><method name='drawChild' visibility='protected' return='boolean'><parameter name='canvas' type='android.graphics.Canvas'/><parameter name='child' type='android.view.View'/><parameter name='drawingTime' type='long'/></method><method name='focusSearch' return='android.view.View'><parameter name='focused' type='android.view.View'/><parameter name='direction' type='int'/></method><method name='focusableViewAvailable'><parameter name='v' type='android.view.View'/></method><method name='gatherTransparentRegion' return='boolean'><parameter name='region' type='android.graphics.Region'/></method><method name='generateDefaultLayoutParams' visibility='protected' return='android.view.ViewGroup.LayoutParams'/><method name='generateLayoutParams' return='android.view.ViewGroup.LayoutParams'><parameter name='attrs' type='android.util.AttributeSet'/></method><method name='generateLayoutParams' visibility='protected' return='android.view.ViewGroup.LayoutParams'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></method><method name='getChildAt' return='android.view.View'><parameter name='index' type='int'/></method><method name='getChildCount' return='int'/><method name='getChildDrawingOrder' visibility='protected' return='int'><parameter name='childCount' type='int'/><parameter name='i' type='int'/></method><method name='getChildMeasureSpec' static='true' return='int'><parameter name='spec' type='int'/><parameter name='padding' type='int'/><parameter name='childDimension' type='int'/></method><method name='getChildStaticTransformation' visibility='protected' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='t' type='android.view.animation.Transformation'/></method><method name='getChildVisibleRect' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='r' type='android.graphics.Rect'/><parameter name='offset' type='android.graphics.Point'/></method><method name='getDescendantFocusability' return='int'/><method name='getFocusedChild' return='android.view.View'/><method name='getLayoutAnimation' return='android.view.animation.LayoutAnimationController'/><method name='getLayoutAnimationListener' return='android.view.animation.Animation.AnimationListener'/><method name='getPersistentDrawingCache' return='int'/><method name='indexOfChild' return='int'><parameter name='child' type='android.view.View'/></method><method name='invalidateChild' final='true'><parameter name='child' type='android.view.View'/><parameter name='dirty' type='android.graphics.Rect'/></method><method name='invalidateChildInParent' return='android.view.ViewParent'><parameter name='location' type='int[]'/><parameter name='dirty' type='android.graphics.Rect'/></method><method name='isAlwaysDrawnWithCacheEnabled' return='boolean'/><method name='isAnimationCacheEnabled' return='boolean'/><method name='isChildrenDrawnWithCacheEnabled' visibility='protected' return='boolean'/><method name='measureChild' visibility='protected'><parameter name='child' type='android.view.View'/><parameter name='parentWidthMeasureSpec' type='int'/><parameter name='parentHeightMeasureSpec' type='int'/></method><method name='measureChildWithMargins' visibility='protected'><parameter name='child' type='android.view.View'/><parameter name='parentWidthMeasureSpec' type='int'/><parameter name='widthUsed' type='int'/><parameter name='parentHeightMeasureSpec' type='int'/><parameter name='heightUsed' type='int'/></method><method name='measureChildren' visibility='protected'><parameter name='widthMeasureSpec' type='int'/><parameter name='heightMeasureSpec' type='int'/></method><method name='offsetDescendantRectToMyCoords' final='true'><parameter name='descendant' type='android.view.View'/><parameter name='rect' type='android.graphics.Rect'/></method><method name='offsetRectIntoDescendantCoords' final='true'><parameter name='descendant' type='android.view.View'/><parameter name='rect' type='android.graphics.Rect'/></method><method name='onInterceptTouchEvent' return='boolean'><parameter name='ev' type='android.view.MotionEvent'/></method><method name='onLayout' abstract='true' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='onRequestFocusInDescendants' visibility='protected' return='boolean'><parameter name='direction' type='int'/><parameter name='previouslyFocusedRect' type='android.graphics.Rect'/></method><method name='recomputeViewAttributes'><parameter name='child' type='android.view.View'/></method><method name='removeAllViews'/><method name='removeAllViewsInLayout'/><method name='removeDetachedView' visibility='protected'><parameter name='child' type='android.view.View'/><parameter name='animate' type='boolean'/></method><method name='removeView'><parameter name='view' type='android.view.View'/></method><method name='removeViewAt'><parameter name='index' type='int'/></method><method name='removeViewInLayout'><parameter name='view' type='android.view.View'/></method><method name='removeViews'><parameter name='start' type='int'/><parameter name='count' type='int'/></method><method name='removeViewsInLayout'><parameter name='start' type='int'/><parameter name='count' type='int'/></method><method name='requestChildFocus'><parameter name='child' type='android.view.View'/><parameter name='focused' type='android.view.View'/></method><method name='requestChildRectangleOnScreen' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='rectangle' type='android.graphics.Rect'/><parameter name='immediate' type='boolean'/></method><method name='requestDisallowInterceptTouchEvent'><parameter name='disallowIntercept' type='boolean'/></method><method name='requestTransparentRegion'><parameter name='child' type='android.view.View'/></method><method name='scheduleLayoutAnimation'/><method name='setAddStatesFromChildren'><parameter name='addsStates' type='boolean'/></method><method name='setAlwaysDrawnWithCacheEnabled'><parameter name='always' type='boolean'/></method><method name='setAnimationCacheEnabled'><parameter name='enabled' type='boolean'/></method><method name='setChildrenDrawingCacheEnabled' visibility='protected'><parameter name='enabled' type='boolean'/></method><method name='setChildrenDrawnWithCacheEnabled' visibility='protected'><parameter name='enabled' type='boolean'/></method><method name='setClipChildren'><parameter name='clipChildren' type='boolean'/></method><method name='setClipToPadding'><parameter name='clipToPadding' type='boolean'/></method><method name='setDescendantFocusability'><parameter name='focusability' type='int'/></method><method name='setLayoutAnimation'><parameter name='controller' type='android.view.animation.LayoutAnimationController'/></method><method name='setLayoutAnimationListener'><parameter name='animationListener' type='android.view.animation.Animation.AnimationListener'/></method><method name='setOnHierarchyChangeListener'><parameter name='listener' type='android.view.ViewGroup.OnHierarchyChangeListener'/></method><method name='setPersistentDrawingCache'><parameter name='drawingCacheToKeep' type='int'/></method><method name='showContextMenuForChild' return='boolean'><parameter name='originalView' type='android.view.View'/></method><method name='startLayoutAnimation'/><method name='updateViewLayout'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method api_added='3' name='setStaticTransformationsEnabled' visibility='protected'><parameter name='enabled' type='boolean'/></method><method api_added='7' name='isChildrenDrawingOrderEnabled' visibility='protected' return='boolean'/><method api_added='7' name='setChildrenDrawingOrderEnabled' visibility='protected'><parameter name='enabled' type='boolean'/></method></class><class name='ViewGroup.LayoutParams' extends='java.lang.Object' static='true'><constructor name='ViewGroup.LayoutParams' type='android.view.ViewGroup.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ViewGroup.LayoutParams' type='android.view.ViewGroup.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='ViewGroup.LayoutParams' type='android.view.ViewGroup.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor><field name='FILL_PARENT' final='true' static='true' value='-1' type='int' deprecated='8'/><field name='WRAP_CONTENT' final='true' static='true' value='-2' type='int'/><field name='height' type='int'/><field name='layoutAnimationParameters' type='android.view.animation.LayoutAnimationController.AnimationParameters'/><field name='width' type='int'/><field api_added='8' name='MATCH_PARENT' final='true' static='true' value='-1' type='int'/><method name='setBaseAttributes' visibility='protected'><parameter name='a' type='android.content.res.TypedArray'/><parameter name='widthAttr' type='int'/><parameter name='heightAttr' type='int'/></method></class><class name='ViewGroup.MarginLayoutParams' extends='android.view.ViewGroup.LayoutParams' static='true'><constructor name='ViewGroup.MarginLayoutParams' type='android.view.ViewGroup.MarginLayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ViewGroup.MarginLayoutParams' type='android.view.ViewGroup.MarginLayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='ViewGroup.MarginLayoutParams' type='android.view.ViewGroup.MarginLayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor><constructor name='ViewGroup.MarginLayoutParams' type='android.view.ViewGroup.MarginLayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor><field name='bottomMargin' type='int'/><field name='leftMargin' type='int'/><field name='rightMargin' type='int'/><field name='topMargin' type='int'/><method name='setMargins'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method></class><class name='ViewStub' final='true' extends='android.view.View'><constructor name='ViewStub' type='android.view.ViewStub'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ViewStub' type='android.view.ViewStub'><parameter name='context' type='android.content.Context'/><parameter name='layoutResource' type='int'/></constructor><constructor name='ViewStub' type='android.view.ViewStub'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ViewStub' type='android.view.ViewStub'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getInflatedId' return='int'/><method name='getLayoutResource' return='int'/><method name='inflate' return='android.view.View'/><method name='setInflatedId'><parameter name='inflatedId' type='int'/></method><method name='setLayoutResource'><parameter name='layoutResource' type='int'/></method><method name='setOnInflateListener'><parameter name='inflateListener' type='android.view.ViewStub.OnInflateListener'/></method></class><class name='ViewTreeObserver' final='true' extends='java.lang.Object'><method name='addOnGlobalFocusChangeListener'><parameter name='listener' type='android.view.ViewTreeObserver.OnGlobalFocusChangeListener'/></method><method name='addOnGlobalLayoutListener'><parameter name='listener' type='android.view.ViewTreeObserver.OnGlobalLayoutListener'/></method><method name='addOnPreDrawListener'><parameter name='listener' type='android.view.ViewTreeObserver.OnPreDrawListener'/></method><method name='addOnTouchModeChangeListener'><parameter name='listener' type='android.view.ViewTreeObserver.OnTouchModeChangeListener'/></method><method name='dispatchOnGlobalLayout' final='true'/><method name='dispatchOnPreDraw' final='true' return='boolean'/><method name='isAlive' return='boolean'/><method name='removeGlobalOnLayoutListener'><parameter name='victim' type='android.view.ViewTreeObserver.OnGlobalLayoutListener'/></method><method name='removeOnGlobalFocusChangeListener'><parameter name='victim' type='android.view.ViewTreeObserver.OnGlobalFocusChangeListener'/></method><method name='removeOnPreDrawListener'><parameter name='victim' type='android.view.ViewTreeObserver.OnPreDrawListener'/></method><method name='removeOnTouchModeChangeListener'><parameter name='victim' type='android.view.ViewTreeObserver.OnTouchModeChangeListener'/></method><method api_added='3' name='addOnScrollChangedListener'><parameter name='listener' type='android.view.ViewTreeObserver.OnScrollChangedListener'/></method><method api_added='3' name='removeOnScrollChangedListener'><parameter name='victim' type='android.view.ViewTreeObserver.OnScrollChangedListener'/></method></class><class name='Window' extends='java.lang.Object' abstract='true'><constructor name='Window' type='android.view.Window'><parameter name='context' type='android.content.Context'/></constructor><field name='DEFAULT_FEATURES' final='true' static='true' value='65' type='int' visibility='protected'/><field name='FEATURE_CONTEXT_MENU' final='true' static='true' value='6' type='int'/><field name='FEATURE_CUSTOM_TITLE' final='true' static='true' value='7' type='int'/><field name='FEATURE_INDETERMINATE_PROGRESS' final='true' static='true' value='5' type='int'/><field name='FEATURE_LEFT_ICON' final='true' static='true' value='3' type='int'/><field name='FEATURE_NO_TITLE' final='true' static='true' value='1' type='int'/><field name='FEATURE_OPTIONS_PANEL' final='true' static='true' value='0' type='int'/><field name='FEATURE_PROGRESS' final='true' static='true' value='2' type='int'/><field name='FEATURE_RIGHT_ICON' final='true' static='true' value='4' type='int'/><field name='ID_ANDROID_CONTENT' final='true' static='true' value='16908290' type='int'/><field name='PROGRESS_END' final='true' static='true' value='10000' type='int'/><field name='PROGRESS_INDETERMINATE_OFF' final='true' static='true' value='-4' type='int'/><field name='PROGRESS_INDETERMINATE_ON' final='true' static='true' value='-3' type='int'/><field name='PROGRESS_SECONDARY_END' final='true' static='true' value='30000' type='int'/><field name='PROGRESS_SECONDARY_START' final='true' static='true' value='20000' type='int'/><field name='PROGRESS_START' final='true' static='true' value='0' type='int'/><field name='PROGRESS_VISIBILITY_OFF' final='true' static='true' value='-2' type='int'/><field name='PROGRESS_VISIBILITY_ON' final='true' static='true' value='-1' type='int'/><method name='addContentView' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='addFlags'><parameter name='flags' type='int'/></method><method name='clearFlags'><parameter name='flags' type='int'/></method><method name='closeAllPanels' abstract='true'/><method name='closePanel' abstract='true'><parameter name='featureId' type='int'/></method><method name='findViewById' return='android.view.View'><parameter name='id' type='int'/></method><method name='getAttributes' final='true' return='android.view.WindowManager.LayoutParams'/><method name='getCallback' final='true' return='android.view.Window.Callback'/><method name='getContainer' final='true' return='android.view.Window'/><method name='getContext' final='true' return='android.content.Context'/><method name='getCurrentFocus' abstract='true' return='android.view.View'/><method name='getDecorView' abstract='true' return='android.view.View'/><method name='getFeatures' final='true' visibility='protected' return='int'/><method name='getForcedWindowFlags' final='true' visibility='protected' return='int'/><method name='getLayoutInflater' abstract='true' return='android.view.LayoutInflater'/><method name='getLocalFeatures' final='true' visibility='protected' return='int'/><method name='getVolumeControlStream' abstract='true' return='int'/><method name='getWindowManager' return='android.view.WindowManager'/><method name='getWindowStyle' final='true' return='android.content.res.TypedArray'/><method name='hasChildren' final='true' return='boolean'/><method name='isActive' final='true' return='boolean'/><method name='isFloating' abstract='true' return='boolean'/><method name='isShortcutKey' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='makeActive' final='true'/><method name='onActive' abstract='true' visibility='protected'/><method name='onConfigurationChanged' abstract='true'><parameter name='newConfig' type='android.content.res.Configuration'/></method><method name='openPanel' abstract='true'><parameter name='featureId' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='peekDecorView' abstract='true' return='android.view.View'/><method name='performContextMenuIdentifierAction' abstract='true' return='boolean'><parameter name='id' type='int'/><parameter name='flags' type='int'/></method><method name='performPanelIdentifierAction' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='id' type='int'/><parameter name='flags' type='int'/></method><method name='performPanelShortcut' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/><parameter name='flags' type='int'/></method><method name='requestFeature' return='boolean'><parameter name='featureId' type='int'/></method><method name='restoreHierarchyState' abstract='true'><parameter name='savedInstanceState' type='android.os.Bundle'/></method><method name='saveHierarchyState' abstract='true' return='android.os.Bundle'/><method name='setAttributes'><parameter name='a' type='android.view.WindowManager.LayoutParams'/></method><method name='setBackgroundDrawable' abstract='true'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setBackgroundDrawableResource'><parameter name='resid' type='int'/></method><method name='setCallback'><parameter name='callback' type='android.view.Window.Callback'/></method><method name='setChildDrawable' abstract='true'><parameter name='featureId' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setChildInt' abstract='true'><parameter name='featureId' type='int'/><parameter name='value' type='int'/></method><method name='setContainer'><parameter name='container' type='android.view.Window'/></method><method name='setContentView' abstract='true'><parameter name='layoutResID' type='int'/></method><method name='setContentView' abstract='true'><parameter name='view' type='android.view.View'/></method><method name='setContentView' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='setDefaultWindowFormat' visibility='protected'><parameter name='format' type='int'/></method><method name='setFeatureDrawable' abstract='true'><parameter name='featureId' type='int'/><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setFeatureDrawableAlpha' abstract='true'><parameter name='featureId' type='int'/><parameter name='alpha' type='int'/></method><method name='setFeatureDrawableResource' abstract='true'><parameter name='featureId' type='int'/><parameter name='resId' type='int'/></method><method name='setFeatureDrawableUri' abstract='true'><parameter name='featureId' type='int'/><parameter name='uri' type='android.net.Uri'/></method><method name='setFeatureInt' abstract='true'><parameter name='featureId' type='int'/><parameter name='value' type='int'/></method><method name='setFlags'><parameter name='flags' type='int'/><parameter name='mask' type='int'/></method><method name='setFormat'><parameter name='format' type='int'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setLayout'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='setTitle' abstract='true'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setTitleColor' abstract='true'><parameter name='textColor' type='int'/></method><method name='setType'><parameter name='type' type='int'/></method><method name='setVolumeControlStream' abstract='true'><parameter name='streamType' type='int'/></method><method name='setWindowManager'><parameter name='wm' type='android.view.WindowManager'/><parameter name='appToken' type='android.os.IBinder'/><parameter name='appName' type='java.lang.String'/></method><method name='superDispatchKeyEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='superDispatchTouchEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='superDispatchTrackballEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='takeKeyEvents' abstract='true'><parameter name='get' type='boolean'/></method><method name='togglePanel' abstract='true'><parameter name='featureId' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='hasSoftInputMode' final='true' visibility='protected' return='boolean'/><method api_added='3' name='setSoftInputMode'><parameter name='mode' type='int'/></method><method api_added='3' name='setWindowAnimations'><parameter name='resId' type='int'/></method></class><class name='WindowManager.BadTokenException' extends='java.lang.RuntimeException' static='true'><constructor name='WindowManager.BadTokenException' type='android.view.WindowManager.BadTokenException'/><constructor name='WindowManager.BadTokenException' type='android.view.WindowManager.BadTokenException'><parameter name='name' type='java.lang.String'/></constructor></class><class name='WindowManager.LayoutParams' extends='android.view.ViewGroup.LayoutParams' static='true'><implements name='android.os.Parcelable'/><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'/><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='_type' type='int'/></constructor><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='_type' type='int'/><parameter name='_flags' type='int'/></constructor><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='_type' type='int'/><parameter name='_flags' type='int'/><parameter name='_format' type='int'/></constructor><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='_type' type='int'/><parameter name='_flags' type='int'/><parameter name='_format' type='int'/></constructor><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='xpos' type='int'/><parameter name='ypos' type='int'/><parameter name='_type' type='int'/><parameter name='_flags' type='int'/><parameter name='_format' type='int'/></constructor><constructor name='WindowManager.LayoutParams' type='android.view.WindowManager.LayoutParams'><parameter name='in' type='android.os.Parcel'/></constructor><field name='ALPHA_CHANGED' final='true' static='true' value='128' type='int'/><field name='ANIMATION_CHANGED' final='true' static='true' value='16' type='int'/><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field name='DIM_AMOUNT_CHANGED' final='true' static='true' value='32' type='int'/><field name='FIRST_APPLICATION_WINDOW' final='true' static='true' value='1' type='int'/><field name='FIRST_SUB_WINDOW' final='true' static='true' value='1000' type='int'/><field name='FIRST_SYSTEM_WINDOW' final='true' static='true' value='2000' type='int'/><field name='FLAGS_CHANGED' final='true' static='true' value='4' type='int'/><field name='FLAG_BLUR_BEHIND' final='true' static='true' value='4' type='int'/><field name='FLAG_DIM_BEHIND' final='true' static='true' value='2' type='int'/><field name='FLAG_DITHER' final='true' static='true' value='4096' type='int'/><field name='FLAG_FORCE_NOT_FULLSCREEN' final='true' static='true' value='2048' type='int'/><field name='FLAG_FULLSCREEN' final='true' static='true' value='1024' type='int'/><field name='FLAG_IGNORE_CHEEK_PRESSES' final='true' static='true' value='32768' type='int'/><field name='FLAG_KEEP_SCREEN_ON' final='true' static='true' value='128' type='int'/><field name='FLAG_LAYOUT_INSET_DECOR' final='true' static='true' value='65536' type='int'/><field name='FLAG_LAYOUT_IN_SCREEN' final='true' static='true' value='256' type='int'/><field name='FLAG_LAYOUT_NO_LIMITS' final='true' static='true' value='512' type='int'/><field name='FLAG_NOT_FOCUSABLE' final='true' static='true' value='8' type='int'/><field name='FLAG_NOT_TOUCHABLE' final='true' static='true' value='16' type='int'/><field name='FLAG_NOT_TOUCH_MODAL' final='true' static='true' value='32' type='int'/><field name='FLAG_SCALED' final='true' static='true' value='16384' type='int'/><field name='FLAG_SECURE' final='true' static='true' value='8192' type='int'/><field name='FLAG_TOUCHABLE_WHEN_WAKING' final='true' static='true' value='64' type='int'/><field name='FORMAT_CHANGED' final='true' static='true' value='8' type='int'/><field name='LAST_APPLICATION_WINDOW' final='true' static='true' value='99' type='int'/><field name='LAST_SUB_WINDOW' final='true' static='true' value='1999' type='int'/><field name='LAST_SYSTEM_WINDOW' final='true' static='true' value='2999' type='int'/><field name='LAYOUT_CHANGED' final='true' static='true' value='1' type='int'/><field name='MEMORY_TYPE_CHANGED' final='true' static='true' value='256' type='int'/><field name='MEMORY_TYPE_GPU' final='true' static='true' value='2' type='int' deprecated='5'/><field name='MEMORY_TYPE_HARDWARE' final='true' static='true' value='1' type='int' deprecated='5'/><field name='MEMORY_TYPE_NORMAL' final='true' static='true' value='0' type='int'/><field name='MEMORY_TYPE_PUSH_BUFFERS' final='true' static='true' value='3' type='int'/><field name='TITLE_CHANGED' final='true' static='true' value='64' type='int'/><field name='TYPE_APPLICATION' final='true' static='true' value='2' type='int'/><field name='TYPE_APPLICATION_MEDIA' final='true' static='true' value='1001' type='int'/><field name='TYPE_APPLICATION_PANEL' final='true' static='true' value='1000' type='int'/><field name='TYPE_APPLICATION_STARTING' final='true' static='true' value='3' type='int'/><field name='TYPE_APPLICATION_SUB_PANEL' final='true' static='true' value='1002' type='int'/><field name='TYPE_BASE_APPLICATION' final='true' static='true' value='1' type='int'/><field name='TYPE_CHANGED' final='true' static='true' value='2' type='int'/><field name='TYPE_KEYGUARD' final='true' static='true' value='2004' type='int'/><field name='TYPE_KEYGUARD_DIALOG' final='true' static='true' value='2009' type='int'/><field name='TYPE_PHONE' final='true' static='true' value='2002' type='int'/><field name='TYPE_PRIORITY_PHONE' final='true' static='true' value='2007' type='int'/><field name='TYPE_SEARCH_BAR' final='true' static='true' value='2001' type='int'/><field name='TYPE_STATUS_BAR' final='true' static='true' value='2000' type='int'/><field name='TYPE_STATUS_BAR_PANEL' final='true' static='true' value='2008' type='int'/><field name='TYPE_SYSTEM_ALERT' final='true' static='true' value='2003' type='int'/><field name='TYPE_SYSTEM_DIALOG' final='true' static='true' value='2008' type='int'/><field name='TYPE_SYSTEM_ERROR' final='true' static='true' value='2010' type='int'/><field name='TYPE_SYSTEM_OVERLAY' final='true' static='true' value='2006' type='int'/><field name='TYPE_TOAST' final='true' static='true' value='2005' type='int'/><field name='alpha' type='float'/><field name='dimAmount' type='float'/><field name='flags' type='int'/><field name='format' type='int'/><field name='gravity' type='int'/><field name='horizontalMargin' type='float'/><field name='horizontalWeight' type='float'/><field name='memoryType' type='int'/><field name='packageName' type='java.lang.String'/><field name='token' type='android.os.IBinder'/><field name='type' type='int'/><field name='verticalMargin' type='float'/><field name='verticalWeight' type='float'/><field name='windowAnimations' type='int'/><field name='x' type='int'/><field name='y' type='int'/><field api_added='3' name='FLAG_ALT_FOCUSABLE_IM' final='true' static='true' value='131072' type='int'/><field api_added='3' name='FLAG_WATCH_OUTSIDE_TOUCH' final='true' static='true' value='262144' type='int'/><field api_added='3' name='SCREEN_BRIGHTNESS_CHANGED' final='true' static='true' value='2048' type='int'/><field api_added='3' name='SCREEN_ORIENTATION_CHANGED' final='true' static='true' value='1024' type='int'/><field api_added='3' name='SOFT_INPUT_ADJUST_PAN' final='true' static='true' value='32' type='int'/><field api_added='3' name='SOFT_INPUT_ADJUST_RESIZE' final='true' static='true' value='16' type='int'/><field api_added='3' name='SOFT_INPUT_ADJUST_UNSPECIFIED' final='true' static='true' value='0' type='int'/><field api_added='3' name='SOFT_INPUT_IS_FORWARD_NAVIGATION' final='true' static='true' value='256' type='int'/><field api_added='3' name='SOFT_INPUT_MASK_ADJUST' final='true' static='true' value='240' type='int'/><field api_added='3' name='SOFT_INPUT_MASK_STATE' final='true' static='true' value='15' type='int'/><field api_added='3' name='SOFT_INPUT_MODE_CHANGED' final='true' static='true' value='512' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_ALWAYS_HIDDEN' final='true' static='true' value='3' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_ALWAYS_VISIBLE' final='true' static='true' value='5' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_HIDDEN' final='true' static='true' value='2' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_UNCHANGED' final='true' static='true' value='1' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_UNSPECIFIED' final='true' static='true' value='0' type='int'/><field api_added='3' name='SOFT_INPUT_STATE_VISIBLE' final='true' static='true' value='4' type='int'/><field api_added='3' name='TYPE_APPLICATION_ATTACHED_DIALOG' final='true' static='true' value='1003' type='int'/><field api_added='3' name='TYPE_INPUT_METHOD' final='true' static='true' value='2011' type='int'/><field api_added='3' name='TYPE_INPUT_METHOD_DIALOG' final='true' static='true' value='2012' type='int'/><field api_added='3' name='screenBrightness' type='float'/><field api_added='3' name='screenOrientation' type='int'/><field api_added='3' name='softInputMode' type='int'/><field api_added='5' name='FLAG_DISMISS_KEYGUARD' final='true' static='true' value='4194304' type='int'/><field api_added='5' name='FLAG_SHOW_WALLPAPER' final='true' static='true' value='1048576' type='int'/><field api_added='5' name='FLAG_SHOW_WHEN_LOCKED' final='true' static='true' value='524288' type='int'/><field api_added='5' name='FLAG_TURN_SCREEN_ON' final='true' static='true' value='2097152' type='int'/><field api_added='5' name='TYPE_WALLPAPER' final='true' static='true' value='2013' type='int'/><field api_added='8' name='BRIGHTNESS_OVERRIDE_FULL' final='true' static='true' value='1.0f' type='float'/><field api_added='8' name='BRIGHTNESS_OVERRIDE_NONE' final='true' static='true' value='-1.0f' type='float'/><field api_added='8' name='BRIGHTNESS_OVERRIDE_OFF' final='true' static='true' value='0.0f' type='float'/><field api_added='8' name='FLAG_ALLOW_LOCK_WHILE_SCREEN_ON' final='true' static='true' value='1' type='int'/><field api_added='8' name='buttonBrightness' type='float'/><method name='copyFrom' final='true' return='int'><parameter name='o' type='android.view.WindowManager.LayoutParams'/></method><method name='debug' return='java.lang.String'><parameter name='output' type='java.lang.String'/></method><method name='describeContents' return='int'/><method name='getTitle' final='true' return='java.lang.CharSequence'/><method name='setTitle' final='true'><parameter name='title' type='java.lang.CharSequence'/></method><method name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='parcelableFlags' type='int'/></method><method api_added='3' name='mayUseInputMethod' static='true' return='boolean'><parameter name='flags' type='int'/></method></class><class api_added='3' name='HapticFeedbackConstants' extends='java.lang.Object'><field api_added='3' name='FLAG_IGNORE_GLOBAL_SETTING' final='true' static='true' value='2' type='int'/><field api_added='3' name='FLAG_IGNORE_VIEW_SETTING' final='true' static='true' value='1' type='int'/><field api_added='3' name='LONG_PRESS' final='true' static='true' value='0' type='int'/><field api_added='5' name='VIRTUAL_KEY' final='true' static='true' value='1' type='int'/><field api_added='8' name='KEYBOARD_TAP' final='true' static='true' value='3' type='int'/></class><class api_added='3' name='OrientationEventListener' extends='java.lang.Object' abstract='true'><constructor api_added='3' name='OrientationEventListener' type='android.view.OrientationEventListener'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='3' name='OrientationEventListener' type='android.view.OrientationEventListener'><parameter name='context' type='android.content.Context'/><parameter name='rate' type='int'/></constructor><field api_added='3' name='ORIENTATION_UNKNOWN' final='true' static='true' value='-1' type='int'/><method api_added='3' name='canDetectOrientation' return='boolean'/><method api_added='3' name='disable'/><method api_added='3' name='enable'/><method api_added='3' name='onOrientationChanged' abstract='true'><parameter name='orientation' type='int'/></method></class><class api_added='3' name='ViewDebug.CapturedViewProperty' extends='java.lang.Object' abstract='true' static='true'><implements name='java.lang.annotation.Annotation'/></class><class api_added='4' name='ViewDebug.FlagToString' extends='java.lang.Object' abstract='true' static='true'><implements name='java.lang.annotation.Annotation'/></class><class api_added='5' name='KeyEvent.DispatcherState' extends='java.lang.Object' static='true'><constructor api_added='5' name='KeyEvent.DispatcherState' type='android.view.KeyEvent.DispatcherState'/><method api_added='5' name='handleUpEvent'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='isTracking' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='performedLongPress'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='reset'/><method api_added='5' name='reset'><parameter name='target' type='java.lang.Object'/></method><method api_added='5' name='startTracking'><parameter name='event' type='android.view.KeyEvent'/><parameter name='target' type='java.lang.Object'/></method></class><class api_added='8' name='ScaleGestureDetector' extends='java.lang.Object'><constructor api_added='8' name='ScaleGestureDetector' type='android.view.ScaleGestureDetector'><parameter name='context' type='android.content.Context'/><parameter name='listener' type='android.view.ScaleGestureDetector.OnScaleGestureListener'/></constructor><method api_added='8' name='getCurrentSpan' return='float'/><method api_added='8' name='getEventTime' return='long'/><method api_added='8' name='getFocusX' return='float'/><method api_added='8' name='getFocusY' return='float'/><method api_added='8' name='getPreviousSpan' return='float'/><method api_added='8' name='getScaleFactor' return='float'/><method api_added='8' name='getTimeDelta' return='long'/><method api_added='8' name='isInProgress' return='boolean'/><method api_added='8' name='onTouchEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method></class><class api_added='8' name='ScaleGestureDetector.SimpleOnScaleGestureListener' extends='java.lang.Object' static='true'><implements name='android.view.ScaleGestureDetector.OnScaleGestureListener'/><constructor api_added='8' name='ScaleGestureDetector.SimpleOnScaleGestureListener' type='android.view.ScaleGestureDetector.SimpleOnScaleGestureListener'/><method api_added='8' name='onScale' return='boolean'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method><method api_added='8' name='onScaleBegin' return='boolean'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method><method api_added='8' name='onScaleEnd'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method></class><interface name='ContextMenu' abstract='true'><implements name='android.view.Menu'/><method name='clearHeader' abstract='true'/><method name='setHeaderIcon' abstract='true' return='android.view.ContextMenu'><parameter name='iconRes' type='int'/></method><method name='setHeaderIcon' abstract='true' return='android.view.ContextMenu'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setHeaderTitle' abstract='true' return='android.view.ContextMenu'><parameter name='titleRes' type='int'/></method><method name='setHeaderTitle' abstract='true' return='android.view.ContextMenu'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setHeaderView' abstract='true' return='android.view.ContextMenu'><parameter name='view' type='android.view.View'/></method></interface><interface name='ContextMenu.ContextMenuInfo' abstract='true' static='true'/><interface name='GestureDetector.OnGestureListener' abstract='true' static='true'><method name='onDown' abstract='true' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onFling' abstract='true' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='velocityX' type='float'/><parameter name='velocityY' type='float'/></method><method name='onLongPress' abstract='true'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onScroll' abstract='true' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='distanceX' type='float'/><parameter name='distanceY' type='float'/></method><method name='onShowPress' abstract='true'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onSingleTapUp' abstract='true' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method></interface><interface name='KeyEvent.Callback' abstract='true' static='true'><method name='onKeyDown' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyMultiple' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='count' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='onKeyUp' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='5' name='onKeyLongPress' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface name='LayoutInflater.Factory' abstract='true' static='true'><method name='onCreateView' abstract='true' return='android.view.View'><parameter name='name' type='java.lang.String'/><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></method></interface><interface name='LayoutInflater.Filter' abstract='true' static='true'><method name='onLoadClass' abstract='true' return='boolean'><parameter name='clazz' type='java.lang.Class'/></method></interface><interface name='Menu' abstract='true'><field name='CATEGORY_ALTERNATIVE' final='true' static='true' value='262144' type='int'/><field name='CATEGORY_CONTAINER' final='true' static='true' value='65536' type='int'/><field name='CATEGORY_SECONDARY' final='true' static='true' value='196608' type='int'/><field name='CATEGORY_SYSTEM' final='true' static='true' value='131072' type='int'/><field name='FIRST' final='true' static='true' value='1' type='int'/><field name='FLAG_ALWAYS_PERFORM_CLOSE' final='true' static='true' value='2' type='int'/><field name='FLAG_APPEND_TO_GROUP' final='true' static='true' value='1' type='int'/><field name='FLAG_PERFORM_NO_CLOSE' final='true' static='true' value='1' type='int'/><field name='NONE' final='true' static='true' value='0' type='int'/><method name='add' abstract='true' return='android.view.MenuItem'><parameter name='title' type='java.lang.CharSequence'/></method><method name='add' abstract='true' return='android.view.MenuItem'><parameter name='titleRes' type='int'/></method><method name='add' abstract='true' return='android.view.MenuItem'><parameter name='groupId' type='int'/><parameter name='itemId' type='int'/><parameter name='order' type='int'/><parameter name='title' type='java.lang.CharSequence'/></method><method name='add' abstract='true' return='android.view.MenuItem'><parameter name='groupId' type='int'/><parameter name='itemId' type='int'/><parameter name='order' type='int'/><parameter name='titleRes' type='int'/></method><method name='addIntentOptions' abstract='true' return='int'><parameter name='groupId' type='int'/><parameter name='itemId' type='int'/><parameter name='order' type='int'/><parameter name='caller' type='android.content.ComponentName'/><parameter name='specifics' type='android.content.Intent[]'/><parameter name='intent' type='android.content.Intent'/><parameter name='flags' type='int'/><parameter name='outSpecificItems' type='android.view.MenuItem[]'/></method><method name='addSubMenu' abstract='true' return='android.view.SubMenu'><parameter name='title' type='java.lang.CharSequence'/></method><method name='addSubMenu' abstract='true' return='android.view.SubMenu'><parameter name='titleRes' type='int'/></method><method name='addSubMenu' abstract='true' return='android.view.SubMenu'><parameter name='groupId' type='int'/><parameter name='itemId' type='int'/><parameter name='order' type='int'/><parameter name='title' type='java.lang.CharSequence'/></method><method name='addSubMenu' abstract='true' return='android.view.SubMenu'><parameter name='groupId' type='int'/><parameter name='itemId' type='int'/><parameter name='order' type='int'/><parameter name='titleRes' type='int'/></method><method name='clear' abstract='true'/><method name='findItem' abstract='true' return='android.view.MenuItem'><parameter name='id' type='int'/></method><method name='hasVisibleItems' abstract='true' return='boolean'/><method name='isShortcutKey' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='performIdentifierAction' abstract='true' return='boolean'><parameter name='id' type='int'/><parameter name='flags' type='int'/></method><method name='performShortcut' abstract='true' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/><parameter name='flags' type='int'/></method><method name='removeGroup' abstract='true'><parameter name='groupId' type='int'/></method><method name='removeItem' abstract='true'><parameter name='id' type='int'/></method><method name='setGroupCheckable' abstract='true'><parameter name='group' type='int'/><parameter name='checkable' type='boolean'/><parameter name='exclusive' type='boolean'/></method><method name='setGroupEnabled' abstract='true'><parameter name='group' type='int'/><parameter name='enabled' type='boolean'/></method><method name='setGroupVisible' abstract='true'><parameter name='group' type='int'/><parameter name='visible' type='boolean'/></method><method name='setQwertyMode' abstract='true'><parameter name='isQwerty' type='boolean'/></method><method name='size' abstract='true' return='int'/><method api_added='3' name='close' abstract='true'/><method api_added='3' name='getItem' abstract='true' return='android.view.MenuItem'><parameter name='index' type='int'/></method></interface><interface name='MenuItem' abstract='true'><method name='getAlphabeticShortcut' abstract='true' return='char'/><method name='getGroupId' abstract='true' return='int'/><method name='getIcon' abstract='true' return='android.graphics.drawable.Drawable'/><method name='getIntent' abstract='true' return='android.content.Intent'/><method name='getItemId' abstract='true' return='int'/><method name='getMenuInfo' abstract='true' return='android.view.ContextMenu.ContextMenuInfo'/><method name='getNumericShortcut' abstract='true' return='char'/><method name='getOrder' abstract='true' return='int'/><method name='getSubMenu' abstract='true' return='android.view.SubMenu'/><method name='getTitle' abstract='true' return='java.lang.CharSequence'/><method name='getTitleCondensed' abstract='true' return='java.lang.CharSequence'/><method name='hasSubMenu' abstract='true' return='boolean'/><method name='isCheckable' abstract='true' return='boolean'/><method name='isChecked' abstract='true' return='boolean'/><method name='isEnabled' abstract='true' return='boolean'/><method name='isVisible' abstract='true' return='boolean'/><method name='setAlphabeticShortcut' abstract='true' return='android.view.MenuItem'><parameter name='alphaChar' type='char'/></method><method name='setCheckable' abstract='true' return='android.view.MenuItem'><parameter name='checkable' type='boolean'/></method><method name='setChecked' abstract='true' return='android.view.MenuItem'><parameter name='checked' type='boolean'/></method><method name='setEnabled' abstract='true' return='android.view.MenuItem'><parameter name='enabled' type='boolean'/></method><method name='setIcon' abstract='true' return='android.view.MenuItem'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setIcon' abstract='true' return='android.view.MenuItem'><parameter name='iconRes' type='int'/></method><method name='setIntent' abstract='true' return='android.view.MenuItem'><parameter name='intent' type='android.content.Intent'/></method><method name='setNumericShortcut' abstract='true' return='android.view.MenuItem'><parameter name='numericChar' type='char'/></method><method name='setOnMenuItemClickListener' abstract='true' return='android.view.MenuItem'><parameter name='menuItemClickListener' type='android.view.MenuItem.OnMenuItemClickListener'/></method><method name='setShortcut' abstract='true' return='android.view.MenuItem'><parameter name='numericChar' type='char'/><parameter name='alphaChar' type='char'/></method><method name='setTitle' abstract='true' return='android.view.MenuItem'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setTitle' abstract='true' return='android.view.MenuItem'><parameter name='title' type='int'/></method><method name='setTitleCondensed' abstract='true' return='android.view.MenuItem'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setVisible' abstract='true' return='android.view.MenuItem'><parameter name='visible' type='boolean'/></method></interface><interface name='MenuItem.OnMenuItemClickListener' abstract='true' static='true'><method name='onMenuItemClick' abstract='true' return='boolean'><parameter name='item' type='android.view.MenuItem'/></method></interface><interface name='SubMenu' abstract='true'><implements name='android.view.Menu'/><method name='clearHeader' abstract='true'/><method name='getItem' abstract='true' return='android.view.MenuItem'/><method name='setHeaderIcon' abstract='true' return='android.view.SubMenu'><parameter name='iconRes' type='int'/></method><method name='setHeaderIcon' abstract='true' return='android.view.SubMenu'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setHeaderTitle' abstract='true' return='android.view.SubMenu'><parameter name='titleRes' type='int'/></method><method name='setHeaderTitle' abstract='true' return='android.view.SubMenu'><parameter name='title' type='java.lang.CharSequence'/></method><method name='setHeaderView' abstract='true' return='android.view.SubMenu'><parameter name='view' type='android.view.View'/></method><method name='setIcon' abstract='true' return='android.view.SubMenu'><parameter name='iconRes' type='int'/></method><method name='setIcon' abstract='true' return='android.view.SubMenu'><parameter name='icon' type='android.graphics.drawable.Drawable'/></method></interface><interface name='SurfaceHolder' abstract='true'><field name='SURFACE_TYPE_GPU' final='true' static='true' value='2' type='int' deprecated='5'/><field name='SURFACE_TYPE_HARDWARE' final='true' static='true' value='1' type='int' deprecated='5'/><field name='SURFACE_TYPE_NORMAL' final='true' static='true' value='0' type='int'/><field name='SURFACE_TYPE_PUSH_BUFFERS' final='true' static='true' value='3' type='int'/><method name='addCallback' abstract='true'><parameter name='callback' type='android.view.SurfaceHolder.Callback'/></method><method name='getSurface' abstract='true' return='android.view.Surface'/><method name='getSurfaceFrame' abstract='true' return='android.graphics.Rect'/><method name='isCreating' abstract='true' return='boolean'/><method name='lockCanvas' abstract='true' return='android.graphics.Canvas'/><method name='lockCanvas' abstract='true' return='android.graphics.Canvas'><parameter name='dirty' type='android.graphics.Rect'/></method><method name='removeCallback' abstract='true'><parameter name='callback' type='android.view.SurfaceHolder.Callback'/></method><method name='setFixedSize' abstract='true'><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='setFormat' abstract='true'><parameter name='format' type='int'/></method><method name='setKeepScreenOn' abstract='true'><parameter name='screenOn' type='boolean'/></method><method name='setSizeFromLayout' abstract='true'/><method name='setType' abstract='true'><parameter name='type' type='int'/></method><method name='unlockCanvasAndPost' abstract='true'><parameter name='canvas' type='android.graphics.Canvas'/></method></interface><interface name='SurfaceHolder.Callback' abstract='true' static='true'><method name='surfaceChanged' abstract='true'><parameter name='holder' type='android.view.SurfaceHolder'/><parameter name='format' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='surfaceCreated' abstract='true'><parameter name='holder' type='android.view.SurfaceHolder'/></method><method name='surfaceDestroyed' abstract='true'><parameter name='holder' type='android.view.SurfaceHolder'/></method></interface><interface name='View.OnClickListener' abstract='true' static='true'><method name='onClick' abstract='true'><parameter name='v' type='android.view.View'/></method></interface><interface name='View.OnCreateContextMenuListener' abstract='true' static='true'><method name='onCreateContextMenu' abstract='true'><parameter name='menu' type='android.view.ContextMenu'/><parameter name='v' type='android.view.View'/><parameter name='menuInfo' type='android.view.ContextMenu.ContextMenuInfo'/></method></interface><interface name='View.OnFocusChangeListener' abstract='true' static='true'><method name='onFocusChange' abstract='true'><parameter name='v' type='android.view.View'/><parameter name='hasFocus' type='boolean'/></method></interface><interface name='View.OnKeyListener' abstract='true' static='true'><method name='onKey' abstract='true' return='boolean'><parameter name='v' type='android.view.View'/><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface name='View.OnLongClickListener' abstract='true' static='true'><method name='onLongClick' abstract='true' return='boolean'><parameter name='v' type='android.view.View'/></method></interface><interface name='View.OnTouchListener' abstract='true' static='true'><method name='onTouch' abstract='true' return='boolean'><parameter name='v' type='android.view.View'/><parameter name='event' type='android.view.MotionEvent'/></method></interface><interface name='ViewGroup.OnHierarchyChangeListener' abstract='true' static='true'><method name='onChildViewAdded' abstract='true'><parameter name='parent' type='android.view.View'/><parameter name='child' type='android.view.View'/></method><method name='onChildViewRemoved' abstract='true'><parameter name='parent' type='android.view.View'/><parameter name='child' type='android.view.View'/></method></interface><interface name='ViewManager' abstract='true'><method name='addView' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method><method name='removeView' abstract='true'><parameter name='view' type='android.view.View'/></method><method name='updateViewLayout' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='params' type='android.view.ViewGroup.LayoutParams'/></method></interface><interface name='ViewParent' abstract='true'><method name='bringChildToFront' abstract='true'><parameter name='child' type='android.view.View'/></method><method name='childDrawableStateChanged' abstract='true'><parameter name='child' type='android.view.View'/></method><method name='clearChildFocus' abstract='true'><parameter name='child' type='android.view.View'/></method><method name='createContextMenu' abstract='true'><parameter name='menu' type='android.view.ContextMenu'/></method><method name='focusSearch' abstract='true' return='android.view.View'><parameter name='v' type='android.view.View'/><parameter name='direction' type='int'/></method><method name='focusableViewAvailable' abstract='true'><parameter name='v' type='android.view.View'/></method><method name='getChildVisibleRect' abstract='true' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='r' type='android.graphics.Rect'/><parameter name='offset' type='android.graphics.Point'/></method><method name='getParent' abstract='true' return='android.view.ViewParent'/><method name='invalidateChild' abstract='true'><parameter name='child' type='android.view.View'/><parameter name='r' type='android.graphics.Rect'/></method><method name='invalidateChildInParent' abstract='true' return='android.view.ViewParent'><parameter name='location' type='int[]'/><parameter name='r' type='android.graphics.Rect'/></method><method name='isLayoutRequested' abstract='true' return='boolean'/><method name='recomputeViewAttributes' abstract='true'><parameter name='child' type='android.view.View'/></method><method name='requestChildFocus' abstract='true'><parameter name='child' type='android.view.View'/><parameter name='focused' type='android.view.View'/></method><method name='requestDisallowInterceptTouchEvent' abstract='true'><parameter name='disallowIntercept' type='boolean'/></method><method name='requestLayout' abstract='true'/><method name='requestTransparentRegion' abstract='true'><parameter name='child' type='android.view.View'/></method><method name='showContextMenuForChild' abstract='true' return='boolean'><parameter name='originalView' type='android.view.View'/></method><method api_added='3' name='requestChildRectangleOnScreen' abstract='true' return='boolean'><parameter name='child' type='android.view.View'/><parameter name='rectangle' type='android.graphics.Rect'/><parameter name='immediate' type='boolean'/></method></interface><interface name='ViewStub.OnInflateListener' abstract='true' static='true'><method name='onInflate' abstract='true'><parameter name='stub' type='android.view.ViewStub'/><parameter name='inflated' type='android.view.View'/></method></interface><interface name='ViewTreeObserver.OnGlobalFocusChangeListener' abstract='true' static='true'><method name='onGlobalFocusChanged' abstract='true'><parameter name='oldFocus' type='android.view.View'/><parameter name='newFocus' type='android.view.View'/></method></interface><interface name='ViewTreeObserver.OnGlobalLayoutListener' abstract='true' static='true'><method name='onGlobalLayout' abstract='true'/></interface><interface name='ViewTreeObserver.OnPreDrawListener' abstract='true' static='true'><method name='onPreDraw' abstract='true' return='boolean'/></interface><interface name='ViewTreeObserver.OnTouchModeChangeListener' abstract='true' static='true'><method name='onTouchModeChanged' abstract='true'><parameter name='isInTouchMode' type='boolean'/></method></interface><interface name='Window.Callback' abstract='true' static='true'><method name='dispatchKeyEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='dispatchTouchEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='dispatchTrackballEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method name='onContentChanged' abstract='true'/><method name='onCreatePanelMenu' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onCreatePanelView' abstract='true' return='android.view.View'><parameter name='featureId' type='int'/></method><method name='onMenuItemSelected' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='item' type='android.view.MenuItem'/></method><method name='onMenuOpened' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onPanelClosed' abstract='true'><parameter name='featureId' type='int'/><parameter name='menu' type='android.view.Menu'/></method><method name='onPreparePanel' abstract='true' return='boolean'><parameter name='featureId' type='int'/><parameter name='view' type='android.view.View'/><parameter name='menu' type='android.view.Menu'/></method><method name='onSearchRequested' abstract='true' return='boolean'/><method name='onWindowAttributesChanged' abstract='true'><parameter name='attrs' type='android.view.WindowManager.LayoutParams'/></method><method name='onWindowFocusChanged' abstract='true'><parameter name='hasFocus' type='boolean'/></method><method api_added='4' name='dispatchPopulateAccessibilityEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='5' name='onAttachedToWindow' abstract='true'/><method api_added='5' name='onDetachedFromWindow' abstract='true'/></interface><interface name='WindowManager' abstract='true'><implements name='android.view.ViewManager'/><method name='getDefaultDisplay' abstract='true' return='android.view.Display'/><method name='removeViewImmediate' abstract='true'><parameter name='view' type='android.view.View'/></method></interface><interface api_added='3' name='GestureDetector.OnDoubleTapListener' abstract='true' static='true'><method api_added='3' name='onDoubleTap' abstract='true' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method api_added='3' name='onDoubleTapEvent' abstract='true' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method api_added='3' name='onSingleTapConfirmed' abstract='true' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method></interface><interface api_added='3' name='ViewTreeObserver.OnScrollChangedListener' abstract='true' static='true'><method api_added='3' name='onScrollChanged' abstract='true'/></interface><interface api_added='8' name='ScaleGestureDetector.OnScaleGestureListener' abstract='true' static='true'><method api_added='8' name='onScale' abstract='true' return='boolean'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method><method api_added='8' name='onScaleBegin' abstract='true' return='boolean'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method><method api_added='8' name='onScaleEnd' abstract='true'><parameter name='detector' type='android.view.ScaleGestureDetector'/></method></interface></package><package name='android.view.animation'><class name='AccelerateDecelerateInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor name='AccelerateDecelerateInterpolator' type='android.view.animation.AccelerateDecelerateInterpolator'/><constructor name='AccelerateDecelerateInterpolator' type='android.view.animation.AccelerateDecelerateInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getInterpolation' return='float'><parameter name='input' type='float'/></method></class><class name='AccelerateInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor name='AccelerateInterpolator' type='android.view.animation.AccelerateInterpolator'/><constructor name='AccelerateInterpolator' type='android.view.animation.AccelerateInterpolator'><parameter name='factor' type='float'/></constructor><constructor name='AccelerateInterpolator' type='android.view.animation.AccelerateInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getInterpolation' return='float'><parameter name='input' type='float'/></method></class><class name='AlphaAnimation' extends='android.view.animation.Animation'><constructor name='AlphaAnimation' type='android.view.animation.AlphaAnimation'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AlphaAnimation' type='android.view.animation.AlphaAnimation'><parameter name='fromAlpha' type='float'/><parameter name='toAlpha' type='float'/></constructor></class><class name='Animation' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><constructor name='Animation' type='android.view.animation.Animation'/><constructor name='Animation' type='android.view.animation.Animation'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><field name='ABSOLUTE' final='true' static='true' value='0' type='int'/><field name='INFINITE' final='true' static='true' value='-1' type='int'/><field name='RELATIVE_TO_PARENT' final='true' static='true' value='2' type='int'/><field name='RELATIVE_TO_SELF' final='true' static='true' value='1' type='int'/><field name='RESTART' final='true' static='true' value='1' type='int'/><field name='REVERSE' final='true' static='true' value='2' type='int'/><field name='START_ON_FIRST_FRAME' final='true' static='true' value='-1' type='int'/><field name='ZORDER_BOTTOM' final='true' static='true' value='-1' type='int'/><field name='ZORDER_NORMAL' final='true' static='true' value='0' type='int'/><field name='ZORDER_TOP' final='true' static='true' value='1' type='int'/><method name='applyTransformation' visibility='protected'><parameter name='interpolatedTime' type='float'/><parameter name='t' type='android.view.animation.Transformation'/></method><method name='ensureInterpolator' visibility='protected'/><method name='getDuration' return='long'/><method name='getFillAfter' return='boolean'/><method name='getFillBefore' return='boolean'/><method name='getInterpolator' return='android.view.animation.Interpolator'/><method name='getRepeatCount' return='int'/><method name='getRepeatMode' return='int'/><method name='getStartOffset' return='long'/><method name='getStartTime' return='long'/><method name='getTransformation' return='boolean'><parameter name='currentTime' type='long'/><parameter name='outTransformation' type='android.view.animation.Transformation'/></method><method name='getZAdjustment' return='int'/><method name='hasEnded' return='boolean'/><method name='hasStarted' return='boolean'/><method name='initialize'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='parentWidth' type='int'/><parameter name='parentHeight' type='int'/></method><method name='isInitialized' return='boolean'/><method name='reset'/><method name='resolveSize' visibility='protected' return='float'><parameter name='type' type='int'/><parameter name='value' type='float'/><parameter name='size' type='int'/><parameter name='parentSize' type='int'/></method><method name='restrictDuration'><parameter name='durationMillis' type='long'/></method><method name='scaleCurrentDuration'><parameter name='scale' type='float'/></method><method name='setAnimationListener'><parameter name='listener' type='android.view.animation.Animation.AnimationListener'/></method><method name='setDuration'><parameter name='durationMillis' type='long'/></method><method name='setFillAfter'><parameter name='fillAfter' type='boolean'/></method><method name='setFillBefore'><parameter name='fillBefore' type='boolean'/></method><method name='setInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='resID' type='int'/></method><method name='setInterpolator'><parameter name='i' type='android.view.animation.Interpolator'/></method><method name='setRepeatCount'><parameter name='repeatCount' type='int'/></method><method name='setRepeatMode'><parameter name='repeatMode' type='int'/></method><method name='setStartOffset'><parameter name='startOffset' type='long'/></method><method name='setStartTime'><parameter name='startTimeMillis' type='long'/></method><method name='setZAdjustment'><parameter name='zAdjustment' type='int'/></method><method name='start'/><method name='startNow'/><method name='willChangeBounds' return='boolean'/><method name='willChangeTransformationMatrix' return='boolean'/><method api_added='3' name='computeDurationHint' return='long'/><method api_added='3' name='isFillEnabled' return='boolean'/><method api_added='3' name='setFillEnabled'><parameter name='fillEnabled' type='boolean'/></method><method api_added='5' name='getDetachWallpaper' return='boolean'/><method api_added='5' name='setDetachWallpaper'><parameter name='detachWallpaper' type='boolean'/></method><method api_added='8' name='cancel'/></class><class name='Animation.Description' extends='java.lang.Object' static='true' visibility='protected'><constructor name='Animation.Description' type='android.view.animation.Animation.Description' visibility='protected'/><field name='type' type='int'/><field name='value' type='float'/></class><class name='AnimationSet' extends='android.view.animation.Animation'><constructor name='AnimationSet' type='android.view.animation.AnimationSet'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AnimationSet' type='android.view.animation.AnimationSet'><parameter name='shareInterpolator' type='boolean'/></constructor><method name='addAnimation'><parameter name='a' type='android.view.animation.Animation'/></method><method name='getAnimations' return='java.util.List&lt;android.view.animation.Animation&gt;'/></class><class name='AnimationUtils' extends='java.lang.Object'><constructor name='AnimationUtils' type='android.view.animation.AnimationUtils'/><method name='currentAnimationTimeMillis' static='true' return='long'/><method name='loadAnimation' static='true' return='android.view.animation.Animation'><parameter name='context' type='android.content.Context'/><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='loadInterpolator' static='true' return='android.view.animation.Interpolator'><parameter name='context' type='android.content.Context'/><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='loadLayoutAnimation' static='true' return='android.view.animation.LayoutAnimationController'><parameter name='context' type='android.content.Context'/><parameter name='id' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='makeInAnimation' static='true' return='android.view.animation.Animation'><parameter name='c' type='android.content.Context'/><parameter name='fromLeft' type='boolean'/></method><method name='makeInChildBottomAnimation' static='true' return='android.view.animation.Animation'><parameter name='c' type='android.content.Context'/></method><method name='makeOutAnimation' static='true' return='android.view.animation.Animation'><parameter name='c' type='android.content.Context'/><parameter name='toRight' type='boolean'/></method></class><class name='CycleInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor name='CycleInterpolator' type='android.view.animation.CycleInterpolator'><parameter name='cycles' type='float'/></constructor><constructor name='CycleInterpolator' type='android.view.animation.CycleInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getInterpolation' return='float'><parameter name='input' type='float'/></method></class><class name='DecelerateInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor name='DecelerateInterpolator' type='android.view.animation.DecelerateInterpolator'/><constructor name='DecelerateInterpolator' type='android.view.animation.DecelerateInterpolator'><parameter name='factor' type='float'/></constructor><constructor name='DecelerateInterpolator' type='android.view.animation.DecelerateInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getInterpolation' return='float'><parameter name='input' type='float'/></method></class><class name='GridLayoutAnimationController' extends='android.view.animation.LayoutAnimationController'><constructor name='GridLayoutAnimationController' type='android.view.animation.GridLayoutAnimationController'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='GridLayoutAnimationController' type='android.view.animation.GridLayoutAnimationController'><parameter name='animation' type='android.view.animation.Animation'/></constructor><constructor name='GridLayoutAnimationController' type='android.view.animation.GridLayoutAnimationController'><parameter name='animation' type='android.view.animation.Animation'/><parameter name='columnDelay' type='float'/><parameter name='rowDelay' type='float'/></constructor><field name='DIRECTION_BOTTOM_TO_TOP' final='true' static='true' value='2' type='int'/><field name='DIRECTION_HORIZONTAL_MASK' final='true' static='true' value='1' type='int'/><field name='DIRECTION_LEFT_TO_RIGHT' final='true' static='true' value='0' type='int'/><field name='DIRECTION_RIGHT_TO_LEFT' final='true' static='true' value='1' type='int'/><field name='DIRECTION_TOP_TO_BOTTOM' final='true' static='true' value='0' type='int'/><field name='DIRECTION_VERTICAL_MASK' final='true' static='true' value='2' type='int'/><field name='PRIORITY_COLUMN' final='true' static='true' value='1' type='int'/><field name='PRIORITY_NONE' final='true' static='true' value='0' type='int'/><field name='PRIORITY_ROW' final='true' static='true' value='2' type='int'/><method name='getColumnDelay' return='float'/><method name='getDirection' return='int'/><method name='getDirectionPriority' return='int'/><method name='getRowDelay' return='float'/><method name='setColumnDelay'><parameter name='columnDelay' type='float'/></method><method name='setDirection'><parameter name='direction' type='int'/></method><method name='setDirectionPriority'><parameter name='directionPriority' type='int'/></method><method name='setRowDelay'><parameter name='rowDelay' type='float'/></method></class><class name='GridLayoutAnimationController.AnimationParameters' extends='android.view.animation.LayoutAnimationController.AnimationParameters' static='true'><constructor name='GridLayoutAnimationController.AnimationParameters' type='android.view.animation.GridLayoutAnimationController.AnimationParameters'/><field name='column' type='int'/><field name='columnsCount' type='int'/><field name='row' type='int'/><field name='rowsCount' type='int'/></class><class name='LayoutAnimationController' extends='java.lang.Object'><constructor name='LayoutAnimationController' type='android.view.animation.LayoutAnimationController'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='LayoutAnimationController' type='android.view.animation.LayoutAnimationController'><parameter name='animation' type='android.view.animation.Animation'/></constructor><constructor name='LayoutAnimationController' type='android.view.animation.LayoutAnimationController'><parameter name='animation' type='android.view.animation.Animation'/><parameter name='delay' type='float'/></constructor><field name='ORDER_NORMAL' final='true' static='true' value='0' type='int'/><field name='ORDER_RANDOM' final='true' static='true' value='2' type='int'/><field name='ORDER_REVERSE' final='true' static='true' value='1' type='int'/><field name='mAnimation' type='android.view.animation.Animation' visibility='protected'/><field name='mInterpolator' type='android.view.animation.Interpolator' visibility='protected'/><field name='mRandomizer' type='java.util.Random' visibility='protected'/><method name='getAnimation' return='android.view.animation.Animation'/><method name='getAnimationForView' final='true' return='android.view.animation.Animation'><parameter name='view' type='android.view.View'/></method><method name='getDelay' return='float'/><method name='getDelayForView' visibility='protected' return='long'><parameter name='view' type='android.view.View'/></method><method name='getInterpolator' return='android.view.animation.Interpolator'/><method name='getOrder' return='int'/><method name='getTransformedIndex' visibility='protected' return='int'><parameter name='params' type='android.view.animation.LayoutAnimationController.AnimationParameters'/></method><method name='isDone' return='boolean'/><method name='setAnimation'><parameter name='context' type='android.content.Context'/><parameter name='resourceID' type='int'/></method><method name='setAnimation'><parameter name='animation' type='android.view.animation.Animation'/></method><method name='setDelay'><parameter name='delay' type='float'/></method><method name='setInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='resourceID' type='int'/></method><method name='setInterpolator'><parameter name='interpolator' type='android.view.animation.Interpolator'/></method><method name='setOrder'><parameter name='order' type='int'/></method><method name='start'/><method name='willOverlap' return='boolean'/></class><class name='LayoutAnimationController.AnimationParameters' extends='java.lang.Object' static='true'><constructor name='LayoutAnimationController.AnimationParameters' type='android.view.animation.LayoutAnimationController.AnimationParameters'/><field name='count' type='int'/><field name='index' type='int'/></class><class name='LinearInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor name='LinearInterpolator' type='android.view.animation.LinearInterpolator'/><constructor name='LinearInterpolator' type='android.view.animation.LinearInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getInterpolation' return='float'><parameter name='input' type='float'/></method></class><class name='RotateAnimation' extends='android.view.animation.Animation'><constructor name='RotateAnimation' type='android.view.animation.RotateAnimation'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RotateAnimation' type='android.view.animation.RotateAnimation'><parameter name='fromDegrees' type='float'/><parameter name='toDegrees' type='float'/></constructor><constructor name='RotateAnimation' type='android.view.animation.RotateAnimation'><parameter name='fromDegrees' type='float'/><parameter name='toDegrees' type='float'/><parameter name='pivotX' type='float'/><parameter name='pivotY' type='float'/></constructor><constructor name='RotateAnimation' type='android.view.animation.RotateAnimation'><parameter name='fromDegrees' type='float'/><parameter name='toDegrees' type='float'/><parameter name='pivotXType' type='int'/><parameter name='pivotXValue' type='float'/><parameter name='pivotYType' type='int'/><parameter name='pivotYValue' type='float'/></constructor></class><class name='ScaleAnimation' extends='android.view.animation.Animation'><constructor name='ScaleAnimation' type='android.view.animation.ScaleAnimation'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ScaleAnimation' type='android.view.animation.ScaleAnimation'><parameter name='fromX' type='float'/><parameter name='toX' type='float'/><parameter name='fromY' type='float'/><parameter name='toY' type='float'/></constructor><constructor name='ScaleAnimation' type='android.view.animation.ScaleAnimation'><parameter name='fromX' type='float'/><parameter name='toX' type='float'/><parameter name='fromY' type='float'/><parameter name='toY' type='float'/><parameter name='pivotX' type='float'/><parameter name='pivotY' type='float'/></constructor><constructor name='ScaleAnimation' type='android.view.animation.ScaleAnimation'><parameter name='fromX' type='float'/><parameter name='toX' type='float'/><parameter name='fromY' type='float'/><parameter name='toY' type='float'/><parameter name='pivotXType' type='int'/><parameter name='pivotXValue' type='float'/><parameter name='pivotYType' type='int'/><parameter name='pivotYValue' type='float'/></constructor></class><class name='Transformation' extends='java.lang.Object'><constructor name='Transformation' type='android.view.animation.Transformation'/><field name='TYPE_ALPHA' static='true' type='int'/><field name='TYPE_BOTH' static='true' type='int'/><field name='TYPE_IDENTITY' static='true' type='int'/><field name='TYPE_MATRIX' static='true' type='int'/><field name='mAlpha' type='float' visibility='protected'/><field name='mMatrix' type='android.graphics.Matrix' visibility='protected'/><field name='mTransformationType' type='int' visibility='protected'/><method name='clear'/><method name='compose'><parameter name='t' type='android.view.animation.Transformation'/></method><method name='getAlpha' return='float'/><method name='getMatrix' return='android.graphics.Matrix'/><method name='getTransformationType' return='int'/><method name='set'><parameter name='t' type='android.view.animation.Transformation'/></method><method name='setAlpha'><parameter name='alpha' type='float'/></method><method name='setTransformationType'><parameter name='transformationType' type='int'/></method><method api_added='3' name='toShortString' return='java.lang.String'/></class><class name='TranslateAnimation' extends='android.view.animation.Animation'><constructor name='TranslateAnimation' type='android.view.animation.TranslateAnimation'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TranslateAnimation' type='android.view.animation.TranslateAnimation'><parameter name='fromXDelta' type='float'/><parameter name='toXDelta' type='float'/><parameter name='fromYDelta' type='float'/><parameter name='toYDelta' type='float'/></constructor><constructor name='TranslateAnimation' type='android.view.animation.TranslateAnimation'><parameter name='fromXType' type='int'/><parameter name='fromXValue' type='float'/><parameter name='toXType' type='int'/><parameter name='toXValue' type='float'/><parameter name='fromYType' type='int'/><parameter name='fromYValue' type='float'/><parameter name='toYType' type='int'/><parameter name='toYValue' type='float'/></constructor></class><class api_added='4' name='AnticipateInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor api_added='4' name='AnticipateInterpolator' type='android.view.animation.AnticipateInterpolator'/><constructor api_added='4' name='AnticipateInterpolator' type='android.view.animation.AnticipateInterpolator'><parameter name='tension' type='float'/></constructor><constructor api_added='4' name='AnticipateInterpolator' type='android.view.animation.AnticipateInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method api_added='4' name='getInterpolation' return='float'><parameter name='t' type='float'/></method></class><class api_added='4' name='AnticipateOvershootInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor api_added='4' name='AnticipateOvershootInterpolator' type='android.view.animation.AnticipateOvershootInterpolator'/><constructor api_added='4' name='AnticipateOvershootInterpolator' type='android.view.animation.AnticipateOvershootInterpolator'><parameter name='tension' type='float'/></constructor><constructor api_added='4' name='AnticipateOvershootInterpolator' type='android.view.animation.AnticipateOvershootInterpolator'><parameter name='tension' type='float'/><parameter name='extraTension' type='float'/></constructor><constructor api_added='4' name='AnticipateOvershootInterpolator' type='android.view.animation.AnticipateOvershootInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method api_added='4' name='getInterpolation' return='float'><parameter name='t' type='float'/></method></class><class api_added='4' name='BounceInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor api_added='4' name='BounceInterpolator' type='android.view.animation.BounceInterpolator'/><constructor api_added='4' name='BounceInterpolator' type='android.view.animation.BounceInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method api_added='4' name='getInterpolation' return='float'><parameter name='t' type='float'/></method></class><class api_added='4' name='OvershootInterpolator' extends='java.lang.Object'><implements name='android.view.animation.Interpolator'/><constructor api_added='4' name='OvershootInterpolator' type='android.view.animation.OvershootInterpolator'/><constructor api_added='4' name='OvershootInterpolator' type='android.view.animation.OvershootInterpolator'><parameter name='tension' type='float'/></constructor><constructor api_added='4' name='OvershootInterpolator' type='android.view.animation.OvershootInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method api_added='4' name='getInterpolation' return='float'><parameter name='t' type='float'/></method></class><interface name='Animation.AnimationListener' abstract='true' static='true'><method name='onAnimationEnd' abstract='true'><parameter name='animation' type='android.view.animation.Animation'/></method><method name='onAnimationRepeat' abstract='true'><parameter name='animation' type='android.view.animation.Animation'/></method><method name='onAnimationStart' abstract='true'><parameter name='animation' type='android.view.animation.Animation'/></method></interface><interface name='Interpolator' abstract='true'><method name='getInterpolation' abstract='true' return='float'><parameter name='input' type='float'/></method></interface></package><package name='android.webkit'><class name='CacheManager' final='true' extends='java.lang.Object'><constructor name='CacheManager' type='android.webkit.CacheManager'/><method name='cacheDisabled' static='true' return='boolean'/><method name='endCacheTransaction' static='true' deprecated='8' return='boolean'/><method name='getCacheFile' static='true' return='android.webkit.CacheManager.CacheResult'><parameter name='url' type='java.lang.String'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method><method name='getCacheFileBaseDir' static='true' return='java.io.File'/><method name='saveCacheFile' static='true'><parameter name='url' type='java.lang.String'/><parameter name='cacheRet' type='android.webkit.CacheManager.CacheResult'/></method><method name='startCacheTransaction' static='true' deprecated='8' return='boolean'/></class><class name='CacheManager.CacheResult' extends='java.lang.Object' static='true'><constructor name='CacheManager.CacheResult' type='android.webkit.CacheManager.CacheResult'/><method name='getContentLength' return='long'/><method name='getETag' return='java.lang.String'/><method name='getEncoding' return='java.lang.String'/><method name='getExpires' return='long'/><method name='getHttpStatusCode' return='int'/><method name='getInputStream' return='java.io.InputStream'/><method name='getLastModified' return='java.lang.String'/><method name='getLocalPath' return='java.lang.String'/><method name='getLocation' return='java.lang.String'/><method name='getMimeType' return='java.lang.String'/><method name='getOutputStream' return='java.io.OutputStream'/><method name='setEncoding'><parameter name='encoding' type='java.lang.String'/></method><method name='setInputStream'><parameter name='stream' type='java.io.InputStream'/></method><method api_added='7' name='getContentDisposition' return='java.lang.String'/><method api_added='7' name='getExpiresString' return='java.lang.String'/></class><class name='CallbackProxy' extends='android.os.Handler' api_removed='8' visibility=''><constructor name='CallbackProxy' api_removed='8' type='android.webkit.CallbackProxy'><parameter name='context' type='android.content.Context'/><parameter name='w' type='android.webkit.WebView'/></constructor><method name='createWindow' api_removed='8' return='android.webkit.WebView'><parameter name='dialog' type='boolean'/><parameter name='userGesture' type='boolean'/></method><method name='doUpdateVisitedHistory' api_removed='8'><parameter name='url' type='java.lang.String'/><parameter name='isReload' type='boolean'/></method><method name='getBackForwardList' api_removed='8' return='android.webkit.WebBackForwardList'/><method name='getProgress' api_removed='8' return='int'/><method name='onCloseWindow' api_removed='8'><parameter name='window' type='android.webkit.WebView'/></method><method name='onDownloadStart' api_removed='8' return='boolean'><parameter name='url' type='java.lang.String'/><parameter name='userAgent' type='java.lang.String'/><parameter name='contentDisposition' type='java.lang.String'/><parameter name='mimetype' type='java.lang.String'/><parameter name='contentLength' type='long'/></method><method name='onFormResubmission' api_removed='8'><parameter name='dontResend' type='android.os.Message'/><parameter name='resend' type='android.os.Message'/></method><method name='onJsAlert' api_removed='8'><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='onJsBeforeUnload' api_removed='8' return='boolean'><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='onJsConfirm' api_removed='8' return='boolean'><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/></method><method name='onJsPrompt' api_removed='8' return='java.lang.String'><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.String'/></method><method name='onLoadResource' api_removed='8'><parameter name='url' type='java.lang.String'/></method><method name='onPageFinished' api_removed='8'><parameter name='url' type='java.lang.String'/></method><method name='onPageStarted' api_removed='8'><parameter name='url' type='java.lang.String'/><parameter name='favicon' type='android.graphics.Bitmap'/></method><method name='onProgressChanged' api_removed='8'><parameter name='newProgress' type='int'/></method><method name='onReceivedError' api_removed='8'><parameter name='errorCode' type='int'/><parameter name='description' type='java.lang.String'/><parameter name='failingUrl' type='java.lang.String'/></method><method name='onReceivedHttpAuthRequest' api_removed='8'><parameter name='handler' type='android.webkit.HttpAuthHandler'/><parameter name='hostName' type='java.lang.String'/><parameter name='realmName' type='java.lang.String'/></method><method name='onReceivedIcon' api_removed='8'><parameter name='icon' type='android.graphics.Bitmap'/></method><method name='onReceivedTitle' api_removed='8'><parameter name='title' type='java.lang.String'/></method><method name='onRequestFocus' api_removed='8'/><method name='onSavePassword' api_removed='4' return='boolean'><parameter name='host' type='java.lang.String'/><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/><parameter name='resumeMsg' type='android.os.Message'/><parameter name='schemePlusHost' type='java.lang.String'/></method><method name='onScaleChanged' api_removed='8'><parameter name='oldScale' type='float'/><parameter name='newScale' type='float'/></method><method name='onTooManyRedirects' api_removed='8'><parameter name='cancelMsg' type='android.os.Message'/><parameter name='continueMsg' type='android.os.Message'/></method><method name='onUnhandledKeyEvent' api_removed='8'><parameter name='event' type='android.view.KeyEvent'/></method><method name='setDownloadListener' api_removed='8'><parameter name='client' type='android.webkit.DownloadListener'/></method><method name='setWebChromeClient' api_removed='8'><parameter name='client' type='android.webkit.WebChromeClient'/></method><method name='setWebViewClient' api_removed='8'><parameter name='client' type='android.webkit.WebViewClient'/></method><method name='shouldOverrideUrlLoading' api_removed='8' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='uiOverrideKeyEvent' api_removed='8' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='uiOverrideUrlLoading' api_removed='8' return='boolean'><parameter name='overrideUrl' type='java.lang.String'/></method><method api_added='4' name='onSavePassword' api_removed='8' return='boolean'><parameter name='schemePlusHost' type='java.lang.String'/><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/><parameter name='resumeMsg' type='android.os.Message'/></method><method api_added='5' name='onExceededDatabaseQuota' api_removed='8'><parameter name='url' type='java.lang.String'/><parameter name='databaseIdentifier' type='java.lang.String'/><parameter name='currentQuota' type='long'/><parameter name='estimatedSize' type='long'/><parameter name='totalUsedQuota' type='long'/><parameter name='quotaUpdater' type='android.webkit.WebStorage.QuotaUpdater'/></method><method api_added='7' name='addMessageToConsole' api_removed='8'><parameter name='message' type='java.lang.String'/><parameter name='lineNumber' type='int'/><parameter name='sourceID' type='java.lang.String'/></method><method api_added='7' name='getVisitedHistory' api_removed='8'><parameter name='callback' type='android.webkit.ValueCallback&lt;java.lang.String[]&gt;'/></method><method api_added='7' name='getWebChromeClient' api_removed='8' return='android.webkit.WebChromeClient'/><method api_added='7' name='onGeolocationPermissionsHidePrompt' api_removed='8'/><method api_added='7' name='onGeolocationPermissionsShowPrompt' api_removed='8'><parameter name='origin' type='java.lang.String'/><parameter name='callback' type='android.webkit.GeolocationPermissions.Callback'/></method><method api_added='7' name='onJsTimeout' api_removed='8' return='boolean'/><method api_added='7' name='onReachedMaxAppCacheSize' api_removed='8'><parameter name='spaceNeeded' type='long'/><parameter name='totalUsedQuota' type='long'/><parameter name='quotaUpdater' type='android.webkit.WebStorage.QuotaUpdater'/></method></class><class name='CookieManager' final='true' extends='java.lang.Object'><method name='acceptCookie' synchronized='true' return='boolean'/><method name='getCookie' return='java.lang.String'><parameter name='url' type='java.lang.String'/></method><method name='getInstance' synchronized='true' static='true' return='android.webkit.CookieManager'/><method name='hasCookies' synchronized='true' return='boolean'/><method name='removeAllCookie' synchronized='true'/><method name='removeExpiredCookie' synchronized='true'/><method name='removeSessionCookie' synchronized='true'/><method name='setAcceptCookie' synchronized='true'><parameter name='accept' type='boolean'/></method><method name='setCookie'><parameter name='url' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method></class><class name='CookieSyncManager' final='true' extends='android.webkit.WebSyncManager'><method name='createInstance' synchronized='true' static='true' return='android.webkit.CookieSyncManager'><parameter name='context' type='android.content.Context'/></method><method name='getInstance' synchronized='true' static='true' return='android.webkit.CookieSyncManager'/><method name='syncFromRamToFlash' visibility='protected'/></class><class name='DateSorter' extends='java.lang.Object'><constructor name='DateSorter' type='android.webkit.DateSorter'><parameter name='context' type='android.content.Context'/></constructor><field name='DAY_COUNT' final='true' static='true' value='5' type='int'/><method name='getBoundary' return='long'><parameter name='index' type='int'/></method><method name='getIndex' return='int'><parameter name='time' type='long'/></method><method name='getLabel' return='java.lang.String'><parameter name='index' type='int'/></method></class><class name='HttpAuthHandler' extends='android.os.Handler'><method name='cancel'/><method name='proceed'><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/></method><method name='useHttpAuthUsernamePassword' return='boolean'/></class><class name='JsPromptResult' extends='android.webkit.JsResult'><method name='confirm'><parameter name='result' type='java.lang.String'/></method></class><class name='JsResult' extends='java.lang.Object'><field name='mProxy' final='true' api_removed='8' type='android.webkit.CallbackProxy' visibility='protected'/><field name='mResult' type='boolean' visibility='protected'/><method name='cancel' final='true'/><method name='confirm' final='true'/><method name='wakeUp' final='true' visibility='protected'/></class><class name='MimeTypeMap' extends='java.lang.Object'><method name='getExtensionFromMimeType' return='java.lang.String'><parameter name='mimeType' type='java.lang.String'/></method><method name='getFileExtensionFromUrl' static='true' return='java.lang.String'><parameter name='url' type='java.lang.String'/></method><method name='getMimeTypeFromExtension' return='java.lang.String'><parameter name='extension' type='java.lang.String'/></method><method name='getSingleton' static='true' return='android.webkit.MimeTypeMap'/><method name='hasExtension' return='boolean'><parameter name='extension' type='java.lang.String'/></method><method name='hasMimeType' return='boolean'><parameter name='mimeType' type='java.lang.String'/></method></class><class name='Plugin' extends='java.lang.Object' deprecated='5'><constructor name='Plugin' type='android.webkit.Plugin' deprecated='5'><parameter name='name' type='java.lang.String'/><parameter name='path' type='java.lang.String'/><parameter name='fileName' type='java.lang.String'/><parameter name='description' type='java.lang.String'/></constructor><method name='dispatchClickEvent' deprecated='5'><parameter name='context' type='android.content.Context'/></method><method name='getDescription' deprecated='5' return='java.lang.String'/><method name='getFileName' deprecated='5' return='java.lang.String'/><method name='getName' deprecated='5' return='java.lang.String'/><method name='getPath' deprecated='5' return='java.lang.String'/><method name='setClickHandler' deprecated='5'><parameter name='handler' type='android.webkit.Plugin.PreferencesClickHandler'/></method><method name='setDescription' deprecated='5'><parameter name='description' type='java.lang.String'/></method><method name='setFileName' deprecated='5'><parameter name='fileName' type='java.lang.String'/></method><method name='setName' deprecated='5'><parameter name='name' type='java.lang.String'/></method><method name='setPath' deprecated='5'><parameter name='path' type='java.lang.String'/></method></class><class name='PluginList' extends='java.lang.Object' deprecated='5'><constructor name='PluginList' type='android.webkit.PluginList' deprecated='5'/><method name='addPlugin' synchronized='true' deprecated='5'><parameter name='plugin' type='android.webkit.Plugin'/></method><method name='clear' synchronized='true' deprecated='5'/><method name='getList' synchronized='true' deprecated='5' return='java.util.List'/><method name='pluginClicked' synchronized='true' deprecated='5'><parameter name='context' type='android.content.Context'/><parameter name='position' type='int'/></method><method name='removePlugin' synchronized='true' deprecated='5'><parameter name='plugin' type='android.webkit.Plugin'/></method></class><class name='SslErrorHandler' extends='android.os.Handler'><method name='cancel'/><method name='proceed'/></class><class name='URLUtil' final='true' extends='java.lang.Object'><constructor name='URLUtil' type='android.webkit.URLUtil'/><method name='composeSearchUrl' static='true' return='java.lang.String'><parameter name='inQuery' type='java.lang.String'/><parameter name='template' type='java.lang.String'/><parameter name='queryPlaceHolder' type='java.lang.String'/></method><method name='decode' static='true' return='byte[]'><parameter name='url' type='byte[]'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='guessFileName' final='true' static='true' return='java.lang.String'><parameter name='url' type='java.lang.String'/><parameter name='contentDisposition' type='java.lang.String'/><parameter name='mimeType' type='java.lang.String'/></method><method name='guessUrl' static='true' return='java.lang.String'><parameter name='inUrl' type='java.lang.String'/></method><method name='isAboutUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isAssetUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isContentUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isCookielessProxyUrl' static='true' deprecated='3' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isDataUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isFileUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isHttpUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isHttpsUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isJavaScriptUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isNetworkUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='isValidUrl' static='true' return='boolean'><parameter name='url' type='java.lang.String'/></method><method name='stripAnchor' static='true' return='java.lang.String'><parameter name='url' type='java.lang.String'/></method></class><class name='UrlInterceptRegistry' final='true' extends='java.lang.Object' deprecated='5'><constructor name='UrlInterceptRegistry' type='android.webkit.UrlInterceptRegistry'/><method name='getSurrogate' synchronized='true' static='true' deprecated='3' return='android.webkit.CacheManager.CacheResult'><parameter name='url' type='java.lang.String'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method><method name='registerHandler' synchronized='true' static='true' deprecated='5' return='boolean'><parameter name='handler' type='android.webkit.UrlInterceptHandler'/></method><method name='setUrlInterceptDisabled' synchronized='true' static='true' deprecated='5'><parameter name='disabled' type='boolean'/></method><method name='unregisterHandler' synchronized='true' static='true' deprecated='5' return='boolean'><parameter name='handler' type='android.webkit.UrlInterceptHandler'/></method><method name='urlInterceptDisabled' synchronized='true' static='true' deprecated='5' return='boolean'/><method api_added='3' name='getPluginData' synchronized='true' static='true' deprecated='5' return='android.webkit.PluginData'><parameter name='url' type='java.lang.String'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method></class><class name='WebBackForwardList' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><method name='getCurrentIndex' synchronized='true' return='int'/><method name='getCurrentItem' synchronized='true' return='android.webkit.WebHistoryItem'/><method name='getItemAtIndex' synchronized='true' return='android.webkit.WebHistoryItem'><parameter name='index' type='int'/></method><method name='getSize' synchronized='true' return='int'/></class><class name='WebChromeClient' extends='java.lang.Object'><constructor name='WebChromeClient' type='android.webkit.WebChromeClient'/><method name='onCloseWindow'><parameter name='window' type='android.webkit.WebView'/></method><method name='onCreateWindow' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='dialog' type='boolean'/><parameter name='userGesture' type='boolean'/><parameter name='resultMsg' type='android.os.Message'/></method><method name='onJsAlert' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='result' type='android.webkit.JsResult'/></method><method name='onJsBeforeUnload' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='result' type='android.webkit.JsResult'/></method><method name='onJsConfirm' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='result' type='android.webkit.JsResult'/></method><method name='onJsPrompt' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='message' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.String'/><parameter name='result' type='android.webkit.JsPromptResult'/></method><method name='onProgressChanged'><parameter name='view' type='android.webkit.WebView'/><parameter name='newProgress' type='int'/></method><method name='onReceivedIcon'><parameter name='view' type='android.webkit.WebView'/><parameter name='icon' type='android.graphics.Bitmap'/></method><method name='onReceivedTitle'><parameter name='view' type='android.webkit.WebView'/><parameter name='title' type='java.lang.String'/></method><method name='onRequestFocus'><parameter name='view' type='android.webkit.WebView'/></method><method api_added='5' name='onExceededDatabaseQuota'><parameter name='url' type='java.lang.String'/><parameter name='databaseIdentifier' type='java.lang.String'/><parameter name='currentQuota' type='long'/><parameter name='estimatedSize' type='long'/><parameter name='totalUsedQuota' type='long'/><parameter name='quotaUpdater' type='android.webkit.WebStorage.QuotaUpdater'/></method><method api_added='5' name='onGeolocationPermissionsHidePrompt'/><method api_added='5' name='onGeolocationPermissionsShowPrompt'><parameter name='origin' type='java.lang.String'/><parameter name='callback' type='android.webkit.GeolocationPermissions.Callback'/></method><method api_added='7' name='getDefaultVideoPoster' return='android.graphics.Bitmap'/><method api_added='7' name='getVideoLoadingProgressView' return='android.view.View'/><method api_added='7' name='getVisitedHistory'><parameter name='callback' type='android.webkit.ValueCallback&lt;java.lang.String[]&gt;'/></method><method api_added='7' name='onConsoleMessage' deprecated='8'><parameter name='message' type='java.lang.String'/><parameter name='lineNumber' type='int'/><parameter name='sourceID' type='java.lang.String'/></method><method api_added='7' name='onHideCustomView'/><method api_added='7' name='onJsTimeout' return='boolean'/><method api_added='7' name='onReachedMaxAppCacheSize'><parameter name='spaceNeeded' type='long'/><parameter name='totalUsedQuota' type='long'/><parameter name='quotaUpdater' type='android.webkit.WebStorage.QuotaUpdater'/></method><method api_added='7' name='onReceivedTouchIconUrl'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='precomposed' type='boolean'/></method><method api_added='7' name='onShowCustomView'><parameter name='view' type='android.view.View'/><parameter name='callback' type='android.webkit.WebChromeClient.CustomViewCallback'/></method><method api_added='8' name='onConsoleMessage' return='boolean'><parameter name='consoleMessage' type='android.webkit.ConsoleMessage'/></method></class><class name='WebHistoryItem' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><method name='getFavicon' return='android.graphics.Bitmap'/><method name='getId' return='int'/><method name='getTitle' return='java.lang.String'/><method name='getUrl' return='java.lang.String'/><method api_added='3' name='getOriginalUrl' return='java.lang.String'/></class><class name='WebIconDatabase' final='true' extends='java.lang.Object'><method name='close'/><method name='getInstance' static='true' return='android.webkit.WebIconDatabase'/><method name='open'><parameter name='path' type='java.lang.String'/></method><method name='releaseIconForPageUrl'><parameter name='url' type='java.lang.String'/></method><method name='removeAllIcons'/><method name='requestIconForPageUrl'><parameter name='url' type='java.lang.String'/><parameter name='listener' type='android.webkit.WebIconDatabase.IconListener'/></method><method name='retainIconForPageUrl'><parameter name='url' type='java.lang.String'/></method></class><class name='WebSettings' extends='java.lang.Object'><field name='LOAD_CACHE_ELSE_NETWORK' final='true' static='true' value='1' type='int'/><field name='LOAD_CACHE_ONLY' final='true' static='true' value='3' type='int'/><field name='LOAD_DEFAULT' final='true' static='true' value='-1' type='int'/><field name='LOAD_NORMAL' final='true' static='true' value='0' type='int'/><field name='LOAD_NO_CACHE' final='true' static='true' value='2' type='int'/><method name='getBlockNetworkImage' synchronized='true' return='boolean'/><method name='getCacheMode' return='int'/><method name='getCursiveFontFamily' synchronized='true' return='java.lang.String'/><method name='getDefaultFixedFontSize' synchronized='true' return='int'/><method name='getDefaultFontSize' synchronized='true' return='int'/><method name='getDefaultTextEncodingName' synchronized='true' return='java.lang.String'/><method name='getFantasyFontFamily' synchronized='true' return='java.lang.String'/><method name='getFixedFontFamily' synchronized='true' return='java.lang.String'/><method name='getJavaScriptCanOpenWindowsAutomatically' synchronized='true' return='boolean'/><method name='getJavaScriptEnabled' synchronized='true' return='boolean'/><method name='getLayoutAlgorithm' synchronized='true' return='android.webkit.WebSettings.LayoutAlgorithm'/><method name='getLightTouchEnabled' return='boolean'/><method name='getLoadsImagesAutomatically' synchronized='true' return='boolean'/><method name='getMinimumFontSize' synchronized='true' return='int'/><method name='getMinimumLogicalFontSize' synchronized='true' return='int'/><method name='getNavDump' return='boolean'/><method name='getPluginsEnabled' synchronized='true' deprecated='8' return='boolean'/><method name='getPluginsPath' synchronized='true' return='java.lang.String'/><method name='getSansSerifFontFamily' synchronized='true' return='java.lang.String'/><method name='getSaveFormData' return='boolean'/><method name='getSavePassword' return='boolean'/><method name='getSerifFontFamily' synchronized='true' return='java.lang.String'/><method name='getStandardFontFamily' synchronized='true' return='java.lang.String'/><method name='getTextSize' synchronized='true' return='android.webkit.WebSettings.TextSize'/><method name='getUseDoubleTree' synchronized='true' deprecated='5' return='boolean'/><method name='getUseWideViewPort' synchronized='true' return='boolean'/><method name='getUserAgent' synchronized='true' deprecated='3' return='int'/><method name='setBlockNetworkImage' synchronized='true'><parameter name='flag' type='boolean'/></method><method name='setCacheMode'><parameter name='mode' type='int'/></method><method name='setCursiveFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setDefaultFixedFontSize' synchronized='true'><parameter name='size' type='int'/></method><method name='setDefaultFontSize' synchronized='true'><parameter name='size' type='int'/></method><method name='setDefaultTextEncodingName' synchronized='true'><parameter name='encoding' type='java.lang.String'/></method><method name='setFantasyFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setFixedFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setJavaScriptCanOpenWindowsAutomatically' synchronized='true'><parameter name='flag' type='boolean'/></method><method name='setJavaScriptEnabled' synchronized='true'><parameter name='flag' type='boolean'/></method><method name='setLayoutAlgorithm' synchronized='true'><parameter name='l' type='android.webkit.WebSettings.LayoutAlgorithm'/></method><method name='setLightTouchEnabled'><parameter name='enabled' type='boolean'/></method><method name='setLoadsImagesAutomatically' synchronized='true'><parameter name='flag' type='boolean'/></method><method name='setMinimumFontSize' synchronized='true'><parameter name='size' type='int'/></method><method name='setMinimumLogicalFontSize' synchronized='true'><parameter name='size' type='int'/></method><method name='setNavDump'><parameter name='enabled' type='boolean'/></method><method name='setNeedInitialFocus'><parameter name='flag' type='boolean'/></method><method name='setPluginsEnabled' synchronized='true' deprecated='8'><parameter name='flag' type='boolean'/></method><method name='setPluginsPath' synchronized='true'><parameter name='pluginsPath' type='java.lang.String'/></method><method name='setRenderPriority' synchronized='true'><parameter name='priority' type='android.webkit.WebSettings.RenderPriority'/></method><method name='setSansSerifFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setSaveFormData'><parameter name='save' type='boolean'/></method><method name='setSavePassword'><parameter name='save' type='boolean'/></method><method name='setSerifFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setStandardFontFamily' synchronized='true'><parameter name='font' type='java.lang.String'/></method><method name='setSupportMultipleWindows' synchronized='true'><parameter name='support' type='boolean'/></method><method name='setSupportZoom'><parameter name='support' type='boolean'/></method><method name='setTextSize' synchronized='true'><parameter name='t' type='android.webkit.WebSettings.TextSize'/></method><method name='setUseDoubleTree' synchronized='true' deprecated='5'><parameter name='use' type='boolean'/></method><method name='setUseWideViewPort' synchronized='true'><parameter name='use' type='boolean'/></method><method name='setUserAgent' synchronized='true' deprecated='3'><parameter name='ua' type='int'/></method><method name='supportMultipleWindows' synchronized='true' return='boolean'/><method name='supportZoom' return='boolean'/><method api_added='3' name='getAllowFileAccess' return='boolean'/><method api_added='3' name='getBuiltInZoomControls' return='boolean'/><method api_added='3' name='getUserAgentString' synchronized='true' return='java.lang.String'/><method api_added='3' name='setAllowFileAccess'><parameter name='allow' type='boolean'/></method><method api_added='3' name='setBuiltInZoomControls'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='setUserAgentString' synchronized='true'><parameter name='ua' type='java.lang.String'/></method><method api_added='5' name='getDatabaseEnabled' synchronized='true' return='boolean'/><method api_added='5' name='getDatabasePath' synchronized='true' return='java.lang.String'/><method api_added='5' name='setDatabaseEnabled' synchronized='true'><parameter name='flag' type='boolean'/></method><method api_added='5' name='setDatabasePath' synchronized='true'><parameter name='databasePath' type='java.lang.String'/></method><method api_added='5' name='setGeolocationDatabasePath' synchronized='true'><parameter name='databasePath' type='java.lang.String'/></method><method api_added='5' name='setGeolocationEnabled' synchronized='true'><parameter name='flag' type='boolean'/></method><method api_added='7' name='getDefaultZoom' return='android.webkit.WebSettings.ZoomDensity'/><method api_added='7' name='getDomStorageEnabled' synchronized='true' return='boolean'/><method api_added='7' name='getLoadWithOverviewMode' return='boolean'/><method api_added='7' name='setAppCacheEnabled' synchronized='true'><parameter name='flag' type='boolean'/></method><method api_added='7' name='setAppCacheMaxSize' synchronized='true'><parameter name='appCacheMaxSize' type='long'/></method><method api_added='7' name='setAppCachePath' synchronized='true'><parameter name='appCachePath' type='java.lang.String'/></method><method api_added='7' name='setDefaultZoom'><parameter name='zoom' type='android.webkit.WebSettings.ZoomDensity'/></method><method api_added='7' name='setDomStorageEnabled' synchronized='true'><parameter name='flag' type='boolean'/></method><method api_added='7' name='setLoadWithOverviewMode'><parameter name='overview' type='boolean'/></method><method api_added='8' name='getBlockNetworkLoads' synchronized='true' return='boolean'/><method api_added='8' name='getPluginState' synchronized='true' return='android.webkit.WebSettings.PluginState'/><method api_added='8' name='setBlockNetworkLoads' synchronized='true'><parameter name='flag' type='boolean'/></method><method api_added='8' name='setPluginState' synchronized='true'><parameter name='state' type='android.webkit.WebSettings.PluginState'/></method></class><class name='WebSettings.LayoutAlgorithm' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.webkit.WebSettings.LayoutAlgorithm'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.webkit.WebSettings.LayoutAlgorithm[]'/></class><class name='WebSettings.RenderPriority' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.webkit.WebSettings.RenderPriority'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.webkit.WebSettings.RenderPriority[]'/></class><class name='WebSettings.TextSize' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.webkit.WebSettings.TextSize'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.webkit.WebSettings.TextSize[]'/></class><class name='WebSyncManager' extends='java.lang.Object' abstract='true' visibility=''><implements name='java.lang.Runnable'/><constructor name='WebSyncManager' type='android.webkit.WebSyncManager' visibility='protected'><parameter name='context' type='android.content.Context'/><parameter name='name' type='java.lang.String'/></constructor><field name='LOGTAG' final='true' static='true' value='&quot;websync&quot;' type='java.lang.String' visibility='protected'/><field name='mDataBase' type='android.webkit.WebViewDatabase' visibility='protected'/><field name='mHandler' type='android.os.Handler' visibility='protected'/><method name='onSyncInit' visibility='protected'/><method name='resetSync'/><method name='run'/><method name='startSync'/><method name='stopSync'/><method name='sync'/></class><class name='WebView' extends='android.widget.AbsoluteLayout'><implements name='android.view.ViewGroup.OnHierarchyChangeListener'/><implements name='android.view.ViewTreeObserver.OnGlobalFocusChangeListener'/><constructor name='WebView' type='android.webkit.WebView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='WebView' type='android.webkit.WebView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='WebView' type='android.webkit.WebView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='SCHEME_GEO' final='true' static='true' value='&quot;geo:0,0?q=&quot;' type='java.lang.String'/><field name='SCHEME_MAILTO' final='true' static='true' value='&quot;mailto:&quot;' type='java.lang.String'/><field name='SCHEME_TEL' final='true' static='true' value='&quot;tel:&quot;' type='java.lang.String'/><method name='addJavascriptInterface'><parameter name='obj' type='java.lang.Object'/><parameter name='interfaceName' type='java.lang.String'/></method><method name='canGoBack' return='boolean'/><method name='canGoBackOrForward' return='boolean'><parameter name='steps' type='int'/></method><method name='canGoForward' return='boolean'/><method name='capturePicture' return='android.graphics.Picture'/><method name='clearCache'><parameter name='includeDiskFiles' type='boolean'/></method><method name='clearFormData'/><method name='clearHistory'/><method name='clearSslPreferences'/><method name='clearView'/><method name='copyBackForwardList' return='android.webkit.WebBackForwardList'/><method name='debugDump'/><method name='destroy'/><method name='disablePlatformNotifications' static='true'/><method name='documentHasImages'><parameter name='response' type='android.os.Message'/></method><method name='enablePlatformNotifications' static='true'/><method name='findAddress' static='true' return='java.lang.String'><parameter name='addr' type='java.lang.String'/></method><method name='flingScroll'><parameter name='vx' type='int'/><parameter name='vy' type='int'/></method><method name='getCertificate' return='android.net.http.SslCertificate'/><method name='getContentHeight' return='int'/><method name='getFavicon' return='android.graphics.Bitmap'/><method name='getHitTestResult' return='android.webkit.WebView.HitTestResult'/><method name='getHttpAuthUsernamePassword' return='java.lang.String[]'><parameter name='host' type='java.lang.String'/><parameter name='realm' type='java.lang.String'/></method><method name='getPluginList' synchronized='true' static='true' deprecated='5' return='android.webkit.PluginList'/><method name='getProgress' return='int'/><method name='getScale' return='float'/><method name='getSettings' return='android.webkit.WebSettings'/><method name='getTitle' return='java.lang.String'/><method name='getUrl' return='java.lang.String'/><method name='getZoomControls' deprecated='3' return='android.view.View'/><method name='goBack'/><method name='goBackOrForward'><parameter name='steps' type='int'/></method><method name='goForward'/><method name='invokeZoomPicker'/><method name='loadData'><parameter name='data' type='java.lang.String'/><parameter name='mimeType' type='java.lang.String'/><parameter name='encoding' type='java.lang.String'/></method><method name='loadDataWithBaseURL'><parameter name='baseUrl' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><parameter name='mimeType' type='java.lang.String'/><parameter name='encoding' type='java.lang.String'/><parameter name='failUrl' type='java.lang.String'/><parameter name='historyUrl' type='java.lang.String'/></method><method name='loadUrl'><parameter name='url' type='java.lang.String'/></method><method name='onChildViewAdded' deprecated='8'><parameter name='parent' type='android.view.View'/><parameter name='child' type='android.view.View'/></method><method name='onChildViewRemoved' deprecated='8'><parameter name='p' type='android.view.View'/><parameter name='child' type='android.view.View'/></method><method name='onGlobalFocusChanged' deprecated='3'><parameter name='oldFocus' type='android.view.View'/><parameter name='newFocus' type='android.view.View'/></method><method name='overlayHorizontalScrollbar' return='boolean'/><method name='overlayVerticalScrollbar' return='boolean'/><method name='pageDown' return='boolean'><parameter name='bottom' type='boolean'/></method><method name='pageUp' return='boolean'><parameter name='top' type='boolean'/></method><method name='pauseTimers'/><method name='refreshPlugins' deprecated='5'><parameter name='reloadOpenPages' type='boolean'/></method><method name='reload'/><method name='requestFocusNodeHref'><parameter name='hrefMsg' type='android.os.Message'/></method><method name='requestImageRef'><parameter name='msg' type='android.os.Message'/></method><method name='restoreState' return='android.webkit.WebBackForwardList'><parameter name='inState' type='android.os.Bundle'/></method><method name='resumeTimers'/><method name='savePassword'><parameter name='host' type='java.lang.String'/><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/></method><method name='saveState' return='android.webkit.WebBackForwardList'><parameter name='outState' type='android.os.Bundle'/></method><method name='setCertificate'><parameter name='certificate' type='android.net.http.SslCertificate'/></method><method name='setDownloadListener'><parameter name='listener' type='android.webkit.DownloadListener'/></method><method name='setHorizontalScrollbarOverlay'><parameter name='overlay' type='boolean'/></method><method name='setHttpAuthUsernamePassword'><parameter name='host' type='java.lang.String'/><parameter name='realm' type='java.lang.String'/><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/></method><method name='setInitialScale'><parameter name='scaleInPercent' type='int'/></method><method name='setMapTrackballToArrowKeys'><parameter name='setMap' type='boolean'/></method><method name='setPictureListener'><parameter name='listener' type='android.webkit.WebView.PictureListener'/></method><method name='setVerticalScrollbarOverlay'><parameter name='overlay' type='boolean'/></method><method name='setWebChromeClient'><parameter name='client' type='android.webkit.WebChromeClient'/></method><method name='setWebViewClient'><parameter name='client' type='android.webkit.WebViewClient'/></method><method name='stopLoading'/><method name='zoomIn' return='boolean'/><method name='zoomOut' return='boolean'/><method api_added='3' name='clearMatches'/><method api_added='3' name='findAll' return='int'><parameter name='find' type='java.lang.String'/></method><method api_added='3' name='findNext'><parameter name='forward' type='boolean'/></method><method api_added='3' name='getOriginalUrl' return='java.lang.String'/><method api_added='3' name='restorePicture' return='boolean'><parameter name='b' type='android.os.Bundle'/><parameter name='src' type='java.io.File'/></method><method api_added='3' name='savePicture' return='boolean'><parameter name='b' type='android.os.Bundle'/><parameter name='dest' type='java.io.File'/></method><method api_added='3' name='setNetworkAvailable'><parameter name='networkUp' type='boolean'/></method><method api_added='5' name='postUrl'><parameter name='url' type='java.lang.String'/><parameter name='postData' type='byte[]'/></method><method api_added='7' name='freeMemory'/><method api_added='8' name='emulateShiftHeld'/><method api_added='8' name='loadUrl'><parameter name='url' type='java.lang.String'/><parameter name='extraHeaders' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method></class><class name='WebView.HitTestResult' extends='java.lang.Object'><field name='ANCHOR_TYPE' final='true' static='true' value='1' type='int'/><field name='EDIT_TEXT_TYPE' final='true' static='true' value='9' type='int'/><field name='EMAIL_TYPE' final='true' static='true' value='4' type='int'/><field name='GEO_TYPE' final='true' static='true' value='3' type='int'/><field name='IMAGE_ANCHOR_TYPE' final='true' static='true' value='6' type='int'/><field name='IMAGE_TYPE' final='true' static='true' value='5' type='int'/><field name='PHONE_TYPE' final='true' static='true' value='2' type='int'/><field name='SRC_ANCHOR_TYPE' final='true' static='true' value='7' type='int'/><field name='SRC_IMAGE_ANCHOR_TYPE' final='true' static='true' value='8' type='int'/><field name='UNKNOWN_TYPE' final='true' static='true' value='0' type='int'/><method name='getExtra' return='java.lang.String'/><method name='getType' return='int'/></class><class name='WebView.WebViewTransport' extends='java.lang.Object'><constructor name='WebView.WebViewTransport' type='android.webkit.WebView.WebViewTransport'/><method name='getWebView' synchronized='true' return='android.webkit.WebView'/><method name='setWebView' synchronized='true'><parameter name='webview' type='android.webkit.WebView'/></method></class><class name='WebViewClient' extends='java.lang.Object'><constructor name='WebViewClient' type='android.webkit.WebViewClient'/><field api_added='5' name='ERROR_AUTHENTICATION' final='true' static='true' value='-4' type='int'/><field api_added='5' name='ERROR_BAD_URL' final='true' static='true' value='-12' type='int'/><field api_added='5' name='ERROR_CONNECT' final='true' static='true' value='-6' type='int'/><field api_added='5' name='ERROR_FAILED_SSL_HANDSHAKE' final='true' static='true' value='-11' type='int'/><field api_added='5' name='ERROR_FILE' final='true' static='true' value='-13' type='int'/><field api_added='5' name='ERROR_FILE_NOT_FOUND' final='true' static='true' value='-14' type='int'/><field api_added='5' name='ERROR_HOST_LOOKUP' final='true' static='true' value='-2' type='int'/><field api_added='5' name='ERROR_IO' final='true' static='true' value='-7' type='int'/><field api_added='5' name='ERROR_PROXY_AUTHENTICATION' final='true' static='true' value='-5' type='int'/><field api_added='5' name='ERROR_REDIRECT_LOOP' final='true' static='true' value='-9' type='int'/><field api_added='5' name='ERROR_TIMEOUT' final='true' static='true' value='-8' type='int'/><field api_added='5' name='ERROR_TOO_MANY_REQUESTS' final='true' static='true' value='-15' type='int'/><field api_added='5' name='ERROR_UNKNOWN' final='true' static='true' value='-1' type='int'/><field api_added='5' name='ERROR_UNSUPPORTED_AUTH_SCHEME' final='true' static='true' value='-3' type='int'/><field api_added='5' name='ERROR_UNSUPPORTED_SCHEME' final='true' static='true' value='-10' type='int'/><method name='doUpdateVisitedHistory'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='isReload' type='boolean'/></method><method name='onFormResubmission'><parameter name='view' type='android.webkit.WebView'/><parameter name='dontResend' type='android.os.Message'/><parameter name='resend' type='android.os.Message'/></method><method name='onLoadResource'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/></method><method name='onPageFinished'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/></method><method name='onPageStarted'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/><parameter name='favicon' type='android.graphics.Bitmap'/></method><method name='onReceivedError'><parameter name='view' type='android.webkit.WebView'/><parameter name='errorCode' type='int'/><parameter name='description' type='java.lang.String'/><parameter name='failingUrl' type='java.lang.String'/></method><method name='onReceivedHttpAuthRequest'><parameter name='view' type='android.webkit.WebView'/><parameter name='handler' type='android.webkit.HttpAuthHandler'/><parameter name='host' type='java.lang.String'/><parameter name='realm' type='java.lang.String'/></method><method name='onScaleChanged'><parameter name='view' type='android.webkit.WebView'/><parameter name='oldScale' type='float'/><parameter name='newScale' type='float'/></method><method name='onTooManyRedirects' deprecated='8'><parameter name='view' type='android.webkit.WebView'/><parameter name='cancelMsg' type='android.os.Message'/><parameter name='continueMsg' type='android.os.Message'/></method><method name='onUnhandledKeyEvent'><parameter name='view' type='android.webkit.WebView'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='shouldOverrideKeyEvent' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='event' type='android.view.KeyEvent'/></method><method name='shouldOverrideUrlLoading' return='boolean'><parameter name='view' type='android.webkit.WebView'/><parameter name='url' type='java.lang.String'/></method><method api_added='8' name='onReceivedSslError'><parameter name='view' type='android.webkit.WebView'/><parameter name='handler' type='android.webkit.SslErrorHandler'/><parameter name='error' type='android.net.http.SslError'/></method></class><class name='WebViewDatabase' extends='java.lang.Object'><field name='LOGTAG' final='true' static='true' value='&quot;webviewdatabase&quot;' type='java.lang.String' visibility='protected'/><method name='clearFormData'/><method name='clearHttpAuthUsernamePassword'/><method name='clearUsernamePassword'/><method name='getInstance' synchronized='true' static='true' return='android.webkit.WebViewDatabase'><parameter name='context' type='android.content.Context'/></method><method name='hasFormData' return='boolean'/><method name='hasHttpAuthUsernamePassword' return='boolean'/><method name='hasUsernamePassword' return='boolean'/></class><class api_added='3' name='PluginData' final='true' extends='java.lang.Object' deprecated='5'><constructor api_added='3' name='PluginData' type='android.webkit.PluginData' deprecated='5'><parameter name='stream' type='java.io.InputStream'/><parameter name='length' type='long'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String[]&gt;'/><parameter name='code' type='int'/></constructor><method api_added='3' name='getContentLength' deprecated='5' return='long'/><method api_added='3' name='getHeaders' deprecated='5' return='java.util.Map&lt;java.lang.String, java.lang.String[]&gt;'/><method api_added='3' name='getInputStream' deprecated='5' return='java.io.InputStream'/><method api_added='3' name='getStatusCode' deprecated='5' return='int'/></class><class api_added='5' name='GeolocationPermissions' final='true' extends='java.lang.Object'><constructor api_added='5' name='GeolocationPermissions' type='android.webkit.GeolocationPermissions'/><method api_added='7' name='allow'><parameter name='origin' type='java.lang.String'/></method><method api_added='7' name='clear'><parameter name='origin' type='java.lang.String'/></method><method api_added='7' name='clearAll'/><method api_added='7' name='getAllowed'><parameter name='origin' type='java.lang.String'/><parameter name='callback' type='android.webkit.ValueCallback&lt;java.lang.Boolean&gt;'/></method><method api_added='7' name='getInstance' static='true' return='android.webkit.GeolocationPermissions'/><method api_added='7' name='getOrigins'><parameter name='callback' type='android.webkit.ValueCallback&lt;java.util.Set&lt;java.lang.String&gt;&gt;'/></method></class><class api_added='5' name='WebStorage' final='true' extends='java.lang.Object'><constructor api_added='5' name='WebStorage' type='android.webkit.WebStorage'/><method api_added='7' name='deleteAllData'/><method api_added='7' name='deleteOrigin'><parameter name='origin' type='java.lang.String'/></method><method api_added='7' name='getInstance' static='true' return='android.webkit.WebStorage'/><method api_added='7' name='getOrigins'><parameter name='callback' type='android.webkit.ValueCallback&lt;java.util.Map&gt;'/></method><method api_added='7' name='getQuotaForOrigin'><parameter name='origin' type='java.lang.String'/><parameter name='callback' type='android.webkit.ValueCallback&lt;java.lang.Long&gt;'/></method><method api_added='7' name='getUsageForOrigin'><parameter name='origin' type='java.lang.String'/><parameter name='callback' type='android.webkit.ValueCallback&lt;java.lang.Long&gt;'/></method><method api_added='7' name='setQuotaForOrigin'><parameter name='origin' type='java.lang.String'/><parameter name='quota' type='long'/></method></class><class api_added='7' name='WebSettings.ZoomDensity' final='true' extends='java.lang.Enum' static='true'><method api_added='7' name='valueOf' static='true' return='android.webkit.WebSettings.ZoomDensity'><parameter name='name' type='java.lang.String'/></method><method api_added='7' name='values' final='true' static='true' return='android.webkit.WebSettings.ZoomDensity[]'/></class><class api_added='8' name='ConsoleMessage' extends='java.lang.Object'><constructor api_added='8' name='ConsoleMessage' type='android.webkit.ConsoleMessage'><parameter name='message' type='java.lang.String'/><parameter name='sourceId' type='java.lang.String'/><parameter name='lineNumber' type='int'/><parameter name='msgLevel' type='android.webkit.ConsoleMessage.MessageLevel'/></constructor><method api_added='8' name='lineNumber' return='int'/><method api_added='8' name='message' return='java.lang.String'/><method api_added='8' name='messageLevel' return='android.webkit.ConsoleMessage.MessageLevel'/><method api_added='8' name='sourceId' return='java.lang.String'/></class><class api_added='8' name='ConsoleMessage.MessageLevel' final='true' extends='java.lang.Enum' static='true'><method api_added='8' name='valueOf' static='true' return='android.webkit.ConsoleMessage.MessageLevel'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='values' final='true' static='true' return='android.webkit.ConsoleMessage.MessageLevel[]'/></class><class api_added='8' name='WebSettings.PluginState' final='true' extends='java.lang.Enum' static='true'><method api_added='8' name='valueOf' static='true' return='android.webkit.WebSettings.PluginState'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='values' final='true' static='true' return='android.webkit.WebSettings.PluginState[]'/></class><interface name='DownloadListener' abstract='true'><method name='onDownloadStart' abstract='true'><parameter name='url' type='java.lang.String'/><parameter name='userAgent' type='java.lang.String'/><parameter name='contentDisposition' type='java.lang.String'/><parameter name='mimetype' type='java.lang.String'/><parameter name='contentLength' type='long'/></method></interface><interface name='Plugin.PreferencesClickHandler' abstract='true' static='true'><method name='handleClickEvent' abstract='true'><parameter name='context' type='android.content.Context'/></method></interface><interface name='UrlInterceptHandler' abstract='true' deprecated='5'><method name='service' abstract='true' deprecated='3' return='android.webkit.CacheManager.CacheResult'><parameter name='url' type='java.lang.String'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method><method api_added='3' name='getPluginData' abstract='true' deprecated='5' return='android.webkit.PluginData'><parameter name='url' type='java.lang.String'/><parameter name='headers' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method></interface><interface name='WebIconDatabase.IconListener' abstract='true' static='true'><method name='onReceivedIcon' abstract='true'><parameter name='url' type='java.lang.String'/><parameter name='icon' type='android.graphics.Bitmap'/></method></interface><interface name='WebView.PictureListener' abstract='true' static='true'><method name='onNewPicture' abstract='true'><parameter name='view' type='android.webkit.WebView'/><parameter name='picture' type='android.graphics.Picture'/></method></interface><interface api_added='5' name='GeolocationPermissions.Callback' abstract='true' static='true'><method api_added='5' name='invoke' abstract='true'><parameter name='origin' type='java.lang.String'/><parameter name='allow' type='boolean'/><parameter name='remember' type='boolean'/></method></interface><interface api_added='5' name='PluginStub' abstract='true'><method api_added='5' name='getEmbeddedView' abstract='true' return='android.view.View'><parameter name='NPP' type='int'/><parameter name='context' type='android.content.Context'/></method><method api_added='5' name='getFullScreenView' abstract='true' return='android.view.View'><parameter name='NPP' type='int'/><parameter name='context' type='android.content.Context'/></method></interface><interface api_added='5' name='WebStorage.QuotaUpdater' abstract='true' static='true'><method api_added='5' name='updateQuota' abstract='true'><parameter name='newQuota' type='long'/></method></interface><interface api_added='7' name='ValueCallback' abstract='true'><method api_added='7' name='onReceiveValue' abstract='true'><parameter name='value' type='T'/></method></interface><interface api_added='7' name='WebChromeClient.CustomViewCallback' abstract='true' static='true'><method api_added='7' name='onCustomViewHidden' abstract='true'/></interface></package><package name='android.widget'><class name='AbsListView' extends='android.widget.AdapterView' abstract='true'><implements name='android.widget.Filter.FilterListener'/><implements name='android.text.TextWatcher'/><implements name='android.view.ViewTreeObserver.OnGlobalLayoutListener'/><implements name='android.view.ViewTreeObserver.OnTouchModeChangeListener'/><constructor name='AbsListView' type='android.widget.AbsListView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AbsListView' type='android.widget.AbsListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsListView' type='android.widget.AbsListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='TRANSCRIPT_MODE_ALWAYS_SCROLL' final='true' static='true' value='2' type='int'/><field name='TRANSCRIPT_MODE_DISABLED' final='true' static='true' value='0' type='int'/><field name='TRANSCRIPT_MODE_NORMAL' final='true' static='true' value='1' type='int'/><method name='afterTextChanged'><parameter name='s' type='android.text.Editable'/></method><method name='beforeTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='after' type='int'/></method><method name='clearTextFilter'/><method name='getCacheColorHint' return='int'/><method name='getListPaddingBottom' return='int'/><method name='getListPaddingLeft' return='int'/><method name='getListPaddingRight' return='int'/><method name='getListPaddingTop' return='int'/><method name='getSelectedView' return='android.view.View'/><method name='getSelector' return='android.graphics.drawable.Drawable'/><method name='getTranscriptMode' return='int'/><method name='handleDataChanged' visibility='protected'/><method name='hasTextFilter' return='boolean'/><method name='invalidateViews'/><method name='isInFilterMode' visibility='protected' return='boolean'/><method name='isScrollingCacheEnabled' return='boolean'/><method name='isStackFromBottom' return='boolean'/><method name='isTextFilterEnabled' return='boolean'/><method name='layoutChildren' visibility='protected'/><method name='onFilterComplete'><parameter name='count' type='int'/></method><method name='onGlobalLayout'/><method name='onRestoreInstanceState'><parameter name='state' type='android.os.Parcelable'/></method><method name='onSaveInstanceState' return='android.os.Parcelable'/><method name='onTextChanged'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='before' type='int'/><parameter name='count' type='int'/></method><method name='onTouchModeChanged'><parameter name='isInTouchMode' type='boolean'/></method><method name='pointToPosition' return='int'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='pointToRowId' return='long'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='reclaimViews'><parameter name='views' type='java.util.List&lt;android.view.View&gt;'/></method><method name='setCacheColorHint'><parameter name='color' type='int'/></method><method name='setDrawSelectorOnTop'><parameter name='onTop' type='boolean'/></method><method name='setFilterText'><parameter name='filterText' type='java.lang.String'/></method><method name='setOnScrollListener'><parameter name='l' type='android.widget.AbsListView.OnScrollListener'/></method><method name='setRecyclerListener'><parameter name='listener' type='android.widget.AbsListView.RecyclerListener'/></method><method name='setScrollIndicators'><parameter name='up' type='android.view.View'/><parameter name='down' type='android.view.View'/></method><method name='setScrollingCacheEnabled'><parameter name='enabled' type='boolean'/></method><method name='setSelector'><parameter name='resID' type='int'/></method><method name='setSelector'><parameter name='sel' type='android.graphics.drawable.Drawable'/></method><method name='setStackFromBottom'><parameter name='stackFromBottom' type='boolean'/></method><method name='setTextFilterEnabled'><parameter name='textFilterEnabled' type='boolean'/></method><method name='setTranscriptMode'><parameter name='mode' type='int'/></method><method name='verifyDrawable' return='boolean'><parameter name='dr' type='android.graphics.drawable.Drawable'/></method><method api_added='3' name='getTextFilter' return='java.lang.CharSequence'/><method api_added='3' name='isFastScrollEnabled' return='boolean'/><method api_added='3' name='isSmoothScrollbarEnabled' return='boolean'/><method api_added='3' name='setFastScrollEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='setSmoothScrollbarEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='8' name='smoothScrollBy'><parameter name='distance' type='int'/><parameter name='duration' type='int'/></method><method api_added='8' name='smoothScrollToPosition'><parameter name='position' type='int'/></method><method api_added='8' name='smoothScrollToPosition'><parameter name='position' type='int'/><parameter name='boundPosition' type='int'/></method></class><class name='AbsListView.LayoutParams' extends='android.view.ViewGroup.LayoutParams' static='true'><constructor name='AbsListView.LayoutParams' type='android.widget.AbsListView.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsListView.LayoutParams' type='android.widget.AbsListView.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='AbsListView.LayoutParams' type='android.widget.AbsListView.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='viewType' type='int'/></constructor><constructor name='AbsListView.LayoutParams' type='android.widget.AbsListView.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor></class><class name='AbsSeekBar' extends='android.widget.ProgressBar' abstract='true'><constructor name='AbsSeekBar' type='android.widget.AbsSeekBar'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AbsSeekBar' type='android.widget.AbsSeekBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsSeekBar' type='android.widget.AbsSeekBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getThumbOffset' return='int'/><method name='setThumb'><parameter name='thumb' type='android.graphics.drawable.Drawable'/></method><method name='setThumbOffset'><parameter name='thumbOffset' type='int'/></method><method api_added='3' name='getKeyProgressIncrement' return='int'/><method api_added='3' name='setKeyProgressIncrement'><parameter name='increment' type='int'/></method></class><class name='AbsSpinner' extends='android.widget.AdapterView' abstract='true'><constructor name='AbsSpinner' type='android.widget.AbsSpinner'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AbsSpinner' type='android.widget.AbsSpinner'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsSpinner' type='android.widget.AbsSpinner'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getAdapter' return='android.widget.SpinnerAdapter'/><method name='getSelectedView' return='android.view.View'/><method name='onRestoreInstanceState'><parameter name='state' type='android.os.Parcelable'/></method><method name='onSaveInstanceState' return='android.os.Parcelable'/><method name='pointToPosition' return='int'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='setAdapter'><parameter name='adapter' type='android.widget.SpinnerAdapter'/></method><method name='setSelection'><parameter name='position' type='int'/><parameter name='animate' type='boolean'/></method><method name='setSelection'><parameter name='position' type='int'/></method></class><class name='AbsoluteLayout' extends='android.view.ViewGroup' deprecated='3'><constructor name='AbsoluteLayout' type='android.widget.AbsoluteLayout'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AbsoluteLayout' type='android.widget.AbsoluteLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsoluteLayout' type='android.widget.AbsoluteLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method></class><class name='AbsoluteLayout.LayoutParams' extends='android.view.ViewGroup.LayoutParams' static='true'><constructor name='AbsoluteLayout.LayoutParams' type='android.widget.AbsoluteLayout.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/></constructor><constructor name='AbsoluteLayout.LayoutParams' type='android.widget.AbsoluteLayout.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AbsoluteLayout.LayoutParams' type='android.widget.AbsoluteLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor><field name='x' type='int'/><field name='y' type='int'/><method name='debug' return='java.lang.String'><parameter name='output' type='java.lang.String'/></method></class><class name='AdapterView' extends='android.view.ViewGroup' abstract='true'><constructor name='AdapterView' type='android.widget.AdapterView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AdapterView' type='android.widget.AdapterView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AdapterView' type='android.widget.AdapterView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='INVALID_POSITION' final='true' static='true' value='-1' type='int'/><field name='INVALID_ROW_ID' final='true' static='true' value='-9223372036854775808L' type='long'/><field name='ITEM_VIEW_TYPE_HEADER_OR_FOOTER' final='true' static='true' value='-2' type='int'/><field name='ITEM_VIEW_TYPE_IGNORE' final='true' static='true' value='-1' type='int'/><method name='getAdapter' abstract='true' return='T'/><method name='getCount' return='int'/><method name='getEmptyView' return='android.view.View'/><method name='getFirstVisiblePosition' return='int'/><method name='getItemAtPosition' return='java.lang.Object'><parameter name='position' type='int'/></method><method name='getItemIdAtPosition' return='long'><parameter name='position' type='int'/></method><method name='getLastVisiblePosition' return='int'/><method name='getOnItemClickListener' final='true' return='android.widget.AdapterView.OnItemClickListener'/><method name='getOnItemLongClickListener' final='true' return='android.widget.AdapterView.OnItemLongClickListener'/><method name='getOnItemSelectedListener' final='true' return='android.widget.AdapterView.OnItemSelectedListener'/><method name='getPositionForView' return='int'><parameter name='view' type='android.view.View'/></method><method name='getSelectedItem' return='java.lang.Object'/><method name='getSelectedItemId' return='long'/><method name='getSelectedItemPosition' return='int'/><method name='getSelectedView' abstract='true' return='android.view.View'/><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='performItemClick' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method><method name='setAdapter' abstract='true'><parameter name='adapter' type='T'/></method><method name='setEmptyView'><parameter name='emptyView' type='android.view.View'/></method><method name='setOnItemClickListener'><parameter name='listener' type='android.widget.AdapterView.OnItemClickListener'/></method><method name='setOnItemLongClickListener'><parameter name='listener' type='android.widget.AdapterView.OnItemLongClickListener'/></method><method name='setOnItemSelectedListener'><parameter name='listener' type='android.widget.AdapterView.OnItemSelectedListener'/></method><method name='setSelection' abstract='true'><parameter name='position' type='int'/></method></class><class name='AdapterView.AdapterContextMenuInfo' extends='java.lang.Object' static='true'><implements name='android.view.ContextMenu.ContextMenuInfo'/><constructor name='AdapterView.AdapterContextMenuInfo' type='android.widget.AdapterView.AdapterContextMenuInfo'><parameter name='targetView' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></constructor><field name='id' type='long'/><field name='position' type='int'/><field name='targetView' type='android.view.View'/></class><class name='AnalogClock' extends='android.view.View'><constructor name='AnalogClock' type='android.widget.AnalogClock'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AnalogClock' type='android.widget.AnalogClock'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AnalogClock' type='android.widget.AnalogClock'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor></class><class name='ArrayAdapter' extends='android.widget.BaseAdapter'><implements name='android.widget.Filterable'/><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='textViewResourceId' type='int'/></constructor><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='resource' type='int'/><parameter name='textViewResourceId' type='int'/></constructor><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='textViewResourceId' type='int'/><parameter name='objects' type='T[]'/></constructor><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='resource' type='int'/><parameter name='textViewResourceId' type='int'/><parameter name='objects' type='T[]'/></constructor><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='textViewResourceId' type='int'/><parameter name='objects' type='java.util.List&lt;T&gt;'/></constructor><constructor name='ArrayAdapter' type='android.widget.ArrayAdapter'><parameter name='context' type='android.content.Context'/><parameter name='resource' type='int'/><parameter name='textViewResourceId' type='int'/><parameter name='objects' type='java.util.List&lt;T&gt;'/></constructor><method name='add'><parameter name='object' type='T'/></method><method name='clear'/><method name='createFromResource' static='true' return='android.widget.ArrayAdapter&lt;java.lang.CharSequence&gt;'><parameter name='context' type='android.content.Context'/><parameter name='textArrayResId' type='int'/><parameter name='textViewResId' type='int'/></method><method name='getContext' return='android.content.Context'/><method name='getCount' return='int'/><method name='getFilter' return='android.widget.Filter'/><method name='getItem' return='T'><parameter name='position' type='int'/></method><method name='getItemId' return='long'><parameter name='position' type='int'/></method><method name='getPosition' return='int'><parameter name='item' type='T'/></method><method name='getView' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='insert'><parameter name='object' type='T'/><parameter name='index' type='int'/></method><method name='remove'><parameter name='object' type='T'/></method><method name='setDropDownViewResource'><parameter name='resource' type='int'/></method><method name='setNotifyOnChange'><parameter name='notifyOnChange' type='boolean'/></method><method api_added='3' name='sort'><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method></class><class name='AutoCompleteTextView' extends='android.widget.EditText'><implements name='android.widget.Filter.FilterListener'/><constructor name='AutoCompleteTextView' type='android.widget.AutoCompleteTextView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='AutoCompleteTextView' type='android.widget.AutoCompleteTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='AutoCompleteTextView' type='android.widget.AutoCompleteTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='convertSelectionToString' visibility='protected' return='java.lang.CharSequence'><parameter name='selectedItem' type='java.lang.Object'/></method><method name='dismissDropDown'/><method name='enoughToFilter' return='boolean'/><method name='getAdapter' return='android.widget.ListAdapter'/><method name='getFilter' visibility='protected' return='android.widget.Filter'/><method name='getItemClickListener' deprecated='3' return='android.widget.AdapterView.OnItemClickListener'/><method name='getItemSelectedListener' deprecated='3' return='android.widget.AdapterView.OnItemSelectedListener'/><method name='getThreshold' return='int'/><method name='getValidator' return='android.widget.AutoCompleteTextView.Validator'/><method name='isPopupShowing' return='boolean'/><method name='onFilterComplete'><parameter name='count' type='int'/></method><method name='performCompletion'/><method name='performFiltering' visibility='protected'><parameter name='text' type='java.lang.CharSequence'/><parameter name='keyCode' type='int'/></method><method name='performValidation'/><method name='replaceText' visibility='protected'><parameter name='text' type='java.lang.CharSequence'/></method><method name='setAdapter'><parameter name='adapter' type='T'/></method><method name='setCompletionHint'><parameter name='hint' type='java.lang.CharSequence'/></method><method name='setOnItemClickListener'><parameter name='l' type='android.widget.AdapterView.OnItemClickListener'/></method><method name='setOnItemSelectedListener'><parameter name='l' type='android.widget.AdapterView.OnItemSelectedListener'/></method><method name='setThreshold'><parameter name='threshold' type='int'/></method><method name='setValidator'><parameter name='validator' type='android.widget.AutoCompleteTextView.Validator'/></method><method name='showDropDown'/><method api_added='3' name='clearListSelection'/><method api_added='3' name='getDropDownAnchor' return='int'/><method api_added='3' name='getDropDownWidth' return='int'/><method api_added='3' name='getListSelection' return='int'/><method api_added='3' name='getOnItemClickListener' return='android.widget.AdapterView.OnItemClickListener'/><method api_added='3' name='getOnItemSelectedListener' return='android.widget.AdapterView.OnItemSelectedListener'/><method api_added='3' name='isPerformingCompletion' return='boolean'/><method api_added='3' name='setDropDownAnchor'><parameter name='id' type='int'/></method><method api_added='3' name='setDropDownWidth'><parameter name='width' type='int'/></method><method api_added='3' name='setListSelection'><parameter name='position' type='int'/></method><method api_added='4' name='getDropDownHeight' return='int'/><method api_added='4' name='setDropDownHeight'><parameter name='height' type='int'/></method><method api_added='5' name='getDropDownBackground' return='android.graphics.drawable.Drawable'/><method api_added='5' name='getDropDownHorizontalOffset' return='int'/><method api_added='5' name='getDropDownVerticalOffset' return='int'/><method api_added='5' name='setDropDownBackgroundDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method api_added='5' name='setDropDownBackgroundResource'><parameter name='id' type='int'/></method><method api_added='5' name='setDropDownHorizontalOffset'><parameter name='offset' type='int'/></method><method api_added='5' name='setDropDownVerticalOffset'><parameter name='offset' type='int'/></method></class><class name='BaseAdapter' extends='java.lang.Object' abstract='true'><implements name='android.widget.ListAdapter'/><implements name='android.widget.SpinnerAdapter'/><constructor name='BaseAdapter' type='android.widget.BaseAdapter'/><method name='areAllItemsEnabled' return='boolean'/><method name='getDropDownView' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getItemViewType' return='int'><parameter name='position' type='int'/></method><method name='getViewTypeCount' return='int'/><method name='hasStableIds' return='boolean'/><method name='isEmpty' return='boolean'/><method name='isEnabled' return='boolean'><parameter name='position' type='int'/></method><method name='notifyDataSetChanged'/><method name='notifyDataSetInvalidated'/><method name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method></class><class name='BaseExpandableListAdapter' extends='java.lang.Object' abstract='true'><implements name='android.widget.ExpandableListAdapter'/><implements name='android.widget.HeterogeneousExpandableList'/><constructor name='BaseExpandableListAdapter' type='android.widget.BaseExpandableListAdapter'/><method name='areAllItemsEnabled' return='boolean'/><method name='getCombinedChildId' return='long'><parameter name='groupId' type='long'/><parameter name='childId' type='long'/></method><method name='getCombinedGroupId' return='long'><parameter name='groupId' type='long'/></method><method name='isEmpty' return='boolean'/><method name='notifyDataSetChanged'/><method name='notifyDataSetInvalidated'/><method name='onGroupCollapsed'><parameter name='groupPosition' type='int'/></method><method name='onGroupExpanded'><parameter name='groupPosition' type='int'/></method><method name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method api_added='8' name='getChildType' return='int'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method api_added='8' name='getChildTypeCount' return='int'/><method api_added='8' name='getGroupType' return='int'><parameter name='groupPosition' type='int'/></method><method api_added='8' name='getGroupTypeCount' return='int'/></class><class name='Button' extends='android.widget.TextView'><constructor name='Button' type='android.widget.Button'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Button' type='android.widget.Button'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Button' type='android.widget.Button'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor></class><class name='CheckBox' extends='android.widget.CompoundButton'><constructor name='CheckBox' type='android.widget.CheckBox'><parameter name='context' type='android.content.Context'/></constructor><constructor name='CheckBox' type='android.widget.CheckBox'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='CheckBox' type='android.widget.CheckBox'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor></class><class name='CheckedTextView' extends='android.widget.TextView' abstract='true'><implements name='android.widget.Checkable'/><constructor name='CheckedTextView' type='android.widget.CheckedTextView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='CheckedTextView' type='android.widget.CheckedTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='CheckedTextView' type='android.widget.CheckedTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='isChecked' return='boolean'/><method name='setCheckMarkDrawable'><parameter name='resid' type='int'/></method><method name='setCheckMarkDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setChecked'><parameter name='checked' type='boolean'/></method><method name='toggle'/></class><class name='Chronometer' extends='android.widget.TextView'><constructor name='Chronometer' type='android.widget.Chronometer'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Chronometer' type='android.widget.Chronometer'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Chronometer' type='android.widget.Chronometer'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getBase' return='long'/><method name='getFormat' return='java.lang.String'/><method name='setBase'><parameter name='base' type='long'/></method><method name='setFormat'><parameter name='format' type='java.lang.String'/></method><method name='start'/><method name='stop'/><method api_added='3' name='getOnChronometerTickListener' return='android.widget.Chronometer.OnChronometerTickListener'/><method api_added='3' name='setOnChronometerTickListener'><parameter name='listener' type='android.widget.Chronometer.OnChronometerTickListener'/></method></class><class name='CompoundButton' extends='android.widget.Button' abstract='true'><implements name='android.widget.Checkable'/><constructor name='CompoundButton' type='android.widget.CompoundButton'><parameter name='context' type='android.content.Context'/></constructor><constructor name='CompoundButton' type='android.widget.CompoundButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='CompoundButton' type='android.widget.CompoundButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='isChecked' return='boolean'/><method name='setButtonDrawable'><parameter name='resid' type='int'/></method><method name='setButtonDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setChecked'><parameter name='checked' type='boolean'/></method><method name='setOnCheckedChangeListener'><parameter name='listener' type='android.widget.CompoundButton.OnCheckedChangeListener'/></method><method name='toggle'/></class><class name='CursorAdapter' extends='android.widget.BaseAdapter' abstract='true'><implements name='android.widget.Filterable'/><constructor name='CursorAdapter' type='android.widget.CursorAdapter'><parameter name='context' type='android.content.Context'/><parameter name='c' type='android.database.Cursor'/></constructor><constructor name='CursorAdapter' type='android.widget.CursorAdapter'><parameter name='context' type='android.content.Context'/><parameter name='c' type='android.database.Cursor'/><parameter name='autoRequery' type='boolean'/></constructor><method name='bindView' abstract='true'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/></method><method name='changeCursor'><parameter name='cursor' type='android.database.Cursor'/></method><method name='convertToString' return='java.lang.CharSequence'><parameter name='cursor' type='android.database.Cursor'/></method><method name='getCount' final='true' return='int'/><method name='getCursor' return='android.database.Cursor'/><method name='getFilter' return='android.widget.Filter'/><method name='getFilterQueryProvider' return='android.widget.FilterQueryProvider'/><method name='getItem' final='true' return='java.lang.Object'><parameter name='position' type='int'/></method><method name='getItemId' final='true' return='long'><parameter name='position' type='int'/></method><method name='getView' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='init' visibility='protected'><parameter name='context' type='android.content.Context'/><parameter name='c' type='android.database.Cursor'/><parameter name='autoRequery' type='boolean'/></method><method name='newDropDownView' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='newView' abstract='true' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='runQueryOnBackgroundThread' return='android.database.Cursor'><parameter name='constraint' type='java.lang.CharSequence'/></method><method name='setFilterQueryProvider'><parameter name='filterQueryProvider' type='android.widget.FilterQueryProvider'/></method><method api_added='3' name='onContentChanged' visibility='protected'/></class><class name='CursorTreeAdapter' extends='android.widget.BaseExpandableListAdapter' abstract='true'><implements name='android.widget.Filterable'/><constructor name='CursorTreeAdapter' type='android.widget.CursorTreeAdapter'><parameter name='cursor' type='android.database.Cursor'/><parameter name='context' type='android.content.Context'/></constructor><constructor name='CursorTreeAdapter' type='android.widget.CursorTreeAdapter'><parameter name='cursor' type='android.database.Cursor'/><parameter name='context' type='android.content.Context'/><parameter name='autoRequery' type='boolean'/></constructor><method name='bindChildView' abstract='true' visibility='protected'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isLastChild' type='boolean'/></method><method name='bindGroupView' abstract='true' visibility='protected'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isExpanded' type='boolean'/></method><method name='changeCursor'><parameter name='cursor' type='android.database.Cursor'/></method><method name='convertToString' return='java.lang.String'><parameter name='cursor' type='android.database.Cursor'/></method><method name='getChild' return='android.database.Cursor'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildId' return='long'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildView' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='isLastChild' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getChildrenCount' return='int'><parameter name='groupPosition' type='int'/></method><method name='getChildrenCursor' abstract='true' visibility='protected' return='android.database.Cursor'><parameter name='groupCursor' type='android.database.Cursor'/></method><method name='getCursor' return='android.database.Cursor'/><method name='getFilter' return='android.widget.Filter'/><method name='getFilterQueryProvider' return='android.widget.FilterQueryProvider'/><method name='getGroup' return='android.database.Cursor'><parameter name='groupPosition' type='int'/></method><method name='getGroupCount' return='int'/><method name='getGroupId' return='long'><parameter name='groupPosition' type='int'/></method><method name='getGroupView' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='isExpanded' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='hasStableIds' return='boolean'/><method name='isChildSelectable' return='boolean'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='newChildView' abstract='true' visibility='protected' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isLastChild' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='newGroupView' abstract='true' visibility='protected' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isExpanded' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='notifyDataSetChanged'><parameter name='releaseCursors' type='boolean'/></method><method name='runQueryOnBackgroundThread' return='android.database.Cursor'><parameter name='constraint' type='java.lang.CharSequence'/></method><method name='setChildrenCursor'><parameter name='groupPosition' type='int'/><parameter name='childrenCursor' type='android.database.Cursor'/></method><method name='setFilterQueryProvider'><parameter name='filterQueryProvider' type='android.widget.FilterQueryProvider'/></method><method name='setGroupCursor'><parameter name='cursor' type='android.database.Cursor'/></method></class><class name='DatePicker' extends='android.widget.FrameLayout'><constructor name='DatePicker' type='android.widget.DatePicker'><parameter name='context' type='android.content.Context'/></constructor><constructor name='DatePicker' type='android.widget.DatePicker'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='DatePicker' type='android.widget.DatePicker'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getDayOfMonth' return='int'/><method name='getMonth' return='int'/><method name='getYear' return='int'/><method name='init'><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/><parameter name='onDateChangedListener' type='android.widget.DatePicker.OnDateChangedListener'/></method><method name='updateDate'><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></method></class><class name='DialerFilter' extends='android.widget.RelativeLayout'><constructor name='DialerFilter' type='android.widget.DialerFilter'><parameter name='context' type='android.content.Context'/></constructor><constructor name='DialerFilter' type='android.widget.DialerFilter'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><field name='DIGITS_AND_LETTERS' final='true' static='true' value='1' type='int'/><field name='DIGITS_AND_LETTERS_NO_DIGITS' final='true' static='true' value='2' type='int'/><field name='DIGITS_AND_LETTERS_NO_LETTERS' final='true' static='true' value='3' type='int'/><field name='DIGITS_ONLY' final='true' static='true' value='4' type='int'/><field name='LETTERS_ONLY' final='true' static='true' value='5' type='int'/><method name='append'><parameter name='text' type='java.lang.String'/></method><method name='clearText'/><method name='getDigits' return='java.lang.CharSequence'/><method name='getFilterText' return='java.lang.CharSequence'/><method name='getLetters' return='java.lang.CharSequence'/><method name='getMode' return='int'/><method name='isQwertyKeyboard' return='boolean'/><method name='onModeChange' visibility='protected'><parameter name='oldMode' type='int'/><parameter name='newMode' type='int'/></method><method name='removeFilterWatcher'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='setDigitsWatcher'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='setFilterWatcher'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='setLettersWatcher'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='setMode'><parameter name='newMode' type='int'/></method></class><class name='DigitalClock' extends='android.widget.TextView'><constructor name='DigitalClock' type='android.widget.DigitalClock'><parameter name='context' type='android.content.Context'/></constructor><constructor name='DigitalClock' type='android.widget.DigitalClock'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor></class><class name='EditText' extends='android.widget.TextView'><constructor name='EditText' type='android.widget.EditText'><parameter name='context' type='android.content.Context'/></constructor><constructor name='EditText' type='android.widget.EditText'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='EditText' type='android.widget.EditText'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='extendSelection'><parameter name='index' type='int'/></method><method name='selectAll'/><method name='setSelection'><parameter name='start' type='int'/><parameter name='stop' type='int'/></method><method name='setSelection'><parameter name='index' type='int'/></method></class><class name='ExpandableListView' extends='android.widget.ListView'><constructor name='ExpandableListView' type='android.widget.ExpandableListView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ExpandableListView' type='android.widget.ExpandableListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ExpandableListView' type='android.widget.ExpandableListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='CHILD_INDICATOR_INHERIT' final='true' static='true' value='-1' type='int'/><field name='PACKED_POSITION_TYPE_CHILD' final='true' static='true' value='1' type='int'/><field name='PACKED_POSITION_TYPE_GROUP' final='true' static='true' value='0' type='int'/><field name='PACKED_POSITION_TYPE_NULL' final='true' static='true' value='2' type='int'/><field name='PACKED_POSITION_VALUE_NULL' final='true' static='true' value='4294967295L' type='long'/><method name='collapseGroup' return='boolean'><parameter name='groupPos' type='int'/></method><method name='expandGroup' return='boolean'><parameter name='groupPos' type='int'/></method><method name='getExpandableListAdapter' return='android.widget.ExpandableListAdapter'/><method name='getExpandableListPosition' return='long'><parameter name='flatListPosition' type='int'/></method><method name='getFlatListPosition' return='int'><parameter name='packedPosition' type='long'/></method><method name='getPackedPositionChild' static='true' return='int'><parameter name='packedPosition' type='long'/></method><method name='getPackedPositionForChild' static='true' return='long'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getPackedPositionForGroup' static='true' return='long'><parameter name='groupPosition' type='int'/></method><method name='getPackedPositionGroup' static='true' return='int'><parameter name='packedPosition' type='long'/></method><method name='getPackedPositionType' static='true' return='int'><parameter name='packedPosition' type='long'/></method><method name='getSelectedId' return='long'/><method name='getSelectedPosition' return='long'/><method name='isGroupExpanded' return='boolean'><parameter name='groupPosition' type='int'/></method><method name='setAdapter'><parameter name='adapter' type='android.widget.ExpandableListAdapter'/></method><method name='setChildDivider'><parameter name='childDivider' type='android.graphics.drawable.Drawable'/></method><method name='setChildIndicator'><parameter name='childIndicator' type='android.graphics.drawable.Drawable'/></method><method name='setChildIndicatorBounds'><parameter name='left' type='int'/><parameter name='right' type='int'/></method><method name='setGroupIndicator'><parameter name='groupIndicator' type='android.graphics.drawable.Drawable'/></method><method name='setIndicatorBounds'><parameter name='left' type='int'/><parameter name='right' type='int'/></method><method name='setOnChildClickListener'><parameter name='onChildClickListener' type='android.widget.ExpandableListView.OnChildClickListener'/></method><method name='setOnGroupClickListener'><parameter name='onGroupClickListener' type='android.widget.ExpandableListView.OnGroupClickListener'/></method><method name='setOnGroupCollapseListener'><parameter name='onGroupCollapseListener' type='android.widget.ExpandableListView.OnGroupCollapseListener'/></method><method name='setOnGroupExpandListener'><parameter name='onGroupExpandListener' type='android.widget.ExpandableListView.OnGroupExpandListener'/></method><method name='setSelectedChild' return='boolean'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='shouldExpandGroup' type='boolean'/></method><method name='setSelectedGroup'><parameter name='groupPosition' type='int'/></method></class><class name='ExpandableListView.ExpandableListContextMenuInfo' extends='java.lang.Object' static='true'><implements name='android.view.ContextMenu.ContextMenuInfo'/><constructor name='ExpandableListView.ExpandableListContextMenuInfo' type='android.widget.ExpandableListView.ExpandableListContextMenuInfo'><parameter name='targetView' type='android.view.View'/><parameter name='packedPosition' type='long'/><parameter name='id' type='long'/></constructor><field name='id' type='long'/><field name='packedPosition' type='long'/><field name='targetView' type='android.view.View'/></class><class name='Filter' extends='java.lang.Object' abstract='true'><constructor name='Filter' type='android.widget.Filter'/><method name='convertResultToString' return='java.lang.CharSequence'><parameter name='resultValue' type='java.lang.Object'/></method><method name='filter' final='true'><parameter name='constraint' type='java.lang.CharSequence'/></method><method name='filter' final='true'><parameter name='constraint' type='java.lang.CharSequence'/><parameter name='listener' type='android.widget.Filter.FilterListener'/></method><method name='performFiltering' abstract='true' visibility='protected' return='android.widget.Filter.FilterResults'><parameter name='constraint' type='java.lang.CharSequence'/></method><method name='publishResults' abstract='true' visibility='protected'><parameter name='constraint' type='java.lang.CharSequence'/><parameter name='results' type='android.widget.Filter.FilterResults'/></method></class><class name='Filter.FilterResults' extends='java.lang.Object' static='true' visibility='protected'><constructor name='Filter.FilterResults' type='android.widget.Filter.FilterResults'/><field name='count' type='int'/><field name='values' type='java.lang.Object'/></class><class name='FrameLayout' extends='android.view.ViewGroup'><constructor name='FrameLayout' type='android.widget.FrameLayout'><parameter name='context' type='android.content.Context'/></constructor><constructor name='FrameLayout' type='android.widget.FrameLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='FrameLayout' type='android.widget.FrameLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getConsiderGoneChildrenWhenMeasuring' return='boolean'/><method name='getForeground' return='android.graphics.drawable.Drawable'/><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method name='setForeground'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setForegroundGravity'><parameter name='foregroundGravity' type='int'/></method><method name='setMeasureAllChildren'><parameter name='measureAll' type='boolean'/></method></class><class name='FrameLayout.LayoutParams' extends='android.view.ViewGroup.MarginLayoutParams' static='true'><constructor name='FrameLayout.LayoutParams' type='android.widget.FrameLayout.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='FrameLayout.LayoutParams' type='android.widget.FrameLayout.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='FrameLayout.LayoutParams' type='android.widget.FrameLayout.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='gravity' type='int'/></constructor><constructor name='FrameLayout.LayoutParams' type='android.widget.FrameLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='FrameLayout.LayoutParams' type='android.widget.FrameLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor><field name='gravity' type='int'/></class><class name='Gallery' extends='android.widget.AbsSpinner'><implements name='android.view.GestureDetector.OnGestureListener'/><constructor name='Gallery' type='android.widget.Gallery'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Gallery' type='android.widget.Gallery'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Gallery' type='android.widget.Gallery'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='onDown' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onFling' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='velocityX' type='float'/><parameter name='velocityY' type='float'/></method><method name='onLongPress'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onScroll' return='boolean'><parameter name='e1' type='android.view.MotionEvent'/><parameter name='e2' type='android.view.MotionEvent'/><parameter name='distanceX' type='float'/><parameter name='distanceY' type='float'/></method><method name='onShowPress'><parameter name='e' type='android.view.MotionEvent'/></method><method name='onSingleTapUp' return='boolean'><parameter name='e' type='android.view.MotionEvent'/></method><method name='setAnimationDuration'><parameter name='animationDurationMillis' type='int'/></method><method name='setCallbackDuringFling'><parameter name='shouldCallback' type='boolean'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setSpacing'><parameter name='spacing' type='int'/></method><method name='setUnselectedAlpha'><parameter name='unselectedAlpha' type='float'/></method></class><class name='Gallery.LayoutParams' extends='android.view.ViewGroup.LayoutParams' static='true'><constructor name='Gallery.LayoutParams' type='android.widget.Gallery.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Gallery.LayoutParams' type='android.widget.Gallery.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='Gallery.LayoutParams' type='android.widget.Gallery.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor></class><class name='GridView' extends='android.widget.AbsListView'><constructor name='GridView' type='android.widget.GridView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='GridView' type='android.widget.GridView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='GridView' type='android.widget.GridView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='AUTO_FIT' final='true' static='true' value='-1' type='int'/><field name='NO_STRETCH' final='true' static='true' value='0' type='int'/><field name='STRETCH_COLUMN_WIDTH' final='true' static='true' value='2' type='int'/><field name='STRETCH_SPACING' final='true' static='true' value='1' type='int'/><field api_added='3' name='STRETCH_SPACING_UNIFORM' final='true' static='true' value='3' type='int'/><method name='getAdapter' return='android.widget.ListAdapter'/><method name='getStretchMode' return='int'/><method name='setAdapter'><parameter name='adapter' type='android.widget.ListAdapter'/></method><method name='setColumnWidth'><parameter name='columnWidth' type='int'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setHorizontalSpacing'><parameter name='horizontalSpacing' type='int'/></method><method name='setNumColumns'><parameter name='numColumns' type='int'/></method><method name='setSelection'><parameter name='position' type='int'/></method><method name='setStretchMode'><parameter name='stretchMode' type='int'/></method><method name='setVerticalSpacing'><parameter name='verticalSpacing' type='int'/></method></class><class name='HeaderViewListAdapter' extends='java.lang.Object'><implements name='android.widget.Filterable'/><implements name='android.widget.WrapperListAdapter'/><constructor name='HeaderViewListAdapter' type='android.widget.HeaderViewListAdapter'><parameter name='headerViewInfos' type='java.util.ArrayList&lt;android.widget.ListView.FixedViewInfo&gt;'/><parameter name='footerViewInfos' type='java.util.ArrayList&lt;android.widget.ListView.FixedViewInfo&gt;'/><parameter name='adapter' type='android.widget.ListAdapter'/></constructor><method name='areAllItemsEnabled' return='boolean'/><method name='getCount' return='int'/><method name='getFilter' return='android.widget.Filter'/><method name='getFootersCount' return='int'/><method name='getHeadersCount' return='int'/><method name='getItem' return='java.lang.Object'><parameter name='position' type='int'/></method><method name='getItemId' return='long'><parameter name='position' type='int'/></method><method name='getItemViewType' return='int'><parameter name='position' type='int'/></method><method name='getView' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getViewTypeCount' return='int'/><method name='getWrappedAdapter' return='android.widget.ListAdapter'/><method name='hasStableIds' return='boolean'/><method name='isEmpty' return='boolean'/><method name='isEnabled' return='boolean'><parameter name='position' type='int'/></method><method name='registerDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='removeFooter' return='boolean'><parameter name='v' type='android.view.View'/></method><method name='removeHeader' return='boolean'><parameter name='v' type='android.view.View'/></method><method name='unregisterDataSetObserver'><parameter name='observer' type='android.database.DataSetObserver'/></method></class><class name='ImageButton' extends='android.widget.ImageView'><constructor name='ImageButton' type='android.widget.ImageButton'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ImageButton' type='android.widget.ImageButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ImageButton' type='android.widget.ImageButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor></class><class name='ImageSwitcher' extends='android.widget.ViewSwitcher'><constructor name='ImageSwitcher' type='android.widget.ImageSwitcher'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ImageSwitcher' type='android.widget.ImageSwitcher'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='setImageDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setImageResource'><parameter name='resid' type='int'/></method><method name='setImageURI'><parameter name='uri' type='android.net.Uri'/></method></class><class name='ImageView' extends='android.view.View'><constructor name='ImageView' type='android.widget.ImageView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ImageView' type='android.widget.ImageView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ImageView' type='android.widget.ImageView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='clearColorFilter' final='true'/><method name='getDrawable' return='android.graphics.drawable.Drawable'/><method name='getImageMatrix' return='android.graphics.Matrix'/><method name='getScaleType' return='android.widget.ImageView.ScaleType'/><method name='onCreateDrawableState' return='int[]'><parameter name='extraSpace' type='int'/></method><method name='setAdjustViewBounds'><parameter name='adjustViewBounds' type='boolean'/></method><method name='setAlpha'><parameter name='alpha' type='int'/></method><method name='setColorFilter' final='true'><parameter name='color' type='int'/><parameter name='mode' type='android.graphics.PorterDuff.Mode'/></method><method name='setColorFilter'><parameter name='cf' type='android.graphics.ColorFilter'/></method><method name='setFrame' visibility='protected' return='boolean'><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='setImageBitmap'><parameter name='bm' type='android.graphics.Bitmap'/></method><method name='setImageDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method name='setImageLevel'><parameter name='level' type='int'/></method><method name='setImageMatrix'><parameter name='matrix' type='android.graphics.Matrix'/></method><method name='setImageResource'><parameter name='resId' type='int'/></method><method name='setImageState'><parameter name='state' type='int[]'/><parameter name='merge' type='boolean'/></method><method name='setImageURI'><parameter name='uri' type='android.net.Uri'/></method><method name='setMaxHeight'><parameter name='maxHeight' type='int'/></method><method name='setMaxWidth'><parameter name='maxWidth' type='int'/></method><method name='setScaleType'><parameter name='scaleType' type='android.widget.ImageView.ScaleType'/></method><method api_added='8' name='setColorFilter' final='true'><parameter name='color' type='int'/></method></class><class name='ImageView.ScaleType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.widget.ImageView.ScaleType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.widget.ImageView.ScaleType[]'/></class><class name='LinearLayout' extends='android.view.ViewGroup'><constructor name='LinearLayout' type='android.widget.LinearLayout'><parameter name='context' type='android.content.Context'/></constructor><constructor name='LinearLayout' type='android.widget.LinearLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><field name='HORIZONTAL' final='true' static='true' value='0' type='int'/><field name='VERTICAL' final='true' static='true' value='1' type='int'/><method name='getBaselineAlignedChildIndex' return='int'/><method name='getOrientation' return='int'/><method name='getWeightSum' return='float'/><method name='isBaselineAligned' return='boolean'/><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='setBaselineAligned'><parameter name='baselineAligned' type='boolean'/></method><method name='setBaselineAlignedChildIndex'><parameter name='i' type='int'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setHorizontalGravity'><parameter name='horizontalGravity' type='int'/></method><method name='setOrientation'><parameter name='orientation' type='int'/></method><method name='setVerticalGravity'><parameter name='verticalGravity' type='int'/></method><method name='setWeightSum'><parameter name='weightSum' type='float'/></method></class><class name='LinearLayout.LayoutParams' extends='android.view.ViewGroup.MarginLayoutParams' static='true'><constructor name='LinearLayout.LayoutParams' type='android.widget.LinearLayout.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='LinearLayout.LayoutParams' type='android.widget.LinearLayout.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='LinearLayout.LayoutParams' type='android.widget.LinearLayout.LayoutParams'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='weight' type='float'/></constructor><constructor name='LinearLayout.LayoutParams' type='android.widget.LinearLayout.LayoutParams'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='LinearLayout.LayoutParams' type='android.widget.LinearLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor><field name='gravity' type='int'/><field name='weight' type='float'/><method name='debug' return='java.lang.String'><parameter name='output' type='java.lang.String'/></method></class><class name='ListView' extends='android.widget.AbsListView'><constructor name='ListView' type='android.widget.ListView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ListView' type='android.widget.ListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ListView' type='android.widget.ListView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='CHOICE_MODE_MULTIPLE' final='true' static='true' value='2' type='int'/><field name='CHOICE_MODE_NONE' final='true' static='true' value='0' type='int'/><field name='CHOICE_MODE_SINGLE' final='true' static='true' value='1' type='int'/><method name='addFooterView'><parameter name='v' type='android.view.View'/><parameter name='data' type='java.lang.Object'/><parameter name='isSelectable' type='boolean'/></method><method name='addFooterView'><parameter name='v' type='android.view.View'/></method><method name='addHeaderView'><parameter name='v' type='android.view.View'/><parameter name='data' type='java.lang.Object'/><parameter name='isSelectable' type='boolean'/></method><method name='addHeaderView'><parameter name='v' type='android.view.View'/></method><method name='clearChoices'/><method name='findViewTraversal' visibility='protected' return='android.view.View'><parameter name='id' type='int'/></method><method name='findViewWithTagTraversal' visibility='protected' return='android.view.View'><parameter name='tag' type='java.lang.Object'/></method><method name='getAdapter' return='android.widget.ListAdapter'/><method name='getCheckedItemPosition' return='int'/><method name='getCheckedItemPositions' return='android.util.SparseBooleanArray'/><method name='getChoiceMode' return='int'/><method name='getDivider' return='android.graphics.drawable.Drawable'/><method name='getDividerHeight' return='int'/><method name='getFooterViewsCount' return='int'/><method name='getHeaderViewsCount' return='int'/><method name='getItemsCanFocus' return='boolean'/><method name='getMaxScrollAmount' return='int'/><method name='isItemChecked' return='boolean'><parameter name='position' type='int'/></method><method name='removeFooterView' return='boolean'><parameter name='v' type='android.view.View'/></method><method name='removeHeaderView' return='boolean'><parameter name='v' type='android.view.View'/></method><method name='setAdapter'><parameter name='adapter' type='android.widget.ListAdapter'/></method><method name='setChoiceMode'><parameter name='choiceMode' type='int'/></method><method name='setDivider'><parameter name='divider' type='android.graphics.drawable.Drawable'/></method><method name='setDividerHeight'><parameter name='height' type='int'/></method><method name='setItemChecked'><parameter name='position' type='int'/><parameter name='value' type='boolean'/></method><method name='setItemsCanFocus'><parameter name='itemsCanFocus' type='boolean'/></method><method name='setSelection'><parameter name='position' type='int'/></method><method name='setSelectionAfterHeaderView'/><method name='setSelectionFromTop'><parameter name='position' type='int'/><parameter name='y' type='int'/></method><method api_added='3' name='setFooterDividersEnabled'><parameter name='footerDividersEnabled' type='boolean'/></method><method api_added='3' name='setHeaderDividersEnabled'><parameter name='headerDividersEnabled' type='boolean'/></method><method api_added='4' name='getCheckItemIds' deprecated='8' return='long[]'/><method api_added='8' name='getCheckedItemIds' return='long[]'/></class><class name='ListView.FixedViewInfo' extends='java.lang.Object'><constructor name='ListView.FixedViewInfo' type='android.widget.ListView.FixedViewInfo'/><field name='data' type='java.lang.Object'/><field name='isSelectable' type='boolean'/><field name='view' type='android.view.View'/></class><class name='MediaController' extends='android.widget.FrameLayout'><constructor name='MediaController' type='android.widget.MediaController'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='MediaController' type='android.widget.MediaController'><parameter name='context' type='android.content.Context'/><parameter name='useFastForward' type='boolean'/></constructor><constructor name='MediaController' type='android.widget.MediaController'><parameter name='context' type='android.content.Context'/></constructor><method name='hide'/><method name='isShowing' return='boolean'/><method name='onFinishInflate'/><method name='setAnchorView'><parameter name='view' type='android.view.View'/></method><method name='setMediaPlayer'><parameter name='player' type='android.widget.MediaController.MediaPlayerControl'/></method><method name='setPrevNextListeners'><parameter name='next' type='android.view.View.OnClickListener'/><parameter name='prev' type='android.view.View.OnClickListener'/></method><method name='show'/><method name='show'><parameter name='timeout' type='int'/></method></class><class name='MultiAutoCompleteTextView' extends='android.widget.AutoCompleteTextView'><constructor name='MultiAutoCompleteTextView' type='android.widget.MultiAutoCompleteTextView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='MultiAutoCompleteTextView' type='android.widget.MultiAutoCompleteTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='MultiAutoCompleteTextView' type='android.widget.MultiAutoCompleteTextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='performFiltering' visibility='protected'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='keyCode' type='int'/></method><method name='setTokenizer'><parameter name='t' type='android.widget.MultiAutoCompleteTextView.Tokenizer'/></method></class><class name='MultiAutoCompleteTextView.CommaTokenizer' extends='java.lang.Object' static='true'><implements name='android.widget.MultiAutoCompleteTextView.Tokenizer'/><constructor name='MultiAutoCompleteTextView.CommaTokenizer' type='android.widget.MultiAutoCompleteTextView.CommaTokenizer'/><method name='findTokenEnd' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='findTokenStart' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='terminateToken' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/></method></class><class name='PopupWindow' extends='java.lang.Object'><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='context' type='android.content.Context'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'/><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='contentView' type='android.view.View'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='contentView' type='android.view.View'/><parameter name='width' type='int'/><parameter name='height' type='int'/></constructor><constructor name='PopupWindow' type='android.widget.PopupWindow'><parameter name='contentView' type='android.view.View'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='focusable' type='boolean'/></constructor><field api_added='3' name='INPUT_METHOD_FROM_FOCUSABLE' final='true' static='true' value='0' type='int'/><field api_added='3' name='INPUT_METHOD_NEEDED' final='true' static='true' value='1' type='int'/><field api_added='3' name='INPUT_METHOD_NOT_NEEDED' final='true' static='true' value='2' type='int'/><method name='dismiss'/><method name='getAnimationStyle' return='int'/><method name='getBackground' return='android.graphics.drawable.Drawable'/><method name='getContentView' return='android.view.View'/><method name='getHeight' return='int'/><method name='getMaxAvailableHeight' return='int'><parameter name='anchor' type='android.view.View'/></method><method name='getWidth' return='int'/><method name='isFocusable' return='boolean'/><method name='isShowing' return='boolean'/><method name='setAnimationStyle'><parameter name='animationStyle' type='int'/></method><method name='setBackgroundDrawable'><parameter name='background' type='android.graphics.drawable.Drawable'/></method><method name='setContentView'><parameter name='contentView' type='android.view.View'/></method><method name='setFocusable'><parameter name='focusable' type='boolean'/></method><method name='setHeight'><parameter name='height' type='int'/></method><method name='setIgnoreCheekPress'/><method name='setOnDismissListener'><parameter name='onDismissListener' type='android.widget.PopupWindow.OnDismissListener'/></method><method name='setWidth'><parameter name='width' type='int'/></method><method name='showAsDropDown'><parameter name='anchor' type='android.view.View'/></method><method name='showAsDropDown'><parameter name='anchor' type='android.view.View'/><parameter name='xoff' type='int'/><parameter name='yoff' type='int'/></method><method name='showAtLocation'><parameter name='parent' type='android.view.View'/><parameter name='gravity' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method name='update'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='update'><parameter name='anchor' type='android.view.View'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='update'><parameter name='anchor' type='android.view.View'/><parameter name='xoff' type='int'/><parameter name='yoff' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='3' name='getInputMethodMode' return='int'/><method api_added='3' name='getMaxAvailableHeight' return='int'><parameter name='anchor' type='android.view.View'/><parameter name='yOffset' type='int'/></method><method api_added='3' name='isAboveAnchor' return='boolean'/><method api_added='3' name='isClippingEnabled' return='boolean'/><method api_added='3' name='isOutsideTouchable' return='boolean'/><method api_added='3' name='isTouchable' return='boolean'/><method api_added='3' name='setClippingEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='setInputMethodMode'><parameter name='mode' type='int'/></method><method api_added='3' name='setOutsideTouchable'><parameter name='touchable' type='boolean'/></method><method api_added='3' name='setTouchInterceptor'><parameter name='l' type='android.view.View.OnTouchListener'/></method><method api_added='3' name='setTouchable'><parameter name='touchable' type='boolean'/></method><method api_added='3' name='setWindowLayoutMode'><parameter name='widthSpec' type='int'/><parameter name='heightSpec' type='int'/></method><method api_added='3' name='update'/><method api_added='3' name='update'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='force' type='boolean'/></method><method api_added='4' name='getSoftInputMode' return='int'/><method api_added='4' name='setSoftInputMode'><parameter name='mode' type='int'/></method><method api_added='4' name='update'><parameter name='width' type='int'/><parameter name='height' type='int'/></method></class><class name='ProgressBar' extends='android.view.View'><constructor name='ProgressBar' type='android.widget.ProgressBar'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ProgressBar' type='android.widget.ProgressBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ProgressBar' type='android.widget.ProgressBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getIndeterminateDrawable' return='android.graphics.drawable.Drawable'/><method name='getInterpolator' return='android.view.animation.Interpolator'/><method name='getMax' synchronized='true' return='int'/><method name='getProgress' synchronized='true' return='int'/><method name='getProgressDrawable' return='android.graphics.drawable.Drawable'/><method name='getSecondaryProgress' synchronized='true' return='int'/><method name='incrementProgressBy' final='true' synchronized='true'><parameter name='diff' type='int'/></method><method name='incrementSecondaryProgressBy' final='true' synchronized='true'><parameter name='diff' type='int'/></method><method name='isIndeterminate' synchronized='true' return='boolean'/><method name='setIndeterminate' synchronized='true'><parameter name='indeterminate' type='boolean'/></method><method name='setIndeterminateDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setInterpolator'><parameter name='context' type='android.content.Context'/><parameter name='resID' type='int'/></method><method name='setInterpolator'><parameter name='interpolator' type='android.view.animation.Interpolator'/></method><method name='setMax' synchronized='true'><parameter name='max' type='int'/></method><method name='setProgress' synchronized='true'><parameter name='progress' type='int'/></method><method name='setProgressDrawable'><parameter name='d' type='android.graphics.drawable.Drawable'/></method><method name='setSecondaryProgress' synchronized='true'><parameter name='secondaryProgress' type='int'/></method><method api_added='3' name='onRestoreInstanceState'><parameter name='state' type='android.os.Parcelable'/></method><method api_added='3' name='onSaveInstanceState' return='android.os.Parcelable'/></class><class name='RadioButton' extends='android.widget.CompoundButton'><constructor name='RadioButton' type='android.widget.RadioButton'><parameter name='context' type='android.content.Context'/></constructor><constructor name='RadioButton' type='android.widget.RadioButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RadioButton' type='android.widget.RadioButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor></class><class name='RadioGroup' extends='android.widget.LinearLayout'><constructor name='RadioGroup' type='android.widget.RadioGroup'><parameter name='context' type='android.content.Context'/></constructor><constructor name='RadioGroup' type='android.widget.RadioGroup'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='check'><parameter name='id' type='int'/></method><method name='clearCheck'/><method name='getCheckedRadioButtonId' return='int'/><method name='setOnCheckedChangeListener'><parameter name='listener' type='android.widget.RadioGroup.OnCheckedChangeListener'/></method></class><class name='RadioGroup.LayoutParams' extends='android.widget.LinearLayout.LayoutParams' static='true'><constructor name='RadioGroup.LayoutParams' type='android.widget.RadioGroup.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RadioGroup.LayoutParams' type='android.widget.RadioGroup.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='RadioGroup.LayoutParams' type='android.widget.RadioGroup.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='initWeight' type='float'/></constructor><constructor name='RadioGroup.LayoutParams' type='android.widget.RadioGroup.LayoutParams'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='RadioGroup.LayoutParams' type='android.widget.RadioGroup.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor></class><class name='RatingBar' extends='android.widget.AbsSeekBar'><constructor name='RatingBar' type='android.widget.RatingBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='RatingBar' type='android.widget.RatingBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RatingBar' type='android.widget.RatingBar'><parameter name='context' type='android.content.Context'/></constructor><method name='getNumStars' return='int'/><method name='getOnRatingBarChangeListener' return='android.widget.RatingBar.OnRatingBarChangeListener'/><method name='getRating' return='float'/><method name='getStepSize' return='float'/><method name='isIndicator' return='boolean'/><method name='setIsIndicator'><parameter name='isIndicator' type='boolean'/></method><method name='setNumStars'><parameter name='numStars' type='int'/></method><method name='setOnRatingBarChangeListener'><parameter name='listener' type='android.widget.RatingBar.OnRatingBarChangeListener'/></method><method name='setRating'><parameter name='rating' type='float'/></method><method name='setStepSize'><parameter name='stepSize' type='float'/></method></class><class name='RelativeLayout' extends='android.view.ViewGroup'><constructor name='RelativeLayout' type='android.widget.RelativeLayout'><parameter name='context' type='android.content.Context'/></constructor><constructor name='RelativeLayout' type='android.widget.RelativeLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RelativeLayout' type='android.widget.RelativeLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field name='ABOVE' final='true' static='true' value='2' type='int'/><field name='ALIGN_BASELINE' final='true' static='true' value='4' type='int'/><field name='ALIGN_BOTTOM' final='true' static='true' value='8' type='int'/><field name='ALIGN_LEFT' final='true' static='true' value='5' type='int'/><field name='ALIGN_PARENT_BOTTOM' final='true' static='true' value='12' type='int'/><field name='ALIGN_PARENT_LEFT' final='true' static='true' value='9' type='int'/><field name='ALIGN_PARENT_RIGHT' final='true' static='true' value='11' type='int'/><field name='ALIGN_PARENT_TOP' final='true' static='true' value='10' type='int'/><field name='ALIGN_RIGHT' final='true' static='true' value='7' type='int'/><field name='ALIGN_TOP' final='true' static='true' value='6' type='int'/><field name='BELOW' final='true' static='true' value='3' type='int'/><field name='CENTER_HORIZONTAL' final='true' static='true' value='14' type='int'/><field name='CENTER_IN_PARENT' final='true' static='true' value='13' type='int'/><field name='CENTER_VERTICAL' final='true' static='true' value='15' type='int'/><field name='LEFT_OF' final='true' static='true' value='0' type='int'/><field name='RIGHT_OF' final='true' static='true' value='1' type='int'/><field name='TRUE' final='true' static='true' value='-1' type='int'/><method name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setHorizontalGravity'><parameter name='horizontalGravity' type='int'/></method><method name='setIgnoreGravity'><parameter name='viewId' type='int'/></method><method name='setVerticalGravity'><parameter name='verticalGravity' type='int'/></method></class><class name='RelativeLayout.LayoutParams' extends='android.view.ViewGroup.MarginLayoutParams' static='true'><constructor name='RelativeLayout.LayoutParams' type='android.widget.RelativeLayout.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='RelativeLayout.LayoutParams' type='android.widget.RelativeLayout.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='RelativeLayout.LayoutParams' type='android.widget.RelativeLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='RelativeLayout.LayoutParams' type='android.widget.RelativeLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor><field name='alignWithParent' type='boolean'/><method name='addRule'><parameter name='verb' type='int'/></method><method name='addRule'><parameter name='verb' type='int'/><parameter name='anchor' type='int'/></method><method name='debug' return='java.lang.String'><parameter name='output' type='java.lang.String'/></method><method name='getRules' return='int[]'/></class><class name='RemoteViews' extends='java.lang.Object'><implements name='android.view.LayoutInflater.Filter'/><implements name='android.os.Parcelable'/><constructor name='RemoteViews' type='android.widget.RemoteViews'><parameter name='packageName' type='java.lang.String'/><parameter name='layoutId' type='int'/></constructor><constructor name='RemoteViews' type='android.widget.RemoteViews'><parameter name='parcel' type='android.os.Parcel'/></constructor><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method name='apply' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='describeContents' return='int'/><method name='getLayoutId' return='int'/><method name='getPackage' return='java.lang.String'/><method name='onLoadClass' return='boolean'><parameter name='clazz' type='java.lang.Class'/></method><method name='reapply'><parameter name='context' type='android.content.Context'/><parameter name='v' type='android.view.View'/></method><method name='setChronometer' api_removed='4'><parameter name='viewId' type='int'/><parameter name='base' type='long'/><parameter name='format' type='java.lang.String'/><parameter name='running' type='boolean'/><parameter name='started' type='boolean'/></method><method name='setImageViewResource'><parameter name='viewId' type='int'/><parameter name='srcId' type='int'/></method><method name='setImageViewUri'><parameter name='viewId' type='int'/><parameter name='uri' type='android.net.Uri'/></method><method name='setProgressBar'><parameter name='viewId' type='int'/><parameter name='max' type='int'/><parameter name='progress' type='int'/><parameter name='indeterminate' type='boolean'/></method><method name='setTextViewText'><parameter name='viewId' type='int'/><parameter name='text' type='java.lang.CharSequence'/></method><method name='setViewVisibility'><parameter name='viewId' type='int'/><parameter name='visibility' type='int'/></method><method name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='3' name='setBitmap'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='android.graphics.Bitmap'/></method><method api_added='3' name='setBoolean'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method api_added='3' name='setByte'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='byte'/></method><method api_added='3' name='setChar'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='char'/></method><method api_added='3' name='setCharSequence'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='java.lang.CharSequence'/></method><method api_added='3' name='setDouble'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='double'/></method><method api_added='3' name='setFloat'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='float'/></method><method api_added='3' name='setImageViewBitmap'><parameter name='viewId' type='int'/><parameter name='bitmap' type='android.graphics.Bitmap'/></method><method api_added='3' name='setInt'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='int'/></method><method api_added='3' name='setLong'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='long'/></method><method api_added='3' name='setOnClickPendingIntent'><parameter name='viewId' type='int'/><parameter name='pendingIntent' type='android.app.PendingIntent'/></method><method api_added='3' name='setShort'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='short'/></method><method api_added='3' name='setString'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method api_added='3' name='setTextColor'><parameter name='viewId' type='int'/><parameter name='color' type='int'/></method><method api_added='3' name='setUri'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='android.net.Uri'/></method><method api_added='4' name='setChronometer'><parameter name='viewId' type='int'/><parameter name='base' type='long'/><parameter name='format' type='java.lang.String'/><parameter name='started' type='boolean'/></method><method api_added='7' name='addView'><parameter name='viewId' type='int'/><parameter name='nestedView' type='android.widget.RemoteViews'/></method><method api_added='7' name='removeAllViews'><parameter name='viewId' type='int'/></method><method api_added='8' name='setBundle'><parameter name='viewId' type='int'/><parameter name='methodName' type='java.lang.String'/><parameter name='value' type='android.os.Bundle'/></method></class><class name='RemoteViews.ActionException' extends='java.lang.RuntimeException' static='true'><constructor name='RemoteViews.ActionException' type='android.widget.RemoteViews.ActionException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='RemoteViews.RemoteView' extends='java.lang.Object' abstract='true' static='true'><implements name='java.lang.annotation.Annotation'/></class><class name='ResourceCursorAdapter' extends='android.widget.CursorAdapter' abstract='true'><constructor name='ResourceCursorAdapter' type='android.widget.ResourceCursorAdapter'><parameter name='context' type='android.content.Context'/><parameter name='layout' type='int'/><parameter name='c' type='android.database.Cursor'/><parameter name='autoRequery' type='boolean'/></constructor><method name='newView' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='setDropDownViewResource'><parameter name='dropDownLayout' type='int'/></method><method api_added='3' name='setViewResource'><parameter name='layout' type='int'/></method></class><class name='ResourceCursorTreeAdapter' extends='android.widget.CursorTreeAdapter' abstract='true'><constructor name='ResourceCursorTreeAdapter' type='android.widget.ResourceCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='expandedGroupLayout' type='int'/><parameter name='childLayout' type='int'/><parameter name='lastChildLayout' type='int'/></constructor><constructor name='ResourceCursorTreeAdapter' type='android.widget.ResourceCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='expandedGroupLayout' type='int'/><parameter name='childLayout' type='int'/></constructor><constructor name='ResourceCursorTreeAdapter' type='android.widget.ResourceCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='groupLayout' type='int'/><parameter name='childLayout' type='int'/></constructor><method name='newChildView' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isLastChild' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='newGroupView' return='android.view.View'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isExpanded' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method></class><class name='ScrollView' extends='android.widget.FrameLayout'><constructor name='ScrollView' type='android.widget.ScrollView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ScrollView' type='android.widget.ScrollView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ScrollView' type='android.widget.ScrollView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='arrowScroll' return='boolean'><parameter name='direction' type='int'/></method><method name='computeScrollDeltaToGetChildRectOnScreen' visibility='protected' return='int'><parameter name='rect' type='android.graphics.Rect'/></method><method name='executeKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method name='fling'><parameter name='velocityY' type='int'/></method><method name='fullScroll' return='boolean'><parameter name='direction' type='int'/></method><method name='getMaxScrollAmount' return='int'/><method name='isFillViewport' return='boolean'/><method name='isSmoothScrollingEnabled' return='boolean'/><method name='pageScroll' return='boolean'><parameter name='direction' type='int'/></method><method name='setFillViewport'><parameter name='fillViewport' type='boolean'/></method><method name='setSmoothScrollingEnabled'><parameter name='smoothScrollingEnabled' type='boolean'/></method><method name='smoothScrollBy' final='true'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='smoothScrollTo' final='true'><parameter name='x' type='int'/><parameter name='y' type='int'/></method></class><class name='Scroller' extends='java.lang.Object'><constructor name='Scroller' type='android.widget.Scroller'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Scroller' type='android.widget.Scroller'><parameter name='context' type='android.content.Context'/><parameter name='interpolator' type='android.view.animation.Interpolator'/></constructor><method name='abortAnimation'/><method name='computeScrollOffset' return='boolean'/><method name='extendDuration'><parameter name='extend' type='int'/></method><method name='fling'><parameter name='startX' type='int'/><parameter name='startY' type='int'/><parameter name='velocityX' type='int'/><parameter name='velocityY' type='int'/><parameter name='minX' type='int'/><parameter name='maxX' type='int'/><parameter name='minY' type='int'/><parameter name='maxY' type='int'/></method><method name='forceFinished' final='true'><parameter name='finished' type='boolean'/></method><method name='getCurrX' final='true' return='int'/><method name='getCurrY' final='true' return='int'/><method name='getDuration' final='true' return='int'/><method name='getFinalX' final='true' return='int'/><method name='getFinalY' final='true' return='int'/><method name='isFinished' final='true' return='boolean'/><method name='setFinalX'><parameter name='newX' type='int'/></method><method name='setFinalY'><parameter name='newY' type='int'/></method><method name='startScroll'><parameter name='startX' type='int'/><parameter name='startY' type='int'/><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method name='startScroll'><parameter name='startX' type='int'/><parameter name='startY' type='int'/><parameter name='dx' type='int'/><parameter name='dy' type='int'/><parameter name='duration' type='int'/></method><method name='timePassed' return='int'/><method api_added='3' name='getStartX' final='true' return='int'/><method api_added='3' name='getStartY' final='true' return='int'/></class><class name='SeekBar' extends='android.widget.AbsSeekBar'><constructor name='SeekBar' type='android.widget.SeekBar'><parameter name='context' type='android.content.Context'/></constructor><constructor name='SeekBar' type='android.widget.SeekBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='SeekBar' type='android.widget.SeekBar'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='setOnSeekBarChangeListener'><parameter name='l' type='android.widget.SeekBar.OnSeekBarChangeListener'/></method></class><class name='SimpleAdapter' extends='android.widget.BaseAdapter'><implements name='android.widget.Filterable'/><constructor name='SimpleAdapter' type='android.widget.SimpleAdapter'><parameter name='context' type='android.content.Context'/><parameter name='data' type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;'/><parameter name='resource' type='int'/><parameter name='from' type='java.lang.String[]'/><parameter name='to' type='int[]'/></constructor><method name='getCount' return='int'/><method name='getFilter' return='android.widget.Filter'/><method name='getItem' return='java.lang.Object'><parameter name='position' type='int'/></method><method name='getItemId' return='long'><parameter name='position' type='int'/></method><method name='getView' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getViewBinder' return='android.widget.SimpleAdapter.ViewBinder'/><method name='setDropDownViewResource'><parameter name='resource' type='int'/></method><method name='setViewBinder'><parameter name='viewBinder' type='android.widget.SimpleAdapter.ViewBinder'/></method><method name='setViewImage'><parameter name='v' type='android.widget.ImageView'/><parameter name='value' type='int'/></method><method name='setViewImage'><parameter name='v' type='android.widget.ImageView'/><parameter name='value' type='java.lang.String'/></method><method name='setViewText'><parameter name='v' type='android.widget.TextView'/><parameter name='text' type='java.lang.String'/></method></class><class name='SimpleCursorAdapter' extends='android.widget.ResourceCursorAdapter'><constructor name='SimpleCursorAdapter' type='android.widget.SimpleCursorAdapter'><parameter name='context' type='android.content.Context'/><parameter name='layout' type='int'/><parameter name='c' type='android.database.Cursor'/><parameter name='from' type='java.lang.String[]'/><parameter name='to' type='int[]'/></constructor><method name='bindView'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/></method><method name='getCursorToStringConverter' return='android.widget.SimpleCursorAdapter.CursorToStringConverter'/><method name='getStringConversionColumn' return='int'/><method name='getViewBinder' return='android.widget.SimpleCursorAdapter.ViewBinder'/><method name='setCursorToStringConverter'><parameter name='cursorToStringConverter' type='android.widget.SimpleCursorAdapter.CursorToStringConverter'/></method><method name='setStringConversionColumn'><parameter name='stringConversionColumn' type='int'/></method><method name='setViewBinder'><parameter name='viewBinder' type='android.widget.SimpleCursorAdapter.ViewBinder'/></method><method name='setViewImage'><parameter name='v' type='android.widget.ImageView'/><parameter name='value' type='java.lang.String'/></method><method name='setViewText'><parameter name='v' type='android.widget.TextView'/><parameter name='text' type='java.lang.String'/></method><method api_added='3' name='changeCursorAndColumns'><parameter name='c' type='android.database.Cursor'/><parameter name='from' type='java.lang.String[]'/><parameter name='to' type='int[]'/></method></class><class name='SimpleCursorTreeAdapter' extends='android.widget.ResourceCursorTreeAdapter' abstract='true'><constructor name='SimpleCursorTreeAdapter' type='android.widget.SimpleCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='expandedGroupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childLayout' type='int'/><parameter name='lastChildLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><constructor name='SimpleCursorTreeAdapter' type='android.widget.SimpleCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='expandedGroupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><constructor name='SimpleCursorTreeAdapter' type='android.widget.SimpleCursorTreeAdapter'><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='groupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><method name='bindChildView' visibility='protected'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isLastChild' type='boolean'/></method><method name='bindGroupView' visibility='protected'><parameter name='view' type='android.view.View'/><parameter name='context' type='android.content.Context'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='isExpanded' type='boolean'/></method><method name='setViewImage' visibility='protected'><parameter name='v' type='android.widget.ImageView'/><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='getViewBinder' return='android.widget.SimpleCursorTreeAdapter.ViewBinder'/><method api_added='5' name='setViewBinder'><parameter name='viewBinder' type='android.widget.SimpleCursorTreeAdapter.ViewBinder'/></method><method api_added='5' name='setViewText'><parameter name='v' type='android.widget.TextView'/><parameter name='text' type='java.lang.String'/></method></class><class name='SimpleExpandableListAdapter' extends='android.widget.BaseExpandableListAdapter'><constructor name='SimpleExpandableListAdapter' type='android.widget.SimpleExpandableListAdapter'><parameter name='context' type='android.content.Context'/><parameter name='groupData' type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;'/><parameter name='groupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childData' type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;'/><parameter name='childLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><constructor name='SimpleExpandableListAdapter' type='android.widget.SimpleExpandableListAdapter'><parameter name='context' type='android.content.Context'/><parameter name='groupData' type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;'/><parameter name='expandedGroupLayout' type='int'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childData' type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;'/><parameter name='childLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><constructor name='SimpleExpandableListAdapter' type='android.widget.SimpleExpandableListAdapter'><parameter name='context' type='android.content.Context'/><parameter name='groupData' type='java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;'/><parameter name='expandedGroupLayout' type='int'/><parameter name='collapsedGroupLayout' type='int'/><parameter name='groupFrom' type='java.lang.String[]'/><parameter name='groupTo' type='int[]'/><parameter name='childData' type='java.util.List&lt;? extends java.util.List&lt;? extends java.util.Map&lt;java.lang.String, ?&gt;&gt;&gt;'/><parameter name='childLayout' type='int'/><parameter name='lastChildLayout' type='int'/><parameter name='childFrom' type='java.lang.String[]'/><parameter name='childTo' type='int[]'/></constructor><method name='getChild' return='java.lang.Object'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildId' return='long'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildView' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='isLastChild' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getChildrenCount' return='int'><parameter name='groupPosition' type='int'/></method><method name='getGroup' return='java.lang.Object'><parameter name='groupPosition' type='int'/></method><method name='getGroupCount' return='int'/><method name='getGroupId' return='long'><parameter name='groupPosition' type='int'/></method><method name='getGroupView' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='isExpanded' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='hasStableIds' return='boolean'/><method name='isChildSelectable' return='boolean'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='newChildView' return='android.view.View'><parameter name='isLastChild' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='newGroupView' return='android.view.View'><parameter name='isExpanded' type='boolean'/><parameter name='parent' type='android.view.ViewGroup'/></method></class><class name='Spinner' extends='android.widget.AbsSpinner'><implements name='android.content.DialogInterface.OnClickListener'/><constructor name='Spinner' type='android.widget.Spinner'><parameter name='context' type='android.content.Context'/></constructor><constructor name='Spinner' type='android.widget.Spinner'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='Spinner' type='android.widget.Spinner'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getPrompt' return='java.lang.CharSequence'/><method name='onClick'><parameter name='dialog' type='android.content.DialogInterface'/><parameter name='which' type='int'/></method><method name='setPrompt'><parameter name='prompt' type='java.lang.CharSequence'/></method><method name='setPromptId'><parameter name='promptId' type='int'/></method></class><class name='TabHost' extends='android.widget.FrameLayout'><implements name='android.view.ViewTreeObserver.OnTouchModeChangeListener'/><constructor name='TabHost' type='android.widget.TabHost'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TabHost' type='android.widget.TabHost'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='addTab'><parameter name='tabSpec' type='android.widget.TabHost.TabSpec'/></method><method name='clearAllTabs'/><method name='getCurrentTab' return='int'/><method name='getCurrentTabTag' return='java.lang.String'/><method name='getCurrentTabView' return='android.view.View'/><method name='getCurrentView' return='android.view.View'/><method name='getTabContentView' return='android.widget.FrameLayout'/><method name='getTabWidget' return='android.widget.TabWidget'/><method name='newTabSpec' return='android.widget.TabHost.TabSpec'><parameter name='tag' type='java.lang.String'/></method><method name='onTouchModeChanged'><parameter name='isInTouchMode' type='boolean'/></method><method name='setCurrentTab'><parameter name='index' type='int'/></method><method name='setCurrentTabByTag'><parameter name='tag' type='java.lang.String'/></method><method name='setOnTabChangedListener'><parameter name='l' type='android.widget.TabHost.OnTabChangeListener'/></method><method name='setup'/><method name='setup'><parameter name='activityGroup' type='android.app.LocalActivityManager'/></method></class><class name='TabHost.TabSpec' extends='java.lang.Object'><method name='setContent' return='android.widget.TabHost.TabSpec'><parameter name='viewId' type='int'/></method><method name='setContent' return='android.widget.TabHost.TabSpec'><parameter name='contentFactory' type='android.widget.TabHost.TabContentFactory'/></method><method name='setContent' return='android.widget.TabHost.TabSpec'><parameter name='intent' type='android.content.Intent'/></method><method name='setIndicator' return='android.widget.TabHost.TabSpec'><parameter name='label' type='java.lang.CharSequence'/></method><method name='setIndicator' return='android.widget.TabHost.TabSpec'><parameter name='label' type='java.lang.CharSequence'/><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method api_added='4' name='getTag' return='java.lang.String'/><method api_added='4' name='setIndicator' return='android.widget.TabHost.TabSpec'><parameter name='view' type='android.view.View'/></method></class><class name='TabWidget' extends='android.widget.LinearLayout'><implements name='android.view.View.OnFocusChangeListener'/><constructor name='TabWidget' type='android.widget.TabWidget'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TabWidget' type='android.widget.TabWidget'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TabWidget' type='android.widget.TabWidget'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='dispatchDraw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method name='focusCurrentTab'><parameter name='index' type='int'/></method><method name='onFocusChange'><parameter name='v' type='android.view.View'/><parameter name='hasFocus' type='boolean'/></method><method name='setCurrentTab'><parameter name='index' type='int'/></method><method api_added='4' name='getChildTabViewAt' return='android.view.View'><parameter name='index' type='int'/></method><method api_added='4' name='getTabCount' return='int'/><method api_added='4' name='setDividerDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method api_added='4' name='setDividerDrawable'><parameter name='resId' type='int'/></method><method api_added='8' name='isStripEnabled' return='boolean'/><method api_added='8' name='setLeftStripDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method api_added='8' name='setLeftStripDrawable'><parameter name='resId' type='int'/></method><method api_added='8' name='setRightStripDrawable'><parameter name='drawable' type='android.graphics.drawable.Drawable'/></method><method api_added='8' name='setRightStripDrawable'><parameter name='resId' type='int'/></method><method api_added='8' name='setStripEnabled'><parameter name='stripEnabled' type='boolean'/></method></class><class name='TableLayout' extends='android.widget.LinearLayout'><constructor name='TableLayout' type='android.widget.TableLayout'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TableLayout' type='android.widget.TableLayout'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='isColumnCollapsed' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='isColumnShrinkable' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='isColumnStretchable' return='boolean'><parameter name='columnIndex' type='int'/></method><method name='isShrinkAllColumns' return='boolean'/><method name='isStretchAllColumns' return='boolean'/><method name='setColumnCollapsed'><parameter name='columnIndex' type='int'/><parameter name='isCollapsed' type='boolean'/></method><method name='setColumnShrinkable'><parameter name='columnIndex' type='int'/><parameter name='isShrinkable' type='boolean'/></method><method name='setColumnStretchable'><parameter name='columnIndex' type='int'/><parameter name='isStretchable' type='boolean'/></method><method name='setShrinkAllColumns'><parameter name='shrinkAllColumns' type='boolean'/></method><method name='setStretchAllColumns'><parameter name='stretchAllColumns' type='boolean'/></method></class><class name='TableLayout.LayoutParams' extends='android.widget.LinearLayout.LayoutParams' static='true'><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='initWeight' type='float'/></constructor><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'/><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='TableLayout.LayoutParams' type='android.widget.TableLayout.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor></class><class name='TableRow' extends='android.widget.LinearLayout'><constructor name='TableRow' type='android.widget.TableRow'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TableRow' type='android.widget.TableRow'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getVirtualChildAt' return='android.view.View'><parameter name='i' type='int'/></method><method name='getVirtualChildCount' return='int'/></class><class name='TableRow.LayoutParams' extends='android.widget.LinearLayout.LayoutParams' static='true'><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='c' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/></constructor><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='initWeight' type='float'/></constructor><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'/><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='column' type='int'/></constructor><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='p' type='android.view.ViewGroup.LayoutParams'/></constructor><constructor name='TableRow.LayoutParams' type='android.widget.TableRow.LayoutParams'><parameter name='source' type='android.view.ViewGroup.MarginLayoutParams'/></constructor><field name='column' type='int'/><field name='span' type='int'/></class><class name='TextSwitcher' extends='android.widget.ViewSwitcher'><constructor name='TextSwitcher' type='android.widget.TextSwitcher'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TextSwitcher' type='android.widget.TextSwitcher'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='setCurrentText'><parameter name='text' type='java.lang.CharSequence'/></method><method name='setText'><parameter name='text' type='java.lang.CharSequence'/></method></class><class name='TextView' extends='android.view.View'><implements name='android.view.ViewTreeObserver.OnPreDrawListener'/><constructor name='TextView' type='android.widget.TextView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TextView' type='android.widget.TextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TextView' type='android.widget.TextView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='addTextChangedListener'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='append' final='true'><parameter name='text' type='java.lang.CharSequence'/></method><method name='append'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='debug'><parameter name='depth' type='int'/></method><method name='getAutoLinkMask' final='true' return='int'/><method name='getCompoundDrawablePadding' return='int'/><method name='getCompoundDrawables' return='android.graphics.drawable.Drawable[]'/><method name='getCompoundPaddingBottom' return='int'/><method name='getCompoundPaddingLeft' return='int'/><method name='getCompoundPaddingRight' return='int'/><method name='getCompoundPaddingTop' return='int'/><method name='getCurrentHintTextColor' final='true' return='int'/><method name='getCurrentTextColor' final='true' return='int'/><method name='getDefaultEditable' visibility='protected' return='boolean'/><method name='getDefaultMovementMethod' visibility='protected' return='android.text.method.MovementMethod'/><method name='getEllipsize' return='android.text.TextUtils.TruncateAt'/><method name='getError' return='java.lang.CharSequence'/><method name='getExtendedPaddingBottom' return='int'/><method name='getExtendedPaddingTop' return='int'/><method name='getFilters' return='android.text.InputFilter[]'/><method name='getFreezesText' return='boolean'/><method name='getGravity' return='int'/><method name='getHint' return='java.lang.CharSequence'/><method name='getHintTextColors' final='true' return='android.content.res.ColorStateList'/><method name='getKeyListener' final='true' return='android.text.method.KeyListener'/><method name='getLayout' final='true' return='android.text.Layout'/><method name='getLineBounds' return='int'><parameter name='line' type='int'/><parameter name='bounds' type='android.graphics.Rect'/></method><method name='getLineCount' return='int'/><method name='getLineHeight' return='int'/><method name='getLinkTextColors' final='true' return='android.content.res.ColorStateList'/><method name='getLinksClickable' final='true' return='boolean'/><method name='getMovementMethod' final='true' return='android.text.method.MovementMethod'/><method name='getPaint' return='android.text.TextPaint'/><method name='getPaintFlags' return='int'/><method name='getSelectionEnd' return='int'/><method name='getSelectionStart' return='int'/><method name='getText' return='java.lang.CharSequence'/><method name='getTextColor' static='true' return='int'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.content.res.TypedArray'/><parameter name='def' type='int'/></method><method name='getTextColors' final='true' return='android.content.res.ColorStateList'/><method name='getTextColors' static='true' return='android.content.res.ColorStateList'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.content.res.TypedArray'/></method><method name='getTextScaleX' return='float'/><method name='getTextSize' return='float'/><method name='getTotalPaddingBottom' return='int'/><method name='getTotalPaddingLeft' return='int'/><method name='getTotalPaddingRight' return='int'/><method name='getTotalPaddingTop' return='int'/><method name='getTransformationMethod' final='true' return='android.text.method.TransformationMethod'/><method name='getTypeface' return='android.graphics.Typeface'/><method name='getUrls' return='android.text.style.URLSpan[]'/><method name='hasSelection' return='boolean'/><method name='length' return='int'/><method name='onPreDraw' return='boolean'/><method name='onRestoreInstanceState'><parameter name='state' type='android.os.Parcelable'/></method><method name='onSaveInstanceState' return='android.os.Parcelable'/><method name='onTextChanged' visibility='protected'><parameter name='text' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='before' type='int'/><parameter name='after' type='int'/></method><method name='removeTextChangedListener'><parameter name='watcher' type='android.text.TextWatcher'/></method><method name='setAutoLinkMask' final='true'><parameter name='mask' type='int'/></method><method name='setCompoundDrawablePadding'><parameter name='pad' type='int'/></method><method name='setCompoundDrawables'><parameter name='left' type='android.graphics.drawable.Drawable'/><parameter name='top' type='android.graphics.drawable.Drawable'/><parameter name='right' type='android.graphics.drawable.Drawable'/><parameter name='bottom' type='android.graphics.drawable.Drawable'/></method><method name='setCompoundDrawablesWithIntrinsicBounds'><parameter name='left' type='android.graphics.drawable.Drawable'/><parameter name='top' type='android.graphics.drawable.Drawable'/><parameter name='right' type='android.graphics.drawable.Drawable'/><parameter name='bottom' type='android.graphics.drawable.Drawable'/></method><method name='setCursorVisible'><parameter name='visible' type='boolean'/></method><method name='setEditableFactory' final='true'><parameter name='factory' type='android.text.Editable.Factory'/></method><method name='setEllipsize'><parameter name='where' type='android.text.TextUtils.TruncateAt'/></method><method name='setEms'><parameter name='ems' type='int'/></method><method name='setError'><parameter name='error' type='java.lang.CharSequence'/></method><method name='setError'><parameter name='error' type='java.lang.CharSequence'/><parameter name='icon' type='android.graphics.drawable.Drawable'/></method><method name='setFilters'><parameter name='filters' type='android.text.InputFilter[]'/></method><method name='setFrame' visibility='protected' return='boolean'><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method name='setFreezesText'><parameter name='freezesText' type='boolean'/></method><method name='setGravity'><parameter name='gravity' type='int'/></method><method name='setHeight'><parameter name='pixels' type='int'/></method><method name='setHighlightColor'><parameter name='color' type='int'/></method><method name='setHint' final='true'><parameter name='hint' type='java.lang.CharSequence'/></method><method name='setHint' final='true'><parameter name='resid' type='int'/></method><method name='setHintTextColor' final='true'><parameter name='color' type='int'/></method><method name='setHintTextColor' final='true'><parameter name='colors' type='android.content.res.ColorStateList'/></method><method name='setHorizontallyScrolling'><parameter name='whether' type='boolean'/></method><method name='setIncludeFontPadding'><parameter name='includepad' type='boolean'/></method><method name='setKeyListener'><parameter name='input' type='android.text.method.KeyListener'/></method><method name='setLineSpacing'><parameter name='add' type='float'/><parameter name='mult' type='float'/></method><method name='setLines'><parameter name='lines' type='int'/></method><method name='setLinkTextColor' final='true'><parameter name='color' type='int'/></method><method name='setLinkTextColor' final='true'><parameter name='colors' type='android.content.res.ColorStateList'/></method><method name='setLinksClickable' final='true'><parameter name='whether' type='boolean'/></method><method name='setMaxEms'><parameter name='maxems' type='int'/></method><method name='setMaxHeight'><parameter name='maxHeight' type='int'/></method><method name='setMaxLines'><parameter name='maxlines' type='int'/></method><method name='setMaxWidth'><parameter name='maxpixels' type='int'/></method><method name='setMinEms'><parameter name='minems' type='int'/></method><method name='setMinHeight'><parameter name='minHeight' type='int'/></method><method name='setMinLines'><parameter name='minlines' type='int'/></method><method name='setMinWidth'><parameter name='minpixels' type='int'/></method><method name='setMovementMethod' final='true'><parameter name='movement' type='android.text.method.MovementMethod'/></method><method name='setPaintFlags'><parameter name='flags' type='int'/></method><method name='setScroller'><parameter name='s' type='android.widget.Scroller'/></method><method name='setSelectAllOnFocus'><parameter name='selectAllOnFocus' type='boolean'/></method><method name='setShadowLayer'><parameter name='radius' type='float'/><parameter name='dx' type='float'/><parameter name='dy' type='float'/><parameter name='color' type='int'/></method><method name='setSingleLine'/><method name='setSingleLine'><parameter name='singleLine' type='boolean'/></method><method name='setSpannableFactory' final='true'><parameter name='factory' type='android.text.Spannable.Factory'/></method><method name='setText' final='true'><parameter name='text' type='java.lang.CharSequence'/></method><method name='setText'><parameter name='text' type='java.lang.CharSequence'/><parameter name='type' type='android.widget.TextView.BufferType'/></method><method name='setText' final='true'><parameter name='text' type='char[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method><method name='setText' final='true'><parameter name='resid' type='int'/></method><method name='setText' final='true'><parameter name='resid' type='int'/><parameter name='type' type='android.widget.TextView.BufferType'/></method><method name='setTextAppearance'><parameter name='context' type='android.content.Context'/><parameter name='resid' type='int'/></method><method name='setTextColor'><parameter name='color' type='int'/></method><method name='setTextColor'><parameter name='colors' type='android.content.res.ColorStateList'/></method><method name='setTextKeepState' final='true'><parameter name='text' type='java.lang.CharSequence'/></method><method name='setTextKeepState' final='true'><parameter name='text' type='java.lang.CharSequence'/><parameter name='type' type='android.widget.TextView.BufferType'/></method><method name='setTextScaleX'><parameter name='size' type='float'/></method><method name='setTextSize'><parameter name='size' type='float'/></method><method name='setTextSize'><parameter name='unit' type='int'/><parameter name='size' type='float'/></method><method name='setTransformationMethod' final='true'><parameter name='method' type='android.text.method.TransformationMethod'/></method><method name='setTypeface'><parameter name='tf' type='android.graphics.Typeface'/><parameter name='style' type='int'/></method><method name='setTypeface'><parameter name='tf' type='android.graphics.Typeface'/></method><method name='setWidth'><parameter name='pixels' type='int'/></method><method api_added='2' name='setMarqueeRepeatLimit'><parameter name='marqueeLimit' type='int'/></method><method api_added='3' name='beginBatchEdit'/><method api_added='3' name='bringPointIntoView' return='boolean'><parameter name='offset' type='int'/></method><method api_added='3' name='clearComposingText'/><method api_added='3' name='didTouchFocusSelect' return='boolean'/><method api_added='3' name='endBatchEdit'/><method api_added='3' name='extractText' return='boolean'><parameter name='request' type='android.view.inputmethod.ExtractedTextRequest'/><parameter name='outText' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='getEditableText' return='android.text.Editable'/><method api_added='3' name='getImeActionId' return='int'/><method api_added='3' name='getImeActionLabel' return='java.lang.CharSequence'/><method api_added='3' name='getImeOptions' return='int'/><method api_added='3' name='getInputExtras' return='android.os.Bundle'><parameter name='create' type='boolean'/></method><method api_added='3' name='getInputType' return='int'/><method api_added='3' name='getPrivateImeOptions' return='java.lang.String'/><method api_added='3' name='isInputMethodTarget' return='boolean'/><method api_added='3' name='moveCursorToVisibleOffset' return='boolean'/><method api_added='3' name='onBeginBatchEdit'/><method api_added='3' name='onCommitCompletion'><parameter name='text' type='android.view.inputmethod.CompletionInfo'/></method><method api_added='3' name='onEditorAction'><parameter name='actionCode' type='int'/></method><method api_added='3' name='onEndBatchEdit'/><method api_added='3' name='onPrivateIMECommand' return='boolean'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='onSelectionChanged' visibility='protected'><parameter name='selStart' type='int'/><parameter name='selEnd' type='int'/></method><method api_added='3' name='onTextContextMenuItem' return='boolean'><parameter name='id' type='int'/></method><method api_added='3' name='setCompoundDrawablesWithIntrinsicBounds'><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method api_added='3' name='setExtractedText'><parameter name='text' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='setImeActionLabel'><parameter name='label' type='java.lang.CharSequence'/><parameter name='actionId' type='int'/></method><method api_added='3' name='setImeOptions'><parameter name='imeOptions' type='int'/></method><method api_added='3' name='setInputExtras'><parameter name='xmlResId' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method api_added='3' name='setInputType'><parameter name='type' type='int'/></method><method api_added='3' name='setOnEditorActionListener'><parameter name='l' type='android.widget.TextView.OnEditorActionListener'/></method><method api_added='3' name='setPrivateImeOptions'><parameter name='type' type='java.lang.String'/></method><method api_added='3' name='setRawInputType'><parameter name='type' type='int'/></method></class><class name='TextView.BufferType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='android.widget.TextView.BufferType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='android.widget.TextView.BufferType[]'/></class><class name='TextView.SavedState' extends='android.view.View.BaseSavedState' static='true'><field name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/></class><class name='TimePicker' extends='android.widget.FrameLayout'><constructor name='TimePicker' type='android.widget.TimePicker'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TimePicker' type='android.widget.TimePicker'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TimePicker' type='android.widget.TimePicker'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getCurrentHour' return='java.lang.Integer'/><method name='getCurrentMinute' return='java.lang.Integer'/><method name='is24HourView' return='boolean'/><method name='setCurrentHour'><parameter name='currentHour' type='java.lang.Integer'/></method><method name='setCurrentMinute'><parameter name='currentMinute' type='java.lang.Integer'/></method><method name='setIs24HourView'><parameter name='is24HourView' type='java.lang.Boolean'/></method><method name='setOnTimeChangedListener'><parameter name='onTimeChangedListener' type='android.widget.TimePicker.OnTimeChangedListener'/></method></class><class name='Toast' extends='java.lang.Object'><constructor name='Toast' type='android.widget.Toast'><parameter name='context' type='android.content.Context'/></constructor><field name='LENGTH_LONG' final='true' static='true' value='1' type='int'/><field name='LENGTH_SHORT' final='true' static='true' value='0' type='int'/><method name='cancel'/><method name='getDuration' return='int'/><method name='getGravity' return='int'/><method name='getHorizontalMargin' return='float'/><method name='getVerticalMargin' return='float'/><method name='getView' return='android.view.View'/><method name='getXOffset' return='int'/><method name='getYOffset' return='int'/><method name='makeText' static='true' return='android.widget.Toast'><parameter name='context' type='android.content.Context'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='duration' type='int'/></method><method name='makeText' static='true' return='android.widget.Toast'><parameter name='context' type='android.content.Context'/><parameter name='resId' type='int'/><parameter name='duration' type='int'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method name='setDuration'><parameter name='duration' type='int'/></method><method name='setGravity'><parameter name='gravity' type='int'/><parameter name='xOffset' type='int'/><parameter name='yOffset' type='int'/></method><method name='setMargin'><parameter name='horizontalMargin' type='float'/><parameter name='verticalMargin' type='float'/></method><method name='setText'><parameter name='resId' type='int'/></method><method name='setText'><parameter name='s' type='java.lang.CharSequence'/></method><method name='setView'><parameter name='view' type='android.view.View'/></method><method name='show'/></class><class name='ToggleButton' extends='android.widget.CompoundButton'><constructor name='ToggleButton' type='android.widget.ToggleButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><constructor name='ToggleButton' type='android.widget.ToggleButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ToggleButton' type='android.widget.ToggleButton'><parameter name='context' type='android.content.Context'/></constructor><method name='getTextOff' return='java.lang.CharSequence'/><method name='getTextOn' return='java.lang.CharSequence'/><method name='setTextOff'><parameter name='textOff' type='java.lang.CharSequence'/></method><method name='setTextOn'><parameter name='textOn' type='java.lang.CharSequence'/></method></class><class name='TwoLineListItem' extends='android.widget.RelativeLayout'><constructor name='TwoLineListItem' type='android.widget.TwoLineListItem'><parameter name='context' type='android.content.Context'/></constructor><constructor name='TwoLineListItem' type='android.widget.TwoLineListItem'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='TwoLineListItem' type='android.widget.TwoLineListItem'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getText1' return='android.widget.TextView'/><method name='getText2' return='android.widget.TextView'/></class><class name='VideoView' extends='android.view.SurfaceView'><implements name='android.widget.MediaController.MediaPlayerControl'/><constructor name='VideoView' type='android.widget.VideoView'><parameter name='context' type='android.content.Context'/></constructor><constructor name='VideoView' type='android.widget.VideoView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='VideoView' type='android.widget.VideoView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='getBufferPercentage' return='int'/><method name='getCurrentPosition' return='int'/><method name='getDuration' return='int'/><method name='isPlaying' return='boolean'/><method name='pause'/><method name='resolveAdjustedSize' return='int'><parameter name='desiredSize' type='int'/><parameter name='measureSpec' type='int'/></method><method name='seekTo'><parameter name='msec' type='int'/></method><method name='setMediaController'><parameter name='controller' type='android.widget.MediaController'/></method><method name='setOnCompletionListener'><parameter name='l' type='android.media.MediaPlayer.OnCompletionListener'/></method><method name='setOnErrorListener'><parameter name='l' type='android.media.MediaPlayer.OnErrorListener'/></method><method name='setOnPreparedListener'><parameter name='l' type='android.media.MediaPlayer.OnPreparedListener'/></method><method name='setVideoPath'><parameter name='path' type='java.lang.String'/></method><method name='setVideoURI'><parameter name='uri' type='android.net.Uri'/></method><method name='start'/><method name='stopPlayback'/><method api_added='5' name='canPause' return='boolean'/><method api_added='5' name='canSeekBackward' return='boolean'/><method api_added='5' name='canSeekForward' return='boolean'/><method api_added='8' name='resume'/><method api_added='8' name='suspend'/></class><class name='ViewAnimator' extends='android.widget.FrameLayout'><constructor name='ViewAnimator' type='android.widget.ViewAnimator'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ViewAnimator' type='android.widget.ViewAnimator'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getCurrentView' return='android.view.View'/><method name='getDisplayedChild' return='int'/><method name='getInAnimation' return='android.view.animation.Animation'/><method name='getOutAnimation' return='android.view.animation.Animation'/><method name='setAnimateFirstView'><parameter name='animate' type='boolean'/></method><method name='setDisplayedChild'><parameter name='whichChild' type='int'/></method><method name='setInAnimation'><parameter name='inAnimation' type='android.view.animation.Animation'/></method><method name='setInAnimation'><parameter name='context' type='android.content.Context'/><parameter name='resourceID' type='int'/></method><method name='setOutAnimation'><parameter name='outAnimation' type='android.view.animation.Animation'/></method><method name='setOutAnimation'><parameter name='context' type='android.content.Context'/><parameter name='resourceID' type='int'/></method><method name='showNext'/><method name='showPrevious'/></class><class name='ViewFlipper' extends='android.widget.ViewAnimator'><constructor name='ViewFlipper' type='android.widget.ViewFlipper'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ViewFlipper' type='android.widget.ViewFlipper'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='isFlipping' return='boolean'/><method name='setFlipInterval'><parameter name='milliseconds' type='int'/></method><method name='startFlipping'/><method name='stopFlipping'/><method api_added='7' name='isAutoStart' return='boolean'/><method api_added='7' name='setAutoStart'><parameter name='autoStart' type='boolean'/></method></class><class name='ViewSwitcher' extends='android.widget.ViewAnimator'><constructor name='ViewSwitcher' type='android.widget.ViewSwitcher'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ViewSwitcher' type='android.widget.ViewSwitcher'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='getNextView' return='android.view.View'/><method name='reset'/><method name='setFactory'><parameter name='factory' type='android.widget.ViewSwitcher.ViewFactory'/></method></class><class name='ZoomButton' extends='android.widget.ImageButton'><implements name='android.view.View.OnLongClickListener'/><constructor name='ZoomButton' type='android.widget.ZoomButton'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ZoomButton' type='android.widget.ZoomButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor name='ZoomButton' type='android.widget.ZoomButton'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method name='onLongClick' return='boolean'><parameter name='v' type='android.view.View'/></method><method name='setZoomSpeed'><parameter name='speed' type='long'/></method></class><class name='ZoomControls' extends='android.widget.LinearLayout'><constructor name='ZoomControls' type='android.widget.ZoomControls'><parameter name='context' type='android.content.Context'/></constructor><constructor name='ZoomControls' type='android.widget.ZoomControls'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><method name='hide'/><method name='setIsZoomInEnabled'><parameter name='isEnabled' type='boolean'/></method><method name='setIsZoomOutEnabled'><parameter name='isEnabled' type='boolean'/></method><method name='setOnZoomInClickListener'><parameter name='listener' type='android.view.View.OnClickListener'/></method><method name='setOnZoomOutClickListener'><parameter name='listener' type='android.view.View.OnClickListener'/></method><method name='setZoomSpeed'><parameter name='speed' type='long'/></method><method name='show'/></class><class api_added='3' name='AlphabetIndexer' extends='android.database.DataSetObserver'><implements name='android.widget.SectionIndexer'/><constructor api_added='3' name='AlphabetIndexer' type='android.widget.AlphabetIndexer'><parameter name='cursor' type='android.database.Cursor'/><parameter name='sortedColumnIndex' type='int'/><parameter name='alphabet' type='java.lang.CharSequence'/></constructor><field api_added='3' name='mAlphabet' type='java.lang.CharSequence' visibility='protected'/><field api_added='3' name='mColumnIndex' type='int' visibility='protected'/><field api_added='3' name='mDataCursor' type='android.database.Cursor' visibility='protected'/><method api_added='3' name='compare' visibility='protected' return='int'><parameter name='word' type='java.lang.String'/><parameter name='letter' type='java.lang.String'/></method><method api_added='3' name='getPositionForSection' return='int'><parameter name='sectionIndex' type='int'/></method><method api_added='3' name='getSectionForPosition' return='int'><parameter name='position' type='int'/></method><method api_added='3' name='getSections' return='java.lang.Object[]'/><method api_added='3' name='setCursor'><parameter name='cursor' type='android.database.Cursor'/></method></class><class api_added='3' name='HorizontalScrollView' extends='android.widget.FrameLayout'><constructor api_added='3' name='HorizontalScrollView' type='android.widget.HorizontalScrollView'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='3' name='HorizontalScrollView' type='android.widget.HorizontalScrollView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='3' name='HorizontalScrollView' type='android.widget.HorizontalScrollView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method api_added='3' name='arrowScroll' return='boolean'><parameter name='direction' type='int'/></method><method api_added='3' name='computeScrollDeltaToGetChildRectOnScreen' visibility='protected' return='int'><parameter name='rect' type='android.graphics.Rect'/></method><method api_added='3' name='executeKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='fling'><parameter name='velocityX' type='int'/></method><method api_added='3' name='fullScroll' return='boolean'><parameter name='direction' type='int'/></method><method api_added='3' name='getMaxScrollAmount' return='int'/><method api_added='3' name='isFillViewport' return='boolean'/><method api_added='3' name='isSmoothScrollingEnabled' return='boolean'/><method api_added='3' name='pageScroll' return='boolean'><parameter name='direction' type='int'/></method><method api_added='3' name='setFillViewport'><parameter name='fillViewport' type='boolean'/></method><method api_added='3' name='setSmoothScrollingEnabled'><parameter name='smoothScrollingEnabled' type='boolean'/></method><method api_added='3' name='smoothScrollBy' final='true'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method api_added='3' name='smoothScrollTo' final='true'><parameter name='x' type='int'/><parameter name='y' type='int'/></method></class><class api_added='3' name='SlidingDrawer' extends='android.view.ViewGroup'><constructor api_added='3' name='SlidingDrawer' type='android.widget.SlidingDrawer'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='3' name='SlidingDrawer' type='android.widget.SlidingDrawer'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field api_added='3' name='ORIENTATION_HORIZONTAL' final='true' static='true' value='0' type='int'/><field api_added='3' name='ORIENTATION_VERTICAL' final='true' static='true' value='1' type='int'/><method api_added='3' name='animateClose'/><method api_added='3' name='animateOpen'/><method api_added='3' name='animateToggle'/><method api_added='3' name='close'/><method api_added='3' name='getContent' return='android.view.View'/><method api_added='3' name='getHandle' return='android.view.View'/><method api_added='3' name='isMoving' return='boolean'/><method api_added='3' name='isOpened' return='boolean'/><method api_added='3' name='lock'/><method api_added='3' name='onLayout' visibility='protected'><parameter name='changed' type='boolean'/><parameter name='l' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='b' type='int'/></method><method api_added='3' name='open'/><method api_added='3' name='setOnDrawerCloseListener'><parameter name='onDrawerCloseListener' type='android.widget.SlidingDrawer.OnDrawerCloseListener'/></method><method api_added='3' name='setOnDrawerOpenListener'><parameter name='onDrawerOpenListener' type='android.widget.SlidingDrawer.OnDrawerOpenListener'/></method><method api_added='3' name='setOnDrawerScrollListener'><parameter name='onDrawerScrollListener' type='android.widget.SlidingDrawer.OnDrawerScrollListener'/></method><method api_added='3' name='toggle'/><method api_added='3' name='unlock'/></class><class api_added='4' name='ZoomButtonsController' extends='java.lang.Object'><implements name='android.view.View.OnTouchListener'/><constructor api_added='4' name='ZoomButtonsController' type='android.widget.ZoomButtonsController'><parameter name='ownerView' type='android.view.View'/></constructor><method api_added='4' name='getContainer' return='android.view.ViewGroup'/><method api_added='4' name='getZoomControls' return='android.view.View'/><method api_added='4' name='isAutoDismissed' return='boolean'/><method api_added='4' name='isVisible' return='boolean'/><method api_added='4' name='onTouch' return='boolean'><parameter name='v' type='android.view.View'/><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='4' name='setAutoDismissed'><parameter name='autoDismiss' type='boolean'/></method><method api_added='4' name='setFocusable'><parameter name='focusable' type='boolean'/></method><method api_added='4' name='setOnZoomListener'><parameter name='listener' type='android.widget.ZoomButtonsController.OnZoomListener'/></method><method api_added='4' name='setVisible'><parameter name='visible' type='boolean'/></method><method api_added='4' name='setZoomInEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='4' name='setZoomOutEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='4' name='setZoomSpeed'><parameter name='speed' type='long'/></method></class><class api_added='5' name='QuickContactBadge' extends='android.widget.ImageView'><implements name='android.view.View.OnClickListener'/><constructor api_added='5' name='QuickContactBadge' type='android.widget.QuickContactBadge'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='5' name='QuickContactBadge' type='android.widget.QuickContactBadge'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='5' name='QuickContactBadge' type='android.widget.QuickContactBadge'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field api_added='5' name='mExcludeMimes' value='null' type='java.lang.String[]' visibility='protected'/><method api_added='5' name='assignContactFromEmail'><parameter name='emailAddress' type='java.lang.String'/><parameter name='lazyLookup' type='boolean'/></method><method api_added='5' name='assignContactFromPhone'><parameter name='phoneNumber' type='java.lang.String'/><parameter name='lazyLookup' type='boolean'/></method><method api_added='5' name='assignContactUri'><parameter name='contactUri' type='android.net.Uri'/></method><method api_added='5' name='onClick'><parameter name='v' type='android.view.View'/></method><method api_added='5' name='setExcludeMimes'><parameter name='excludeMimes' type='java.lang.String[]'/></method><method api_added='5' name='setMode'><parameter name='size' type='int'/></method></class><interface name='AbsListView.OnScrollListener' abstract='true' static='true'><field name='SCROLL_STATE_FLING' final='true' static='true' value='2' type='int'/><field name='SCROLL_STATE_IDLE' final='true' static='true' value='0' type='int'/><field name='SCROLL_STATE_TOUCH_SCROLL' final='true' static='true' value='1' type='int'/><method name='onScroll' abstract='true'><parameter name='view' type='android.widget.AbsListView'/><parameter name='firstVisibleItem' type='int'/><parameter name='visibleItemCount' type='int'/><parameter name='totalItemCount' type='int'/></method><method name='onScrollStateChanged' abstract='true'><parameter name='view' type='android.widget.AbsListView'/><parameter name='scrollState' type='int'/></method></interface><interface name='AbsListView.RecyclerListener' abstract='true' static='true'><method name='onMovedToScrapHeap' abstract='true'><parameter name='view' type='android.view.View'/></method></interface><interface name='Adapter' abstract='true'><field name='IGNORE_ITEM_VIEW_TYPE' final='true' static='true' value='-1' type='int'/><field name='NO_SELECTION' final='true' static='true' value='-2147483648' type='int'/><method name='getCount' abstract='true' return='int'/><method name='getItem' abstract='true' return='java.lang.Object'><parameter name='position' type='int'/></method><method name='getItemId' abstract='true' return='long'><parameter name='position' type='int'/></method><method name='getItemViewType' abstract='true' return='int'><parameter name='position' type='int'/></method><method name='getView' abstract='true' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getViewTypeCount' abstract='true' return='int'/><method name='hasStableIds' abstract='true' return='boolean'/><method name='isEmpty' abstract='true' return='boolean'/><method name='registerDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='unregisterDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method></interface><interface name='AdapterView.OnItemClickListener' abstract='true' static='true'><method name='onItemClick' abstract='true'><parameter name='parent' type='android.widget.AdapterView&lt;?&gt;'/><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method></interface><interface name='AdapterView.OnItemLongClickListener' abstract='true' static='true'><method name='onItemLongClick' abstract='true' return='boolean'><parameter name='parent' type='android.widget.AdapterView&lt;?&gt;'/><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method></interface><interface name='AdapterView.OnItemSelectedListener' abstract='true' static='true'><method name='onItemSelected' abstract='true'><parameter name='parent' type='android.widget.AdapterView&lt;?&gt;'/><parameter name='view' type='android.view.View'/><parameter name='position' type='int'/><parameter name='id' type='long'/></method><method name='onNothingSelected' abstract='true'><parameter name='parent' type='android.widget.AdapterView&lt;?&gt;'/></method></interface><interface name='AutoCompleteTextView.Validator' abstract='true' static='true'><method name='fixText' abstract='true' return='java.lang.CharSequence'><parameter name='invalidText' type='java.lang.CharSequence'/></method><method name='isValid' abstract='true' return='boolean'><parameter name='text' type='java.lang.CharSequence'/></method></interface><interface name='Checkable' abstract='true'><method name='isChecked' abstract='true' return='boolean'/><method name='setChecked' abstract='true'><parameter name='checked' type='boolean'/></method><method name='toggle' abstract='true'/></interface><interface name='CompoundButton.OnCheckedChangeListener' abstract='true' static='true'><method name='onCheckedChanged' abstract='true'><parameter name='buttonView' type='android.widget.CompoundButton'/><parameter name='isChecked' type='boolean'/></method></interface><interface name='DatePicker.OnDateChangedListener' abstract='true' static='true'><method name='onDateChanged' abstract='true'><parameter name='view' type='android.widget.DatePicker'/><parameter name='year' type='int'/><parameter name='monthOfYear' type='int'/><parameter name='dayOfMonth' type='int'/></method></interface><interface name='ExpandableListAdapter' abstract='true'><method name='areAllItemsEnabled' abstract='true' return='boolean'/><method name='getChild' abstract='true' return='java.lang.Object'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildId' abstract='true' return='long'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='getChildView' abstract='true' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='isLastChild' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='getChildrenCount' abstract='true' return='int'><parameter name='groupPosition' type='int'/></method><method name='getCombinedChildId' abstract='true' return='long'><parameter name='groupId' type='long'/><parameter name='childId' type='long'/></method><method name='getCombinedGroupId' abstract='true' return='long'><parameter name='groupId' type='long'/></method><method name='getGroup' abstract='true' return='java.lang.Object'><parameter name='groupPosition' type='int'/></method><method name='getGroupCount' abstract='true' return='int'/><method name='getGroupId' abstract='true' return='long'><parameter name='groupPosition' type='int'/></method><method name='getGroupView' abstract='true' return='android.view.View'><parameter name='groupPosition' type='int'/><parameter name='isExpanded' type='boolean'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method><method name='hasStableIds' abstract='true' return='boolean'/><method name='isChildSelectable' abstract='true' return='boolean'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method name='isEmpty' abstract='true' return='boolean'/><method name='onGroupCollapsed' abstract='true'><parameter name='groupPosition' type='int'/></method><method name='onGroupExpanded' abstract='true'><parameter name='groupPosition' type='int'/></method><method name='registerDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method><method name='unregisterDataSetObserver' abstract='true'><parameter name='observer' type='android.database.DataSetObserver'/></method></interface><interface name='ExpandableListView.OnChildClickListener' abstract='true' static='true'><method name='onChildClick' abstract='true' return='boolean'><parameter name='parent' type='android.widget.ExpandableListView'/><parameter name='v' type='android.view.View'/><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/><parameter name='id' type='long'/></method></interface><interface name='ExpandableListView.OnGroupClickListener' abstract='true' static='true'><method name='onGroupClick' abstract='true' return='boolean'><parameter name='parent' type='android.widget.ExpandableListView'/><parameter name='v' type='android.view.View'/><parameter name='groupPosition' type='int'/><parameter name='id' type='long'/></method></interface><interface name='ExpandableListView.OnGroupCollapseListener' abstract='true' static='true'><method name='onGroupCollapse' abstract='true'><parameter name='groupPosition' type='int'/></method></interface><interface name='ExpandableListView.OnGroupExpandListener' abstract='true' static='true'><method name='onGroupExpand' abstract='true'><parameter name='groupPosition' type='int'/></method></interface><interface name='Filter.FilterListener' abstract='true' static='true'><method name='onFilterComplete' abstract='true'><parameter name='count' type='int'/></method></interface><interface name='FilterQueryProvider' abstract='true'><method name='runQuery' abstract='true' return='android.database.Cursor'><parameter name='constraint' type='java.lang.CharSequence'/></method></interface><interface name='Filterable' abstract='true'><method name='getFilter' abstract='true' return='android.widget.Filter'/></interface><interface name='ListAdapter' abstract='true'><implements name='android.widget.Adapter'/><method name='areAllItemsEnabled' abstract='true' return='boolean'/><method name='isEnabled' abstract='true' return='boolean'><parameter name='position' type='int'/></method></interface><interface name='MediaController.MediaPlayerControl' abstract='true' static='true'><method name='getBufferPercentage' abstract='true' return='int'/><method name='getCurrentPosition' abstract='true' return='int'/><method name='getDuration' abstract='true' return='int'/><method name='isPlaying' abstract='true' return='boolean'/><method name='pause' abstract='true'/><method name='seekTo' abstract='true'><parameter name='pos' type='int'/></method><method name='start' abstract='true'/><method api_added='5' name='canPause' abstract='true' return='boolean'/><method api_added='5' name='canSeekBackward' abstract='true' return='boolean'/><method api_added='5' name='canSeekForward' abstract='true' return='boolean'/></interface><interface name='MultiAutoCompleteTextView.Tokenizer' abstract='true' static='true'><method name='findTokenEnd' abstract='true' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='findTokenStart' abstract='true' return='int'><parameter name='text' type='java.lang.CharSequence'/><parameter name='cursor' type='int'/></method><method name='terminateToken' abstract='true' return='java.lang.CharSequence'><parameter name='text' type='java.lang.CharSequence'/></method></interface><interface name='PopupWindow.OnDismissListener' abstract='true' static='true' visibility=''><method name='onDismiss' abstract='true'/></interface><interface name='RadioGroup.OnCheckedChangeListener' abstract='true' static='true'><method name='onCheckedChanged' abstract='true'><parameter name='group' type='android.widget.RadioGroup'/><parameter name='checkedId' type='int'/></method></interface><interface name='RatingBar.OnRatingBarChangeListener' abstract='true' static='true'><method name='onRatingChanged' abstract='true' api_removed='4'><parameter name='ratingBar' type='android.widget.RatingBar'/><parameter name='rating' type='float'/><parameter name='fromTouch' type='boolean'/><parameter name='fromUser' type='boolean'/></method><method api_added='4' name='onRatingChanged' abstract='true'><parameter name='ratingBar' type='android.widget.RatingBar'/><parameter name='rating' type='float'/><parameter name='fromUser' type='boolean'/></method></interface><interface name='SeekBar.OnSeekBarChangeListener' abstract='true' static='true'><method name='onProgressChanged' abstract='true' api_removed='4'><parameter name='seekBar' type='android.widget.SeekBar'/><parameter name='progress' type='int'/><parameter name='fromTouch' type='boolean'/><parameter name='fromUser' type='boolean'/></method><method name='onStartTrackingTouch' abstract='true'><parameter name='seekBar' type='android.widget.SeekBar'/></method><method name='onStopTrackingTouch' abstract='true'><parameter name='seekBar' type='android.widget.SeekBar'/></method><method api_added='4' name='onProgressChanged' abstract='true'><parameter name='seekBar' type='android.widget.SeekBar'/><parameter name='progress' type='int'/><parameter name='fromUser' type='boolean'/></method></interface><interface name='SimpleAdapter.ViewBinder' abstract='true' static='true'><method name='setViewValue' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='data' type='java.lang.Object'/><parameter name='textRepresentation' type='java.lang.String'/></method></interface><interface name='SimpleCursorAdapter.CursorToStringConverter' abstract='true' static='true'><method name='convertToString' abstract='true' return='java.lang.CharSequence'><parameter name='cursor' type='android.database.Cursor'/></method></interface><interface name='SimpleCursorAdapter.ViewBinder' abstract='true' static='true'><method name='setViewValue' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='columnIndex' type='int'/></method></interface><interface name='SpinnerAdapter' abstract='true'><implements name='android.widget.Adapter'/><method name='getDropDownView' abstract='true' return='android.view.View'><parameter name='position' type='int'/><parameter name='convertView' type='android.view.View'/><parameter name='parent' type='android.view.ViewGroup'/></method></interface><interface name='TabHost.OnTabChangeListener' abstract='true' static='true'><method name='onTabChanged' abstract='true'><parameter name='tabId' type='java.lang.String'/></method></interface><interface name='TabHost.TabContentFactory' abstract='true' static='true'><method name='createTabContent' abstract='true' return='android.view.View'><parameter name='tag' type='java.lang.String'/></method></interface><interface name='TimePicker.OnTimeChangedListener' abstract='true' static='true'><method name='onTimeChanged' abstract='true'><parameter name='view' type='android.widget.TimePicker'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/></method></interface><interface name='ViewSwitcher.ViewFactory' abstract='true' static='true'><method name='makeView' abstract='true' return='android.view.View'/></interface><interface name='WrapperListAdapter' abstract='true'><implements name='android.widget.ListAdapter'/><method name='getWrappedAdapter' abstract='true' return='android.widget.ListAdapter'/></interface><interface api_added='3' name='Chronometer.OnChronometerTickListener' abstract='true' static='true'><method api_added='3' name='onChronometerTick' abstract='true'><parameter name='chronometer' type='android.widget.Chronometer'/></method></interface><interface api_added='3' name='SectionIndexer' abstract='true'><method api_added='3' name='getPositionForSection' abstract='true' return='int'><parameter name='section' type='int'/></method><method api_added='3' name='getSectionForPosition' abstract='true' return='int'><parameter name='position' type='int'/></method><method api_added='3' name='getSections' abstract='true' return='java.lang.Object[]'/></interface><interface api_added='3' name='SlidingDrawer.OnDrawerCloseListener' abstract='true' static='true'><method api_added='3' name='onDrawerClosed' abstract='true'/></interface><interface api_added='3' name='SlidingDrawer.OnDrawerOpenListener' abstract='true' static='true'><method api_added='3' name='onDrawerOpened' abstract='true'/></interface><interface api_added='3' name='SlidingDrawer.OnDrawerScrollListener' abstract='true' static='true'><method api_added='3' name='onScrollEnded' abstract='true'/><method api_added='3' name='onScrollStarted' abstract='true'/></interface><interface api_added='3' name='TextView.OnEditorActionListener' abstract='true' static='true'><method api_added='3' name='onEditorAction' abstract='true' return='boolean'><parameter name='v' type='android.widget.TextView'/><parameter name='actionId' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method></interface><interface api_added='4' name='ZoomButtonsController.OnZoomListener' abstract='true' static='true'><method api_added='4' name='onVisibilityChanged' abstract='true'><parameter name='visible' type='boolean'/></method><method api_added='4' name='onZoom' abstract='true'><parameter name='zoomIn' type='boolean'/></method></interface><interface api_added='5' name='SimpleCursorTreeAdapter.ViewBinder' abstract='true' static='true'><method api_added='5' name='setViewValue' abstract='true' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='cursor' type='android.database.Cursor'/><parameter name='columnIndex' type='int'/></method></interface><interface api_added='8' name='HeterogeneousExpandableList' abstract='true'><method api_added='8' name='getChildType' abstract='true' return='int'><parameter name='groupPosition' type='int'/><parameter name='childPosition' type='int'/></method><method api_added='8' name='getChildTypeCount' abstract='true' return='int'/><method api_added='8' name='getGroupType' abstract='true' return='int'><parameter name='groupPosition' type='int'/></method><method api_added='8' name='getGroupTypeCount' abstract='true' return='int'/></interface></package><package name='com.android.internal.util'><interface name='Predicate' abstract='true'><method name='apply' abstract='true' return='boolean'><parameter name='t' type='T'/><parameter name='arg0' type='T'/></method></interface></package><package name='dalvik.annotation'><class name='TestTarget' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='TestTargetClass' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class></package><package name='dalvik.bytecode'><interface name='Opcodes' abstract='true'><field name='OP_ADD_DOUBLE' final='true' static='true' value='171' type='int'/><field name='OP_ADD_DOUBLE_2ADDR' final='true' static='true' value='203' type='int'/><field name='OP_ADD_FLOAT' final='true' static='true' value='166' type='int'/><field name='OP_ADD_FLOAT_2ADDR' final='true' static='true' value='198' type='int'/><field name='OP_ADD_INT' final='true' static='true' value='144' type='int'/><field name='OP_ADD_INT_2ADDR' final='true' static='true' value='176' type='int'/><field name='OP_ADD_INT_LIT16' final='true' static='true' value='208' type='int'/><field name='OP_ADD_INT_LIT8' final='true' static='true' value='216' type='int'/><field name='OP_ADD_LONG' final='true' static='true' value='155' type='int'/><field name='OP_ADD_LONG_2ADDR' final='true' static='true' value='187' type='int'/><field name='OP_AGET' final='true' static='true' value='68' type='int'/><field name='OP_AGET_BOOLEAN' final='true' static='true' value='71' type='int'/><field name='OP_AGET_BYTE' final='true' static='true' value='72' type='int'/><field name='OP_AGET_CHAR' final='true' static='true' value='73' type='int'/><field name='OP_AGET_OBJECT' final='true' static='true' value='70' type='int'/><field name='OP_AGET_SHORT' final='true' static='true' value='74' type='int'/><field name='OP_AGET_WIDE' final='true' static='true' value='69' type='int'/><field name='OP_AND_INT' final='true' static='true' value='149' type='int'/><field name='OP_AND_INT_2ADDR' final='true' static='true' value='181' type='int'/><field name='OP_AND_INT_LIT16' final='true' static='true' value='213' type='int'/><field name='OP_AND_INT_LIT8' final='true' static='true' value='221' type='int'/><field name='OP_AND_LONG' final='true' static='true' value='160' type='int'/><field name='OP_AND_LONG_2ADDR' final='true' static='true' value='192' type='int'/><field name='OP_APUT' final='true' static='true' value='75' type='int'/><field name='OP_APUT_BOOLEAN' final='true' static='true' value='78' type='int'/><field name='OP_APUT_BYTE' final='true' static='true' value='79' type='int'/><field name='OP_APUT_CHAR' final='true' static='true' value='80' type='int'/><field name='OP_APUT_OBJECT' final='true' static='true' value='77' type='int'/><field name='OP_APUT_SHORT' final='true' static='true' value='81' type='int'/><field name='OP_APUT_WIDE' final='true' static='true' value='76' type='int'/><field name='OP_ARRAY_LENGTH' final='true' static='true' value='33' type='int'/><field name='OP_CHECK_CAST' final='true' static='true' value='31' type='int'/><field name='OP_CMPG_DOUBLE' final='true' static='true' value='48' type='int'/><field name='OP_CMPG_FLOAT' final='true' static='true' value='46' type='int'/><field name='OP_CMPL_DOUBLE' final='true' static='true' value='47' type='int'/><field name='OP_CMPL_FLOAT' final='true' static='true' value='45' type='int'/><field name='OP_CMP_LONG' final='true' static='true' value='49' type='int'/><field name='OP_CONST' final='true' static='true' value='20' type='int'/><field name='OP_CONST_16' final='true' static='true' value='19' type='int'/><field name='OP_CONST_4' final='true' static='true' value='18' type='int'/><field name='OP_CONST_CLASS' final='true' static='true' value='28' type='int'/><field name='OP_CONST_HIGH16' final='true' static='true' value='21' type='int'/><field name='OP_CONST_STRING' final='true' static='true' value='26' type='int'/><field name='OP_CONST_STRING_JUMBO' final='true' static='true' value='27' type='int'/><field name='OP_CONST_WIDE' final='true' static='true' value='24' type='int'/><field name='OP_CONST_WIDE_16' final='true' static='true' value='22' type='int'/><field name='OP_CONST_WIDE_32' final='true' static='true' value='23' type='int'/><field name='OP_CONST_WIDE_HIGH16' final='true' static='true' value='25' type='int'/><field name='OP_DIV_DOUBLE' final='true' static='true' value='174' type='int'/><field name='OP_DIV_DOUBLE_2ADDR' final='true' static='true' value='206' type='int'/><field name='OP_DIV_FLOAT' final='true' static='true' value='169' type='int'/><field name='OP_DIV_FLOAT_2ADDR' final='true' static='true' value='201' type='int'/><field name='OP_DIV_INT' final='true' static='true' value='147' type='int'/><field name='OP_DIV_INT_2ADDR' final='true' static='true' value='179' type='int'/><field name='OP_DIV_INT_LIT16' final='true' static='true' value='211' type='int'/><field name='OP_DIV_INT_LIT8' final='true' static='true' value='219' type='int'/><field name='OP_DIV_LONG' final='true' static='true' value='158' type='int'/><field name='OP_DIV_LONG_2ADDR' final='true' static='true' value='190' type='int'/><field name='OP_DOUBLE_TO_FLOAT' final='true' static='true' value='140' type='int'/><field name='OP_DOUBLE_TO_INT' final='true' static='true' value='138' type='int'/><field name='OP_DOUBLE_TO_LONG' final='true' static='true' value='139' type='int'/><field name='OP_EXECUTE_INLINE' final='true' static='true' value='238' type='int'/><field name='OP_FILLED_NEW_ARRAY' final='true' static='true' value='36' type='int'/><field name='OP_FILLED_NEW_ARRAY_RANGE' final='true' static='true' value='37' type='int'/><field name='OP_FILL_ARRAY_DATA' final='true' static='true' value='38' type='int'/><field name='OP_FLOAT_TO_DOUBLE' final='true' static='true' value='137' type='int'/><field name='OP_FLOAT_TO_INT' final='true' static='true' value='135' type='int'/><field name='OP_FLOAT_TO_LONG' final='true' static='true' value='136' type='int'/><field name='OP_GOTO' final='true' static='true' value='40' type='int'/><field name='OP_GOTO_16' final='true' static='true' value='41' type='int'/><field name='OP_GOTO_32' final='true' static='true' value='42' type='int'/><field name='OP_IF_EQ' final='true' static='true' value='50' type='int'/><field name='OP_IF_EQZ' final='true' static='true' value='56' type='int'/><field name='OP_IF_GE' final='true' static='true' value='53' type='int'/><field name='OP_IF_GEZ' final='true' static='true' value='59' type='int'/><field name='OP_IF_GT' final='true' static='true' value='54' type='int'/><field name='OP_IF_GTZ' final='true' static='true' value='60' type='int'/><field name='OP_IF_LE' final='true' static='true' value='55' type='int'/><field name='OP_IF_LEZ' final='true' static='true' value='61' type='int'/><field name='OP_IF_LT' final='true' static='true' value='52' type='int'/><field name='OP_IF_LTZ' final='true' static='true' value='58' type='int'/><field name='OP_IF_NE' final='true' static='true' value='51' type='int'/><field name='OP_IF_NEZ' final='true' static='true' value='57' type='int'/><field name='OP_IGET' final='true' static='true' value='82' type='int'/><field name='OP_IGET_BOOLEAN' final='true' static='true' value='85' type='int'/><field name='OP_IGET_BYTE' final='true' static='true' value='86' type='int'/><field name='OP_IGET_CHAR' final='true' static='true' value='87' type='int'/><field name='OP_IGET_OBJECT' final='true' static='true' value='84' type='int'/><field name='OP_IGET_OBJECT_QUICK' final='true' static='true' value='244' type='int'/><field name='OP_IGET_QUICK' final='true' static='true' value='242' type='int'/><field name='OP_IGET_SHORT' final='true' static='true' value='88' type='int'/><field name='OP_IGET_WIDE' final='true' static='true' value='83' type='int'/><field name='OP_IGET_WIDE_QUICK' final='true' static='true' value='243' type='int'/><field name='OP_INSTANCE_OF' final='true' static='true' value='32' type='int'/><field name='OP_INT_TO_BYTE' final='true' static='true' value='141' type='int'/><field name='OP_INT_TO_CHAR' final='true' static='true' value='142' type='int'/><field name='OP_INT_TO_DOUBLE' final='true' static='true' value='131' type='int'/><field name='OP_INT_TO_FLOAT' final='true' static='true' value='130' type='int'/><field name='OP_INT_TO_LONG' final='true' static='true' value='129' type='int'/><field name='OP_INT_TO_SHORT' final='true' static='true' value='143' type='int'/><field name='OP_INVOKE_DIRECT' final='true' static='true' value='112' type='int'/><field name='OP_INVOKE_DIRECT_EMPTY' final='true' static='true' value='240' type='int'/><field name='OP_INVOKE_DIRECT_RANGE' final='true' static='true' value='118' type='int'/><field name='OP_INVOKE_INTERFACE' final='true' static='true' value='114' type='int'/><field name='OP_INVOKE_INTERFACE_RANGE' final='true' static='true' value='120' type='int'/><field name='OP_INVOKE_STATIC' final='true' static='true' value='113' type='int'/><field name='OP_INVOKE_STATIC_RANGE' final='true' static='true' value='119' type='int'/><field name='OP_INVOKE_SUPER' final='true' static='true' value='111' type='int'/><field name='OP_INVOKE_SUPER_QUICK' final='true' static='true' value='250' type='int'/><field name='OP_INVOKE_SUPER_QUICK_RANGE' final='true' static='true' value='251' type='int'/><field name='OP_INVOKE_SUPER_RANGE' final='true' static='true' value='117' type='int'/><field name='OP_INVOKE_VIRTUAL' final='true' static='true' value='110' type='int'/><field name='OP_INVOKE_VIRTUAL_QUICK' final='true' static='true' value='248' type='int'/><field name='OP_INVOKE_VIRTUAL_QUICK_RANGE' final='true' static='true' value='249' type='int'/><field name='OP_INVOKE_VIRTUAL_RANGE' final='true' static='true' value='116' type='int'/><field name='OP_IPUT' final='true' static='true' value='89' type='int'/><field name='OP_IPUT_BOOLEAN' final='true' static='true' value='92' type='int'/><field name='OP_IPUT_BYTE' final='true' static='true' value='93' type='int'/><field name='OP_IPUT_CHAR' final='true' static='true' value='94' type='int'/><field name='OP_IPUT_OBJECT' final='true' static='true' value='91' type='int'/><field name='OP_IPUT_OBJECT_QUICK' final='true' static='true' value='247' type='int'/><field name='OP_IPUT_QUICK' final='true' static='true' value='245' type='int'/><field name='OP_IPUT_SHORT' final='true' static='true' value='95' type='int'/><field name='OP_IPUT_WIDE' final='true' static='true' value='90' type='int'/><field name='OP_IPUT_WIDE_QUICK' final='true' static='true' value='246' type='int'/><field name='OP_LONG_TO_DOUBLE' final='true' static='true' value='134' type='int'/><field name='OP_LONG_TO_FLOAT' final='true' static='true' value='133' type='int'/><field name='OP_LONG_TO_INT' final='true' static='true' value='132' type='int'/><field name='OP_MONITOR_ENTER' final='true' static='true' value='29' type='int'/><field name='OP_MONITOR_EXIT' final='true' static='true' value='30' type='int'/><field name='OP_MOVE' final='true' static='true' value='1' type='int'/><field name='OP_MOVE_16' final='true' static='true' value='3' type='int'/><field name='OP_MOVE_EXCEPTION' final='true' static='true' value='13' type='int'/><field name='OP_MOVE_FROM16' final='true' static='true' value='2' type='int'/><field name='OP_MOVE_OBJECT' final='true' static='true' value='7' type='int'/><field name='OP_MOVE_OBJECT_16' final='true' static='true' value='9' type='int'/><field name='OP_MOVE_OBJECT_FROM16' final='true' static='true' value='8' type='int'/><field name='OP_MOVE_RESULT' final='true' static='true' value='10' type='int'/><field name='OP_MOVE_RESULT_OBJECT' final='true' static='true' value='12' type='int'/><field name='OP_MOVE_RESULT_WIDE' final='true' static='true' value='11' type='int'/><field name='OP_MOVE_WIDE' final='true' static='true' value='4' type='int'/><field name='OP_MOVE_WIDE_16' final='true' static='true' value='6' type='int'/><field name='OP_MOVE_WIDE_FROM16' final='true' static='true' value='5' type='int'/><field name='OP_MUL_DOUBLE' final='true' static='true' value='173' type='int'/><field name='OP_MUL_DOUBLE_2ADDR' final='true' static='true' value='205' type='int'/><field name='OP_MUL_FLOAT' final='true' static='true' value='168' type='int'/><field name='OP_MUL_FLOAT_2ADDR' final='true' static='true' value='200' type='int'/><field name='OP_MUL_INT' final='true' static='true' value='146' type='int'/><field name='OP_MUL_INT_2ADDR' final='true' static='true' value='178' type='int'/><field name='OP_MUL_INT_LIT16' final='true' static='true' value='210' type='int'/><field name='OP_MUL_INT_LIT8' final='true' static='true' value='218' type='int'/><field name='OP_MUL_LONG' final='true' static='true' value='157' type='int'/><field name='OP_MUL_LONG_2ADDR' final='true' static='true' value='189' type='int'/><field name='OP_NEG_DOUBLE' final='true' static='true' value='128' type='int'/><field name='OP_NEG_FLOAT' final='true' static='true' value='127' type='int'/><field name='OP_NEG_INT' final='true' static='true' value='123' type='int'/><field name='OP_NEG_LONG' final='true' static='true' value='125' type='int'/><field name='OP_NEW_ARRAY' final='true' static='true' value='35' type='int'/><field name='OP_NEW_INSTANCE' final='true' static='true' value='34' type='int'/><field name='OP_NOP' final='true' static='true' value='0' type='int'/><field name='OP_NOT_INT' final='true' static='true' value='124' type='int'/><field name='OP_NOT_LONG' final='true' static='true' value='126' type='int'/><field name='OP_OR_INT' final='true' static='true' value='150' type='int'/><field name='OP_OR_INT_2ADDR' final='true' static='true' value='182' type='int'/><field name='OP_OR_INT_LIT16' final='true' static='true' value='214' type='int'/><field name='OP_OR_INT_LIT8' final='true' static='true' value='222' type='int'/><field name='OP_OR_LONG' final='true' static='true' value='161' type='int'/><field name='OP_OR_LONG_2ADDR' final='true' static='true' value='193' type='int'/><field name='OP_PACKED_SWITCH' final='true' static='true' value='43' type='int'/><field name='OP_REM_DOUBLE' final='true' static='true' value='175' type='int'/><field name='OP_REM_DOUBLE_2ADDR' final='true' static='true' value='207' type='int'/><field name='OP_REM_FLOAT' final='true' static='true' value='170' type='int'/><field name='OP_REM_FLOAT_2ADDR' final='true' static='true' value='202' type='int'/><field name='OP_REM_INT' final='true' static='true' value='148' type='int'/><field name='OP_REM_INT_2ADDR' final='true' static='true' value='180' type='int'/><field name='OP_REM_INT_LIT16' final='true' static='true' value='212' type='int'/><field name='OP_REM_INT_LIT8' final='true' static='true' value='220' type='int'/><field name='OP_REM_LONG' final='true' static='true' value='159' type='int'/><field name='OP_REM_LONG_2ADDR' final='true' static='true' value='191' type='int'/><field name='OP_RETURN' final='true' static='true' value='15' type='int'/><field name='OP_RETURN_OBJECT' final='true' static='true' value='17' type='int'/><field name='OP_RETURN_VOID' final='true' static='true' value='14' type='int'/><field name='OP_RETURN_WIDE' final='true' static='true' value='16' type='int'/><field name='OP_RSUB_INT' final='true' static='true' value='209' type='int'/><field name='OP_RSUB_INT_LIT8' final='true' static='true' value='217' type='int'/><field name='OP_SGET' final='true' static='true' value='96' type='int'/><field name='OP_SGET_BOOLEAN' final='true' static='true' value='99' type='int'/><field name='OP_SGET_BYTE' final='true' static='true' value='100' type='int'/><field name='OP_SGET_CHAR' final='true' static='true' value='101' type='int'/><field name='OP_SGET_OBJECT' final='true' static='true' value='98' type='int'/><field name='OP_SGET_SHORT' final='true' static='true' value='102' type='int'/><field name='OP_SGET_WIDE' final='true' static='true' value='97' type='int'/><field name='OP_SHL_INT' final='true' static='true' value='152' type='int'/><field name='OP_SHL_INT_2ADDR' final='true' static='true' value='184' type='int'/><field name='OP_SHL_INT_LIT8' final='true' static='true' value='224' type='int'/><field name='OP_SHL_LONG' final='true' static='true' value='163' type='int'/><field name='OP_SHL_LONG_2ADDR' final='true' static='true' value='195' type='int'/><field name='OP_SHR_INT' final='true' static='true' value='153' type='int'/><field name='OP_SHR_INT_2ADDR' final='true' static='true' value='185' type='int'/><field name='OP_SHR_INT_LIT8' final='true' static='true' value='225' type='int'/><field name='OP_SHR_LONG' final='true' static='true' value='164' type='int'/><field name='OP_SHR_LONG_2ADDR' final='true' static='true' value='196' type='int'/><field name='OP_SPARSE_SWITCH' final='true' static='true' value='44' type='int'/><field name='OP_SPUT' final='true' static='true' value='103' type='int'/><field name='OP_SPUT_BOOLEAN' final='true' static='true' value='106' type='int'/><field name='OP_SPUT_BYTE' final='true' static='true' value='107' type='int'/><field name='OP_SPUT_CHAR' final='true' static='true' value='108' type='int'/><field name='OP_SPUT_OBJECT' final='true' static='true' value='105' type='int'/><field name='OP_SPUT_SHORT' final='true' static='true' value='109' type='int'/><field name='OP_SPUT_WIDE' final='true' static='true' value='104' type='int'/><field name='OP_SUB_DOUBLE' final='true' static='true' value='172' type='int'/><field name='OP_SUB_DOUBLE_2ADDR' final='true' static='true' value='204' type='int'/><field name='OP_SUB_FLOAT' final='true' static='true' value='167' type='int'/><field name='OP_SUB_FLOAT_2ADDR' final='true' static='true' value='199' type='int'/><field name='OP_SUB_INT' final='true' static='true' value='145' type='int'/><field name='OP_SUB_INT_2ADDR' final='true' static='true' value='177' type='int'/><field name='OP_SUB_LONG' final='true' static='true' value='156' type='int'/><field name='OP_SUB_LONG_2ADDR' final='true' static='true' value='188' type='int'/><field name='OP_THROW' final='true' static='true' value='39' type='int'/><field name='OP_UNUSED_3e' final='true' api_removed='8' static='true' value='62' type='int'/><field name='OP_UNUSED_3f' final='true' api_removed='8' static='true' value='63' type='int'/><field name='OP_UNUSED_40' final='true' api_removed='8' static='true' value='64' type='int'/><field name='OP_UNUSED_41' final='true' api_removed='8' static='true' value='65' type='int'/><field name='OP_UNUSED_42' final='true' api_removed='8' static='true' value='66' type='int'/><field name='OP_UNUSED_43' final='true' api_removed='8' static='true' value='67' type='int'/><field name='OP_UNUSED_73' final='true' api_removed='8' static='true' value='115' type='int'/><field name='OP_UNUSED_79' final='true' api_removed='8' static='true' value='121' type='int'/><field name='OP_UNUSED_7A' final='true' api_removed='8' static='true' value='122' type='int'/><field name='OP_UNUSED_E3' final='true' api_removed='8' static='true' value='227' type='int'/><field name='OP_UNUSED_E4' final='true' api_removed='8' static='true' value='228' type='int'/><field name='OP_UNUSED_E5' final='true' api_removed='8' static='true' value='229' type='int'/><field name='OP_UNUSED_E6' final='true' api_removed='8' static='true' value='230' type='int'/><field name='OP_UNUSED_E7' final='true' api_removed='8' static='true' value='231' type='int'/><field name='OP_UNUSED_E8' final='true' api_removed='8' static='true' value='232' type='int'/><field name='OP_UNUSED_E9' final='true' api_removed='8' static='true' value='233' type='int'/><field name='OP_UNUSED_EA' final='true' api_removed='8' static='true' value='234' type='int'/><field name='OP_UNUSED_EB' final='true' api_removed='8' static='true' value='235' type='int'/><field name='OP_UNUSED_EC' final='true' api_removed='8' static='true' value='236' type='int'/><field name='OP_UNUSED_ED' final='true' api_removed='8' static='true' value='237' type='int'/><field name='OP_UNUSED_EF' final='true' api_removed='8' static='true' value='239' type='int'/><field name='OP_UNUSED_F1' final='true' api_removed='8' static='true' value='241' type='int'/><field name='OP_UNUSED_FC' final='true' api_removed='8' static='true' value='252' type='int'/><field name='OP_UNUSED_FD' final='true' api_removed='8' static='true' value='253' type='int'/><field name='OP_UNUSED_FE' final='true' api_removed='8' static='true' value='254' type='int'/><field name='OP_UNUSED_FF' final='true' api_removed='8' static='true' value='255' type='int'/><field name='OP_USHR_INT' final='true' static='true' value='154' type='int'/><field name='OP_USHR_INT_2ADDR' final='true' static='true' value='186' type='int'/><field name='OP_USHR_INT_LIT8' final='true' static='true' value='226' type='int'/><field name='OP_USHR_LONG' final='true' static='true' value='165' type='int'/><field name='OP_USHR_LONG_2ADDR' final='true' static='true' value='197' type='int'/><field name='OP_XOR_INT' final='true' static='true' value='151' type='int'/><field name='OP_XOR_INT_2ADDR' final='true' static='true' value='183' type='int'/><field name='OP_XOR_INT_LIT16' final='true' static='true' value='215' type='int'/><field name='OP_XOR_INT_LIT8' final='true' static='true' value='223' type='int'/><field name='OP_XOR_LONG' final='true' static='true' value='162' type='int'/><field name='OP_XOR_LONG_2ADDR' final='true' static='true' value='194' type='int'/><field api_added='8' name='OP_BREAKPOINT' final='true' static='true' value='236' type='int'/><field api_added='8' name='OP_EXECUTE_INLINE_RANGE' final='true' static='true' value='239' type='int'/><field api_added='8' name='OP_THROW_VERIFICATION_ERROR' final='true' static='true' value='237' type='int'/></interface></package><package name='dalvik.system'><class name='AllocationLimitError' extends='java.lang.VirtualMachineError' deprecated='5'><constructor name='AllocationLimitError' type='dalvik.system.AllocationLimitError'/><constructor name='AllocationLimitError' type='dalvik.system.AllocationLimitError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='DexFile' final='true' extends='java.lang.Object'><constructor name='DexFile' type='dalvik.system.DexFile'><parameter name='file' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='DexFile' type='dalvik.system.DexFile'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='entries' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='getName' return='java.lang.String'/><method name='isDexOptNeeded' native='true' static='true' return='boolean'><parameter name='fileName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='loadClass' return='java.lang.Class'><parameter name='name' type='java.lang.String'/><parameter name='loader' type='java.lang.ClassLoader'/></method><method api_added='3' name='loadDex' static='true' return='dalvik.system.DexFile'><parameter name='sourcePathName' type='java.lang.String'/><parameter name='outputPathName' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PathClassLoader' extends='java.lang.ClassLoader'><constructor name='PathClassLoader' type='dalvik.system.PathClassLoader'><parameter name='path' type='java.lang.String'/><parameter name='parent' type='java.lang.ClassLoader'/></constructor><constructor name='PathClassLoader' type='dalvik.system.PathClassLoader'><parameter name='path' type='java.lang.String'/><parameter name='libPath' type='java.lang.String'/><parameter name='parent' type='java.lang.ClassLoader'/></constructor></class><class name='PotentialDeadlockError' extends='java.lang.VirtualMachineError' deprecated='5'><constructor name='PotentialDeadlockError' type='dalvik.system.PotentialDeadlockError'/><constructor name='PotentialDeadlockError' type='dalvik.system.PotentialDeadlockError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='StaleDexCacheError' extends='java.lang.VirtualMachineError' deprecated='5'><constructor name='StaleDexCacheError' type='dalvik.system.StaleDexCacheError'/><constructor name='StaleDexCacheError' type='dalvik.system.StaleDexCacheError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='TemporaryDirectory' extends='java.lang.Object' deprecated='5'><constructor name='TemporaryDirectory' type='dalvik.system.TemporaryDirectory'/><method name='setUpDirectory' static='true'><parameter name='baseDir' type='java.lang.String'/></method><method name='setUpDirectory' synchronized='true' static='true'><parameter name='baseDir' type='java.io.File'/></method></class><class name='TouchDex' extends='java.lang.Object' deprecated='5'><constructor name='TouchDex' type='dalvik.system.TouchDex'/><method name='main' static='true'><parameter name='args' type='java.lang.String[]'/></method><method name='start' static='true' return='int'><parameter name='dexFiles' type='java.lang.String'/></method></class><class name='VMDebug' final='true' extends='java.lang.Object' deprecated='5'><field name='DEFAULT_METHOD_TRACE_FILE_NAME' final='true' static='true' value='&quot;/sdcard/dmtrace.trace&quot;' type='java.lang.String' deprecated='8'/><field name='KIND_ALL_COUNTS' final='true' static='true' value='-1' type='int'/><field name='KIND_GLOBAL_ALLOCATED_BYTES' final='true' static='true' value='2' type='int'/><field name='KIND_GLOBAL_ALLOCATED_OBJECTS' final='true' static='true' value='1' type='int'/><field name='KIND_GLOBAL_EXT_ALLOCATED_BYTES' final='true' static='true' value='8192' type='int'/><field name='KIND_GLOBAL_EXT_ALLOCATED_OBJECTS' final='true' static='true' value='4096' type='int'/><field name='KIND_GLOBAL_EXT_FREED_BYTES' final='true' static='true' value='32768' type='int'/><field name='KIND_GLOBAL_EXT_FREED_OBJECTS' final='true' static='true' value='16384' type='int'/><field name='KIND_GLOBAL_FREED_BYTES' final='true' static='true' value='8' type='int'/><field name='KIND_GLOBAL_FREED_OBJECTS' final='true' static='true' value='4' type='int'/><field name='KIND_GLOBAL_GC_INVOCATIONS' final='true' static='true' value='16' type='int'/><field name='KIND_THREAD_ALLOCATED_BYTES' final='true' static='true' value='131072' type='int'/><field name='KIND_THREAD_ALLOCATED_OBJECTS' final='true' static='true' value='65536' type='int'/><field name='KIND_THREAD_EXT_ALLOCATED_BYTES' final='true' static='true' value='536870912' type='int'/><field name='KIND_THREAD_EXT_ALLOCATED_OBJECTS' final='true' static='true' value='268435456' type='int'/><field name='KIND_THREAD_EXT_FREED_BYTES' final='true' static='true' value='-2147483648' type='int'/><field name='KIND_THREAD_EXT_FREED_OBJECTS' final='true' static='true' value='1073741824' type='int'/><field name='KIND_THREAD_FREED_BYTES' final='true' static='true' value='524288' type='int'/><field name='KIND_THREAD_FREED_OBJECTS' final='true' static='true' value='262144' type='int'/><field name='KIND_THREAD_GC_INVOCATIONS' final='true' static='true' value='1048576' type='int'/><field name='TRACE_COUNT_ALLOCS' final='true' static='true' value='1' type='int'/><field api_added='8' name='KIND_GLOBAL_CLASS_INIT_COUNT' final='true' static='true' value='32' type='int'/><field api_added='8' name='KIND_GLOBAL_CLASS_INIT_TIME' final='true' static='true' value='64' type='int'/><field api_added='8' name='KIND_THREAD_CLASS_INIT_COUNT' final='true' static='true' value='2097152' type='int'/><field api_added='8' name='KIND_THREAD_CLASS_INIT_TIME' final='true' static='true' value='4194304' type='int'/><method name='getAllocCount' native='true' static='true' return='int'><parameter name='kind' type='int'/></method><method name='getInstructionCount' native='true' static='true'><parameter name='counts' type='int[]'/></method><method name='getLoadedClassCount' native='true' static='true' return='int'/><method name='isDebuggerConnected' native='true' static='true' return='boolean'/><method name='lastDebuggerActivity' native='true' static='true' return='long'/><method name='printLoadedClasses' native='true' static='true'><parameter name='flags' type='int'/></method><method name='resetAllocCount' native='true' static='true'><parameter name='kinds' type='int'/></method><method name='resetInstructionCount' native='true' static='true'/><method name='setAllocationLimit' native='true' static='true' return='int'><parameter name='limit' type='int'/></method><method name='setGlobalAllocationLimit' native='true' static='true' return='int'><parameter name='limit' type='int'/></method><method name='startAllocCounting' native='true' static='true'/><method name='startEmulatorTracing' native='true' static='true'/><method name='startInstructionCounting' native='true' static='true'/><method name='startMethodTracing' static='true' deprecated='8'/><method name='startMethodTracing' native='true' static='true'><parameter name='traceFileName' type='java.lang.String'/><parameter name='bufferSize' type='int'/><parameter name='flags' type='int'/></method><method name='stopAllocCounting' native='true' static='true'/><method name='stopEmulatorTracing' native='true' static='true'/><method name='stopInstructionCounting' native='true' static='true'/><method name='stopMethodTracing' native='true' static='true'/><method name='threadCpuTimeNanos' native='true' static='true' return='long'/><method api_added='3' name='dumpHprofData' native='true' static='true'><parameter name='fileName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='3' name='isDebuggingEnabled' native='true' static='true' return='boolean'/></class><class name='VMRuntime' final='true' extends='java.lang.Object' deprecated='5'><method name='gcSoftReferences' native='true'/><method name='getExternalBytesAllocated' native='true' return='long'/><method name='getMinimumHeapSize' return='long'/><method name='getRuntime' static='true' return='dalvik.system.VMRuntime'/><method name='getTargetHeapUtilization' native='true' return='float'/><method name='runFinalizationSync' native='true'/><method name='setMinimumHeapSize' synchronized='true' return='long'><parameter name='size' type='long'/></method><method name='setTargetHeapUtilization' return='float'><parameter name='newTarget' type='float'/></method></class><class name='VMStack' final='true' extends='java.lang.Object' deprecated='5'><constructor name='VMStack' type='dalvik.system.VMStack'/><method name='getCallingClassLoader' native='true' static='true' return='java.lang.ClassLoader'/><method name='getCallingClassLoader2' native='true' static='true' return='java.lang.ClassLoader'/><method name='getClasses' native='true' static='true' return='java.lang.Class&lt;?&gt;[]'><parameter name='maxDepth' type='int'/><parameter name='stopAtPrivileged' type='boolean'/></method><method name='getThreadStackTrace' native='true' static='true' return='java.lang.StackTraceElement[]'><parameter name='t' type='java.lang.Thread'/></method></class><class name='Zygote' extends='java.lang.Object' deprecated='5'><field api_added='3' name='DEBUG_ENABLE_ASSERT' final='true' static='true' value='4' type='int'/><field api_added='3' name='DEBUG_ENABLE_CHECKJNI' final='true' static='true' value='2' type='int'/><field api_added='3' name='DEBUG_ENABLE_DEBUGGER' final='true' static='true' value='1' type='int'/><field api_added='8' name='DEBUG_ENABLE_SAFEMODE' final='true' static='true' value='8' type='int'/><method name='fork' native='true' static='true' return='int'/><method name='forkAndSpecialize' native='true' static='true' deprecated='3' return='int'><parameter name='uid' type='int'/><parameter name='gid' type='int'/><parameter name='gids' type='int[]'/><parameter name='enableDebugger' type='boolean'/><parameter name='rlimits' type='int[][]'/></method><method name='forkSystemServer' native='true' static='true' deprecated='3' return='int'><parameter name='uid' type='int'/><parameter name='gid' type='int'/><parameter name='gids' type='int[]'/><parameter name='enableDebugger' type='boolean'/><parameter name='rlimits' type='int[][]'/></method><method api_added='3' name='forkAndSpecialize' native='true' static='true' return='int'><parameter name='uid' type='int'/><parameter name='gid' type='int'/><parameter name='gids' type='int[]'/><parameter name='debugFlags' type='int'/><parameter name='rlimits' type='int[][]'/></method><method api_added='3' name='forkSystemServer' native='true' static='true' return='int'><parameter name='uid' type='int'/><parameter name='gid' type='int'/><parameter name='gids' type='int[]'/><parameter name='debugFlags' type='int'/><parameter name='rlimits' type='int[][]'/></method></class><class api_added='3' name='DexClassLoader' extends='java.lang.ClassLoader'><constructor api_added='3' name='DexClassLoader' type='dalvik.system.DexClassLoader'><parameter name='dexPath' type='java.lang.String'/><parameter name='dexOutputDir' type='java.lang.String'/><parameter name='libPath' type='java.lang.String'/><parameter name='parent' type='java.lang.ClassLoader'/></constructor></class></package><package name='java.awt.font'><class name='NumericShaper' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><field name='ALL_RANGES' final='true' static='true' value='524287' type='int'/><field name='ARABIC' final='true' static='true' value='2' type='int'/><field name='BENGALI' final='true' static='true' value='16' type='int'/><field name='DEVANAGARI' final='true' static='true' value='8' type='int'/><field name='EASTERN_ARABIC' final='true' static='true' value='4' type='int'/><field name='ETHIOPIC' final='true' static='true' value='65536' type='int'/><field name='EUROPEAN' final='true' static='true' value='1' type='int'/><field name='GUJARATI' final='true' static='true' value='64' type='int'/><field name='GURMUKHI' final='true' static='true' value='32' type='int'/><field name='KANNADA' final='true' static='true' value='1024' type='int'/><field name='KHMER' final='true' static='true' value='131072' type='int'/><field name='LAO' final='true' static='true' value='8192' type='int'/><field name='MALAYALAM' final='true' static='true' value='2048' type='int'/><field name='MONGOLIAN' final='true' static='true' value='262144' type='int'/><field name='MYANMAR' final='true' static='true' value='32768' type='int'/><field name='ORIYA' final='true' static='true' value='128' type='int'/><field name='TAMIL' final='true' static='true' value='256' type='int'/><field name='TELUGU' final='true' static='true' value='512' type='int'/><field name='THAI' final='true' static='true' value='4096' type='int'/><field name='TIBETAN' final='true' static='true' value='16384' type='int'/><method name='getContextualShaper' static='true' return='java.awt.font.NumericShaper'><parameter name='ranges' type='int'/><parameter name='defaultContext' type='int'/></method><method name='getContextualShaper' static='true' return='java.awt.font.NumericShaper'><parameter name='ranges' type='int'/></method><method name='getRanges' return='int'/><method name='getShaper' static='true' return='java.awt.font.NumericShaper'><parameter name='singleRange' type='int'/></method><method name='isContextual' return='boolean'/><method name='shape'><parameter name='text' type='char[]'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='context' type='int'/></method><method name='shape'><parameter name='text' type='char[]'/><parameter name='start' type='int'/><parameter name='count' type='int'/></method></class><class name='TextAttribute' final='true' extends='java.text.AttributedCharacterIterator.Attribute'><constructor name='TextAttribute' type='java.awt.font.TextAttribute' visibility='protected'><parameter name='name' type='java.lang.String'/></constructor><field name='BACKGROUND' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='BIDI_EMBEDDING' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='CHAR_REPLACEMENT' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='FAMILY' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='FONT' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='FOREGROUND' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='INPUT_METHOD_HIGHLIGHT' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='INPUT_METHOD_UNDERLINE' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='JUSTIFICATION' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='JUSTIFICATION_FULL' final='true' static='true' type='java.lang.Float'/><field name='JUSTIFICATION_NONE' final='true' static='true' type='java.lang.Float'/><field name='NUMERIC_SHAPING' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='POSTURE' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='POSTURE_OBLIQUE' final='true' static='true' type='java.lang.Float'/><field name='POSTURE_REGULAR' final='true' static='true' type='java.lang.Float'/><field name='RUN_DIRECTION' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='RUN_DIRECTION_LTR' final='true' static='true' type='java.lang.Boolean'/><field name='RUN_DIRECTION_RTL' final='true' static='true' type='java.lang.Boolean'/><field name='SIZE' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='STRIKETHROUGH' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='STRIKETHROUGH_ON' final='true' static='true' type='java.lang.Boolean'/><field name='SUPERSCRIPT' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='SUPERSCRIPT_SUB' final='true' static='true' type='java.lang.Integer'/><field name='SUPERSCRIPT_SUPER' final='true' static='true' type='java.lang.Integer'/><field name='SWAP_COLORS' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='SWAP_COLORS_ON' final='true' static='true' type='java.lang.Boolean'/><field name='TRANSFORM' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='UNDERLINE' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='UNDERLINE_LOW_DASHED' final='true' static='true' type='java.lang.Integer'/><field name='UNDERLINE_LOW_DOTTED' final='true' static='true' type='java.lang.Integer'/><field name='UNDERLINE_LOW_GRAY' final='true' static='true' type='java.lang.Integer'/><field name='UNDERLINE_LOW_ONE_PIXEL' final='true' static='true' type='java.lang.Integer'/><field name='UNDERLINE_LOW_TWO_PIXEL' final='true' static='true' type='java.lang.Integer'/><field name='UNDERLINE_ON' final='true' static='true' type='java.lang.Integer'/><field name='WEIGHT' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='WEIGHT_BOLD' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_DEMIBOLD' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_DEMILIGHT' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_EXTRABOLD' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_EXTRA_LIGHT' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_HEAVY' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_LIGHT' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_MEDIUM' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_REGULAR' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_SEMIBOLD' final='true' static='true' type='java.lang.Float'/><field name='WEIGHT_ULTRABOLD' final='true' static='true' type='java.lang.Float'/><field name='WIDTH' final='true' static='true' type='java.awt.font.TextAttribute'/><field name='WIDTH_CONDENSED' final='true' static='true' type='java.lang.Float'/><field name='WIDTH_EXTENDED' final='true' static='true' type='java.lang.Float'/><field name='WIDTH_REGULAR' final='true' static='true' type='java.lang.Float'/><field name='WIDTH_SEMI_CONDENSED' final='true' static='true' type='java.lang.Float'/><field name='WIDTH_SEMI_EXTENDED' final='true' static='true' type='java.lang.Float'/></class></package><package name='java.io'><class name='BufferedInputStream' extends='java.io.FilterInputStream'><constructor name='BufferedInputStream' type='java.io.BufferedInputStream'><parameter name='in' type='java.io.InputStream'/></constructor><constructor name='BufferedInputStream' type='java.io.BufferedInputStream'><parameter name='in' type='java.io.InputStream'/><parameter name='size' type='int'/></constructor><field name='buf' value='null' type='byte[]' volatile='true' visibility='protected'/><field name='count' type='int' visibility='protected'/><field name='marklimit' type='int' visibility='protected'/><field name='markpos' type='int' visibility='protected'/><field name='pos' type='int' visibility='protected'/></class><class name='BufferedOutputStream' extends='java.io.FilterOutputStream'><constructor name='BufferedOutputStream' type='java.io.BufferedOutputStream'><parameter name='out' type='java.io.OutputStream'/></constructor><constructor name='BufferedOutputStream' type='java.io.BufferedOutputStream'><parameter name='out' type='java.io.OutputStream'/><parameter name='size' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='count' type='int' visibility='protected'/></class><class name='BufferedReader' extends='java.io.Reader'><constructor name='BufferedReader' type='java.io.BufferedReader'><parameter name='in' type='java.io.Reader'/></constructor><constructor name='BufferedReader' type='java.io.BufferedReader'><parameter name='in' type='java.io.Reader'/><parameter name='size' type='int'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method></class><class name='BufferedWriter' extends='java.io.Writer'><constructor name='BufferedWriter' type='java.io.BufferedWriter'><parameter name='out' type='java.io.Writer'/></constructor><constructor name='BufferedWriter' type='java.io.BufferedWriter'><parameter name='out' type='java.io.Writer'/><parameter name='size' type='int'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='newLine'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='cbuf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ByteArrayInputStream' extends='java.io.InputStream'><constructor name='ByteArrayInputStream' type='java.io.ByteArrayInputStream'><parameter name='buf' type='byte[]'/></constructor><constructor name='ByteArrayInputStream' type='java.io.ByteArrayInputStream'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='count' type='int' visibility='protected'/><field name='mark' type='int' visibility='protected'/><field name='pos' type='int' visibility='protected'/><method name='read' synchronized='true' return='int'/></class><class name='ByteArrayOutputStream' extends='java.io.OutputStream'><constructor name='ByteArrayOutputStream' type='java.io.ByteArrayOutputStream'/><constructor name='ByteArrayOutputStream' type='java.io.ByteArrayOutputStream'><parameter name='size' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='count' type='int' visibility='protected'/><method name='reset' synchronized='true'/><method name='size' return='int'/><method name='toByteArray' synchronized='true' return='byte[]'/><method name='toString' deprecated='1' return='java.lang.String'><parameter name='hibyte' type='int'/></method><method name='toString' return='java.lang.String'><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method><method name='write' synchronized='true'><parameter name='oneByte' type='int'/></method><method name='writeTo' synchronized='true'><parameter name='out' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='CharArrayReader' extends='java.io.Reader'><constructor name='CharArrayReader' type='java.io.CharArrayReader'><parameter name='buf' type='char[]'/></constructor><constructor name='CharArrayReader' type='java.io.CharArrayReader'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></constructor><field name='buf' value='null' type='char[]' visibility='protected'/><field name='count' type='int' visibility='protected'/><field name='markedPos' type='int' visibility='protected'/><field name='pos' type='int' visibility='protected'/><method name='close'/><method name='read' return='int'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='CharArrayWriter' extends='java.io.Writer'><constructor name='CharArrayWriter' type='java.io.CharArrayWriter'/><constructor name='CharArrayWriter' type='java.io.CharArrayWriter'><parameter name='initialSize' type='int'/></constructor><field name='buf' value='null' type='char[]' visibility='protected'/><field name='count' type='int' visibility='protected'/><method name='close'/><method name='flush'/><method name='reset'/><method name='size' return='int'/><method name='toCharArray' return='char[]'/><method name='write'><parameter name='c' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='writeTo'><parameter name='out' type='java.io.Writer'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='CharConversionException' extends='java.io.IOException'><constructor name='CharConversionException' type='java.io.CharConversionException'/><constructor name='CharConversionException' type='java.io.CharConversionException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='DataInputStream' extends='java.io.FilterInputStream'><implements name='java.io.DataInput'/><constructor name='DataInputStream' type='java.io.DataInputStream'><parameter name='in' type='java.io.InputStream'/></constructor><method name='read' final='true' return='int'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' return='int'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readBoolean' final='true' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='readByte' final='true' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='readChar' final='true' return='char'><exception name='IOException' type='java.io.IOException'/></method><method name='readDouble' final='true' return='double'><exception name='IOException' type='java.io.IOException'/></method><method name='readFloat' final='true' return='float'><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' final='true'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' final='true'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readInt' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' final='true' deprecated='1' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readLong' final='true' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='readShort' final='true' return='short'><exception name='IOException' type='java.io.IOException'/></method><method name='readUTF' final='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readUTF' final='true' static='true' return='java.lang.String'><parameter name='in' type='java.io.DataInput'/><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedByte' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedShort' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='skipBytes' final='true' return='int'><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DataOutputStream' extends='java.io.FilterOutputStream'><implements name='java.io.DataOutput'/><constructor name='DataOutputStream' type='java.io.DataOutputStream'><parameter name='out' type='java.io.OutputStream'/></constructor><field name='written' type='int' visibility='protected'/><method name='size' final='true' return='int'/><method name='writeBoolean' final='true'><parameter name='val' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeByte' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBytes' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChar' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChars' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeDouble' final='true'><parameter name='val' type='double'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeFloat' final='true'><parameter name='val' type='float'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeInt' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLong' final='true'><parameter name='val' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeShort' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeUTF' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='EOFException' extends='java.io.IOException'><constructor name='EOFException' type='java.io.EOFException'/><constructor name='EOFException' type='java.io.EOFException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='File' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='File' type='java.io.File'><parameter name='dir' type='java.io.File'/><parameter name='name' type='java.lang.String'/></constructor><constructor name='File' type='java.io.File'><parameter name='path' type='java.lang.String'/></constructor><constructor name='File' type='java.io.File'><parameter name='dirPath' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></constructor><constructor name='File' type='java.io.File'><parameter name='uri' type='java.net.URI'/></constructor><field name='pathSeparator' final='true' static='true' type='java.lang.String'/><field name='pathSeparatorChar' final='true' static='true' type='char'/><field name='separator' final='true' static='true' type='java.lang.String'/><field name='separatorChar' final='true' static='true' type='char'/><method name='canRead' return='boolean'/><method name='canWrite' return='boolean'/><method name='compareTo' return='int'><parameter name='another' type='java.io.File'/></method><method name='createNewFile' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='createTempFile' static='true' return='java.io.File'><parameter name='prefix' type='java.lang.String'/><parameter name='suffix' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='createTempFile' static='true' return='java.io.File'><parameter name='prefix' type='java.lang.String'/><parameter name='suffix' type='java.lang.String'/><parameter name='directory' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></method><method name='delete' return='boolean'/><method name='deleteOnExit'/><method name='exists' return='boolean'/><method name='getAbsoluteFile' return='java.io.File'/><method name='getAbsolutePath' return='java.lang.String'/><method name='getCanonicalFile' return='java.io.File'><exception name='IOException' type='java.io.IOException'/></method><method name='getCanonicalPath' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='getName' return='java.lang.String'/><method name='getParent' return='java.lang.String'/><method name='getParentFile' return='java.io.File'/><method name='getPath' return='java.lang.String'/><method name='isAbsolute' return='boolean'/><method name='isDirectory' return='boolean'/><method name='isFile' return='boolean'/><method name='isHidden' return='boolean'/><method name='lastModified' return='long'/><method name='length' return='long'/><method name='list' return='java.lang.String[]'/><method name='list' return='java.lang.String[]'><parameter name='filter' type='java.io.FilenameFilter'/></method><method name='listFiles' return='java.io.File[]'/><method name='listFiles' return='java.io.File[]'><parameter name='filter' type='java.io.FilenameFilter'/></method><method name='listFiles' return='java.io.File[]'><parameter name='filter' type='java.io.FileFilter'/></method><method name='listRoots' static='true' return='java.io.File[]'/><method name='mkdir' return='boolean'/><method name='mkdirs' return='boolean'/><method name='renameTo' return='boolean'><parameter name='dest' type='java.io.File'/></method><method name='setLastModified' return='boolean'><parameter name='time' type='long'/></method><method name='setReadOnly' return='boolean'/><method name='toURI' return='java.net.URI'/><method name='toURL' return='java.net.URL'><exception name='MalformedURLException' type='java.net.MalformedURLException'/></method></class><class name='FileDescriptor' final='true' extends='java.lang.Object'><constructor name='FileDescriptor' type='java.io.FileDescriptor'/><field name='err' final='true' static='true' type='java.io.FileDescriptor'/><field name='in' final='true' static='true' type='java.io.FileDescriptor'/><field name='out' final='true' static='true' type='java.io.FileDescriptor'/><method name='sync'><exception name='SyncFailedException' type='java.io.SyncFailedException'/></method><method name='valid' native='true' return='boolean'/></class><class name='FileInputStream' extends='java.io.InputStream'><implements name='java.io.Closeable'/><constructor name='FileInputStream' type='java.io.FileInputStream'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='FileInputStream' type='java.io.FileInputStream'><parameter name='fd' type='java.io.FileDescriptor'/></constructor><constructor name='FileInputStream' type='java.io.FileInputStream'><parameter name='fileName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><method name='getChannel' return='java.nio.channels.FileChannel'/><method name='getFD' final='true' return='java.io.FileDescriptor'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='FileNotFoundException' extends='java.io.IOException'><constructor name='FileNotFoundException' type='java.io.FileNotFoundException'/><constructor name='FileNotFoundException' type='java.io.FileNotFoundException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='FileOutputStream' extends='java.io.OutputStream'><implements name='java.io.Closeable'/><constructor name='FileOutputStream' type='java.io.FileOutputStream'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='FileOutputStream' type='java.io.FileOutputStream'><parameter name='file' type='java.io.File'/><parameter name='append' type='boolean'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='FileOutputStream' type='java.io.FileOutputStream'><parameter name='fd' type='java.io.FileDescriptor'/></constructor><constructor name='FileOutputStream' type='java.io.FileOutputStream'><parameter name='filename' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='FileOutputStream' type='java.io.FileOutputStream'><parameter name='filename' type='java.lang.String'/><parameter name='append' type='boolean'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><method name='getChannel' return='java.nio.channels.FileChannel'/><method name='getFD' final='true' return='java.io.FileDescriptor'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FilePermission' final='true' extends='java.security.Permission'><implements name='java.io.Serializable'/><constructor name='FilePermission' type='java.io.FilePermission'><parameter name='path' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor><method name='equals' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='p' type='java.security.Permission'/></method></class><class name='FileReader' extends='java.io.InputStreamReader'><constructor name='FileReader' type='java.io.FileReader'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='FileReader' type='java.io.FileReader'><parameter name='fd' type='java.io.FileDescriptor'/></constructor><constructor name='FileReader' type='java.io.FileReader'><parameter name='filename' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor></class><class name='FileWriter' extends='java.io.OutputStreamWriter'><constructor name='FileWriter' type='java.io.FileWriter'><parameter name='file' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileWriter' type='java.io.FileWriter'><parameter name='file' type='java.io.File'/><parameter name='append' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileWriter' type='java.io.FileWriter'><parameter name='fd' type='java.io.FileDescriptor'/></constructor><constructor name='FileWriter' type='java.io.FileWriter'><parameter name='filename' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileWriter' type='java.io.FileWriter'><parameter name='filename' type='java.lang.String'/><parameter name='append' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class name='FilterInputStream' extends='java.io.InputStream'><constructor name='FilterInputStream' type='java.io.FilterInputStream' visibility='protected'><parameter name='in' type='java.io.InputStream'/></constructor><field name='in' type='java.io.InputStream' volatile='true' visibility='protected'/><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='FilterOutputStream' extends='java.io.OutputStream'><constructor name='FilterOutputStream' type='java.io.FilterOutputStream'><parameter name='out' type='java.io.OutputStream'/></constructor><field name='out' type='java.io.OutputStream' visibility='protected'/><method name='write'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FilterReader' extends='java.io.Reader' abstract='true'><constructor name='FilterReader' type='java.io.FilterReader' visibility='protected'><parameter name='in' type='java.io.Reader'/></constructor><field name='in' type='java.io.Reader' visibility='protected'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FilterWriter' extends='java.io.Writer' abstract='true'><constructor name='FilterWriter' type='java.io.FilterWriter' visibility='protected'><parameter name='out' type='java.io.Writer'/></constructor><field name='out' type='java.io.Writer' visibility='protected'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='IOException' extends='java.lang.Exception'><constructor name='IOException' type='java.io.IOException'/><constructor name='IOException' type='java.io.IOException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='InputStream' extends='java.lang.Object' abstract='true'><implements name='java.io.Closeable'/><constructor name='InputStream' type='java.io.InputStream'/><method name='available' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='mark'><parameter name='readlimit' type='int'/></method><method name='markSupported' return='boolean'/><method name='read' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='reset' synchronized='true'><exception name='IOException' type='java.io.IOException'/></method><method name='skip' return='long'><parameter name='n' type='long'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='InputStreamReader' extends='java.io.Reader'><constructor name='InputStreamReader' type='java.io.InputStreamReader'><parameter name='in' type='java.io.InputStream'/></constructor><constructor name='InputStreamReader' type='java.io.InputStreamReader'><parameter name='in' type='java.io.InputStream'/><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='InputStreamReader' type='java.io.InputStreamReader'><parameter name='in' type='java.io.InputStream'/><parameter name='dec' type='java.nio.charset.CharsetDecoder'/></constructor><constructor name='InputStreamReader' type='java.io.InputStreamReader'><parameter name='in' type='java.io.InputStream'/><parameter name='charset' type='java.nio.charset.Charset'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getEncoding' return='java.lang.String'/><method name='read' return='int'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='InterruptedIOException' extends='java.io.IOException'><constructor name='InterruptedIOException' type='java.io.InterruptedIOException'/><constructor name='InterruptedIOException' type='java.io.InterruptedIOException'><parameter name='detailMessage' type='java.lang.String'/></constructor><field name='bytesTransferred' type='int'/></class><class name='InvalidClassException' extends='java.io.ObjectStreamException'><constructor name='InvalidClassException' type='java.io.InvalidClassException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='InvalidClassException' type='java.io.InvalidClassException'><parameter name='className' type='java.lang.String'/><parameter name='detailMessage' type='java.lang.String'/></constructor><field name='classname' type='java.lang.String'/></class><class name='InvalidObjectException' extends='java.io.ObjectStreamException'><constructor name='InvalidObjectException' type='java.io.InvalidObjectException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='LineNumberInputStream' extends='java.io.FilterInputStream' deprecated='1'><constructor name='LineNumberInputStream' type='java.io.LineNumberInputStream'><parameter name='in' type='java.io.InputStream'/></constructor><method name='getLineNumber' return='int'/><method name='setLineNumber'><parameter name='lineNumber' type='int'/></method></class><class name='LineNumberReader' extends='java.io.BufferedReader'><constructor name='LineNumberReader' type='java.io.LineNumberReader'><parameter name='in' type='java.io.Reader'/></constructor><constructor name='LineNumberReader' type='java.io.LineNumberReader'><parameter name='in' type='java.io.Reader'/><parameter name='size' type='int'/></constructor><method name='getLineNumber' return='int'/><method name='setLineNumber'><parameter name='lineNumber' type='int'/></method></class><class name='NotActiveException' extends='java.io.ObjectStreamException'><constructor name='NotActiveException' type='java.io.NotActiveException'/><constructor name='NotActiveException' type='java.io.NotActiveException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NotSerializableException' extends='java.io.ObjectStreamException'><constructor name='NotSerializableException' type='java.io.NotSerializableException'/><constructor name='NotSerializableException' type='java.io.NotSerializableException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ObjectInputStream' extends='java.io.InputStream'><implements name='java.io.ObjectInput'/><implements name='java.io.ObjectStreamConstants'/><constructor name='ObjectInputStream' type='java.io.ObjectInputStream' visibility='protected'><exception name='IOException' type='java.io.IOException'/><exception name='SecurityException' type='java.lang.SecurityException'/></constructor><constructor name='ObjectInputStream' type='java.io.ObjectInputStream'><parameter name='input' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='StreamCorruptedException' type='java.io.StreamCorruptedException'/></constructor><method name='defaultReadObject'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='NotActiveException' type='java.io.NotActiveException'/></method><method name='enableResolveObject' visibility='protected' return='boolean'><parameter name='enable' type='boolean'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readBoolean' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='readByte' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='readChar' return='char'><exception name='IOException' type='java.io.IOException'/></method><method name='readClassDescriptor' visibility='protected' return='java.io.ObjectStreamClass'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='readDouble' return='double'><exception name='IOException' type='java.io.IOException'/></method><method name='readFields' return='java.io.ObjectInputStream.GetField'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='NotActiveException' type='java.io.NotActiveException'/></method><method name='readFloat' return='float'><exception name='IOException' type='java.io.IOException'/></method><method name='readFully'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readFully'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readInt' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' deprecated='1' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readLong' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='readObject' final='true' return='java.lang.Object'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='OptionalDataException' type='java.io.OptionalDataException'/></method><method name='readObjectOverride' visibility='protected' return='java.lang.Object'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='OptionalDataException' type='java.io.OptionalDataException'/></method><method name='readShort' return='short'><exception name='IOException' type='java.io.IOException'/></method><method name='readStreamHeader' visibility='protected'><exception name='IOException' type='java.io.IOException'/><exception name='StreamCorruptedException' type='java.io.StreamCorruptedException'/></method><method name='readUTF' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnshared' return='java.lang.Object'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedByte' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedShort' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='registerValidation' synchronized='true'><parameter name='object' type='java.io.ObjectInputValidation'/><parameter name='priority' type='int'/><exception name='InvalidObjectException' type='java.io.InvalidObjectException'/><exception name='NotActiveException' type='java.io.NotActiveException'/></method><method name='resolveClass' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='osClass' type='java.io.ObjectStreamClass'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='resolveObject' visibility='protected' return='java.lang.Object'><parameter name='object' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method><method name='resolveProxyClass' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='interfaceNames' type='java.lang.String[]'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='skipBytes' return='int'><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ObjectInputStream.GetField' extends='java.lang.Object' abstract='true' static='true'><constructor name='ObjectInputStream.GetField' type='java.io.ObjectInputStream.GetField'/><method name='defaulted' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='char'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='char'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='byte'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='byte'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='short'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='short'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='int'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='long'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='long'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='float'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='float'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='double'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='double'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='get' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getObjectStreamClass' abstract='true' return='java.io.ObjectStreamClass'/></class><class name='ObjectOutputStream' extends='java.io.OutputStream'><implements name='java.io.ObjectOutput'/><implements name='java.io.ObjectStreamConstants'/><constructor name='ObjectOutputStream' type='java.io.ObjectOutputStream' visibility='protected'><exception name='IOException' type='java.io.IOException'/><exception name='SecurityException' type='java.lang.SecurityException'/></constructor><constructor name='ObjectOutputStream' type='java.io.ObjectOutputStream'><parameter name='output' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='annotateClass' visibility='protected'><parameter name='aClass' type='java.lang.Class&lt;?&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='annotateProxyClass' visibility='protected'><parameter name='aClass' type='java.lang.Class&lt;?&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='defaultWriteObject'><exception name='IOException' type='java.io.IOException'/></method><method name='drain' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='enableReplaceObject' visibility='protected' return='boolean'><parameter name='enable' type='boolean'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='putFields' return='java.io.ObjectOutputStream.PutField'><exception name='IOException' type='java.io.IOException'/></method><method name='replaceObject' visibility='protected' return='java.lang.Object'><parameter name='object' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method><method name='reset'><exception name='IOException' type='java.io.IOException'/></method><method name='useProtocolVersion'><parameter name='version' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBoolean'><parameter name='value' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeByte'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBytes'><parameter name='value' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChar'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChars'><parameter name='value' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeClassDescriptor' visibility='protected'><parameter name='classDesc' type='java.io.ObjectStreamClass'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeDouble'><parameter name='value' type='double'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeFields'><exception name='IOException' type='java.io.IOException'/></method><method name='writeFloat'><parameter name='value' type='float'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeInt'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLong'><parameter name='value' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeObject' final='true'><parameter name='object' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeObjectOverride' visibility='protected'><parameter name='object' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeShort'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeStreamHeader' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='writeUTF'><parameter name='value' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeUnshared'><parameter name='object' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ObjectOutputStream.PutField' extends='java.lang.Object' abstract='true' static='true'><constructor name='ObjectOutputStream.PutField' type='java.io.ObjectOutputStream.PutField'/><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='char'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='byte'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='short'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='put' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method name='write' abstract='true' deprecated='1'><parameter name='out' type='java.io.ObjectOutput'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ObjectStreamClass' extends='java.lang.Object'><implements name='java.io.Serializable'/><field name='NO_FIELDS' final='true' static='true' value='null' type='java.io.ObjectStreamField[]'/><method name='forClass' return='java.lang.Class&lt;?&gt;'/><method name='getField' return='java.io.ObjectStreamField'><parameter name='name' type='java.lang.String'/></method><method name='getFields' return='java.io.ObjectStreamField[]'/><method name='getName' return='java.lang.String'/><method name='getSerialVersionUID' return='long'/><method name='lookup' static='true' return='java.io.ObjectStreamClass'><parameter name='cl' type='java.lang.Class&lt;?&gt;'/></method></class><class name='ObjectStreamException' extends='java.io.IOException' abstract='true'><constructor name='ObjectStreamException' type='java.io.ObjectStreamException' visibility='protected'/><constructor name='ObjectStreamException' type='java.io.ObjectStreamException' visibility='protected'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ObjectStreamField' extends='java.lang.Object'><implements name='java.lang.Comparable'/><constructor name='ObjectStreamField' type='java.io.ObjectStreamField'><parameter name='name' type='java.lang.String'/><parameter name='cl' type='java.lang.Class&lt;?&gt;'/></constructor><constructor name='ObjectStreamField' type='java.io.ObjectStreamField'><parameter name='name' type='java.lang.String'/><parameter name='cl' type='java.lang.Class&lt;?&gt;'/><parameter name='unshared' type='boolean'/></constructor><method name='compareTo' return='int'><parameter name='o' type='java.lang.Object'/></method><method name='getName' return='java.lang.String'/><method name='getOffset' return='int'/><method name='getType' return='java.lang.Class&lt;?&gt;'/><method name='getTypeCode' return='char'/><method name='getTypeString' return='java.lang.String'/><method name='isPrimitive' return='boolean'/><method name='isUnshared' return='boolean'/><method name='setOffset' visibility='protected'><parameter name='newValue' type='int'/></method></class><class name='OptionalDataException' extends='java.io.ObjectStreamException'><field name='eof' type='boolean'/><field name='length' type='int'/></class><class name='OutputStream' extends='java.lang.Object' abstract='true'><implements name='java.io.Closeable'/><implements name='java.io.Flushable'/><constructor name='OutputStream' type='java.io.OutputStream'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='OutputStreamWriter' extends='java.io.Writer'><constructor name='OutputStreamWriter' type='java.io.OutputStreamWriter'><parameter name='out' type='java.io.OutputStream'/></constructor><constructor name='OutputStreamWriter' type='java.io.OutputStreamWriter'><parameter name='out' type='java.io.OutputStream'/><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='OutputStreamWriter' type='java.io.OutputStreamWriter'><parameter name='out' type='java.io.OutputStream'/><parameter name='cs' type='java.nio.charset.Charset'/></constructor><constructor name='OutputStreamWriter' type='java.io.OutputStreamWriter'><parameter name='out' type='java.io.OutputStream'/><parameter name='enc' type='java.nio.charset.CharsetEncoder'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='getEncoding' return='java.lang.String'/><method name='write'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PipedInputStream' extends='java.io.InputStream'><constructor name='PipedInputStream' type='java.io.PipedInputStream'/><constructor name='PipedInputStream' type='java.io.PipedInputStream'><parameter name='out' type='java.io.PipedOutputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><field name='PIPE_SIZE' final='true' static='true' value='1024' type='int' visibility='protected'/><field name='buffer' value='null' type='byte[]' visibility='protected'/><field name='in' type='int' visibility='protected'/><field name='out' type='int' visibility='protected'/><method name='connect'><parameter name='src' type='java.io.PipedOutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' synchronized='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='receive' synchronized='true' visibility='protected'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PipedOutputStream' extends='java.io.OutputStream'><constructor name='PipedOutputStream' type='java.io.PipedOutputStream'/><constructor name='PipedOutputStream' type='java.io.PipedOutputStream'><parameter name='dest' type='java.io.PipedInputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='connect'><parameter name='stream' type='java.io.PipedInputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PipedReader' extends='java.io.Reader'><constructor name='PipedReader' type='java.io.PipedReader'/><constructor name='PipedReader' type='java.io.PipedReader'><parameter name='out' type='java.io.PipedWriter'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='src' type='java.io.PipedWriter'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PipedWriter' extends='java.io.Writer'><constructor name='PipedWriter' type='java.io.PipedWriter'/><constructor name='PipedWriter' type='java.io.PipedWriter'><parameter name='dest' type='java.io.PipedReader'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='stream' type='java.io.PipedReader'/><parameter name='reader' type='java.io.PipedReader'/><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PrintStream' extends='java.io.FilterOutputStream'><implements name='java.lang.Appendable'/><implements name='java.io.Closeable'/><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='out' type='java.io.OutputStream'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='out' type='java.io.OutputStream'/><parameter name='autoflush' type='boolean'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='out' type='java.io.OutputStream'/><parameter name='autoflush' type='boolean'/><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='file' type='java.io.File'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='fileName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='PrintStream' type='java.io.PrintStream'><parameter name='fileName' type='java.lang.String'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><method name='append' return='java.io.PrintStream'><parameter name='c' type='char'/></method><method name='append' return='java.io.PrintStream'><parameter name='csq' type='java.lang.CharSequence'/></method><method name='append' return='java.io.PrintStream'><parameter name='csq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='checkError' return='boolean'/><method name='format' return='java.io.PrintStream'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='format' return='java.io.PrintStream'><parameter name='l' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='print'><parameter name='charArray' type='char[]'/></method><method name='print'><parameter name='ch' type='char'/></method><method name='print'><parameter name='dnum' type='double'/></method><method name='print'><parameter name='fnum' type='float'/></method><method name='print'><parameter name='inum' type='int'/></method><method name='print'><parameter name='lnum' type='long'/></method><method name='print'><parameter name='obj' type='java.lang.Object'/></method><method name='print' synchronized='true'><parameter name='str' type='java.lang.String'/></method><method name='print'><parameter name='bool' type='boolean'/></method><method name='printf' return='java.io.PrintStream'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='printf' return='java.io.PrintStream'><parameter name='l' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='println'/><method name='println'><parameter name='charArray' type='char[]'/></method><method name='println'><parameter name='ch' type='char'/></method><method name='println'><parameter name='dnum' type='double'/></method><method name='println'><parameter name='fnum' type='float'/></method><method name='println'><parameter name='inum' type='int'/></method><method name='println'><parameter name='lnum' type='long'/></method><method name='println'><parameter name='obj' type='java.lang.Object'/></method><method name='println' synchronized='true'><parameter name='str' type='java.lang.String'/></method><method name='println'><parameter name='bool' type='boolean'/></method><method name='setError' visibility='protected'/></class><class name='PrintWriter' extends='java.io.Writer'><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='out' type='java.io.OutputStream'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='out' type='java.io.OutputStream'/><parameter name='autoflush' type='boolean'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='wr' type='java.io.Writer'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='wr' type='java.io.Writer'/><parameter name='autoflush' type='boolean'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='file' type='java.io.File'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='fileName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='PrintWriter' type='java.io.PrintWriter'><parameter name='fileName' type='java.lang.String'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><field name='out' type='java.io.Writer' visibility='protected'/><method name='checkError' return='boolean'/><method name='close'/><method name='flush'/><method name='format' return='java.io.PrintWriter'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='format' return='java.io.PrintWriter'><parameter name='l' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='print'><parameter name='charArray' type='char[]'/></method><method name='print'><parameter name='ch' type='char'/></method><method name='print'><parameter name='dnum' type='double'/></method><method name='print'><parameter name='fnum' type='float'/></method><method name='print'><parameter name='inum' type='int'/></method><method name='print'><parameter name='lnum' type='long'/></method><method name='print'><parameter name='obj' type='java.lang.Object'/></method><method name='print'><parameter name='str' type='java.lang.String'/></method><method name='print'><parameter name='bool' type='boolean'/></method><method name='printf' return='java.io.PrintWriter'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='printf' return='java.io.PrintWriter'><parameter name='l' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='println'/><method name='println'><parameter name='charArray' type='char[]'/></method><method name='println'><parameter name='ch' type='char'/></method><method name='println'><parameter name='dnum' type='double'/></method><method name='println'><parameter name='fnum' type='float'/></method><method name='println'><parameter name='inum' type='int'/></method><method name='println'><parameter name='lnum' type='long'/></method><method name='println'><parameter name='obj' type='java.lang.Object'/></method><method name='println'><parameter name='str' type='java.lang.String'/></method><method name='println'><parameter name='bool' type='boolean'/></method><method name='setError' visibility='protected'/><method name='write'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/></method></class><class name='PushbackInputStream' extends='java.io.FilterInputStream'><constructor name='PushbackInputStream' type='java.io.PushbackInputStream'><parameter name='in' type='java.io.InputStream'/></constructor><constructor name='PushbackInputStream' type='java.io.PushbackInputStream'><parameter name='in' type='java.io.InputStream'/><parameter name='size' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='pos' type='int' visibility='protected'/><method name='unread'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='unread'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='unread'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PushbackReader' extends='java.io.FilterReader'><constructor name='PushbackReader' type='java.io.PushbackReader'><parameter name='in' type='java.io.Reader'/></constructor><constructor name='PushbackReader' type='java.io.PushbackReader'><parameter name='in' type='java.io.Reader'/><parameter name='size' type='int'/></constructor><method name='unread'><parameter name='buffer' type='char[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='unread'><parameter name='buffer' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='unread'><parameter name='oneChar' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RandomAccessFile' extends='java.lang.Object'><implements name='java.io.Closeable'/><implements name='java.io.DataInput'/><implements name='java.io.DataOutput'/><constructor name='RandomAccessFile' type='java.io.RandomAccessFile'><parameter name='file' type='java.io.File'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='RandomAccessFile' type='java.io.RandomAccessFile'><parameter name='fileName' type='java.lang.String'/><parameter name='mode' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getChannel' final='true' synchronized='true' return='java.nio.channels.FileChannel'/><method name='getFD' final='true' return='java.io.FileDescriptor'><exception name='IOException' type='java.io.IOException'/></method><method name='getFilePointer' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='length' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readBoolean' final='true' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='readByte' final='true' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='readChar' final='true' return='char'><exception name='IOException' type='java.io.IOException'/></method><method name='readDouble' final='true' return='double'><exception name='IOException' type='java.io.IOException'/></method><method name='readFloat' final='true' return='float'><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' final='true'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' final='true'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readInt' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' final='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readLong' final='true' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='readShort' final='true' return='short'><exception name='IOException' type='java.io.IOException'/></method><method name='readUTF' final='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedByte' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedShort' final='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='seek'><parameter name='pos' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='setLength'><parameter name='newLength' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='skipBytes' return='int'><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBoolean' final='true'><parameter name='val' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeByte' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBytes' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChar' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChars' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeDouble' final='true'><parameter name='val' type='double'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeFloat' final='true'><parameter name='val' type='float'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeInt' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLong' final='true'><parameter name='val' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeShort' final='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeUTF' final='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='Reader' extends='java.lang.Object' abstract='true'><implements name='java.io.Closeable'/><implements name='java.lang.Readable'/><constructor name='Reader' type='java.io.Reader' visibility='protected'/><constructor name='Reader' type='java.io.Reader' visibility='protected'><parameter name='lock' type='java.lang.Object'/></constructor><field name='lock' type='java.lang.Object' visibility='protected'/><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='mark'><parameter name='readLimit' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='markSupported' return='boolean'/><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='buf' type='char[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='target' type='java.nio.CharBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='ready' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='reset'><exception name='IOException' type='java.io.IOException'/></method><method name='skip' return='long'><parameter name='count' type='long'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='SequenceInputStream' extends='java.io.InputStream'><constructor name='SequenceInputStream' type='java.io.SequenceInputStream'><parameter name='s1' type='java.io.InputStream'/><parameter name='s2' type='java.io.InputStream'/></constructor><constructor name='SequenceInputStream' type='java.io.SequenceInputStream'><parameter name='e' type='java.util.Enumeration&lt;? extends java.io.InputStream&gt;'/></constructor><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='SerializablePermission' final='true' extends='java.security.BasicPermission'><constructor name='SerializablePermission' type='java.io.SerializablePermission'><parameter name='permissionName' type='java.lang.String'/></constructor><constructor name='SerializablePermission' type='java.io.SerializablePermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='StreamCorruptedException' extends='java.io.ObjectStreamException'><constructor name='StreamCorruptedException' type='java.io.StreamCorruptedException'/><constructor name='StreamCorruptedException' type='java.io.StreamCorruptedException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='StreamTokenizer' extends='java.lang.Object'><constructor name='StreamTokenizer' type='java.io.StreamTokenizer' deprecated='1'><parameter name='is' type='java.io.InputStream'/></constructor><constructor name='StreamTokenizer' type='java.io.StreamTokenizer'><parameter name='r' type='java.io.Reader'/></constructor><field name='TT_EOF' final='true' static='true' value='-1' type='int'/><field name='TT_EOL' final='true' static='true' value='10' type='int'/><field name='TT_NUMBER' final='true' static='true' value='-2' type='int'/><field name='TT_WORD' final='true' static='true' value='-3' type='int'/><field name='nval' type='double'/><field name='sval' type='java.lang.String'/><field name='ttype' type='int'/><method name='commentChar'><parameter name='ch' type='int'/></method><method name='eolIsSignificant'><parameter name='flag' type='boolean'/></method><method name='lineno' return='int'/><method name='lowerCaseMode'><parameter name='flag' type='boolean'/></method><method name='nextToken' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='ordinaryChar'><parameter name='ch' type='int'/></method><method name='ordinaryChars'><parameter name='low' type='int'/><parameter name='hi' type='int'/></method><method name='parseNumbers'/><method name='pushBack'/><method name='quoteChar'><parameter name='ch' type='int'/></method><method name='resetSyntax'/><method name='slashSlashComments'><parameter name='flag' type='boolean'/></method><method name='slashStarComments'><parameter name='flag' type='boolean'/></method><method name='whitespaceChars'><parameter name='low' type='int'/><parameter name='hi' type='int'/></method><method name='wordChars'><parameter name='low' type='int'/><parameter name='hi' type='int'/></method></class><class name='StringBufferInputStream' extends='java.io.InputStream' deprecated='1'><constructor name='StringBufferInputStream' type='java.io.StringBufferInputStream'><parameter name='str' type='java.lang.String'/></constructor><field name='buffer' type='java.lang.String' visibility='protected'/><field name='count' type='int' visibility='protected'/><field name='pos' type='int' visibility='protected'/><method name='read' synchronized='true' return='int'/></class><class name='StringReader' extends='java.io.Reader'><constructor name='StringReader' type='java.io.StringReader'><parameter name='str' type='java.lang.String'/></constructor><method name='close'/><method name='read' return='int'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='StringWriter' extends='java.io.Writer'><constructor name='StringWriter' type='java.io.StringWriter'/><constructor name='StringWriter' type='java.io.StringWriter'><parameter name='initialSize' type='int'/></constructor><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'/><method name='getBuffer' return='java.lang.StringBuffer'/><method name='write'><parameter name='cbuf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/></method></class><class name='SyncFailedException' extends='java.io.IOException'><constructor name='SyncFailedException' type='java.io.SyncFailedException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UTFDataFormatException' extends='java.io.IOException'><constructor name='UTFDataFormatException' type='java.io.UTFDataFormatException'/><constructor name='UTFDataFormatException' type='java.io.UTFDataFormatException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UnsupportedEncodingException' extends='java.io.IOException'><constructor name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/><constructor name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='WriteAbortedException' extends='java.io.ObjectStreamException'><constructor name='WriteAbortedException' type='java.io.WriteAbortedException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='rootCause' type='java.lang.Exception'/></constructor><field name='detail' type='java.lang.Exception'/></class><class name='Writer' extends='java.lang.Object' abstract='true'><implements name='java.lang.Appendable'/><implements name='java.io.Closeable'/><implements name='java.io.Flushable'/><constructor name='Writer' type='java.io.Writer' visibility='protected'/><constructor name='Writer' type='java.io.Writer' visibility='protected'><parameter name='lock' type='java.lang.Object'/></constructor><field name='lock' type='java.lang.Object' visibility='protected'/><method name='append' return='java.io.Writer'><parameter name='c' type='char'/><exception name='IOException' type='java.io.IOException'/></method><method name='append' return='java.io.Writer'><parameter name='csq' type='java.lang.CharSequence'/><exception name='IOException' type='java.io.IOException'/></method><method name='append' return='java.io.Writer'><parameter name='csq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='buf' type='char[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='buf' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='oneChar' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='str' type='java.lang.String'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><interface name='Closeable' abstract='true'><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='DataInput' abstract='true'><method name='readBoolean' abstract='true' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='readByte' abstract='true' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='readChar' abstract='true' return='char'><exception name='IOException' type='java.io.IOException'/></method><method name='readDouble' abstract='true' return='double'><exception name='IOException' type='java.io.IOException'/></method><method name='readFloat' abstract='true' return='float'><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' abstract='true'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readFully' abstract='true'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readInt' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' abstract='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readLong' abstract='true' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='readShort' abstract='true' return='short'><exception name='IOException' type='java.io.IOException'/></method><method name='readUTF' abstract='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedByte' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readUnsignedShort' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='skipBytes' abstract='true' return='int'><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='DataOutput' abstract='true'><method name='write' abstract='true'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='oneByte' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBoolean' abstract='true'><parameter name='val' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeByte' abstract='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeBytes' abstract='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChar' abstract='true' api_removed='4'><parameter name='oneByte' type='int'/><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeChars' abstract='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeDouble' abstract='true'><parameter name='val' type='double'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeFloat' abstract='true'><parameter name='val' type='float'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeInt' abstract='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLong' abstract='true'><parameter name='val' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeShort' abstract='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeUTF' abstract='true'><parameter name='str' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='4' name='writeChar' abstract='true'><parameter name='val' type='int'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='Externalizable' abstract='true'><implements name='java.io.Serializable'/><method name='readExternal' abstract='true'><parameter name='input' type='java.io.ObjectInput'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeExternal' abstract='true'><parameter name='output' type='java.io.ObjectOutput'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='FileFilter' abstract='true'><method name='accept' abstract='true' return='boolean'><parameter name='pathname' type='java.io.File'/></method></interface><interface name='FilenameFilter' abstract='true'><method name='accept' abstract='true' return='boolean'><parameter name='dir' type='java.io.File'/><parameter name='filename' type='java.lang.String'/></method></interface><interface name='Flushable' abstract='true'><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ObjectInput' abstract='true'><implements name='java.io.DataInput'/><method name='available' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='readObject' abstract='true' return='java.lang.Object'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='skip' abstract='true' return='long'><parameter name='toSkip' type='long'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ObjectInputValidation' abstract='true'><method name='validateObject' abstract='true'><exception name='InvalidObjectException' type='java.io.InvalidObjectException'/></method></interface><interface name='ObjectOutput' abstract='true'><implements name='java.io.DataOutput'/><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='buffer' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='buffer' type='byte[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeObject' abstract='true'><parameter name='obj' type='java.lang.Object'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ObjectStreamConstants' abstract='true'><field name='PROTOCOL_VERSION_1' final='true' static='true' value='1' type='int'/><field name='PROTOCOL_VERSION_2' final='true' static='true' value='2' type='int'/><field name='SC_BLOCK_DATA' final='true' static='true' value='8' type='byte'/><field name='SC_ENUM' final='true' static='true' value='16' type='byte'/><field name='SC_EXTERNALIZABLE' final='true' static='true' value='4' type='byte'/><field name='SC_SERIALIZABLE' final='true' static='true' value='2' type='byte'/><field name='SC_WRITE_METHOD' final='true' static='true' value='1' type='byte'/><field name='STREAM_MAGIC' final='true' static='true' value='-21267' type='short'/><field name='STREAM_VERSION' final='true' static='true' value='5' type='short'/><field name='SUBCLASS_IMPLEMENTATION_PERMISSION' final='true' static='true' value='null' type='java.io.SerializablePermission'/><field name='SUBSTITUTION_PERMISSION' final='true' static='true' value='null' type='java.io.SerializablePermission'/><field name='TC_ARRAY' final='true' static='true' value='117' type='byte'/><field name='TC_BASE' final='true' static='true' value='112' type='byte'/><field name='TC_BLOCKDATA' final='true' static='true' value='119' type='byte'/><field name='TC_BLOCKDATALONG' final='true' static='true' value='122' type='byte'/><field name='TC_CLASS' final='true' static='true' value='118' type='byte'/><field name='TC_CLASSDESC' final='true' static='true' value='114' type='byte'/><field name='TC_ENDBLOCKDATA' final='true' static='true' value='120' type='byte'/><field name='TC_ENUM' final='true' static='true' value='126' type='byte'/><field name='TC_EXCEPTION' final='true' static='true' value='123' type='byte'/><field name='TC_LONGSTRING' final='true' static='true' value='124' type='byte'/><field name='TC_MAX' final='true' static='true' value='126' type='byte'/><field name='TC_NULL' final='true' static='true' value='112' type='byte'/><field name='TC_OBJECT' final='true' static='true' value='115' type='byte'/><field name='TC_PROXYCLASSDESC' final='true' static='true' value='125' type='byte'/><field name='TC_REFERENCE' final='true' static='true' value='113' type='byte'/><field name='TC_RESET' final='true' static='true' value='121' type='byte'/><field name='TC_STRING' final='true' static='true' value='116' type='byte'/><field name='baseWireHandle' final='true' static='true' value='8257536' type='int'/></interface><interface name='Serializable' abstract='true'/></package><package name='java.lang'><class name='AbstractMethodError' extends='java.lang.IncompatibleClassChangeError'><constructor name='AbstractMethodError' type='java.lang.AbstractMethodError'/><constructor name='AbstractMethodError' type='java.lang.AbstractMethodError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='AbstractStringBuilder' extends='java.lang.Object' abstract='true' visibility=''><method name='capacity' return='int'/><method name='charAt' return='char'><parameter name='index' type='int'/></method><method name='codePointAt' return='int'><parameter name='index' type='int'/></method><method name='codePointBefore' return='int'><parameter name='index' type='int'/></method><method name='codePointCount' return='int'><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='ensureCapacity'><parameter name='min' type='int'/></method><method name='getChars'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='dest' type='char[]'/><parameter name='destStart' type='int'/></method><method name='indexOf' return='int'><parameter name='string' type='java.lang.String'/></method><method name='indexOf' return='int'><parameter name='subString' type='java.lang.String'/><parameter name='start' type='int'/></method><method name='lastIndexOf' return='int'><parameter name='string' type='java.lang.String'/></method><method name='lastIndexOf' return='int'><parameter name='subString' type='java.lang.String'/><parameter name='start' type='int'/></method><method name='length' return='int'/><method name='offsetByCodePoints' return='int'><parameter name='index' type='int'/><parameter name='codePointOffset' type='int'/></method><method name='setCharAt'><parameter name='index' type='int'/><parameter name='ch' type='char'/></method><method name='setLength'><parameter name='length' type='int'/></method><method name='subSequence' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='substring' return='java.lang.String'><parameter name='start' type='int'/></method><method name='substring' return='java.lang.String'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='trimToSize'/></class><class name='ArithmeticException' extends='java.lang.RuntimeException'><constructor name='ArithmeticException' type='java.lang.ArithmeticException'/><constructor name='ArithmeticException' type='java.lang.ArithmeticException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ArrayIndexOutOfBoundsException' extends='java.lang.IndexOutOfBoundsException'><constructor name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><constructor name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'><parameter name='index' type='int'/></constructor><constructor name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ArrayStoreException' extends='java.lang.RuntimeException'><constructor name='ArrayStoreException' type='java.lang.ArrayStoreException'/><constructor name='ArrayStoreException' type='java.lang.ArrayStoreException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='AssertionError' extends='java.lang.Error'><constructor name='AssertionError' type='java.lang.AssertionError'/><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='java.lang.Object'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='boolean'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='char'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='int'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='long'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='float'/></constructor><constructor name='AssertionError' type='java.lang.AssertionError'><parameter name='detailMessage' type='double'/></constructor></class><class name='Boolean' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='Boolean' type='java.lang.Boolean'><parameter name='string' type='java.lang.String'/></constructor><constructor name='Boolean' type='java.lang.Boolean'><parameter name='value' type='boolean'/></constructor><field name='FALSE' final='true' static='true' type='java.lang.Boolean'/><field name='TRUE' final='true' static='true' type='java.lang.Boolean'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='booleanValue' return='boolean'/><method name='compareTo' return='int'><parameter name='that' type='java.lang.Boolean'/></method><method name='getBoolean' static='true' return='boolean'><parameter name='string' type='java.lang.String'/></method><method name='parseBoolean' static='true' return='boolean'><parameter name='s' type='java.lang.String'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='value' type='boolean'/></method><method name='valueOf' static='true' return='java.lang.Boolean'><parameter name='string' type='java.lang.String'/></method><method name='valueOf' static='true' return='java.lang.Boolean'><parameter name='b' type='boolean'/></method></class><class name='Byte' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Byte' type='java.lang.Byte'><parameter name='value' type='byte'/></constructor><constructor name='Byte' type='java.lang.Byte'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><field name='MAX_VALUE' final='true' static='true' value='127' type='byte'/><field name='MIN_VALUE' final='true' static='true' value='-128' type='byte'/><field name='SIZE' final='true' static='true' value='8' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='compareTo' return='int'><parameter name='object' type='java.lang.Byte'/></method><method name='decode' static='true' return='java.lang.Byte'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='parseByte' static='true' return='byte'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='parseByte' static='true' return='byte'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='value' type='byte'/></method><method name='valueOf' static='true' return='java.lang.Byte'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Byte'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Byte'><parameter name='b' type='byte'/></method></class><class name='Character' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='Character' type='java.lang.Character'><parameter name='value' type='char'/></constructor><field name='COMBINING_SPACING_MARK' final='true' static='true' value='8' type='byte'/><field name='CONNECTOR_PUNCTUATION' final='true' static='true' value='23' type='byte'/><field name='CONTROL' final='true' static='true' value='15' type='byte'/><field name='CURRENCY_SYMBOL' final='true' static='true' value='26' type='byte'/><field name='DASH_PUNCTUATION' final='true' static='true' value='20' type='byte'/><field name='DECIMAL_DIGIT_NUMBER' final='true' static='true' value='9' type='byte'/><field name='DIRECTIONALITY_ARABIC_NUMBER' final='true' static='true' value='6' type='byte'/><field name='DIRECTIONALITY_BOUNDARY_NEUTRAL' final='true' static='true' value='9' type='byte'/><field name='DIRECTIONALITY_COMMON_NUMBER_SEPARATOR' final='true' static='true' value='7' type='byte'/><field name='DIRECTIONALITY_EUROPEAN_NUMBER' final='true' static='true' value='3' type='byte'/><field name='DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR' final='true' static='true' value='4' type='byte'/><field name='DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR' final='true' static='true' value='5' type='byte'/><field name='DIRECTIONALITY_LEFT_TO_RIGHT' final='true' static='true' value='0' type='byte'/><field name='DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING' final='true' static='true' value='14' type='byte'/><field name='DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE' final='true' static='true' value='15' type='byte'/><field name='DIRECTIONALITY_NONSPACING_MARK' final='true' static='true' value='8' type='byte'/><field name='DIRECTIONALITY_OTHER_NEUTRALS' final='true' static='true' value='13' type='byte'/><field name='DIRECTIONALITY_PARAGRAPH_SEPARATOR' final='true' static='true' value='10' type='byte'/><field name='DIRECTIONALITY_POP_DIRECTIONAL_FORMAT' final='true' static='true' value='18' type='byte'/><field name='DIRECTIONALITY_RIGHT_TO_LEFT' final='true' static='true' value='1' type='byte'/><field name='DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC' final='true' static='true' value='2' type='byte'/><field name='DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING' final='true' static='true' value='16' type='byte'/><field name='DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE' final='true' static='true' value='17' type='byte'/><field name='DIRECTIONALITY_SEGMENT_SEPARATOR' final='true' static='true' value='11' type='byte'/><field name='DIRECTIONALITY_UNDEFINED' final='true' static='true' value='-1' type='byte'/><field name='DIRECTIONALITY_WHITESPACE' final='true' static='true' value='12' type='byte'/><field name='ENCLOSING_MARK' final='true' static='true' value='7' type='byte'/><field name='END_PUNCTUATION' final='true' static='true' value='22' type='byte'/><field name='FINAL_QUOTE_PUNCTUATION' final='true' static='true' value='30' type='byte'/><field name='FORMAT' final='true' static='true' value='16' type='byte'/><field name='INITIAL_QUOTE_PUNCTUATION' final='true' static='true' value='29' type='byte'/><field name='LETTER_NUMBER' final='true' static='true' value='10' type='byte'/><field name='LINE_SEPARATOR' final='true' static='true' value='13' type='byte'/><field name='LOWERCASE_LETTER' final='true' static='true' value='2' type='byte'/><field name='MATH_SYMBOL' final='true' static='true' value='25' type='byte'/><field name='MAX_CODE_POINT' final='true' static='true' value='1114111' type='int'/><field name='MAX_HIGH_SURROGATE' final='true' static='true' value='56319' type='char'/><field name='MAX_LOW_SURROGATE' final='true' static='true' value='57343' type='char'/><field name='MAX_RADIX' final='true' static='true' value='36' type='int'/><field name='MAX_SURROGATE' final='true' static='true' value='57343' type='char'/><field name='MAX_VALUE' final='true' static='true' value='65535' type='char'/><field name='MIN_CODE_POINT' final='true' static='true' value='0' type='int'/><field name='MIN_HIGH_SURROGATE' final='true' static='true' value='55296' type='char'/><field name='MIN_LOW_SURROGATE' final='true' static='true' value='56320' type='char'/><field name='MIN_RADIX' final='true' static='true' value='2' type='int'/><field name='MIN_SUPPLEMENTARY_CODE_POINT' final='true' static='true' value='65536' type='int'/><field name='MIN_SURROGATE' final='true' static='true' value='55296' type='char'/><field name='MIN_VALUE' final='true' static='true' value='0' type='char'/><field name='MODIFIER_LETTER' final='true' static='true' value='4' type='byte'/><field name='MODIFIER_SYMBOL' final='true' static='true' value='27' type='byte'/><field name='NON_SPACING_MARK' final='true' static='true' value='6' type='byte'/><field name='OTHER_LETTER' final='true' static='true' value='5' type='byte'/><field name='OTHER_NUMBER' final='true' static='true' value='11' type='byte'/><field name='OTHER_PUNCTUATION' final='true' static='true' value='24' type='byte'/><field name='OTHER_SYMBOL' final='true' static='true' value='28' type='byte'/><field name='PARAGRAPH_SEPARATOR' final='true' static='true' value='14' type='byte'/><field name='PRIVATE_USE' final='true' static='true' value='18' type='byte'/><field name='SIZE' final='true' static='true' value='16' type='int'/><field name='SPACE_SEPARATOR' final='true' static='true' value='12' type='byte'/><field name='START_PUNCTUATION' final='true' static='true' value='21' type='byte'/><field name='SURROGATE' final='true' static='true' value='19' type='byte'/><field name='TITLECASE_LETTER' final='true' static='true' value='3' type='byte'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><field name='UNASSIGNED' final='true' static='true' value='0' type='byte'/><field name='UPPERCASE_LETTER' final='true' static='true' value='1' type='byte'/><method name='charCount' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='charValue' return='char'/><method name='codePointAt' static='true' return='int'><parameter name='seq' type='java.lang.CharSequence'/><parameter name='index' type='int'/></method><method name='codePointAt' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='index' type='int'/></method><method name='codePointAt' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='index' type='int'/><parameter name='limit' type='int'/></method><method name='codePointBefore' static='true' return='int'><parameter name='seq' type='java.lang.CharSequence'/><parameter name='index' type='int'/></method><method name='codePointBefore' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='index' type='int'/></method><method name='codePointBefore' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='index' type='int'/><parameter name='start' type='int'/></method><method name='codePointCount' static='true' return='int'><parameter name='seq' type='java.lang.CharSequence'/><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='codePointCount' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/></method><method name='compareTo' return='int'><parameter name='c' type='java.lang.Character'/></method><method name='digit' static='true' return='int'><parameter name='c' type='char'/><parameter name='radix' type='int'/></method><method name='digit' static='true' return='int'><parameter name='codePoint' type='int'/><parameter name='radix' type='int'/></method><method name='forDigit' static='true' return='char'><parameter name='digit' type='int'/><parameter name='radix' type='int'/></method><method name='getDirectionality' static='true' return='byte'><parameter name='c' type='char'/></method><method name='getDirectionality' static='true' return='byte'><parameter name='codePoint' type='int'/></method><method name='getNumericValue' static='true' return='int'><parameter name='c' type='char'/></method><method name='getNumericValue' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='getType' static='true' return='int'><parameter name='c' type='char'/></method><method name='getType' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='isDefined' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isDefined' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isDigit' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isDigit' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isHighSurrogate' static='true' return='boolean'><parameter name='ch' type='char'/></method><method name='isISOControl' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isISOControl' static='true' return='boolean'><parameter name='c' type='int'/></method><method name='isIdentifierIgnorable' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isIdentifierIgnorable' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isJavaIdentifierPart' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isJavaIdentifierPart' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isJavaIdentifierStart' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isJavaIdentifierStart' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isJavaLetter' static='true' deprecated='1' return='boolean'><parameter name='c' type='char'/></method><method name='isJavaLetterOrDigit' static='true' deprecated='1' return='boolean'><parameter name='c' type='char'/></method><method name='isLetter' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isLetter' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isLetterOrDigit' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isLetterOrDigit' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isLowSurrogate' static='true' return='boolean'><parameter name='ch' type='char'/></method><method name='isLowerCase' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isLowerCase' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isMirrored' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isMirrored' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isSpace' static='true' deprecated='1' return='boolean'><parameter name='c' type='char'/></method><method name='isSpaceChar' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isSpaceChar' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isSupplementaryCodePoint' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isSurrogatePair' static='true' return='boolean'><parameter name='high' type='char'/><parameter name='low' type='char'/></method><method name='isTitleCase' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isTitleCase' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isUnicodeIdentifierPart' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isUnicodeIdentifierPart' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isUnicodeIdentifierStart' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isUnicodeIdentifierStart' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isUpperCase' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isUpperCase' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isValidCodePoint' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='isWhitespace' static='true' return='boolean'><parameter name='c' type='char'/></method><method name='isWhitespace' static='true' return='boolean'><parameter name='codePoint' type='int'/></method><method name='offsetByCodePoints' static='true' return='int'><parameter name='seq' type='java.lang.CharSequence'/><parameter name='index' type='int'/><parameter name='codePointOffset' type='int'/></method><method name='offsetByCodePoints' static='true' return='int'><parameter name='seq' type='char[]'/><parameter name='start' type='int'/><parameter name='count' type='int'/><parameter name='index' type='int'/><parameter name='codePointOffset' type='int'/></method><method name='reverseBytes' static='true' return='char'><parameter name='c' type='char'/></method><method name='toChars' static='true' return='int'><parameter name='codePoint' type='int'/><parameter name='dst' type='char[]'/><parameter name='dstIndex' type='int'/></method><method name='toChars' static='true' return='char[]'><parameter name='codePoint' type='int'/></method><method name='toCodePoint' static='true' return='int'><parameter name='high' type='char'/><parameter name='low' type='char'/></method><method name='toLowerCase' static='true' return='char'><parameter name='c' type='char'/></method><method name='toLowerCase' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='value' type='char'/></method><method name='toTitleCase' static='true' return='char'><parameter name='c' type='char'/></method><method name='toTitleCase' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='toUpperCase' static='true' return='char'><parameter name='c' type='char'/></method><method name='toUpperCase' static='true' return='int'><parameter name='codePoint' type='int'/></method><method name='valueOf' static='true' return='java.lang.Character'><parameter name='c' type='char'/></method></class><class name='Character.Subset' extends='java.lang.Object' static='true'><constructor name='Character.Subset' type='java.lang.Character.Subset' visibility='protected'><parameter name='string' type='java.lang.String'/></constructor><method name='equals' final='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='hashCode' final='true' return='int'/><method name='toString' final='true' return='java.lang.String'/></class><class name='Character.UnicodeBlock' final='true' extends='java.lang.Character.Subset' static='true'><field name='AEGEAN_NUMBERS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ALPHABETIC_PRESENTATION_FORMS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ARABIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ARABIC_PRESENTATION_FORMS_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ARABIC_PRESENTATION_FORMS_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ARMENIAN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ARROWS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BASIC_LATIN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BENGALI' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BLOCK_ELEMENTS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BOPOMOFO' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BOPOMOFO_EXTENDED' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BOX_DRAWING' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BRAILLE_PATTERNS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BUHID' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='BYZANTINE_MUSICAL_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CHEROKEE' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_COMPATIBILITY' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_COMPATIBILITY_FORMS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_COMPATIBILITY_IDEOGRAPHS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_RADICALS_SUPPLEMENT' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_SYMBOLS_AND_PUNCTUATION' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_UNIFIED_IDEOGRAPHS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='COMBINING_DIACRITICAL_MARKS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='COMBINING_HALF_MARKS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='COMBINING_MARKS_FOR_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CONTROL_PICTURES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CURRENCY_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CYPRIOT_SYLLABARY' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CYRILLIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='CYRILLIC_SUPPLEMENTARY' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='DESERET' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='DEVANAGARI' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='DINGBATS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ENCLOSED_ALPHANUMERICS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ENCLOSED_CJK_LETTERS_AND_MONTHS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ETHIOPIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GENERAL_PUNCTUATION' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GEOMETRIC_SHAPES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GEORGIAN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GOTHIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GREEK' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GREEK_EXTENDED' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GUJARATI' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='GURMUKHI' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HALFWIDTH_AND_FULLWIDTH_FORMS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HANGUL_COMPATIBILITY_JAMO' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HANGUL_JAMO' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HANGUL_SYLLABLES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HANUNOO' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HEBREW' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HIGH_PRIVATE_USE_SURROGATES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HIGH_SURROGATES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='HIRAGANA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='IDEOGRAPHIC_DESCRIPTION_CHARACTERS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='IPA_EXTENSIONS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KANBUN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KANGXI_RADICALS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KANNADA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KATAKANA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KATAKANA_PHONETIC_EXTENSIONS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KHMER' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='KHMER_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LAO' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LATIN_1_SUPPLEMENT' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LATIN_EXTENDED_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LATIN_EXTENDED_ADDITIONAL' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LATIN_EXTENDED_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LETTERLIKE_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LIMBU' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LINEAR_B_IDEOGRAMS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LINEAR_B_SYLLABARY' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='LOW_SURROGATES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MALAYALAM' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MATHEMATICAL_ALPHANUMERIC_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MATHEMATICAL_OPERATORS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MISCELLANEOUS_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MISCELLANEOUS_SYMBOLS_AND_ARROWS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MISCELLANEOUS_TECHNICAL' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MONGOLIAN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MUSICAL_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='MYANMAR' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='NUMBER_FORMS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='OGHAM' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='OLD_ITALIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='OPTICAL_CHARACTER_RECOGNITION' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='ORIYA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='OSMANYA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='PHONETIC_EXTENSIONS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='PRIVATE_USE_AREA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='RUNIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SHAVIAN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SINHALA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SMALL_FORM_VARIANTS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SPACING_MODIFIER_LETTERS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SPECIALS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPERSCRIPTS_AND_SUBSCRIPTS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPPLEMENTAL_ARROWS_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPPLEMENTAL_ARROWS_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPPLEMENTAL_MATHEMATICAL_OPERATORS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPPLEMENTARY_PRIVATE_USE_AREA_A' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SUPPLEMENTARY_PRIVATE_USE_AREA_B' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='SURROGATES_AREA' final='true' static='true' type='java.lang.Character.UnicodeBlock' deprecated='1'/><field name='SYRIAC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAGALOG' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAGBANWA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAGS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAI_LE' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAI_XUAN_JING_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TAMIL' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TELUGU' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='THAANA' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='THAI' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='TIBETAN' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='UGARITIC' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='VARIATION_SELECTORS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='VARIATION_SELECTORS_SUPPLEMENT' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='YIJING_HEXAGRAM_SYMBOLS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='YI_RADICALS' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><field name='YI_SYLLABLES' final='true' static='true' type='java.lang.Character.UnicodeBlock'/><method name='forName' static='true' return='java.lang.Character.UnicodeBlock'><parameter name='blockName' type='java.lang.String'/></method><method name='of' static='true' return='java.lang.Character.UnicodeBlock'><parameter name='c' type='char'/></method><method name='of' static='true' return='java.lang.Character.UnicodeBlock'><parameter name='codePoint' type='int'/></method></class><class name='Class' final='true' extends='java.lang.Object'><implements name='java.lang.reflect.AnnotatedElement'/><implements name='java.lang.reflect.GenericDeclaration'/><implements name='java.io.Serializable'/><implements name='java.lang.reflect.Type'/><method name='asSubclass' return='java.lang.Class&lt;? extends U&gt;'><parameter name='clazz' type='java.lang.Class&lt;U&gt;'/></method><method name='cast' return='T'><parameter name='obj' type='java.lang.Object'/></method><method name='desiredAssertionStatus' native='true' return='boolean'/><method name='forName' static='true' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='forName' static='true' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><parameter name='initializeBoolean' type='boolean'/><parameter name='classLoader' type='java.lang.ClassLoader'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='getAnnotation' return='A'><parameter name='annotationClass' type='java.lang.Class&lt;A&gt;'/></method><method name='getAnnotations' return='java.lang.annotation.Annotation[]'/><method name='getCanonicalName' return='java.lang.String'/><method name='getClassLoader' return='java.lang.ClassLoader'/><method name='getClasses' return='java.lang.Class&lt;?&gt;[]'/><method name='getComponentType' native='true' return='java.lang.Class&lt;?&gt;'/><method name='getConstructor' return='java.lang.reflect.Constructor&lt;T&gt;'><parameter name='parameterTypes' type='java.lang.Class...'/><exception name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getConstructors' return='java.lang.reflect.Constructor&lt;T&gt;[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredAnnotations' native='true' return='java.lang.annotation.Annotation[]'/><method name='getDeclaredClasses' return='java.lang.Class&lt;?&gt;[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredConstructor' return='java.lang.reflect.Constructor&lt;T&gt;'><parameter name='parameterTypes' type='java.lang.Class...'/><exception name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredConstructors' return='java.lang.reflect.Constructor&lt;T&gt;[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredField' return='java.lang.reflect.Field'><parameter name='name' type='java.lang.String'/><exception name='NoSuchFieldException' type='java.lang.NoSuchFieldException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredFields' return='java.lang.reflect.Field[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredMethod' return='java.lang.reflect.Method'><parameter name='name' type='java.lang.String'/><parameter name='parameterTypes' type='java.lang.Class...'/><exception name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaredMethods' return='java.lang.reflect.Method[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getDeclaringClass' native='true' return='java.lang.Class&lt;?&gt;'/><method name='getEnclosingClass' native='true' return='java.lang.Class&lt;?&gt;'/><method name='getEnclosingConstructor' native='true' return='java.lang.reflect.Constructor&lt;?&gt;'/><method name='getEnclosingMethod' native='true' return='java.lang.reflect.Method'/><method name='getEnumConstants' return='T[]'/><method name='getField' return='java.lang.reflect.Field'><parameter name='name' type='java.lang.String'/><exception name='NoSuchFieldException' type='java.lang.NoSuchFieldException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getFields' return='java.lang.reflect.Field[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getGenericInterfaces' return='java.lang.reflect.Type[]'/><method name='getGenericSuperclass' return='java.lang.reflect.Type'/><method name='getInterfaces' native='true' return='java.lang.Class&lt;?&gt;[]'/><method name='getMethod' return='java.lang.reflect.Method'><parameter name='name' type='java.lang.String'/><parameter name='parameterTypes' type='java.lang.Class...'/><exception name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getMethods' return='java.lang.reflect.Method[]'><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='getModifiers' return='int'/><method name='getName' native='true' return='java.lang.String'/><method name='getPackage' return='java.lang.Package'/><method name='getProtectionDomain' return='java.security.ProtectionDomain'/><method name='getResource' return='java.net.URL'><parameter name='resName' type='java.lang.String'/></method><method name='getResourceAsStream' return='java.io.InputStream'><parameter name='resName' type='java.lang.String'/></method><method name='getSigners' return='java.lang.Object[]'/><method name='getSimpleName' return='java.lang.String'/><method name='getSuperclass' native='true' return='java.lang.Class&lt;? super T&gt;'/><method name='getTypeParameters' synchronized='true' return='java.lang.reflect.TypeVariable&lt;java.lang.Class&lt;T&gt;&gt;[]'/><method name='isAnnotation' return='boolean'/><method name='isAnnotationPresent' return='boolean'><parameter name='annotationClass' type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/></method><method name='isAnonymousClass' native='true' return='boolean'/><method name='isArray' return='boolean'/><method name='isAssignableFrom' native='true' return='boolean'><parameter name='cls' type='java.lang.Class&lt;?&gt;'/></method><method name='isEnum' return='boolean'/><method name='isInstance' native='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='isInterface' native='true' return='boolean'/><method name='isLocalClass' return='boolean'/><method name='isMemberClass' return='boolean'/><method name='isPrimitive' native='true' return='boolean'/><method name='isSynthetic' return='boolean'/><method name='newInstance' native='true' return='T'><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method></class><class name='ClassCastException' extends='java.lang.RuntimeException'><constructor name='ClassCastException' type='java.lang.ClassCastException'/><constructor name='ClassCastException' type='java.lang.ClassCastException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ClassCircularityError' extends='java.lang.LinkageError'><constructor name='ClassCircularityError' type='java.lang.ClassCircularityError'/><constructor name='ClassCircularityError' type='java.lang.ClassCircularityError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ClassFormatError' extends='java.lang.LinkageError'><constructor name='ClassFormatError' type='java.lang.ClassFormatError'/><constructor name='ClassFormatError' type='java.lang.ClassFormatError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ClassLoader' extends='java.lang.Object' abstract='true'><constructor name='ClassLoader' type='java.lang.ClassLoader' visibility='protected'/><constructor name='ClassLoader' type='java.lang.ClassLoader' visibility='protected'><parameter name='parentLoader' type='java.lang.ClassLoader'/></constructor><method name='clearAssertionStatus'/><method name='defineClass' final='true' deprecated='1' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='classRep' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='ClassFormatError' type='java.lang.ClassFormatError'/></method><method name='defineClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><parameter name='classRep' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='ClassFormatError' type='java.lang.ClassFormatError'/></method><method name='defineClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><parameter name='classRep' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='protectionDomain' type='java.security.ProtectionDomain'/><exception name='ClassFormatError' type='java.lang.ClassFormatError'/></method><method name='defineClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='name' type='java.lang.String'/><parameter name='b' type='java.nio.ByteBuffer'/><parameter name='protectionDomain' type='java.security.ProtectionDomain'/><exception name='ClassFormatError' type='java.lang.ClassFormatError'/></method><method name='definePackage' visibility='protected' return='java.lang.Package'><parameter name='name' type='java.lang.String'/><parameter name='specTitle' type='java.lang.String'/><parameter name='specVersion' type='java.lang.String'/><parameter name='specVendor' type='java.lang.String'/><parameter name='implTitle' type='java.lang.String'/><parameter name='implVersion' type='java.lang.String'/><parameter name='implVendor' type='java.lang.String'/><parameter name='sealBase' type='java.net.URL'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='findClass' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='findLibrary' visibility='protected' return='java.lang.String'><parameter name='libName' type='java.lang.String'/></method><method name='findLoadedClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/></method><method name='findResource' visibility='protected' return='java.net.URL'><parameter name='resName' type='java.lang.String'/></method><method name='findResources' visibility='protected' return='java.util.Enumeration&lt;java.net.URL&gt;'><parameter name='resName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='findSystemClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='getPackage' visibility='protected' return='java.lang.Package'><parameter name='name' type='java.lang.String'/></method><method name='getPackages' visibility='protected' return='java.lang.Package[]'/><method name='getParent' final='true' return='java.lang.ClassLoader'/><method name='getResource' return='java.net.URL'><parameter name='resName' type='java.lang.String'/></method><method name='getResourceAsStream' return='java.io.InputStream'><parameter name='resName' type='java.lang.String'/></method><method name='getResources' return='java.util.Enumeration&lt;java.net.URL&gt;'><parameter name='resName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='getSystemClassLoader' static='true' return='java.lang.ClassLoader'/><method name='getSystemResource' static='true' return='java.net.URL'><parameter name='resName' type='java.lang.String'/></method><method name='getSystemResourceAsStream' static='true' return='java.io.InputStream'><parameter name='resName' type='java.lang.String'/></method><method name='getSystemResources' static='true' return='java.util.Enumeration&lt;java.net.URL&gt;'><parameter name='resName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='loadClass' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='loadClass' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='className' type='java.lang.String'/><parameter name='resolve' type='boolean'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='resolveClass' final='true' visibility='protected'><parameter name='clazz' type='java.lang.Class&lt;?&gt;'/></method><method name='setClassAssertionStatus'><parameter name='cname' type='java.lang.String'/><parameter name='enable' type='boolean'/></method><method name='setDefaultAssertionStatus'><parameter name='enable' type='boolean'/></method><method name='setPackageAssertionStatus'><parameter name='pname' type='java.lang.String'/><parameter name='enable' type='boolean'/></method><method name='setSigners' final='true' visibility='protected'><parameter name='c' type='java.lang.Class&lt;?&gt;'/><parameter name='signers' type='java.lang.Object[]'/></method></class><class name='ClassNotFoundException' extends='java.lang.Exception'><constructor name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><constructor name='ClassNotFoundException' type='java.lang.ClassNotFoundException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='ClassNotFoundException' type='java.lang.ClassNotFoundException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='exception' type='java.lang.Throwable'/></constructor><method name='getException' return='java.lang.Throwable'/></class><class name='CloneNotSupportedException' extends='java.lang.Exception'><constructor name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/><constructor name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Compiler' final='true' extends='java.lang.Object'><method name='command' static='true' return='java.lang.Object'><parameter name='cmd' type='java.lang.Object'/></method><method name='compileClass' static='true' return='boolean'><parameter name='classToCompile' type='java.lang.Class&lt;?&gt;'/></method><method name='compileClasses' static='true' return='boolean'><parameter name='nameRoot' type='java.lang.String'/></method><method name='disable' static='true'/><method name='enable' static='true'/></class><class name='Deprecated' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='Double' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Double' type='java.lang.Double'><parameter name='value' type='double'/></constructor><constructor name='Double' type='java.lang.Double'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><field name='MAX_VALUE' final='true' static='true' value='1.7976931348623157E308' type='double'/><field name='MIN_VALUE' final='true' static='true' value='4.9E-324' type='double'/><field name='NEGATIVE_INFINITY' final='true' static='true' value='(-1.0 / 0.0)' type='double'/><field name='NaN' final='true' static='true' value='(0.0 / 0.0)' type='double'/><field name='POSITIVE_INFINITY' final='true' static='true' value='(1.0 / 0.0)' type='double'/><field name='SIZE' final='true' static='true' value='64' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='compare' static='true' return='int'><parameter name='double1' type='double'/><parameter name='double2' type='double'/></method><method name='compareTo' return='int'><parameter name='object' type='java.lang.Double'/></method><method name='doubleToLongBits' native='true' static='true' return='long'><parameter name='value' type='double'/></method><method name='doubleToRawLongBits' native='true' static='true' return='long'><parameter name='value' type='double'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='intValue' return='int'/><method name='isInfinite' return='boolean'/><method name='isInfinite' static='true' return='boolean'><parameter name='d' type='double'/></method><method name='isNaN' return='boolean'/><method name='isNaN' static='true' return='boolean'><parameter name='d' type='double'/></method><method name='longBitsToDouble' native='true' static='true' return='double'><parameter name='bits' type='long'/></method><method name='longValue' return='long'/><method name='parseDouble' static='true' return='double'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='toHexString' static='true' return='java.lang.String'><parameter name='d' type='double'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='d' type='double'/></method><method name='valueOf' static='true' return='java.lang.Double'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Double'><parameter name='d' type='double'/></method></class><class name='Enum' extends='java.lang.Object' abstract='true'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='Enum' type='java.lang.Enum' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='ordinal' type='int'/></constructor><method name='clone' final='true' visibility='protected' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='compareTo' final='true' return='int'><parameter name='o' type='E'/></method><method name='equals' final='true' return='boolean'><parameter name='other' type='java.lang.Object'/></method><method name='getDeclaringClass' final='true' return='java.lang.Class&lt;E&gt;'/><method name='hashCode' final='true' return='int'/><method name='name' final='true' return='java.lang.String'/><method name='ordinal' final='true' return='int'/><method name='valueOf' static='true' return='T'><parameter name='enumType' type='java.lang.Class&lt;T&gt;'/><parameter name='name' type='java.lang.String'/></method></class><class name='EnumConstantNotPresentException' extends='java.lang.RuntimeException'><constructor name='EnumConstantNotPresentException' type='java.lang.EnumConstantNotPresentException'><parameter name='enumType' type='java.lang.Class&lt;? extends java.lang.Enum&gt;'/><parameter name='constantName' type='java.lang.String'/></constructor><method name='constantName' return='java.lang.String'/><method name='enumType' return='java.lang.Class&lt;? extends java.lang.Enum&gt;'/></class><class name='Error' extends='java.lang.Throwable'><constructor name='Error' type='java.lang.Error'/><constructor name='Error' type='java.lang.Error'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='Error' type='java.lang.Error'><parameter name='detailMessage' type='java.lang.String'/><parameter name='throwable' type='java.lang.Throwable'/></constructor><constructor name='Error' type='java.lang.Error'><parameter name='throwable' type='java.lang.Throwable'/></constructor></class><class name='Exception' extends='java.lang.Throwable'><constructor name='Exception' type='java.lang.Exception'/><constructor name='Exception' type='java.lang.Exception'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='Exception' type='java.lang.Exception'><parameter name='detailMessage' type='java.lang.String'/><parameter name='throwable' type='java.lang.Throwable'/></constructor><constructor name='Exception' type='java.lang.Exception'><parameter name='throwable' type='java.lang.Throwable'/></constructor></class><class name='ExceptionInInitializerError' extends='java.lang.LinkageError'><constructor name='ExceptionInInitializerError' type='java.lang.ExceptionInInitializerError'/><constructor name='ExceptionInInitializerError' type='java.lang.ExceptionInInitializerError'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='ExceptionInInitializerError' type='java.lang.ExceptionInInitializerError'><parameter name='exception' type='java.lang.Throwable'/></constructor><method name='getException' return='java.lang.Throwable'/></class><class name='Float' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Float' type='java.lang.Float'><parameter name='value' type='float'/></constructor><constructor name='Float' type='java.lang.Float'><parameter name='value' type='double'/></constructor><constructor name='Float' type='java.lang.Float'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><field name='MAX_VALUE' final='true' static='true' value='3.4028235E38f' type='float'/><field name='MIN_VALUE' final='true' static='true' value='1.4E-45f' type='float'/><field name='NEGATIVE_INFINITY' final='true' static='true' value='(-1.0f / 0.0f)' type='float'/><field name='NaN' final='true' static='true' value='(0.0f / 0.0f)' type='float'/><field name='POSITIVE_INFINITY' final='true' static='true' value='(1.0f / 0.0f)' type='float'/><field name='SIZE' final='true' static='true' value='32' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='compare' static='true' return='int'><parameter name='float1' type='float'/><parameter name='float2' type='float'/></method><method name='compareTo' return='int'><parameter name='object' type='java.lang.Float'/></method><method name='doubleValue' return='double'/><method name='floatToIntBits' native='true' static='true' return='int'><parameter name='value' type='float'/></method><method name='floatToRawIntBits' native='true' static='true' return='int'><parameter name='value' type='float'/></method><method name='floatValue' return='float'/><method name='intBitsToFloat' native='true' static='true' return='float'><parameter name='bits' type='int'/></method><method name='intValue' return='int'/><method name='isInfinite' return='boolean'/><method name='isInfinite' static='true' return='boolean'><parameter name='f' type='float'/></method><method name='isNaN' return='boolean'/><method name='isNaN' static='true' return='boolean'><parameter name='f' type='float'/></method><method name='longValue' return='long'/><method name='parseFloat' static='true' return='float'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='toHexString' static='true' return='java.lang.String'><parameter name='f' type='float'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='f' type='float'/></method><method name='valueOf' static='true' return='java.lang.Float'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Float'><parameter name='f' type='float'/></method></class><class name='IllegalAccessError' extends='java.lang.IncompatibleClassChangeError'><constructor name='IllegalAccessError' type='java.lang.IllegalAccessError'/><constructor name='IllegalAccessError' type='java.lang.IllegalAccessError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='IllegalAccessException' extends='java.lang.Exception'><constructor name='IllegalAccessException' type='java.lang.IllegalAccessException'/><constructor name='IllegalAccessException' type='java.lang.IllegalAccessException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='IllegalArgumentException' extends='java.lang.RuntimeException'><constructor name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><constructor name='IllegalArgumentException' type='java.lang.IllegalArgumentException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='IllegalArgumentException' type='java.lang.IllegalArgumentException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='IllegalArgumentException' type='java.lang.IllegalArgumentException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='IllegalMonitorStateException' extends='java.lang.RuntimeException'><constructor name='IllegalMonitorStateException' type='java.lang.IllegalMonitorStateException'/><constructor name='IllegalMonitorStateException' type='java.lang.IllegalMonitorStateException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='IllegalStateException' extends='java.lang.RuntimeException'><constructor name='IllegalStateException' type='java.lang.IllegalStateException'/><constructor name='IllegalStateException' type='java.lang.IllegalStateException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='IllegalStateException' type='java.lang.IllegalStateException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='IllegalStateException' type='java.lang.IllegalStateException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='IllegalThreadStateException' extends='java.lang.IllegalArgumentException'><constructor name='IllegalThreadStateException' type='java.lang.IllegalThreadStateException'/><constructor name='IllegalThreadStateException' type='java.lang.IllegalThreadStateException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='IncompatibleClassChangeError' extends='java.lang.LinkageError'><constructor name='IncompatibleClassChangeError' type='java.lang.IncompatibleClassChangeError'/><constructor name='IncompatibleClassChangeError' type='java.lang.IncompatibleClassChangeError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='IndexOutOfBoundsException' extends='java.lang.RuntimeException'><constructor name='IndexOutOfBoundsException' type='java.lang.IndexOutOfBoundsException'/><constructor name='IndexOutOfBoundsException' type='java.lang.IndexOutOfBoundsException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='InheritableThreadLocal' extends='java.lang.ThreadLocal'><constructor name='InheritableThreadLocal' type='java.lang.InheritableThreadLocal'/><method name='childValue' visibility='protected' return='T'><parameter name='parentValue' type='T'/></method></class><class name='InstantiationError' extends='java.lang.IncompatibleClassChangeError'><constructor name='InstantiationError' type='java.lang.InstantiationError'/><constructor name='InstantiationError' type='java.lang.InstantiationError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='InstantiationException' extends='java.lang.Exception'><constructor name='InstantiationException' type='java.lang.InstantiationException'/><constructor name='InstantiationException' type='java.lang.InstantiationException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Integer' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Integer' type='java.lang.Integer'><parameter name='value' type='int'/></constructor><constructor name='Integer' type='java.lang.Integer'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><field name='MAX_VALUE' final='true' static='true' value='2147483647' type='int'/><field name='MIN_VALUE' final='true' static='true' value='-2147483648' type='int'/><field name='SIZE' final='true' static='true' value='32' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='bitCount' static='true' return='int'><parameter name='i' type='int'/></method><method name='compareTo' return='int'><parameter name='object' type='java.lang.Integer'/></method><method name='decode' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='getInteger' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/></method><method name='getInteger' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getInteger' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.Integer'/></method><method name='highestOneBit' static='true' return='int'><parameter name='i' type='int'/></method><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='lowestOneBit' static='true' return='int'><parameter name='i' type='int'/></method><method name='numberOfLeadingZeros' static='true' return='int'><parameter name='i' type='int'/></method><method name='numberOfTrailingZeros' static='true' return='int'><parameter name='i' type='int'/></method><method name='parseInt' static='true' return='int'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='parseInt' static='true' return='int'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='reverse' static='true' return='int'><parameter name='i' type='int'/></method><method name='reverseBytes' static='true' return='int'><parameter name='i' type='int'/></method><method name='rotateLeft' static='true' return='int'><parameter name='i' type='int'/><parameter name='distance' type='int'/></method><method name='rotateRight' static='true' return='int'><parameter name='i' type='int'/><parameter name='distance' type='int'/></method><method name='signum' static='true' return='int'><parameter name='i' type='int'/></method><method name='toBinaryString' static='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='toHexString' static='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='toOctalString' static='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='i' type='int'/><parameter name='value' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='i' type='int'/><parameter name='radix' type='int'/></method><method name='valueOf' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Integer'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Integer'><parameter name='i' type='int'/></method><method api_added='6' name='toString' static='true' return='java.lang.String'><parameter name='value' type='int'/><parameter name='i' type='int'/></method></class><class name='InternalError' extends='java.lang.VirtualMachineError'><constructor name='InternalError' type='java.lang.InternalError'/><constructor name='InternalError' type='java.lang.InternalError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='InterruptedException' extends='java.lang.Exception'><constructor name='InterruptedException' type='java.lang.InterruptedException'/><constructor name='InterruptedException' type='java.lang.InterruptedException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='LinkageError' extends='java.lang.Error'><constructor name='LinkageError' type='java.lang.LinkageError'/><constructor name='LinkageError' type='java.lang.LinkageError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Long' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Long' type='java.lang.Long'><parameter name='value' type='long'/></constructor><constructor name='Long' type='java.lang.Long'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><field name='MAX_VALUE' final='true' static='true' value='9223372036854775807L' type='long'/><field name='MIN_VALUE' final='true' static='true' value='-9223372036854775808L' type='long'/><field name='SIZE' final='true' static='true' value='64' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='bitCount' static='true' return='int'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='compareTo' return='int'><parameter name='object' type='java.lang.Long'/></method><method name='decode' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='getLong' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/></method><method name='getLong' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='getLong' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.Long'/></method><method name='highestOneBit' static='true' return='long'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='lowestOneBit' static='true' return='long'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='numberOfLeadingZeros' static='true' return='int'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='numberOfTrailingZeros' static='true' return='int'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='parseLong' static='true' return='long'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='parseLong' static='true' return='long'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='reverse' static='true' return='long'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='reverseBytes' static='true' return='long'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='rotateLeft' static='true' return='long'><parameter name='lng' type='long'/><parameter name='distance' type='int'/><parameter name='v' type='long'/></method><method name='rotateRight' static='true' return='long'><parameter name='lng' type='long'/><parameter name='distance' type='int'/><parameter name='v' type='long'/></method><method name='signum' static='true' return='int'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method><method name='toBinaryString' static='true' return='java.lang.String'><parameter name='l' type='long'/><parameter name='v' type='long'/></method><method name='toHexString' static='true' return='java.lang.String'><parameter name='l' type='long'/><parameter name='v' type='long'/></method><method name='toOctalString' static='true' return='java.lang.String'><parameter name='l' type='long'/><parameter name='v' type='long'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='l' type='long'/><parameter name='n' type='long'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='l' type='long'/><parameter name='radix' type='int'/><parameter name='v' type='long'/></method><method name='valueOf' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Long'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Long'><parameter name='lng' type='long'/><parameter name='v' type='long'/></method></class><class name='Math' final='true' extends='java.lang.Object'><field name='E' final='true' static='true' value='2.718281828459045' type='double'/><field name='PI' final='true' static='true' value='3.141592653589793' type='double'/><method name='IEEEremainder' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='abs' static='true' return='double'><parameter name='d' type='double'/></method><method name='abs' static='true' return='float'><parameter name='f' type='float'/></method><method name='abs' static='true' return='int'><parameter name='i' type='int'/></method><method name='abs' static='true' return='long'><parameter name='l' type='long'/></method><method name='acos' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='asin' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='atan' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='atan2' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='y' type='double'/><parameter name='x' type='double'/></method><method name='cbrt' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='ceil' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='cos' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='cosh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='exp' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='expm1' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='floor' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='hypot' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='log' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='log10' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='log1p' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='max' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/></method><method name='max' static='true' return='float'><parameter name='f1' type='float'/><parameter name='f2' type='float'/></method><method name='max' static='true' return='int'><parameter name='i1' type='int'/><parameter name='i2' type='int'/></method><method name='max' static='true' return='long'><parameter name='l1' type='long'/><parameter name='l2' type='long'/></method><method name='min' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/></method><method name='min' static='true' return='float'><parameter name='f1' type='float'/><parameter name='f2' type='float'/></method><method name='min' static='true' return='int'><parameter name='i1' type='int'/><parameter name='i2' type='int'/></method><method name='min' static='true' return='long'><parameter name='l1' type='long'/><parameter name='l2' type='long'/></method><method name='pow' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='random' static='true' return='double'/><method name='rint' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='round' static='true' return='long'><parameter name='d' type='double'/></method><method name='round' static='true' return='int'><parameter name='f' type='float'/></method><method name='signum' static='true' return='double'><parameter name='d' type='double'/></method><method name='signum' static='true' return='float'><parameter name='f' type='float'/></method><method name='sin' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='sinh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='sqrt' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='tan' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='tanh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='toDegrees' static='true' return='double'><parameter name='angrad' type='double'/></method><method name='toRadians' static='true' return='double'><parameter name='angdeg' type='double'/></method><method name='ulp' static='true' return='double'><parameter name='d' type='double'/></method><method name='ulp' static='true' return='float'><parameter name='f' type='float'/></method><method api_added='4' name='IEEEremainder' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method api_added='4' name='atan2' native='true' static='true' return='double'><parameter name='y' type='double'/><parameter name='x' type='double'/></method><method api_added='4' name='pow' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method></class><class name='NegativeArraySizeException' extends='java.lang.RuntimeException'><constructor name='NegativeArraySizeException' type='java.lang.NegativeArraySizeException'/><constructor name='NegativeArraySizeException' type='java.lang.NegativeArraySizeException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NoClassDefFoundError' extends='java.lang.LinkageError'><constructor name='NoClassDefFoundError' type='java.lang.NoClassDefFoundError'/><constructor name='NoClassDefFoundError' type='java.lang.NoClassDefFoundError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NoSuchFieldError' extends='java.lang.IncompatibleClassChangeError'><constructor name='NoSuchFieldError' type='java.lang.NoSuchFieldError'/><constructor name='NoSuchFieldError' type='java.lang.NoSuchFieldError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NoSuchFieldException' extends='java.lang.Exception'><constructor name='NoSuchFieldException' type='java.lang.NoSuchFieldException'/><constructor name='NoSuchFieldException' type='java.lang.NoSuchFieldException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NoSuchMethodError' extends='java.lang.IncompatibleClassChangeError'><constructor name='NoSuchMethodError' type='java.lang.NoSuchMethodError'/><constructor name='NoSuchMethodError' type='java.lang.NoSuchMethodError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NoSuchMethodException' extends='java.lang.Exception'><constructor name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/><constructor name='NoSuchMethodException' type='java.lang.NoSuchMethodException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='NullPointerException' extends='java.lang.RuntimeException'><constructor name='NullPointerException' type='java.lang.NullPointerException'/><constructor name='NullPointerException' type='java.lang.NullPointerException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Number' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='Number' type='java.lang.Number'/><method name='byteValue' return='byte'/><method name='doubleValue' abstract='true' return='double'/><method name='floatValue' abstract='true' return='float'/><method name='intValue' abstract='true' return='int'/><method name='longValue' abstract='true' return='long'/><method name='shortValue' return='short'/></class><class name='NumberFormatException' extends='java.lang.IllegalArgumentException'><constructor name='NumberFormatException' type='java.lang.NumberFormatException'/><constructor name='NumberFormatException' type='java.lang.NumberFormatException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Object'><constructor name='Object' type='java.lang.Object'/><method name='clone' visibility='protected' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='equals' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method name='finalize' visibility='protected'><exception name='Throwable' type='java.lang.Throwable'/></method><method name='getClass' final='true' native='true' return='java.lang.Class&lt;? extends java.lang.Object&gt;'/><method name='hashCode' native='true' return='int'/><method name='notify' final='true' native='true'/><method name='notifyAll' final='true' native='true'/><method name='toString' return='java.lang.String'/><method name='wait' final='true'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='wait' final='true' api_removed='4'><parameter name='time' type='long'/><parameter name='millis' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='wait' final='true' native='true' api_removed='4'><parameter name='time' type='long'/><parameter name='frac' type='int'/><parameter name='millis' type='long'/><parameter name='nanos' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='4' name='wait' final='true'><parameter name='millis' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='4' name='wait' final='true' native='true'><parameter name='millis' type='long'/><parameter name='nanos' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='OutOfMemoryError' extends='java.lang.VirtualMachineError'><constructor name='OutOfMemoryError' type='java.lang.OutOfMemoryError'/><constructor name='OutOfMemoryError' type='java.lang.OutOfMemoryError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Override' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='Package' extends='java.lang.Object'><implements name='java.lang.reflect.AnnotatedElement'/><method name='getAnnotation' return='T'><parameter name='annotationType' type='java.lang.Class&lt;T&gt;'/></method><method name='getAnnotations' return='java.lang.annotation.Annotation[]'/><method name='getDeclaredAnnotations' return='java.lang.annotation.Annotation[]'/><method name='getImplementationTitle' return='java.lang.String'/><method name='getImplementationVendor' return='java.lang.String'/><method name='getImplementationVersion' return='java.lang.String'/><method name='getName' return='java.lang.String'/><method name='getPackage' static='true' return='java.lang.Package'><parameter name='packageName' type='java.lang.String'/></method><method name='getPackages' static='true' return='java.lang.Package[]'/><method name='getSpecificationTitle' return='java.lang.String'/><method name='getSpecificationVendor' return='java.lang.String'/><method name='getSpecificationVersion' return='java.lang.String'/><method name='isAnnotationPresent' return='boolean'><parameter name='annotationType' type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/></method><method name='isCompatibleWith' return='boolean'><parameter name='version' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='isSealed' return='boolean'/><method name='isSealed' return='boolean'><parameter name='url' type='java.net.URL'/></method></class><class name='Process' extends='java.lang.Object' abstract='true'><constructor name='Process' type='java.lang.Process'/><method name='destroy' abstract='true'/><method name='exitValue' abstract='true' return='int'/><method name='getErrorStream' abstract='true' return='java.io.InputStream'/><method name='getInputStream' abstract='true' return='java.io.InputStream'/><method name='getOutputStream' abstract='true' return='java.io.OutputStream'/><method name='waitFor' abstract='true' return='int'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='ProcessBuilder' final='true' extends='java.lang.Object'><constructor name='ProcessBuilder' type='java.lang.ProcessBuilder'><parameter name='command' type='java.lang.String...'/></constructor><constructor name='ProcessBuilder' type='java.lang.ProcessBuilder'><parameter name='command' type='java.util.List&lt;java.lang.String&gt;'/></constructor><method name='command' return='java.util.List&lt;java.lang.String&gt;'/><method name='command' return='java.lang.ProcessBuilder'><parameter name='command' type='java.lang.String...'/></method><method name='command' return='java.lang.ProcessBuilder'><parameter name='command' type='java.util.List&lt;java.lang.String&gt;'/></method><method name='directory' return='java.io.File'/><method name='directory' return='java.lang.ProcessBuilder'><parameter name='directory' type='java.io.File'/></method><method name='environment' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/><method name='redirectErrorStream' return='boolean'/><method name='redirectErrorStream' return='java.lang.ProcessBuilder'><parameter name='redirectErrorStream' type='boolean'/></method><method name='start' return='java.lang.Process'><exception name='IOException' type='java.io.IOException'/></method></class><class name='Runtime' extends='java.lang.Object'><method name='addShutdownHook'><parameter name='hook' type='java.lang.Thread'/></method><method name='availableProcessors' return='int'/><method name='exec' return='java.lang.Process'><parameter name='progArray' type='java.lang.String[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='exec' return='java.lang.Process'><parameter name='progArray' type='java.lang.String[]'/><parameter name='envp' type='java.lang.String[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='exec' return='java.lang.Process'><parameter name='progArray' type='java.lang.String[]'/><parameter name='envp' type='java.lang.String[]'/><parameter name='directory' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></method><method name='exec' return='java.lang.Process'><parameter name='prog' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='exec' return='java.lang.Process'><parameter name='prog' type='java.lang.String'/><parameter name='envp' type='java.lang.String[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='exec' return='java.lang.Process'><parameter name='prog' type='java.lang.String'/><parameter name='envp' type='java.lang.String[]'/><parameter name='directory' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></method><method name='exit'><parameter name='code' type='int'/></method><method name='freeMemory' native='true' return='long'/><method name='gc' native='true'/><method name='getLocalizedInputStream' deprecated='1' return='java.io.InputStream'><parameter name='stream' type='java.io.InputStream'/></method><method name='getLocalizedOutputStream' deprecated='1' return='java.io.OutputStream'><parameter name='stream' type='java.io.OutputStream'/></method><method name='getRuntime' static='true' return='java.lang.Runtime'/><method name='halt'><parameter name='code' type='int'/></method><method name='load'><parameter name='pathName' type='java.lang.String'/></method><method name='loadLibrary'><parameter name='libName' type='java.lang.String'/></method><method name='maxMemory' native='true' return='long'/><method name='removeShutdownHook' return='boolean'><parameter name='hook' type='java.lang.Thread'/></method><method name='runFinalization'/><method name='runFinalizersOnExit' static='true' deprecated='1'><parameter name='run' type='boolean'/></method><method name='totalMemory' native='true' return='long'/><method name='traceInstructions'><parameter name='enable' type='boolean'/></method><method name='traceMethodCalls'><parameter name='enable' type='boolean'/></method></class><class name='RuntimeException' extends='java.lang.Exception'><constructor name='RuntimeException' type='java.lang.RuntimeException'/><constructor name='RuntimeException' type='java.lang.RuntimeException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='RuntimeException' type='java.lang.RuntimeException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='throwable' type='java.lang.Throwable'/></constructor><constructor name='RuntimeException' type='java.lang.RuntimeException'><parameter name='throwable' type='java.lang.Throwable'/></constructor></class><class name='RuntimePermission' final='true' extends='java.security.BasicPermission'><constructor name='RuntimePermission' type='java.lang.RuntimePermission'><parameter name='permissionName' type='java.lang.String'/></constructor><constructor name='RuntimePermission' type='java.lang.RuntimePermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='SecurityException' extends='java.lang.RuntimeException'><constructor name='SecurityException' type='java.lang.SecurityException'/><constructor name='SecurityException' type='java.lang.SecurityException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='SecurityException' type='java.lang.SecurityException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='SecurityException' type='java.lang.SecurityException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='SecurityManager' extends='java.lang.Object'><constructor name='SecurityManager' type='java.lang.SecurityManager'/><field name='inCheck' type='boolean' deprecated='1' visibility='protected'/><method name='checkAccept'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></method><method name='checkAccess'><parameter name='thread' type='java.lang.Thread'/></method><method name='checkAccess'><parameter name='group' type='java.lang.ThreadGroup'/></method><method name='checkAwtEventQueueAccess'/><method name='checkConnect'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></method><method name='checkConnect'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='context' type='java.lang.Object'/></method><method name='checkCreateClassLoader'/><method name='checkDelete'><parameter name='file' type='java.lang.String'/></method><method name='checkExec'><parameter name='cmd' type='java.lang.String'/></method><method name='checkExit'><parameter name='status' type='int'/></method><method name='checkLink'><parameter name='libName' type='java.lang.String'/></method><method name='checkListen'><parameter name='port' type='int'/></method><method name='checkMemberAccess'><parameter name='cls' type='java.lang.Class&lt;?&gt;'/><parameter name='type' type='int'/></method><method name='checkMulticast'><parameter name='maddr' type='java.net.InetAddress'/></method><method name='checkMulticast' deprecated='1'><parameter name='maddr' type='java.net.InetAddress'/><parameter name='ttl' type='byte'/></method><method name='checkPackageAccess'><parameter name='packageName' type='java.lang.String'/></method><method name='checkPackageDefinition'><parameter name='packageName' type='java.lang.String'/></method><method name='checkPermission'><parameter name='permission' type='java.security.Permission'/></method><method name='checkPermission'><parameter name='permission' type='java.security.Permission'/><parameter name='context' type='java.lang.Object'/></method><method name='checkPrintJobAccess'/><method name='checkPropertiesAccess'/><method name='checkPropertyAccess'><parameter name='key' type='java.lang.String'/></method><method name='checkRead'><parameter name='fd' type='java.io.FileDescriptor'/></method><method name='checkRead'><parameter name='file' type='java.lang.String'/></method><method name='checkRead'><parameter name='file' type='java.lang.String'/><parameter name='context' type='java.lang.Object'/></method><method name='checkSecurityAccess'><parameter name='target' type='java.lang.String'/></method><method name='checkSetFactory'/><method name='checkSystemClipboardAccess'/><method name='checkTopLevelWindow' return='boolean'><parameter name='window' type='java.lang.Object'/></method><method name='checkWrite'><parameter name='fd' type='java.io.FileDescriptor'/></method><method name='checkWrite'><parameter name='file' type='java.lang.String'/></method><method name='classDepth' deprecated='1' visibility='protected' return='int'><parameter name='name' type='java.lang.String'/></method><method name='classLoaderDepth' deprecated='1' visibility='protected' return='int'/><method name='currentClassLoader' deprecated='1' visibility='protected' return='java.lang.ClassLoader'/><method name='currentLoadedClass' deprecated='1' visibility='protected' return='java.lang.Class&lt;?&gt;'/><method name='getClassContext' visibility='protected' return='java.lang.Class[]'/><method name='getInCheck' deprecated='1' return='boolean'/><method name='getSecurityContext' return='java.lang.Object'/><method name='getThreadGroup' return='java.lang.ThreadGroup'/><method name='inClass' deprecated='1' visibility='protected' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='inClassLoader' deprecated='1' visibility='protected' return='boolean'/></class><class name='Short' final='true' extends='java.lang.Number'><implements name='java.lang.Comparable'/><constructor name='Short' type='java.lang.Short'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></constructor><constructor name='Short' type='java.lang.Short'><parameter name='value' type='short'/></constructor><field name='MAX_VALUE' final='true' static='true' value='32767' type='short'/><field name='MIN_VALUE' final='true' static='true' value='-32768' type='short'/><field name='SIZE' final='true' static='true' value='16' type='int'/><field name='TYPE' final='true' static='true' type='java.lang.Class'/><method name='compareTo' return='int'><parameter name='object' type='java.lang.Short'/></method><method name='decode' static='true' return='java.lang.Short'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='parseShort' static='true' return='short'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='parseShort' static='true' return='short'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='reverseBytes' static='true' return='short'><parameter name='s' type='short'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='value' type='short'/></method><method name='valueOf' static='true' return='java.lang.Short'><parameter name='string' type='java.lang.String'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Short'><parameter name='string' type='java.lang.String'/><parameter name='radix' type='int'/><exception name='NumberFormatException' type='java.lang.NumberFormatException'/></method><method name='valueOf' static='true' return='java.lang.Short'><parameter name='s' type='short'/></method></class><class name='StackOverflowError' extends='java.lang.VirtualMachineError'><constructor name='StackOverflowError' type='java.lang.StackOverflowError'/><constructor name='StackOverflowError' type='java.lang.StackOverflowError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='StackTraceElement' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='StackTraceElement' type='java.lang.StackTraceElement'><parameter name='cls' type='java.lang.String'/><parameter name='method' type='java.lang.String'/><parameter name='file' type='java.lang.String'/><parameter name='line' type='int'/></constructor><method name='getClassName' return='java.lang.String'/><method name='getFileName' return='java.lang.String'/><method name='getLineNumber' return='int'/><method name='getMethodName' return='java.lang.String'/><method name='isNativeMethod' return='boolean'/></class><class name='StrictMath' final='true' extends='java.lang.Object'><field name='E' final='true' static='true' value='2.718281828459045' type='double'/><field name='PI' final='true' static='true' value='3.141592653589793' type='double'/><method name='IEEEremainder' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='abs' static='true' return='double'><parameter name='d' type='double'/></method><method name='abs' static='true' return='float'><parameter name='f' type='float'/></method><method name='abs' static='true' return='int'><parameter name='i' type='int'/></method><method name='abs' static='true' return='long'><parameter name='l' type='long'/></method><method name='acos' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='asin' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='atan' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='atan2' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='y' type='double'/><parameter name='x' type='double'/></method><method name='cbrt' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='ceil' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='cos' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='cosh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='exp' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='expm1' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='floor' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='hypot' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='log' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='log10' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='log1p' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='max' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/></method><method name='max' static='true' return='float'><parameter name='f1' type='float'/><parameter name='f2' type='float'/></method><method name='max' static='true' return='int'><parameter name='i1' type='int'/><parameter name='i2' type='int'/></method><method name='max' static='true' return='long'><parameter name='l1' type='long'/><parameter name='l2' type='long'/></method><method name='min' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/></method><method name='min' static='true' return='float'><parameter name='f1' type='float'/><parameter name='f2' type='float'/></method><method name='min' static='true' return='int'><parameter name='i1' type='int'/><parameter name='i2' type='int'/></method><method name='min' static='true' return='long'><parameter name='l1' type='long'/><parameter name='l2' type='long'/></method><method name='pow' native='true' api_removed='4' static='true' return='double'><parameter name='d1' type='double'/><parameter name='d2' type='double'/><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method name='random' static='true' return='double'/><method name='rint' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='round' static='true' return='long'><parameter name='d' type='double'/></method><method name='round' static='true' return='int'><parameter name='f' type='float'/></method><method name='signum' static='true' return='double'><parameter name='d' type='double'/></method><method name='signum' static='true' return='float'><parameter name='f' type='float'/></method><method name='sin' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='sinh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='sqrt' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='tan' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='tanh' native='true' static='true' return='double'><parameter name='d' type='double'/></method><method name='toDegrees' static='true' return='double'><parameter name='angrad' type='double'/></method><method name='toRadians' static='true' return='double'><parameter name='angdeg' type='double'/></method><method name='ulp' static='true' return='double'><parameter name='d' type='double'/></method><method name='ulp' static='true' return='float'><parameter name='f' type='float'/></method><method api_added='4' name='IEEEremainder' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method><method api_added='4' name='atan2' native='true' static='true' return='double'><parameter name='y' type='double'/><parameter name='x' type='double'/></method><method api_added='4' name='pow' native='true' static='true' return='double'><parameter name='x' type='double'/><parameter name='y' type='double'/></method></class><class name='String' final='true' extends='java.lang.Object'><implements name='java.lang.CharSequence'/><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='String' type='java.lang.String'/><constructor name='String' type='java.lang.String'><parameter name='data' type='byte[]'/></constructor><constructor name='String' type='java.lang.String' deprecated='1'><parameter name='data' type='byte[]'/><parameter name='high' type='int'/></constructor><constructor name='String' type='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></constructor><constructor name='String' type='java.lang.String' deprecated='1'><parameter name='data' type='byte[]'/><parameter name='high' type='int'/><parameter name='start' type='int'/><parameter name='length' type='int'/></constructor><constructor name='String' type='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><parameter name='encoding' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='String' type='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='encoding' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='String' type='java.lang.String'><parameter name='data' type='char[]'/></constructor><constructor name='String' type='java.lang.String'><parameter name='data' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></constructor><constructor name='String' type='java.lang.String'><parameter name='string' type='java.lang.String'/></constructor><constructor name='String' type='java.lang.String'><parameter name='stringbuffer' type='java.lang.StringBuffer'/></constructor><constructor name='String' type='java.lang.String'><parameter name='codePoints' type='int[]'/><parameter name='offset' type='int'/><parameter name='count' type='int'/></constructor><constructor name='String' type='java.lang.String'><parameter name='sb' type='java.lang.StringBuilder'/></constructor><field name='CASE_INSENSITIVE_ORDER' final='true' static='true' type='java.util.Comparator'/><method name='charAt' return='char'><parameter name='index' type='int'/></method><method name='codePointAt' return='int'><parameter name='index' type='int'/></method><method name='codePointBefore' return='int'><parameter name='index' type='int'/></method><method name='codePointCount' return='int'><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='compareTo' return='int'><parameter name='string' type='java.lang.String'/></method><method name='compareToIgnoreCase' return='int'><parameter name='string' type='java.lang.String'/></method><method name='concat' return='java.lang.String'><parameter name='string' type='java.lang.String'/></method><method name='contains' return='boolean'><parameter name='cs' type='java.lang.CharSequence'/></method><method name='contentEquals' return='boolean'><parameter name='strbuf' type='java.lang.StringBuffer'/></method><method name='contentEquals' return='boolean'><parameter name='cs' type='java.lang.CharSequence'/></method><method name='copyValueOf' static='true' return='java.lang.String'><parameter name='data' type='char[]'/></method><method name='copyValueOf' static='true' return='java.lang.String'><parameter name='data' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='endsWith' return='boolean'><parameter name='suffix' type='java.lang.String'/></method><method name='equalsIgnoreCase' return='boolean'><parameter name='string' type='java.lang.String'/></method><method name='format' static='true' return='java.lang.String'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='format' static='true' return='java.lang.String'><parameter name='loc' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='getBytes' return='byte[]'/><method name='getBytes' deprecated='1'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='data' type='byte[]'/><parameter name='index' type='int'/></method><method name='getBytes' return='byte[]'><parameter name='encoding' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method><method name='getChars'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='buffer' type='char[]'/><parameter name='index' type='int'/></method><method name='indexOf' return='int'><parameter name='c' type='int'/></method><method name='indexOf' return='int'><parameter name='c' type='int'/><parameter name='start' type='int'/></method><method name='indexOf' return='int'><parameter name='string' type='java.lang.String'/></method><method name='indexOf' return='int'><parameter name='subString' type='java.lang.String'/><parameter name='start' type='int'/></method><method name='intern' native='true' return='java.lang.String'/><method name='lastIndexOf' return='int'><parameter name='c' type='int'/></method><method name='lastIndexOf' return='int'><parameter name='c' type='int'/><parameter name='start' type='int'/></method><method name='lastIndexOf' return='int'><parameter name='string' type='java.lang.String'/></method><method name='lastIndexOf' return='int'><parameter name='subString' type='java.lang.String'/><parameter name='start' type='int'/></method><method name='length' return='int'/><method name='matches' return='boolean'><parameter name='expr' type='java.lang.String'/></method><method name='offsetByCodePoints' return='int'><parameter name='index' type='int'/><parameter name='codePointOffset' type='int'/></method><method name='regionMatches' return='boolean'><parameter name='thisStart' type='int'/><parameter name='string' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='regionMatches' return='boolean'><parameter name='ignoreCase' type='boolean'/><parameter name='thisStart' type='int'/><parameter name='string' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='replace' return='java.lang.String'><parameter name='oldChar' type='char'/><parameter name='newChar' type='char'/></method><method name='replace' return='java.lang.String'><parameter name='target' type='java.lang.CharSequence'/><parameter name='replacement' type='java.lang.CharSequence'/></method><method name='replaceAll' return='java.lang.String'><parameter name='expr' type='java.lang.String'/><parameter name='substitute' type='java.lang.String'/></method><method name='replaceFirst' return='java.lang.String'><parameter name='expr' type='java.lang.String'/><parameter name='substitute' type='java.lang.String'/></method><method name='split' return='java.lang.String[]'><parameter name='expr' type='java.lang.String'/></method><method name='split' return='java.lang.String[]'><parameter name='expr' type='java.lang.String'/><parameter name='max' type='int'/></method><method name='startsWith' return='boolean'><parameter name='prefix' type='java.lang.String'/></method><method name='startsWith' return='boolean'><parameter name='prefix' type='java.lang.String'/><parameter name='start' type='int'/></method><method name='subSequence' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='substring' return='java.lang.String'><parameter name='start' type='int'/></method><method name='substring' return='java.lang.String'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='toCharArray' return='char[]'/><method name='toLowerCase' return='java.lang.String'/><method name='toLowerCase' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='toUpperCase' return='java.lang.String'/><method name='toUpperCase' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='trim' return='java.lang.String'/><method name='valueOf' static='true' return='java.lang.String'><parameter name='data' type='char[]'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='data' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='char'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='double'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='float'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='int'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='long'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='java.lang.Object'/></method><method name='valueOf' static='true' return='java.lang.String'><parameter name='value' type='boolean'/></method></class><class name='StringBuffer' final='true' extends='java.lang.AbstractStringBuilder'><implements name='java.lang.Appendable'/><implements name='java.lang.CharSequence'/><implements name='java.io.Serializable'/><constructor name='StringBuffer' type='java.lang.StringBuffer'/><constructor name='StringBuffer' type='java.lang.StringBuffer'><parameter name='capacity' type='int'/></constructor><constructor name='StringBuffer' type='java.lang.StringBuffer'><parameter name='string' type='java.lang.String'/></constructor><constructor name='StringBuffer' type='java.lang.StringBuffer'><parameter name='cs' type='java.lang.CharSequence'/></constructor><method name='append' return='java.lang.StringBuffer'><parameter name='b' type='boolean'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='ch' type='char'/></method><method name='append' return='java.lang.StringBuffer'><parameter name='d' type='double'/></method><method name='append' return='java.lang.StringBuffer'><parameter name='f' type='float'/></method><method name='append' return='java.lang.StringBuffer'><parameter name='i' type='int'/></method><method name='append' return='java.lang.StringBuffer'><parameter name='l' type='long'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='obj' type='java.lang.Object'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='string' type='java.lang.String'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='sb' type='java.lang.StringBuffer'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='chars' type='char[]'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='chars' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='s' type='java.lang.CharSequence'/></method><method name='append' synchronized='true' return='java.lang.StringBuffer'><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='appendCodePoint' return='java.lang.StringBuffer'><parameter name='codePoint' type='int'/></method><method name='delete' synchronized='true' return='java.lang.StringBuffer'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='deleteCharAt' synchronized='true' return='java.lang.StringBuffer'><parameter name='location' type='int'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='ch' type='char'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='b' type='boolean'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='i' type='int'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='l' type='long'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='d' type='double'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='f' type='float'/></method><method name='insert' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='string' type='java.lang.String'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='chars' type='char[]'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='chars' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='s' type='java.lang.CharSequence'/></method><method name='insert' synchronized='true' return='java.lang.StringBuffer'><parameter name='index' type='int'/><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='replace' synchronized='true' return='java.lang.StringBuffer'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='string' type='java.lang.String'/></method><method name='reverse' synchronized='true' return='java.lang.StringBuffer'/></class><class name='StringBuilder' final='true' extends='java.lang.AbstractStringBuilder'><implements name='java.lang.Appendable'/><implements name='java.lang.CharSequence'/><implements name='java.io.Serializable'/><constructor name='StringBuilder' type='java.lang.StringBuilder'/><constructor name='StringBuilder' type='java.lang.StringBuilder'><parameter name='capacity' type='int'/></constructor><constructor name='StringBuilder' type='java.lang.StringBuilder'><parameter name='seq' type='java.lang.CharSequence'/></constructor><constructor name='StringBuilder' type='java.lang.StringBuilder'><parameter name='str' type='java.lang.String'/></constructor><method name='append' return='java.lang.StringBuilder'><parameter name='b' type='boolean'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='c' type='char'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='i' type='int'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='lng' type='long'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='f' type='float'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='d' type='double'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='obj' type='java.lang.Object'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='str' type='java.lang.String'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='sb' type='java.lang.StringBuffer'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='ch' type='char[]'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='str' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='csq' type='java.lang.CharSequence'/></method><method name='append' return='java.lang.StringBuilder'><parameter name='csq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='appendCodePoint' return='java.lang.StringBuilder'><parameter name='codePoint' type='int'/></method><method name='delete' return='java.lang.StringBuilder'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='deleteCharAt' return='java.lang.StringBuilder'><parameter name='index' type='int'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='b' type='boolean'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='c' type='char'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='i' type='int'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='l' type='long'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='f' type='float'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='d' type='double'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='obj' type='java.lang.Object'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='str' type='java.lang.String'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='ch' type='char[]'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='str' type='char[]'/><parameter name='strOffset' type='int'/><parameter name='strLen' type='int'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='s' type='java.lang.CharSequence'/></method><method name='insert' return='java.lang.StringBuilder'><parameter name='offset' type='int'/><parameter name='s' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='replace' return='java.lang.StringBuilder'><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='str' type='java.lang.String'/></method><method name='reverse' return='java.lang.StringBuilder'/></class><class name='StringIndexOutOfBoundsException' extends='java.lang.IndexOutOfBoundsException'><constructor name='StringIndexOutOfBoundsException' type='java.lang.StringIndexOutOfBoundsException'/><constructor name='StringIndexOutOfBoundsException' type='java.lang.StringIndexOutOfBoundsException'><parameter name='index' type='int'/></constructor><constructor name='StringIndexOutOfBoundsException' type='java.lang.StringIndexOutOfBoundsException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='SuppressWarnings' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='System' final='true' extends='java.lang.Object'><field name='err' final='true' static='true' type='java.io.PrintStream'/><field name='in' final='true' static='true' type='java.io.InputStream'/><field name='out' final='true' static='true' type='java.io.PrintStream'/><method name='arraycopy' native='true' api_removed='3' static='true'><parameter name='array1' type='java.lang.Object'/><parameter name='start1' type='int'/><parameter name='array2' type='java.lang.Object'/><parameter name='start2' type='int'/><parameter name='length' type='int'/><parameter name='source' type='java.lang.Object'/><parameter name='sourceIndex' type='int'/><parameter name='destination' type='java.lang.Object'/><parameter name='destinationIndex' type='int'/></method><method name='clearProperty' static='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='currentTimeMillis' native='true' static='true' return='long'/><method name='exit' static='true'><parameter name='code' type='int'/></method><method name='gc' static='true'/><method name='getProperties' static='true' return='java.util.Properties'/><method name='getProperty' static='true' return='java.lang.String'><parameter name='prop' type='java.lang.String'/></method><method name='getProperty' static='true' return='java.lang.String'><parameter name='prop' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.String'/></method><method name='getSecurityManager' static='true' return='java.lang.SecurityManager'/><method name='getenv' api_removed='4' static='true' return='java.lang.String'><parameter name='var' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='getenv' static='true' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/><method name='identityHashCode' native='true' static='true' return='int'><parameter name='anObject' type='java.lang.Object'/></method><method name='inheritedChannel' static='true' return='java.nio.channels.Channel'><exception name='IOException' type='java.io.IOException'/></method><method name='load' static='true'><parameter name='pathName' type='java.lang.String'/></method><method name='loadLibrary' static='true'><parameter name='libName' type='java.lang.String'/></method><method name='mapLibraryName' native='true' static='true' return='java.lang.String'><parameter name='userLibName' type='java.lang.String'/></method><method name='nanoTime' native='true' static='true' return='long'/><method name='runFinalization' static='true'/><method name='runFinalizersOnExit' static='true' deprecated='1'><parameter name='flag' type='boolean'/></method><method name='setErr' static='true'><parameter name='newErr' type='java.io.PrintStream'/></method><method name='setIn' static='true'><parameter name='newIn' type='java.io.InputStream'/></method><method name='setOut' static='true'><parameter name='newOut' type='java.io.PrintStream'/></method><method name='setProperties' static='true'><parameter name='p' type='java.util.Properties'/></method><method name='setProperty' static='true' return='java.lang.String'><parameter name='prop' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setSecurityManager' static='true'><parameter name='sm' type='java.lang.SecurityManager'/></method><method api_added='3' name='arraycopy' native='true' static='true'><parameter name='src' type='java.lang.Object'/><parameter name='srcPos' type='int'/><parameter name='dest' type='java.lang.Object'/><parameter name='destPos' type='int'/><parameter name='length' type='int'/></method><method api_added='4' name='getenv' static='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method></class><class name='Thread' extends='java.lang.Object'><implements name='java.lang.Runnable'/><constructor name='Thread' type='java.lang.Thread'/><constructor name='Thread' type='java.lang.Thread'><parameter name='runnable' type='java.lang.Runnable'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='runnable' type='java.lang.Runnable'/><parameter name='threadName' type='java.lang.String'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='threadName' type='java.lang.String'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='group' type='java.lang.ThreadGroup'/><parameter name='runnable' type='java.lang.Runnable'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='group' type='java.lang.ThreadGroup'/><parameter name='runnable' type='java.lang.Runnable'/><parameter name='threadName' type='java.lang.String'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='group' type='java.lang.ThreadGroup'/><parameter name='threadName' type='java.lang.String'/></constructor><constructor name='Thread' type='java.lang.Thread'><parameter name='group' type='java.lang.ThreadGroup'/><parameter name='runnable' type='java.lang.Runnable'/><parameter name='threadName' type='java.lang.String'/><parameter name='stackSize' type='long'/></constructor><field name='MAX_PRIORITY' final='true' static='true' value='10' type='int'/><field name='MIN_PRIORITY' final='true' static='true' value='1' type='int'/><field name='NORM_PRIORITY' final='true' static='true' value='5' type='int'/><method name='activeCount' static='true' return='int'/><method name='checkAccess' final='true'/><method name='countStackFrames' deprecated='1' return='int'/><method name='currentThread' static='true' return='java.lang.Thread'/><method name='destroy' deprecated='1'/><method name='dumpStack' static='true'/><method name='enumerate' static='true' return='int'><parameter name='threads' type='java.lang.Thread[]'/></method><method name='getAllStackTraces' static='true' return='java.util.Map&lt;java.lang.Thread, java.lang.StackTraceElement[]&gt;'/><method name='getContextClassLoader' return='java.lang.ClassLoader'/><method name='getDefaultUncaughtExceptionHandler' static='true' return='java.lang.Thread.UncaughtExceptionHandler'/><method name='getId' return='long'/><method name='getName' final='true' return='java.lang.String'/><method name='getPriority' final='true' return='int'/><method name='getStackTrace' return='java.lang.StackTraceElement[]'/><method name='getState' return='java.lang.Thread.State'/><method name='getThreadGroup' final='true' return='java.lang.ThreadGroup'/><method name='getUncaughtExceptionHandler' return='java.lang.Thread.UncaughtExceptionHandler'/><method name='holdsLock' static='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='interrupt'/><method name='interrupted' static='true' return='boolean'/><method name='isAlive' final='true' return='boolean'/><method name='isDaemon' final='true' return='boolean'/><method name='isInterrupted' return='boolean'/><method name='join' final='true'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='join' final='true'><parameter name='millis' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='join' final='true'><parameter name='millis' type='long'/><parameter name='nanos' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='resume' final='true' deprecated='1'/><method name='run'/><method name='setContextClassLoader'><parameter name='cl' type='java.lang.ClassLoader'/></method><method name='setDaemon' final='true'><parameter name='isDaemon' type='boolean'/></method><method name='setDefaultUncaughtExceptionHandler' static='true'><parameter name='handler' type='java.lang.Thread.UncaughtExceptionHandler'/></method><method name='setName' final='true'><parameter name='threadName' type='java.lang.String'/></method><method name='setPriority' final='true'><parameter name='priority' type='int'/></method><method name='setUncaughtExceptionHandler'><parameter name='handler' type='java.lang.Thread.UncaughtExceptionHandler'/></method><method name='sleep' static='true'><parameter name='time' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='sleep' api_removed='4' static='true'><parameter name='time' type='long'/><parameter name='nanos' type='int'/><parameter name='millis' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='start' synchronized='true'/><method name='stop' final='true' deprecated='1'/><method name='stop' final='true' synchronized='true' deprecated='1'><parameter name='throwable' type='java.lang.Throwable'/></method><method name='suspend' final='true' deprecated='1'/><method name='yield' static='true'/><method api_added='4' name='sleep' static='true'><parameter name='millis' type='long'/><parameter name='nanos' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='Thread.State' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='java.lang.Thread.State'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.lang.Thread.State[]'/></class><class name='ThreadDeath' extends='java.lang.Error'><constructor name='ThreadDeath' type='java.lang.ThreadDeath'/></class><class name='ThreadGroup' extends='java.lang.Object'><implements name='java.lang.Thread.UncaughtExceptionHandler'/><constructor name='ThreadGroup' type='java.lang.ThreadGroup'><parameter name='name' type='java.lang.String'/></constructor><constructor name='ThreadGroup' type='java.lang.ThreadGroup'><parameter name='parent' type='java.lang.ThreadGroup'/><parameter name='name' type='java.lang.String'/></constructor><method name='activeCount' return='int'/><method name='activeGroupCount' return='int'/><method name='allowThreadSuspension' deprecated='1' return='boolean'><parameter name='b' type='boolean'/></method><method name='checkAccess' final='true'/><method name='destroy' final='true'/><method name='enumerate' return='int'><parameter name='threads' type='java.lang.Thread[]'/></method><method name='enumerate' return='int'><parameter name='threads' type='java.lang.Thread[]'/><parameter name='recurse' type='boolean'/></method><method name='enumerate' return='int'><parameter name='groups' type='java.lang.ThreadGroup[]'/></method><method name='enumerate' return='int'><parameter name='groups' type='java.lang.ThreadGroup[]'/><parameter name='recurse' type='boolean'/></method><method name='getMaxPriority' final='true' return='int'/><method name='getName' final='true' return='java.lang.String'/><method name='getParent' final='true' return='java.lang.ThreadGroup'/><method name='interrupt' final='true'/><method name='isDaemon' final='true' return='boolean'/><method name='isDestroyed' synchronized='true' return='boolean'/><method name='list'/><method name='parentOf' final='true' return='boolean'><parameter name='g' type='java.lang.ThreadGroup'/></method><method name='resume' final='true' deprecated='1'/><method name='setDaemon' final='true'><parameter name='isDaemon' type='boolean'/></method><method name='setMaxPriority' final='true'><parameter name='newMax' type='int'/></method><method name='stop' final='true' deprecated='1'/><method name='suspend' final='true' deprecated='1'/><method name='uncaughtException'><parameter name='t' type='java.lang.Thread'/><parameter name='e' type='java.lang.Throwable'/></method></class><class name='ThreadLocal' extends='java.lang.Object'><constructor name='ThreadLocal' type='java.lang.ThreadLocal'/><method name='get' return='T'/><method name='initialValue' visibility='protected' return='T'/><method name='remove'/><method name='set'><parameter name='value' type='T'/></method></class><class name='Throwable' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Throwable' type='java.lang.Throwable'/><constructor name='Throwable' type='java.lang.Throwable'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='Throwable' type='java.lang.Throwable'><parameter name='detailMessage' type='java.lang.String'/><parameter name='throwable' type='java.lang.Throwable'/></constructor><constructor name='Throwable' type='java.lang.Throwable'><parameter name='throwable' type='java.lang.Throwable'/></constructor><method name='fillInStackTrace' return='java.lang.Throwable'/><method name='getCause' return='java.lang.Throwable'/><method name='getLocalizedMessage' return='java.lang.String'/><method name='getMessage' return='java.lang.String'/><method name='getStackTrace' return='java.lang.StackTraceElement[]'/><method name='initCause' return='java.lang.Throwable'><parameter name='throwable' type='java.lang.Throwable'/></method><method name='printStackTrace'/><method name='printStackTrace'><parameter name='err' type='java.io.PrintStream'/></method><method name='printStackTrace'><parameter name='err' type='java.io.PrintWriter'/></method><method name='setStackTrace'><parameter name='trace' type='java.lang.StackTraceElement[]'/></method></class><class name='TypeNotPresentException' extends='java.lang.RuntimeException'><constructor name='TypeNotPresentException' type='java.lang.TypeNotPresentException'><parameter name='typeName' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><method name='typeName' return='java.lang.String'/></class><class name='UnknownError' extends='java.lang.VirtualMachineError'><constructor name='UnknownError' type='java.lang.UnknownError'/><constructor name='UnknownError' type='java.lang.UnknownError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UnsatisfiedLinkError' extends='java.lang.LinkageError'><constructor name='UnsatisfiedLinkError' type='java.lang.UnsatisfiedLinkError'/><constructor name='UnsatisfiedLinkError' type='java.lang.UnsatisfiedLinkError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UnsupportedClassVersionError' extends='java.lang.ClassFormatError'><constructor name='UnsupportedClassVersionError' type='java.lang.UnsupportedClassVersionError'/><constructor name='UnsupportedClassVersionError' type='java.lang.UnsupportedClassVersionError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UnsupportedOperationException' extends='java.lang.RuntimeException'><constructor name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/><constructor name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'><parameter name='detailMessage' type='java.lang.String'/></constructor><constructor name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='VerifyError' extends='java.lang.LinkageError'><constructor name='VerifyError' type='java.lang.VerifyError'/><constructor name='VerifyError' type='java.lang.VerifyError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='VirtualMachineError' extends='java.lang.Error' abstract='true'><constructor name='VirtualMachineError' type='java.lang.VirtualMachineError'/><constructor name='VirtualMachineError' type='java.lang.VirtualMachineError'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Void' final='true' extends='java.lang.Object'><field name='TYPE' final='true' static='true' type='java.lang.Class'/></class><interface name='Appendable' abstract='true'><method name='append' abstract='true' return='java.lang.Appendable'><parameter name='c' type='char'/><exception name='IOException' type='java.io.IOException'/></method><method name='append' abstract='true' return='java.lang.Appendable'><parameter name='csq' type='java.lang.CharSequence'/><exception name='IOException' type='java.io.IOException'/></method><method name='append' abstract='true' return='java.lang.Appendable'><parameter name='csq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='CharSequence' abstract='true'><method name='charAt' abstract='true' return='char'><parameter name='index' type='int'/></method><method name='length' abstract='true' return='int'/><method name='subSequence' abstract='true' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='toString' abstract='true' return='java.lang.String'/></interface><interface name='Cloneable' abstract='true'/><interface name='Comparable' abstract='true'><method name='compareTo' abstract='true' return='int'><parameter name='another' type='T'/></method></interface><interface name='Iterable' abstract='true'><method name='iterator' abstract='true' return='java.util.Iterator&lt;T&gt;'/></interface><interface name='Readable' abstract='true'><method name='read' abstract='true' return='int'><parameter name='cb' type='java.nio.CharBuffer'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='Runnable' abstract='true'><method name='run' abstract='true'/></interface><interface name='Thread.UncaughtExceptionHandler' abstract='true' static='true'><method name='uncaughtException' abstract='true'><parameter name='thread' type='java.lang.Thread'/><parameter name='ex' type='java.lang.Throwable'/></method></interface></package><package name='java.lang.annotation'><class name='AnnotationFormatError' extends='java.lang.Error'><constructor name='AnnotationFormatError' type='java.lang.annotation.AnnotationFormatError'><parameter name='message' type='java.lang.String'/></constructor><constructor name='AnnotationFormatError' type='java.lang.annotation.AnnotationFormatError'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='AnnotationFormatError' type='java.lang.annotation.AnnotationFormatError'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='AnnotationTypeMismatchException' extends='java.lang.RuntimeException'><constructor name='AnnotationTypeMismatchException' type='java.lang.annotation.AnnotationTypeMismatchException'><parameter name='element' type='java.lang.reflect.Method'/><parameter name='foundType' type='java.lang.String'/></constructor><method name='element' return='java.lang.reflect.Method'/><method name='foundType' return='java.lang.String'/></class><class name='Documented' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='ElementType' final='true' extends='java.lang.Enum'><method name='valueOf' static='true' return='java.lang.annotation.ElementType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.lang.annotation.ElementType[]'/></class><class name='IncompleteAnnotationException' extends='java.lang.RuntimeException'><constructor name='IncompleteAnnotationException' type='java.lang.annotation.IncompleteAnnotationException'><parameter name='annotationType' type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/><parameter name='elementName' type='java.lang.String'/></constructor><method name='annotationType' return='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/><method name='elementName' return='java.lang.String'/></class><class name='Inherited' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='Retention' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><class name='RetentionPolicy' final='true' extends='java.lang.Enum'><method name='valueOf' static='true' return='java.lang.annotation.RetentionPolicy'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.lang.annotation.RetentionPolicy[]'/></class><class name='Target' extends='java.lang.Object' abstract='true'><implements name='java.lang.annotation.Annotation'/></class><interface name='Annotation' abstract='true'><method name='annotationType' abstract='true' return='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/><method name='equals' abstract='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='hashCode' abstract='true' return='int'/><method name='toString' abstract='true' return='java.lang.String'/></interface></package><package name='java.lang.ref'><class name='PhantomReference' extends='java.lang.ref.Reference'><constructor name='PhantomReference' type='java.lang.ref.PhantomReference'><parameter name='r' type='T'/><parameter name='q' type='java.lang.ref.ReferenceQueue&lt;? super T&gt;'/></constructor></class><class name='Reference' extends='java.lang.Object' abstract='true'><method name='clear'/><method name='enqueue' return='boolean'/><method name='get' return='T'/><method name='isEnqueued' return='boolean'/></class><class name='ReferenceQueue' extends='java.lang.Object'><constructor name='ReferenceQueue' type='java.lang.ref.ReferenceQueue'/><method name='poll' synchronized='true' return='java.lang.ref.Reference&lt;? extends T&gt;'/><method name='remove' return='java.lang.ref.Reference&lt;? extends T&gt;'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='remove' synchronized='true' return='java.lang.ref.Reference&lt;? extends T&gt;'><parameter name='timeout' type='long'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='SoftReference' extends='java.lang.ref.Reference'><constructor name='SoftReference' type='java.lang.ref.SoftReference'><parameter name='r' type='T'/></constructor><constructor name='SoftReference' type='java.lang.ref.SoftReference'><parameter name='r' type='T'/><parameter name='q' type='java.lang.ref.ReferenceQueue&lt;? super T&gt;'/></constructor></class><class name='WeakReference' extends='java.lang.ref.Reference'><constructor name='WeakReference' type='java.lang.ref.WeakReference'><parameter name='r' type='T'/></constructor><constructor name='WeakReference' type='java.lang.ref.WeakReference'><parameter name='r' type='T'/><parameter name='q' type='java.lang.ref.ReferenceQueue&lt;? super T&gt;'/></constructor></class></package><package name='java.lang.reflect'><class name='AccessibleObject' extends='java.lang.Object'><implements name='java.lang.reflect.AnnotatedElement'/><constructor name='AccessibleObject' type='java.lang.reflect.AccessibleObject' visibility='protected'/><method name='getAnnotation' return='T'><parameter name='annotationType' type='java.lang.Class&lt;T&gt;'/></method><method name='getAnnotations' return='java.lang.annotation.Annotation[]'/><method name='getDeclaredAnnotations' return='java.lang.annotation.Annotation[]'/><method name='isAccessible' return='boolean'/><method name='isAnnotationPresent' return='boolean'><parameter name='annotationType' type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/></method><method name='setAccessible' static='true'><parameter name='objects' type='java.lang.reflect.AccessibleObject[]'/><parameter name='flag' type='boolean'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='setAccessible'><parameter name='flag' type='boolean'/><exception name='SecurityException' type='java.lang.SecurityException'/></method></class><class name='Array' final='true' extends='java.lang.Object'><method name='get' static='true' return='java.lang.Object'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getBoolean' static='true' return='boolean'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getByte' static='true' return='byte'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getChar' static='true' return='char'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getDouble' static='true' return='double'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getFloat' static='true' return='float'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getInt' static='true' return='int'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getLength' static='true' return='int'><parameter name='array' type='java.lang.Object'/></method><method name='getLong' static='true' return='long'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getShort' static='true' return='short'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='newInstance' static='true' return='java.lang.Object'><parameter name='componentType' type='java.lang.Class&lt;?&gt;'/><parameter name='dimensions' type='int[]'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='NegativeArraySizeException' type='java.lang.NegativeArraySizeException'/></method><method name='newInstance' static='true' return='java.lang.Object'><parameter name='componentType' type='java.lang.Class&lt;?&gt;'/><parameter name='size' type='int'/><exception name='NegativeArraySizeException' type='java.lang.NegativeArraySizeException'/></method><method name='set' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='java.lang.Object'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setBoolean' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='boolean'/></method><method name='setByte' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='byte'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setChar' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='char'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setDouble' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='double'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setFloat' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='float'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setInt' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='int'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setLong' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='long'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setShort' static='true'><parameter name='array' type='java.lang.Object'/><parameter name='index' type='int'/><parameter name='value' type='short'/><exception name='ArrayIndexOutOfBoundsException' type='java.lang.ArrayIndexOutOfBoundsException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><class name='Constructor' final='true' extends='java.lang.reflect.AccessibleObject'><implements name='java.lang.reflect.GenericDeclaration'/><implements name='java.lang.reflect.Member'/><method name='getDeclaringClass' return='java.lang.Class&lt;T&gt;'/><method name='getExceptionTypes' return='java.lang.Class&lt;?&gt;[]'/><method name='getGenericExceptionTypes' return='java.lang.reflect.Type[]'/><method name='getGenericParameterTypes' return='java.lang.reflect.Type[]'/><method name='getModifiers' return='int'/><method name='getName' return='java.lang.String'/><method name='getParameterAnnotations' return='java.lang.annotation.Annotation[][]'/><method name='getParameterTypes' return='java.lang.Class&lt;?&gt;[]'/><method name='getTypeParameters' return='java.lang.reflect.TypeVariable&lt;java.lang.reflect.Constructor&lt;T&gt;&gt;[]'/><method name='isSynthetic' return='boolean'/><method name='isVarArgs' return='boolean'/><method name='newInstance' return='T'><parameter name='args' type='java.lang.Object...'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/><exception name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException'/></method><method name='toGenericString' return='java.lang.String'/></class><class name='Field' final='true' extends='java.lang.reflect.AccessibleObject'><implements name='java.lang.reflect.Member'/><method name='get' return='java.lang.Object'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getBoolean' return='boolean'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getByte' return='byte'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getChar' return='char'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getDeclaringClass' return='java.lang.Class&lt;?&gt;'/><method name='getDouble' return='double'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getFloat' return='float'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getGenericType' return='java.lang.reflect.Type'/><method name='getInt' return='int'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getLong' return='long'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getModifiers' return='int'/><method name='getName' return='java.lang.String'/><method name='getShort' return='short'><parameter name='object' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getType' return='java.lang.Class&lt;?&gt;'/><method name='isEnumConstant' return='boolean'/><method name='isSynthetic' return='boolean'/><method name='set'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setBoolean'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='boolean'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setByte'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='byte'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setChar'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='char'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setDouble'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='double'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setFloat'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='float'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setInt'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='int'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setLong'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='long'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setShort'><parameter name='object' type='java.lang.Object'/><parameter name='value' type='short'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='toGenericString' return='java.lang.String'/></class><class name='GenericSignatureFormatError' extends='java.lang.ClassFormatError'><constructor name='GenericSignatureFormatError' type='java.lang.reflect.GenericSignatureFormatError'/></class><class name='InvocationTargetException' extends='java.lang.Exception'><constructor name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException' visibility='protected'/><constructor name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException'><parameter name='exception' type='java.lang.Throwable'/></constructor><constructor name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException'><parameter name='exception' type='java.lang.Throwable'/><parameter name='detailMessage' type='java.lang.String'/></constructor><method name='getTargetException' return='java.lang.Throwable'/></class><class name='MalformedParameterizedTypeException' extends='java.lang.RuntimeException'><constructor name='MalformedParameterizedTypeException' type='java.lang.reflect.MalformedParameterizedTypeException'/></class><class name='Method' final='true' extends='java.lang.reflect.AccessibleObject'><implements name='java.lang.reflect.GenericDeclaration'/><implements name='java.lang.reflect.Member'/><method name='getDeclaringClass' return='java.lang.Class&lt;?&gt;'/><method name='getDefaultValue' return='java.lang.Object'/><method name='getExceptionTypes' return='java.lang.Class&lt;?&gt;[]'/><method name='getGenericExceptionTypes' return='java.lang.reflect.Type[]'/><method name='getGenericParameterTypes' return='java.lang.reflect.Type[]'/><method name='getGenericReturnType' return='java.lang.reflect.Type'/><method name='getModifiers' return='int'/><method name='getName' return='java.lang.String'/><method name='getParameterAnnotations' return='java.lang.annotation.Annotation[][]'/><method name='getParameterTypes' return='java.lang.Class&lt;?&gt;[]'/><method name='getReturnType' return='java.lang.Class&lt;?&gt;'/><method name='getTypeParameters' return='java.lang.reflect.TypeVariable&lt;java.lang.reflect.Method&gt;[]'/><method name='invoke' return='java.lang.Object'><parameter name='receiver' type='java.lang.Object'/><parameter name='args' type='java.lang.Object...'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='InvocationTargetException' type='java.lang.reflect.InvocationTargetException'/></method><method name='isBridge' return='boolean'/><method name='isSynthetic' return='boolean'/><method name='isVarArgs' return='boolean'/><method name='toGenericString' return='java.lang.String'/></class><class name='Modifier' extends='java.lang.Object'><constructor name='Modifier' type='java.lang.reflect.Modifier'/><field name='ABSTRACT' final='true' static='true' value='1024' type='int'/><field name='FINAL' final='true' static='true' value='16' type='int'/><field name='INTERFACE' final='true' static='true' value='512' type='int'/><field name='NATIVE' final='true' static='true' value='256' type='int'/><field name='PRIVATE' final='true' static='true' value='2' type='int'/><field name='PROTECTED' final='true' static='true' value='4' type='int'/><field name='PUBLIC' final='true' static='true' value='1' type='int'/><field name='STATIC' final='true' static='true' value='8' type='int'/><field name='STRICT' final='true' static='true' value='2048' type='int'/><field name='SYNCHRONIZED' final='true' static='true' value='32' type='int'/><field name='TRANSIENT' final='true' static='true' value='128' type='int'/><field name='VOLATILE' final='true' static='true' value='64' type='int'/><method name='isAbstract' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isFinal' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isInterface' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isNative' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isPrivate' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isProtected' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isPublic' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isStatic' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isStrict' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isSynchronized' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isTransient' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='isVolatile' static='true' return='boolean'><parameter name='modifiers' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='modifiers' type='int'/></method></class><class name='Proxy' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Proxy' type='java.lang.reflect.Proxy' visibility='protected'><parameter name='h' type='java.lang.reflect.InvocationHandler'/></constructor><field name='h' type='java.lang.reflect.InvocationHandler' visibility='protected'/><method name='getInvocationHandler' static='true' return='java.lang.reflect.InvocationHandler'><parameter name='proxy' type='java.lang.Object'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getProxyClass' static='true' return='java.lang.Class&lt;?&gt;'><parameter name='loader' type='java.lang.ClassLoader'/><parameter name='interfaces' type='java.lang.Class&lt;?&gt;...'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='isProxyClass' static='true' return='boolean'><parameter name='cl' type='java.lang.Class&lt;?&gt;'/></method><method name='newProxyInstance' static='true' return='java.lang.Object'><parameter name='loader' type='java.lang.ClassLoader'/><parameter name='interfaces' type='java.lang.Class&lt;?&gt;[]'/><parameter name='h' type='java.lang.reflect.InvocationHandler'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><class name='ReflectPermission' final='true' extends='java.security.BasicPermission'><constructor name='ReflectPermission' type='java.lang.reflect.ReflectPermission'><parameter name='permissionName' type='java.lang.String'/></constructor><constructor name='ReflectPermission' type='java.lang.reflect.ReflectPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='UndeclaredThrowableException' extends='java.lang.RuntimeException'><constructor name='UndeclaredThrowableException' type='java.lang.reflect.UndeclaredThrowableException'><parameter name='exception' type='java.lang.Throwable'/></constructor><constructor name='UndeclaredThrowableException' type='java.lang.reflect.UndeclaredThrowableException'><parameter name='exception' type='java.lang.Throwable'/><parameter name='detailMessage' type='java.lang.String'/></constructor><method name='getUndeclaredThrowable' return='java.lang.Throwable'/></class><interface name='AnnotatedElement' abstract='true'><method name='getAnnotation' abstract='true' return='T'><parameter name='annotationType' type='java.lang.Class&lt;T&gt;'/></method><method name='getAnnotations' abstract='true' return='java.lang.annotation.Annotation[]'/><method name='getDeclaredAnnotations' abstract='true' return='java.lang.annotation.Annotation[]'/><method name='isAnnotationPresent' abstract='true' return='boolean'><parameter name='annotationType' type='java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;'/></method></interface><interface name='GenericArrayType' abstract='true'><implements name='java.lang.reflect.Type'/><method name='getGenericComponentType' abstract='true' return='java.lang.reflect.Type'/></interface><interface name='GenericDeclaration' abstract='true'><method name='getTypeParameters' abstract='true' return='java.lang.reflect.TypeVariable&lt;?&gt;[]'/></interface><interface name='InvocationHandler' abstract='true'><method name='invoke' abstract='true' return='java.lang.Object'><parameter name='proxy' type='java.lang.Object'/><parameter name='method' type='java.lang.reflect.Method'/><parameter name='args' type='java.lang.Object[]'/><exception name='Throwable' type='java.lang.Throwable'/></method></interface><interface name='Member' abstract='true'><field name='DECLARED' final='true' static='true' value='1' type='int'/><field name='PUBLIC' final='true' static='true' value='0' type='int'/><method name='getDeclaringClass' abstract='true' return='java.lang.Class'/><method name='getModifiers' abstract='true' return='int'/><method name='getName' abstract='true' return='java.lang.String'/><method name='isSynthetic' abstract='true' return='boolean'/></interface><interface name='ParameterizedType' abstract='true'><implements name='java.lang.reflect.Type'/><method name='getActualTypeArguments' abstract='true' return='java.lang.reflect.Type[]'/><method name='getOwnerType' abstract='true' return='java.lang.reflect.Type'/><method name='getRawType' abstract='true' return='java.lang.reflect.Type'/></interface><interface name='Type' abstract='true'/><interface name='TypeVariable' abstract='true'><implements name='java.lang.reflect.Type'/><method name='getBounds' abstract='true' return='java.lang.reflect.Type[]'/><method name='getGenericDeclaration' abstract='true' return='D'/><method name='getName' abstract='true' return='java.lang.String'/></interface><interface name='WildcardType' abstract='true'><implements name='java.lang.reflect.Type'/><method name='getLowerBounds' abstract='true' return='java.lang.reflect.Type[]'/><method name='getUpperBounds' abstract='true' return='java.lang.reflect.Type[]'/></interface></package><package name='java.math'><class name='BigDecimal' extends='java.lang.Number'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='in' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='in' type='char[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='in' type='char[]'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='in' type='char[]'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='java.lang.String'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='java.lang.String'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='double'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='double'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='java.math.BigInteger'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='java.math.BigInteger'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='unscaledVal' type='java.math.BigInteger'/><parameter name='scale' type='int'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='unscaledVal' type='java.math.BigInteger'/><parameter name='scale' type='int'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='int'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='int'/><parameter name='mc' type='java.math.MathContext'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='long'/></constructor><constructor name='BigDecimal' type='java.math.BigDecimal'><parameter name='val' type='long'/><parameter name='mc' type='java.math.MathContext'/></constructor><field name='ONE' final='true' static='true' type='java.math.BigDecimal'/><field name='ROUND_CEILING' final='true' static='true' value='2' type='int'/><field name='ROUND_DOWN' final='true' static='true' value='1' type='int'/><field name='ROUND_FLOOR' final='true' static='true' value='3' type='int'/><field name='ROUND_HALF_DOWN' final='true' static='true' value='5' type='int'/><field name='ROUND_HALF_EVEN' final='true' static='true' value='6' type='int'/><field name='ROUND_HALF_UP' final='true' static='true' value='4' type='int'/><field name='ROUND_UNNECESSARY' final='true' static='true' value='7' type='int'/><field name='ROUND_UP' final='true' static='true' value='0' type='int'/><field name='TEN' final='true' static='true' type='java.math.BigDecimal'/><field name='ZERO' final='true' static='true' type='java.math.BigDecimal'/><method name='abs' return='java.math.BigDecimal'/><method name='abs' return='java.math.BigDecimal'><parameter name='mc' type='java.math.MathContext'/></method><method name='add' return='java.math.BigDecimal'><parameter name='augend' type='java.math.BigDecimal'/></method><method name='add' return='java.math.BigDecimal'><parameter name='augend' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='byteValueExact' return='byte'/><method name='compareTo' return='int'><parameter name='val' type='java.math.BigDecimal'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='scale' type='int'/><parameter name='roundingMode' type='int'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='scale' type='int'/><parameter name='roundingMode' type='java.math.RoundingMode'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='roundingMode' type='int'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='roundingMode' type='java.math.RoundingMode'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/></method><method name='divide' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='divideAndRemainder' return='java.math.BigDecimal[]'><parameter name='divisor' type='java.math.BigDecimal'/></method><method name='divideAndRemainder' return='java.math.BigDecimal[]'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='divideToIntegralValue' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/></method><method name='divideToIntegralValue' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='intValue' return='int'/><method name='intValueExact' return='int'/><method name='longValue' return='long'/><method name='longValueExact' return='long'/><method name='max' return='java.math.BigDecimal'><parameter name='val' type='java.math.BigDecimal'/></method><method name='min' return='java.math.BigDecimal'><parameter name='val' type='java.math.BigDecimal'/></method><method name='movePointLeft' return='java.math.BigDecimal'><parameter name='n' type='int'/></method><method name='movePointRight' return='java.math.BigDecimal'><parameter name='n' type='int'/></method><method name='multiply' return='java.math.BigDecimal'><parameter name='multiplicand' type='java.math.BigDecimal'/></method><method name='multiply' return='java.math.BigDecimal'><parameter name='multiplicand' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='negate' return='java.math.BigDecimal'/><method name='negate' return='java.math.BigDecimal'><parameter name='mc' type='java.math.MathContext'/></method><method name='plus' return='java.math.BigDecimal'/><method name='plus' return='java.math.BigDecimal'><parameter name='mc' type='java.math.MathContext'/></method><method name='pow' return='java.math.BigDecimal'><parameter name='n' type='int'/></method><method name='pow' return='java.math.BigDecimal'><parameter name='n' type='int'/><parameter name='mc' type='java.math.MathContext'/></method><method name='precision' return='int'/><method name='remainder' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/></method><method name='remainder' return='java.math.BigDecimal'><parameter name='divisor' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='round' return='java.math.BigDecimal'><parameter name='mc' type='java.math.MathContext'/></method><method name='scale' return='int'/><method name='scaleByPowerOfTen' return='java.math.BigDecimal'><parameter name='n' type='int'/></method><method name='setScale' return='java.math.BigDecimal'><parameter name='newScale' type='int'/><parameter name='roundingMode' type='java.math.RoundingMode'/></method><method name='setScale' return='java.math.BigDecimal'><parameter name='newScale' type='int'/><parameter name='roundingMode' type='int'/></method><method name='setScale' return='java.math.BigDecimal'><parameter name='newScale' type='int'/></method><method name='shortValueExact' return='short'/><method name='signum' return='int'/><method name='stripTrailingZeros' return='java.math.BigDecimal'/><method name='subtract' return='java.math.BigDecimal'><parameter name='subtrahend' type='java.math.BigDecimal'/></method><method name='subtract' return='java.math.BigDecimal'><parameter name='subtrahend' type='java.math.BigDecimal'/><parameter name='mc' type='java.math.MathContext'/></method><method name='toBigInteger' return='java.math.BigInteger'/><method name='toBigIntegerExact' return='java.math.BigInteger'/><method name='toEngineeringString' return='java.lang.String'/><method name='toPlainString' return='java.lang.String'/><method name='ulp' return='java.math.BigDecimal'/><method name='unscaledValue' return='java.math.BigInteger'/><method name='valueOf' static='true' return='java.math.BigDecimal'><parameter name='unscaledVal' type='long'/><parameter name='scale' type='int'/></method><method name='valueOf' static='true' return='java.math.BigDecimal'><parameter name='unscaledVal' type='long'/></method><method name='valueOf' static='true' return='java.math.BigDecimal'><parameter name='val' type='double'/></method></class><class name='BigInteger' extends='java.lang.Number'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='numBits' type='int'/><parameter name='rnd' type='java.util.Random'/></constructor><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='bitLength' type='int'/><parameter name='certainty' type='int'/><parameter name='rnd' type='java.util.Random'/></constructor><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='val' type='java.lang.String'/></constructor><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='val' type='java.lang.String'/><parameter name='radix' type='int'/></constructor><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='signum' type='int'/><parameter name='magnitude' type='byte[]'/></constructor><constructor name='BigInteger' type='java.math.BigInteger'><parameter name='val' type='byte[]'/></constructor><field name='ONE' final='true' static='true' type='java.math.BigInteger'/><field name='TEN' final='true' static='true' type='java.math.BigInteger'/><field name='ZERO' final='true' static='true' type='java.math.BigInteger'/><method name='abs' return='java.math.BigInteger'/><method name='add' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='and' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='andNot' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='bitCount' return='int'/><method name='bitLength' return='int'/><method name='clearBit' return='java.math.BigInteger'><parameter name='n' type='int'/></method><method name='compareTo' return='int'><parameter name='val' type='java.math.BigInteger'/></method><method name='divide' return='java.math.BigInteger'><parameter name='divisor' type='java.math.BigInteger'/></method><method name='divideAndRemainder' return='java.math.BigInteger[]'><parameter name='divisor' type='java.math.BigInteger'/></method><method name='doubleValue' return='double'/><method name='flipBit' return='java.math.BigInteger'><parameter name='n' type='int'/></method><method name='floatValue' return='float'/><method name='gcd' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='getLowestSetBit' return='int'/><method name='intValue' return='int'/><method name='isProbablePrime' return='boolean'><parameter name='certainty' type='int'/></method><method name='longValue' return='long'/><method name='max' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='min' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='mod' return='java.math.BigInteger'><parameter name='m' type='java.math.BigInteger'/></method><method name='modInverse' return='java.math.BigInteger'><parameter name='m' type='java.math.BigInteger'/></method><method name='modPow' return='java.math.BigInteger'><parameter name='exponent' type='java.math.BigInteger'/><parameter name='m' type='java.math.BigInteger'/></method><method name='multiply' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='negate' return='java.math.BigInteger'/><method name='nextProbablePrime' return='java.math.BigInteger'/><method name='not' return='java.math.BigInteger'/><method name='or' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='pow' return='java.math.BigInteger'><parameter name='exp' type='int'/></method><method name='probablePrime' static='true' return='java.math.BigInteger'><parameter name='bitLength' type='int'/><parameter name='rnd' type='java.util.Random'/></method><method name='remainder' return='java.math.BigInteger'><parameter name='divisor' type='java.math.BigInteger'/></method><method name='setBit' return='java.math.BigInteger'><parameter name='n' type='int'/></method><method name='shiftLeft' return='java.math.BigInteger'><parameter name='n' type='int'/></method><method name='shiftRight' return='java.math.BigInteger'><parameter name='n' type='int'/></method><method name='signum' return='int'/><method name='subtract' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method><method name='testBit' return='boolean'><parameter name='n' type='int'/></method><method name='toByteArray' return='byte[]'/><method name='toString' return='java.lang.String'><parameter name='radix' type='int'/></method><method name='valueOf' static='true' return='java.math.BigInteger'><parameter name='val' type='long'/></method><method name='xor' return='java.math.BigInteger'><parameter name='val' type='java.math.BigInteger'/></method></class><class name='MathContext' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='MathContext' type='java.math.MathContext'><parameter name='precision' type='int'/></constructor><constructor name='MathContext' type='java.math.MathContext'><parameter name='precision' type='int'/><parameter name='roundingMode' type='java.math.RoundingMode'/></constructor><constructor name='MathContext' type='java.math.MathContext'><parameter name='val' type='java.lang.String'/></constructor><field name='DECIMAL128' final='true' static='true' type='java.math.MathContext'/><field name='DECIMAL32' final='true' static='true' type='java.math.MathContext'/><field name='DECIMAL64' final='true' static='true' type='java.math.MathContext'/><field name='UNLIMITED' final='true' static='true' type='java.math.MathContext'/><method name='getPrecision' return='int'/><method name='getRoundingMode' return='java.math.RoundingMode'/></class><class name='RoundingMode' final='true' extends='java.lang.Enum'><method name='valueOf' static='true' return='java.math.RoundingMode'><parameter name='name' type='java.lang.String'/></method><method name='valueOf' api_removed='4' static='true' return='java.math.RoundingMode'><parameter name='rM' type='int'/><parameter name='mode' type='int'/></method><method name='values' final='true' static='true' return='java.math.RoundingMode[]'/><method api_added='4' name='valueOf' static='true' return='java.math.RoundingMode'><parameter name='mode' type='int'/></method></class></package><package name='java.net'><class name='Authenticator' extends='java.lang.Object' abstract='true'><constructor name='Authenticator' type='java.net.Authenticator'/><method name='getPasswordAuthentication' visibility='protected' return='java.net.PasswordAuthentication'/><method name='getRequestingHost' final='true' visibility='protected' return='java.lang.String'/><method name='getRequestingPort' final='true' visibility='protected' return='int'/><method name='getRequestingPrompt' final='true' visibility='protected' return='java.lang.String'/><method name='getRequestingProtocol' final='true' visibility='protected' return='java.lang.String'/><method name='getRequestingScheme' final='true' visibility='protected' return='java.lang.String'/><method name='getRequestingSite' final='true' visibility='protected' return='java.net.InetAddress'/><method name='getRequestingURL' visibility='protected' return='java.net.URL'/><method name='getRequestorType' visibility='protected' return='java.net.Authenticator.RequestorType'/><method name='requestPasswordAuthentication' synchronized='true' static='true' return='java.net.PasswordAuthentication'><parameter name='rAddr' type='java.net.InetAddress'/><parameter name='rPort' type='int'/><parameter name='rProtocol' type='java.lang.String'/><parameter name='rPrompt' type='java.lang.String'/><parameter name='rScheme' type='java.lang.String'/></method><method name='requestPasswordAuthentication' synchronized='true' static='true' return='java.net.PasswordAuthentication'><parameter name='rHost' type='java.lang.String'/><parameter name='rAddr' type='java.net.InetAddress'/><parameter name='rPort' type='int'/><parameter name='rProtocol' type='java.lang.String'/><parameter name='rPrompt' type='java.lang.String'/><parameter name='rScheme' type='java.lang.String'/></method><method name='requestPasswordAuthentication' static='true' return='java.net.PasswordAuthentication'><parameter name='rHost' type='java.lang.String'/><parameter name='rAddr' type='java.net.InetAddress'/><parameter name='rPort' type='int'/><parameter name='rProtocol' type='java.lang.String'/><parameter name='rPrompt' type='java.lang.String'/><parameter name='rScheme' type='java.lang.String'/><parameter name='rURL' type='java.net.URL'/><parameter name='reqType' type='java.net.Authenticator.RequestorType'/></method><method name='setDefault' static='true'><parameter name='a' type='java.net.Authenticator'/></method></class><class name='Authenticator.RequestorType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='java.net.Authenticator.RequestorType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.net.Authenticator.RequestorType[]'/></class><class name='BindException' extends='java.net.SocketException'><constructor name='BindException' type='java.net.BindException'/><constructor name='BindException' type='java.net.BindException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='CacheRequest' extends='java.lang.Object' abstract='true'><constructor name='CacheRequest' type='java.net.CacheRequest'/><method name='abort' abstract='true'/><method name='getBody' abstract='true' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method></class><class name='CacheResponse' extends='java.lang.Object' abstract='true'><constructor name='CacheResponse' type='java.net.CacheResponse'/><method name='getBody' abstract='true' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getHeaders' abstract='true' return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ConnectException' extends='java.net.SocketException'><constructor name='ConnectException' type='java.net.ConnectException'/><constructor name='ConnectException' type='java.net.ConnectException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ContentHandler' extends='java.lang.Object' abstract='true'><constructor name='ContentHandler' type='java.net.ContentHandler'/><method name='getContent' abstract='true' return='java.lang.Object'><parameter name='uConn' type='java.net.URLConnection'/><exception name='IOException' type='java.io.IOException'/></method><method name='getContent' return='java.lang.Object'><parameter name='uConn' type='java.net.URLConnection'/><parameter name='types' type='java.lang.Class[]'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='CookieHandler' extends='java.lang.Object' abstract='true'><constructor name='CookieHandler' type='java.net.CookieHandler'/><method name='get' abstract='true' return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'><parameter name='uri' type='java.net.URI'/><parameter name='requestHeaders' type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' static='true' return='java.net.CookieHandler'/><method name='put' abstract='true'><parameter name='uri' type='java.net.URI'/><parameter name='responseHeaders' type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setDefault' static='true'><parameter name='cHandler' type='java.net.CookieHandler'/></method></class><class name='DatagramPacket' final='true' extends='java.lang.Object'><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='length' type='int'/></constructor><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></constructor><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='host' type='java.net.InetAddress'/><parameter name='aPort' type='int'/></constructor><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='length' type='int'/><parameter name='host' type='java.net.InetAddress'/><parameter name='port' type='int'/></constructor><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='length' type='int'/><parameter name='sockAddr' type='java.net.SocketAddress'/><exception name='SocketException' type='java.net.SocketException'/></constructor><constructor name='DatagramPacket' type='java.net.DatagramPacket'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='sockAddr' type='java.net.SocketAddress'/><exception name='SocketException' type='java.net.SocketException'/></constructor><method name='getAddress' synchronized='true' return='java.net.InetAddress'/><method name='getData' synchronized='true' return='byte[]'/><method name='getLength' synchronized='true' return='int'/><method name='getOffset' synchronized='true' return='int'/><method name='getPort' synchronized='true' return='int'/><method name='getSocketAddress' synchronized='true' return='java.net.SocketAddress'/><method name='setAddress' synchronized='true'><parameter name='addr' type='java.net.InetAddress'/></method><method name='setData' synchronized='true'><parameter name='buf' type='byte[]'/><parameter name='anOffset' type='int'/><parameter name='aLength' type='int'/></method><method name='setData' synchronized='true'><parameter name='buf' type='byte[]'/></method><method name='setLength' synchronized='true'><parameter name='len' type='int'/></method><method name='setPort' synchronized='true'><parameter name='aPort' type='int'/></method><method name='setSocketAddress' synchronized='true'><parameter name='sockAddr' type='java.net.SocketAddress'/></method></class><class name='DatagramSocket' extends='java.lang.Object'><constructor name='DatagramSocket' type='java.net.DatagramSocket'><exception name='SocketException' type='java.net.SocketException'/></constructor><constructor name='DatagramSocket' type='java.net.DatagramSocket'><parameter name='aPort' type='int'/><exception name='SocketException' type='java.net.SocketException'/></constructor><constructor name='DatagramSocket' type='java.net.DatagramSocket'><parameter name='aPort' type='int'/><parameter name='addr' type='java.net.InetAddress'/><exception name='SocketException' type='java.net.SocketException'/></constructor><constructor name='DatagramSocket' type='java.net.DatagramSocket' visibility='protected'><parameter name='socketImpl' type='java.net.DatagramSocketImpl'/></constructor><constructor name='DatagramSocket' type='java.net.DatagramSocket'><parameter name='localAddr' type='java.net.SocketAddress'/><exception name='SocketException' type='java.net.SocketException'/></constructor><method name='bind'><parameter name='localAddr' type='java.net.SocketAddress'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='close'/><method name='connect'><parameter name='anAddress' type='java.net.InetAddress'/><parameter name='aPort' type='int'/></method><method name='connect'><parameter name='remoteAddr' type='java.net.SocketAddress'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='disconnect'/><method name='getBroadcast' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getChannel' return='java.nio.channels.DatagramChannel'/><method name='getInetAddress' return='java.net.InetAddress'/><method name='getLocalAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getLocalSocketAddress' return='java.net.SocketAddress'/><method name='getPort' return='int'/><method name='getReceiveBufferSize' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getRemoteSocketAddress' return='java.net.SocketAddress'/><method name='getReuseAddress' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSendBufferSize' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSoTimeout' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getTrafficClass' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='isBound' return='boolean'/><method name='isClosed' return='boolean'/><method name='isConnected' return='boolean'/><method name='receive' synchronized='true'><parameter name='pack' type='java.net.DatagramPacket'/><exception name='IOException' type='java.io.IOException'/></method><method name='send'><parameter name='pack' type='java.net.DatagramPacket'/><exception name='IOException' type='java.io.IOException'/></method><method name='setBroadcast'><parameter name='broadcast' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setDatagramSocketImplFactory' synchronized='true' static='true'><parameter name='fac' type='java.net.DatagramSocketImplFactory'/><exception name='IOException' type='java.io.IOException'/></method><method name='setReceiveBufferSize' synchronized='true'><parameter name='size' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setReuseAddress'><parameter name='reuse' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSendBufferSize' synchronized='true'><parameter name='size' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSoTimeout' synchronized='true'><parameter name='timeout' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setTrafficClass'><parameter name='value' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method></class><class name='DatagramSocketImpl' extends='java.lang.Object' abstract='true'><implements name='java.net.SocketOptions'/><constructor name='DatagramSocketImpl' type='java.net.DatagramSocketImpl'/><field name='fd' type='java.io.FileDescriptor' visibility='protected'/><field name='localPort' type='int' visibility='protected'/><method name='bind' abstract='true' visibility='protected'><parameter name='port' type='int'/><parameter name='addr' type='java.net.InetAddress'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='close' abstract='true' visibility='protected'/><method name='connect' visibility='protected'><parameter name='inetAddr' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='create' abstract='true' visibility='protected'><exception name='SocketException' type='java.net.SocketException'/></method><method name='disconnect' visibility='protected'/><method name='getFileDescriptor' visibility='protected' return='java.io.FileDescriptor'/><method name='getLocalPort' visibility='protected' return='int'/><method name='getOption' abstract='true' api_removed='5' return='java.lang.Object'><parameter name='optID' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='getTTL' abstract='true' deprecated='1' visibility='protected' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='getTimeToLive' abstract='true' visibility='protected' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='join' abstract='true' visibility='protected'><parameter name='addr' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='joinGroup' abstract='true' visibility='protected'><parameter name='addr' type='java.net.SocketAddress'/><parameter name='netInterface' type='java.net.NetworkInterface'/><exception name='IOException' type='java.io.IOException'/></method><method name='leave' abstract='true' visibility='protected'><parameter name='addr' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='leaveGroup' abstract='true' visibility='protected'><parameter name='addr' type='java.net.SocketAddress'/><parameter name='netInterface' type='java.net.NetworkInterface'/><exception name='IOException' type='java.io.IOException'/></method><method name='peek' abstract='true' visibility='protected' return='int'><parameter name='sender' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='peekData' abstract='true' visibility='protected' return='int'><parameter name='pack' type='java.net.DatagramPacket'/><exception name='IOException' type='java.io.IOException'/></method><method name='receive' abstract='true' visibility='protected'><parameter name='pack' type='java.net.DatagramPacket'/><exception name='IOException' type='java.io.IOException'/></method><method name='send' abstract='true' visibility='protected'><parameter name='pack' type='java.net.DatagramPacket'/><exception name='IOException' type='java.io.IOException'/></method><method name='setOption' abstract='true' api_removed='5'><parameter name='optID' type='int'/><parameter name='val' type='java.lang.Object'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setTTL' abstract='true' deprecated='1' visibility='protected'><parameter name='ttl' type='byte'/><exception name='IOException' type='java.io.IOException'/></method><method name='setTimeToLive' abstract='true' visibility='protected'><parameter name='ttl' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpRetryException' extends='java.io.IOException'><constructor name='HttpRetryException' type='java.net.HttpRetryException'><parameter name='detail' type='java.lang.String'/><parameter name='code' type='int'/></constructor><constructor name='HttpRetryException' type='java.net.HttpRetryException'><parameter name='detail' type='java.lang.String'/><parameter name='code' type='int'/><parameter name='location' type='java.lang.String'/></constructor><method name='getLocation' return='java.lang.String'/><method name='getReason' return='java.lang.String'/><method name='responseCode' return='int'/></class><class name='HttpURLConnection' extends='java.net.URLConnection' abstract='true'><constructor name='HttpURLConnection' type='java.net.HttpURLConnection' visibility='protected'><parameter name='url' type='java.net.URL'/></constructor><field name='HTTP_ACCEPTED' final='true' static='true' value='202' type='int'/><field name='HTTP_BAD_GATEWAY' final='true' static='true' value='502' type='int'/><field name='HTTP_BAD_METHOD' final='true' static='true' value='405' type='int'/><field name='HTTP_BAD_REQUEST' final='true' static='true' value='400' type='int'/><field name='HTTP_CLIENT_TIMEOUT' final='true' static='true' value='408' type='int'/><field name='HTTP_CONFLICT' final='true' static='true' value='409' type='int'/><field name='HTTP_CREATED' final='true' static='true' value='201' type='int'/><field name='HTTP_ENTITY_TOO_LARGE' final='true' static='true' value='413' type='int'/><field name='HTTP_FORBIDDEN' final='true' static='true' value='403' type='int'/><field name='HTTP_GATEWAY_TIMEOUT' final='true' static='true' value='504' type='int'/><field name='HTTP_GONE' final='true' static='true' value='410' type='int'/><field name='HTTP_INTERNAL_ERROR' final='true' static='true' value='500' type='int'/><field name='HTTP_LENGTH_REQUIRED' final='true' static='true' value='411' type='int'/><field name='HTTP_MOVED_PERM' final='true' static='true' value='301' type='int'/><field name='HTTP_MOVED_TEMP' final='true' static='true' value='302' type='int'/><field name='HTTP_MULT_CHOICE' final='true' static='true' value='300' type='int'/><field name='HTTP_NOT_ACCEPTABLE' final='true' static='true' value='406' type='int'/><field name='HTTP_NOT_AUTHORITATIVE' final='true' static='true' value='203' type='int'/><field name='HTTP_NOT_FOUND' final='true' static='true' value='404' type='int'/><field name='HTTP_NOT_IMPLEMENTED' final='true' static='true' value='501' type='int'/><field name='HTTP_NOT_MODIFIED' final='true' static='true' value='304' type='int'/><field name='HTTP_NO_CONTENT' final='true' static='true' value='204' type='int'/><field name='HTTP_OK' final='true' static='true' value='200' type='int'/><field name='HTTP_PARTIAL' final='true' static='true' value='206' type='int'/><field name='HTTP_PAYMENT_REQUIRED' final='true' static='true' value='402' type='int'/><field name='HTTP_PRECON_FAILED' final='true' static='true' value='412' type='int'/><field name='HTTP_PROXY_AUTH' final='true' static='true' value='407' type='int'/><field name='HTTP_REQ_TOO_LONG' final='true' static='true' value='414' type='int'/><field name='HTTP_RESET' final='true' static='true' value='205' type='int'/><field name='HTTP_SEE_OTHER' final='true' static='true' value='303' type='int'/><field name='HTTP_SERVER_ERROR' final='true' static='true' value='500' type='int' deprecated='1'/><field name='HTTP_UNAUTHORIZED' final='true' static='true' value='401' type='int'/><field name='HTTP_UNAVAILABLE' final='true' static='true' value='503' type='int'/><field name='HTTP_UNSUPPORTED_TYPE' final='true' static='true' value='415' type='int'/><field name='HTTP_USE_PROXY' final='true' static='true' value='305' type='int'/><field name='HTTP_VERSION' final='true' static='true' value='505' type='int'/><field name='chunkLength' type='int' visibility='protected'/><field name='fixedContentLength' type='int' visibility='protected'/><field name='instanceFollowRedirects' type='boolean' visibility='protected'/><field name='method' type='java.lang.String' visibility='protected'/><field name='responseCode' type='int' visibility='protected'/><field name='responseMessage' type='java.lang.String' visibility='protected'/><method name='disconnect' abstract='true'/><method name='getErrorStream' return='java.io.InputStream'/><method name='getFollowRedirects' static='true' return='boolean'/><method name='getInstanceFollowRedirects' return='boolean'/><method name='getRequestMethod' return='java.lang.String'/><method name='getResponseCode' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='getResponseMessage' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='setChunkedStreamingMode'><parameter name='chunklen' type='int'/></method><method name='setFixedLengthStreamingMode'><parameter name='contentLength' type='int'/></method><method name='setFollowRedirects' static='true'><parameter name='auto' type='boolean'/></method><method name='setInstanceFollowRedirects'><parameter name='followRedirects' type='boolean'/></method><method name='setRequestMethod'><parameter name='method' type='java.lang.String'/><exception name='ProtocolException' type='java.net.ProtocolException'/></method><method name='usingProxy' abstract='true' return='boolean'/></class><class name='Inet4Address' final='true' extends='java.net.InetAddress'/><class name='Inet6Address' final='true' extends='java.net.InetAddress'><method name='getByAddress' static='true' return='java.net.Inet6Address'><parameter name='host' type='java.lang.String'/><parameter name='addr' type='byte[]'/><parameter name='scope_id' type='int'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getByAddress' static='true' return='java.net.Inet6Address'><parameter name='host' type='java.lang.String'/><parameter name='addr' type='byte[]'/><parameter name='nif' type='java.net.NetworkInterface'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getScopeId' return='int'/><method name='getScopedInterface' return='java.net.NetworkInterface'/><method name='isIPv4CompatibleAddress' return='boolean'/></class><class name='InetAddress' extends='java.lang.Object'><implements name='java.io.Serializable'/><method name='getAddress' return='byte[]'/><method name='getAllByName' static='true' return='java.net.InetAddress[]'><parameter name='host' type='java.lang.String'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getByAddress' static='true' return='java.net.InetAddress'><parameter name='ipAddress' type='byte[]'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getByAddress' static='true' return='java.net.InetAddress'><parameter name='hostName' type='java.lang.String'/><parameter name='ipAddress' type='byte[]'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getByName' static='true' return='java.net.InetAddress'><parameter name='host' type='java.lang.String'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getCanonicalHostName' return='java.lang.String'/><method name='getHostAddress' return='java.lang.String'/><method name='getHostName' return='java.lang.String'/><method name='getLocalHost' static='true' return='java.net.InetAddress'><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='isAnyLocalAddress' return='boolean'/><method name='isLinkLocalAddress' return='boolean'/><method name='isLoopbackAddress' return='boolean'/><method name='isMCGlobal' return='boolean'/><method name='isMCLinkLocal' return='boolean'/><method name='isMCNodeLocal' return='boolean'/><method name='isMCOrgLocal' return='boolean'/><method name='isMCSiteLocal' return='boolean'/><method name='isMulticastAddress' return='boolean'/><method name='isReachable' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='isReachable' return='boolean'><parameter name='netif' type='java.net.NetworkInterface'/><parameter name='ttl' type='int'/><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='isSiteLocalAddress' return='boolean'/></class><class name='InetSocketAddress' extends='java.net.SocketAddress'><constructor name='InetSocketAddress' type='java.net.InetSocketAddress'><parameter name='port' type='int'/></constructor><constructor name='InetSocketAddress' type='java.net.InetSocketAddress'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/></constructor><constructor name='InetSocketAddress' type='java.net.InetSocketAddress'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></constructor><method name='createUnresolved' static='true' return='java.net.InetSocketAddress'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></method><method name='equals' final='true' return='boolean'><parameter name='socketAddr' type='java.lang.Object'/></method><method name='getAddress' final='true' return='java.net.InetAddress'/><method name='getHostName' final='true' return='java.lang.String'/><method name='getPort' final='true' return='int'/><method name='hashCode' final='true' return='int'/><method name='isUnresolved' final='true' return='boolean'/></class><class name='JarURLConnection' extends='java.net.URLConnection' abstract='true'><constructor name='JarURLConnection' type='java.net.JarURLConnection' visibility='protected'><parameter name='url' type='java.net.URL'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><field name='jarFileURLConnection' type='java.net.URLConnection' visibility='protected'/><method name='getAttributes' return='java.util.jar.Attributes'><exception name='IOException' type='java.io.IOException'/></method><method name='getCertificates' return='java.security.cert.Certificate[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getEntryName' return='java.lang.String'/><method name='getJarEntry' return='java.util.jar.JarEntry'><exception name='IOException' type='java.io.IOException'/></method><method name='getJarFile' abstract='true' return='java.util.jar.JarFile'><exception name='IOException' type='java.io.IOException'/></method><method name='getJarFileURL' return='java.net.URL'/><method name='getMainAttributes' return='java.util.jar.Attributes'><exception name='IOException' type='java.io.IOException'/></method><method name='getManifest' return='java.util.jar.Manifest'><exception name='IOException' type='java.io.IOException'/></method></class><class name='MalformedURLException' extends='java.io.IOException'><constructor name='MalformedURLException' type='java.net.MalformedURLException'/><constructor name='MalformedURLException' type='java.net.MalformedURLException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='MulticastSocket' extends='java.net.DatagramSocket'><constructor name='MulticastSocket' type='java.net.MulticastSocket'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='MulticastSocket' type='java.net.MulticastSocket'><parameter name='aPort' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='MulticastSocket' type='java.net.MulticastSocket'><parameter name='localAddr' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getInterface' return='java.net.InetAddress'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getLoopbackMode' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getNetworkInterface' return='java.net.NetworkInterface'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getTTL' deprecated='1' return='byte'><exception name='IOException' type='java.io.IOException'/></method><method name='getTimeToLive' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='joinGroup'><parameter name='groupAddr' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='joinGroup'><parameter name='groupAddress' type='java.net.SocketAddress'/><parameter name='netInterface' type='java.net.NetworkInterface'/><exception name='IOException' type='java.io.IOException'/></method><method name='leaveGroup'><parameter name='groupAddr' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='leaveGroup'><parameter name='groupAddress' type='java.net.SocketAddress'/><parameter name='netInterface' type='java.net.NetworkInterface'/><exception name='IOException' type='java.io.IOException'/></method><method name='send' deprecated='1'><parameter name='pack' type='java.net.DatagramPacket'/><parameter name='ttl' type='byte'/><exception name='IOException' type='java.io.IOException'/></method><method name='setInterface'><parameter name='addr' type='java.net.InetAddress'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setLoopbackMode'><parameter name='loop' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setNetworkInterface'><parameter name='netInterface' type='java.net.NetworkInterface'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setTTL' deprecated='1'><parameter name='ttl' type='byte'/><exception name='IOException' type='java.io.IOException'/></method><method name='setTimeToLive'><parameter name='ttl' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='NetPermission' final='true' extends='java.security.BasicPermission'><constructor name='NetPermission' type='java.net.NetPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='NetPermission' type='java.net.NetPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='NetworkInterface' final='true' extends='java.lang.Object'><method name='getByInetAddress' static='true' return='java.net.NetworkInterface'><parameter name='address' type='java.net.InetAddress'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='getByName' static='true' return='java.net.NetworkInterface'><parameter name='interfaceName' type='java.lang.String'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='getDisplayName' return='java.lang.String'/><method name='getInetAddresses' return='java.util.Enumeration&lt;java.net.InetAddress&gt;'/><method name='getName' return='java.lang.String'/><method name='getNetworkInterfaces' static='true' return='java.util.Enumeration&lt;java.net.NetworkInterface&gt;'><exception name='SocketException' type='java.net.SocketException'/></method></class><class name='NoRouteToHostException' extends='java.net.SocketException'><constructor name='NoRouteToHostException' type='java.net.NoRouteToHostException'/><constructor name='NoRouteToHostException' type='java.net.NoRouteToHostException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='PasswordAuthentication' final='true' extends='java.lang.Object'><constructor name='PasswordAuthentication' type='java.net.PasswordAuthentication'><parameter name='userName' type='java.lang.String'/><parameter name='password' type='char[]'/></constructor><method name='getPassword' return='char[]'/><method name='getUserName' return='java.lang.String'/></class><class name='PortUnreachableException' extends='java.net.SocketException'><constructor name='PortUnreachableException' type='java.net.PortUnreachableException'/><constructor name='PortUnreachableException' type='java.net.PortUnreachableException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ProtocolException' extends='java.io.IOException'><constructor name='ProtocolException' type='java.net.ProtocolException'/><constructor name='ProtocolException' type='java.net.ProtocolException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Proxy' extends='java.lang.Object'><constructor name='Proxy' type='java.net.Proxy'><parameter name='type' type='java.net.Proxy.Type'/><parameter name='sa' type='java.net.SocketAddress'/></constructor><field name='NO_PROXY' final='true' static='true' type='java.net.Proxy'/><method name='address' return='java.net.SocketAddress'/><method name='equals' final='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='hashCode' final='true' return='int'/><method name='type' return='java.net.Proxy.Type'/></class><class name='Proxy.Type' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='java.net.Proxy.Type'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.net.Proxy.Type[]'/></class><class name='ProxySelector' extends='java.lang.Object' abstract='true'><constructor name='ProxySelector' type='java.net.ProxySelector'/><method name='connectFailed' abstract='true'><parameter name='uri' type='java.net.URI'/><parameter name='sa' type='java.net.SocketAddress'/><parameter name='ioe' type='java.io.IOException'/></method><method name='getDefault' static='true' return='java.net.ProxySelector'/><method name='select' abstract='true' return='java.util.List&lt;java.net.Proxy&gt;'><parameter name='uri' type='java.net.URI'/></method><method name='setDefault' static='true'><parameter name='selector' type='java.net.ProxySelector'/></method></class><class name='ResponseCache' extends='java.lang.Object' abstract='true'><constructor name='ResponseCache' type='java.net.ResponseCache'/><method name='get' abstract='true' return='java.net.CacheResponse'><parameter name='uri' type='java.net.URI'/><parameter name='rqstMethod' type='java.lang.String'/><parameter name='rqstHeaders' type='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' static='true' return='java.net.ResponseCache'/><method name='put' abstract='true' return='java.net.CacheRequest'><parameter name='uri' type='java.net.URI'/><parameter name='conn' type='java.net.URLConnection'/><exception name='IOException' type='java.io.IOException'/></method><method name='setDefault' static='true'><parameter name='responseCache' type='java.net.ResponseCache'/></method></class><class name='SecureCacheResponse' extends='java.net.CacheResponse' abstract='true'><constructor name='SecureCacheResponse' type='java.net.SecureCacheResponse'/><method name='getCipherSuite' abstract='true' return='java.lang.String'/><method name='getLocalCertificateChain' abstract='true' return='java.util.List&lt;java.security.cert.Certificate&gt;'/><method name='getLocalPrincipal' abstract='true' return='java.security.Principal'/><method name='getPeerPrincipal' abstract='true' return='java.security.Principal'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getServerCertificateChain' abstract='true' return='java.util.List&lt;java.security.cert.Certificate&gt;'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method></class><class name='ServerSocket' extends='java.lang.Object'><constructor name='ServerSocket' type='java.net.ServerSocket'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='ServerSocket' type='java.net.ServerSocket' visibility='protected'><parameter name='impl' type='java.net.SocketImpl'/></constructor><constructor name='ServerSocket' type='java.net.ServerSocket'><parameter name='aport' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='ServerSocket' type='java.net.ServerSocket'><parameter name='aport' type='int'/><parameter name='backlog' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='ServerSocket' type='java.net.ServerSocket'><parameter name='aport' type='int'/><parameter name='backlog' type='int'/><parameter name='localAddr' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='accept' return='java.net.Socket'><exception name='IOException' type='java.io.IOException'/></method><method name='bind'><parameter name='localAddr' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='bind'><parameter name='localAddr' type='java.net.SocketAddress'/><parameter name='backlog' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getChannel' return='java.nio.channels.ServerSocketChannel'/><method name='getInetAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getLocalSocketAddress' return='java.net.SocketAddress'/><method name='getReceiveBufferSize' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getReuseAddress' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSoTimeout' synchronized='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='implAccept' final='true' visibility='protected'><parameter name='aSocket' type='java.net.Socket'/><exception name='IOException' type='java.io.IOException'/></method><method name='isBound' return='boolean'/><method name='isClosed' return='boolean'/><method name='setPerformancePreferences'><parameter name='connectionTime' type='int'/><parameter name='latency' type='int'/><parameter name='bandwidth' type='int'/></method><method name='setReceiveBufferSize'><parameter name='size' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setReuseAddress'><parameter name='reuse' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSoTimeout' synchronized='true'><parameter name='timeout' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSocketFactory' synchronized='true' static='true'><parameter name='aFactory' type='java.net.SocketImplFactory'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='Socket' extends='java.lang.Object'><constructor name='Socket' type='java.net.Socket'/><constructor name='Socket' type='java.net.Socket'><parameter name='proxy' type='java.net.Proxy'/></constructor><constructor name='Socket' type='java.net.Socket'><parameter name='dstName' type='java.lang.String'/><parameter name='dstPort' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></constructor><constructor name='Socket' type='java.net.Socket'><parameter name='dstName' type='java.lang.String'/><parameter name='dstPort' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Socket' type='java.net.Socket' deprecated='1'><parameter name='hostName' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='streaming' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Socket' type='java.net.Socket'><parameter name='dstAddress' type='java.net.InetAddress'/><parameter name='dstPort' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Socket' type='java.net.Socket'><parameter name='dstAddress' type='java.net.InetAddress'/><parameter name='dstPort' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Socket' type='java.net.Socket' deprecated='1'><parameter name='addr' type='java.net.InetAddress'/><parameter name='port' type='int'/><parameter name='streaming' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Socket' type='java.net.Socket' visibility='protected'><parameter name='anImpl' type='java.net.SocketImpl'/><exception name='SocketException' type='java.net.SocketException'/></constructor><method name='bind'><parameter name='localAddr' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='close' synchronized='true'><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='remoteAddr' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='connect'><parameter name='remoteAddr' type='java.net.SocketAddress'/><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getChannel' return='java.nio.channels.SocketChannel'/><method name='getInetAddress' return='java.net.InetAddress'/><method name='getInputStream' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getKeepAlive' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getLocalAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getLocalSocketAddress' return='java.net.SocketAddress'/><method name='getOOBInline' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getOutputStream' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getPort' return='int'/><method name='getReceiveBufferSize' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getRemoteSocketAddress' return='java.net.SocketAddress'/><method name='getReuseAddress' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSendBufferSize' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSoLinger' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getSoTimeout' synchronized='true' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getTcpNoDelay' return='boolean'><exception name='SocketException' type='java.net.SocketException'/></method><method name='getTrafficClass' return='int'><exception name='SocketException' type='java.net.SocketException'/></method><method name='isBound' return='boolean'/><method name='isClosed' return='boolean'/><method name='isConnected' return='boolean'/><method name='isInputShutdown' return='boolean'/><method name='isOutputShutdown' return='boolean'/><method name='sendUrgentData'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='setKeepAlive'><parameter name='value' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setOOBInline'><parameter name='oobinline' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setPerformancePreferences'><parameter name='connectionTime' type='int'/><parameter name='latency' type='int'/><parameter name='bandwidth' type='int'/></method><method name='setReceiveBufferSize' synchronized='true'><parameter name='size' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setReuseAddress'><parameter name='reuse' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSendBufferSize' synchronized='true'><parameter name='size' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSoLinger'><parameter name='on' type='boolean'/><parameter name='timeout' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSoTimeout' synchronized='true'><parameter name='timeout' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setSocketImplFactory' synchronized='true' static='true'><parameter name='fac' type='java.net.SocketImplFactory'/><exception name='IOException' type='java.io.IOException'/></method><method name='setTcpNoDelay'><parameter name='on' type='boolean'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setTrafficClass'><parameter name='value' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='shutdownInput'><exception name='IOException' type='java.io.IOException'/></method><method name='shutdownOutput'><exception name='IOException' type='java.io.IOException'/></method></class><class name='SocketAddress' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='SocketAddress' type='java.net.SocketAddress'/></class><class name='SocketException' extends='java.io.IOException'><constructor name='SocketException' type='java.net.SocketException'/><constructor name='SocketException' type='java.net.SocketException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='SocketImpl' extends='java.lang.Object' abstract='true'><implements name='java.net.SocketOptions'/><constructor name='SocketImpl' type='java.net.SocketImpl'/><field name='address' type='java.net.InetAddress' visibility='protected'/><field name='fd' type='java.io.FileDescriptor' visibility='protected'/><field name='localport' type='int' visibility='protected'/><field name='port' type='int' visibility='protected'/><method name='accept' abstract='true' visibility='protected'><parameter name='newSocket' type='java.net.SocketImpl'/><exception name='IOException' type='java.io.IOException'/></method><method name='available' abstract='true' visibility='protected' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='bind' abstract='true' visibility='protected'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='close' abstract='true' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='connect' abstract='true' visibility='protected'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='connect' abstract='true' visibility='protected'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='connect' abstract='true' visibility='protected'><parameter name='remoteAddr' type='java.net.SocketAddress'/><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='create' abstract='true' visibility='protected'><parameter name='isStreaming' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='getFileDescriptor' visibility='protected' return='java.io.FileDescriptor'/><method name='getInetAddress' visibility='protected' return='java.net.InetAddress'/><method name='getInputStream' abstract='true' visibility='protected' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getLocalPort' visibility='protected' return='int'/><method name='getOption' abstract='true' return='java.lang.Object'><parameter name='optID' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='getOutputStream' abstract='true' visibility='protected' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getPort' visibility='protected' return='int'/><method name='listen' abstract='true' visibility='protected'><parameter name='backlog' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendUrgentData' abstract='true' visibility='protected'><parameter name='value' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='setOption' abstract='true'><parameter name='optID' type='int'/><parameter name='val' type='java.lang.Object'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setPerformancePreferences' visibility='protected'><parameter name='connectionTime' type='int'/><parameter name='latency' type='int'/><parameter name='bandwidth' type='int'/></method><method name='shutdownInput' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='shutdownOutput' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='supportsUrgentData' visibility='protected' return='boolean'/></class><class name='SocketPermission' final='true' extends='java.security.Permission'><implements name='java.io.Serializable'/><constructor name='SocketPermission' type='java.net.SocketPermission'><parameter name='host' type='java.lang.String'/><parameter name='action' type='java.lang.String'/></constructor><method name='equals' return='boolean'><parameter name='o' type='java.lang.Object'/><parameter name='other' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='p' type='java.security.Permission'/></method></class><class name='SocketTimeoutException' extends='java.io.InterruptedIOException'><constructor name='SocketTimeoutException' type='java.net.SocketTimeoutException'/><constructor name='SocketTimeoutException' type='java.net.SocketTimeoutException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='URI' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='URI' type='java.net.URI'><parameter name='uri' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></constructor><constructor name='URI' type='java.net.URI'><parameter name='scheme' type='java.lang.String'/><parameter name='ssp' type='java.lang.String'/><parameter name='frag' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></constructor><constructor name='URI' type='java.net.URI'><parameter name='scheme' type='java.lang.String'/><parameter name='userinfo' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='path' type='java.lang.String'/><parameter name='query' type='java.lang.String'/><parameter name='fragment' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></constructor><constructor name='URI' type='java.net.URI'><parameter name='scheme' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='path' type='java.lang.String'/><parameter name='fragment' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></constructor><constructor name='URI' type='java.net.URI'><parameter name='scheme' type='java.lang.String'/><parameter name='authority' type='java.lang.String'/><parameter name='path' type='java.lang.String'/><parameter name='query' type='java.lang.String'/><parameter name='fragment' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></constructor><method name='compareTo' return='int'><parameter name='uri' type='java.net.URI'/></method><method name='create' static='true' return='java.net.URI'><parameter name='uri' type='java.lang.String'/></method><method name='getAuthority' return='java.lang.String'/><method name='getFragment' return='java.lang.String'/><method name='getHost' return='java.lang.String'/><method name='getPath' return='java.lang.String'/><method name='getPort' return='int'/><method name='getQuery' return='java.lang.String'/><method name='getRawAuthority' return='java.lang.String'/><method name='getRawFragment' return='java.lang.String'/><method name='getRawPath' return='java.lang.String'/><method name='getRawQuery' return='java.lang.String'/><method name='getRawSchemeSpecificPart' return='java.lang.String'/><method name='getRawUserInfo' return='java.lang.String'/><method name='getScheme' return='java.lang.String'/><method name='getSchemeSpecificPart' return='java.lang.String'/><method name='getUserInfo' return='java.lang.String'/><method name='isAbsolute' return='boolean'/><method name='isOpaque' return='boolean'/><method name='normalize' return='java.net.URI'/><method name='parseServerAuthority' return='java.net.URI'><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method name='relativize' return='java.net.URI'><parameter name='relative' type='java.net.URI'/></method><method name='resolve' return='java.net.URI'><parameter name='relative' type='java.net.URI'/></method><method name='resolve' return='java.net.URI'><parameter name='relative' type='java.lang.String'/></method><method name='toASCIIString' return='java.lang.String'/><method name='toURL' return='java.net.URL'><exception name='MalformedURLException' type='java.net.MalformedURLException'/></method></class><class name='URISyntaxException' extends='java.lang.Exception'><constructor name='URISyntaxException' type='java.net.URISyntaxException'><parameter name='input' type='java.lang.String'/><parameter name='reason' type='java.lang.String'/><parameter name='index' type='int'/></constructor><constructor name='URISyntaxException' type='java.net.URISyntaxException'><parameter name='input' type='java.lang.String'/><parameter name='reason' type='java.lang.String'/></constructor><method name='getIndex' return='int'/><method name='getInput' return='java.lang.String'/><method name='getReason' return='java.lang.String'/></class><class name='URL' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='URL' type='java.net.URL'><parameter name='spec' type='java.lang.String'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><constructor name='URL' type='java.net.URL'><parameter name='context' type='java.net.URL'/><parameter name='spec' type='java.lang.String'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><constructor name='URL' type='java.net.URL'><parameter name='context' type='java.net.URL'/><parameter name='spec' type='java.lang.String'/><parameter name='handler' type='java.net.URLStreamHandler'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><constructor name='URL' type='java.net.URL'><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='file' type='java.lang.String'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><constructor name='URL' type='java.net.URL'><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='file' type='java.lang.String'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><constructor name='URL' type='java.net.URL'><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='file' type='java.lang.String'/><parameter name='handler' type='java.net.URLStreamHandler'/><exception name='MalformedURLException' type='java.net.MalformedURLException'/></constructor><method name='getAuthority' return='java.lang.String'/><method name='getContent' final='true' return='java.lang.Object'><exception name='IOException' type='java.io.IOException'/></method><method name='getContent' final='true' return='java.lang.Object'><parameter name='types' type='java.lang.Class[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefaultPort' return='int'/><method name='getFile' return='java.lang.String'/><method name='getHost' return='java.lang.String'/><method name='getPath' return='java.lang.String'/><method name='getPort' return='int'/><method name='getProtocol' return='java.lang.String'/><method name='getQuery' return='java.lang.String'/><method name='getRef' return='java.lang.String'/><method name='getUserInfo' return='java.lang.String'/><method name='openConnection' return='java.net.URLConnection'><exception name='IOException' type='java.io.IOException'/></method><method name='openConnection' return='java.net.URLConnection'><parameter name='proxy' type='java.net.Proxy'/><exception name='IOException' type='java.io.IOException'/></method><method name='openStream' final='true' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='sameFile' return='boolean'><parameter name='otherURL' type='java.net.URL'/></method><method name='set' visibility='protected'><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='file' type='java.lang.String'/><parameter name='ref' type='java.lang.String'/></method><method name='set' visibility='protected'><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='authority' type='java.lang.String'/><parameter name='userInfo' type='java.lang.String'/><parameter name='path' type='java.lang.String'/><parameter name='query' type='java.lang.String'/><parameter name='ref' type='java.lang.String'/></method><method name='setURLStreamHandlerFactory' synchronized='true' static='true'><parameter name='streamFactory' type='java.net.URLStreamHandlerFactory'/></method><method name='toExternalForm' return='java.lang.String'/><method name='toURI' return='java.net.URI'><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method></class><class name='URLClassLoader' extends='java.security.SecureClassLoader'><constructor name='URLClassLoader' type='java.net.URLClassLoader'><parameter name='urls' type='java.net.URL[]'/></constructor><constructor name='URLClassLoader' type='java.net.URLClassLoader'><parameter name='urls' type='java.net.URL[]'/><parameter name='parent' type='java.lang.ClassLoader'/></constructor><constructor name='URLClassLoader' type='java.net.URLClassLoader'><parameter name='searchUrls' type='java.net.URL[]'/><parameter name='parent' type='java.lang.ClassLoader'/><parameter name='factory' type='java.net.URLStreamHandlerFactory'/></constructor><method name='addURL' visibility='protected'><parameter name='url' type='java.net.URL'/></method><method name='definePackage' visibility='protected' return='java.lang.Package'><parameter name='packageName' type='java.lang.String'/><parameter name='manifest' type='java.util.jar.Manifest'/><parameter name='url' type='java.net.URL'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='findResource' return='java.net.URL'><parameter name='name' type='java.lang.String'/></method><method name='findResources' return='java.util.Enumeration&lt;java.net.URL&gt;'><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='getURLs' return='java.net.URL[]'/><method name='newInstance' static='true' return='java.net.URLClassLoader'><parameter name='urls' type='java.net.URL[]'/></method><method name='newInstance' static='true' return='java.net.URLClassLoader'><parameter name='urls' type='java.net.URL[]'/><parameter name='parentCl' type='java.lang.ClassLoader'/></method></class><class name='URLConnection' extends='java.lang.Object' abstract='true'><constructor name='URLConnection' type='java.net.URLConnection' visibility='protected'><parameter name='url' type='java.net.URL'/></constructor><field name='allowUserInteraction' type='boolean' visibility='protected'/><field name='connected' type='boolean' visibility='protected'/><field name='doInput' type='boolean' visibility='protected'/><field name='doOutput' type='boolean' visibility='protected'/><field name='ifModifiedSince' type='long' visibility='protected'/><field name='url' type='java.net.URL' visibility='protected'/><field name='useCaches' type='boolean' visibility='protected'/><method name='addRequestProperty'><parameter name='field' type='java.lang.String'/><parameter name='newValue' type='java.lang.String'/></method><method name='connect' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getAllowUserInteraction' return='boolean'/><method name='getConnectTimeout' return='int'/><method name='getContent' return='java.lang.Object'><exception name='IOException' type='java.io.IOException'/></method><method name='getContent' return='java.lang.Object'><parameter name='types' type='java.lang.Class[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='getContentEncoding' return='java.lang.String'/><method name='getContentLength' return='int'/><method name='getContentType' return='java.lang.String'/><method name='getDate' return='long'/><method name='getDefaultAllowUserInteraction' static='true' return='boolean'/><method name='getDefaultRequestProperty' static='true' deprecated='1' return='java.lang.String'><parameter name='field' type='java.lang.String'/></method><method name='getDefaultUseCaches' return='boolean'/><method name='getDoInput' return='boolean'/><method name='getDoOutput' return='boolean'/><method name='getExpiration' return='long'/><method name='getFileNameMap' static='true' return='java.net.FileNameMap'/><method name='getHeaderField' return='java.lang.String'><parameter name='pos' type='int'/></method><method name='getHeaderField' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getHeaderFieldDate' return='long'><parameter name='field' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='getHeaderFieldInt' return='int'><parameter name='field' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getHeaderFieldKey' return='java.lang.String'><parameter name='posn' type='int'/></method><method name='getHeaderFields' return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'/><method name='getIfModifiedSince' return='long'/><method name='getInputStream' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getLastModified' return='long'/><method name='getOutputStream' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getPermission' return='java.security.Permission'><exception name='IOException' type='java.io.IOException'/></method><method name='getReadTimeout' return='int'/><method name='getRequestProperties' return='java.util.Map&lt;java.lang.String, java.util.List&lt;java.lang.String&gt;&gt;'/><method name='getRequestProperty' return='java.lang.String'><parameter name='field' type='java.lang.String'/></method><method name='getURL' return='java.net.URL'/><method name='getUseCaches' return='boolean'/><method name='guessContentTypeFromName' static='true' return='java.lang.String'><parameter name='url' type='java.lang.String'/></method><method name='guessContentTypeFromStream' static='true' return='java.lang.String'><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='setAllowUserInteraction'><parameter name='newValue' type='boolean'/></method><method name='setConnectTimeout'><parameter name='timeout' type='int'/></method><method name='setContentHandlerFactory' synchronized='true' static='true'><parameter name='contentFactory' type='java.net.ContentHandlerFactory'/></method><method name='setDefaultAllowUserInteraction' static='true'><parameter name='allows' type='boolean'/></method><method name='setDefaultRequestProperty' static='true' deprecated='1'><parameter name='field' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setDefaultUseCaches'><parameter name='newValue' type='boolean'/></method><method name='setDoInput'><parameter name='newValue' type='boolean'/></method><method name='setDoOutput'><parameter name='newValue' type='boolean'/></method><method name='setFileNameMap' static='true'><parameter name='map' type='java.net.FileNameMap'/></method><method name='setIfModifiedSince'><parameter name='newValue' type='long'/></method><method name='setReadTimeout'><parameter name='timeout' type='int'/></method><method name='setRequestProperty'><parameter name='field' type='java.lang.String'/><parameter name='newValue' type='java.lang.String'/></method><method name='setUseCaches'><parameter name='newValue' type='boolean'/></method></class><class name='URLDecoder' extends='java.lang.Object'><constructor name='URLDecoder' type='java.net.URLDecoder'/><method name='decode' static='true' deprecated='1' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='decode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method></class><class name='URLEncoder' extends='java.lang.Object'><method name='encode' static='true' deprecated='1' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='encode' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/><parameter name='enc' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method></class><class name='URLStreamHandler' extends='java.lang.Object' abstract='true'><constructor name='URLStreamHandler' type='java.net.URLStreamHandler'/><method name='equals' visibility='protected' return='boolean'><parameter name='url1' type='java.net.URL'/><parameter name='url2' type='java.net.URL'/></method><method name='getDefaultPort' visibility='protected' return='int'/><method name='getHostAddress' visibility='protected' return='java.net.InetAddress'><parameter name='url' type='java.net.URL'/></method><method name='hashCode' visibility='protected' return='int'><parameter name='url' type='java.net.URL'/></method><method name='hostsEqual' visibility='protected' return='boolean'><parameter name='url1' type='java.net.URL'/><parameter name='url2' type='java.net.URL'/></method><method name='openConnection' abstract='true' visibility='protected' return='java.net.URLConnection'><parameter name='u' type='java.net.URL'/><exception name='IOException' type='java.io.IOException'/></method><method name='openConnection' visibility='protected' return='java.net.URLConnection'><parameter name='u' type='java.net.URL'/><parameter name='proxy' type='java.net.Proxy'/><exception name='IOException' type='java.io.IOException'/></method><method name='parseURL' visibility='protected'><parameter name='u' type='java.net.URL'/><parameter name='str' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sameFile' visibility='protected' return='boolean'><parameter name='url1' type='java.net.URL'/><parameter name='url2' type='java.net.URL'/></method><method name='setURL' deprecated='1' visibility='protected'><parameter name='u' type='java.net.URL'/><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='file' type='java.lang.String'/><parameter name='ref' type='java.lang.String'/></method><method name='setURL' visibility='protected'><parameter name='u' type='java.net.URL'/><parameter name='protocol' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='authority' type='java.lang.String'/><parameter name='userInfo' type='java.lang.String'/><parameter name='file' type='java.lang.String'/><parameter name='query' type='java.lang.String'/><parameter name='ref' type='java.lang.String'/></method><method name='toExternalForm' visibility='protected' return='java.lang.String'><parameter name='url' type='java.net.URL'/></method></class><class name='UnknownHostException' extends='java.io.IOException'><constructor name='UnknownHostException' type='java.net.UnknownHostException'/><constructor name='UnknownHostException' type='java.net.UnknownHostException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='UnknownServiceException' extends='java.io.IOException'><constructor name='UnknownServiceException' type='java.net.UnknownServiceException'/><constructor name='UnknownServiceException' type='java.net.UnknownServiceException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><interface name='ContentHandlerFactory' abstract='true'><method name='createContentHandler' abstract='true' return='java.net.ContentHandler'><parameter name='contentType' type='java.lang.String'/></method></interface><interface name='DatagramSocketImplFactory' abstract='true'><method name='createDatagramSocketImpl' abstract='true' return='java.net.DatagramSocketImpl'/></interface><interface name='FileNameMap' abstract='true'><method name='getContentTypeFor' abstract='true' return='java.lang.String'><parameter name='fileName' type='java.lang.String'/></method></interface><interface name='SocketImplFactory' abstract='true'><method name='createSocketImpl' abstract='true' return='java.net.SocketImpl'/></interface><interface name='SocketOptions' abstract='true'><field name='IP_MULTICAST_IF' final='true' static='true' value='16' type='int'/><field name='IP_MULTICAST_IF2' final='true' static='true' value='31' type='int'/><field name='IP_MULTICAST_LOOP' final='true' static='true' value='18' type='int'/><field name='IP_TOS' final='true' static='true' value='3' type='int'/><field name='SO_BINDADDR' final='true' static='true' value='15' type='int'/><field name='SO_BROADCAST' final='true' static='true' value='32' type='int'/><field name='SO_KEEPALIVE' final='true' static='true' value='8' type='int'/><field name='SO_LINGER' final='true' static='true' value='128' type='int'/><field name='SO_OOBINLINE' final='true' static='true' value='4099' type='int'/><field name='SO_RCVBUF' final='true' static='true' value='4098' type='int'/><field name='SO_REUSEADDR' final='true' static='true' value='4' type='int'/><field name='SO_SNDBUF' final='true' static='true' value='4097' type='int'/><field name='SO_TIMEOUT' final='true' static='true' value='4102' type='int'/><field name='TCP_NODELAY' final='true' static='true' value='1' type='int'/><method name='getOption' abstract='true' return='java.lang.Object'><parameter name='optID' type='int'/><exception name='SocketException' type='java.net.SocketException'/></method><method name='setOption' abstract='true'><parameter name='optID' type='int'/><parameter name='val' type='java.lang.Object'/><exception name='SocketException' type='java.net.SocketException'/></method></interface><interface name='URLStreamHandlerFactory' abstract='true'><method name='createURLStreamHandler' abstract='true' return='java.net.URLStreamHandler'><parameter name='protocol' type='java.lang.String'/></method></interface></package><package name='java.nio'><class name='Buffer' extends='java.lang.Object' abstract='true'><method name='capacity' final='true' return='int'/><method name='clear' final='true' return='java.nio.Buffer'/><method name='flip' final='true' return='java.nio.Buffer'/><method name='hasRemaining' final='true' return='boolean'/><method name='isReadOnly' abstract='true' return='boolean'/><method name='limit' final='true' return='int'/><method name='limit' final='true' return='java.nio.Buffer'><parameter name='newLimit' type='int'/></method><method name='mark' final='true' return='java.nio.Buffer'/><method name='position' final='true' return='int'/><method name='position' final='true' return='java.nio.Buffer'><parameter name='newPosition' type='int'/></method><method name='remaining' final='true' return='int'/><method name='reset' final='true' return='java.nio.Buffer'/><method name='rewind' final='true' return='java.nio.Buffer'/></class><class name='BufferOverflowException' extends='java.lang.RuntimeException'><constructor name='BufferOverflowException' type='java.nio.BufferOverflowException'/></class><class name='BufferUnderflowException' extends='java.lang.RuntimeException'><constructor name='BufferUnderflowException' type='java.nio.BufferUnderflowException'/></class><class name='ByteBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.ByteBuffer'><parameter name='capacity' type='int'/></method><method name='allocateDirect' static='true' return='java.nio.ByteBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='byte[]'/><method name='arrayOffset' final='true' return='int'/><method name='asCharBuffer' abstract='true' return='java.nio.CharBuffer'/><method name='asDoubleBuffer' abstract='true' return='java.nio.DoubleBuffer'/><method name='asFloatBuffer' abstract='true' return='java.nio.FloatBuffer'/><method name='asIntBuffer' abstract='true' return='java.nio.IntBuffer'/><method name='asLongBuffer' abstract='true' return='java.nio.LongBuffer'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.ByteBuffer'/><method name='asShortBuffer' abstract='true' return='java.nio.ShortBuffer'/><method name='compact' abstract='true' return='java.nio.ByteBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.ByteBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.ByteBuffer'/><method name='get' abstract='true' return='byte'/><method name='get' return='java.nio.ByteBuffer'><parameter name='dest' type='byte[]'/></method><method name='get' return='java.nio.ByteBuffer'><parameter name='dest' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='byte'><parameter name='index' type='int'/></method><method name='getChar' abstract='true' return='char'/><method name='getChar' abstract='true' return='char'><parameter name='index' type='int'/></method><method name='getDouble' abstract='true' return='double'/><method name='getDouble' abstract='true' return='double'><parameter name='index' type='int'/></method><method name='getFloat' abstract='true' return='float'/><method name='getFloat' abstract='true' return='float'><parameter name='index' type='int'/></method><method name='getInt' abstract='true' return='int'/><method name='getInt' abstract='true' return='int'><parameter name='index' type='int'/></method><method name='getLong' abstract='true' return='long'/><method name='getLong' abstract='true' return='long'><parameter name='index' type='int'/></method><method name='getShort' abstract='true' return='short'/><method name='getShort' abstract='true' return='short'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' final='true' return='java.nio.ByteOrder'/><method name='order' final='true' return='java.nio.ByteBuffer'><parameter name='byteOrder' type='java.nio.ByteOrder'/></method><method name='put' abstract='true' return='java.nio.ByteBuffer'><parameter name='b' type='byte'/></method><method name='put' final='true' return='java.nio.ByteBuffer'><parameter name='src' type='byte[]'/></method><method name='put' return='java.nio.ByteBuffer'><parameter name='src' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.ByteBuffer'><parameter name='src' type='java.nio.ByteBuffer'/></method><method name='put' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='b' type='byte'/></method><method name='putChar' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='char'/></method><method name='putChar' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='char'/></method><method name='putDouble' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='double'/></method><method name='putDouble' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='double'/></method><method name='putFloat' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='float'/></method><method name='putFloat' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='float'/></method><method name='putInt' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='int'/></method><method name='putInt' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='int'/></method><method name='putLong' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='long'/></method><method name='putLong' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='long'/></method><method name='putShort' abstract='true' return='java.nio.ByteBuffer'><parameter name='value' type='short'/></method><method name='putShort' abstract='true' return='java.nio.ByteBuffer'><parameter name='index' type='int'/><parameter name='value' type='short'/></method><method name='slice' abstract='true' return='java.nio.ByteBuffer'/><method name='wrap' static='true' return='java.nio.ByteBuffer'><parameter name='array' type='byte[]'/></method><method name='wrap' static='true' return='java.nio.ByteBuffer'><parameter name='array' type='byte[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class><class name='ByteOrder' final='true' extends='java.lang.Object'><field name='BIG_ENDIAN' final='true' static='true' type='java.nio.ByteOrder'/><field name='LITTLE_ENDIAN' final='true' static='true' type='java.nio.ByteOrder'/><method name='nativeOrder' static='true' return='java.nio.ByteOrder'/></class><class name='CharBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Appendable'/><implements name='java.lang.CharSequence'/><implements name='java.lang.Comparable'/><implements name='java.lang.Readable'/><method name='allocate' static='true' return='java.nio.CharBuffer'><parameter name='capacity' type='int'/></method><method name='append' return='java.nio.CharBuffer'><parameter name='c' type='char'/></method><method name='append' return='java.nio.CharBuffer'><parameter name='csq' type='java.lang.CharSequence'/></method><method name='append' return='java.nio.CharBuffer'><parameter name='csq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='array' final='true' return='char[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.CharBuffer'/><method name='charAt' final='true' return='char'><parameter name='index' type='int'/></method><method name='compact' abstract='true' return='java.nio.CharBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.CharBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.CharBuffer'/><method name='get' abstract='true' return='char'/><method name='get' return='java.nio.CharBuffer'><parameter name='dest' type='char[]'/></method><method name='get' return='java.nio.CharBuffer'><parameter name='dest' type='char[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='char'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='length' final='true' return='int'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.CharBuffer'><parameter name='c' type='char'/></method><method name='put' final='true' return='java.nio.CharBuffer'><parameter name='src' type='char[]'/></method><method name='put' return='java.nio.CharBuffer'><parameter name='src' type='char[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.CharBuffer'><parameter name='src' type='java.nio.CharBuffer'/></method><method name='put' abstract='true' return='java.nio.CharBuffer'><parameter name='index' type='int'/><parameter name='c' type='char'/></method><method name='put' final='true' return='java.nio.CharBuffer'><parameter name='str' type='java.lang.String'/></method><method name='put' return='java.nio.CharBuffer'><parameter name='str' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='read' return='int'><parameter name='target' type='java.nio.CharBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='slice' abstract='true' return='java.nio.CharBuffer'/><method name='subSequence' abstract='true' return='java.lang.CharSequence'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='wrap' static='true' return='java.nio.CharBuffer'><parameter name='array' type='char[]'/></method><method name='wrap' static='true' return='java.nio.CharBuffer'><parameter name='array' type='char[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method><method name='wrap' static='true' return='java.nio.CharBuffer'><parameter name='chseq' type='java.lang.CharSequence'/></method><method name='wrap' static='true' return='java.nio.CharBuffer'><parameter name='chseq' type='java.lang.CharSequence'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method></class><class name='DoubleBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.DoubleBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='double[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.DoubleBuffer'/><method name='compact' abstract='true' return='java.nio.DoubleBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.DoubleBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.DoubleBuffer'/><method name='get' abstract='true' return='double'/><method name='get' return='java.nio.DoubleBuffer'><parameter name='dest' type='double[]'/></method><method name='get' return='java.nio.DoubleBuffer'><parameter name='dest' type='double[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='double'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.DoubleBuffer'><parameter name='d' type='double'/></method><method name='put' final='true' return='java.nio.DoubleBuffer'><parameter name='src' type='double[]'/></method><method name='put' return='java.nio.DoubleBuffer'><parameter name='src' type='double[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.DoubleBuffer'><parameter name='src' type='java.nio.DoubleBuffer'/></method><method name='put' abstract='true' return='java.nio.DoubleBuffer'><parameter name='index' type='int'/><parameter name='d' type='double'/></method><method name='slice' abstract='true' return='java.nio.DoubleBuffer'/><method name='wrap' static='true' return='java.nio.DoubleBuffer'><parameter name='array' type='double[]'/></method><method name='wrap' static='true' return='java.nio.DoubleBuffer'><parameter name='array' type='double[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class><class name='FloatBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.FloatBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='float[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.FloatBuffer'/><method name='compact' abstract='true' return='java.nio.FloatBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.FloatBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.FloatBuffer'/><method name='get' abstract='true' return='float'/><method name='get' return='java.nio.FloatBuffer'><parameter name='dest' type='float[]'/></method><method name='get' return='java.nio.FloatBuffer'><parameter name='dest' type='float[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='float'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.FloatBuffer'><parameter name='f' type='float'/></method><method name='put' final='true' return='java.nio.FloatBuffer'><parameter name='src' type='float[]'/></method><method name='put' return='java.nio.FloatBuffer'><parameter name='src' type='float[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.FloatBuffer'><parameter name='src' type='java.nio.FloatBuffer'/></method><method name='put' abstract='true' return='java.nio.FloatBuffer'><parameter name='index' type='int'/><parameter name='f' type='float'/></method><method name='slice' abstract='true' return='java.nio.FloatBuffer'/><method name='wrap' static='true' return='java.nio.FloatBuffer'><parameter name='array' type='float[]'/></method><method name='wrap' static='true' return='java.nio.FloatBuffer'><parameter name='array' type='float[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class><class name='IntBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.IntBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='int[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.IntBuffer'/><method name='compact' abstract='true' return='java.nio.IntBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.IntBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.IntBuffer'/><method name='get' abstract='true' return='int'/><method name='get' return='java.nio.IntBuffer'><parameter name='dest' type='int[]'/></method><method name='get' return='java.nio.IntBuffer'><parameter name='dest' type='int[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='int'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.IntBuffer'><parameter name='i' type='int'/></method><method name='put' final='true' return='java.nio.IntBuffer'><parameter name='src' type='int[]'/></method><method name='put' return='java.nio.IntBuffer'><parameter name='src' type='int[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.IntBuffer'><parameter name='src' type='java.nio.IntBuffer'/></method><method name='put' abstract='true' return='java.nio.IntBuffer'><parameter name='index' type='int'/><parameter name='i' type='int'/></method><method name='slice' abstract='true' return='java.nio.IntBuffer'/><method name='wrap' static='true' return='java.nio.IntBuffer'><parameter name='array' type='int[]'/></method><method name='wrap' static='true' return='java.nio.IntBuffer'><parameter name='array' type='int[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class><class name='InvalidMarkException' extends='java.lang.IllegalStateException'><constructor name='InvalidMarkException' type='java.nio.InvalidMarkException'/></class><class name='LongBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.LongBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='long[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.LongBuffer'/><method name='compact' abstract='true' return='java.nio.LongBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.LongBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.LongBuffer'/><method name='get' abstract='true' return='long'/><method name='get' return='java.nio.LongBuffer'><parameter name='dest' type='long[]'/></method><method name='get' return='java.nio.LongBuffer'><parameter name='dest' type='long[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='long'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.LongBuffer'><parameter name='l' type='long'/></method><method name='put' final='true' return='java.nio.LongBuffer'><parameter name='src' type='long[]'/></method><method name='put' return='java.nio.LongBuffer'><parameter name='src' type='long[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.LongBuffer'><parameter name='src' type='java.nio.LongBuffer'/></method><method name='put' abstract='true' return='java.nio.LongBuffer'><parameter name='index' type='int'/><parameter name='l' type='long'/></method><method name='slice' abstract='true' return='java.nio.LongBuffer'/><method name='wrap' static='true' return='java.nio.LongBuffer'><parameter name='array' type='long[]'/></method><method name='wrap' static='true' return='java.nio.LongBuffer'><parameter name='array' type='long[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class><class name='MappedByteBuffer' extends='java.nio.ByteBuffer' abstract='true'><method name='force' final='true' return='java.nio.MappedByteBuffer'/><method name='isLoaded' final='true' return='boolean'/><method name='load' final='true' return='java.nio.MappedByteBuffer'/></class><class name='ReadOnlyBufferException' extends='java.lang.UnsupportedOperationException'><constructor name='ReadOnlyBufferException' type='java.nio.ReadOnlyBufferException'/></class><class name='ShortBuffer' extends='java.nio.Buffer' abstract='true'><implements name='java.lang.Comparable'/><method name='allocate' static='true' return='java.nio.ShortBuffer'><parameter name='capacity' type='int'/></method><method name='array' final='true' return='short[]'/><method name='arrayOffset' final='true' return='int'/><method name='asReadOnlyBuffer' abstract='true' return='java.nio.ShortBuffer'/><method name='compact' abstract='true' return='java.nio.ShortBuffer'/><method name='compareTo' return='int'><parameter name='otherBuffer' type='java.nio.ShortBuffer'/></method><method name='duplicate' abstract='true' return='java.nio.ShortBuffer'/><method name='get' abstract='true' return='short'/><method name='get' return='java.nio.ShortBuffer'><parameter name='dest' type='short[]'/></method><method name='get' return='java.nio.ShortBuffer'><parameter name='dest' type='short[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='get' abstract='true' return='short'><parameter name='index' type='int'/></method><method name='hasArray' final='true' return='boolean'/><method name='isDirect' abstract='true' return='boolean'/><method name='order' abstract='true' return='java.nio.ByteOrder'/><method name='put' abstract='true' return='java.nio.ShortBuffer'><parameter name='s' type='short'/></method><method name='put' final='true' return='java.nio.ShortBuffer'><parameter name='src' type='short[]'/></method><method name='put' return='java.nio.ShortBuffer'><parameter name='src' type='short[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='put' return='java.nio.ShortBuffer'><parameter name='src' type='java.nio.ShortBuffer'/></method><method name='put' abstract='true' return='java.nio.ShortBuffer'><parameter name='index' type='int'/><parameter name='s' type='short'/></method><method name='slice' abstract='true' return='java.nio.ShortBuffer'/><method name='wrap' static='true' return='java.nio.ShortBuffer'><parameter name='array' type='short[]'/></method><method name='wrap' static='true' return='java.nio.ShortBuffer'><parameter name='array' type='short[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/></method></class></package><package name='java.nio.channels'><class name='AlreadyConnectedException' extends='java.lang.IllegalStateException'><constructor name='AlreadyConnectedException' type='java.nio.channels.AlreadyConnectedException'/></class><class name='AsynchronousCloseException' extends='java.nio.channels.ClosedChannelException'><constructor name='AsynchronousCloseException' type='java.nio.channels.AsynchronousCloseException'/></class><class name='CancelledKeyException' extends='java.lang.IllegalStateException'><constructor name='CancelledKeyException' type='java.nio.channels.CancelledKeyException'/></class><class name='Channels' final='true' extends='java.lang.Object'><method name='newChannel' static='true' return='java.nio.channels.ReadableByteChannel'><parameter name='inputStream' type='java.io.InputStream'/></method><method name='newChannel' static='true' return='java.nio.channels.WritableByteChannel'><parameter name='outputStream' type='java.io.OutputStream'/></method><method name='newInputStream' static='true' return='java.io.InputStream'><parameter name='channel' type='java.nio.channels.ReadableByteChannel'/></method><method name='newOutputStream' static='true' return='java.io.OutputStream'><parameter name='channel' type='java.nio.channels.WritableByteChannel'/></method><method name='newReader' static='true' return='java.io.Reader'><parameter name='channel' type='java.nio.channels.ReadableByteChannel'/><parameter name='decoder' type='java.nio.charset.CharsetDecoder'/><parameter name='minBufferCapacity' type='int'/></method><method name='newReader' static='true' return='java.io.Reader'><parameter name='channel' type='java.nio.channels.ReadableByteChannel'/><parameter name='charsetName' type='java.lang.String'/></method><method name='newWriter' static='true' return='java.io.Writer'><parameter name='channel' type='java.nio.channels.WritableByteChannel'/><parameter name='encoder' type='java.nio.charset.CharsetEncoder'/><parameter name='minBufferCapacity' type='int'/></method><method name='newWriter' static='true' return='java.io.Writer'><parameter name='channel' type='java.nio.channels.WritableByteChannel'/><parameter name='charsetName' type='java.lang.String'/></method></class><class name='ClosedByInterruptException' extends='java.nio.channels.AsynchronousCloseException'><constructor name='ClosedByInterruptException' type='java.nio.channels.ClosedByInterruptException'/></class><class name='ClosedChannelException' extends='java.io.IOException'><constructor name='ClosedChannelException' type='java.nio.channels.ClosedChannelException'/></class><class name='ClosedSelectorException' extends='java.lang.IllegalStateException'><constructor name='ClosedSelectorException' type='java.nio.channels.ClosedSelectorException'/></class><class name='ConnectionPendingException' extends='java.lang.IllegalStateException'><constructor name='ConnectionPendingException' type='java.nio.channels.ConnectionPendingException'/></class><class name='DatagramChannel' extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true'><implements name='java.nio.channels.ByteChannel'/><implements name='java.nio.channels.GatheringByteChannel'/><implements name='java.nio.channels.ScatteringByteChannel'/><constructor name='DatagramChannel' type='java.nio.channels.DatagramChannel' visibility='protected'><parameter name='selectorProvider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='connect' abstract='true' return='java.nio.channels.DatagramChannel'><parameter name='address' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='disconnect' abstract='true' return='java.nio.channels.DatagramChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='isConnected' abstract='true' return='boolean'/><method name='open' static='true' return='java.nio.channels.DatagramChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='target' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='long'><parameter name='targets' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' synchronized='true' return='long'><parameter name='targets' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='receive' abstract='true' return='java.net.SocketAddress'><parameter name='target' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='send' abstract='true' return='int'><parameter name='source' type='java.nio.ByteBuffer'/><parameter name='address' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='socket' abstract='true' return='java.net.DatagramSocket'/><method name='validOps' final='true' return='int'/><method name='write' abstract='true' return='int'><parameter name='source' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='long'><parameter name='sources' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' final='true' synchronized='true' return='long'><parameter name='sources' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FileChannel' extends='java.nio.channels.spi.AbstractInterruptibleChannel' abstract='true'><implements name='java.nio.channels.ByteChannel'/><implements name='java.nio.channels.GatheringByteChannel'/><implements name='java.nio.channels.ScatteringByteChannel'/><constructor name='FileChannel' type='java.nio.channels.FileChannel' visibility='protected'/><method name='force' abstract='true'><parameter name='metadata' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='lock' final='true' return='java.nio.channels.FileLock'><exception name='IOException' type='java.io.IOException'/></method><method name='lock' abstract='true' return='java.nio.channels.FileLock'><parameter name='position' type='long'/><parameter name='size' type='long'/><parameter name='shared' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='map' abstract='true' return='java.nio.MappedByteBuffer'><parameter name='mode' type='java.nio.channels.FileChannel.MapMode'/><parameter name='position' type='long'/><parameter name='size' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='position' abstract='true' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='position' abstract='true' return='java.nio.channels.FileChannel'><parameter name='offset' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='buffer' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='buffer' type='java.nio.ByteBuffer'/><parameter name='position' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><parameter name='start' type='int'/><parameter name='number' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='size' abstract='true' return='long'><exception name='IOException' type='java.io.IOException'/></method><method name='transferFrom' abstract='true' return='long'><parameter name='src' type='java.nio.channels.ReadableByteChannel'/><parameter name='position' type='long'/><parameter name='count' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='transferTo' abstract='true' return='long'><parameter name='position' type='long'/><parameter name='count' type='long'/><parameter name='target' type='java.nio.channels.WritableByteChannel'/><exception name='IOException' type='java.io.IOException'/></method><method name='truncate' abstract='true' return='java.nio.channels.FileChannel'><parameter name='size' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='tryLock' final='true' return='java.nio.channels.FileLock'><exception name='IOException' type='java.io.IOException'/></method><method name='tryLock' abstract='true' return='java.nio.channels.FileLock'><parameter name='position' type='long'/><parameter name='size' type='long'/><parameter name='shared' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='int'><parameter name='src' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='int'><parameter name='buffer' type='java.nio.ByteBuffer'/><parameter name='position' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' final='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FileChannel.MapMode' extends='java.lang.Object' static='true'><field name='PRIVATE' final='true' static='true' type='java.nio.channels.FileChannel.MapMode'/><field name='READ_ONLY' final='true' static='true' type='java.nio.channels.FileChannel.MapMode'/><field name='READ_WRITE' final='true' static='true' type='java.nio.channels.FileChannel.MapMode'/></class><class name='FileLock' extends='java.lang.Object' abstract='true'><constructor name='FileLock' type='java.nio.channels.FileLock' visibility='protected'><parameter name='channel' type='java.nio.channels.FileChannel'/><parameter name='position' type='long'/><parameter name='size' type='long'/><parameter name='shared' type='boolean'/></constructor><method name='channel' final='true' return='java.nio.channels.FileChannel'/><method name='isShared' final='true' return='boolean'/><method name='isValid' abstract='true' return='boolean'/><method name='overlaps' final='true' return='boolean'><parameter name='start' type='long'/><parameter name='length' type='long'/></method><method name='position' final='true' return='long'/><method name='release' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='size' final='true' return='long'/><method name='toString' final='true' return='java.lang.String'/></class><class name='FileLockInterruptionException' extends='java.io.IOException'><constructor name='FileLockInterruptionException' type='java.nio.channels.FileLockInterruptionException'/></class><class name='IllegalBlockingModeException' extends='java.lang.IllegalStateException'><constructor name='IllegalBlockingModeException' type='java.nio.channels.IllegalBlockingModeException'/></class><class name='IllegalSelectorException' extends='java.lang.IllegalArgumentException'><constructor name='IllegalSelectorException' type='java.nio.channels.IllegalSelectorException'/></class><class name='NoConnectionPendingException' extends='java.lang.IllegalStateException'><constructor name='NoConnectionPendingException' type='java.nio.channels.NoConnectionPendingException'/></class><class name='NonReadableChannelException' extends='java.lang.IllegalStateException'><constructor name='NonReadableChannelException' type='java.nio.channels.NonReadableChannelException'/></class><class name='NonWritableChannelException' extends='java.lang.IllegalStateException'><constructor name='NonWritableChannelException' type='java.nio.channels.NonWritableChannelException'/></class><class name='NotYetBoundException' extends='java.lang.IllegalStateException'><constructor name='NotYetBoundException' type='java.nio.channels.NotYetBoundException'/></class><class name='NotYetConnectedException' extends='java.lang.IllegalStateException'><constructor name='NotYetConnectedException' type='java.nio.channels.NotYetConnectedException'/></class><class name='OverlappingFileLockException' extends='java.lang.IllegalStateException'><constructor name='OverlappingFileLockException' type='java.nio.channels.OverlappingFileLockException'/></class><class name='Pipe' extends='java.lang.Object' abstract='true'><constructor name='Pipe' type='java.nio.channels.Pipe' visibility='protected'/><method name='open' static='true' return='java.nio.channels.Pipe'><exception name='IOException' type='java.io.IOException'/></method><method name='sink' abstract='true' return='java.nio.channels.Pipe.SinkChannel'/><method name='source' abstract='true' return='java.nio.channels.Pipe.SourceChannel'/></class><class name='Pipe.SinkChannel' extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' static='true'><implements name='java.nio.channels.GatheringByteChannel'/><implements name='java.nio.channels.WritableByteChannel'/><constructor name='Pipe.SinkChannel' type='java.nio.channels.Pipe.SinkChannel' visibility='protected'><parameter name='provider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='validOps' final='true' return='int'/></class><class name='Pipe.SourceChannel' extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true' static='true'><implements name='java.nio.channels.ReadableByteChannel'/><implements name='java.nio.channels.ScatteringByteChannel'/><constructor name='Pipe.SourceChannel' type='java.nio.channels.Pipe.SourceChannel' visibility='protected'><parameter name='provider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='validOps' final='true' return='int'/></class><class name='SelectableChannel' extends='java.nio.channels.spi.AbstractInterruptibleChannel' abstract='true'><implements name='java.nio.channels.Channel'/><constructor name='SelectableChannel' type='java.nio.channels.SelectableChannel' visibility='protected'/><method name='blockingLock' abstract='true' return='java.lang.Object'/><method name='configureBlocking' abstract='true' return='java.nio.channels.SelectableChannel'><parameter name='block' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='isBlocking' abstract='true' return='boolean'/><method name='isRegistered' abstract='true' return='boolean'/><method name='keyFor' abstract='true' return='java.nio.channels.SelectionKey'><parameter name='sel' type='java.nio.channels.Selector'/></method><method name='provider' abstract='true' return='java.nio.channels.spi.SelectorProvider'/><method name='register' final='true' return='java.nio.channels.SelectionKey'><parameter name='selector' type='java.nio.channels.Selector'/><parameter name='operations' type='int'/><exception name='ClosedChannelException' type='java.nio.channels.ClosedChannelException'/></method><method name='register' abstract='true' return='java.nio.channels.SelectionKey'><parameter name='sel' type='java.nio.channels.Selector'/><parameter name='ops' type='int'/><parameter name='att' type='java.lang.Object'/><exception name='ClosedChannelException' type='java.nio.channels.ClosedChannelException'/></method><method name='validOps' abstract='true' return='int'/></class><class name='SelectionKey' extends='java.lang.Object' abstract='true'><constructor name='SelectionKey' type='java.nio.channels.SelectionKey' visibility='protected'/><field name='OP_ACCEPT' final='true' static='true' value='16' type='int'/><field name='OP_CONNECT' final='true' static='true' value='8' type='int'/><field name='OP_READ' final='true' static='true' value='1' type='int'/><field name='OP_WRITE' final='true' static='true' value='4' type='int'/><method name='attach' final='true' return='java.lang.Object'><parameter name='anObject' type='java.lang.Object'/></method><method name='attachment' final='true' return='java.lang.Object'/><method name='cancel' abstract='true'/><method name='channel' abstract='true' return='java.nio.channels.SelectableChannel'/><method name='interestOps' abstract='true' return='int'/><method name='interestOps' abstract='true' return='java.nio.channels.SelectionKey'><parameter name='operations' type='int'/></method><method name='isAcceptable' final='true' return='boolean'/><method name='isConnectable' final='true' return='boolean'/><method name='isReadable' final='true' return='boolean'/><method name='isValid' abstract='true' return='boolean'/><method name='isWritable' final='true' return='boolean'/><method name='readyOps' abstract='true' return='int'/><method name='selector' abstract='true' return='java.nio.channels.Selector'/></class><class name='Selector' extends='java.lang.Object' abstract='true'><constructor name='Selector' type='java.nio.channels.Selector' visibility='protected'/><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='isOpen' abstract='true' return='boolean'/><method name='keys' abstract='true' return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;'/><method name='open' static='true' return='java.nio.channels.Selector'><exception name='IOException' type='java.io.IOException'/></method><method name='provider' abstract='true' return='java.nio.channels.spi.SelectorProvider'/><method name='select' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='select' abstract='true' return='int'><parameter name='timeout' type='long'/><exception name='IOException' type='java.io.IOException'/></method><method name='selectNow' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='selectedKeys' abstract='true' return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;'/><method name='wakeup' abstract='true' return='java.nio.channels.Selector'/></class><class name='ServerSocketChannel' extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true'><constructor name='ServerSocketChannel' type='java.nio.channels.ServerSocketChannel' visibility='protected'><parameter name='selectorProvider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='accept' abstract='true' return='java.nio.channels.SocketChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='open' static='true' return='java.nio.channels.ServerSocketChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='socket' abstract='true' return='java.net.ServerSocket'/><method name='validOps' final='true' return='int'/></class><class name='SocketChannel' extends='java.nio.channels.spi.AbstractSelectableChannel' abstract='true'><implements name='java.nio.channels.ByteChannel'/><implements name='java.nio.channels.GatheringByteChannel'/><implements name='java.nio.channels.ScatteringByteChannel'/><constructor name='SocketChannel' type='java.nio.channels.SocketChannel' visibility='protected'><parameter name='selectorProvider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='connect' abstract='true' return='boolean'><parameter name='address' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='finishConnect' abstract='true' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='isConnected' abstract='true' return='boolean'/><method name='isConnectionPending' abstract='true' return='boolean'/><method name='open' static='true' return='java.nio.channels.SocketChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='open' static='true' return='java.nio.channels.SocketChannel'><parameter name='address' type='java.net.SocketAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='target' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='long'><parameter name='targets' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' final='true' synchronized='true' return='long'><parameter name='targets' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='socket' abstract='true' return='java.net.Socket'/><method name='validOps' final='true' return='int'/><method name='write' abstract='true' return='int'><parameter name='source' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='long'><parameter name='sources' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' final='true' synchronized='true' return='long'><parameter name='sources' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='UnresolvedAddressException' extends='java.lang.IllegalArgumentException'><constructor name='UnresolvedAddressException' type='java.nio.channels.UnresolvedAddressException'/></class><class name='UnsupportedAddressTypeException' extends='java.lang.IllegalArgumentException'><constructor name='UnsupportedAddressTypeException' type='java.nio.channels.UnsupportedAddressTypeException'/></class><interface name='ByteChannel' abstract='true'><implements name='java.nio.channels.ReadableByteChannel'/><implements name='java.nio.channels.WritableByteChannel'/></interface><interface name='Channel' abstract='true'><implements name='java.io.Closeable'/><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='isOpen' abstract='true' return='boolean'/></interface><interface name='GatheringByteChannel' abstract='true'><implements name='java.nio.channels.WritableByteChannel'/><method name='write' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='InterruptibleChannel' abstract='true'><implements name='java.nio.channels.Channel'/><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ReadableByteChannel' abstract='true'><implements name='java.nio.channels.Channel'/><method name='read' abstract='true' return='int'><parameter name='buffer' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ScatteringByteChannel' abstract='true'><implements name='java.nio.channels.ReadableByteChannel'/><method name='read' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='long'><parameter name='buffers' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='WritableByteChannel' abstract='true'><implements name='java.nio.channels.Channel'/><method name='write' abstract='true' return='int'><parameter name='buffer' type='java.nio.ByteBuffer'/><exception name='IOException' type='java.io.IOException'/></method></interface></package><package name='java.nio.channels.spi'><class name='AbstractInterruptibleChannel' extends='java.lang.Object' abstract='true'><implements name='java.nio.channels.Channel'/><implements name='java.nio.channels.InterruptibleChannel'/><constructor name='AbstractInterruptibleChannel' type='java.nio.channels.spi.AbstractInterruptibleChannel' visibility='protected'/><method name='begin' final='true' visibility='protected'/><method name='close' final='true'><exception name='IOException' type='java.io.IOException'/></method><method name='end' final='true' visibility='protected'><parameter name='success' type='boolean'/><exception name='AsynchronousCloseException' type='java.nio.channels.AsynchronousCloseException'/></method><method name='implCloseChannel' abstract='true' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='isOpen' final='true' synchronized='true' return='boolean'/></class><class name='AbstractSelectableChannel' extends='java.nio.channels.SelectableChannel' abstract='true'><constructor name='AbstractSelectableChannel' type='java.nio.channels.spi.AbstractSelectableChannel' visibility='protected'><parameter name='selectorProvider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='blockingLock' final='true' return='java.lang.Object'/><method name='configureBlocking' final='true' return='java.nio.channels.SelectableChannel'><parameter name='blockingMode' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='implCloseChannel' final='true' synchronized='true' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='implCloseSelectableChannel' abstract='true' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='implConfigureBlocking' abstract='true' visibility='protected'><parameter name='blockingMode' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='isBlocking' final='true' return='boolean'/><method name='isRegistered' final='true' synchronized='true' return='boolean'/><method name='keyFor' final='true' synchronized='true' return='java.nio.channels.SelectionKey'><parameter name='selector' type='java.nio.channels.Selector'/></method><method name='provider' final='true' return='java.nio.channels.spi.SelectorProvider'/><method name='register' final='true' return='java.nio.channels.SelectionKey'><parameter name='selector' type='java.nio.channels.Selector'/><parameter name='interestSet' type='int'/><parameter name='attachment' type='java.lang.Object'/><exception name='ClosedChannelException' type='java.nio.channels.ClosedChannelException'/></method></class><class name='AbstractSelectionKey' extends='java.nio.channels.SelectionKey' abstract='true'><constructor name='AbstractSelectionKey' type='java.nio.channels.spi.AbstractSelectionKey' visibility='protected'/><method name='cancel' final='true'/><method name='isValid' final='true' return='boolean'/></class><class name='AbstractSelector' extends='java.nio.channels.Selector' abstract='true'><constructor name='AbstractSelector' type='java.nio.channels.spi.AbstractSelector' visibility='protected'><parameter name='selectorProvider' type='java.nio.channels.spi.SelectorProvider'/></constructor><method name='begin' final='true' visibility='protected'/><method name='cancelledKeys' final='true' visibility='protected' return='java.util.Set&lt;java.nio.channels.SelectionKey&gt;'/><method name='close' final='true' synchronized='true'><exception name='IOException' type='java.io.IOException'/></method><method name='deregister' final='true' visibility='protected'><parameter name='key' type='java.nio.channels.spi.AbstractSelectionKey'/></method><method name='end' final='true' visibility='protected'/><method name='implCloseSelector' abstract='true' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='isOpen' final='true' return='boolean'/><method name='provider' final='true' return='java.nio.channels.spi.SelectorProvider'/><method name='register' abstract='true' visibility='protected' return='java.nio.channels.SelectionKey'><parameter name='channel' type='java.nio.channels.spi.AbstractSelectableChannel'/><parameter name='operations' type='int'/><parameter name='attachment' type='java.lang.Object'/></method></class><class name='SelectorProvider' extends='java.lang.Object' abstract='true'><constructor name='SelectorProvider' type='java.nio.channels.spi.SelectorProvider' visibility='protected'/><method name='inheritedChannel' return='java.nio.channels.Channel'><exception name='IOException' type='java.io.IOException'/></method><method name='openDatagramChannel' abstract='true' return='java.nio.channels.DatagramChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='openPipe' abstract='true' return='java.nio.channels.Pipe'><exception name='IOException' type='java.io.IOException'/></method><method name='openSelector' abstract='true' return='java.nio.channels.spi.AbstractSelector'><exception name='IOException' type='java.io.IOException'/></method><method name='openServerSocketChannel' abstract='true' return='java.nio.channels.ServerSocketChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='openSocketChannel' abstract='true' return='java.nio.channels.SocketChannel'><exception name='IOException' type='java.io.IOException'/></method><method name='provider' synchronized='true' static='true' return='java.nio.channels.spi.SelectorProvider'/></class></package><package name='java.nio.charset'><class name='CharacterCodingException' extends='java.io.IOException'><constructor name='CharacterCodingException' type='java.nio.charset.CharacterCodingException'/></class><class name='Charset' extends='java.lang.Object' abstract='true'><implements name='java.lang.Comparable'/><constructor name='Charset' type='java.nio.charset.Charset' visibility='protected'><parameter name='canonicalName' type='java.lang.String'/><parameter name='aliases' type='java.lang.String[]'/><exception name='IllegalCharsetNameException' type='java.nio.charset.IllegalCharsetNameException'/></constructor><method name='aliases' final='true' return='java.util.Set&lt;java.lang.String&gt;'/><method name='availableCharsets' static='true' return='java.util.SortedMap&lt;java.lang.String, java.nio.charset.Charset&gt;'/><method name='canEncode' return='boolean'/><method name='compareTo' final='true' return='int'><parameter name='charset' type='java.nio.charset.Charset'/></method><method name='contains' abstract='true' return='boolean'><parameter name='charset' type='java.nio.charset.Charset'/></method><method name='decode' final='true' return='java.nio.CharBuffer'><parameter name='buffer' type='java.nio.ByteBuffer'/></method><method name='defaultCharset' static='true' return='java.nio.charset.Charset'/><method name='displayName' return='java.lang.String'/><method name='displayName' return='java.lang.String'><parameter name='l' type='java.util.Locale'/></method><method name='encode' final='true' synchronized='true' return='java.nio.ByteBuffer'><parameter name='buffer' type='java.nio.CharBuffer'/></method><method name='encode' final='true' return='java.nio.ByteBuffer'><parameter name='s' type='java.lang.String'/></method><method name='equals' final='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='forName' static='true' return='java.nio.charset.Charset'><parameter name='charsetName' type='java.lang.String'/><exception name='IllegalCharsetNameException' type='java.nio.charset.IllegalCharsetNameException'/><exception name='UnsupportedCharsetException' type='java.nio.charset.UnsupportedCharsetException'/></method><method name='hashCode' final='true' return='int'/><method name='isRegistered' final='true' return='boolean'/><method name='isSupported' static='true' return='boolean'><parameter name='charsetName' type='java.lang.String'/><exception name='IllegalCharsetNameException' type='java.nio.charset.IllegalCharsetNameException'/></method><method name='name' final='true' return='java.lang.String'/><method name='newDecoder' abstract='true' return='java.nio.charset.CharsetDecoder'/><method name='newEncoder' abstract='true' return='java.nio.charset.CharsetEncoder'/><method name='toString' final='true' return='java.lang.String'/></class><class name='CharsetDecoder' extends='java.lang.Object' abstract='true'><constructor name='CharsetDecoder' type='java.nio.charset.CharsetDecoder' visibility='protected'><parameter name='charset' type='java.nio.charset.Charset'/><parameter name='averageCharsPerByte' type='float'/><parameter name='maxCharsPerByte' type='float'/></constructor><method name='averageCharsPerByte' final='true' return='float'/><method name='charset' final='true' return='java.nio.charset.Charset'/><method name='decode' final='true' return='java.nio.CharBuffer'><parameter name='in' type='java.nio.ByteBuffer'/><exception name='CharacterCodingException' type='java.nio.charset.CharacterCodingException'/></method><method name='decode' final='true' return='java.nio.charset.CoderResult'><parameter name='in' type='java.nio.ByteBuffer'/><parameter name='out' type='java.nio.CharBuffer'/><parameter name='endOfInput' type='boolean'/></method><method name='decodeLoop' abstract='true' visibility='protected' return='java.nio.charset.CoderResult'><parameter name='in' type='java.nio.ByteBuffer'/><parameter name='out' type='java.nio.CharBuffer'/></method><method name='detectedCharset' return='java.nio.charset.Charset'/><method name='flush' final='true' return='java.nio.charset.CoderResult'><parameter name='out' type='java.nio.CharBuffer'/></method><method name='implFlush' visibility='protected' return='java.nio.charset.CoderResult'><parameter name='out' type='java.nio.CharBuffer'/></method><method name='implOnMalformedInput' visibility='protected'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='implOnUnmappableCharacter' visibility='protected'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='implReplaceWith' visibility='protected'><parameter name='newReplacement' type='java.lang.String'/></method><method name='implReset' visibility='protected'/><method name='isAutoDetecting' return='boolean'/><method name='isCharsetDetected' return='boolean'/><method name='malformedInputAction' return='java.nio.charset.CodingErrorAction'/><method name='maxCharsPerByte' final='true' return='float'/><method name='onMalformedInput' final='true' return='java.nio.charset.CharsetDecoder'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='onUnmappableCharacter' final='true' return='java.nio.charset.CharsetDecoder'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='replaceWith' final='true' return='java.nio.charset.CharsetDecoder'><parameter name='newReplacement' type='java.lang.String'/></method><method name='replacement' final='true' return='java.lang.String'/><method name='reset' final='true' return='java.nio.charset.CharsetDecoder'/><method name='unmappableCharacterAction' return='java.nio.charset.CodingErrorAction'/></class><class name='CharsetEncoder' extends='java.lang.Object' abstract='true'><constructor name='CharsetEncoder' type='java.nio.charset.CharsetEncoder' visibility='protected'><parameter name='cs' type='java.nio.charset.Charset'/><parameter name='averageBytesPerChar' type='float'/><parameter name='maxBytesPerChar' type='float'/></constructor><constructor name='CharsetEncoder' type='java.nio.charset.CharsetEncoder' visibility='protected'><parameter name='cs' type='java.nio.charset.Charset'/><parameter name='averageBytesPerChar' type='float'/><parameter name='maxBytesPerChar' type='float'/><parameter name='replacement' type='byte[]'/></constructor><method name='averageBytesPerChar' final='true' return='float'/><method name='canEncode' return='boolean'><parameter name='c' type='char'/></method><method name='canEncode' return='boolean'><parameter name='sequence' type='java.lang.CharSequence'/></method><method name='charset' final='true' return='java.nio.charset.Charset'/><method name='encode' final='true' return='java.nio.ByteBuffer'><parameter name='in' type='java.nio.CharBuffer'/><exception name='CharacterCodingException' type='java.nio.charset.CharacterCodingException'/></method><method name='encode' final='true' return='java.nio.charset.CoderResult'><parameter name='in' type='java.nio.CharBuffer'/><parameter name='out' type='java.nio.ByteBuffer'/><parameter name='endOfInput' type='boolean'/></method><method name='encodeLoop' abstract='true' visibility='protected' return='java.nio.charset.CoderResult'><parameter name='in' type='java.nio.CharBuffer'/><parameter name='out' type='java.nio.ByteBuffer'/></method><method name='flush' final='true' return='java.nio.charset.CoderResult'><parameter name='out' type='java.nio.ByteBuffer'/></method><method name='implFlush' visibility='protected' return='java.nio.charset.CoderResult'><parameter name='out' type='java.nio.ByteBuffer'/></method><method name='implOnMalformedInput' visibility='protected'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='implOnUnmappableCharacter' visibility='protected'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='implReplaceWith' visibility='protected'><parameter name='newReplacement' type='byte[]'/></method><method name='implReset' visibility='protected'/><method name='isLegalReplacement' return='boolean'><parameter name='repl' type='byte[]'/></method><method name='malformedInputAction' return='java.nio.charset.CodingErrorAction'/><method name='maxBytesPerChar' final='true' return='float'/><method name='onMalformedInput' final='true' return='java.nio.charset.CharsetEncoder'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='onUnmappableCharacter' final='true' return='java.nio.charset.CharsetEncoder'><parameter name='newAction' type='java.nio.charset.CodingErrorAction'/></method><method name='replaceWith' final='true' return='java.nio.charset.CharsetEncoder'><parameter name='replacement' type='byte[]'/></method><method name='replacement' final='true' return='byte[]'/><method name='reset' final='true' return='java.nio.charset.CharsetEncoder'/><method name='unmappableCharacterAction' return='java.nio.charset.CodingErrorAction'/></class><class name='CoderMalfunctionError' extends='java.lang.Error'><constructor name='CoderMalfunctionError' type='java.nio.charset.CoderMalfunctionError'><parameter name='ex' type='java.lang.Exception'/></constructor></class><class name='CoderResult' extends='java.lang.Object'><field name='OVERFLOW' final='true' static='true' type='java.nio.charset.CoderResult'/><field name='UNDERFLOW' final='true' static='true' type='java.nio.charset.CoderResult'/><method name='isError' return='boolean'/><method name='isMalformed' return='boolean'/><method name='isOverflow' return='boolean'/><method name='isUnderflow' return='boolean'/><method name='isUnmappable' return='boolean'/><method name='length' return='int'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='malformedForLength' synchronized='true' static='true' return='java.nio.charset.CoderResult'><parameter name='length' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='throwException'><exception name='BufferOverflowException' type='java.nio.BufferOverflowException'/><exception name='BufferUnderflowException' type='java.nio.BufferUnderflowException'/><exception name='CharacterCodingException' type='java.nio.charset.CharacterCodingException'/><exception name='MalformedInputException' type='java.nio.charset.MalformedInputException'/><exception name='UnmappableCharacterException' type='java.nio.charset.UnmappableCharacterException'/></method><method name='unmappableForLength' synchronized='true' static='true' return='java.nio.charset.CoderResult'><parameter name='length' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><class name='CodingErrorAction' extends='java.lang.Object'><field name='IGNORE' final='true' static='true' type='java.nio.charset.CodingErrorAction'/><field name='REPLACE' final='true' static='true' type='java.nio.charset.CodingErrorAction'/><field name='REPORT' final='true' static='true' type='java.nio.charset.CodingErrorAction'/></class><class name='IllegalCharsetNameException' extends='java.lang.IllegalArgumentException'><constructor name='IllegalCharsetNameException' type='java.nio.charset.IllegalCharsetNameException'><parameter name='charset' type='java.lang.String'/></constructor><method name='getCharsetName' return='java.lang.String'/></class><class name='MalformedInputException' extends='java.nio.charset.CharacterCodingException'><constructor name='MalformedInputException' type='java.nio.charset.MalformedInputException'><parameter name='length' type='int'/></constructor><method name='getInputLength' return='int'/></class><class name='UnmappableCharacterException' extends='java.nio.charset.CharacterCodingException'><constructor name='UnmappableCharacterException' type='java.nio.charset.UnmappableCharacterException'><parameter name='length' type='int'/></constructor><method name='getInputLength' return='int'/></class><class name='UnsupportedCharsetException' extends='java.lang.IllegalArgumentException'><constructor name='UnsupportedCharsetException' type='java.nio.charset.UnsupportedCharsetException'><parameter name='charset' type='java.lang.String'/></constructor><method name='getCharsetName' return='java.lang.String'/></class></package><package name='java.nio.charset.spi'><class name='CharsetProvider' extends='java.lang.Object' abstract='true'><constructor name='CharsetProvider' type='java.nio.charset.spi.CharsetProvider' visibility='protected'/><method name='charsetForName' abstract='true' return='java.nio.charset.Charset'><parameter name='charsetName' type='java.lang.String'/></method><method name='charsets' abstract='true' return='java.util.Iterator&lt;java.nio.charset.Charset&gt;'/></class></package><package name='java.security'><class name='AccessControlContext' final='true' extends='java.lang.Object'><constructor name='AccessControlContext' type='java.security.AccessControlContext'><parameter name='acc' type='java.security.AccessControlContext'/><parameter name='combiner' type='java.security.DomainCombiner'/></constructor><constructor name='AccessControlContext' type='java.security.AccessControlContext'><parameter name='context' type='java.security.ProtectionDomain[]'/></constructor><method name='checkPermission'><parameter name='perm' type='java.security.Permission'/><exception name='AccessControlException' type='java.security.AccessControlException'/></method><method name='getDomainCombiner' return='java.security.DomainCombiner'/></class><class name='AccessControlException' extends='java.lang.SecurityException'><constructor name='AccessControlException' type='java.security.AccessControlException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='AccessControlException' type='java.security.AccessControlException'><parameter name='message' type='java.lang.String'/><parameter name='perm' type='java.security.Permission'/></constructor><method name='getPermission' return='java.security.Permission'/></class><class name='AccessController' final='true' extends='java.lang.Object'><method name='checkPermission' static='true'><parameter name='perm' type='java.security.Permission'/><exception name='AccessControlException' type='java.security.AccessControlException'/></method><method name='doPrivileged' static='true' return='T'><parameter name='action' type='java.security.PrivilegedAction&lt;T&gt;'/></method><method name='doPrivileged' static='true' return='T'><parameter name='action' type='java.security.PrivilegedAction&lt;T&gt;'/><parameter name='context' type='java.security.AccessControlContext'/></method><method name='doPrivileged' static='true' return='T'><parameter name='action' type='java.security.PrivilegedExceptionAction&lt;T&gt;'/><exception name='PrivilegedActionException' type='java.security.PrivilegedActionException'/></method><method name='doPrivileged' static='true' return='T'><parameter name='action' type='java.security.PrivilegedExceptionAction&lt;T&gt;'/><parameter name='context' type='java.security.AccessControlContext'/><exception name='PrivilegedActionException' type='java.security.PrivilegedActionException'/></method><method name='getContext' static='true' return='java.security.AccessControlContext'/></class><class name='AlgorithmParameterGenerator' extends='java.lang.Object'><constructor name='AlgorithmParameterGenerator' type='java.security.AlgorithmParameterGenerator' visibility='protected'><parameter name='paramGenSpi' type='java.security.AlgorithmParameterGeneratorSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='generateParameters' final='true' return='java.security.AlgorithmParameters'/><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.AlgorithmParameterGenerator'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.AlgorithmParameterGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.AlgorithmParameterGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='size' type='int'/></method><method name='init' final='true'><parameter name='size' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method><method name='init' final='true'><parameter name='genParamSpec' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter name='genParamSpec' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='AlgorithmParameterGeneratorSpi' extends='java.lang.Object' abstract='true'><constructor name='AlgorithmParameterGeneratorSpi' type='java.security.AlgorithmParameterGeneratorSpi'/><method name='engineGenerateParameters' abstract='true' visibility='protected' return='java.security.AlgorithmParameters'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='size' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='genParamSpec' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='AlgorithmParameters' extends='java.lang.Object'><constructor name='AlgorithmParameters' type='java.security.AlgorithmParameters' visibility='protected'><parameter name='keyFacSpi' type='java.security.AlgorithmParametersSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/><parameter name='algPramSpi' type='java.security.AlgorithmParametersSpi'/></constructor><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getEncoded' final='true' return='byte[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getEncoded' final='true' return='byte[]'><parameter name='format' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='getInstance' static='true' return='java.security.AlgorithmParameters'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.AlgorithmParameters'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.AlgorithmParameters'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getParameterSpec' final='true' return='T'><parameter name='paramSpec' type='java.lang.Class&lt;T&gt;'/><exception name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='paramSpec' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'/></method><method name='init' final='true'><parameter name='params' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='init' final='true'><parameter name='params' type='byte[]'/><parameter name='format' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='toString' final='true' return='java.lang.String'/></class><class name='AlgorithmParametersSpi' extends='java.lang.Object' abstract='true'><constructor name='AlgorithmParametersSpi' type='java.security.AlgorithmParametersSpi'/><method name='engineGetEncoded' abstract='true' visibility='protected' return='byte[]'><exception name='IOException' type='java.io.IOException'/></method><method name='engineGetEncoded' abstract='true' visibility='protected' return='byte[]'><parameter name='format' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='engineGetParameterSpec' abstract='true' visibility='protected' return='T'><parameter name='paramSpec' type='java.lang.Class&lt;T&gt;'/><exception name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='paramSpec' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='params' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='params' type='byte[]'/><parameter name='format' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='engineToString' abstract='true' visibility='protected' return='java.lang.String'/></class><class name='AllPermission' final='true' extends='java.security.Permission'><constructor name='AllPermission' type='java.security.AllPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor><constructor name='AllPermission' type='java.security.AllPermission'/><method name='equals' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><class name='AuthProvider' extends='java.security.Provider' abstract='true'><constructor name='AuthProvider' type='java.security.AuthProvider' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='version' type='double'/><parameter name='info' type='java.lang.String'/></constructor><method name='login' abstract='true'><parameter name='subject' type='javax.security.auth.Subject'/><parameter name='handler' type='javax.security.auth.callback.CallbackHandler'/><exception name='LoginException' type='javax.security.auth.login.LoginException'/></method><method name='logout' abstract='true'><exception name='LoginException' type='javax.security.auth.login.LoginException'/></method><method name='setCallbackHandler' abstract='true'><parameter name='handler' type='javax.security.auth.callback.CallbackHandler'/></method></class><class name='BasicPermission' extends='java.security.Permission' abstract='true'><implements name='java.io.Serializable'/><constructor name='BasicPermission' type='java.security.BasicPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='BasicPermission' type='java.security.BasicPermission'><parameter name='name' type='java.lang.String'/><parameter name='action' type='java.lang.String'/></constructor><method name='equals' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><class name='CodeSigner' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='CodeSigner' type='java.security.CodeSigner'><parameter name='signerCertPath' type='java.security.cert.CertPath'/><parameter name='timestamp' type='java.security.Timestamp'/></constructor><method name='getSignerCertPath' return='java.security.cert.CertPath'/><method name='getTimestamp' return='java.security.Timestamp'/></class><class name='CodeSource' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='CodeSource' type='java.security.CodeSource'><parameter name='location' type='java.net.URL'/><parameter name='certs' type='java.security.cert.Certificate[]'/></constructor><constructor name='CodeSource' type='java.security.CodeSource'><parameter name='location' type='java.net.URL'/><parameter name='signers' type='java.security.CodeSigner[]'/></constructor><method name='getCertificates' final='true' return='java.security.cert.Certificate[]'/><method name='getCodeSigners' final='true' return='java.security.CodeSigner[]'/><method name='getLocation' final='true' return='java.net.URL'/><method name='implies' return='boolean'><parameter name='cs' type='java.security.CodeSource'/></method></class><class name='DigestException' extends='java.security.GeneralSecurityException'><constructor name='DigestException' type='java.security.DigestException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='DigestException' type='java.security.DigestException'/><constructor name='DigestException' type='java.security.DigestException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='DigestException' type='java.security.DigestException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='DigestInputStream' extends='java.io.FilterInputStream'><constructor name='DigestInputStream' type='java.security.DigestInputStream'><parameter name='stream' type='java.io.InputStream'/><parameter name='digest' type='java.security.MessageDigest'/></constructor><field name='digest' type='java.security.MessageDigest' visibility='protected'/><method name='getMessageDigest' return='java.security.MessageDigest'/><method name='on'><parameter name='on' type='boolean'/></method><method name='setMessageDigest'><parameter name='digest' type='java.security.MessageDigest'/></method></class><class name='DigestOutputStream' extends='java.io.FilterOutputStream'><constructor name='DigestOutputStream' type='java.security.DigestOutputStream'><parameter name='stream' type='java.io.OutputStream'/><parameter name='digest' type='java.security.MessageDigest'/></constructor><field name='digest' type='java.security.MessageDigest' visibility='protected'/><method name='getMessageDigest' return='java.security.MessageDigest'/><method name='on'><parameter name='on' type='boolean'/></method><method name='setMessageDigest'><parameter name='digest' type='java.security.MessageDigest'/></method></class><class name='GeneralSecurityException' extends='java.lang.Exception'><constructor name='GeneralSecurityException' type='java.security.GeneralSecurityException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='GeneralSecurityException' type='java.security.GeneralSecurityException'/><constructor name='GeneralSecurityException' type='java.security.GeneralSecurityException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='GeneralSecurityException' type='java.security.GeneralSecurityException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='GuardedObject' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='GuardedObject' type='java.security.GuardedObject'><parameter name='object' type='java.lang.Object'/><parameter name='guard' type='java.security.Guard'/></constructor><method name='getObject' return='java.lang.Object'><exception name='SecurityException' type='java.lang.SecurityException'/></method></class><class name='Identity' extends='java.lang.Object' abstract='true' deprecated='1'><implements name='java.security.Principal'/><implements name='java.io.Serializable'/><constructor name='Identity' type='java.security.Identity' visibility='protected'/><constructor name='Identity' type='java.security.Identity'><parameter name='name' type='java.lang.String'/></constructor><constructor name='Identity' type='java.security.Identity'><parameter name='name' type='java.lang.String'/><parameter name='scope' type='java.security.IdentityScope'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></constructor><method name='addCertificate'><parameter name='certificate' type='java.security.Certificate'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method><method name='certificates' return='java.security.Certificate[]'/><method name='equals' final='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getInfo' return='java.lang.String'/><method name='getName' final='true' return='java.lang.String'/><method name='getPublicKey' return='java.security.PublicKey'/><method name='getScope' final='true' return='java.security.IdentityScope'/><method name='identityEquals' visibility='protected' return='boolean'><parameter name='identity' type='java.security.Identity'/></method><method name='removeCertificate'><parameter name='certificate' type='java.security.Certificate'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method><method name='setInfo'><parameter name='info' type='java.lang.String'/></method><method name='setPublicKey'><parameter name='key' type='java.security.PublicKey'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method><method name='toString' return='java.lang.String'><parameter name='detailed' type='boolean'/></method></class><class name='IdentityScope' extends='java.security.Identity' abstract='true' deprecated='1'><constructor name='IdentityScope' type='java.security.IdentityScope' visibility='protected'/><constructor name='IdentityScope' type='java.security.IdentityScope'><parameter name='name' type='java.lang.String'/></constructor><constructor name='IdentityScope' type='java.security.IdentityScope'><parameter name='name' type='java.lang.String'/><parameter name='scope' type='java.security.IdentityScope'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></constructor><method name='addIdentity' abstract='true'><parameter name='identity' type='java.security.Identity'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method><method name='getIdentity' abstract='true' return='java.security.Identity'><parameter name='name' type='java.lang.String'/></method><method name='getIdentity' return='java.security.Identity'><parameter name='principal' type='java.security.Principal'/></method><method name='getIdentity' abstract='true' return='java.security.Identity'><parameter name='key' type='java.security.PublicKey'/></method><method name='getSystemScope' static='true' return='java.security.IdentityScope'/><method name='identities' abstract='true' return='java.util.Enumeration&lt;java.security.Identity&gt;'/><method name='removeIdentity' abstract='true'><parameter name='identity' type='java.security.Identity'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method><method name='setSystemScope' static='true' visibility='protected'><parameter name='scope' type='java.security.IdentityScope'/></method><method name='size' abstract='true' return='int'/></class><class name='InvalidAlgorithmParameterException' extends='java.security.GeneralSecurityException'><constructor name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><constructor name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='InvalidKeyException' extends='java.security.KeyException'><constructor name='InvalidKeyException' type='java.security.InvalidKeyException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='InvalidKeyException' type='java.security.InvalidKeyException'/><constructor name='InvalidKeyException' type='java.security.InvalidKeyException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='InvalidKeyException' type='java.security.InvalidKeyException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='InvalidParameterException' extends='java.lang.IllegalArgumentException'><constructor name='InvalidParameterException' type='java.security.InvalidParameterException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='InvalidParameterException' type='java.security.InvalidParameterException'/></class><class name='KeyException' extends='java.security.GeneralSecurityException'><constructor name='KeyException' type='java.security.KeyException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='KeyException' type='java.security.KeyException'/><constructor name='KeyException' type='java.security.KeyException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='KeyException' type='java.security.KeyException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='KeyFactory' extends='java.lang.Object'><constructor name='KeyFactory' type='java.security.KeyFactory' visibility='protected'><parameter name='keyFacSpi' type='java.security.KeyFactorySpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='generatePrivate' final='true' return='java.security.PrivateKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='generatePublic' final='true' return='java.security.PublicKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.KeyFactory'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.KeyFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.KeyFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getKeySpec' final='true' return='T'><parameter name='key' type='java.security.Key'/><parameter name='keySpec' type='java.lang.Class&lt;T&gt;'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='translateKey' final='true' return='java.security.Key'><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='KeyFactorySpi' extends='java.lang.Object' abstract='true'><constructor name='KeyFactorySpi' type='java.security.KeyFactorySpi'/><method name='engineGeneratePrivate' abstract='true' visibility='protected' return='java.security.PrivateKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='engineGeneratePublic' abstract='true' visibility='protected' return='java.security.PublicKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='engineGetKeySpec' abstract='true' visibility='protected' return='T'><parameter name='key' type='java.security.Key'/><parameter name='keySpec' type='java.lang.Class&lt;T&gt;'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='engineTranslateKey' abstract='true' visibility='protected' return='java.security.Key'><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='KeyManagementException' extends='java.security.KeyException'><constructor name='KeyManagementException' type='java.security.KeyManagementException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='KeyManagementException' type='java.security.KeyManagementException'/><constructor name='KeyManagementException' type='java.security.KeyManagementException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='KeyManagementException' type='java.security.KeyManagementException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='KeyPair' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='KeyPair' type='java.security.KeyPair'><parameter name='publicKey' type='java.security.PublicKey'/><parameter name='privateKey' type='java.security.PrivateKey'/></constructor><method name='getPrivate' return='java.security.PrivateKey'/><method name='getPublic' return='java.security.PublicKey'/></class><class name='KeyPairGenerator' extends='java.security.KeyPairGeneratorSpi' abstract='true'><constructor name='KeyPairGenerator' type='java.security.KeyPairGenerator' visibility='protected'><parameter name='algorithm' type='java.lang.String'/></constructor><method name='genKeyPair' final='true' return='java.security.KeyPair'/><method name='generateKeyPair' return='java.security.KeyPair'/><method name='getAlgorithm' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.KeyPairGenerator'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.KeyPairGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.KeyPairGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='initialize'><parameter name='keysize' type='int'/></method><method name='initialize'><parameter name='param' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='initialize'><parameter name='keysize' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method></class><class name='KeyPairGeneratorSpi' extends='java.lang.Object' abstract='true'><constructor name='KeyPairGeneratorSpi' type='java.security.KeyPairGeneratorSpi'/><method name='generateKeyPair' abstract='true' return='java.security.KeyPair'/><method name='initialize' abstract='true'><parameter name='keysize' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method><method name='initialize'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='KeyRep' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='KeyRep' type='java.security.KeyRep'><parameter name='type' type='java.security.KeyRep.Type'/><parameter name='algorithm' type='java.lang.String'/><parameter name='format' type='java.lang.String'/><parameter name='encoded' type='byte[]'/></constructor><method name='readResolve' visibility='protected' return='java.lang.Object'><exception name='ObjectStreamException' type='java.io.ObjectStreamException'/></method></class><class name='KeyRep.Type' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='java.security.KeyRep.Type'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.security.KeyRep.Type[]'/></class><class name='KeyStore' extends='java.lang.Object'><constructor name='KeyStore' type='java.security.KeyStore' visibility='protected'><parameter name='keyStoreSpi' type='java.security.KeyStoreSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='type' type='java.lang.String'/></constructor><method name='aliases' final='true' return='java.util.Enumeration&lt;java.lang.String&gt;'><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='containsAlias' final='true' return='boolean'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='deleteEntry' final='true'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='entryInstanceOf' final='true' return='boolean'><parameter name='alias' type='java.lang.String'/><parameter name='entryClass' type='java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getCertificate' final='true' return='java.security.cert.Certificate'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getCertificateAlias' final='true' return='java.lang.String'><parameter name='cert' type='java.security.cert.Certificate'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getCertificateChain' final='true' return='java.security.cert.Certificate[]'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getCreationDate' final='true' return='java.util.Date'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getDefaultType' final='true' static='true' return='java.lang.String'/><method name='getEntry' final='true' return='java.security.KeyStore.Entry'><parameter name='alias' type='java.lang.String'/><parameter name='param' type='java.security.KeyStore.ProtectionParameter'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableEntryException' type='java.security.UnrecoverableEntryException'/></method><method name='getInstance' static='true' return='java.security.KeyStore'><parameter name='type' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getInstance' static='true' return='java.security.KeyStore'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.KeyStore'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getKey' final='true' return='java.security.Key'><parameter name='alias' type='java.lang.String'/><parameter name='password' type='char[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='getType' final='true' return='java.lang.String'/><method name='isCertificateEntry' final='true' return='boolean'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='isKeyEntry' final='true' return='boolean'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='load' final='true'><parameter name='stream' type='java.io.InputStream'/><parameter name='password' type='char[]'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='load' final='true'><parameter name='param' type='java.security.KeyStore.LoadStoreParameter'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='setCertificateEntry' final='true'><parameter name='alias' type='java.lang.String'/><parameter name='cert' type='java.security.cert.Certificate'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='setEntry' final='true'><parameter name='alias' type='java.lang.String'/><parameter name='entry' type='java.security.KeyStore.Entry'/><parameter name='param' type='java.security.KeyStore.ProtectionParameter'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='setKeyEntry' final='true'><parameter name='alias' type='java.lang.String'/><parameter name='key' type='java.security.Key'/><parameter name='password' type='char[]'/><parameter name='chain' type='java.security.cert.Certificate[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='setKeyEntry' final='true'><parameter name='alias' type='java.lang.String'/><parameter name='key' type='byte[]'/><parameter name='chain' type='java.security.cert.Certificate[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='size' final='true' return='int'><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='store' final='true'><parameter name='stream' type='java.io.OutputStream'/><parameter name='password' type='char[]'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='store' final='true'><parameter name='param' type='java.security.KeyStore.LoadStoreParameter'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method></class><class name='KeyStore.Builder' extends='java.lang.Object' abstract='true' static='true'><constructor name='KeyStore.Builder' type='java.security.KeyStore.Builder' visibility='protected'/><method name='getKeyStore' abstract='true' return='java.security.KeyStore'><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='getProtectionParameter' abstract='true' api_removed='4' return='java.security.KeyStore.ProtectionParameter'><parameter name='alise' type='java.lang.String'/><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='newInstance' static='true' return='java.security.KeyStore.Builder'><parameter name='keyStore' type='java.security.KeyStore'/><parameter name='protectionParameter' type='java.security.KeyStore.ProtectionParameter'/></method><method name='newInstance' static='true' return='java.security.KeyStore.Builder'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><parameter name='file' type='java.io.File'/><parameter name='protectionParameter' type='java.security.KeyStore.ProtectionParameter'/></method><method name='newInstance' static='true' return='java.security.KeyStore.Builder'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><parameter name='protectionParameter' type='java.security.KeyStore.ProtectionParameter'/></method><method api_added='4' name='getProtectionParameter' abstract='true' return='java.security.KeyStore.ProtectionParameter'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method></class><class name='KeyStore.CallbackHandlerProtection' extends='java.lang.Object' static='true'><implements name='java.security.KeyStore.ProtectionParameter'/><constructor name='KeyStore.CallbackHandlerProtection' type='java.security.KeyStore.CallbackHandlerProtection'><parameter name='handler' type='javax.security.auth.callback.CallbackHandler'/></constructor><method name='getCallbackHandler' return='javax.security.auth.callback.CallbackHandler'/></class><class name='KeyStore.PasswordProtection' extends='java.lang.Object' static='true'><implements name='javax.security.auth.Destroyable'/><implements name='java.security.KeyStore.ProtectionParameter'/><constructor name='KeyStore.PasswordProtection' type='java.security.KeyStore.PasswordProtection'><parameter name='password' type='char[]'/></constructor><method name='destroy' synchronized='true'><exception name='DestroyFailedException' type='javax.security.auth.DestroyFailedException'/></method><method name='getPassword' synchronized='true' return='char[]'/><method name='isDestroyed' synchronized='true' return='boolean'/></class><class name='KeyStore.PrivateKeyEntry' final='true' extends='java.lang.Object' static='true'><implements name='java.security.KeyStore.Entry'/><constructor name='KeyStore.PrivateKeyEntry' type='java.security.KeyStore.PrivateKeyEntry'><parameter name='privateKey' type='java.security.PrivateKey'/><parameter name='chain' type='java.security.cert.Certificate[]'/></constructor><method name='getCertificate' return='java.security.cert.Certificate'/><method name='getCertificateChain' return='java.security.cert.Certificate[]'/><method name='getPrivateKey' return='java.security.PrivateKey'/></class><class name='KeyStore.SecretKeyEntry' final='true' extends='java.lang.Object' static='true'><implements name='java.security.KeyStore.Entry'/><constructor name='KeyStore.SecretKeyEntry' type='java.security.KeyStore.SecretKeyEntry'><parameter name='secretKey' type='javax.crypto.SecretKey'/></constructor><method name='getSecretKey' return='javax.crypto.SecretKey'/></class><class name='KeyStore.TrustedCertificateEntry' final='true' extends='java.lang.Object' static='true'><implements name='java.security.KeyStore.Entry'/><constructor name='KeyStore.TrustedCertificateEntry' type='java.security.KeyStore.TrustedCertificateEntry'><parameter name='trustCertificate' type='java.security.cert.Certificate'/></constructor><method name='getTrustedCertificate' return='java.security.cert.Certificate'/></class><class name='KeyStoreException' extends='java.security.GeneralSecurityException'><constructor name='KeyStoreException' type='java.security.KeyStoreException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='KeyStoreException' type='java.security.KeyStoreException'/><constructor name='KeyStoreException' type='java.security.KeyStoreException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='KeyStoreException' type='java.security.KeyStoreException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='KeyStoreSpi' extends='java.lang.Object' abstract='true'><constructor name='KeyStoreSpi' type='java.security.KeyStoreSpi'/><method name='engineAliases' abstract='true' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='engineContainsAlias' abstract='true' return='boolean'><parameter name='alias' type='java.lang.String'/></method><method name='engineDeleteEntry' abstract='true'><parameter name='alias' type='java.lang.String'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineEntryInstanceOf' return='boolean'><parameter name='alias' type='java.lang.String'/><parameter name='entryClass' type='java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;'/></method><method name='engineGetCertificate' abstract='true' return='java.security.cert.Certificate'><parameter name='alias' type='java.lang.String'/></method><method name='engineGetCertificateAlias' abstract='true' return='java.lang.String'><parameter name='cert' type='java.security.cert.Certificate'/></method><method name='engineGetCertificateChain' abstract='true' return='java.security.cert.Certificate[]'><parameter name='alias' type='java.lang.String'/></method><method name='engineGetCreationDate' abstract='true' return='java.util.Date'><parameter name='alias' type='java.lang.String'/></method><method name='engineGetEntry' return='java.security.KeyStore.Entry'><parameter name='alias' type='java.lang.String'/><parameter name='protParam' type='java.security.KeyStore.ProtectionParameter'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableEntryException' type='java.security.UnrecoverableEntryException'/></method><method name='engineGetKey' abstract='true' return='java.security.Key'><parameter name='alias' type='java.lang.String'/><parameter name='password' type='char[]'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></method><method name='engineIsCertificateEntry' abstract='true' return='boolean'><parameter name='alias' type='java.lang.String'/></method><method name='engineIsKeyEntry' abstract='true' return='boolean'><parameter name='alias' type='java.lang.String'/></method><method name='engineLoad' abstract='true'><parameter name='stream' type='java.io.InputStream'/><parameter name='password' type='char[]'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineLoad'><parameter name='param' type='java.security.KeyStore.LoadStoreParameter'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineSetCertificateEntry' abstract='true'><parameter name='alias' type='java.lang.String'/><parameter name='cert' type='java.security.cert.Certificate'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineSetEntry'><parameter name='alias' type='java.lang.String'/><parameter name='entry' type='java.security.KeyStore.Entry'/><parameter name='protParam' type='java.security.KeyStore.ProtectionParameter'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineSetKeyEntry' abstract='true'><parameter name='alias' type='java.lang.String'/><parameter name='key' type='java.security.Key'/><parameter name='password' type='char[]'/><parameter name='chain' type='java.security.cert.Certificate[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineSetKeyEntry' abstract='true'><parameter name='alias' type='java.lang.String'/><parameter name='key' type='byte[]'/><parameter name='chain' type='java.security.cert.Certificate[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineSize' abstract='true' return='int'/><method name='engineStore' abstract='true'><parameter name='stream' type='java.io.OutputStream'/><parameter name='password' type='char[]'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineStore'><parameter name='param' type='java.security.KeyStore.LoadStoreParameter'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='IOException' type='java.io.IOException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method></class><class name='MessageDigest' extends='java.security.MessageDigestSpi' abstract='true'><constructor name='MessageDigest' type='java.security.MessageDigest' visibility='protected'><parameter name='algorithm' type='java.lang.String'/></constructor><method name='digest' return='byte[]'/><method name='digest' return='int'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='DigestException' type='java.security.DigestException'/></method><method name='digest' return='byte[]'><parameter name='input' type='byte[]'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getDigestLength' final='true' return='int'/><method name='getInstance' static='true' return='java.security.MessageDigest'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.MessageDigest'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.MessageDigest'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='isEqual' static='true' return='boolean'><parameter name='digesta' type='byte[]'/><parameter name='digestb' type='byte[]'/></method><method name='reset'/><method name='update'><parameter name='arg0' type='byte'/></method><method name='update'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='update'><parameter name='input' type='byte[]'/></method><method name='update' final='true'><parameter name='input' type='java.nio.ByteBuffer'/></method></class><class name='MessageDigestSpi' extends='java.lang.Object' abstract='true'><constructor name='MessageDigestSpi' type='java.security.MessageDigestSpi'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='engineDigest' abstract='true' visibility='protected' return='byte[]'/><method name='engineDigest' visibility='protected' return='int'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='DigestException' type='java.security.DigestException'/></method><method name='engineGetDigestLength' visibility='protected' return='int'/><method name='engineReset' abstract='true' visibility='protected'/><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='input' type='byte'/></method><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='engineUpdate' visibility='protected'><parameter name='input' type='java.nio.ByteBuffer'/></method></class><class name='NoSuchAlgorithmException' extends='java.security.GeneralSecurityException'><constructor name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><constructor name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='NoSuchProviderException' extends='java.security.GeneralSecurityException'><constructor name='NoSuchProviderException' type='java.security.NoSuchProviderException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></class><class name='Permission' extends='java.lang.Object' abstract='true'><implements name='java.security.Guard'/><implements name='java.io.Serializable'/><constructor name='Permission' type='java.security.Permission'><parameter name='name' type='java.lang.String'/></constructor><method name='checkGuard'><parameter name='obj' type='java.lang.Object'/><exception name='SecurityException' type='java.lang.SecurityException'/></method><method name='equals' abstract='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' abstract='true' return='java.lang.String'/><method name='getName' final='true' return='java.lang.String'/><method name='hashCode' abstract='true' return='int'/><method name='implies' abstract='true' return='boolean'><parameter name='permission' type='java.security.Permission'/></method><method name='newPermissionCollection' return='java.security.PermissionCollection'/></class><class name='PermissionCollection' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='PermissionCollection' type='java.security.PermissionCollection'/><method name='add' abstract='true'><parameter name='permission' type='java.security.Permission'/></method><method name='elements' abstract='true' return='java.util.Enumeration&lt;java.security.Permission&gt;'/><method name='implies' abstract='true' return='boolean'><parameter name='permission' type='java.security.Permission'/></method><method name='isReadOnly' return='boolean'/><method name='setReadOnly'/></class><class name='Permissions' final='true' extends='java.security.PermissionCollection'><implements name='java.io.Serializable'/><constructor name='Permissions' type='java.security.Permissions'/><method name='add'><parameter name='permission' type='java.security.Permission'/></method><method name='elements' return='java.util.Enumeration&lt;java.security.Permission&gt;'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><class name='Policy' extends='java.lang.Object' abstract='true'><constructor name='Policy' type='java.security.Policy'/><method name='getPermissions' abstract='true' return='java.security.PermissionCollection'><parameter name='cs' type='java.security.CodeSource'/></method><method name='getPermissions' return='java.security.PermissionCollection'><parameter name='domain' type='java.security.ProtectionDomain'/></method><method name='getPolicy' static='true' return='java.security.Policy'/><method name='implies' return='boolean'><parameter name='domain' type='java.security.ProtectionDomain'/><parameter name='permission' type='java.security.Permission'/></method><method name='refresh' abstract='true'/><method name='setPolicy' static='true'><parameter name='policy' type='java.security.Policy'/></method></class><class name='PrivilegedActionException' extends='java.lang.Exception'><constructor name='PrivilegedActionException' type='java.security.PrivilegedActionException'><parameter name='ex' type='java.lang.Exception'/></constructor><method name='getException' return='java.lang.Exception'/></class><class name='ProtectionDomain' extends='java.lang.Object'><constructor name='ProtectionDomain' type='java.security.ProtectionDomain'><parameter name='cs' type='java.security.CodeSource'/><parameter name='permissions' type='java.security.PermissionCollection'/></constructor><constructor name='ProtectionDomain' type='java.security.ProtectionDomain'><parameter name='cs' type='java.security.CodeSource'/><parameter name='permissions' type='java.security.PermissionCollection'/><parameter name='cl' type='java.lang.ClassLoader'/><parameter name='principals' type='java.security.Principal[]'/></constructor><method name='getClassLoader' final='true' return='java.lang.ClassLoader'/><method name='getCodeSource' final='true' return='java.security.CodeSource'/><method name='getPermissions' final='true' return='java.security.PermissionCollection'/><method name='getPrincipals' final='true' return='java.security.Principal[]'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><class name='Provider' extends='java.util.Properties' abstract='true'><constructor name='Provider' type='java.security.Provider' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='version' type='double'/><parameter name='info' type='java.lang.String'/></constructor><method name='getInfo' return='java.lang.String'/><method name='getName' return='java.lang.String'/><method name='getService' synchronized='true' return='java.security.Provider.Service'><parameter name='type' type='java.lang.String'/><parameter name='algorithm' type='java.lang.String'/></method><method name='getServices' synchronized='true' return='java.util.Set&lt;java.security.Provider.Service&gt;'/><method name='getVersion' return='double'/><method name='put' synchronized='true' return='java.lang.Object'><parameter name='key' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/></method><method name='putAll' synchronized='true'><parameter name='t' type='java.util.Map&lt;?, ?&gt;'/></method><method name='putService' synchronized='true' visibility='protected'><parameter name='s' type='java.security.Provider.Service'/></method><method name='removeService' synchronized='true' visibility='protected'><parameter name='s' type='java.security.Provider.Service'/></method></class><class name='Provider.Service' extends='java.lang.Object' static='true'><constructor name='Provider.Service' type='java.security.Provider.Service'><parameter name='provider' type='java.security.Provider'/><parameter name='type' type='java.lang.String'/><parameter name='algorithm' type='java.lang.String'/><parameter name='className' type='java.lang.String'/><parameter name='aliases' type='java.util.List&lt;java.lang.String&gt;'/><parameter name='attributes' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></constructor><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getAttribute' final='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getClassName' final='true' return='java.lang.String'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='getType' final='true' return='java.lang.String'/><method name='newInstance' return='java.lang.Object'><parameter name='constructorParameter' type='java.lang.Object'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='supportsParameter' return='boolean'><parameter name='parameter' type='java.lang.Object'/></method></class><class name='ProviderException' extends='java.lang.RuntimeException'><constructor name='ProviderException' type='java.security.ProviderException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='ProviderException' type='java.security.ProviderException'/><constructor name='ProviderException' type='java.security.ProviderException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='ProviderException' type='java.security.ProviderException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='SecureClassLoader' extends='java.lang.ClassLoader'><constructor name='SecureClassLoader' type='java.security.SecureClassLoader' visibility='protected'/><constructor name='SecureClassLoader' type='java.security.SecureClassLoader' visibility='protected'><parameter name='parent' type='java.lang.ClassLoader'/></constructor><method name='defineClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='name' type='java.lang.String'/><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><parameter name='cs' type='java.security.CodeSource'/></method><method name='defineClass' final='true' visibility='protected' return='java.lang.Class&lt;?&gt;'><parameter name='name' type='java.lang.String'/><parameter name='b' type='java.nio.ByteBuffer'/><parameter name='cs' type='java.security.CodeSource'/></method><method name='getPermissions' visibility='protected' return='java.security.PermissionCollection'><parameter name='codesource' type='java.security.CodeSource'/></method></class><class name='SecureRandom' extends='java.util.Random'><constructor name='SecureRandom' type='java.security.SecureRandom'/><constructor name='SecureRandom' type='java.security.SecureRandom'><parameter name='seed' type='byte[]'/></constructor><constructor name='SecureRandom' type='java.security.SecureRandom' visibility='protected'><parameter name='secureRandomSpi' type='java.security.SecureRandomSpi'/><parameter name='provider' type='java.security.Provider'/></constructor><method name='generateSeed' return='byte[]'><parameter name='numBytes' type='int'/></method><method name='getAlgorithm' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.SecureRandom'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.SecureRandom'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.SecureRandom'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='getSeed' static='true' return='byte[]'><parameter name='numBytes' type='int'/></method><method name='next' final='true' visibility='protected' return='int'><parameter name='numBits' type='int'/></method><method name='setSeed' synchronized='true'><parameter name='seed' type='byte[]'/></method></class><class name='SecureRandomSpi' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='SecureRandomSpi' type='java.security.SecureRandomSpi'/><method name='engineGenerateSeed' abstract='true' visibility='protected' return='byte[]'><parameter name='numBytes' type='int'/></method><method name='engineNextBytes' abstract='true' visibility='protected'><parameter name='bytes' type='byte[]'/></method><method name='engineSetSeed' abstract='true' visibility='protected'><parameter name='seed' type='byte[]'/></method></class><class name='Security' final='true' extends='java.lang.Object'><method name='addProvider' static='true' return='int'><parameter name='provider' type='java.security.Provider'/></method><method name='getAlgorithmProperty' static='true' deprecated='1' return='java.lang.String'><parameter name='algName' type='java.lang.String'/><parameter name='propName' type='java.lang.String'/></method><method name='getAlgorithms' static='true' return='java.util.Set&lt;java.lang.String&gt;'><parameter name='serviceName' type='java.lang.String'/></method><method name='getProperty' static='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getProvider' synchronized='true' static='true' return='java.security.Provider'><parameter name='name' type='java.lang.String'/></method><method name='getProviders' synchronized='true' static='true' return='java.security.Provider[]'/><method name='getProviders' static='true' return='java.security.Provider[]'><parameter name='filter' type='java.lang.String'/></method><method name='getProviders' synchronized='true' static='true' return='java.security.Provider[]'><parameter name='filter' type='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/></method><method name='insertProviderAt' synchronized='true' static='true' return='int'><parameter name='provider' type='java.security.Provider'/><parameter name='position' type='int'/></method><method name='removeProvider' synchronized='true' static='true'><parameter name='name' type='java.lang.String'/></method><method name='setProperty' static='true'><parameter name='key' type='java.lang.String'/><parameter name='datnum' type='java.lang.String'/></method></class><class name='SecurityPermission' final='true' extends='java.security.BasicPermission'><constructor name='SecurityPermission' type='java.security.SecurityPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='SecurityPermission' type='java.security.SecurityPermission'><parameter name='name' type='java.lang.String'/><parameter name='action' type='java.lang.String'/></constructor></class><class name='Signature' extends='java.security.SignatureSpi' abstract='true'><constructor name='Signature' type='java.security.Signature' visibility='protected'><parameter name='algorithm' type='java.lang.String'/></constructor><field name='SIGN' final='true' static='true' value='2' type='int' visibility='protected'/><field name='UNINITIALIZED' final='true' static='true' value='0' type='int' visibility='protected'/><field name='VERIFY' final='true' static='true' value='3' type='int' visibility='protected'/><field name='state' type='int' visibility='protected'/><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.Signature'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.Signature'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.Signature'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getParameter' final='true' deprecated='1' return='java.lang.Object'><parameter name='param' type='java.lang.String'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method><method name='getParameters' final='true' return='java.security.AlgorithmParameters'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='initSign' final='true'><parameter name='privateKey' type='java.security.PrivateKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='initSign' final='true'><parameter name='privateKey' type='java.security.PrivateKey'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='initVerify' final='true'><parameter name='publicKey' type='java.security.PublicKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='initVerify' final='true'><parameter name='certificate' type='java.security.cert.Certificate'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='setParameter' final='true' deprecated='1'><parameter name='param' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method><method name='setParameter' final='true'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='sign' final='true' return='byte[]'><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='sign' final='true' return='int'><parameter name='outbuf' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='update' final='true'><parameter name='b' type='byte'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='update' final='true'><parameter name='data' type='byte[]'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='update' final='true'><parameter name='data' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='update' final='true'><parameter name='data' type='java.nio.ByteBuffer'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='verify' final='true' return='boolean'><parameter name='signature' type='byte[]'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='verify' final='true' return='boolean'><parameter name='signature' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method></class><class name='SignatureException' extends='java.security.GeneralSecurityException'><constructor name='SignatureException' type='java.security.SignatureException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='SignatureException' type='java.security.SignatureException'/><constructor name='SignatureException' type='java.security.SignatureException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='SignatureException' type='java.security.SignatureException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='SignatureSpi' extends='java.lang.Object' abstract='true'><constructor name='SignatureSpi' type='java.security.SignatureSpi'/><field name='appRandom' type='java.security.SecureRandom' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='engineGetParameter' abstract='true' deprecated='1' visibility='protected' return='java.lang.Object'><parameter name='param' type='java.lang.String'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method><method name='engineGetParameters' visibility='protected' return='java.security.AlgorithmParameters'/><method name='engineInitSign' abstract='true' visibility='protected'><parameter name='privateKey' type='java.security.PrivateKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInitSign' visibility='protected'><parameter name='privateKey' type='java.security.PrivateKey'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInitVerify' abstract='true' visibility='protected'><parameter name='publicKey' type='java.security.PublicKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineSetParameter' abstract='true' deprecated='1' visibility='protected'><parameter name='param' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method><method name='engineSetParameter' visibility='protected'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='engineSign' abstract='true' visibility='protected' return='byte[]'><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='engineSign' visibility='protected' return='int'><parameter name='outbuf' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='b' type='byte'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='engineUpdate' visibility='protected'><parameter name='input' type='java.nio.ByteBuffer'/></method><method name='engineVerify' abstract='true' visibility='protected' return='boolean'><parameter name='sigBytes' type='byte[]'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='engineVerify' visibility='protected' return='boolean'><parameter name='sigBytes' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='SignatureException' type='java.security.SignatureException'/></method></class><class name='SignedObject' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='SignedObject' type='java.security.SignedObject'><parameter name='object' type='java.io.Serializable'/><parameter name='signingKey' type='java.security.PrivateKey'/><parameter name='signingEngine' type='java.security.Signature'/><exception name='IOException' type='java.io.IOException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='SignatureException' type='java.security.SignatureException'/></constructor><method name='getAlgorithm' return='java.lang.String'/><method name='getObject' return='java.lang.Object'><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/></method><method name='getSignature' return='byte[]'/><method name='verify' return='boolean'><parameter name='verificationKey' type='java.security.PublicKey'/><parameter name='verificationEngine' type='java.security.Signature'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='SignatureException' type='java.security.SignatureException'/></method></class><class name='Signer' extends='java.security.Identity' abstract='true' deprecated='1'><constructor name='Signer' type='java.security.Signer' visibility='protected'/><constructor name='Signer' type='java.security.Signer'><parameter name='name' type='java.lang.String'/></constructor><constructor name='Signer' type='java.security.Signer'><parameter name='name' type='java.lang.String'/><parameter name='scope' type='java.security.IdentityScope'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></constructor><method name='getPrivateKey' return='java.security.PrivateKey'/><method name='setKeyPair' final='true'><parameter name='pair' type='java.security.KeyPair'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/><exception name='KeyException' type='java.security.KeyException'/></method></class><class name='Timestamp' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Timestamp' type='java.security.Timestamp'><parameter name='timestamp' type='java.util.Date'/><parameter name='signerCertPath' type='java.security.cert.CertPath'/></constructor><method name='getSignerCertPath' return='java.security.cert.CertPath'/><method name='getTimestamp' return='java.util.Date'/></class><class name='UnrecoverableEntryException' extends='java.security.GeneralSecurityException'><constructor name='UnrecoverableEntryException' type='java.security.UnrecoverableEntryException'/><constructor name='UnrecoverableEntryException' type='java.security.UnrecoverableEntryException'><parameter name='msg' type='java.lang.String'/></constructor></class><class name='UnrecoverableKeyException' extends='java.security.GeneralSecurityException'><constructor name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></class><class name='UnresolvedPermission' final='true' extends='java.security.Permission'><implements name='java.io.Serializable'/><constructor name='UnresolvedPermission' type='java.security.UnresolvedPermission'><parameter name='type' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/><parameter name='certs' type='java.security.cert.Certificate[]'/></constructor><method name='equals' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='getUnresolvedActions' return='java.lang.String'/><method name='getUnresolvedCerts' return='java.security.cert.Certificate[]'/><method name='getUnresolvedName' return='java.lang.String'/><method name='getUnresolvedType' return='java.lang.String'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><interface name='Certificate' abstract='true' deprecated='1'><method name='decode' abstract='true'><parameter name='stream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='KeyException' type='java.security.KeyException'/></method><method name='encode' abstract='true'><parameter name='stream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='KeyException' type='java.security.KeyException'/></method><method name='getFormat' abstract='true' return='java.lang.String'/><method name='getGuarantor' abstract='true' return='java.security.Principal'/><method name='getPrincipal' abstract='true' return='java.security.Principal'/><method name='getPublicKey' abstract='true' return='java.security.PublicKey'/><method name='toString' abstract='true' return='java.lang.String'><parameter name='detailed' type='boolean'/></method></interface><interface name='DomainCombiner' abstract='true'><method name='combine' abstract='true' return='java.security.ProtectionDomain[]'><parameter name='current' type='java.security.ProtectionDomain[]'/><parameter name='assigned' type='java.security.ProtectionDomain[]'/></method></interface><interface name='Guard' abstract='true'><method name='checkGuard' abstract='true'><parameter name='object' type='java.lang.Object'/><exception name='SecurityException' type='java.lang.SecurityException'/></method></interface><interface name='Key' abstract='true'><implements name='java.io.Serializable'/><field name='serialVersionUID' final='true' static='true' value='6603384152749567654L' type='long'/><method name='getAlgorithm' abstract='true' return='java.lang.String'/><method name='getEncoded' abstract='true' return='byte[]'/><method name='getFormat' abstract='true' return='java.lang.String'/></interface><interface name='KeyStore.Entry' abstract='true' static='true'/><interface name='KeyStore.LoadStoreParameter' abstract='true' static='true'><method name='getProtectionParameter' abstract='true' return='java.security.KeyStore.ProtectionParameter'/></interface><interface name='KeyStore.ProtectionParameter' abstract='true' static='true'/><interface name='Principal' abstract='true'><method name='equals' abstract='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getName' abstract='true' return='java.lang.String'/><method name='hashCode' abstract='true' return='int'/><method name='toString' abstract='true' return='java.lang.String'/></interface><interface name='PrivateKey' abstract='true'><implements name='java.security.Key'/><field name='serialVersionUID' final='true' static='true' value='6034044314589513430L' type='long'/></interface><interface name='PrivilegedAction' abstract='true'><method name='run' abstract='true' return='T'/></interface><interface name='PrivilegedExceptionAction' abstract='true'><method name='run' abstract='true' return='T'><exception name='Exception' type='java.lang.Exception'/></method></interface><interface name='PublicKey' abstract='true'><implements name='java.security.Key'/><field name='serialVersionUID' final='true' static='true' value='7187392471159151072L' type='long'/></interface></package><package name='java.security.acl'><class name='AclNotFoundException' extends='java.lang.Exception'><constructor name='AclNotFoundException' type='java.security.acl.AclNotFoundException'/></class><class name='LastOwnerException' extends='java.lang.Exception'><constructor name='LastOwnerException' type='java.security.acl.LastOwnerException'/></class><class name='NotOwnerException' extends='java.lang.Exception'><constructor name='NotOwnerException' type='java.security.acl.NotOwnerException'/></class><interface name='Acl' abstract='true'><implements name='java.security.acl.Owner'/><method name='addEntry' abstract='true' return='boolean'><parameter name='caller' type='java.security.Principal'/><parameter name='entry' type='java.security.acl.AclEntry'/><exception name='NotOwnerException' type='java.security.acl.NotOwnerException'/></method><method name='checkPermission' abstract='true' return='boolean'><parameter name='principal' type='java.security.Principal'/><parameter name='permission' type='java.security.acl.Permission'/></method><method name='entries' abstract='true' return='java.util.Enumeration&lt;java.security.acl.AclEntry&gt;'/><method name='getName' abstract='true' return='java.lang.String'/><method name='getPermissions' abstract='true' return='java.util.Enumeration&lt;java.security.acl.Permission&gt;'><parameter name='user' type='java.security.Principal'/></method><method name='removeEntry' abstract='true' return='boolean'><parameter name='caller' type='java.security.Principal'/><parameter name='entry' type='java.security.acl.AclEntry'/><exception name='NotOwnerException' type='java.security.acl.NotOwnerException'/></method><method name='setName' abstract='true'><parameter name='caller' type='java.security.Principal'/><parameter name='name' type='java.lang.String'/><exception name='NotOwnerException' type='java.security.acl.NotOwnerException'/></method><method name='toString' abstract='true' return='java.lang.String'/></interface><interface name='AclEntry' abstract='true'><implements name='java.lang.Cloneable'/><method name='addPermission' abstract='true' return='boolean'><parameter name='permission' type='java.security.acl.Permission'/></method><method name='checkPermission' abstract='true' return='boolean'><parameter name='permission' type='java.security.acl.Permission'/></method><method name='clone' abstract='true' return='java.lang.Object'/><method name='getPrincipal' abstract='true' return='java.security.Principal'/><method name='isNegative' abstract='true' return='boolean'/><method name='permissions' abstract='true' return='java.util.Enumeration&lt;java.security.acl.Permission&gt;'/><method name='removePermission' abstract='true' return='boolean'><parameter name='permission' type='java.security.acl.Permission'/></method><method name='setNegativePermissions' abstract='true'/><method name='setPrincipal' abstract='true' return='boolean'><parameter name='user' type='java.security.Principal'/></method><method name='toString' abstract='true' return='java.lang.String'/></interface><interface name='Group' abstract='true'><implements name='java.security.Principal'/><method name='addMember' abstract='true' return='boolean'><parameter name='user' type='java.security.Principal'/></method><method name='isMember' abstract='true' return='boolean'><parameter name='member' type='java.security.Principal'/></method><method name='members' abstract='true' return='java.util.Enumeration&lt;? extends java.security.Principal&gt;'/><method name='removeMember' abstract='true' return='boolean'><parameter name='user' type='java.security.Principal'/></method></interface><interface name='Owner' abstract='true'><method name='addOwner' abstract='true' return='boolean'><parameter name='caller' type='java.security.Principal'/><parameter name='owner' type='java.security.Principal'/><exception name='NotOwnerException' type='java.security.acl.NotOwnerException'/></method><method name='deleteOwner' abstract='true' return='boolean'><parameter name='caller' type='java.security.Principal'/><parameter name='owner' type='java.security.Principal'/><exception name='LastOwnerException' type='java.security.acl.LastOwnerException'/><exception name='NotOwnerException' type='java.security.acl.NotOwnerException'/></method><method name='isOwner' abstract='true' return='boolean'><parameter name='owner' type='java.security.Principal'/></method></interface><interface name='Permission' abstract='true'><method name='equals' abstract='true' return='boolean'><parameter name='another' type='java.lang.Object'/></method><method name='toString' abstract='true' return='java.lang.String'/></interface></package><package name='java.security.cert'><class name='CRL' extends='java.lang.Object' abstract='true'><constructor name='CRL' type='java.security.cert.CRL' visibility='protected'><parameter name='type' type='java.lang.String'/></constructor><method name='getType' final='true' return='java.lang.String'/><method name='isRevoked' abstract='true' return='boolean'><parameter name='cert' type='java.security.cert.Certificate'/></method><method name='toString' abstract='true' return='java.lang.String'/></class><class name='CRLException' extends='java.security.GeneralSecurityException'><constructor name='CRLException' type='java.security.cert.CRLException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CRLException' type='java.security.cert.CRLException'/><constructor name='CRLException' type='java.security.cert.CRLException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CRLException' type='java.security.cert.CRLException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='CertPath' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='CertPath' type='java.security.cert.CertPath' visibility='protected'><parameter name='type' type='java.lang.String'/></constructor><method name='getCertificates' abstract='true' return='java.util.List&lt;? extends java.security.cert.Certificate&gt;'/><method name='getEncoded' abstract='true' return='byte[]'><exception name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'/></method><method name='getEncoded' abstract='true' return='byte[]'><parameter name='encoding' type='java.lang.String'/><exception name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'/></method><method name='getEncodings' abstract='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='getType' return='java.lang.String'/><method name='writeReplace' visibility='protected' return='java.lang.Object'><exception name='ObjectStreamException' type='java.io.ObjectStreamException'/></method></class><class name='CertPath.CertPathRep' extends='java.lang.Object' static='true' visibility='protected'><implements name='java.io.Serializable'/><constructor name='CertPath.CertPathRep' type='java.security.cert.CertPath.CertPathRep' visibility='protected'><parameter name='type' type='java.lang.String'/><parameter name='data' type='byte[]'/></constructor><method name='readResolve' visibility='protected' return='java.lang.Object'><exception name='ObjectStreamException' type='java.io.ObjectStreamException'/></method></class><class name='CertPathBuilder' extends='java.lang.Object'><constructor name='CertPathBuilder' type='java.security.cert.CertPathBuilder' visibility='protected'><parameter name='builderSpi' type='java.security.cert.CertPathBuilderSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='build' final='true' return='java.security.cert.CertPathBuilderResult'><parameter name='params' type='java.security.cert.CertPathParameters'/><exception name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getDefaultType' final='true' static='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.cert.CertPathBuilder'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.cert.CertPathBuilder'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.cert.CertPathBuilder'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/></class><class name='CertPathBuilderException' extends='java.security.GeneralSecurityException'><constructor name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'><parameter name='msg' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'/></class><class name='CertPathBuilderSpi' extends='java.lang.Object' abstract='true'><constructor name='CertPathBuilderSpi' type='java.security.cert.CertPathBuilderSpi'/><method name='engineBuild' abstract='true' return='java.security.cert.CertPathBuilderResult'><parameter name='params' type='java.security.cert.CertPathParameters'/><exception name='CertPathBuilderException' type='java.security.cert.CertPathBuilderException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='CertPathValidator' extends='java.lang.Object'><constructor name='CertPathValidator' type='java.security.cert.CertPathValidator' visibility='protected'><parameter name='validatorSpi' type='java.security.cert.CertPathValidatorSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getDefaultType' final='true' static='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.cert.CertPathValidator'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.cert.CertPathValidator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.cert.CertPathValidator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='validate' final='true' return='java.security.cert.CertPathValidatorResult'><parameter name='certPath' type='java.security.cert.CertPath'/><parameter name='params' type='java.security.cert.CertPathParameters'/><exception name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='CertPathValidatorException' extends='java.security.GeneralSecurityException'><constructor name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'><parameter name='msg' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/><parameter name='certPath' type='java.security.cert.CertPath'/><parameter name='index' type='int'/></constructor><constructor name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'><parameter name='msg' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'/><method name='getCertPath' return='java.security.cert.CertPath'/><method name='getIndex' return='int'/></class><class name='CertPathValidatorSpi' extends='java.lang.Object' abstract='true'><constructor name='CertPathValidatorSpi' type='java.security.cert.CertPathValidatorSpi'/><method name='engineValidate' abstract='true' return='java.security.cert.CertPathValidatorResult'><parameter name='certPath' type='java.security.cert.CertPath'/><parameter name='params' type='java.security.cert.CertPathParameters'/><exception name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='CertStore' extends='java.lang.Object'><constructor name='CertStore' type='java.security.cert.CertStore' visibility='protected'><parameter name='storeSpi' type='java.security.cert.CertStoreSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='type' type='java.lang.String'/><parameter name='params' type='java.security.cert.CertStoreParameters'/></constructor><method name='getCRLs' final='true' return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;'><parameter name='selector' type='java.security.cert.CRLSelector'/><exception name='CertStoreException' type='java.security.cert.CertStoreException'/></method><method name='getCertStoreParameters' final='true' return='java.security.cert.CertStoreParameters'/><method name='getCertificates' final='true' return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;'><parameter name='selector' type='java.security.cert.CertSelector'/><exception name='CertStoreException' type='java.security.cert.CertStoreException'/></method><method name='getDefaultType' final='true' static='true' return='java.lang.String'/><method name='getInstance' static='true' return='java.security.cert.CertStore'><parameter name='type' type='java.lang.String'/><parameter name='params' type='java.security.cert.CertStoreParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='java.security.cert.CertStore'><parameter name='type' type='java.lang.String'/><parameter name='params' type='java.security.cert.CertStoreParameters'/><parameter name='provider' type='java.lang.String'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='java.security.cert.CertStore'><parameter name='type' type='java.lang.String'/><parameter name='params' type='java.security.cert.CertStoreParameters'/><parameter name='provider' type='java.security.Provider'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='getType' final='true' return='java.lang.String'/></class><class name='CertStoreException' extends='java.security.GeneralSecurityException'><constructor name='CertStoreException' type='java.security.cert.CertStoreException'><parameter name='msg' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertStoreException' type='java.security.cert.CertStoreException'><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertStoreException' type='java.security.cert.CertStoreException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertStoreException' type='java.security.cert.CertStoreException'/></class><class name='CertStoreSpi' extends='java.lang.Object' abstract='true'><constructor name='CertStoreSpi' type='java.security.cert.CertStoreSpi'><parameter name='params' type='java.security.cert.CertStoreParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></constructor><method name='engineGetCRLs' abstract='true' return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;'><parameter name='selector' type='java.security.cert.CRLSelector'/><exception name='CertStoreException' type='java.security.cert.CertStoreException'/></method><method name='engineGetCertificates' abstract='true' return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;'><parameter name='selector' type='java.security.cert.CertSelector'/><exception name='CertStoreException' type='java.security.cert.CertStoreException'/></method></class><class name='Certificate' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='Certificate' type='java.security.cert.Certificate' visibility='protected'><parameter name='type' type='java.lang.String'/></constructor><method name='getEncoded' abstract='true' return='byte[]'><exception name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'/></method><method name='getPublicKey' abstract='true' return='java.security.PublicKey'/><method name='getType' final='true' return='java.lang.String'/><method name='toString' abstract='true' return='java.lang.String'/><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><parameter name='sigProvider' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='writeReplace' visibility='protected' return='java.lang.Object'><exception name='ObjectStreamException' type='java.io.ObjectStreamException'/></method></class><class name='Certificate.CertificateRep' extends='java.lang.Object' static='true' visibility='protected'><implements name='java.io.Serializable'/><constructor name='Certificate.CertificateRep' type='java.security.cert.Certificate.CertificateRep' visibility='protected'><parameter name='type' type='java.lang.String'/><parameter name='data' type='byte[]'/></constructor><method name='readResolve' visibility='protected' return='java.lang.Object'><exception name='ObjectStreamException' type='java.io.ObjectStreamException'/></method></class><class name='CertificateEncodingException' extends='java.security.cert.CertificateException'><constructor name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'/><constructor name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='CertificateException' extends='java.security.GeneralSecurityException'><constructor name='CertificateException' type='java.security.cert.CertificateException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateException' type='java.security.cert.CertificateException'/><constructor name='CertificateException' type='java.security.cert.CertificateException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertificateException' type='java.security.cert.CertificateException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='CertificateExpiredException' extends='java.security.cert.CertificateException'><constructor name='CertificateExpiredException' type='java.security.cert.CertificateExpiredException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateExpiredException' type='java.security.cert.CertificateExpiredException'/></class><class name='CertificateFactory' extends='java.lang.Object'><constructor name='CertificateFactory' type='java.security.cert.CertificateFactory' visibility='protected'><parameter name='certFacSpi' type='java.security.cert.CertificateFactorySpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='type' type='java.lang.String'/></constructor><method name='generateCRL' final='true' return='java.security.cert.CRL'><parameter name='inStream' type='java.io.InputStream'/><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='generateCRLs' final='true' return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;'><parameter name='inStream' type='java.io.InputStream'/><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='generateCertPath' final='true' return='java.security.cert.CertPath'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='generateCertPath' final='true' return='java.security.cert.CertPath'><parameter name='inStream' type='java.io.InputStream'/><parameter name='encoding' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='generateCertPath' final='true' return='java.security.cert.CertPath'><parameter name='certificates' type='java.util.List&lt;? extends java.security.cert.Certificate&gt;'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='generateCertificate' final='true' return='java.security.cert.Certificate'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='generateCertificates' final='true' return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='getCertPathEncodings' final='true' return='java.util.Iterator&lt;java.lang.String&gt;'/><method name='getInstance' final='true' static='true' return='java.security.cert.CertificateFactory'><parameter name='type' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='getInstance' final='true' static='true' return='java.security.cert.CertificateFactory'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='java.security.cert.CertificateFactory'><parameter name='type' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='getType' final='true' return='java.lang.String'/></class><class name='CertificateFactorySpi' extends='java.lang.Object' abstract='true'><constructor name='CertificateFactorySpi' type='java.security.cert.CertificateFactorySpi'/><method name='engineGenerateCRL' abstract='true' return='java.security.cert.CRL'><parameter name='inStream' type='java.io.InputStream'/><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='engineGenerateCRLs' abstract='true' return='java.util.Collection&lt;? extends java.security.cert.CRL&gt;'><parameter name='inStream' type='java.io.InputStream'/><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='engineGenerateCertPath' return='java.security.cert.CertPath'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='engineGenerateCertPath' return='java.security.cert.CertPath'><parameter name='inStream' type='java.io.InputStream'/><parameter name='encoding' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='engineGenerateCertPath' return='java.security.cert.CertPath'><parameter name='certificates' type='java.util.List&lt;? extends java.security.cert.Certificate&gt;'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='engineGenerateCertificate' abstract='true' return='java.security.cert.Certificate'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='engineGenerateCertificates' abstract='true' return='java.util.Collection&lt;? extends java.security.cert.Certificate&gt;'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='engineGetCertPathEncodings' return='java.util.Iterator&lt;java.lang.String&gt;'/></class><class name='CertificateNotYetValidException' extends='java.security.cert.CertificateException'><constructor name='CertificateNotYetValidException' type='java.security.cert.CertificateNotYetValidException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateNotYetValidException' type='java.security.cert.CertificateNotYetValidException'/></class><class name='CertificateParsingException' extends='java.security.cert.CertificateException'><constructor name='CertificateParsingException' type='java.security.cert.CertificateParsingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateParsingException' type='java.security.cert.CertificateParsingException'/><constructor name='CertificateParsingException' type='java.security.cert.CertificateParsingException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='CertificateParsingException' type='java.security.cert.CertificateParsingException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='CollectionCertStoreParameters' extends='java.lang.Object'><implements name='java.security.cert.CertStoreParameters'/><constructor name='CollectionCertStoreParameters' type='java.security.cert.CollectionCertStoreParameters'/><constructor name='CollectionCertStoreParameters' type='java.security.cert.CollectionCertStoreParameters'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='getCollection' return='java.util.Collection&lt;?&gt;'/></class><class name='LDAPCertStoreParameters' extends='java.lang.Object'><implements name='java.security.cert.CertStoreParameters'/><constructor name='LDAPCertStoreParameters' type='java.security.cert.LDAPCertStoreParameters'><parameter name='serverName' type='java.lang.String'/><parameter name='port' type='int'/></constructor><constructor name='LDAPCertStoreParameters' type='java.security.cert.LDAPCertStoreParameters'/><constructor name='LDAPCertStoreParameters' type='java.security.cert.LDAPCertStoreParameters'><parameter name='serverName' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'/><method name='getPort' return='int'/><method name='getServerName' return='java.lang.String'/></class><class name='PKIXBuilderParameters' extends='java.security.cert.PKIXParameters'><constructor name='PKIXBuilderParameters' type='java.security.cert.PKIXBuilderParameters'><parameter name='trustAnchors' type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;'/><parameter name='targetConstraints' type='java.security.cert.CertSelector'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></constructor><constructor name='PKIXBuilderParameters' type='java.security.cert.PKIXBuilderParameters'><parameter name='keyStore' type='java.security.KeyStore'/><parameter name='targetConstraints' type='java.security.cert.CertSelector'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></constructor><method name='getMaxPathLength' return='int'/><method name='setMaxPathLength'><parameter name='maxPathLength' type='int'/></method></class><class name='PKIXCertPathBuilderResult' extends='java.security.cert.PKIXCertPathValidatorResult'><implements name='java.security.cert.CertPathBuilderResult'/><constructor name='PKIXCertPathBuilderResult' type='java.security.cert.PKIXCertPathBuilderResult'><parameter name='certPath' type='java.security.cert.CertPath'/><parameter name='trustAnchor' type='java.security.cert.TrustAnchor'/><parameter name='policyTree' type='java.security.cert.PolicyNode'/><parameter name='subjectPublicKey' type='java.security.PublicKey'/></constructor><method name='getCertPath' return='java.security.cert.CertPath'/></class><class name='PKIXCertPathChecker' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><constructor name='PKIXCertPathChecker' type='java.security.cert.PKIXCertPathChecker' visibility='protected'/><method name='check' abstract='true'><parameter name='cert' type='java.security.cert.Certificate'/><parameter name='unresolvedCritExts' type='java.util.Collection&lt;java.lang.String&gt;'/><exception name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'/></method><method name='clone' return='java.lang.Object'/><method name='getSupportedExtensions' abstract='true' return='java.util.Set&lt;java.lang.String&gt;'/><method name='init' abstract='true'><parameter name='forward' type='boolean'/><exception name='CertPathValidatorException' type='java.security.cert.CertPathValidatorException'/></method><method name='isForwardCheckingSupported' abstract='true' return='boolean'/></class><class name='PKIXCertPathValidatorResult' extends='java.lang.Object'><implements name='java.security.cert.CertPathValidatorResult'/><constructor name='PKIXCertPathValidatorResult' type='java.security.cert.PKIXCertPathValidatorResult'><parameter name='trustAnchor' type='java.security.cert.TrustAnchor'/><parameter name='policyTree' type='java.security.cert.PolicyNode'/><parameter name='subjectPublicKey' type='java.security.PublicKey'/></constructor><method name='clone' return='java.lang.Object'/><method name='getPolicyTree' return='java.security.cert.PolicyNode'/><method name='getPublicKey' return='java.security.PublicKey'/><method name='getTrustAnchor' return='java.security.cert.TrustAnchor'/></class><class name='PKIXParameters' extends='java.lang.Object'><implements name='java.security.cert.CertPathParameters'/><constructor name='PKIXParameters' type='java.security.cert.PKIXParameters'><parameter name='trustAnchors' type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></constructor><constructor name='PKIXParameters' type='java.security.cert.PKIXParameters'><parameter name='keyStore' type='java.security.KeyStore'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></constructor><method name='addCertPathChecker'><parameter name='checker' type='java.security.cert.PKIXCertPathChecker'/></method><method name='addCertStore'><parameter name='store' type='java.security.cert.CertStore'/></method><method name='clone' return='java.lang.Object'/><method name='getCertPathCheckers' return='java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;'/><method name='getCertStores' return='java.util.List&lt;java.security.cert.CertStore&gt;'/><method name='getDate' return='java.util.Date'/><method name='getInitialPolicies' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getPolicyQualifiersRejected' return='boolean'/><method name='getSigProvider' return='java.lang.String'/><method name='getTargetCertConstraints' return='java.security.cert.CertSelector'/><method name='getTrustAnchors' return='java.util.Set&lt;java.security.cert.TrustAnchor&gt;'/><method name='isAnyPolicyInhibited' return='boolean'/><method name='isExplicitPolicyRequired' return='boolean'/><method name='isPolicyMappingInhibited' return='boolean'/><method name='isRevocationEnabled' return='boolean'/><method name='setAnyPolicyInhibited'><parameter name='anyPolicyInhibited' type='boolean'/></method><method name='setCertPathCheckers'><parameter name='certPathCheckers' type='java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;'/></method><method name='setCertStores'><parameter name='certStores' type='java.util.List&lt;java.security.cert.CertStore&gt;'/></method><method name='setDate'><parameter name='date' type='java.util.Date'/></method><method name='setExplicitPolicyRequired'><parameter name='explicitPolicyRequired' type='boolean'/></method><method name='setInitialPolicies'><parameter name='initialPolicies' type='java.util.Set&lt;java.lang.String&gt;'/></method><method name='setPolicyMappingInhibited'><parameter name='policyMappingInhibited' type='boolean'/></method><method name='setPolicyQualifiersRejected'><parameter name='policyQualifiersRejected' type='boolean'/></method><method name='setRevocationEnabled'><parameter name='revocationEnabled' type='boolean'/></method><method name='setSigProvider'><parameter name='sigProvider' type='java.lang.String'/></method><method name='setTargetCertConstraints'><parameter name='targetCertConstraints' type='java.security.cert.CertSelector'/></method><method name='setTrustAnchors'><parameter name='trustAnchors' type='java.util.Set&lt;java.security.cert.TrustAnchor&gt;'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='PolicyQualifierInfo' extends='java.lang.Object'><constructor name='PolicyQualifierInfo' type='java.security.cert.PolicyQualifierInfo'><parameter name='encoded' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getEncoded' final='true' return='byte[]'/><method name='getPolicyQualifier' final='true' return='byte[]'/><method name='getPolicyQualifierId' final='true' return='java.lang.String'/></class><class name='TrustAnchor' extends='java.lang.Object'><constructor name='TrustAnchor' type='java.security.cert.TrustAnchor'><parameter name='trustedCert' type='java.security.cert.X509Certificate'/><parameter name='nameConstraints' type='byte[]'/></constructor><constructor name='TrustAnchor' type='java.security.cert.TrustAnchor'><parameter name='caName' type='java.lang.String'/><parameter name='caPublicKey' type='java.security.PublicKey'/><parameter name='nameConstraints' type='byte[]'/></constructor><constructor name='TrustAnchor' type='java.security.cert.TrustAnchor'><parameter name='caPrincipal' type='javax.security.auth.x500.X500Principal'/><parameter name='caPublicKey' type='java.security.PublicKey'/><parameter name='nameConstraints' type='byte[]'/></constructor><method name='getCA' final='true' return='javax.security.auth.x500.X500Principal'/><method name='getCAName' final='true' return='java.lang.String'/><method name='getCAPublicKey' final='true' return='java.security.PublicKey'/><method name='getNameConstraints' final='true' return='byte[]'/><method name='getTrustedCert' final='true' return='java.security.cert.X509Certificate'/></class><class name='X509CRL' extends='java.security.cert.CRL' abstract='true'><implements name='java.security.cert.X509Extension'/><constructor name='X509CRL' type='java.security.cert.X509CRL' visibility='protected'/><method name='getEncoded' abstract='true' return='byte[]'><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='getIssuerDN' abstract='true' return='java.security.Principal'/><method name='getIssuerX500Principal' return='javax.security.auth.x500.X500Principal'/><method name='getNextUpdate' abstract='true' return='java.util.Date'/><method name='getRevokedCertificate' abstract='true' return='java.security.cert.X509CRLEntry'><parameter name='serialNumber' type='java.math.BigInteger'/></method><method name='getRevokedCertificate' return='java.security.cert.X509CRLEntry'><parameter name='certificate' type='java.security.cert.X509Certificate'/></method><method name='getRevokedCertificates' abstract='true' return='java.util.Set&lt;? extends java.security.cert.X509CRLEntry&gt;'/><method name='getSigAlgName' abstract='true' return='java.lang.String'/><method name='getSigAlgOID' abstract='true' return='java.lang.String'/><method name='getSigAlgParams' abstract='true' return='byte[]'/><method name='getSignature' abstract='true' return='byte[]'/><method name='getTBSCertList' abstract='true' return='byte[]'><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='getThisUpdate' abstract='true' return='java.util.Date'/><method name='getVersion' abstract='true' return='int'/><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><exception name='CRLException' type='java.security.cert.CRLException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><parameter name='sigProvider' type='java.lang.String'/><exception name='CRLException' type='java.security.cert.CRLException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method></class><class name='X509CRLEntry' extends='java.lang.Object' abstract='true'><implements name='java.security.cert.X509Extension'/><constructor name='X509CRLEntry' type='java.security.cert.X509CRLEntry'/><method name='getCertificateIssuer' return='javax.security.auth.x500.X500Principal'/><method name='getEncoded' abstract='true' return='byte[]'><exception name='CRLException' type='java.security.cert.CRLException'/></method><method name='getRevocationDate' abstract='true' return='java.util.Date'/><method name='getSerialNumber' abstract='true' return='java.math.BigInteger'/><method name='hasExtensions' abstract='true' return='boolean'/><method name='toString' abstract='true' return='java.lang.String'/></class><class name='X509CRLSelector' extends='java.lang.Object'><implements name='java.security.cert.CRLSelector'/><constructor name='X509CRLSelector' type='java.security.cert.X509CRLSelector'/><method name='addIssuer'><parameter name='issuer' type='javax.security.auth.x500.X500Principal'/></method><method name='addIssuerName'><parameter name='iss_name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='addIssuerName'><parameter name='iss_name' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='clone' return='java.lang.Object'/><method name='getCertificateChecking' return='java.security.cert.X509Certificate'/><method name='getDateAndTime' return='java.util.Date'/><method name='getIssuerNames' return='java.util.Collection&lt;java.lang.Object&gt;'/><method name='getIssuers' return='java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt;'/><method name='getMaxCRL' return='java.math.BigInteger'/><method name='getMinCRL' return='java.math.BigInteger'/><method name='match' return='boolean'><parameter name='crl' type='java.security.cert.CRL'/></method><method name='setCertificateChecking'><parameter name='cert' type='java.security.cert.X509Certificate'/></method><method name='setDateAndTime'><parameter name='dateAndTime' type='java.util.Date'/></method><method name='setIssuerNames'><parameter name='names' type='java.util.Collection&lt;?&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setIssuers'><parameter name='issuers' type='java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt;'/></method><method name='setMaxCRLNumber'><parameter name='maxCRL' type='java.math.BigInteger'/></method><method name='setMinCRLNumber'><parameter name='minCRL' type='java.math.BigInteger'/></method></class><class name='X509CertSelector' extends='java.lang.Object'><implements name='java.security.cert.CertSelector'/><constructor name='X509CertSelector' type='java.security.cert.X509CertSelector'/><method name='addPathToName'><parameter name='type' type='int'/><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='addPathToName'><parameter name='type' type='int'/><parameter name='name' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='addSubjectAlternativeName'><parameter name='tag' type='int'/><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='addSubjectAlternativeName'><parameter name='tag' type='int'/><parameter name='name' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='clone' return='java.lang.Object'/><method name='getAuthorityKeyIdentifier' return='byte[]'/><method name='getBasicConstraints' return='int'/><method name='getCertificate' return='java.security.cert.X509Certificate'/><method name='getCertificateValid' return='java.util.Date'/><method name='getExtendedKeyUsage' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getIssuer' return='javax.security.auth.x500.X500Principal'/><method name='getIssuerAsBytes' return='byte[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getIssuerAsString' return='java.lang.String'/><method name='getKeyUsage' return='boolean[]'/><method name='getMatchAllSubjectAltNames' return='boolean'/><method name='getNameConstraints' return='byte[]'/><method name='getPathToNames' return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'/><method name='getPolicy' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getPrivateKeyValid' return='java.util.Date'/><method name='getSerialNumber' return='java.math.BigInteger'/><method name='getSubject' return='javax.security.auth.x500.X500Principal'/><method name='getSubjectAlternativeNames' return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'/><method name='getSubjectAsBytes' return='byte[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getSubjectAsString' return='java.lang.String'/><method name='getSubjectKeyIdentifier' return='byte[]'/><method name='getSubjectPublicKey' return='java.security.PublicKey'/><method name='getSubjectPublicKeyAlgID' return='java.lang.String'/><method name='match' return='boolean'><parameter name='certificate' type='java.security.cert.Certificate'/></method><method name='setAuthorityKeyIdentifier'><parameter name='authorityKeyIdentifier' type='byte[]'/></method><method name='setBasicConstraints'><parameter name='pathLen' type='int'/></method><method name='setCertificate'><parameter name='certificate' type='java.security.cert.X509Certificate'/></method><method name='setCertificateValid'><parameter name='certificateValid' type='java.util.Date'/></method><method name='setExtendedKeyUsage'><parameter name='keyUsage' type='java.util.Set&lt;java.lang.String&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setIssuer'><parameter name='issuer' type='javax.security.auth.x500.X500Principal'/></method><method name='setIssuer'><parameter name='issuerName' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='setIssuer'><parameter name='issuerDN' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='setKeyUsage'><parameter name='keyUsage' type='boolean[]'/></method><method name='setMatchAllSubjectAltNames'><parameter name='matchAllNames' type='boolean'/></method><method name='setNameConstraints'><parameter name='bytes' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='setPathToNames'><parameter name='names' type='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setPolicy'><parameter name='policies' type='java.util.Set&lt;java.lang.String&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setPrivateKeyValid'><parameter name='privateKeyValid' type='java.util.Date'/></method><method name='setSerialNumber'><parameter name='serialNumber' type='java.math.BigInteger'/></method><method name='setSubject'><parameter name='subject' type='javax.security.auth.x500.X500Principal'/></method><method name='setSubject'><parameter name='subjectDN' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSubject'><parameter name='subjectDN' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSubjectAlternativeNames'><parameter name='names' type='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSubjectKeyIdentifier'><parameter name='subjectKeyIdentifier' type='byte[]'/></method><method name='setSubjectPublicKey'><parameter name='key' type='java.security.PublicKey'/></method><method name='setSubjectPublicKey'><parameter name='key' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='setSubjectPublicKeyAlgID'><parameter name='oid' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='X509Certificate' extends='java.security.cert.Certificate' abstract='true'><implements name='java.security.cert.X509Extension'/><constructor name='X509Certificate' type='java.security.cert.X509Certificate' visibility='protected'/><method name='checkValidity' abstract='true'><exception name='CertificateExpiredException' type='java.security.cert.CertificateExpiredException'/><exception name='CertificateNotYetValidException' type='java.security.cert.CertificateNotYetValidException'/></method><method name='checkValidity' abstract='true'><parameter name='date' type='java.util.Date'/><exception name='CertificateExpiredException' type='java.security.cert.CertificateExpiredException'/><exception name='CertificateNotYetValidException' type='java.security.cert.CertificateNotYetValidException'/></method><method name='getBasicConstraints' abstract='true' return='int'/><method name='getExtendedKeyUsage' return='java.util.List&lt;java.lang.String&gt;'><exception name='CertificateParsingException' type='java.security.cert.CertificateParsingException'/></method><method name='getIssuerAlternativeNames' return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'><exception name='CertificateParsingException' type='java.security.cert.CertificateParsingException'/></method><method name='getIssuerDN' abstract='true' return='java.security.Principal'/><method name='getIssuerUniqueID' abstract='true' return='boolean[]'/><method name='getIssuerX500Principal' return='javax.security.auth.x500.X500Principal'/><method name='getKeyUsage' abstract='true' return='boolean[]'/><method name='getNotAfter' abstract='true' return='java.util.Date'/><method name='getNotBefore' abstract='true' return='java.util.Date'/><method name='getSerialNumber' abstract='true' return='java.math.BigInteger'/><method name='getSigAlgName' abstract='true' return='java.lang.String'/><method name='getSigAlgOID' abstract='true' return='java.lang.String'/><method name='getSigAlgParams' abstract='true' return='byte[]'/><method name='getSignature' abstract='true' return='byte[]'/><method name='getSubjectAlternativeNames' return='java.util.Collection&lt;java.util.List&lt;?&gt;&gt;'><exception name='CertificateParsingException' type='java.security.cert.CertificateParsingException'/></method><method name='getSubjectDN' abstract='true' return='java.security.Principal'/><method name='getSubjectUniqueID' abstract='true' return='boolean[]'/><method name='getSubjectX500Principal' return='javax.security.auth.x500.X500Principal'/><method name='getTBSCertificate' abstract='true' return='byte[]'><exception name='CertificateEncodingException' type='java.security.cert.CertificateEncodingException'/></method><method name='getVersion' abstract='true' return='int'/></class><interface name='CRLSelector' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/><method name='match' abstract='true' return='boolean'><parameter name='crl' type='java.security.cert.CRL'/></method></interface><interface name='CertPathBuilderResult' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/><method name='getCertPath' abstract='true' return='java.security.cert.CertPath'/></interface><interface name='CertPathParameters' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/></interface><interface name='CertPathValidatorResult' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/></interface><interface name='CertSelector' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/><method name='match' abstract='true' return='boolean'><parameter name='cert' type='java.security.cert.Certificate'/></method></interface><interface name='CertStoreParameters' abstract='true'><implements name='java.lang.Cloneable'/><method name='clone' abstract='true' return='java.lang.Object'/></interface><interface name='PolicyNode' abstract='true'><method name='getChildren' abstract='true' return='java.util.Iterator&lt;? extends java.security.cert.PolicyNode&gt;'/><method name='getDepth' abstract='true' return='int'/><method name='getExpectedPolicies' abstract='true' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getParent' abstract='true' return='java.security.cert.PolicyNode'/><method name='getPolicyQualifiers' abstract='true' return='java.util.Set&lt;? extends java.security.cert.PolicyQualifierInfo&gt;'/><method name='getValidPolicy' abstract='true' return='java.lang.String'/><method name='isCritical' abstract='true' return='boolean'/></interface><interface name='X509Extension' abstract='true'><method name='getCriticalExtensionOIDs' abstract='true' return='java.util.Set&lt;java.lang.String&gt;'/><method name='getExtensionValue' abstract='true' return='byte[]'><parameter name='oid' type='java.lang.String'/></method><method name='getNonCriticalExtensionOIDs' abstract='true' return='java.util.Set&lt;java.lang.String&gt;'/><method name='hasUnsupportedCriticalExtension' abstract='true' return='boolean'/></interface></package><package name='java.security.interfaces'><interface name='DSAKey' abstract='true'><method name='getParams' abstract='true' return='java.security.interfaces.DSAParams'/></interface><interface name='DSAKeyPairGenerator' abstract='true'><method name='initialize' abstract='true'><parameter name='params' type='java.security.interfaces.DSAParams'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method><method name='initialize' abstract='true'><parameter name='modlen' type='int'/><parameter name='genParams' type='boolean'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidParameterException' type='java.security.InvalidParameterException'/></method></interface><interface name='DSAParams' abstract='true'><method name='getG' abstract='true' return='java.math.BigInteger'/><method name='getP' abstract='true' return='java.math.BigInteger'/><method name='getQ' abstract='true' return='java.math.BigInteger'/></interface><interface name='DSAPrivateKey' abstract='true'><implements name='java.security.interfaces.DSAKey'/><implements name='java.security.PrivateKey'/><field name='serialVersionUID' final='true' static='true' value='7776497482533790279L' type='long'/><method name='getX' abstract='true' return='java.math.BigInteger'/></interface><interface name='DSAPublicKey' abstract='true'><implements name='java.security.interfaces.DSAKey'/><implements name='java.security.PublicKey'/><field name='serialVersionUID' final='true' static='true' value='1234526332779022332L' type='long'/><method name='getY' abstract='true' return='java.math.BigInteger'/></interface><interface name='ECKey' abstract='true'><method name='getParams' abstract='true' return='java.security.spec.ECParameterSpec'/></interface><interface name='ECPrivateKey' abstract='true'><implements name='java.security.interfaces.ECKey'/><implements name='java.security.PrivateKey'/><field name='serialVersionUID' final='true' static='true' value='-7896394956925609184L' type='long'/><method name='getS' abstract='true' return='java.math.BigInteger'/></interface><interface name='ECPublicKey' abstract='true'><implements name='java.security.interfaces.ECKey'/><implements name='java.security.PublicKey'/><field name='serialVersionUID' final='true' static='true' value='-3314988629879632826L' type='long'/><method name='getW' abstract='true' return='java.security.spec.ECPoint'/></interface><interface name='RSAKey' abstract='true'><method name='getModulus' abstract='true' return='java.math.BigInteger'/></interface><interface name='RSAMultiPrimePrivateCrtKey' abstract='true'><implements name='java.security.interfaces.RSAPrivateKey'/><field name='serialVersionUID' final='true' static='true' value='618058533534628008L' type='long'/><method name='getCrtCoefficient' abstract='true' return='java.math.BigInteger'/><method name='getOtherPrimeInfo' abstract='true' return='java.security.spec.RSAOtherPrimeInfo[]'/><method name='getPrimeExponentP' abstract='true' return='java.math.BigInteger'/><method name='getPrimeExponentQ' abstract='true' return='java.math.BigInteger'/><method name='getPrimeP' abstract='true' return='java.math.BigInteger'/><method name='getPrimeQ' abstract='true' return='java.math.BigInteger'/><method name='getPublicExponent' abstract='true' return='java.math.BigInteger'/></interface><interface name='RSAPrivateCrtKey' abstract='true'><implements name='java.security.interfaces.RSAPrivateKey'/><field name='serialVersionUID' final='true' static='true' value='-5682214253527700368L' type='long'/><method name='getCrtCoefficient' abstract='true' return='java.math.BigInteger'/><method name='getPrimeExponentP' abstract='true' return='java.math.BigInteger'/><method name='getPrimeExponentQ' abstract='true' return='java.math.BigInteger'/><method name='getPrimeP' abstract='true' return='java.math.BigInteger'/><method name='getPrimeQ' abstract='true' return='java.math.BigInteger'/><method name='getPublicExponent' abstract='true' return='java.math.BigInteger'/></interface><interface name='RSAPrivateKey' abstract='true'><implements name='java.security.PrivateKey'/><implements name='java.security.interfaces.RSAKey'/><field name='serialVersionUID' final='true' static='true' value='5187144804936595022L' type='long'/><method name='getPrivateExponent' abstract='true' return='java.math.BigInteger'/></interface><interface name='RSAPublicKey' abstract='true'><implements name='java.security.PublicKey'/><implements name='java.security.interfaces.RSAKey'/><field name='serialVersionUID' final='true' static='true' value='-8727434096241101194L' type='long'/><method name='getPublicExponent' abstract='true' return='java.math.BigInteger'/></interface></package><package name='java.security.spec'><class name='DSAParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><implements name='java.security.interfaces.DSAParams'/><constructor name='DSAParameterSpec' type='java.security.spec.DSAParameterSpec'><parameter name='p' type='java.math.BigInteger'/><parameter name='q' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getP' return='java.math.BigInteger'/><method name='getQ' return='java.math.BigInteger'/></class><class name='DSAPrivateKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DSAPrivateKeySpec' type='java.security.spec.DSAPrivateKeySpec'><parameter name='x' type='java.math.BigInteger'/><parameter name='p' type='java.math.BigInteger'/><parameter name='q' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getP' return='java.math.BigInteger'/><method name='getQ' return='java.math.BigInteger'/><method name='getX' return='java.math.BigInteger'/></class><class name='DSAPublicKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DSAPublicKeySpec' type='java.security.spec.DSAPublicKeySpec'><parameter name='y' type='java.math.BigInteger'/><parameter name='p' type='java.math.BigInteger'/><parameter name='q' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getP' return='java.math.BigInteger'/><method name='getQ' return='java.math.BigInteger'/><method name='getY' return='java.math.BigInteger'/></class><class name='ECFieldF2m' extends='java.lang.Object'><implements name='java.security.spec.ECField'/><constructor name='ECFieldF2m' type='java.security.spec.ECFieldF2m'><parameter name='m' type='int'/></constructor><constructor name='ECFieldF2m' type='java.security.spec.ECFieldF2m'><parameter name='m' type='int'/><parameter name='rp' type='java.math.BigInteger'/></constructor><constructor name='ECFieldF2m' type='java.security.spec.ECFieldF2m'><parameter name='m' type='int'/><parameter name='ks' type='int[]'/></constructor><method name='getFieldSize' return='int'/><method name='getM' return='int'/><method name='getMidTermsOfReductionPolynomial' return='int[]'/><method name='getReductionPolynomial' return='java.math.BigInteger'/></class><class name='ECFieldFp' extends='java.lang.Object'><implements name='java.security.spec.ECField'/><constructor name='ECFieldFp' type='java.security.spec.ECFieldFp'><parameter name='p' type='java.math.BigInteger'/></constructor><method name='getFieldSize' return='int'/><method name='getP' return='java.math.BigInteger'/></class><class name='ECGenParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='ECGenParameterSpec' type='java.security.spec.ECGenParameterSpec'><parameter name='name' type='java.lang.String'/></constructor><method name='getName' return='java.lang.String'/></class><class name='ECParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='ECParameterSpec' type='java.security.spec.ECParameterSpec'><parameter name='curve' type='java.security.spec.EllipticCurve'/><parameter name='generator' type='java.security.spec.ECPoint'/><parameter name='order' type='java.math.BigInteger'/><parameter name='cofactor' type='int'/></constructor><method name='getCofactor' return='int'/><method name='getCurve' return='java.security.spec.EllipticCurve'/><method name='getGenerator' return='java.security.spec.ECPoint'/><method name='getOrder' return='java.math.BigInteger'/></class><class name='ECPoint' extends='java.lang.Object'><constructor name='ECPoint' type='java.security.spec.ECPoint'><parameter name='affineX' type='java.math.BigInteger'/><parameter name='affineY' type='java.math.BigInteger'/></constructor><field name='POINT_INFINITY' final='true' static='true' type='java.security.spec.ECPoint'/><method name='getAffineX' return='java.math.BigInteger'/><method name='getAffineY' return='java.math.BigInteger'/></class><class name='ECPrivateKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='ECPrivateKeySpec' type='java.security.spec.ECPrivateKeySpec'><parameter name='s' type='java.math.BigInteger'/><parameter name='params' type='java.security.spec.ECParameterSpec'/></constructor><method name='getParams' return='java.security.spec.ECParameterSpec'/><method name='getS' return='java.math.BigInteger'/></class><class name='ECPublicKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='ECPublicKeySpec' type='java.security.spec.ECPublicKeySpec'><parameter name='w' type='java.security.spec.ECPoint'/><parameter name='params' type='java.security.spec.ECParameterSpec'/></constructor><method name='getParams' return='java.security.spec.ECParameterSpec'/><method name='getW' return='java.security.spec.ECPoint'/></class><class name='EllipticCurve' extends='java.lang.Object'><constructor name='EllipticCurve' type='java.security.spec.EllipticCurve'><parameter name='field' type='java.security.spec.ECField'/><parameter name='a' type='java.math.BigInteger'/><parameter name='b' type='java.math.BigInteger'/><parameter name='seed' type='byte[]'/></constructor><constructor name='EllipticCurve' type='java.security.spec.EllipticCurve'><parameter name='field' type='java.security.spec.ECField'/><parameter name='a' type='java.math.BigInteger'/><parameter name='b' type='java.math.BigInteger'/></constructor><method name='getA' return='java.math.BigInteger'/><method name='getB' return='java.math.BigInteger'/><method name='getField' return='java.security.spec.ECField'/><method name='getSeed' return='byte[]'/></class><class name='EncodedKeySpec' extends='java.lang.Object' abstract='true'><implements name='java.security.spec.KeySpec'/><constructor name='EncodedKeySpec' type='java.security.spec.EncodedKeySpec'><parameter name='encodedKey' type='byte[]'/></constructor><method name='getEncoded' return='byte[]'/><method name='getFormat' abstract='true' return='java.lang.String'/></class><class name='InvalidKeySpecException' extends='java.security.GeneralSecurityException'><constructor name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/><constructor name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='InvalidParameterSpecException' extends='java.security.GeneralSecurityException'><constructor name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='InvalidParameterSpecException' type='java.security.spec.InvalidParameterSpecException'/></class><class name='MGF1ParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='MGF1ParameterSpec' type='java.security.spec.MGF1ParameterSpec'><parameter name='mdName' type='java.lang.String'/></constructor><field name='SHA1' final='true' static='true' type='java.security.spec.MGF1ParameterSpec'/><field name='SHA256' final='true' static='true' type='java.security.spec.MGF1ParameterSpec'/><field name='SHA384' final='true' static='true' type='java.security.spec.MGF1ParameterSpec'/><field name='SHA512' final='true' static='true' type='java.security.spec.MGF1ParameterSpec'/><method name='getDigestAlgorithm' return='java.lang.String'/></class><class name='PKCS8EncodedKeySpec' extends='java.security.spec.EncodedKeySpec'><constructor name='PKCS8EncodedKeySpec' type='java.security.spec.PKCS8EncodedKeySpec'><parameter name='encodedKey' type='byte[]'/></constructor><method name='getFormat' final='true' return='java.lang.String'/></class><class name='PSSParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='PSSParameterSpec' type='java.security.spec.PSSParameterSpec'><parameter name='saltLen' type='int'/></constructor><constructor name='PSSParameterSpec' type='java.security.spec.PSSParameterSpec'><parameter name='mdName' type='java.lang.String'/><parameter name='mgfName' type='java.lang.String'/><parameter name='mgfSpec' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='saltLen' type='int'/><parameter name='trailerField' type='int'/></constructor><field name='DEFAULT' final='true' static='true' type='java.security.spec.PSSParameterSpec'/><method name='getDigestAlgorithm' return='java.lang.String'/><method name='getMGFAlgorithm' return='java.lang.String'/><method name='getMGFParameters' return='java.security.spec.AlgorithmParameterSpec'/><method name='getSaltLength' return='int'/><method name='getTrailerField' return='int'/></class><class name='RSAKeyGenParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='RSAKeyGenParameterSpec' type='java.security.spec.RSAKeyGenParameterSpec'><parameter name='keysize' type='int'/><parameter name='publicExponent' type='java.math.BigInteger'/></constructor><field name='F0' final='true' static='true' type='java.math.BigInteger'/><field name='F4' final='true' static='true' type='java.math.BigInteger'/><method name='getKeysize' return='int'/><method name='getPublicExponent' return='java.math.BigInteger'/></class><class name='RSAMultiPrimePrivateCrtKeySpec' extends='java.security.spec.RSAPrivateKeySpec'><constructor name='RSAMultiPrimePrivateCrtKeySpec' type='java.security.spec.RSAMultiPrimePrivateCrtKeySpec'><parameter name='modulus' type='java.math.BigInteger'/><parameter name='publicExponent' type='java.math.BigInteger'/><parameter name='privateExponent' type='java.math.BigInteger'/><parameter name='primeP' type='java.math.BigInteger'/><parameter name='primeQ' type='java.math.BigInteger'/><parameter name='primeExponentP' type='java.math.BigInteger'/><parameter name='primeExponentQ' type='java.math.BigInteger'/><parameter name='crtCoefficient' type='java.math.BigInteger'/><parameter name='otherPrimeInfo' type='java.security.spec.RSAOtherPrimeInfo[]'/></constructor><method name='getCrtCoefficient' return='java.math.BigInteger'/><method name='getOtherPrimeInfo' return='java.security.spec.RSAOtherPrimeInfo[]'/><method name='getPrimeExponentP' return='java.math.BigInteger'/><method name='getPrimeExponentQ' return='java.math.BigInteger'/><method name='getPrimeP' return='java.math.BigInteger'/><method name='getPrimeQ' return='java.math.BigInteger'/><method name='getPublicExponent' return='java.math.BigInteger'/></class><class name='RSAOtherPrimeInfo' extends='java.lang.Object'><constructor name='RSAOtherPrimeInfo' type='java.security.spec.RSAOtherPrimeInfo'><parameter name='prime' type='java.math.BigInteger'/><parameter name='primeExponent' type='java.math.BigInteger'/><parameter name='crtCoefficient' type='java.math.BigInteger'/></constructor><method name='getCrtCoefficient' final='true' return='java.math.BigInteger'/><method name='getExponent' final='true' return='java.math.BigInteger'/><method name='getPrime' final='true' return='java.math.BigInteger'/></class><class name='RSAPrivateCrtKeySpec' extends='java.security.spec.RSAPrivateKeySpec'><constructor name='RSAPrivateCrtKeySpec' type='java.security.spec.RSAPrivateCrtKeySpec'><parameter name='modulus' type='java.math.BigInteger'/><parameter name='publicExponent' type='java.math.BigInteger'/><parameter name='privateExponent' type='java.math.BigInteger'/><parameter name='primeP' type='java.math.BigInteger'/><parameter name='primeQ' type='java.math.BigInteger'/><parameter name='primeExponentP' type='java.math.BigInteger'/><parameter name='primeExponentQ' type='java.math.BigInteger'/><parameter name='crtCoefficient' type='java.math.BigInteger'/></constructor><method name='getCrtCoefficient' return='java.math.BigInteger'/><method name='getPrimeExponentP' return='java.math.BigInteger'/><method name='getPrimeExponentQ' return='java.math.BigInteger'/><method name='getPrimeP' return='java.math.BigInteger'/><method name='getPrimeQ' return='java.math.BigInteger'/><method name='getPublicExponent' return='java.math.BigInteger'/></class><class name='RSAPrivateKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='RSAPrivateKeySpec' type='java.security.spec.RSAPrivateKeySpec'><parameter name='modulus' type='java.math.BigInteger'/><parameter name='privateExponent' type='java.math.BigInteger'/></constructor><method name='getModulus' return='java.math.BigInteger'/><method name='getPrivateExponent' return='java.math.BigInteger'/></class><class name='RSAPublicKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='RSAPublicKeySpec' type='java.security.spec.RSAPublicKeySpec'><parameter name='modulus' type='java.math.BigInteger'/><parameter name='publicExponent' type='java.math.BigInteger'/></constructor><method name='getModulus' return='java.math.BigInteger'/><method name='getPublicExponent' return='java.math.BigInteger'/></class><class name='X509EncodedKeySpec' extends='java.security.spec.EncodedKeySpec'><constructor name='X509EncodedKeySpec' type='java.security.spec.X509EncodedKeySpec'><parameter name='encodedKey' type='byte[]'/></constructor><method name='getFormat' final='true' return='java.lang.String'/></class><interface name='AlgorithmParameterSpec' abstract='true'/><interface name='ECField' abstract='true'><method name='getFieldSize' abstract='true' return='int'/></interface><interface name='KeySpec' abstract='true'/></package><package name='java.sql'><class name='BatchUpdateException' extends='java.sql.SQLException'><implements name='java.io.Serializable'/><constructor name='BatchUpdateException' type='java.sql.BatchUpdateException'/><constructor name='BatchUpdateException' type='java.sql.BatchUpdateException'><parameter name='updateCounts' type='int[]'/></constructor><constructor name='BatchUpdateException' type='java.sql.BatchUpdateException'><parameter name='reason' type='java.lang.String'/><parameter name='updateCounts' type='int[]'/></constructor><constructor name='BatchUpdateException' type='java.sql.BatchUpdateException'><parameter name='reason' type='java.lang.String'/><parameter name='SQLState' type='java.lang.String'/><parameter name='updateCounts' type='int[]'/></constructor><constructor name='BatchUpdateException' type='java.sql.BatchUpdateException'><parameter name='reason' type='java.lang.String'/><parameter name='SQLState' type='java.lang.String'/><parameter name='vendorCode' type='int'/><parameter name='updateCounts' type='int[]'/></constructor><method name='getUpdateCounts' return='int[]'/></class><class name='DataTruncation' extends='java.sql.SQLWarning'><implements name='java.io.Serializable'/><constructor name='DataTruncation' type='java.sql.DataTruncation'><parameter name='index' type='int'/><parameter name='parameter' type='boolean'/><parameter name='read' type='boolean'/><parameter name='dataSize' type='int'/><parameter name='transferSize' type='int'/></constructor><method name='getDataSize' return='int'/><method name='getIndex' return='int'/><method name='getParameter' return='boolean'/><method name='getRead' return='boolean'/><method name='getTransferSize' return='int'/></class><class name='Date' extends='java.util.Date'><constructor name='Date' type='java.sql.Date' deprecated='1'><parameter name='theYear' type='int'/><parameter name='theMonth' type='int'/><parameter name='theDay' type='int'/></constructor><constructor name='Date' type='java.sql.Date'><parameter name='theDate' type='long'/></constructor><method name='valueOf' static='true' return='java.sql.Date'><parameter name='dateString' type='java.lang.String'/></method></class><class name='DriverManager' extends='java.lang.Object'><method name='deregisterDriver' static='true'><parameter name='driver' type='java.sql.Driver'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' static='true' return='java.sql.Connection'><parameter name='url' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' static='true' return='java.sql.Connection'><parameter name='url' type='java.lang.String'/><parameter name='info' type='java.util.Properties'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' static='true' return='java.sql.Connection'><parameter name='url' type='java.lang.String'/><parameter name='user' type='java.lang.String'/><parameter name='password' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDriver' static='true' return='java.sql.Driver'><parameter name='url' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDrivers' static='true' return='java.util.Enumeration&lt;java.sql.Driver&gt;'/><method name='getLogStream' static='true' deprecated='1' return='java.io.PrintStream'/><method name='getLogWriter' static='true' return='java.io.PrintWriter'/><method name='getLoginTimeout' static='true' return='int'/><method name='println' static='true'><parameter name='message' type='java.lang.String'/></method><method name='registerDriver' static='true'><parameter name='driver' type='java.sql.Driver'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLogStream' static='true' deprecated='1'><parameter name='out' type='java.io.PrintStream'/></method><method name='setLogWriter' static='true'><parameter name='out' type='java.io.PrintWriter'/></method><method name='setLoginTimeout' static='true'><parameter name='seconds' type='int'/></method></class><class name='DriverPropertyInfo' extends='java.lang.Object'><constructor name='DriverPropertyInfo' type='java.sql.DriverPropertyInfo'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><field name='choices' value='null' type='java.lang.String[]'/><field name='description' type='java.lang.String'/><field name='name' type='java.lang.String'/><field name='required' type='boolean'/><field name='value' type='java.lang.String'/></class><class name='SQLException' extends='java.lang.Exception'><implements name='java.io.Serializable'/><constructor name='SQLException' type='java.sql.SQLException'/><constructor name='SQLException' type='java.sql.SQLException'><parameter name='theReason' type='java.lang.String'/></constructor><constructor name='SQLException' type='java.sql.SQLException'><parameter name='theReason' type='java.lang.String'/><parameter name='theSQLState' type='java.lang.String'/></constructor><constructor name='SQLException' type='java.sql.SQLException'><parameter name='theReason' type='java.lang.String'/><parameter name='theSQLState' type='java.lang.String'/><parameter name='theErrorCode' type='int'/></constructor><method name='getErrorCode' return='int'/><method name='getNextException' return='java.sql.SQLException'/><method name='getSQLState' return='java.lang.String'/><method name='setNextException'><parameter name='ex' type='java.sql.SQLException'/></method></class><class name='SQLPermission' final='true' extends='java.security.BasicPermission'><implements name='java.security.Guard'/><implements name='java.io.Serializable'/><constructor name='SQLPermission' type='java.sql.SQLPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='SQLPermission' type='java.sql.SQLPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='SQLWarning' extends='java.sql.SQLException'><implements name='java.io.Serializable'/><constructor name='SQLWarning' type='java.sql.SQLWarning'/><constructor name='SQLWarning' type='java.sql.SQLWarning'><parameter name='theReason' type='java.lang.String'/></constructor><constructor name='SQLWarning' type='java.sql.SQLWarning'><parameter name='theReason' type='java.lang.String'/><parameter name='theSQLState' type='java.lang.String'/></constructor><constructor name='SQLWarning' type='java.sql.SQLWarning'><parameter name='theReason' type='java.lang.String'/><parameter name='theSQLState' type='java.lang.String'/><parameter name='theErrorCode' type='int'/></constructor><method name='getNextWarning' return='java.sql.SQLWarning'/><method name='setNextWarning'><parameter name='w' type='java.sql.SQLWarning'/></method></class><class name='Time' extends='java.util.Date'><constructor name='Time' type='java.sql.Time' deprecated='1'><parameter name='theHour' type='int'/><parameter name='theMinute' type='int'/><parameter name='theSecond' type='int'/></constructor><constructor name='Time' type='java.sql.Time'><parameter name='theTime' type='long'/></constructor><method name='valueOf' static='true' return='java.sql.Time'><parameter name='timeString' type='java.lang.String'/></method></class><class name='Timestamp' extends='java.util.Date'><constructor name='Timestamp' type='java.sql.Timestamp' deprecated='1'><parameter name='theYear' type='int'/><parameter name='theMonth' type='int'/><parameter name='theDate' type='int'/><parameter name='theHour' type='int'/><parameter name='theMinute' type='int'/><parameter name='theSecond' type='int'/><parameter name='theNano' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></constructor><constructor name='Timestamp' type='java.sql.Timestamp'><parameter name='theTime' type='long'/></constructor><method name='after' return='boolean'><parameter name='theTimestamp' type='java.sql.Timestamp'/></method><method name='before' return='boolean'><parameter name='theTimestamp' type='java.sql.Timestamp'/></method><method name='compareTo' return='int'><parameter name='theTimestamp' type='java.sql.Timestamp'/></method><method name='equals' return='boolean'><parameter name='theTimestamp' type='java.sql.Timestamp'/></method><method name='getNanos' return='int'/><method name='setNanos'><parameter name='n' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='valueOf' static='true' return='java.sql.Timestamp'><parameter name='s' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><class name='Types' extends='java.lang.Object'><field name='ARRAY' final='true' static='true' value='2003' type='int'/><field name='BIGINT' final='true' static='true' value='-5' type='int'/><field name='BINARY' final='true' static='true' value='-2' type='int'/><field name='BIT' final='true' static='true' value='-7' type='int'/><field name='BLOB' final='true' static='true' value='2004' type='int'/><field name='BOOLEAN' final='true' static='true' value='16' type='int'/><field name='CHAR' final='true' static='true' value='1' type='int'/><field name='CLOB' final='true' static='true' value='2005' type='int'/><field name='DATALINK' final='true' static='true' value='70' type='int'/><field name='DATE' final='true' static='true' value='91' type='int'/><field name='DECIMAL' final='true' static='true' value='3' type='int'/><field name='DISTINCT' final='true' static='true' value='2001' type='int'/><field name='DOUBLE' final='true' static='true' value='8' type='int'/><field name='FLOAT' final='true' static='true' value='6' type='int'/><field name='INTEGER' final='true' static='true' value='4' type='int'/><field name='JAVA_OBJECT' final='true' static='true' value='2000' type='int'/><field name='LONGVARBINARY' final='true' static='true' value='-4' type='int'/><field name='LONGVARCHAR' final='true' static='true' value='-1' type='int'/><field name='NULL' final='true' static='true' value='0' type='int'/><field name='NUMERIC' final='true' static='true' value='2' type='int'/><field name='OTHER' final='true' static='true' value='1111' type='int'/><field name='REAL' final='true' static='true' value='7' type='int'/><field name='REF' final='true' static='true' value='2006' type='int'/><field name='SMALLINT' final='true' static='true' value='5' type='int'/><field name='STRUCT' final='true' static='true' value='2002' type='int'/><field name='TIME' final='true' static='true' value='92' type='int'/><field name='TIMESTAMP' final='true' static='true' value='93' type='int'/><field name='TINYINT' final='true' static='true' value='-6' type='int'/><field name='VARBINARY' final='true' static='true' value='-3' type='int'/><field name='VARCHAR' final='true' static='true' value='12' type='int'/></class><interface name='Array' abstract='true'><method name='getArray' abstract='true' return='java.lang.Object'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.lang.Object'><parameter name='index' type='long'/><parameter name='count' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.lang.Object'><parameter name='index' type='long'/><parameter name='count' type='int'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.lang.Object'><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBaseType' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBaseTypeName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSet' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSet' abstract='true' return='java.sql.ResultSet'><parameter name='index' type='long'/><parameter name='count' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSet' abstract='true' return='java.sql.ResultSet'><parameter name='index' type='long'/><parameter name='count' type='int'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSet' abstract='true' return='java.sql.ResultSet'><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Blob' abstract='true'><method name='getBinaryStream' abstract='true' return='java.io.InputStream'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBytes' abstract='true' return='byte[]'><parameter name='pos' type='long'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='length' abstract='true' return='long'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='position' abstract='true' return='long'><parameter name='pattern' type='java.sql.Blob'/><parameter name='start' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='position' abstract='true' return='long'><parameter name='pattern' type='byte[]'/><parameter name='start' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBinaryStream' abstract='true' return='java.io.OutputStream'><parameter name='pos' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBytes' abstract='true' return='int'><parameter name='pos' type='long'/><parameter name='theBytes' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBytes' abstract='true' return='int'><parameter name='pos' type='long'/><parameter name='theBytes' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='truncate' abstract='true'><parameter name='len' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='CallableStatement' abstract='true'><implements name='java.sql.PreparedStatement'/><method name='getArray' abstract='true' return='java.sql.Array'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.sql.Array'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' return='java.math.BigDecimal'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' deprecated='1' return='java.math.BigDecimal'><parameter name='parameterIndex' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' return='java.math.BigDecimal'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBlob' abstract='true' return='java.sql.Blob'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBlob' abstract='true' return='java.sql.Blob'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBoolean' abstract='true' return='boolean'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBoolean' abstract='true' return='boolean'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getByte' abstract='true' return='byte'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getByte' abstract='true' return='byte'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBytes' abstract='true' return='byte[]'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBytes' abstract='true' return='byte[]'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getClob' abstract='true' return='java.sql.Clob'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getClob' abstract='true' return='java.sql.Clob'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='parameterIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='parameterName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDouble' abstract='true' return='double'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDouble' abstract='true' return='double'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFloat' abstract='true' return='float'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFloat' abstract='true' return='float'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getInt' abstract='true' return='int'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getInt' abstract='true' return='int'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLong' abstract='true' return='long'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLong' abstract='true' return='long'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='parameterIndex' type='int'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='parameterName' type='java.lang.String'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getRef' abstract='true' return='java.sql.Ref'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getRef' abstract='true' return='java.sql.Ref'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getShort' abstract='true' return='short'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getShort' abstract='true' return='short'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='parameterIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='parameterName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='parameterIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='parameterName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getURL' abstract='true' return='java.net.URL'><parameter name='parameterIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getURL' abstract='true' return='java.net.URL'><parameter name='parameterName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='sqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='sqlType' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='paramIndex' type='int'/><parameter name='sqlType' type='int'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='sqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='sqlType' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='registerOutParameter' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='sqlType' type='int'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setAsciiStream' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBigDecimal' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theBigDecimal' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBinaryStream' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBoolean' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theBoolean' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setByte' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theByte' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBytes' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theBytes' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCharacterStream' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='reader' type='java.io.Reader'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theDate' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theDate' type='java.sql.Date'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDouble' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theDouble' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFloat' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theFloat' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setInt' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theInt' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLong' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theLong' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='sqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='sqlType' type='int'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theObject' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setShort' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theShort' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setString' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theString' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theTime' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theTime' type='java.sql.Time'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setURL' abstract='true'><parameter name='parameterName' type='java.lang.String'/><parameter name='theURL' type='java.net.URL'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='wasNull' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Clob' abstract='true'><method name='getAsciiStream' abstract='true' return='java.io.InputStream'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCharacterStream' abstract='true' return='java.io.Reader'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSubString' abstract='true' return='java.lang.String'><parameter name='pos' type='long'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='length' abstract='true' return='long'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='position' abstract='true' return='long'><parameter name='searchstr' type='java.sql.Clob'/><parameter name='start' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='position' abstract='true' return='long'><parameter name='searchstr' type='java.lang.String'/><parameter name='start' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setAsciiStream' abstract='true' return='java.io.OutputStream'><parameter name='pos' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCharacterStream' abstract='true' return='java.io.Writer'><parameter name='pos' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setString' abstract='true' return='int'><parameter name='pos' type='long'/><parameter name='str' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setString' abstract='true' return='int'><parameter name='pos' type='long'/><parameter name='str' type='java.lang.String'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='truncate' abstract='true'><parameter name='len' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Connection' abstract='true'><field name='TRANSACTION_NONE' final='true' static='true' value='0' type='int'/><field name='TRANSACTION_READ_COMMITTED' final='true' static='true' value='2' type='int'/><field name='TRANSACTION_READ_UNCOMMITTED' final='true' static='true' value='1' type='int'/><field name='TRANSACTION_REPEATABLE_READ' final='true' static='true' value='4' type='int'/><field name='TRANSACTION_SERIALIZABLE' final='true' static='true' value='8' type='int'/><method name='clearWarnings' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='close' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='commit' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='createStatement' abstract='true' return='java.sql.Statement'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='createStatement' abstract='true' return='java.sql.Statement'><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='createStatement' abstract='true' return='java.sql.Statement'><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><parameter name='resultSetHoldability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getAutoCommit' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCatalog' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getHoldability' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMetaData' abstract='true' return='java.sql.DatabaseMetaData'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTransactionIsolation' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTypeMap' abstract='true' return='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getWarnings' abstract='true' return='java.sql.SQLWarning'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isClosed' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isReadOnly' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nativeSQL' abstract='true' return='java.lang.String'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareCall' abstract='true' return='java.sql.CallableStatement'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareCall' abstract='true' return='java.sql.CallableStatement'><parameter name='sql' type='java.lang.String'/><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareCall' abstract='true' return='java.sql.CallableStatement'><parameter name='sql' type='java.lang.String'/><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><parameter name='resultSetHoldability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><parameter name='autoGeneratedKeys' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><parameter name='columnIndexes' type='int[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><parameter name='resultSetType' type='int'/><parameter name='resultSetConcurrency' type='int'/><parameter name='resultSetHoldability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='prepareStatement' abstract='true' return='java.sql.PreparedStatement'><parameter name='sql' type='java.lang.String'/><parameter name='columnNames' type='java.lang.String[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='releaseSavepoint' abstract='true'><parameter name='savepoint' type='java.sql.Savepoint'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='rollback' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='rollback' abstract='true'><parameter name='savepoint' type='java.sql.Savepoint'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setAutoCommit' abstract='true'><parameter name='autoCommit' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCatalog' abstract='true'><parameter name='catalog' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setHoldability' abstract='true'><parameter name='holdability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setReadOnly' abstract='true'><parameter name='readOnly' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setSavepoint' abstract='true' return='java.sql.Savepoint'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setSavepoint' abstract='true' return='java.sql.Savepoint'><parameter name='name' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTransactionIsolation' abstract='true'><parameter name='level' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTypeMap' abstract='true'><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='DatabaseMetaData' abstract='true'><field name='attributeNoNulls' final='true' static='true' value='0' type='short'/><field name='attributeNullable' final='true' static='true' value='1' type='short'/><field name='attributeNullableUnknown' final='true' static='true' value='2' type='short'/><field name='bestRowNotPseudo' final='true' static='true' value='1' type='int'/><field name='bestRowPseudo' final='true' static='true' value='2' type='int'/><field name='bestRowSession' final='true' static='true' value='2' type='int'/><field name='bestRowTemporary' final='true' static='true' value='0' type='int'/><field name='bestRowTransaction' final='true' static='true' value='1' type='int'/><field name='bestRowUnknown' final='true' static='true' value='0' type='int'/><field name='columnNoNulls' final='true' static='true' value='0' type='int'/><field name='columnNullable' final='true' static='true' value='1' type='int'/><field name='columnNullableUnknown' final='true' static='true' value='2' type='int'/><field name='importedKeyCascade' final='true' static='true' value='0' type='int'/><field name='importedKeyInitiallyDeferred' final='true' static='true' value='5' type='int'/><field name='importedKeyInitiallyImmediate' final='true' static='true' value='6' type='int'/><field name='importedKeyNoAction' final='true' static='true' value='3' type='int'/><field name='importedKeyNotDeferrable' final='true' static='true' value='7' type='int'/><field name='importedKeyRestrict' final='true' static='true' value='1' type='int'/><field name='importedKeySetDefault' final='true' static='true' value='4' type='int'/><field name='importedKeySetNull' final='true' static='true' value='2' type='int'/><field name='procedureColumnIn' final='true' static='true' value='1' type='int'/><field name='procedureColumnInOut' final='true' static='true' value='2' type='int'/><field name='procedureColumnOut' final='true' static='true' value='4' type='int'/><field name='procedureColumnResult' final='true' static='true' value='3' type='int'/><field name='procedureColumnReturn' final='true' static='true' value='5' type='int'/><field name='procedureColumnUnknown' final='true' static='true' value='0' type='int'/><field name='procedureNoNulls' final='true' static='true' value='0' type='int'/><field name='procedureNoResult' final='true' static='true' value='1' type='int'/><field name='procedureNullable' final='true' static='true' value='1' type='int'/><field name='procedureNullableUnknown' final='true' static='true' value='2' type='int'/><field name='procedureResultUnknown' final='true' static='true' value='0' type='int'/><field name='procedureReturnsResult' final='true' static='true' value='2' type='int'/><field name='sqlStateSQL99' final='true' static='true' value='2' type='int'/><field name='sqlStateXOpen' final='true' static='true' value='1' type='int'/><field name='tableIndexClustered' final='true' static='true' value='1' type='short'/><field name='tableIndexHashed' final='true' static='true' value='2' type='short'/><field name='tableIndexOther' final='true' static='true' value='3' type='short'/><field name='tableIndexStatistic' final='true' static='true' value='0' type='short'/><field name='typeNoNulls' final='true' static='true' value='0' type='int'/><field name='typeNullable' final='true' static='true' value='1' type='int'/><field name='typeNullableUnknown' final='true' static='true' value='2' type='int'/><field name='typePredBasic' final='true' static='true' value='2' type='int'/><field name='typePredChar' final='true' static='true' value='1' type='int'/><field name='typePredNone' final='true' static='true' value='0' type='int'/><field name='typeSearchable' final='true' static='true' value='3' type='int'/><field name='versionColumnNotPseudo' final='true' static='true' value='1' type='int'/><field name='versionColumnPseudo' final='true' static='true' value='2' type='int'/><field name='versionColumnUnknown' final='true' static='true' value='0' type='int'/><method name='allProceduresAreCallable' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='allTablesAreSelectable' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='dataDefinitionCausesTransactionCommit' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='dataDefinitionIgnoredInTransactions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='deletesAreDetected' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='doesMaxRowSizeIncludeBlobs' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getAttributes' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='typeNamePattern' type='java.lang.String'/><parameter name='attributeNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBestRowIdentifier' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><parameter name='scope' type='int'/><parameter name='nullable' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCatalogSeparator' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCatalogTerm' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCatalogs' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnPrivileges' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><parameter name='columnNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumns' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='tableNamePattern' type='java.lang.String'/><parameter name='columnNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' abstract='true' return='java.sql.Connection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCrossReference' abstract='true' return='java.sql.ResultSet'><parameter name='primaryCatalog' type='java.lang.String'/><parameter name='primarySchema' type='java.lang.String'/><parameter name='primaryTable' type='java.lang.String'/><parameter name='foreignCatalog' type='java.lang.String'/><parameter name='foreignSchema' type='java.lang.String'/><parameter name='foreignTable' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDatabaseMajorVersion' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDatabaseMinorVersion' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDatabaseProductName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDatabaseProductVersion' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDefaultTransactionIsolation' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDriverMajorVersion' abstract='true' return='int'/><method name='getDriverMinorVersion' abstract='true' return='int'/><method name='getDriverName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDriverVersion' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getExportedKeys' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getExtraNameCharacters' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getIdentifierQuoteString' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getImportedKeys' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getIndexInfo' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><parameter name='unique' type='boolean'/><parameter name='approximate' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getJDBCMajorVersion' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getJDBCMinorVersion' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxBinaryLiteralLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxCatalogNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxCharLiteralLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnsInGroupBy' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnsInIndex' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnsInOrderBy' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnsInSelect' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxColumnsInTable' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxConnections' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxCursorNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxIndexLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxProcedureNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxRowSize' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxSchemaNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxStatementLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxStatements' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxTableNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxTablesInSelect' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxUserNameLength' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getNumericFunctions' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPrimaryKeys' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getProcedureColumns' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='procedureNamePattern' type='java.lang.String'/><parameter name='columnNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getProcedureTerm' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getProcedures' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='procedureNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSetHoldability' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSQLKeywords' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSQLStateType' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSchemaTerm' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSchemas' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSearchStringEscape' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getStringFunctions' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSuperTables' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='tableNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSuperTypes' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='typeNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSystemFunctions' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTablePrivileges' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='tableNamePattern' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTableTypes' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTables' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='tableNamePattern' type='java.lang.String'/><parameter name='types' type='java.lang.String[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimeDateFunctions' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTypeInfo' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUDTs' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schemaPattern' type='java.lang.String'/><parameter name='typeNamePattern' type='java.lang.String'/><parameter name='types' type='int[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getURL' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUserName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getVersionColumns' abstract='true' return='java.sql.ResultSet'><parameter name='catalog' type='java.lang.String'/><parameter name='schema' type='java.lang.String'/><parameter name='table' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='insertsAreDetected' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isCatalogAtStart' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isReadOnly' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='locatorsUpdateCopy' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nullPlusNonNullIsNull' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nullsAreSortedAtEnd' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nullsAreSortedAtStart' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nullsAreSortedHigh' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='nullsAreSortedLow' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='othersDeletesAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='othersInsertsAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='othersUpdatesAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='ownDeletesAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='ownInsertsAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='ownUpdatesAreVisible' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesLowerCaseIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesLowerCaseQuotedIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesMixedCaseIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesMixedCaseQuotedIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesUpperCaseIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='storesUpperCaseQuotedIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsANSI92EntryLevelSQL' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsANSI92FullSQL' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsANSI92IntermediateSQL' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsAlterTableWithAddColumn' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsAlterTableWithDropColumn' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsBatchUpdates' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCatalogsInDataManipulation' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCatalogsInIndexDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCatalogsInPrivilegeDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCatalogsInProcedureCalls' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCatalogsInTableDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsColumnAliasing' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsConvert' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsConvert' abstract='true' return='boolean'><parameter name='fromType' type='int'/><parameter name='toType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCoreSQLGrammar' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsCorrelatedSubqueries' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsDataDefinitionAndDataManipulationTransactions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsDataManipulationTransactionsOnly' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsDifferentTableCorrelationNames' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsExpressionsInOrderBy' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsExtendedSQLGrammar' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsFullOuterJoins' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsGetGeneratedKeys' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsGroupBy' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsGroupByBeyondSelect' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsGroupByUnrelated' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsIntegrityEnhancementFacility' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsLikeEscapeClause' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsLimitedOuterJoins' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMinimumSQLGrammar' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMixedCaseIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMixedCaseQuotedIdentifiers' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMultipleOpenResults' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMultipleResultSets' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsMultipleTransactions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsNamedParameters' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsNonNullableColumns' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOpenCursorsAcrossCommit' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOpenCursorsAcrossRollback' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOpenStatementsAcrossCommit' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOpenStatementsAcrossRollback' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOrderByUnrelated' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsOuterJoins' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsPositionedDelete' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsPositionedUpdate' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsResultSetConcurrency' abstract='true' return='boolean'><parameter name='type' type='int'/><parameter name='concurrency' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsResultSetHoldability' abstract='true' return='boolean'><parameter name='holdability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsResultSetType' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSavepoints' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSchemasInDataManipulation' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSchemasInIndexDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSchemasInPrivilegeDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSchemasInProcedureCalls' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSchemasInTableDefinitions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSelectForUpdate' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsStatementPooling' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsStoredProcedures' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSubqueriesInComparisons' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSubqueriesInExists' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSubqueriesInIns' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsSubqueriesInQuantifieds' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsTableCorrelationNames' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsTransactionIsolationLevel' abstract='true' return='boolean'><parameter name='level' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsTransactions' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsUnion' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='supportsUnionAll' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updatesAreDetected' abstract='true' return='boolean'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='usesLocalFilePerTable' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='usesLocalFiles' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Driver' abstract='true'><method name='acceptsURL' abstract='true' return='boolean'><parameter name='url' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='connect' abstract='true' return='java.sql.Connection'><parameter name='url' type='java.lang.String'/><parameter name='info' type='java.util.Properties'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMajorVersion' abstract='true' return='int'/><method name='getMinorVersion' abstract='true' return='int'/><method name='getPropertyInfo' abstract='true' return='java.sql.DriverPropertyInfo[]'><parameter name='url' type='java.lang.String'/><parameter name='info' type='java.util.Properties'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='jdbcCompliant' abstract='true' return='boolean'/></interface><interface name='ParameterMetaData' abstract='true'><field name='parameterModeIn' final='true' static='true' value='1' type='int'/><field name='parameterModeInOut' final='true' static='true' value='2' type='int'/><field name='parameterModeOut' final='true' static='true' value='4' type='int'/><field name='parameterModeUnknown' final='true' static='true' value='0' type='int'/><field name='parameterNoNulls' final='true' static='true' value='0' type='int'/><field name='parameterNullable' final='true' static='true' value='1' type='int'/><field name='parameterNullableUnknown' final='true' static='true' value='2' type='int'/><method name='getParameterClassName' abstract='true' return='java.lang.String'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParameterCount' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParameterMode' abstract='true' return='int'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParameterType' abstract='true' return='int'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParameterTypeName' abstract='true' return='java.lang.String'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPrecision' abstract='true' return='int'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getScale' abstract='true' return='int'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isNullable' abstract='true' return='int'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isSigned' abstract='true' return='boolean'><parameter name='paramIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='PreparedStatement' abstract='true'><implements name='java.sql.Statement'/><method name='addBatch' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='clearParameters' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeQuery' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeUpdate' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMetaData' abstract='true' return='java.sql.ResultSetMetaData'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParameterMetaData' abstract='true' return='java.sql.ParameterMetaData'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setArray' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theArray' type='java.sql.Array'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setAsciiStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBigDecimal' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBigDecimal' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBinaryStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBlob' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBlob' type='java.sql.Blob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBoolean' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBoolean' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setByte' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theByte' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBytes' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBytes' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCharacterStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='reader' type='java.io.Reader'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setClob' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theClob' type='java.sql.Clob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDate' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDate' type='java.sql.Date'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDouble' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDouble' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFloat' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theFloat' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setInt' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInt' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLong' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theLong' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='sqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='paramIndex' type='int'/><parameter name='sqlType' type='int'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setRef' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theRef' type='java.sql.Ref'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setShort' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theShort' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setString' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theString' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTime' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTime' type='java.sql.Time'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setURL' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theURL' type='java.net.URL'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setUnicodeStream' abstract='true' deprecated='1'><parameter name='parameterIndex' type='int'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Ref' abstract='true'><method name='getBaseTypeName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='value' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='ResultSet' abstract='true'><field name='CLOSE_CURSORS_AT_COMMIT' final='true' static='true' value='2' type='int'/><field name='CONCUR_READ_ONLY' final='true' static='true' value='1007' type='int'/><field name='CONCUR_UPDATABLE' final='true' static='true' value='1008' type='int'/><field name='FETCH_FORWARD' final='true' static='true' value='1000' type='int'/><field name='FETCH_REVERSE' final='true' static='true' value='1001' type='int'/><field name='FETCH_UNKNOWN' final='true' static='true' value='1002' type='int'/><field name='HOLD_CURSORS_OVER_COMMIT' final='true' static='true' value='1' type='int'/><field name='TYPE_FORWARD_ONLY' final='true' static='true' value='1003' type='int'/><field name='TYPE_SCROLL_INSENSITIVE' final='true' static='true' value='1004' type='int'/><field name='TYPE_SCROLL_SENSITIVE' final='true' static='true' value='1005' type='int'/><method name='absolute' abstract='true' return='boolean'><parameter name='row' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='afterLast' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='beforeFirst' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='cancelRowUpdates' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='clearWarnings' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='close' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='deleteRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='findColumn' abstract='true' return='int'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='first' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.sql.Array'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getArray' abstract='true' return='java.sql.Array'><parameter name='colName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getAsciiStream' abstract='true' return='java.io.InputStream'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getAsciiStream' abstract='true' return='java.io.InputStream'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' return='java.math.BigDecimal'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' deprecated='1' return='java.math.BigDecimal'><parameter name='columnIndex' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' return='java.math.BigDecimal'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBigDecimal' abstract='true' deprecated='1' return='java.math.BigDecimal'><parameter name='columnName' type='java.lang.String'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBinaryStream' abstract='true' return='java.io.InputStream'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBinaryStream' abstract='true' return='java.io.InputStream'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBlob' abstract='true' return='java.sql.Blob'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBlob' abstract='true' return='java.sql.Blob'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBoolean' abstract='true' return='boolean'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBoolean' abstract='true' return='boolean'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getByte' abstract='true' return='byte'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getByte' abstract='true' return='byte'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBytes' abstract='true' return='byte[]'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getBytes' abstract='true' return='byte[]'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCharacterStream' abstract='true' return='java.io.Reader'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCharacterStream' abstract='true' return='java.io.Reader'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getClob' abstract='true' return='java.sql.Clob'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getClob' abstract='true' return='java.sql.Clob'><parameter name='colName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConcurrency' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCursorName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='columnIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDate' abstract='true' return='java.sql.Date'><parameter name='columnName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDouble' abstract='true' return='double'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getDouble' abstract='true' return='double'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFetchDirection' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFetchSize' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFloat' abstract='true' return='float'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFloat' abstract='true' return='float'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getInt' abstract='true' return='int'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getInt' abstract='true' return='int'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLong' abstract='true' return='long'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLong' abstract='true' return='long'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMetaData' abstract='true' return='java.sql.ResultSetMetaData'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='columnIndex' type='int'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getObject' abstract='true' return='java.lang.Object'><parameter name='columnName' type='java.lang.String'/><parameter name='map' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getRef' abstract='true' return='java.sql.Ref'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getRef' abstract='true' return='java.sql.Ref'><parameter name='colName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getRow' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getShort' abstract='true' return='short'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getShort' abstract='true' return='short'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getStatement' abstract='true' return='java.sql.Statement'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getString' abstract='true' return='java.lang.String'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='columnIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTime' abstract='true' return='java.sql.Time'><parameter name='columnName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='columnIndex' type='int'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTimestamp' abstract='true' return='java.sql.Timestamp'><parameter name='columnName' type='java.lang.String'/><parameter name='cal' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getType' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getURL' abstract='true' return='java.net.URL'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getURL' abstract='true' return='java.net.URL'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUnicodeStream' abstract='true' deprecated='1' return='java.io.InputStream'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUnicodeStream' abstract='true' deprecated='1' return='java.io.InputStream'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getWarnings' abstract='true' return='java.sql.SQLWarning'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='insertRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isAfterLast' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isBeforeFirst' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isFirst' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isLast' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='last' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='moveToCurrentRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='moveToInsertRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='next' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='previous' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='refreshRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='relative' abstract='true' return='boolean'><parameter name='rows' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='rowDeleted' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='rowInserted' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='rowUpdated' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFetchDirection' abstract='true'><parameter name='direction' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFetchSize' abstract='true'><parameter name='rows' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateArray' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Array'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateArray' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Array'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateAsciiStream' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateAsciiStream' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBigDecimal' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBigDecimal' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBinaryStream' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBinaryStream' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBlob' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Blob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBlob' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Blob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBoolean' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBoolean' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateByte' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateByte' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBytes' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateBytes' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateCharacterStream' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.io.Reader'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateCharacterStream' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='reader' type='java.io.Reader'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateClob' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Clob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateClob' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Clob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateDate' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateDate' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateDouble' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateDouble' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateFloat' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateFloat' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateInt' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateInt' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateLong' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateLong' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateNull' abstract='true'><parameter name='columnIndex' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateNull' abstract='true'><parameter name='columnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateObject' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateObject' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.lang.Object'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateObject' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateObject' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.lang.Object'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateRef' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Ref'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateRef' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Ref'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateRow' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateShort' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateShort' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateString' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateString' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateTime' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateTime' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateTimestamp' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='x' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='updateTimestamp' abstract='true'><parameter name='columnName' type='java.lang.String'/><parameter name='x' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='wasNull' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='ResultSetMetaData' abstract='true'><field name='columnNoNulls' final='true' static='true' value='0' type='int'/><field name='columnNullable' final='true' static='true' value='1' type='int'/><field name='columnNullableUnknown' final='true' static='true' value='2' type='int'/><method name='getCatalogName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnClassName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnCount' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnDisplaySize' abstract='true' return='int'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnLabel' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnType' abstract='true' return='int'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getColumnTypeName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPrecision' abstract='true' return='int'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getScale' abstract='true' return='int'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSchemaName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTableName' abstract='true' return='java.lang.String'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isAutoIncrement' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isCaseSensitive' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isCurrency' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isDefinitelyWritable' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isNullable' abstract='true' return='int'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isReadOnly' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isSearchable' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isSigned' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='isWritable' abstract='true' return='boolean'><parameter name='column' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='SQLData' abstract='true'><method name='getSQLTypeName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readSQL' abstract='true'><parameter name='stream' type='java.sql.SQLInput'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeSQL' abstract='true'><parameter name='stream' type='java.sql.SQLOutput'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='SQLInput' abstract='true'><method name='readArray' abstract='true' return='java.sql.Array'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readAsciiStream' abstract='true' return='java.io.InputStream'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readBigDecimal' abstract='true' return='java.math.BigDecimal'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readBinaryStream' abstract='true' return='java.io.InputStream'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readBlob' abstract='true' return='java.sql.Blob'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readBoolean' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readByte' abstract='true' return='byte'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readBytes' abstract='true' return='byte[]'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readCharacterStream' abstract='true' return='java.io.Reader'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readClob' abstract='true' return='java.sql.Clob'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readDate' abstract='true' return='java.sql.Date'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readDouble' abstract='true' return='double'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readFloat' abstract='true' return='float'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readInt' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readLong' abstract='true' return='long'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readObject' abstract='true' return='java.lang.Object'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readRef' abstract='true' return='java.sql.Ref'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readShort' abstract='true' return='short'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readString' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readTime' abstract='true' return='java.sql.Time'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readTimestamp' abstract='true' return='java.sql.Timestamp'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='readURL' abstract='true' return='java.net.URL'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='wasNull' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='SQLOutput' abstract='true'><method name='writeArray' abstract='true'><parameter name='theArray' type='java.sql.Array'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeAsciiStream' abstract='true'><parameter name='theStream' type='java.io.InputStream'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeBigDecimal' abstract='true'><parameter name='theBigDecimal' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeBinaryStream' abstract='true'><parameter name='theStream' type='java.io.InputStream'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeBlob' abstract='true'><parameter name='theBlob' type='java.sql.Blob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeBoolean' abstract='true'><parameter name='theFlag' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeByte' abstract='true'><parameter name='theByte' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeBytes' abstract='true'><parameter name='theBytes' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeCharacterStream' abstract='true'><parameter name='theStream' type='java.io.Reader'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeClob' abstract='true'><parameter name='theClob' type='java.sql.Clob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeDate' abstract='true'><parameter name='theDate' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeDouble' abstract='true'><parameter name='theDouble' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeFloat' abstract='true'><parameter name='theFloat' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeInt' abstract='true'><parameter name='theInt' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeLong' abstract='true'><parameter name='theLong' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeObject' abstract='true'><parameter name='theObject' type='java.sql.SQLData'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeRef' abstract='true'><parameter name='theRef' type='java.sql.Ref'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeShort' abstract='true'><parameter name='theShort' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeString' abstract='true'><parameter name='theString' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeStruct' abstract='true'><parameter name='theStruct' type='java.sql.Struct'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeTime' abstract='true'><parameter name='theTime' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeTimestamp' abstract='true'><parameter name='theTimestamp' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='writeURL' abstract='true'><parameter name='theURL' type='java.net.URL'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Savepoint' abstract='true'><method name='getSavepointId' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSavepointName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Statement' abstract='true'><field name='CLOSE_ALL_RESULTS' final='true' static='true' value='3' type='int'/><field name='CLOSE_CURRENT_RESULT' final='true' static='true' value='1' type='int'/><field name='EXECUTE_FAILED' final='true' static='true' value='-3' type='int'/><field name='KEEP_CURRENT_RESULT' final='true' static='true' value='2' type='int'/><field name='NO_GENERATED_KEYS' final='true' static='true' value='2' type='int'/><field name='RETURN_GENERATED_KEYS' final='true' static='true' value='1' type='int'/><field name='SUCCESS_NO_INFO' final='true' static='true' value='-2' type='int'/><method name='addBatch' abstract='true'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='cancel' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='clearBatch' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='clearWarnings' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='close' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true' return='boolean'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true' return='boolean'><parameter name='sql' type='java.lang.String'/><parameter name='autoGeneratedKeys' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true' return='boolean'><parameter name='sql' type='java.lang.String'/><parameter name='columnIndexes' type='int[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true' return='boolean'><parameter name='sql' type='java.lang.String'/><parameter name='columnNames' type='java.lang.String[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeBatch' abstract='true' return='int[]'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeQuery' abstract='true' return='java.sql.ResultSet'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeUpdate' abstract='true' return='int'><parameter name='sql' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeUpdate' abstract='true' return='int'><parameter name='sql' type='java.lang.String'/><parameter name='autoGeneratedKeys' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeUpdate' abstract='true' return='int'><parameter name='sql' type='java.lang.String'/><parameter name='columnIndexes' type='int[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='executeUpdate' abstract='true' return='int'><parameter name='sql' type='java.lang.String'/><parameter name='columnNames' type='java.lang.String[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' abstract='true' return='java.sql.Connection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFetchDirection' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getFetchSize' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getGeneratedKeys' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxFieldSize' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxRows' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMoreResults' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMoreResults' abstract='true' return='boolean'><parameter name='current' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getQueryTimeout' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSet' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSetConcurrency' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSetHoldability' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getResultSetType' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUpdateCount' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getWarnings' abstract='true' return='java.sql.SQLWarning'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCursorName' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setEscapeProcessing' abstract='true'><parameter name='enable' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFetchDirection' abstract='true'><parameter name='direction' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFetchSize' abstract='true'><parameter name='rows' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setMaxFieldSize' abstract='true'><parameter name='max' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setMaxRows' abstract='true'><parameter name='max' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setQueryTimeout' abstract='true'><parameter name='seconds' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='Struct' abstract='true'><method name='getAttributes' abstract='true' return='java.lang.Object[]'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getAttributes' abstract='true' return='java.lang.Object[]'><parameter name='theMap' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getSQLTypeName' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method></interface></package><package name='java.text'><class name='Annotation' extends='java.lang.Object'><constructor name='Annotation' type='java.text.Annotation'><parameter name='attribute' type='java.lang.Object'/></constructor><method name='getValue' return='java.lang.Object'/></class><class name='AttributedCharacterIterator.Attribute' extends='java.lang.Object' static='true'><implements name='java.io.Serializable'/><constructor name='AttributedCharacterIterator.Attribute' type='java.text.AttributedCharacterIterator.Attribute' visibility='protected'><parameter name='name' type='java.lang.String'/></constructor><field name='INPUT_METHOD_SEGMENT' final='true' static='true' type='java.text.AttributedCharacterIterator.Attribute'/><field name='LANGUAGE' final='true' static='true' type='java.text.AttributedCharacterIterator.Attribute'/><field name='READING' final='true' static='true' type='java.text.AttributedCharacterIterator.Attribute'/><method name='equals' final='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='getName' visibility='protected' return='java.lang.String'/><method name='hashCode' final='true' return='int'/><method name='readResolve' visibility='protected' return='java.lang.Object'><exception name='InvalidObjectException' type='java.io.InvalidObjectException'/></method></class><class name='AttributedString' extends='java.lang.Object'><constructor name='AttributedString' type='java.text.AttributedString'><parameter name='iterator' type='java.text.AttributedCharacterIterator'/></constructor><constructor name='AttributedString' type='java.text.AttributedString'><parameter name='iterator' type='java.text.AttributedCharacterIterator'/><parameter name='start' type='int'/><parameter name='end' type='int'/></constructor><constructor name='AttributedString' type='java.text.AttributedString'><parameter name='iterator' type='java.text.AttributedCharacterIterator'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='attributes' type='java.text.AttributedCharacterIterator.Attribute[]'/></constructor><constructor name='AttributedString' type='java.text.AttributedString'><parameter name='value' type='java.lang.String'/></constructor><constructor name='AttributedString' type='java.text.AttributedString'><parameter name='value' type='java.lang.String'/><parameter name='attributes' type='java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&gt;'/></constructor><method name='addAttribute'><parameter name='attribute' type='java.text.AttributedCharacterIterator.Attribute'/><parameter name='value' type='java.lang.Object'/></method><method name='addAttribute'><parameter name='attribute' type='java.text.AttributedCharacterIterator.Attribute'/><parameter name='value' type='java.lang.Object'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='addAttributes'><parameter name='attributes' type='java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute, ?&gt;'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='getIterator' return='java.text.AttributedCharacterIterator'/><method name='getIterator' return='java.text.AttributedCharacterIterator'><parameter name='attributes' type='java.text.AttributedCharacterIterator.Attribute[]'/></method><method name='getIterator' return='java.text.AttributedCharacterIterator'><parameter name='attributes' type='java.text.AttributedCharacterIterator.Attribute[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method></class><class name='Bidi' final='true' extends='java.lang.Object'><constructor name='Bidi' type='java.text.Bidi'><parameter name='paragraph' type='java.text.AttributedCharacterIterator'/></constructor><constructor name='Bidi' type='java.text.Bidi'><parameter name='text' type='char[]'/><parameter name='textStart' type='int'/><parameter name='embeddings' type='byte[]'/><parameter name='embStart' type='int'/><parameter name='paragraphLength' type='int'/><parameter name='flags' type='int'/></constructor><constructor name='Bidi' type='java.text.Bidi'><parameter name='paragraph' type='java.lang.String'/><parameter name='flags' type='int'/></constructor><field name='DIRECTION_DEFAULT_LEFT_TO_RIGHT' final='true' static='true' value='-2' type='int'/><field name='DIRECTION_DEFAULT_RIGHT_TO_LEFT' final='true' static='true' value='-1' type='int'/><field name='DIRECTION_LEFT_TO_RIGHT' final='true' static='true' value='0' type='int'/><field name='DIRECTION_RIGHT_TO_LEFT' final='true' static='true' value='1' type='int'/><method name='baseIsLeftToRight' return='boolean'/><method name='createLineBidi' return='java.text.Bidi'><parameter name='lineStart' type='int'/><parameter name='lineLimit' type='int'/></method><method name='getBaseLevel' return='int'/><method name='getLength' return='int'/><method name='getLevelAt' return='int'><parameter name='offset' type='int'/></method><method name='getRunCount' return='int'/><method name='getRunLevel' return='int'><parameter name='run' type='int'/></method><method name='getRunLimit' return='int'><parameter name='run' type='int'/></method><method name='getRunStart' return='int'><parameter name='run' type='int'/></method><method name='isLeftToRight' return='boolean'/><method name='isMixed' return='boolean'/><method name='isRightToLeft' return='boolean'/><method name='reorderVisually' static='true'><parameter name='levels' type='byte[]'/><parameter name='levelStart' type='int'/><parameter name='objects' type='java.lang.Object[]'/><parameter name='objectStart' type='int'/><parameter name='count' type='int'/></method><method name='requiresBidi' static='true' return='boolean'><parameter name='text' type='char[]'/><parameter name='start' type='int'/><parameter name='limit' type='int'/></method></class><class name='BreakIterator' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><constructor name='BreakIterator' type='java.text.BreakIterator' visibility='protected'/><field name='DONE' final='true' static='true' value='-1' type='int'/><method name='clone' return='java.lang.Object'/><method name='current' abstract='true' return='int'/><method name='first' abstract='true' return='int'/><method name='following' abstract='true' return='int'><parameter name='offset' type='int'/></method><method name='getAvailableLocales' static='true' return='java.util.Locale[]'/><method name='getCharacterInstance' static='true' return='java.text.BreakIterator'/><method name='getCharacterInstance' static='true' return='java.text.BreakIterator'><parameter name='where' type='java.util.Locale'/></method><method name='getInt' static='true' visibility='protected' return='int'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/></method><method name='getLineInstance' static='true' return='java.text.BreakIterator'/><method name='getLineInstance' static='true' return='java.text.BreakIterator'><parameter name='where' type='java.util.Locale'/></method><method name='getLong' static='true' visibility='protected' return='long'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/></method><method name='getSentenceInstance' static='true' return='java.text.BreakIterator'/><method name='getSentenceInstance' static='true' return='java.text.BreakIterator'><parameter name='where' type='java.util.Locale'/></method><method name='getShort' static='true' visibility='protected' return='short'><parameter name='buf' type='byte[]'/><parameter name='offset' type='int'/></method><method name='getText' abstract='true' return='java.text.CharacterIterator'/><method name='getWordInstance' static='true' return='java.text.BreakIterator'/><method name='getWordInstance' static='true' return='java.text.BreakIterator'><parameter name='where' type='java.util.Locale'/></method><method name='isBoundary' return='boolean'><parameter name='offset' type='int'/></method><method name='last' abstract='true' return='int'/><method name='next' abstract='true' return='int'/><method name='next' abstract='true' return='int'><parameter name='n' type='int'/></method><method name='preceding' return='int'><parameter name='offset' type='int'/></method><method name='previous' abstract='true' return='int'/><method name='setText'><parameter name='newText' type='java.lang.String'/></method><method name='setText' abstract='true'><parameter name='newText' type='java.text.CharacterIterator'/></method></class><class name='ChoiceFormat' extends='java.text.NumberFormat'><constructor name='ChoiceFormat' type='java.text.ChoiceFormat'><parameter name='limits' type='double[]'/><parameter name='formats' type='java.lang.String[]'/></constructor><constructor name='ChoiceFormat' type='java.text.ChoiceFormat'><parameter name='template' type='java.lang.String'/></constructor><method name='applyPattern'><parameter name='template' type='java.lang.String'/></method><method name='format' return='java.lang.StringBuffer'><parameter name='value' type='double'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' return='java.lang.StringBuffer'><parameter name='value' type='long'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='getFormats' return='java.lang.Object[]'/><method name='getLimits' return='double[]'/><method name='nextDouble' final='true' static='true' return='double'><parameter name='value' type='double'/></method><method name='nextDouble' static='true' return='double'><parameter name='value' type='double'/><parameter name='increment' type='boolean'/></method><method name='parse' return='java.lang.Number'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='previousDouble' final='true' static='true' return='double'><parameter name='value' type='double'/></method><method name='setChoices'><parameter name='limits' type='double[]'/><parameter name='formats' type='java.lang.String[]'/></method><method name='toPattern' return='java.lang.String'/></class><class name='CollationElementIterator' final='true' extends='java.lang.Object'><field name='NULLORDER' final='true' static='true' value='-1' type='int'/><method name='getMaxExpansion' return='int'><parameter name='order' type='int'/></method><method name='getOffset' return='int'/><method name='next' return='int'/><method name='previous' return='int'/><method name='primaryOrder' final='true' static='true' return='int'><parameter name='order' type='int'/></method><method name='reset'/><method name='secondaryOrder' final='true' static='true' return='short'><parameter name='order' type='int'/></method><method name='setOffset'><parameter name='newOffset' type='int'/></method><method name='setText'><parameter name='source' type='java.text.CharacterIterator'/></method><method name='setText'><parameter name='source' type='java.lang.String'/></method><method name='tertiaryOrder' final='true' static='true' return='short'><parameter name='order' type='int'/></method></class><class name='CollationKey' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><method name='compareTo' return='int'><parameter name='value' type='java.text.CollationKey'/></method><method name='getSourceString' return='java.lang.String'/><method name='toByteArray' return='byte[]'/></class><class name='Collator' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><implements name='java.util.Comparator'/><constructor name='Collator' type='java.text.Collator' visibility='protected'/><field name='CANONICAL_DECOMPOSITION' final='true' static='true' value='1' type='int'/><field name='FULL_DECOMPOSITION' final='true' static='true' value='2' type='int'/><field name='IDENTICAL' final='true' static='true' value='3' type='int'/><field name='NO_DECOMPOSITION' final='true' static='true' value='0' type='int'/><field name='PRIMARY' final='true' static='true' value='0' type='int'/><field name='SECONDARY' final='true' static='true' value='1' type='int'/><field name='TERTIARY' final='true' static='true' value='2' type='int'/><method name='clone' return='java.lang.Object'/><method name='compare' return='int'><parameter name='object1' type='java.lang.Object'/><parameter name='object2' type='java.lang.Object'/></method><method name='compare' abstract='true' return='int'><parameter name='string1' type='java.lang.String'/><parameter name='string2' type='java.lang.String'/></method><method name='equals' return='boolean'><parameter name='string1' type='java.lang.String'/><parameter name='string2' type='java.lang.String'/></method><method name='getAvailableLocales' static='true' return='java.util.Locale[]'/><method name='getCollationKey' abstract='true' return='java.text.CollationKey'><parameter name='string' type='java.lang.String'/></method><method name='getDecomposition' return='int'/><method name='getInstance' static='true' return='java.text.Collator'/><method name='getInstance' static='true' return='java.text.Collator'><parameter name='locale' type='java.util.Locale'/></method><method name='getStrength' return='int'/><method name='hashCode' abstract='true' return='int'/><method name='setDecomposition'><parameter name='value' type='int'/></method><method name='setStrength'><parameter name='value' type='int'/></method></class><class name='DateFormat' extends='java.text.Format' abstract='true'><constructor name='DateFormat' type='java.text.DateFormat' visibility='protected'/><field name='AM_PM_FIELD' final='true' static='true' value='14' type='int'/><field name='DATE_FIELD' final='true' static='true' value='3' type='int'/><field name='DAY_OF_WEEK_FIELD' final='true' static='true' value='9' type='int'/><field name='DAY_OF_WEEK_IN_MONTH_FIELD' final='true' static='true' value='11' type='int'/><field name='DAY_OF_YEAR_FIELD' final='true' static='true' value='10' type='int'/><field name='DEFAULT' final='true' static='true' value='2' type='int'/><field name='ERA_FIELD' final='true' static='true' value='0' type='int'/><field name='FULL' final='true' static='true' value='0' type='int'/><field name='HOUR0_FIELD' final='true' static='true' value='16' type='int'/><field name='HOUR1_FIELD' final='true' static='true' value='15' type='int'/><field name='HOUR_OF_DAY0_FIELD' final='true' static='true' value='5' type='int'/><field name='HOUR_OF_DAY1_FIELD' final='true' static='true' value='4' type='int'/><field name='LONG' final='true' static='true' value='1' type='int'/><field name='MEDIUM' final='true' static='true' value='2' type='int'/><field name='MILLISECOND_FIELD' final='true' static='true' value='8' type='int'/><field name='MINUTE_FIELD' final='true' static='true' value='6' type='int'/><field name='MONTH_FIELD' final='true' static='true' value='2' type='int'/><field name='SECOND_FIELD' final='true' static='true' value='7' type='int'/><field name='SHORT' final='true' static='true' value='3' type='int'/><field name='TIMEZONE_FIELD' final='true' static='true' value='17' type='int'/><field name='WEEK_OF_MONTH_FIELD' final='true' static='true' value='13' type='int'/><field name='WEEK_OF_YEAR_FIELD' final='true' static='true' value='12' type='int'/><field name='YEAR_FIELD' final='true' static='true' value='1' type='int'/><field name='calendar' type='java.util.Calendar' visibility='protected'/><field name='numberFormat' type='java.text.NumberFormat' visibility='protected'/><method name='format' final='true' return='java.lang.StringBuffer'><parameter name='object' type='java.lang.Object'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' final='true' return='java.lang.String'><parameter name='date' type='java.util.Date'/></method><method name='format' abstract='true' return='java.lang.StringBuffer'><parameter name='date' type='java.util.Date'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='getAvailableLocales' static='true' return='java.util.Locale[]'/><method name='getCalendar' return='java.util.Calendar'/><method name='getDateInstance' final='true' static='true' return='java.text.DateFormat'/><method name='getDateInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='style' type='int'/></method><method name='getDateInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='style' type='int'/><parameter name='locale' type='java.util.Locale'/></method><method name='getDateTimeInstance' final='true' static='true' return='java.text.DateFormat'/><method name='getDateTimeInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='dateStyle' type='int'/><parameter name='timeStyle' type='int'/></method><method name='getDateTimeInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='dateStyle' type='int'/><parameter name='timeStyle' type='int'/><parameter name='locale' type='java.util.Locale'/></method><method name='getInstance' final='true' static='true' return='java.text.DateFormat'/><method name='getNumberFormat' return='java.text.NumberFormat'/><method name='getTimeInstance' final='true' static='true' return='java.text.DateFormat'/><method name='getTimeInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='style' type='int'/></method><method name='getTimeInstance' final='true' static='true' return='java.text.DateFormat'><parameter name='style' type='int'/><parameter name='locale' type='java.util.Locale'/></method><method name='getTimeZone' return='java.util.TimeZone'/><method name='isLenient' return='boolean'/><method name='parse' return='java.util.Date'><parameter name='string' type='java.lang.String'/><exception name='ParseException' type='java.text.ParseException'/></method><method name='parse' abstract='true' return='java.util.Date'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='parseObject' return='java.lang.Object'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='setCalendar'><parameter name='cal' type='java.util.Calendar'/></method><method name='setLenient'><parameter name='value' type='boolean'/></method><method name='setNumberFormat'><parameter name='format' type='java.text.NumberFormat'/></method><method name='setTimeZone'><parameter name='timezone' type='java.util.TimeZone'/></method></class><class name='DateFormat.Field' extends='java.text.Format.Field' static='true'><constructor name='DateFormat.Field' type='java.text.DateFormat.Field' visibility='protected'><parameter name='fieldName' type='java.lang.String'/><parameter name='calendarField' type='int'/></constructor><field name='AM_PM' final='true' static='true' type='java.text.DateFormat.Field'/><field name='DAY_OF_MONTH' final='true' static='true' type='java.text.DateFormat.Field'/><field name='DAY_OF_WEEK' final='true' static='true' type='java.text.DateFormat.Field'/><field name='DAY_OF_WEEK_IN_MONTH' final='true' static='true' type='java.text.DateFormat.Field'/><field name='DAY_OF_YEAR' final='true' static='true' type='java.text.DateFormat.Field'/><field name='ERA' final='true' static='true' type='java.text.DateFormat.Field'/><field name='HOUR0' final='true' static='true' type='java.text.DateFormat.Field'/><field name='HOUR1' final='true' static='true' type='java.text.DateFormat.Field'/><field name='HOUR_OF_DAY0' final='true' static='true' type='java.text.DateFormat.Field'/><field name='HOUR_OF_DAY1' final='true' static='true' type='java.text.DateFormat.Field'/><field name='MILLISECOND' final='true' static='true' type='java.text.DateFormat.Field'/><field name='MINUTE' final='true' static='true' type='java.text.DateFormat.Field'/><field name='MONTH' final='true' static='true' type='java.text.DateFormat.Field'/><field name='SECOND' final='true' static='true' type='java.text.DateFormat.Field'/><field name='TIME_ZONE' final='true' static='true' type='java.text.DateFormat.Field'/><field name='WEEK_OF_MONTH' final='true' static='true' type='java.text.DateFormat.Field'/><field name='WEEK_OF_YEAR' final='true' static='true' type='java.text.DateFormat.Field'/><field name='YEAR' final='true' static='true' type='java.text.DateFormat.Field'/><method name='getCalendarField' return='int'/><method name='ofCalendarField' static='true' return='java.text.DateFormat.Field'><parameter name='calendarField' type='int'/></method></class><class name='DateFormatSymbols' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='DateFormatSymbols' type='java.text.DateFormatSymbols'/><constructor name='DateFormatSymbols' type='java.text.DateFormatSymbols'><parameter name='locale' type='java.util.Locale'/></constructor><method name='clone' return='java.lang.Object'/><method name='getAmPmStrings' return='java.lang.String[]'/><method name='getEras' return='java.lang.String[]'/><method name='getLocalPatternChars' return='java.lang.String'/><method name='getMonths' return='java.lang.String[]'/><method name='getShortMonths' return='java.lang.String[]'/><method name='getShortWeekdays' return='java.lang.String[]'/><method name='getWeekdays' return='java.lang.String[]'/><method name='getZoneStrings' return='java.lang.String[][]'/><method name='setAmPmStrings'><parameter name='data' type='java.lang.String[]'/></method><method name='setEras'><parameter name='data' type='java.lang.String[]'/></method><method name='setLocalPatternChars'><parameter name='data' type='java.lang.String'/></method><method name='setMonths'><parameter name='data' type='java.lang.String[]'/></method><method name='setShortMonths'><parameter name='data' type='java.lang.String[]'/></method><method name='setShortWeekdays'><parameter name='data' type='java.lang.String[]'/></method><method name='setWeekdays'><parameter name='data' type='java.lang.String[]'/></method><method name='setZoneStrings'><parameter name='data' type='java.lang.String[][]'/></method></class><class name='DecimalFormat' extends='java.text.NumberFormat'><constructor name='DecimalFormat' type='java.text.DecimalFormat'/><constructor name='DecimalFormat' type='java.text.DecimalFormat'><parameter name='pattern' type='java.lang.String'/></constructor><constructor name='DecimalFormat' type='java.text.DecimalFormat'><parameter name='pattern' type='java.lang.String'/><parameter name='value' type='java.text.DecimalFormatSymbols'/></constructor><method name='applyLocalizedPattern'><parameter name='pattern' type='java.lang.String'/></method><method name='applyPattern'><parameter name='pattern' type='java.lang.String'/></method><method name='format' return='java.lang.StringBuffer'><parameter name='value' type='double'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='position' type='java.text.FieldPosition'/></method><method name='format' return='java.lang.StringBuffer'><parameter name='value' type='long'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='position' type='java.text.FieldPosition'/></method><method name='format' final='true' return='java.lang.StringBuffer'><parameter name='number' type='java.lang.Object'/><parameter name='toAppendTo' type='java.lang.StringBuffer'/><parameter name='pos' type='java.text.FieldPosition'/></method><method name='getDecimalFormatSymbols' return='java.text.DecimalFormatSymbols'/><method name='getGroupingSize' return='int'/><method name='getMultiplier' return='int'/><method name='getNegativePrefix' return='java.lang.String'/><method name='getNegativeSuffix' return='java.lang.String'/><method name='getPositivePrefix' return='java.lang.String'/><method name='getPositiveSuffix' return='java.lang.String'/><method name='isDecimalSeparatorAlwaysShown' return='boolean'/><method name='isParseBigDecimal' return='boolean'/><method name='parse' return='java.lang.Number'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='setDecimalFormatSymbols'><parameter name='value' type='java.text.DecimalFormatSymbols'/></method><method name='setDecimalSeparatorAlwaysShown'><parameter name='value' type='boolean'/></method><method name='setGroupingSize'><parameter name='value' type='int'/></method><method name='setMultiplier'><parameter name='value' type='int'/></method><method name='setNegativePrefix'><parameter name='value' type='java.lang.String'/></method><method name='setNegativeSuffix'><parameter name='value' type='java.lang.String'/></method><method name='setParseBigDecimal'><parameter name='newValue' type='boolean'/></method><method name='setPositivePrefix'><parameter name='value' type='java.lang.String'/></method><method name='setPositiveSuffix'><parameter name='value' type='java.lang.String'/></method><method name='toLocalizedPattern' return='java.lang.String'/><method name='toPattern' return='java.lang.String'/></class><class name='DecimalFormatSymbols' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='DecimalFormatSymbols' type='java.text.DecimalFormatSymbols'/><constructor name='DecimalFormatSymbols' type='java.text.DecimalFormatSymbols'><parameter name='locale' type='java.util.Locale'/></constructor><method name='clone' return='java.lang.Object'/><method name='getCurrency' return='java.util.Currency'/><method name='getCurrencySymbol' return='java.lang.String'/><method name='getDecimalSeparator' return='char'/><method name='getDigit' return='char'/><method name='getGroupingSeparator' return='char'/><method name='getInfinity' return='java.lang.String'/><method name='getInternationalCurrencySymbol' return='java.lang.String'/><method name='getMinusSign' return='char'/><method name='getMonetaryDecimalSeparator' return='char'/><method name='getNaN' return='java.lang.String'/><method name='getPatternSeparator' return='char'/><method name='getPerMill' return='char'/><method name='getPercent' return='char'/><method name='getZeroDigit' return='char'/><method name='setCurrency'><parameter name='currency' type='java.util.Currency'/></method><method name='setCurrencySymbol'><parameter name='value' type='java.lang.String'/></method><method name='setDecimalSeparator'><parameter name='value' type='char'/></method><method name='setDigit'><parameter name='value' type='char'/></method><method name='setGroupingSeparator'><parameter name='value' type='char'/></method><method name='setInfinity'><parameter name='value' type='java.lang.String'/></method><method name='setInternationalCurrencySymbol'><parameter name='value' type='java.lang.String'/></method><method name='setMinusSign'><parameter name='value' type='char'/></method><method name='setMonetaryDecimalSeparator'><parameter name='value' type='char'/></method><method name='setNaN'><parameter name='value' type='java.lang.String'/></method><method name='setPatternSeparator'><parameter name='value' type='char'/></method><method name='setPerMill'><parameter name='value' type='char'/></method><method name='setPercent'><parameter name='value' type='char'/></method><method name='setZeroDigit'><parameter name='value' type='char'/></method></class><class name='FieldPosition' extends='java.lang.Object'><constructor name='FieldPosition' type='java.text.FieldPosition'><parameter name='field' type='int'/></constructor><constructor name='FieldPosition' type='java.text.FieldPosition'><parameter name='attribute' type='java.text.Format.Field'/></constructor><constructor name='FieldPosition' type='java.text.FieldPosition'><parameter name='attribute' type='java.text.Format.Field'/><parameter name='field' type='int'/></constructor><method name='getBeginIndex' return='int'/><method name='getEndIndex' return='int'/><method name='getField' return='int'/><method name='getFieldAttribute' return='java.text.Format.Field'/><method name='setBeginIndex'><parameter name='index' type='int'/></method><method name='setEndIndex'><parameter name='index' type='int'/></method></class><class name='Format' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='Format' type='java.text.Format'/><method name='clone' return='java.lang.Object'/><method name='format' final='true' return='java.lang.String'><parameter name='object' type='java.lang.Object'/></method><method name='format' abstract='true' return='java.lang.StringBuffer'><parameter name='object' type='java.lang.Object'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='formatToCharacterIterator' return='java.text.AttributedCharacterIterator'><parameter name='object' type='java.lang.Object'/></method><method name='parseObject' return='java.lang.Object'><parameter name='string' type='java.lang.String'/><exception name='ParseException' type='java.text.ParseException'/></method><method name='parseObject' abstract='true' return='java.lang.Object'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method></class><class name='Format.Field' extends='java.text.AttributedCharacterIterator.Attribute' static='true'><constructor name='Format.Field' type='java.text.Format.Field' visibility='protected'><parameter name='fieldName' type='java.lang.String'/></constructor></class><class name='MessageFormat' extends='java.text.Format'><constructor name='MessageFormat' type='java.text.MessageFormat'><parameter name='template' type='java.lang.String'/><parameter name='locale' type='java.util.Locale'/></constructor><constructor name='MessageFormat' type='java.text.MessageFormat'><parameter name='template' type='java.lang.String'/></constructor><method name='applyPattern'><parameter name='template' type='java.lang.String'/></method><method name='format' final='true' return='java.lang.StringBuffer'><parameter name='objects' type='java.lang.Object[]'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' final='true' return='java.lang.StringBuffer'><parameter name='object' type='java.lang.Object'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' static='true' return='java.lang.String'><parameter name='template' type='java.lang.String'/><parameter name='objects' type='java.lang.Object...'/></method><method name='getFormats' return='java.text.Format[]'/><method name='getFormatsByArgumentIndex' return='java.text.Format[]'/><method name='getLocale' return='java.util.Locale'/><method name='parse' return='java.lang.Object[]'><parameter name='string' type='java.lang.String'/><exception name='ParseException' type='java.text.ParseException'/></method><method name='parse' return='java.lang.Object[]'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='parseObject' return='java.lang.Object'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='setFormat'><parameter name='offset' type='int'/><parameter name='format' type='java.text.Format'/></method><method name='setFormatByArgumentIndex'><parameter name='argIndex' type='int'/><parameter name='format' type='java.text.Format'/></method><method name='setFormats'><parameter name='formats' type='java.text.Format[]'/></method><method name='setFormatsByArgumentIndex'><parameter name='formats' type='java.text.Format[]'/></method><method name='setLocale'><parameter name='locale' type='java.util.Locale'/></method><method name='toPattern' return='java.lang.String'/></class><class name='MessageFormat.Field' extends='java.text.Format.Field' static='true'><constructor name='MessageFormat.Field' type='java.text.MessageFormat.Field' visibility='protected'><parameter name='fieldName' type='java.lang.String'/></constructor><field name='ARGUMENT' final='true' static='true' type='java.text.MessageFormat.Field'/></class><class name='NumberFormat' extends='java.text.Format' abstract='true'><constructor name='NumberFormat' type='java.text.NumberFormat'/><field name='FRACTION_FIELD' final='true' static='true' value='1' type='int'/><field name='INTEGER_FIELD' final='true' static='true' value='0' type='int'/><method name='format' final='true' return='java.lang.String'><parameter name='value' type='double'/></method><method name='format' abstract='true' return='java.lang.StringBuffer'><parameter name='value' type='double'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' final='true' return='java.lang.String'><parameter name='value' type='long'/></method><method name='format' abstract='true' return='java.lang.StringBuffer'><parameter name='value' type='long'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='format' return='java.lang.StringBuffer'><parameter name='object' type='java.lang.Object'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/></method><method name='getAvailableLocales' static='true' return='java.util.Locale[]'/><method name='getCurrency' return='java.util.Currency'/><method name='getCurrencyInstance' final='true' static='true' return='java.text.NumberFormat'/><method name='getCurrencyInstance' static='true' return='java.text.NumberFormat'><parameter name='locale' type='java.util.Locale'/></method><method name='getInstance' final='true' static='true' return='java.text.NumberFormat'/><method name='getInstance' static='true' return='java.text.NumberFormat'><parameter name='locale' type='java.util.Locale'/></method><method name='getIntegerInstance' final='true' static='true' return='java.text.NumberFormat'/><method name='getIntegerInstance' static='true' return='java.text.NumberFormat'><parameter name='locale' type='java.util.Locale'/></method><method name='getMaximumFractionDigits' return='int'/><method name='getMaximumIntegerDigits' return='int'/><method name='getMinimumFractionDigits' return='int'/><method name='getMinimumIntegerDigits' return='int'/><method name='getNumberInstance' final='true' static='true' return='java.text.NumberFormat'/><method name='getNumberInstance' static='true' return='java.text.NumberFormat'><parameter name='locale' type='java.util.Locale'/></method><method name='getPercentInstance' final='true' static='true' return='java.text.NumberFormat'/><method name='getPercentInstance' static='true' return='java.text.NumberFormat'><parameter name='locale' type='java.util.Locale'/></method><method name='isGroupingUsed' return='boolean'/><method name='isParseIntegerOnly' return='boolean'/><method name='parse' return='java.lang.Number'><parameter name='string' type='java.lang.String'/><exception name='ParseException' type='java.text.ParseException'/></method><method name='parse' abstract='true' return='java.lang.Number'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='parseObject' final='true' return='java.lang.Object'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='setCurrency'><parameter name='currency' type='java.util.Currency'/></method><method name='setGroupingUsed'><parameter name='value' type='boolean'/></method><method name='setMaximumFractionDigits'><parameter name='value' type='int'/></method><method name='setMaximumIntegerDigits'><parameter name='value' type='int'/></method><method name='setMinimumFractionDigits'><parameter name='value' type='int'/></method><method name='setMinimumIntegerDigits'><parameter name='value' type='int'/></method><method name='setParseIntegerOnly'><parameter name='value' type='boolean'/></method></class><class name='NumberFormat.Field' extends='java.text.Format.Field' static='true'><constructor name='NumberFormat.Field' type='java.text.NumberFormat.Field' visibility='protected'><parameter name='fieldName' type='java.lang.String'/></constructor><field name='CURRENCY' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='DECIMAL_SEPARATOR' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='EXPONENT' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='EXPONENT_SIGN' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='EXPONENT_SYMBOL' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='FRACTION' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='GROUPING_SEPARATOR' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='INTEGER' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='PERCENT' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='PERMILLE' final='true' static='true' type='java.text.NumberFormat.Field'/><field name='SIGN' final='true' static='true' type='java.text.NumberFormat.Field'/></class><class name='ParseException' extends='java.lang.Exception'><constructor name='ParseException' type='java.text.ParseException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='location' type='int'/></constructor><method name='getErrorOffset' return='int'/></class><class name='ParsePosition' extends='java.lang.Object'><constructor name='ParsePosition' type='java.text.ParsePosition'><parameter name='index' type='int'/></constructor><method name='getErrorIndex' return='int'/><method name='getIndex' return='int'/><method name='setErrorIndex'><parameter name='index' type='int'/></method><method name='setIndex'><parameter name='index' type='int'/></method></class><class name='RuleBasedCollator' extends='java.text.Collator'><constructor name='RuleBasedCollator' type='java.text.RuleBasedCollator'><parameter name='rules' type='java.lang.String'/><exception name='ParseException' type='java.text.ParseException'/></constructor><method name='compare' return='int'><parameter name='source' type='java.lang.String'/><parameter name='target' type='java.lang.String'/></method><method name='getCollationElementIterator' return='java.text.CollationElementIterator'><parameter name='source' type='java.text.CharacterIterator'/></method><method name='getCollationElementIterator' return='java.text.CollationElementIterator'><parameter name='source' type='java.lang.String'/></method><method name='getCollationKey' return='java.text.CollationKey'><parameter name='source' type='java.lang.String'/></method><method name='getRules' return='java.lang.String'/><method name='hashCode' return='int'/></class><class name='SimpleDateFormat' extends='java.text.DateFormat'><constructor name='SimpleDateFormat' type='java.text.SimpleDateFormat'/><constructor name='SimpleDateFormat' type='java.text.SimpleDateFormat'><parameter name='pattern' type='java.lang.String'/></constructor><constructor name='SimpleDateFormat' type='java.text.SimpleDateFormat'><parameter name='template' type='java.lang.String'/><parameter name='value' type='java.text.DateFormatSymbols'/></constructor><constructor name='SimpleDateFormat' type='java.text.SimpleDateFormat'><parameter name='template' type='java.lang.String'/><parameter name='locale' type='java.util.Locale'/></constructor><method name='applyLocalizedPattern'><parameter name='template' type='java.lang.String'/></method><method name='applyPattern'><parameter name='template' type='java.lang.String'/></method><method name='format' api_removed='6' return='java.lang.StringBuffer'><parameter name='date' type='java.util.Date'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='field' type='java.text.FieldPosition'/><parameter name='fieldPos' type='java.text.FieldPosition'/></method><method name='get2DigitYearStart' return='java.util.Date'/><method name='getDateFormatSymbols' return='java.text.DateFormatSymbols'/><method name='parse' return='java.util.Date'><parameter name='string' type='java.lang.String'/><parameter name='position' type='java.text.ParsePosition'/></method><method name='set2DigitYearStart'><parameter name='date' type='java.util.Date'/></method><method name='setDateFormatSymbols'><parameter name='value' type='java.text.DateFormatSymbols'/></method><method name='toLocalizedPattern' return='java.lang.String'/><method name='toPattern' return='java.lang.String'/><method api_added='6' name='format' return='java.lang.StringBuffer'><parameter name='date' type='java.util.Date'/><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='fieldPos' type='java.text.FieldPosition'/></method></class><class name='StringCharacterIterator' final='true' extends='java.lang.Object'><implements name='java.text.CharacterIterator'/><constructor name='StringCharacterIterator' type='java.text.StringCharacterIterator'><parameter name='value' type='java.lang.String'/></constructor><constructor name='StringCharacterIterator' type='java.text.StringCharacterIterator'><parameter name='value' type='java.lang.String'/><parameter name='location' type='int'/></constructor><constructor name='StringCharacterIterator' type='java.text.StringCharacterIterator'><parameter name='value' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='location' type='int'/></constructor><method name='clone' return='java.lang.Object'/><method name='current' return='char'/><method name='first' return='char'/><method name='getBeginIndex' return='int'/><method name='getEndIndex' return='int'/><method name='getIndex' return='int'/><method name='last' return='char'/><method name='next' return='char'/><method name='previous' return='char'/><method name='setIndex' return='char'><parameter name='location' type='int'/></method><method name='setText'><parameter name='value' type='java.lang.String'/></method></class><interface name='AttributedCharacterIterator' abstract='true'><implements name='java.text.CharacterIterator'/><method name='getAllAttributeKeys' abstract='true' return='java.util.Set&lt;java.text.AttributedCharacterIterator.Attribute&gt;'/><method name='getAttribute' abstract='true' return='java.lang.Object'><parameter name='attribute' type='java.text.AttributedCharacterIterator.Attribute'/></method><method name='getAttributes' abstract='true' return='java.util.Map&lt;java.text.AttributedCharacterIterator.Attribute, java.lang.Object&gt;'/><method name='getRunLimit' abstract='true' return='int'/><method name='getRunLimit' abstract='true' return='int'><parameter name='attribute' type='java.text.AttributedCharacterIterator.Attribute'/></method><method name='getRunLimit' abstract='true' return='int'><parameter name='attributes' type='java.util.Set&lt;? extends java.text.AttributedCharacterIterator.Attribute&gt;'/></method><method name='getRunStart' abstract='true' return='int'/><method name='getRunStart' abstract='true' return='int'><parameter name='attribute' type='java.text.AttributedCharacterIterator.Attribute'/></method><method name='getRunStart' abstract='true' return='int'><parameter name='attributes' type='java.util.Set&lt;? extends java.text.AttributedCharacterIterator.Attribute&gt;'/></method></interface><interface name='CharacterIterator' abstract='true'><implements name='java.lang.Cloneable'/><field name='DONE' final='true' static='true' value='65535' type='char'/><method name='clone' abstract='true' return='java.lang.Object'/><method name='current' abstract='true' return='char'/><method name='first' abstract='true' return='char'/><method name='getBeginIndex' abstract='true' return='int'/><method name='getEndIndex' abstract='true' return='int'/><method name='getIndex' abstract='true' return='int'/><method name='last' abstract='true' return='char'/><method name='next' abstract='true' return='char'/><method name='previous' abstract='true' return='char'/><method name='setIndex' abstract='true' return='char'><parameter name='location' type='int'/></method></interface></package><package name='java.util'><class name='AbstractCollection' extends='java.lang.Object' abstract='true'><implements name='java.util.Collection'/><constructor name='AbstractCollection' type='java.util.AbstractCollection' visibility='protected'/><method name='add' return='boolean'><parameter name='object' type='E'/></method><method name='addAll' return='boolean'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='clear'/><method name='contains' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='containsAll' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='isEmpty' return='boolean'/><method name='iterator' abstract='true' return='java.util.Iterator&lt;E&gt;'/><method name='remove' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='removeAll' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='retainAll' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='size' abstract='true' return='int'/><method name='toArray' return='java.lang.Object[]'/><method name='toArray' return='T[]'><parameter name='contents' type='T[]'/></method></class><class name='AbstractList' extends='java.util.AbstractCollection' abstract='true'><implements name='java.util.List'/><constructor name='AbstractList' type='java.util.AbstractList' visibility='protected'/><field name='modCount' transient='true' type='int' visibility='protected'/><method name='add'><parameter name='location' type='int'/><parameter name='object' type='E'/></method><method name='addAll' return='boolean'><parameter name='location' type='int'/><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='get' abstract='true' return='E'><parameter name='location' type='int'/></method><method name='indexOf' return='int'><parameter name='object' type='java.lang.Object'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='lastIndexOf' return='int'><parameter name='object' type='java.lang.Object'/></method><method name='listIterator' return='java.util.ListIterator&lt;E&gt;'/><method name='listIterator' return='java.util.ListIterator&lt;E&gt;'><parameter name='location' type='int'/></method><method name='remove' return='E'><parameter name='location' type='int'/></method><method name='removeRange' visibility='protected'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='set' return='E'><parameter name='location' type='int'/><parameter name='object' type='E'/></method><method name='subList' return='java.util.List&lt;E&gt;'><parameter name='start' type='int'/><parameter name='end' type='int'/></method></class><class name='AbstractMap' extends='java.lang.Object' abstract='true'><implements name='java.util.Map'/><constructor name='AbstractMap' type='java.util.AbstractMap' visibility='protected'/><method name='clear'/><method name='containsKey' return='boolean'><parameter name='key' type='java.lang.Object'/></method><method name='containsValue' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='entrySet' abstract='true' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/><method name='get' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='isEmpty' return='boolean'/><method name='keySet' return='java.util.Set&lt;K&gt;'/><method name='put' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='putAll'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></method><method name='remove' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='size' return='int'/><method name='values' return='java.util.Collection&lt;V&gt;'/></class><class name='AbstractQueue' extends='java.util.AbstractCollection' abstract='true'><implements name='java.util.Queue'/><constructor name='AbstractQueue' type='java.util.AbstractQueue' visibility='protected'/><method name='element' return='E'/><method name='remove' return='E'/></class><class name='AbstractSequentialList' extends='java.util.AbstractList' abstract='true'><constructor name='AbstractSequentialList' type='java.util.AbstractSequentialList' visibility='protected'/><method name='get' return='E'><parameter name='location' type='int'/></method><method name='listIterator' abstract='true' return='java.util.ListIterator&lt;E&gt;'><parameter name='location' type='int'/></method></class><class name='AbstractSet' extends='java.util.AbstractCollection' abstract='true'><implements name='java.util.Set'/><constructor name='AbstractSet' type='java.util.AbstractSet' visibility='protected'/></class><class name='ArrayList' extends='java.util.AbstractList'><implements name='java.lang.Cloneable'/><implements name='java.util.List'/><implements name='java.util.RandomAccess'/><implements name='java.io.Serializable'/><constructor name='ArrayList' type='java.util.ArrayList'/><constructor name='ArrayList' type='java.util.ArrayList'><parameter name='capacity' type='int'/></constructor><constructor name='ArrayList' type='java.util.ArrayList'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='ensureCapacity'><parameter name='minimumCapacity' type='int'/></method><method name='get' return='E'><parameter name='location' type='int'/><parameter name='index' type='int'/></method><method name='size' return='int'/><method name='trimToSize'/></class><class name='Arrays' extends='java.lang.Object'><method name='asList' static='true' return='java.util.List&lt;T&gt;'><parameter name='array' type='T...'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='byte[]'/><parameter name='value' type='byte'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='char[]'/><parameter name='value' type='char'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='double[]'/><parameter name='value' type='double'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='float[]'/><parameter name='value' type='float'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='int[]'/><parameter name='value' type='int'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='long[]'/><parameter name='value' type='long'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='java.lang.Object[]'/><parameter name='object' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='T[]'/><parameter name='object' type='T'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/><parameter name='value' type='T'/></method><method name='binarySearch' static='true' return='int'><parameter name='array' type='short[]'/><parameter name='value' type='short'/></method><method name='deepEquals' static='true' return='boolean'><parameter name='array1' type='java.lang.Object[]'/><parameter name='array2' type='java.lang.Object[]'/></method><method name='deepHashCode' static='true' return='int'><parameter name='array' type='java.lang.Object[]'/></method><method name='deepToString' static='true' return='java.lang.String'><parameter name='array' type='java.lang.Object[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='byte[]'/><parameter name='array2' type='byte[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='short[]'/><parameter name='array2' type='short[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='char[]'/><parameter name='array2' type='char[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='int[]'/><parameter name='array2' type='int[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='long[]'/><parameter name='array2' type='long[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='float[]'/><parameter name='array2' type='float[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='double[]'/><parameter name='array2' type='double[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='boolean[]'/><parameter name='array2' type='boolean[]'/></method><method name='equals' static='true' return='boolean'><parameter name='array1' type='java.lang.Object[]'/><parameter name='array2' type='java.lang.Object[]'/></method><method name='fill' static='true'><parameter name='array' type='byte[]'/><parameter name='value' type='byte'/></method><method name='fill' static='true'><parameter name='array' type='byte[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='byte'/></method><method name='fill' static='true'><parameter name='array' type='short[]'/><parameter name='value' type='short'/></method><method name='fill' static='true'><parameter name='array' type='short[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='short'/></method><method name='fill' static='true'><parameter name='array' type='char[]'/><parameter name='value' type='char'/></method><method name='fill' static='true'><parameter name='array' type='char[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='char'/></method><method name='fill' static='true'><parameter name='array' type='int[]'/><parameter name='value' type='int'/></method><method name='fill' static='true'><parameter name='array' type='int[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='int'/></method><method name='fill' static='true'><parameter name='array' type='long[]'/><parameter name='value' type='long'/></method><method name='fill' static='true'><parameter name='array' type='long[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='long'/></method><method name='fill' static='true'><parameter name='array' type='float[]'/><parameter name='value' type='float'/></method><method name='fill' static='true'><parameter name='array' type='float[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='float'/></method><method name='fill' static='true'><parameter name='array' type='double[]'/><parameter name='value' type='double'/></method><method name='fill' static='true'><parameter name='array' type='double[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='double'/></method><method name='fill' static='true'><parameter name='array' type='boolean[]'/><parameter name='value' type='boolean'/></method><method name='fill' static='true'><parameter name='array' type='boolean[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='boolean'/></method><method name='fill' static='true'><parameter name='array' type='java.lang.Object[]'/><parameter name='value' type='java.lang.Object'/></method><method name='fill' static='true'><parameter name='array' type='java.lang.Object[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='value' type='java.lang.Object'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='boolean[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='int[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='short[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='char[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='byte[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='long[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='float[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='double[]'/></method><method name='hashCode' static='true' return='int'><parameter name='array' type='java.lang.Object[]'/></method><method name='sort' static='true'><parameter name='array' type='byte[]'/></method><method name='sort' static='true'><parameter name='array' type='byte[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='char[]'/></method><method name='sort' static='true'><parameter name='array' type='char[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='double[]'/></method><method name='sort' static='true'><parameter name='array' type='double[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='float[]'/></method><method name='sort' static='true'><parameter name='array' type='float[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='int[]'/></method><method name='sort' static='true'><parameter name='array' type='int[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='long[]'/></method><method name='sort' static='true'><parameter name='array' type='long[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='java.lang.Object[]'/></method><method name='sort' static='true'><parameter name='array' type='java.lang.Object[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='sort' static='true'><parameter name='array' type='T[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='sort' static='true'><parameter name='array' type='T[]'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='sort' static='true'><parameter name='array' type='short[]'/></method><method name='sort' static='true'><parameter name='array' type='short[]'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='boolean[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='byte[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='char[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='double[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='float[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='int[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='long[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='short[]'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='array' type='java.lang.Object[]'/></method></class><class name='BitSet' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='BitSet' type='java.util.BitSet'/><constructor name='BitSet' type='java.util.BitSet'><parameter name='nbits' type='int'/></constructor><method name='and'><parameter name='bs' type='java.util.BitSet'/></method><method name='andNot'><parameter name='bs' type='java.util.BitSet'/></method><method name='cardinality' return='int'/><method name='clear'/><method name='clear'><parameter name='pos' type='int'/></method><method name='clear'><parameter name='pos1' type='int'/><parameter name='pos2' type='int'/></method><method name='clone' return='java.lang.Object'/><method name='flip'><parameter name='pos' type='int'/></method><method name='flip'><parameter name='pos1' type='int'/><parameter name='pos2' type='int'/></method><method name='get' return='boolean'><parameter name='pos' type='int'/></method><method name='get' return='java.util.BitSet'><parameter name='pos1' type='int'/><parameter name='pos2' type='int'/></method><method name='intersects' return='boolean'><parameter name='bs' type='java.util.BitSet'/></method><method name='isEmpty' return='boolean'/><method name='length' return='int'/><method name='nextClearBit' return='int'><parameter name='pos' type='int'/></method><method name='nextSetBit' return='int'><parameter name='pos' type='int'/></method><method name='or'><parameter name='bs' type='java.util.BitSet'/></method><method name='set'><parameter name='pos' type='int'/></method><method name='set'><parameter name='pos' type='int'/><parameter name='val' type='boolean'/></method><method name='set'><parameter name='pos1' type='int'/><parameter name='pos2' type='int'/></method><method name='set'><parameter name='pos1' type='int'/><parameter name='pos2' type='int'/><parameter name='val' type='boolean'/></method><method name='size' return='int'/><method name='xor'><parameter name='bs' type='java.util.BitSet'/></method></class><class name='Calendar' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='Calendar' type='java.util.Calendar' visibility='protected'/><constructor name='Calendar' type='java.util.Calendar' visibility='protected'><parameter name='timezone' type='java.util.TimeZone'/><parameter name='locale' type='java.util.Locale'/></constructor><field name='AM' final='true' static='true' value='0' type='int'/><field name='AM_PM' final='true' static='true' value='9' type='int'/><field name='APRIL' final='true' static='true' value='3' type='int'/><field name='AUGUST' final='true' static='true' value='7' type='int'/><field name='DATE' final='true' static='true' value='5' type='int'/><field name='DAY_OF_MONTH' final='true' static='true' value='5' type='int'/><field name='DAY_OF_WEEK' final='true' static='true' value='7' type='int'/><field name='DAY_OF_WEEK_IN_MONTH' final='true' static='true' value='8' type='int'/><field name='DAY_OF_YEAR' final='true' static='true' value='6' type='int'/><field name='DECEMBER' final='true' static='true' value='11' type='int'/><field name='DST_OFFSET' final='true' static='true' value='16' type='int'/><field name='ERA' final='true' static='true' value='0' type='int'/><field name='FEBRUARY' final='true' static='true' value='1' type='int'/><field name='FIELD_COUNT' final='true' static='true' value='17' type='int'/><field name='FRIDAY' final='true' static='true' value='6' type='int'/><field name='HOUR' final='true' static='true' value='10' type='int'/><field name='HOUR_OF_DAY' final='true' static='true' value='11' type='int'/><field name='JANUARY' final='true' static='true' value='0' type='int'/><field name='JULY' final='true' static='true' value='6' type='int'/><field name='JUNE' final='true' static='true' value='5' type='int'/><field name='MARCH' final='true' static='true' value='2' type='int'/><field name='MAY' final='true' static='true' value='4' type='int'/><field name='MILLISECOND' final='true' static='true' value='14' type='int'/><field name='MINUTE' final='true' static='true' value='12' type='int'/><field name='MONDAY' final='true' static='true' value='2' type='int'/><field name='MONTH' final='true' static='true' value='2' type='int'/><field name='NOVEMBER' final='true' static='true' value='10' type='int'/><field name='OCTOBER' final='true' static='true' value='9' type='int'/><field name='PM' final='true' static='true' value='1' type='int'/><field name='SATURDAY' final='true' static='true' value='7' type='int'/><field name='SECOND' final='true' static='true' value='13' type='int'/><field name='SEPTEMBER' final='true' static='true' value='8' type='int'/><field name='SUNDAY' final='true' static='true' value='1' type='int'/><field name='THURSDAY' final='true' static='true' value='5' type='int'/><field name='TUESDAY' final='true' static='true' value='3' type='int'/><field name='UNDECIMBER' final='true' static='true' value='12' type='int'/><field name='WEDNESDAY' final='true' static='true' value='4' type='int'/><field name='WEEK_OF_MONTH' final='true' static='true' value='4' type='int'/><field name='WEEK_OF_YEAR' final='true' static='true' value='3' type='int'/><field name='YEAR' final='true' static='true' value='1' type='int'/><field name='ZONE_OFFSET' final='true' static='true' value='15' type='int'/><field name='areFieldsSet' type='boolean' visibility='protected'/><field name='fields' value='null' type='int[]' visibility='protected'/><field name='isSet' value='null' type='boolean[]' visibility='protected'/><field name='isTimeSet' type='boolean' visibility='protected'/><field name='time' type='long' visibility='protected'/><method name='add' abstract='true'><parameter name='field' type='int'/><parameter name='value' type='int'/></method><method name='after' return='boolean'><parameter name='calendar' type='java.lang.Object'/></method><method name='before' return='boolean'><parameter name='calendar' type='java.lang.Object'/></method><method name='clear' final='true'/><method name='clear' final='true'><parameter name='field' type='int'/></method><method name='clone' return='java.lang.Object'/><method name='compareTo' return='int'><parameter name='anotherCalendar' type='java.util.Calendar'/></method><method name='complete' visibility='protected'/><method name='computeFields' abstract='true' visibility='protected'/><method name='computeTime' abstract='true' visibility='protected'/><method name='get' return='int'><parameter name='field' type='int'/></method><method name='getActualMaximum' return='int'><parameter name='field' type='int'/></method><method name='getActualMinimum' return='int'><parameter name='field' type='int'/></method><method name='getAvailableLocales' synchronized='true' static='true' return='java.util.Locale[]'/><method name='getFirstDayOfWeek' return='int'/><method name='getGreatestMinimum' abstract='true' return='int'><parameter name='field' type='int'/></method><method name='getInstance' synchronized='true' static='true' return='java.util.Calendar'/><method name='getInstance' synchronized='true' static='true' return='java.util.Calendar'><parameter name='locale' type='java.util.Locale'/></method><method name='getInstance' synchronized='true' static='true' return='java.util.Calendar'><parameter name='timezone' type='java.util.TimeZone'/></method><method name='getInstance' synchronized='true' static='true' return='java.util.Calendar'><parameter name='timezone' type='java.util.TimeZone'/><parameter name='locale' type='java.util.Locale'/></method><method name='getLeastMaximum' abstract='true' return='int'><parameter name='field' type='int'/></method><method name='getMaximum' abstract='true' return='int'><parameter name='field' type='int'/></method><method name='getMinimalDaysInFirstWeek' return='int'/><method name='getMinimum' abstract='true' return='int'><parameter name='field' type='int'/></method><method name='getTime' final='true' return='java.util.Date'/><method name='getTimeInMillis' return='long'/><method name='getTimeZone' return='java.util.TimeZone'/><method name='internalGet' final='true' visibility='protected' return='int'><parameter name='field' type='int'/></method><method name='isLenient' return='boolean'/><method name='isSet' final='true' return='boolean'><parameter name='field' type='int'/></method><method name='roll'><parameter name='field' type='int'/><parameter name='value' type='int'/></method><method name='roll' abstract='true'><parameter name='field' type='int'/><parameter name='increment' type='boolean'/></method><method name='set'><parameter name='field' type='int'/><parameter name='value' type='int'/></method><method name='set' final='true'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/></method><method name='set' final='true'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/></method><method name='set' final='true'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hourOfDay' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></method><method name='setFirstDayOfWeek'><parameter name='value' type='int'/></method><method name='setLenient'><parameter name='value' type='boolean'/></method><method name='setMinimalDaysInFirstWeek'><parameter name='value' type='int'/></method><method name='setTime' final='true'><parameter name='date' type='java.util.Date'/></method><method name='setTimeInMillis'><parameter name='milliseconds' type='long'/></method><method name='setTimeZone'><parameter name='timezone' type='java.util.TimeZone'/></method></class><class name='Collections' extends='java.lang.Object'><field name='EMPTY_LIST' final='true' static='true' type='java.util.List'/><field name='EMPTY_MAP' final='true' static='true' type='java.util.Map'/><field name='EMPTY_SET' final='true' static='true' type='java.util.Set'/><method name='addAll' static='true' return='boolean'><parameter name='c' type='java.util.Collection&lt;? super T&gt;'/><parameter name='a' type='T...'/></method><method name='binarySearch' static='true' return='int'><parameter name='list' type='java.util.List&lt;? extends java.lang.Comparable&lt;? super T&gt;&gt;'/><parameter name='object' type='T'/></method><method name='binarySearch' static='true' return='int'><parameter name='list' type='java.util.List&lt;? extends T&gt;'/><parameter name='object' type='T'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='checkedCollection' static='true' return='java.util.Collection&lt;E&gt;'><parameter name='c' type='java.util.Collection&lt;E&gt;'/><parameter name='type' type='java.lang.Class&lt;E&gt;'/></method><method name='checkedList' static='true' return='java.util.List&lt;E&gt;'><parameter name='list' type='java.util.List&lt;E&gt;'/><parameter name='type' type='java.lang.Class&lt;E&gt;'/></method><method name='checkedMap' static='true' return='java.util.Map&lt;K, V&gt;'><parameter name='m' type='java.util.Map&lt;K, V&gt;'/><parameter name='keyType' type='java.lang.Class&lt;K&gt;'/><parameter name='valueType' type='java.lang.Class&lt;V&gt;'/></method><method name='checkedSet' static='true' return='java.util.Set&lt;E&gt;'><parameter name='s' type='java.util.Set&lt;E&gt;'/><parameter name='type' type='java.lang.Class&lt;E&gt;'/></method><method name='checkedSortedMap' static='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='m' type='java.util.SortedMap&lt;K, V&gt;'/><parameter name='keyType' type='java.lang.Class&lt;K&gt;'/><parameter name='valueType' type='java.lang.Class&lt;V&gt;'/></method><method name='checkedSortedSet' static='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='s' type='java.util.SortedSet&lt;E&gt;'/><parameter name='type' type='java.lang.Class&lt;E&gt;'/></method><method name='copy' static='true'><parameter name='destination' type='java.util.List&lt;? super T&gt;'/><parameter name='source' type='java.util.List&lt;? extends T&gt;'/></method><method name='disjoint' static='true' return='boolean'><parameter name='c1' type='java.util.Collection&lt;?&gt;'/><parameter name='c2' type='java.util.Collection&lt;?&gt;'/></method><method name='emptyList' final='true' static='true' return='java.util.List&lt;T&gt;'/><method name='emptyMap' final='true' static='true' return='java.util.Map&lt;K, V&gt;'/><method name='emptySet' final='true' static='true' return='java.util.Set&lt;T&gt;'/><method name='enumeration' static='true' return='java.util.Enumeration&lt;T&gt;'><parameter name='collection' type='java.util.Collection&lt;T&gt;'/></method><method name='fill' static='true'><parameter name='list' type='java.util.List&lt;? super T&gt;'/><parameter name='object' type='T'/></method><method name='frequency' static='true' return='int'><parameter name='c' type='java.util.Collection&lt;?&gt;'/><parameter name='o' type='java.lang.Object'/></method><method name='indexOfSubList' static='true' return='int'><parameter name='list' type='java.util.List&lt;?&gt;'/><parameter name='sublist' type='java.util.List&lt;?&gt;'/></method><method name='lastIndexOfSubList' static='true' return='int'><parameter name='list' type='java.util.List&lt;?&gt;'/><parameter name='sublist' type='java.util.List&lt;?&gt;'/></method><method name='list' static='true' return='java.util.ArrayList&lt;T&gt;'><parameter name='enumeration' type='java.util.Enumeration&lt;T&gt;'/></method><method name='max' static='true' return='T'><parameter name='collection' type='java.util.Collection&lt;? extends T&gt;'/></method><method name='max' static='true' return='T'><parameter name='collection' type='java.util.Collection&lt;? extends T&gt;'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='min' static='true' return='T'><parameter name='collection' type='java.util.Collection&lt;? extends T&gt;'/></method><method name='min' static='true' return='T'><parameter name='collection' type='java.util.Collection&lt;? extends T&gt;'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='nCopies' static='true' return='java.util.List&lt;T&gt;'><parameter name='length' type='int'/><parameter name='object' type='T'/></method><method name='replaceAll' static='true' return='boolean'><parameter name='list' type='java.util.List&lt;T&gt;'/><parameter name='obj' type='T'/><parameter name='obj2' type='T'/></method><method name='reverse' static='true'><parameter name='list' type='java.util.List&lt;?&gt;'/></method><method name='reverseOrder' static='true' return='java.util.Comparator&lt;T&gt;'/><method name='reverseOrder' static='true' return='java.util.Comparator&lt;T&gt;'><parameter name='c' type='java.util.Comparator&lt;T&gt;'/></method><method name='rotate' static='true'><parameter name='lst' type='java.util.List&lt;?&gt;'/><parameter name='dist' type='int'/></method><method name='shuffle' static='true'><parameter name='list' type='java.util.List&lt;?&gt;'/></method><method name='shuffle' static='true'><parameter name='list' type='java.util.List&lt;?&gt;'/><parameter name='random' type='java.util.Random'/></method><method name='singleton' static='true' return='java.util.Set&lt;E&gt;'><parameter name='object' type='E'/></method><method name='singletonList' static='true' return='java.util.List&lt;E&gt;'><parameter name='object' type='E'/></method><method name='singletonMap' static='true' return='java.util.Map&lt;K, V&gt;'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='sort' static='true'><parameter name='list' type='java.util.List&lt;T&gt;'/></method><method name='sort' static='true'><parameter name='list' type='java.util.List&lt;T&gt;'/><parameter name='comparator' type='java.util.Comparator&lt;? super T&gt;'/></method><method name='swap' static='true'><parameter name='list' type='java.util.List&lt;?&gt;'/><parameter name='index1' type='int'/><parameter name='index2' type='int'/></method><method name='synchronizedCollection' static='true' return='java.util.Collection&lt;T&gt;'><parameter name='collection' type='java.util.Collection&lt;T&gt;'/></method><method name='synchronizedList' static='true' return='java.util.List&lt;T&gt;'><parameter name='list' type='java.util.List&lt;T&gt;'/></method><method name='synchronizedMap' static='true' return='java.util.Map&lt;K, V&gt;'><parameter name='map' type='java.util.Map&lt;K, V&gt;'/></method><method name='synchronizedSet' static='true' return='java.util.Set&lt;E&gt;'><parameter name='set' type='java.util.Set&lt;E&gt;'/></method><method name='synchronizedSortedMap' static='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='map' type='java.util.SortedMap&lt;K, V&gt;'/></method><method name='synchronizedSortedSet' static='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='set' type='java.util.SortedSet&lt;E&gt;'/></method><method name='unmodifiableCollection' static='true' return='java.util.Collection&lt;E&gt;'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='unmodifiableList' static='true' return='java.util.List&lt;E&gt;'><parameter name='list' type='java.util.List&lt;? extends E&gt;'/></method><method name='unmodifiableMap' static='true' return='java.util.Map&lt;K, V&gt;'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></method><method name='unmodifiableSet' static='true' return='java.util.Set&lt;E&gt;'><parameter name='set' type='java.util.Set&lt;? extends E&gt;'/></method><method name='unmodifiableSortedMap' static='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='map' type='java.util.SortedMap&lt;K, ? extends V&gt;'/></method><method name='unmodifiableSortedSet' static='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='set' type='java.util.SortedSet&lt;E&gt;'/></method></class><class name='ConcurrentModificationException' extends='java.lang.RuntimeException'><constructor name='ConcurrentModificationException' type='java.util.ConcurrentModificationException'/><constructor name='ConcurrentModificationException' type='java.util.ConcurrentModificationException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Currency' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><method name='getCurrencyCode' return='java.lang.String'/><method name='getDefaultFractionDigits' return='int'/><method name='getInstance' static='true' return='java.util.Currency'><parameter name='currencyCode' type='java.lang.String'/></method><method name='getInstance' static='true' return='java.util.Currency'><parameter name='locale' type='java.util.Locale'/></method><method name='getSymbol' return='java.lang.String'/><method name='getSymbol' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method></class><class name='Date' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='Date' type='java.util.Date'/><constructor name='Date' type='java.util.Date' deprecated='1'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/></constructor><constructor name='Date' type='java.util.Date' deprecated='1'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/></constructor><constructor name='Date' type='java.util.Date' deprecated='1'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></constructor><constructor name='Date' type='java.util.Date'><parameter name='milliseconds' type='long'/></constructor><constructor name='Date' type='java.util.Date' deprecated='1'><parameter name='string' type='java.lang.String'/></constructor><method name='UTC' static='true' deprecated='1' return='long'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></method><method name='after' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='before' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='clone' return='java.lang.Object'/><method name='compareTo' return='int'><parameter name='date' type='java.util.Date'/></method><method name='getDate' deprecated='1' return='int'/><method name='getDay' deprecated='1' return='int'/><method name='getHours' deprecated='1' return='int'/><method name='getMinutes' deprecated='1' return='int'/><method name='getMonth' deprecated='1' return='int'/><method name='getSeconds' deprecated='1' return='int'/><method name='getTime' return='long'/><method name='getTimezoneOffset' deprecated='1' return='int'/><method name='getYear' deprecated='1' return='int'/><method name='parse' static='true' deprecated='1' return='long'><parameter name='string' type='java.lang.String'/></method><method name='setDate' deprecated='1'><parameter name='day' type='int'/></method><method name='setHours' deprecated='1'><parameter name='hour' type='int'/></method><method name='setMinutes' deprecated='1'><parameter name='minute' type='int'/></method><method name='setMonth' deprecated='1'><parameter name='month' type='int'/></method><method name='setSeconds' deprecated='1'><parameter name='second' type='int'/></method><method name='setTime'><parameter name='milliseconds' type='long'/></method><method name='setYear' deprecated='1'><parameter name='year' type='int'/></method><method name='toGMTString' deprecated='1' return='java.lang.String'/><method name='toLocaleString' deprecated='1' return='java.lang.String'/></class><class name='Dictionary' extends='java.lang.Object' abstract='true'><constructor name='Dictionary' type='java.util.Dictionary'/><method name='elements' abstract='true' return='java.util.Enumeration&lt;V&gt;'/><method name='get' abstract='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='isEmpty' abstract='true' return='boolean'/><method name='keys' abstract='true' return='java.util.Enumeration&lt;K&gt;'/><method name='put' abstract='true' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='remove' abstract='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='size' abstract='true' return='int'/></class><class name='DuplicateFormatFlagsException' extends='java.util.IllegalFormatException'><constructor name='DuplicateFormatFlagsException' type='java.util.DuplicateFormatFlagsException'><parameter name='f' type='java.lang.String'/></constructor><method name='getFlags' return='java.lang.String'/></class><class name='EmptyStackException' extends='java.lang.RuntimeException'><constructor name='EmptyStackException' type='java.util.EmptyStackException'/></class><class name='EnumMap' extends='java.util.AbstractMap'><implements name='java.lang.Cloneable'/><implements name='java.util.Map'/><implements name='java.io.Serializable'/><constructor name='EnumMap' type='java.util.EnumMap'><parameter name='keyType' type='java.lang.Class&lt;K&gt;'/></constructor><constructor name='EnumMap' type='java.util.EnumMap'><parameter name='map' type='java.util.EnumMap&lt;K, ? extends V&gt;'/></constructor><constructor name='EnumMap' type='java.util.EnumMap'><parameter name='map' type='java.util.Map&lt;K, ? extends V&gt;'/></constructor><method name='clone' return='java.util.EnumMap&lt;K, V&gt;'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/></class><class name='EnumSet' extends='java.util.AbstractSet' abstract='true'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><method name='allOf' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='elementType' type='java.lang.Class&lt;E&gt;'/></method><method name='clone' return='java.util.EnumSet&lt;E&gt;'/><method name='complementOf' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='s' type='java.util.EnumSet&lt;E&gt;'/></method><method name='copyOf' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='s' type='java.util.EnumSet&lt;E&gt;'/></method><method name='copyOf' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='c' type='java.util.Collection&lt;E&gt;'/></method><method name='noneOf' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='elementType' type='java.lang.Class&lt;E&gt;'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='e' type='E'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='e1' type='E'/><parameter name='e2' type='E'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='e1' type='E'/><parameter name='e2' type='E'/><parameter name='e3' type='E'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='e1' type='E'/><parameter name='e2' type='E'/><parameter name='e3' type='E'/><parameter name='e4' type='E'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='e1' type='E'/><parameter name='e2' type='E'/><parameter name='e3' type='E'/><parameter name='e4' type='E'/><parameter name='e5' type='E'/></method><method name='of' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='start' type='E'/><parameter name='others' type='E...'/></method><method name='range' static='true' return='java.util.EnumSet&lt;E&gt;'><parameter name='start' type='E'/><parameter name='end' type='E'/></method></class><class name='EventListenerProxy' extends='java.lang.Object' abstract='true'><implements name='java.util.EventListener'/><constructor name='EventListenerProxy' type='java.util.EventListenerProxy'><parameter name='listener' type='java.util.EventListener'/></constructor><method name='getListener' return='java.util.EventListener'/></class><class name='EventObject' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='EventObject' type='java.util.EventObject'><parameter name='source' type='java.lang.Object'/></constructor><field name='source' transient='true' type='java.lang.Object' visibility='protected'/><method name='getSource' return='java.lang.Object'/></class><class name='FormatFlagsConversionMismatchException' extends='java.util.IllegalFormatException'><implements name='java.io.Serializable'/><constructor name='FormatFlagsConversionMismatchException' type='java.util.FormatFlagsConversionMismatchException'><parameter name='f' type='java.lang.String'/><parameter name='c' type='char'/></constructor><method name='getConversion' return='char'/><method name='getFlags' return='java.lang.String'/></class><class name='FormattableFlags' extends='java.lang.Object'><field name='ALTERNATE' final='true' static='true' value='4' type='int'/><field name='LEFT_JUSTIFY' final='true' static='true' value='1' type='int'/><field name='UPPERCASE' final='true' static='true' value='2' type='int'/></class><class name='Formatter' final='true' extends='java.lang.Object'><implements name='java.io.Closeable'/><implements name='java.io.Flushable'/><constructor name='Formatter' type='java.util.Formatter'/><constructor name='Formatter' type='java.util.Formatter'><parameter name='a' type='java.lang.Appendable'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='l' type='java.util.Locale'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='a' type='java.lang.Appendable'/><parameter name='l' type='java.util.Locale'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='fileName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='fileName' type='java.lang.String'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='fileName' type='java.lang.String'/><parameter name='csn' type='java.lang.String'/><parameter name='l' type='java.util.Locale'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='file' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='file' type='java.io.File'/><parameter name='csn' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='file' type='java.io.File'/><parameter name='csn' type='java.lang.String'/><parameter name='l' type='java.util.Locale'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='os' type='java.io.OutputStream'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='os' type='java.io.OutputStream'/><parameter name='csn' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='os' type='java.io.OutputStream'/><parameter name='csn' type='java.lang.String'/><parameter name='l' type='java.util.Locale'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='Formatter' type='java.util.Formatter'><parameter name='ps' type='java.io.PrintStream'/></constructor><method name='close'/><method name='flush'/><method name='format' return='java.util.Formatter'><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='format' return='java.util.Formatter'><parameter name='l' type='java.util.Locale'/><parameter name='format' type='java.lang.String'/><parameter name='args' type='java.lang.Object...'/></method><method name='ioException' return='java.io.IOException'/><method name='locale' return='java.util.Locale'/><method name='out' return='java.lang.Appendable'/></class><class name='Formatter.BigDecimalLayoutForm' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='java.util.Formatter.BigDecimalLayoutForm'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.util.Formatter.BigDecimalLayoutForm[]'/></class><class name='FormatterClosedException' extends='java.lang.IllegalStateException'><implements name='java.io.Serializable'/><constructor name='FormatterClosedException' type='java.util.FormatterClosedException'/></class><class name='GregorianCalendar' extends='java.util.Calendar'><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'/><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/></constructor><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/></constructor><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></constructor><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='locale' type='java.util.Locale'/></constructor><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='timezone' type='java.util.TimeZone'/></constructor><constructor name='GregorianCalendar' type='java.util.GregorianCalendar'><parameter name='timezone' type='java.util.TimeZone'/><parameter name='locale' type='java.util.Locale'/></constructor><field name='AD' final='true' static='true' value='1' type='int'/><field name='BC' final='true' static='true' value='0' type='int'/><method name='add'><parameter name='field' type='int'/><parameter name='value' type='int'/></method><method name='computeFields' visibility='protected'/><method name='computeTime' visibility='protected'/><method name='getGreatestMinimum' return='int'><parameter name='field' type='int'/></method><method name='getGregorianChange' final='true' return='java.util.Date'/><method name='getLeastMaximum' return='int'><parameter name='field' type='int'/></method><method name='getMaximum' return='int'><parameter name='field' type='int'/></method><method name='getMinimum' return='int'><parameter name='field' type='int'/></method><method name='isLeapYear' return='boolean'><parameter name='year' type='int'/></method><method name='roll'><parameter name='field' type='int'/><parameter name='increment' type='boolean'/></method><method name='setGregorianChange'><parameter name='date' type='java.util.Date'/></method></class><class name='HashMap' extends='java.util.AbstractMap'><implements name='java.lang.Cloneable'/><implements name='java.util.Map'/><implements name='java.io.Serializable'/><constructor name='HashMap' type='java.util.HashMap'/><constructor name='HashMap' type='java.util.HashMap'><parameter name='capacity' type='int'/></constructor><constructor name='HashMap' type='java.util.HashMap'><parameter name='capacity' type='int'/><parameter name='loadFactor' type='float'/></constructor><constructor name='HashMap' type='java.util.HashMap'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/></class><class name='HashSet' extends='java.util.AbstractSet'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><implements name='java.util.Set'/><constructor name='HashSet' type='java.util.HashSet'/><constructor name='HashSet' type='java.util.HashSet'><parameter name='capacity' type='int'/></constructor><constructor name='HashSet' type='java.util.HashSet'><parameter name='capacity' type='int'/><parameter name='loadFactor' type='float'/></constructor><constructor name='HashSet' type='java.util.HashSet'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='size' return='int'/></class><class name='Hashtable' extends='java.util.Dictionary'><implements name='java.lang.Cloneable'/><implements name='java.util.Map'/><implements name='java.io.Serializable'/><constructor name='Hashtable' type='java.util.Hashtable'/><constructor name='Hashtable' type='java.util.Hashtable'><parameter name='capacity' type='int'/></constructor><constructor name='Hashtable' type='java.util.Hashtable'><parameter name='capacity' type='int'/><parameter name='loadFactor' type='float'/></constructor><constructor name='Hashtable' type='java.util.Hashtable'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='clear' synchronized='true'/><method name='clone' synchronized='true' return='java.lang.Object'/><method name='contains' synchronized='true' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='containsKey' synchronized='true' return='boolean'><parameter name='key' type='java.lang.Object'/></method><method name='containsValue' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='elements' synchronized='true' return='java.util.Enumeration&lt;V&gt;'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/><method name='get' synchronized='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='isEmpty' synchronized='true' return='boolean'/><method name='keySet' return='java.util.Set&lt;K&gt;'/><method name='keys' synchronized='true' return='java.util.Enumeration&lt;K&gt;'/><method name='put' synchronized='true' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='putAll' synchronized='true'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></method><method name='rehash' visibility='protected'/><method name='remove' synchronized='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='size' synchronized='true' return='int'/><method name='values' return='java.util.Collection&lt;V&gt;'/></class><class name='IdentityHashMap' extends='java.util.AbstractMap'><implements name='java.lang.Cloneable'/><implements name='java.util.Map'/><implements name='java.io.Serializable'/><constructor name='IdentityHashMap' type='java.util.IdentityHashMap'/><constructor name='IdentityHashMap' type='java.util.IdentityHashMap'><parameter name='maxSize' type='int'/></constructor><constructor name='IdentityHashMap' type='java.util.IdentityHashMap'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/></class><class name='IllegalFormatCodePointException' extends='java.util.IllegalFormatException'><implements name='java.io.Serializable'/><constructor name='IllegalFormatCodePointException' type='java.util.IllegalFormatCodePointException'><parameter name='c' type='int'/></constructor><method name='getCodePoint' return='int'/></class><class name='IllegalFormatConversionException' extends='java.util.IllegalFormatException'><implements name='java.io.Serializable'/><constructor name='IllegalFormatConversionException' type='java.util.IllegalFormatConversionException'><parameter name='c' type='char'/><parameter name='arg' type='java.lang.Class&lt;?&gt;'/></constructor><method name='getArgumentClass' return='java.lang.Class&lt;?&gt;'/><method name='getConversion' return='char'/></class><class name='IllegalFormatException' extends='java.lang.IllegalArgumentException'><implements name='java.io.Serializable'/></class><class name='IllegalFormatFlagsException' extends='java.util.IllegalFormatException'><implements name='java.io.Serializable'/><constructor name='IllegalFormatFlagsException' type='java.util.IllegalFormatFlagsException'><parameter name='f' type='java.lang.String'/></constructor><method name='getFlags' return='java.lang.String'/></class><class name='IllegalFormatPrecisionException' extends='java.util.IllegalFormatException'><constructor name='IllegalFormatPrecisionException' type='java.util.IllegalFormatPrecisionException'><parameter name='p' type='int'/></constructor><method name='getPrecision' return='int'/></class><class name='IllegalFormatWidthException' extends='java.util.IllegalFormatException'><constructor name='IllegalFormatWidthException' type='java.util.IllegalFormatWidthException'><parameter name='w' type='int'/></constructor><method name='getWidth' return='int'/></class><class name='InputMismatchException' extends='java.util.NoSuchElementException'><implements name='java.io.Serializable'/><constructor name='InputMismatchException' type='java.util.InputMismatchException'/><constructor name='InputMismatchException' type='java.util.InputMismatchException'><parameter name='msg' type='java.lang.String'/></constructor></class><class name='InvalidPropertiesFormatException' extends='java.io.IOException'><constructor name='InvalidPropertiesFormatException' type='java.util.InvalidPropertiesFormatException'><parameter name='m' type='java.lang.String'/></constructor><constructor name='InvalidPropertiesFormatException' type='java.util.InvalidPropertiesFormatException'><parameter name='c' type='java.lang.Throwable'/></constructor></class><class name='LinkedHashMap' extends='java.util.HashMap'><constructor name='LinkedHashMap' type='java.util.LinkedHashMap'/><constructor name='LinkedHashMap' type='java.util.LinkedHashMap'><parameter name='s' type='int'/></constructor><constructor name='LinkedHashMap' type='java.util.LinkedHashMap'><parameter name='s' type='int'/><parameter name='lf' type='float'/></constructor><constructor name='LinkedHashMap' type='java.util.LinkedHashMap'><parameter name='s' type='int'/><parameter name='lf' type='float'/><parameter name='order' type='boolean'/></constructor><constructor name='LinkedHashMap' type='java.util.LinkedHashMap'><parameter name='m' type='java.util.Map&lt;? extends K, ? extends V&gt;'/><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='removeEldestEntry' visibility='protected' return='boolean'><parameter name='eldest' type='java.util.Map.Entry&lt;K, V&gt;'/></method></class><class name='LinkedHashSet' extends='java.util.HashSet'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><implements name='java.util.Set'/><constructor name='LinkedHashSet' type='java.util.LinkedHashSet'/><constructor name='LinkedHashSet' type='java.util.LinkedHashSet'><parameter name='capacity' type='int'/></constructor><constructor name='LinkedHashSet' type='java.util.LinkedHashSet'><parameter name='capacity' type='int'/><parameter name='loadFactor' type='float'/></constructor><constructor name='LinkedHashSet' type='java.util.LinkedHashSet'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor></class><class name='LinkedList' extends='java.util.AbstractSequentialList'><implements name='java.lang.Cloneable'/><implements name='java.util.List'/><implements name='java.util.Queue'/><implements name='java.io.Serializable'/><constructor name='LinkedList' type='java.util.LinkedList'/><constructor name='LinkedList' type='java.util.LinkedList'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='addFirst'><parameter name='object' type='E'/></method><method name='addLast'><parameter name='object' type='E'/></method><method name='clone' return='java.lang.Object'/><method name='element' return='E'/><method name='getFirst' return='E'/><method name='getLast' return='E'/><method name='listIterator' return='java.util.ListIterator&lt;E&gt;'><parameter name='location' type='int'/></method><method name='offer' return='boolean'><parameter name='o' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'/><method name='remove' return='E'/><method name='removeFirst' return='E'/><method name='removeLast' return='E'/><method name='size' return='int'/></class><class name='ListResourceBundle' extends='java.util.ResourceBundle' abstract='true'><constructor name='ListResourceBundle' type='java.util.ListResourceBundle'/><method name='getContents' abstract='true' visibility='protected' return='java.lang.Object[][]'/><method name='getKeys' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='handleGetObject' final='true' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method></class><class name='Locale' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='Locale' type='java.util.Locale'><parameter name='language' type='java.lang.String'/></constructor><constructor name='Locale' type='java.util.Locale'><parameter name='language' type='java.lang.String'/><parameter name='country' type='java.lang.String'/></constructor><constructor name='Locale' type='java.util.Locale'><parameter name='language' type='java.lang.String'/><parameter name='country' type='java.lang.String'/><parameter name='variant' type='java.lang.String'/></constructor><field name='CANADA' final='true' static='true' type='java.util.Locale'/><field name='CANADA_FRENCH' final='true' static='true' type='java.util.Locale'/><field name='CHINA' final='true' static='true' type='java.util.Locale'/><field name='CHINESE' final='true' static='true' type='java.util.Locale'/><field name='ENGLISH' final='true' static='true' type='java.util.Locale'/><field name='FRANCE' final='true' static='true' type='java.util.Locale'/><field name='FRENCH' final='true' static='true' type='java.util.Locale'/><field name='GERMAN' final='true' static='true' type='java.util.Locale'/><field name='GERMANY' final='true' static='true' type='java.util.Locale'/><field name='ITALIAN' final='true' static='true' type='java.util.Locale'/><field name='ITALY' final='true' static='true' type='java.util.Locale'/><field name='JAPAN' final='true' static='true' type='java.util.Locale'/><field name='JAPANESE' final='true' static='true' type='java.util.Locale'/><field name='KOREA' final='true' static='true' type='java.util.Locale'/><field name='KOREAN' final='true' static='true' type='java.util.Locale'/><field name='PRC' final='true' static='true' type='java.util.Locale'/><field name='SIMPLIFIED_CHINESE' final='true' static='true' type='java.util.Locale'/><field name='TAIWAN' final='true' static='true' type='java.util.Locale'/><field name='TRADITIONAL_CHINESE' final='true' static='true' type='java.util.Locale'/><field name='UK' final='true' static='true' type='java.util.Locale'/><field name='US' final='true' static='true' type='java.util.Locale'/><method name='clone' return='java.lang.Object'/><method name='getAvailableLocales' static='true' return='java.util.Locale[]'/><method name='getCountry' return='java.lang.String'/><method name='getDefault' static='true' return='java.util.Locale'/><method name='getDisplayCountry' final='true' return='java.lang.String'/><method name='getDisplayCountry' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='getDisplayLanguage' final='true' return='java.lang.String'/><method name='getDisplayLanguage' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='getDisplayName' final='true' return='java.lang.String'/><method name='getDisplayName' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='getDisplayVariant' final='true' return='java.lang.String'/><method name='getDisplayVariant' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='getISO3Country' return='java.lang.String'><exception name='MissingResourceException' type='java.util.MissingResourceException'/></method><method name='getISO3Language' return='java.lang.String'><exception name='MissingResourceException' type='java.util.MissingResourceException'/></method><method name='getISOCountries' static='true' return='java.lang.String[]'/><method name='getISOLanguages' static='true' return='java.lang.String[]'/><method name='getLanguage' return='java.lang.String'/><method name='getVariant' return='java.lang.String'/><method name='setDefault' synchronized='true' static='true'><parameter name='locale' type='java.util.Locale'/></method><method name='toString' final='true' return='java.lang.String'/></class><class name='MissingFormatArgumentException' extends='java.util.IllegalFormatException'><constructor name='MissingFormatArgumentException' type='java.util.MissingFormatArgumentException'><parameter name='s' type='java.lang.String'/></constructor><method name='getFormatSpecifier' return='java.lang.String'/></class><class name='MissingFormatWidthException' extends='java.util.IllegalFormatException'><constructor name='MissingFormatWidthException' type='java.util.MissingFormatWidthException'><parameter name='s' type='java.lang.String'/></constructor><method name='getFormatSpecifier' return='java.lang.String'/></class><class name='MissingResourceException' extends='java.lang.RuntimeException'><constructor name='MissingResourceException' type='java.util.MissingResourceException'><parameter name='detailMessage' type='java.lang.String'/><parameter name='className' type='java.lang.String'/><parameter name='resourceName' type='java.lang.String'/></constructor><method name='getClassName' return='java.lang.String'/><method name='getKey' return='java.lang.String'/></class><class name='NoSuchElementException' extends='java.lang.RuntimeException'><constructor name='NoSuchElementException' type='java.util.NoSuchElementException'/><constructor name='NoSuchElementException' type='java.util.NoSuchElementException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Observable' extends='java.lang.Object'><constructor name='Observable' type='java.util.Observable'/><method name='addObserver' synchronized='true'><parameter name='observer' type='java.util.Observer'/></method><method name='clearChanged' synchronized='true' visibility='protected'/><method name='countObservers' synchronized='true' return='int'/><method name='deleteObserver' synchronized='true'><parameter name='observer' type='java.util.Observer'/></method><method name='deleteObservers' synchronized='true'/><method name='hasChanged' synchronized='true' return='boolean'/><method name='notifyObservers'/><method name='notifyObservers'><parameter name='data' type='java.lang.Object'/></method><method name='setChanged' synchronized='true' visibility='protected'/></class><class name='PriorityQueue' extends='java.util.AbstractQueue'><implements name='java.io.Serializable'/><constructor name='PriorityQueue' type='java.util.PriorityQueue'/><constructor name='PriorityQueue' type='java.util.PriorityQueue'><parameter name='initialCapacity' type='int'/></constructor><constructor name='PriorityQueue' type='java.util.PriorityQueue'><parameter name='initialCapacity' type='int'/><parameter name='comparator' type='java.util.Comparator&lt;? super E&gt;'/></constructor><constructor name='PriorityQueue' type='java.util.PriorityQueue'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><constructor name='PriorityQueue' type='java.util.PriorityQueue'><parameter name='c' type='java.util.PriorityQueue&lt;? extends E&gt;'/></constructor><constructor name='PriorityQueue' type='java.util.PriorityQueue'><parameter name='c' type='java.util.SortedSet&lt;? extends E&gt;'/></constructor><method name='comparator' return='java.util.Comparator&lt;? super E&gt;'/><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' return='boolean'><parameter name='o' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'/><method name='size' return='int'/></class><class name='Properties' extends='java.util.Hashtable'><constructor name='Properties' type='java.util.Properties'/><constructor name='Properties' type='java.util.Properties'><parameter name='properties' type='java.util.Properties'/></constructor><field name='defaults' type='java.util.Properties' visibility='protected'/><method name='getProperty' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getProperty' return='java.lang.String'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.String'/></method><method name='list'><parameter name='out' type='java.io.PrintStream'/></method><method name='list'><parameter name='writer' type='java.io.PrintWriter'/></method><method name='load' synchronized='true'><parameter name='in' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='loadFromXML' synchronized='true'><parameter name='in' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='InvalidPropertiesFormatException' type='java.util.InvalidPropertiesFormatException'/></method><method name='propertyNames' return='java.util.Enumeration&lt;?&gt;'/><method name='save' deprecated='1'><parameter name='out' type='java.io.OutputStream'/><parameter name='comment' type='java.lang.String'/></method><method name='setProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='store' synchronized='true'><parameter name='out' type='java.io.OutputStream'/><parameter name='comment' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='storeToXML'><parameter name='os' type='java.io.OutputStream'/><parameter name='comment' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='storeToXML' synchronized='true'><parameter name='os' type='java.io.OutputStream'/><parameter name='comment' type='java.lang.String'/><parameter name='encoding' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='PropertyPermission' final='true' extends='java.security.BasicPermission'><constructor name='PropertyPermission' type='java.util.PropertyPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='PropertyResourceBundle' extends='java.util.ResourceBundle'><constructor name='PropertyResourceBundle' type='java.util.PropertyResourceBundle'><parameter name='stream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getKeys' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='handleGetObject' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method></class><class name='Random' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Random' type='java.util.Random'/><constructor name='Random' type='java.util.Random'><parameter name='seed' type='long'/></constructor><method name='next' synchronized='true' visibility='protected' return='int'><parameter name='bits' type='int'/></method><method name='nextBoolean' return='boolean'/><method name='nextBytes'><parameter name='buf' type='byte[]'/></method><method name='nextDouble' return='double'/><method name='nextFloat' return='float'/><method name='nextGaussian' synchronized='true' return='double'/><method name='nextInt' return='int'/><method name='nextInt' return='int'><parameter name='n' type='int'/></method><method name='nextLong' return='long'/><method name='setSeed' synchronized='true'><parameter name='seed' type='long'/></method></class><class name='ResourceBundle' extends='java.lang.Object' abstract='true'><constructor name='ResourceBundle' type='java.util.ResourceBundle'/><field name='parent' type='java.util.ResourceBundle' visibility='protected'/><method name='getBundle' final='true' static='true' return='java.util.ResourceBundle'><parameter name='bundleName' type='java.lang.String'/><exception name='MissingResourceException' type='java.util.MissingResourceException'/></method><method name='getBundle' final='true' static='true' return='java.util.ResourceBundle'><parameter name='bundleName' type='java.lang.String'/><parameter name='locale' type='java.util.Locale'/></method><method name='getBundle' static='true' return='java.util.ResourceBundle'><parameter name='bundleName' type='java.lang.String'/><parameter name='locale' type='java.util.Locale'/><parameter name='loader' type='java.lang.ClassLoader'/><exception name='MissingResourceException' type='java.util.MissingResourceException'/></method><method name='getKeys' abstract='true' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='getLocale' return='java.util.Locale'/><method name='getObject' final='true' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method><method name='getString' final='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getStringArray' final='true' return='java.lang.String[]'><parameter name='key' type='java.lang.String'/></method><method name='handleGetObject' abstract='true' visibility='protected' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method><method name='setParent' visibility='protected'><parameter name='bundle' type='java.util.ResourceBundle'/></method></class><class name='Scanner' final='true' extends='java.lang.Object'><implements name='java.util.Iterator'/><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.io.File'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.io.File'/><parameter name='charsetName' type='java.lang.String'/><exception name='FileNotFoundException' type='java.io.FileNotFoundException'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.lang.String'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.io.InputStream'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.io.InputStream'/><parameter name='charsetName' type='java.lang.String'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.lang.Readable'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.nio.channels.ReadableByteChannel'/></constructor><constructor name='Scanner' type='java.util.Scanner'><parameter name='src' type='java.nio.channels.ReadableByteChannel'/><parameter name='charsetName' type='java.lang.String'/></constructor><method name='close'/><method name='delimiter' return='java.util.regex.Pattern'/><method name='findInLine' return='java.lang.String'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='findInLine' return='java.lang.String'><parameter name='pattern' type='java.lang.String'/></method><method name='findWithinHorizon' return='java.lang.String'><parameter name='pattern' type='java.util.regex.Pattern'/><parameter name='horizon' type='int'/></method><method name='findWithinHorizon' return='java.lang.String'><parameter name='pattern' type='java.lang.String'/><parameter name='horizon' type='int'/></method><method name='hasNext' return='boolean'/><method name='hasNext' return='boolean'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='hasNext' return='boolean'><parameter name='pattern' type='java.lang.String'/></method><method name='hasNextBigDecimal' return='boolean'/><method name='hasNextBigInteger' return='boolean'/><method name='hasNextBigInteger' return='boolean'><parameter name='radix' type='int'/></method><method name='hasNextBoolean' return='boolean'/><method name='hasNextByte' return='boolean'/><method name='hasNextByte' return='boolean'><parameter name='radix' type='int'/></method><method name='hasNextDouble' return='boolean'/><method name='hasNextFloat' return='boolean'/><method name='hasNextInt' return='boolean'/><method name='hasNextInt' return='boolean'><parameter name='radix' type='int'/></method><method name='hasNextLine' return='boolean'/><method name='hasNextLong' return='boolean'/><method name='hasNextLong' return='boolean'><parameter name='radix' type='int'/></method><method name='hasNextShort' return='boolean'/><method name='hasNextShort' return='boolean'><parameter name='radix' type='int'/></method><method name='ioException' return='java.io.IOException'/><method name='locale' return='java.util.Locale'/><method name='match' return='java.util.regex.MatchResult'/><method name='next' return='java.lang.String'/><method name='next' return='java.lang.String'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='next' return='java.lang.String'><parameter name='pattern' type='java.lang.String'/></method><method name='nextBigDecimal' return='java.math.BigDecimal'/><method name='nextBigInteger' return='java.math.BigInteger'/><method name='nextBigInteger' return='java.math.BigInteger'><parameter name='radix' type='int'/></method><method name='nextBoolean' return='boolean'/><method name='nextByte' return='byte'/><method name='nextByte' return='byte'><parameter name='radix' type='int'/></method><method name='nextDouble' return='double'/><method name='nextFloat' return='float'/><method name='nextInt' return='int'/><method name='nextInt' return='int'><parameter name='radix' type='int'/></method><method name='nextLine' return='java.lang.String'/><method name='nextLong' return='long'/><method name='nextLong' return='long'><parameter name='radix' type='int'/></method><method name='nextShort' return='short'/><method name='nextShort' return='short'><parameter name='radix' type='int'/></method><method name='radix' return='int'/><method name='remove'/><method name='skip' return='java.util.Scanner'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='skip' return='java.util.Scanner'><parameter name='pattern' type='java.lang.String'/></method><method name='useDelimiter' return='java.util.Scanner'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='useDelimiter' return='java.util.Scanner'><parameter name='pattern' type='java.lang.String'/></method><method name='useLocale' return='java.util.Scanner'><parameter name='l' type='java.util.Locale'/></method><method name='useRadix' return='java.util.Scanner'><parameter name='radix' type='int'/></method></class><class name='SimpleTimeZone' extends='java.util.TimeZone'><constructor name='SimpleTimeZone' type='java.util.SimpleTimeZone'><parameter name='offset' type='int'/><parameter name='name' type='java.lang.String'/></constructor><constructor name='SimpleTimeZone' type='java.util.SimpleTimeZone'><parameter name='offset' type='int'/><parameter name='name' type='java.lang.String'/><parameter name='startMonth' type='int'/><parameter name='startDay' type='int'/><parameter name='startDayOfWeek' type='int'/><parameter name='startTime' type='int'/><parameter name='endMonth' type='int'/><parameter name='endDay' type='int'/><parameter name='endDayOfWeek' type='int'/><parameter name='endTime' type='int'/></constructor><constructor name='SimpleTimeZone' type='java.util.SimpleTimeZone'><parameter name='offset' type='int'/><parameter name='name' type='java.lang.String'/><parameter name='startMonth' type='int'/><parameter name='startDay' type='int'/><parameter name='startDayOfWeek' type='int'/><parameter name='startTime' type='int'/><parameter name='endMonth' type='int'/><parameter name='endDay' type='int'/><parameter name='endDayOfWeek' type='int'/><parameter name='endTime' type='int'/><parameter name='daylightSavings' type='int'/></constructor><constructor name='SimpleTimeZone' type='java.util.SimpleTimeZone'><parameter name='offset' type='int'/><parameter name='name' type='java.lang.String'/><parameter name='startMonth' type='int'/><parameter name='startDay' type='int'/><parameter name='startDayOfWeek' type='int'/><parameter name='startTime' type='int'/><parameter name='startTimeMode' type='int'/><parameter name='endMonth' type='int'/><parameter name='endDay' type='int'/><parameter name='endDayOfWeek' type='int'/><parameter name='endTime' type='int'/><parameter name='endTimeMode' type='int'/><parameter name='daylightSavings' type='int'/></constructor><field name='STANDARD_TIME' final='true' static='true' value='1' type='int'/><field name='UTC_TIME' final='true' static='true' value='2' type='int'/><field name='WALL_TIME' final='true' static='true' value='0' type='int'/><method name='getOffset' return='int'><parameter name='era' type='int'/><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/></method><method name='getRawOffset' return='int'/><method name='inDaylightTime' return='boolean'><parameter name='time' type='java.util.Date'/></method><method name='setDSTSavings'><parameter name='milliseconds' type='int'/></method><method name='setEndRule'><parameter name='month' type='int'/><parameter name='dayOfMonth' type='int'/><parameter name='time' type='int'/></method><method name='setEndRule'><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/></method><method name='setEndRule'><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/><parameter name='after' type='boolean'/></method><method name='setRawOffset'><parameter name='offset' type='int'/></method><method name='setStartRule'><parameter name='month' type='int'/><parameter name='dayOfMonth' type='int'/><parameter name='time' type='int'/></method><method name='setStartRule'><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/></method><method name='setStartRule'><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/><parameter name='after' type='boolean'/></method><method name='setStartYear'><parameter name='year' type='int'/></method><method name='useDaylightTime' return='boolean'/></class><class name='Stack' extends='java.util.Vector'><constructor name='Stack' type='java.util.Stack'/><method name='empty' return='boolean'/><method name='peek' synchronized='true' return='E'/><method name='pop' synchronized='true' return='E'/><method name='push' synchronized='true' return='E'><parameter name='object' type='E'/></method><method name='search' synchronized='true' return='int'><parameter name='o' type='java.lang.Object'/></method></class><class name='StringTokenizer' extends='java.lang.Object'><implements name='java.util.Enumeration'/><constructor name='StringTokenizer' type='java.util.StringTokenizer'><parameter name='string' type='java.lang.String'/></constructor><constructor name='StringTokenizer' type='java.util.StringTokenizer'><parameter name='string' type='java.lang.String'/><parameter name='delimiters' type='java.lang.String'/></constructor><constructor name='StringTokenizer' type='java.util.StringTokenizer'><parameter name='string' type='java.lang.String'/><parameter name='delimiters' type='java.lang.String'/><parameter name='returnDelimiters' type='boolean'/></constructor><method name='countTokens' return='int'/><method name='hasMoreElements' return='boolean'/><method name='hasMoreTokens' return='boolean'/><method name='nextElement' return='java.lang.Object'/><method name='nextToken' return='java.lang.String'/><method name='nextToken' return='java.lang.String'><parameter name='delims' type='java.lang.String'/></method></class><class name='TimeZone' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='TimeZone' type='java.util.TimeZone'/><field name='LONG' final='true' static='true' value='1' type='int'/><field name='SHORT' final='true' static='true' value='0' type='int'/><method name='clone' return='java.lang.Object'/><method name='getAvailableIDs' synchronized='true' static='true' return='java.lang.String[]'/><method name='getAvailableIDs' synchronized='true' static='true' return='java.lang.String[]'><parameter name='offset' type='int'/></method><method name='getDSTSavings' return='int'/><method name='getDefault' synchronized='true' static='true' return='java.util.TimeZone'/><method name='getDisplayName' final='true' return='java.lang.String'/><method name='getDisplayName' final='true' return='java.lang.String'><parameter name='locale' type='java.util.Locale'/></method><method name='getDisplayName' final='true' return='java.lang.String'><parameter name='daylightTime' type='boolean'/><parameter name='style' type='int'/></method><method name='getDisplayName' return='java.lang.String'><parameter name='daylightTime' type='boolean'/><parameter name='style' type='int'/><parameter name='locale' type='java.util.Locale'/></method><method name='getID' return='java.lang.String'/><method name='getOffset' return='int'><parameter name='time' type='long'/></method><method name='getOffset' abstract='true' return='int'><parameter name='era' type='int'/><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='dayOfWeek' type='int'/><parameter name='time' type='int'/></method><method name='getRawOffset' abstract='true' return='int'/><method name='getTimeZone' synchronized='true' static='true' return='java.util.TimeZone'><parameter name='name' type='java.lang.String'/></method><method name='hasSameRules' return='boolean'><parameter name='zone' type='java.util.TimeZone'/></method><method name='inDaylightTime' abstract='true' return='boolean'><parameter name='time' type='java.util.Date'/></method><method name='setDefault' synchronized='true' static='true'><parameter name='timezone' type='java.util.TimeZone'/></method><method name='setID'><parameter name='name' type='java.lang.String'/></method><method name='setRawOffset' abstract='true'><parameter name='offset' type='int'/></method><method name='useDaylightTime' abstract='true' return='boolean'/></class><class name='Timer' extends='java.lang.Object'><constructor name='Timer' type='java.util.Timer'><parameter name='isDaemon' type='boolean'/></constructor><constructor name='Timer' type='java.util.Timer'/><constructor name='Timer' type='java.util.Timer'><parameter name='name' type='java.lang.String'/><parameter name='isDaemon' type='boolean'/></constructor><constructor name='Timer' type='java.util.Timer'><parameter name='name' type='java.lang.String'/></constructor><method name='cancel'/><method name='purge' return='int'/><method name='schedule'><parameter name='task' type='java.util.TimerTask'/><parameter name='when' type='java.util.Date'/></method><method name='schedule'><parameter name='task' type='java.util.TimerTask'/><parameter name='delay' type='long'/></method><method name='schedule'><parameter name='task' type='java.util.TimerTask'/><parameter name='delay' type='long'/><parameter name='period' type='long'/></method><method name='schedule'><parameter name='task' type='java.util.TimerTask'/><parameter name='when' type='java.util.Date'/><parameter name='period' type='long'/></method><method name='scheduleAtFixedRate'><parameter name='task' type='java.util.TimerTask'/><parameter name='delay' type='long'/><parameter name='period' type='long'/></method><method name='scheduleAtFixedRate'><parameter name='task' type='java.util.TimerTask'/><parameter name='when' type='java.util.Date'/><parameter name='period' type='long'/></method></class><class name='TimerTask' extends='java.lang.Object' abstract='true'><implements name='java.lang.Runnable'/><constructor name='TimerTask' type='java.util.TimerTask' visibility='protected'/><method name='cancel' return='boolean'/><method name='run' abstract='true'/><method name='scheduledExecutionTime' return='long'/></class><class name='TooManyListenersException' extends='java.lang.Exception'><constructor name='TooManyListenersException' type='java.util.TooManyListenersException'/><constructor name='TooManyListenersException' type='java.util.TooManyListenersException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='TreeMap' extends='java.util.AbstractMap'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><implements name='java.util.SortedMap'/><constructor name='TreeMap' type='java.util.TreeMap'/><constructor name='TreeMap' type='java.util.TreeMap'><parameter name='comparator' type='java.util.Comparator&lt;? super K&gt;'/></constructor><constructor name='TreeMap' type='java.util.TreeMap'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><constructor name='TreeMap' type='java.util.TreeMap'><parameter name='map' type='java.util.SortedMap&lt;K, ? extends V&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='comparator' return='java.util.Comparator&lt;? super K&gt;'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/><method name='firstKey' return='K'/><method name='headMap' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='endKey' type='K'/></method><method name='lastKey' return='K'/><method name='subMap' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='startKey' type='K'/><parameter name='endKey' type='K'/></method><method name='tailMap' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='startKey' type='K'/></method></class><class name='TreeSet' extends='java.util.AbstractSet'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><implements name='java.util.SortedSet'/><constructor name='TreeSet' type='java.util.TreeSet'/><constructor name='TreeSet' type='java.util.TreeSet'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor><constructor name='TreeSet' type='java.util.TreeSet'><parameter name='comparator' type='java.util.Comparator&lt;? super E&gt;'/></constructor><constructor name='TreeSet' type='java.util.TreeSet'><parameter name='set' type='java.util.SortedSet&lt;E&gt;'/></constructor><method name='clone' return='java.lang.Object'/><method name='comparator' return='java.util.Comparator&lt;? super E&gt;'/><method name='first' return='E'/><method name='headSet' return='java.util.SortedSet&lt;E&gt;'><parameter name='end' type='E'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='last' return='E'/><method name='size' return='int'/><method name='subSet' return='java.util.SortedSet&lt;E&gt;'><parameter name='start' type='E'/><parameter name='end' type='E'/></method><method name='tailSet' return='java.util.SortedSet&lt;E&gt;'><parameter name='start' type='E'/></method></class><class name='UUID' final='true' extends='java.lang.Object'><implements name='java.lang.Comparable'/><implements name='java.io.Serializable'/><constructor name='UUID' type='java.util.UUID'><parameter name='mostSigBits' type='long'/><parameter name='leastSigBits' type='long'/></constructor><method name='clockSequence' return='int'/><method name='compareTo' return='int'><parameter name='uuid' type='java.util.UUID'/></method><method name='fromString' static='true' return='java.util.UUID'><parameter name='uuid' type='java.lang.String'/></method><method name='getLeastSignificantBits' return='long'/><method name='getMostSignificantBits' return='long'/><method name='nameUUIDFromBytes' static='true' return='java.util.UUID'><parameter name='name' type='byte[]'/></method><method name='node' return='long'/><method name='randomUUID' static='true' return='java.util.UUID'/><method name='timestamp' return='long'/><method name='variant' return='int'/><method name='version' return='int'/></class><class name='UnknownFormatConversionException' extends='java.util.IllegalFormatException'><constructor name='UnknownFormatConversionException' type='java.util.UnknownFormatConversionException'><parameter name='s' type='java.lang.String'/></constructor><method name='getConversion' return='java.lang.String'/></class><class name='UnknownFormatFlagsException' extends='java.util.IllegalFormatException'><constructor name='UnknownFormatFlagsException' type='java.util.UnknownFormatFlagsException'><parameter name='f' type='java.lang.String'/></constructor><method name='getFlags' return='java.lang.String'/></class><class name='Vector' extends='java.util.AbstractList'><implements name='java.lang.Cloneable'/><implements name='java.util.List'/><implements name='java.util.RandomAccess'/><implements name='java.io.Serializable'/><constructor name='Vector' type='java.util.Vector'/><constructor name='Vector' type='java.util.Vector'><parameter name='capacity' type='int'/></constructor><constructor name='Vector' type='java.util.Vector'><parameter name='capacity' type='int'/><parameter name='capacityIncrement' type='int'/></constructor><constructor name='Vector' type='java.util.Vector'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></constructor><field name='capacityIncrement' type='int' visibility='protected'/><field name='elementCount' type='int' visibility='protected'/><field name='elementData' value='null' type='java.lang.Object[]' visibility='protected'/><method name='addElement' synchronized='true'><parameter name='object' type='E'/></method><method name='capacity' synchronized='true' return='int'/><method name='clone' synchronized='true' return='java.lang.Object'/><method name='copyInto' synchronized='true'><parameter name='elements' type='java.lang.Object[]'/></method><method name='elementAt' synchronized='true' return='E'><parameter name='location' type='int'/></method><method name='elements' return='java.util.Enumeration&lt;E&gt;'/><method name='ensureCapacity' synchronized='true'><parameter name='minimumCapacity' type='int'/></method><method name='firstElement' synchronized='true' return='E'/><method name='get' synchronized='true' return='E'><parameter name='location' type='int'/></method><method name='indexOf' synchronized='true' return='int'><parameter name='object' type='java.lang.Object'/><parameter name='location' type='int'/></method><method name='insertElementAt' synchronized='true'><parameter name='object' type='E'/><parameter name='location' type='int'/></method><method name='lastElement' synchronized='true' return='E'/><method name='lastIndexOf' synchronized='true' return='int'><parameter name='object' type='java.lang.Object'/><parameter name='location' type='int'/></method><method name='removeAllElements' synchronized='true'/><method name='removeElement' synchronized='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='removeElementAt' synchronized='true'><parameter name='location' type='int'/></method><method name='setElementAt' synchronized='true'><parameter name='object' type='E'/><parameter name='location' type='int'/></method><method name='setSize' synchronized='true'><parameter name='length' type='int'/></method><method name='size' synchronized='true' return='int'/><method name='trimToSize' synchronized='true'/></class><class name='WeakHashMap' extends='java.util.AbstractMap'><implements name='java.util.Map'/><constructor name='WeakHashMap' type='java.util.WeakHashMap'/><constructor name='WeakHashMap' type='java.util.WeakHashMap'><parameter name='capacity' type='int'/></constructor><constructor name='WeakHashMap' type='java.util.WeakHashMap'><parameter name='capacity' type='int'/><parameter name='loadFactor' type='float'/></constructor><constructor name='WeakHashMap' type='java.util.WeakHashMap'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/></class><interface name='Collection' abstract='true'><implements name='java.lang.Iterable'/><method name='add' abstract='true' return='boolean'><parameter name='object' type='E'/></method><method name='addAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='clear' abstract='true'/><method name='contains' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='containsAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='hashCode' abstract='true' return='int'/><method name='isEmpty' abstract='true' return='boolean'/><method name='iterator' abstract='true' return='java.util.Iterator&lt;E&gt;'/><method name='remove' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='removeAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='retainAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='size' abstract='true' return='int'/><method name='toArray' abstract='true' return='java.lang.Object[]'/><method name='toArray' abstract='true' return='T[]'><parameter name='array' type='T[]'/></method></interface><interface name='Comparator' abstract='true'><method name='compare' abstract='true' return='int'><parameter name='object1' type='T'/><parameter name='object2' type='T'/></method><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method></interface><interface name='Enumeration' abstract='true'><method name='hasMoreElements' abstract='true' return='boolean'/><method name='nextElement' abstract='true' return='E'/></interface><interface name='EventListener' abstract='true'/><interface name='Formattable' abstract='true'><method name='formatTo' abstract='true'><parameter name='formatter' type='java.util.Formatter'/><parameter name='flags' type='int'/><parameter name='width' type='int'/><parameter name='precision' type='int'/><exception name='IllegalFormatException' type='java.util.IllegalFormatException'/></method></interface><interface name='Iterator' abstract='true'><method name='hasNext' abstract='true' return='boolean'/><method name='next' abstract='true' return='E'/><method name='remove' abstract='true'/></interface><interface name='List' abstract='true'><implements name='java.util.Collection'/><method name='add' abstract='true'><parameter name='location' type='int'/><parameter name='object' type='E'/></method><method name='add' abstract='true' return='boolean'><parameter name='object' type='E'/></method><method name='addAll' abstract='true' return='boolean'><parameter name='location' type='int'/><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='addAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='clear' abstract='true'/><method name='contains' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='containsAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='get' abstract='true' return='E'><parameter name='location' type='int'/></method><method name='hashCode' abstract='true' return='int'/><method name='indexOf' abstract='true' return='int'><parameter name='object' type='java.lang.Object'/></method><method name='isEmpty' abstract='true' return='boolean'/><method name='iterator' abstract='true' return='java.util.Iterator&lt;E&gt;'/><method name='lastIndexOf' abstract='true' return='int'><parameter name='object' type='java.lang.Object'/></method><method name='listIterator' abstract='true' return='java.util.ListIterator&lt;E&gt;'/><method name='listIterator' abstract='true' return='java.util.ListIterator&lt;E&gt;'><parameter name='location' type='int'/></method><method name='remove' abstract='true' return='E'><parameter name='location' type='int'/></method><method name='remove' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='removeAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='retainAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='set' abstract='true' return='E'><parameter name='location' type='int'/><parameter name='object' type='E'/></method><method name='size' abstract='true' return='int'/><method name='subList' abstract='true' return='java.util.List&lt;E&gt;'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='toArray' abstract='true' return='java.lang.Object[]'/><method name='toArray' abstract='true' return='T[]'><parameter name='array' type='T[]'/></method></interface><interface name='ListIterator' abstract='true'><implements name='java.util.Iterator'/><method name='add' abstract='true'><parameter name='object' type='E'/></method><method name='hasNext' abstract='true' return='boolean'/><method name='hasPrevious' abstract='true' return='boolean'/><method name='next' abstract='true' return='E'/><method name='nextIndex' abstract='true' return='int'/><method name='previous' abstract='true' return='E'/><method name='previousIndex' abstract='true' return='int'/><method name='remove' abstract='true'/><method name='set' abstract='true'><parameter name='object' type='E'/></method></interface><interface name='Map' abstract='true'><method name='clear' abstract='true'/><method name='containsKey' abstract='true' return='boolean'><parameter name='key' type='java.lang.Object'/></method><method name='containsValue' abstract='true' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='entrySet' abstract='true' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='get' abstract='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='hashCode' abstract='true' return='int'/><method name='isEmpty' abstract='true' return='boolean'/><method name='keySet' abstract='true' return='java.util.Set&lt;K&gt;'/><method name='put' abstract='true' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='putAll' abstract='true'><parameter name='map' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></method><method name='remove' abstract='true' return='V'><parameter name='key' type='java.lang.Object'/></method><method name='size' abstract='true' return='int'/><method name='values' abstract='true' return='java.util.Collection&lt;V&gt;'/></interface><interface name='Map.Entry' abstract='true' static='true'><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='getKey' abstract='true' return='K'/><method name='getValue' abstract='true' return='V'/><method name='hashCode' abstract='true' return='int'/><method name='setValue' abstract='true' return='V'><parameter name='object' type='V'/></method></interface><interface name='Observer' abstract='true'><method name='update' abstract='true'><parameter name='observable' type='java.util.Observable'/><parameter name='data' type='java.lang.Object'/></method></interface><interface name='Queue' abstract='true'><implements name='java.util.Collection'/><method name='element' abstract='true' return='E'/><method name='offer' abstract='true' return='boolean'><parameter name='o' type='E'/></method><method name='peek' abstract='true' return='E'/><method name='poll' abstract='true' return='E'/><method name='remove' abstract='true' return='E'/></interface><interface name='RandomAccess' abstract='true'/><interface name='Set' abstract='true'><implements name='java.util.Collection'/><method name='add' abstract='true' return='boolean'><parameter name='object' type='E'/></method><method name='addAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='clear' abstract='true'/><method name='contains' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='containsAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='equals' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='hashCode' abstract='true' return='int'/><method name='isEmpty' abstract='true' return='boolean'/><method name='iterator' abstract='true' return='java.util.Iterator&lt;E&gt;'/><method name='remove' abstract='true' return='boolean'><parameter name='object' type='java.lang.Object'/></method><method name='removeAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='retainAll' abstract='true' return='boolean'><parameter name='collection' type='java.util.Collection&lt;?&gt;'/></method><method name='size' abstract='true' return='int'/><method name='toArray' abstract='true' return='java.lang.Object[]'/><method name='toArray' abstract='true' return='T[]'><parameter name='array' type='T[]'/></method></interface><interface name='SortedMap' abstract='true'><implements name='java.util.Map'/><method name='comparator' abstract='true' return='java.util.Comparator&lt;? super K&gt;'/><method name='firstKey' abstract='true' return='K'/><method name='headMap' abstract='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='endKey' type='K'/></method><method name='lastKey' abstract='true' return='K'/><method name='subMap' abstract='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='startKey' type='K'/><parameter name='endKey' type='K'/></method><method name='tailMap' abstract='true' return='java.util.SortedMap&lt;K, V&gt;'><parameter name='startKey' type='K'/></method></interface><interface name='SortedSet' abstract='true'><implements name='java.util.Set'/><method name='comparator' abstract='true' return='java.util.Comparator&lt;? super E&gt;'/><method name='first' abstract='true' return='E'/><method name='headSet' abstract='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='end' type='E'/></method><method name='last' abstract='true' return='E'/><method name='subSet' abstract='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='start' type='E'/><parameter name='end' type='E'/></method><method name='tailSet' abstract='true' return='java.util.SortedSet&lt;E&gt;'><parameter name='start' type='E'/></method></interface></package><package name='java.util.concurrent'><class name='AbstractExecutorService' extends='java.lang.Object' abstract='true'><implements name='java.util.concurrent.ExecutorService'/><constructor name='AbstractExecutorService' type='java.util.concurrent.AbstractExecutorService'/><method name='invokeAll' return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAll' return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAny' return='T'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAny' return='T'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method name='submit' return='java.util.concurrent.Future&lt;?&gt;'><parameter name='task' type='java.lang.Runnable'/></method><method name='submit' return='java.util.concurrent.Future&lt;T&gt;'><parameter name='task' type='java.lang.Runnable'/><parameter name='result' type='T'/></method><method name='submit' return='java.util.concurrent.Future&lt;T&gt;'><parameter name='task' type='java.util.concurrent.Callable&lt;T&gt;'/></method></class><class name='ArrayBlockingQueue' extends='java.util.AbstractQueue'><implements name='java.util.concurrent.BlockingQueue'/><implements name='java.io.Serializable'/><constructor name='ArrayBlockingQueue' type='java.util.concurrent.ArrayBlockingQueue'><parameter name='capacity' type='int'/></constructor><constructor name='ArrayBlockingQueue' type='java.util.concurrent.ArrayBlockingQueue'><parameter name='capacity' type='int'/><parameter name='fair' type='boolean'/></constructor><constructor name='ArrayBlockingQueue' type='java.util.concurrent.ArrayBlockingQueue'><parameter name='capacity' type='int'/><parameter name='fair' type='boolean'/><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='peek' return='E'/><method name='poll' return='E'/><method name='poll' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='put' api_removed='6'><parameter name='o' type='E'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='remainingCapacity' return='int'/><method name='size' return='int'/><method name='take' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='put'><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='BrokenBarrierException' extends='java.lang.Exception'><constructor name='BrokenBarrierException' type='java.util.concurrent.BrokenBarrierException'/><constructor name='BrokenBarrierException' type='java.util.concurrent.BrokenBarrierException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='CancellationException' extends='java.lang.IllegalStateException'><constructor name='CancellationException' type='java.util.concurrent.CancellationException'/><constructor name='CancellationException' type='java.util.concurrent.CancellationException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='ConcurrentHashMap' extends='java.util.AbstractMap'><implements name='java.util.concurrent.ConcurrentMap'/><implements name='java.io.Serializable'/><constructor name='ConcurrentHashMap' type='java.util.concurrent.ConcurrentHashMap'><parameter name='initialCapacity' type='int'/><parameter name='loadFactor' type='float'/><parameter name='concurrencyLevel' type='int'/></constructor><constructor name='ConcurrentHashMap' type='java.util.concurrent.ConcurrentHashMap'><parameter name='initialCapacity' type='int'/></constructor><constructor name='ConcurrentHashMap' type='java.util.concurrent.ConcurrentHashMap'/><constructor name='ConcurrentHashMap' type='java.util.concurrent.ConcurrentHashMap'><parameter name='t' type='java.util.Map&lt;? extends K, ? extends V&gt;'/><parameter name='m' type='java.util.Map&lt;? extends K, ? extends V&gt;'/></constructor><method name='contains' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='elements' return='java.util.Enumeration&lt;V&gt;'/><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;K, V&gt;&gt;'/><method name='keys' return='java.util.Enumeration&lt;K&gt;'/><method name='putIfAbsent' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='remove' return='boolean'><parameter name='key' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/></method><method name='replace' return='boolean'><parameter name='key' type='K'/><parameter name='oldValue' type='V'/><parameter name='newValue' type='V'/></method><method name='replace' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method></class><class name='ConcurrentLinkedQueue' extends='java.util.AbstractQueue'><implements name='java.util.Queue'/><implements name='java.io.Serializable'/><constructor name='ConcurrentLinkedQueue' type='java.util.concurrent.ConcurrentLinkedQueue'/><constructor name='ConcurrentLinkedQueue' type='java.util.concurrent.ConcurrentLinkedQueue'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'/><method name='size' return='int'/><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method></class><class name='CopyOnWriteArrayList' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.util.List'/><implements name='java.util.RandomAccess'/><implements name='java.io.Serializable'/><constructor name='CopyOnWriteArrayList' type='java.util.concurrent.CopyOnWriteArrayList'/><constructor name='CopyOnWriteArrayList' type='java.util.concurrent.CopyOnWriteArrayList'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><constructor name='CopyOnWriteArrayList' type='java.util.concurrent.CopyOnWriteArrayList'><parameter name='array' type='E[]'/><parameter name='toCopyIn' type='E[]'/></constructor><method name='add' return='boolean'><parameter name='e' type='E'/></method><method name='add' api_removed='6'><parameter name='index' type='int'/><parameter name='e' type='E'/><parameter name='element' type='E'/></method><method name='addAll' return='boolean'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='addAll' return='boolean'><parameter name='index' type='int'/><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='addAllAbsent' return='int'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></method><method name='addIfAbsent' return='boolean'><parameter name='e' type='E'/></method><method name='clear'/><method name='clone' return='java.lang.Object'/><method name='contains' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method name='containsAll' return='boolean'><parameter name='c' type='java.util.Collection&lt;?&gt;'/></method><method name='get' return='E'><parameter name='index' type='int'/></method><method name='indexOf' return='int'><parameter name='e' type='E'/><parameter name='index' type='int'/></method><method name='indexOf' return='int'><parameter name='o' type='java.lang.Object'/></method><method name='isEmpty' return='boolean'/><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='lastIndexOf' return='int'><parameter name='e' type='E'/><parameter name='index' type='int'/></method><method name='lastIndexOf' return='int'><parameter name='o' type='java.lang.Object'/></method><method name='listIterator' return='java.util.ListIterator&lt;E&gt;'/><method name='listIterator' return='java.util.ListIterator&lt;E&gt;'><parameter name='index' type='int'/></method><method name='remove' return='E'><parameter name='index' type='int'/></method><method name='remove' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method name='removeAll' return='boolean'><parameter name='c' type='java.util.Collection&lt;?&gt;'/></method><method name='retainAll' return='boolean'><parameter name='c' type='java.util.Collection&lt;?&gt;'/></method><method name='set' api_removed='6' return='E'><parameter name='index' type='int'/><parameter name='e' type='E'/><parameter name='element' type='E'/></method><method name='size' return='int'/><method name='subList' return='java.util.List&lt;E&gt;'><parameter name='fromIndex' type='int'/><parameter name='toIndex' type='int'/></method><method name='toArray' return='java.lang.Object[]'/><method name='toArray' return='T[]'><parameter name='a' type='T[]'/></method><method api_added='6' name='add'><parameter name='index' type='int'/><parameter name='element' type='E'/></method><method api_added='6' name='set' return='E'><parameter name='index' type='int'/><parameter name='element' type='E'/></method></class><class name='CopyOnWriteArraySet' extends='java.util.AbstractSet'><implements name='java.io.Serializable'/><constructor name='CopyOnWriteArraySet' type='java.util.concurrent.CopyOnWriteArraySet'/><constructor name='CopyOnWriteArraySet' type='java.util.concurrent.CopyOnWriteArraySet'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='size' return='int'/></class><class name='CountDownLatch' extends='java.lang.Object'><constructor name='CountDownLatch' type='java.util.concurrent.CountDownLatch'><parameter name='count' type='int'/></constructor><method name='await'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='await' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='countDown'/><method name='getCount' return='long'/></class><class name='CyclicBarrier' extends='java.lang.Object'><constructor name='CyclicBarrier' type='java.util.concurrent.CyclicBarrier'><parameter name='parties' type='int'/><parameter name='barrierAction' type='java.lang.Runnable'/></constructor><constructor name='CyclicBarrier' type='java.util.concurrent.CyclicBarrier'><parameter name='parties' type='int'/></constructor><method name='await' return='int'><exception name='BrokenBarrierException' type='java.util.concurrent.BrokenBarrierException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='await' return='int'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='BrokenBarrierException' type='java.util.concurrent.BrokenBarrierException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method name='getNumberWaiting' return='int'/><method name='getParties' return='int'/><method name='isBroken' return='boolean'/><method name='reset'/></class><class name='DelayQueue' extends='java.util.AbstractQueue'><implements name='java.util.concurrent.BlockingQueue'/><constructor name='DelayQueue' type='java.util.concurrent.DelayQueue'/><constructor name='DelayQueue' type='java.util.concurrent.DelayQueue'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='e' type='E'/></method><method name='peek' return='E'/><method name='poll' api_removed='6' return='E'><parameter name='time' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='timeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='poll' return='E'/><method name='put' api_removed='6'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='remainingCapacity' return='int'/><method name='size' return='int'/><method name='take' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method api_added='6' name='poll' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='put'><parameter name='e' type='E'/></method></class><class name='Exchanger' extends='java.lang.Object'><constructor name='Exchanger' type='java.util.concurrent.Exchanger'/><method name='exchange' return='V'><parameter name='x' type='V'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='exchange' return='V'><parameter name='x' type='V'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method></class><class name='ExecutionException' extends='java.lang.Exception'><constructor name='ExecutionException' type='java.util.concurrent.ExecutionException' visibility='protected'/><constructor name='ExecutionException' type='java.util.concurrent.ExecutionException' visibility='protected'><parameter name='message' type='java.lang.String'/></constructor><constructor name='ExecutionException' type='java.util.concurrent.ExecutionException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='ExecutionException' type='java.util.concurrent.ExecutionException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='ExecutorCompletionService' extends='java.lang.Object'><implements name='java.util.concurrent.CompletionService'/><constructor name='ExecutorCompletionService' type='java.util.concurrent.ExecutorCompletionService'><parameter name='executor' type='java.util.concurrent.Executor'/></constructor><constructor name='ExecutorCompletionService' type='java.util.concurrent.ExecutorCompletionService'><parameter name='executor' type='java.util.concurrent.Executor'/><parameter name='completionQueue' type='java.util.concurrent.BlockingQueue&lt;java.util.concurrent.Future&lt;V&gt;&gt;'/></constructor><method name='poll' return='java.util.concurrent.Future&lt;V&gt;'/><method name='poll' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='submit' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='task' type='java.util.concurrent.Callable&lt;V&gt;'/></method><method name='submit' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='task' type='java.lang.Runnable'/><parameter name='result' type='V'/></method><method name='take' return='java.util.concurrent.Future&lt;V&gt;'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='Executors' extends='java.lang.Object'><method name='callable' static='true' return='java.util.concurrent.Callable&lt;T&gt;'><parameter name='task' type='java.lang.Runnable'/><parameter name='result' type='T'/></method><method name='callable' static='true' return='java.util.concurrent.Callable&lt;java.lang.Object&gt;'><parameter name='task' type='java.lang.Runnable'/></method><method name='callable' static='true' return='java.util.concurrent.Callable&lt;java.lang.Object&gt;'><parameter name='action' type='java.security.PrivilegedAction'/></method><method name='callable' static='true' return='java.util.concurrent.Callable&lt;java.lang.Object&gt;'><parameter name='action' type='java.security.PrivilegedExceptionAction'/></method><method name='defaultThreadFactory' static='true' return='java.util.concurrent.ThreadFactory'/><method name='newCachedThreadPool' static='true' return='java.util.concurrent.ExecutorService'/><method name='newCachedThreadPool' static='true' return='java.util.concurrent.ExecutorService'><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='newFixedThreadPool' static='true' return='java.util.concurrent.ExecutorService'><parameter name='nThreads' type='int'/></method><method name='newFixedThreadPool' static='true' return='java.util.concurrent.ExecutorService'><parameter name='nThreads' type='int'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='newScheduledThreadPool' static='true' return='java.util.concurrent.ScheduledExecutorService'><parameter name='corePoolSize' type='int'/></method><method name='newScheduledThreadPool' static='true' return='java.util.concurrent.ScheduledExecutorService'><parameter name='corePoolSize' type='int'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='newSingleThreadExecutor' static='true' return='java.util.concurrent.ExecutorService'/><method name='newSingleThreadExecutor' static='true' return='java.util.concurrent.ExecutorService'><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='newSingleThreadScheduledExecutor' static='true' return='java.util.concurrent.ScheduledExecutorService'/><method name='newSingleThreadScheduledExecutor' static='true' return='java.util.concurrent.ScheduledExecutorService'><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='privilegedCallable' static='true' return='java.util.concurrent.Callable&lt;T&gt;'><parameter name='callable' type='java.util.concurrent.Callable&lt;T&gt;'/></method><method name='privilegedCallableUsingCurrentClassLoader' static='true' return='java.util.concurrent.Callable&lt;T&gt;'><parameter name='callable' type='java.util.concurrent.Callable&lt;T&gt;'/></method><method name='privilegedThreadFactory' static='true' return='java.util.concurrent.ThreadFactory'/><method name='unconfigurableExecutorService' static='true' return='java.util.concurrent.ExecutorService'><parameter name='executor' type='java.util.concurrent.ExecutorService'/></method><method name='unconfigurableScheduledExecutorService' static='true' return='java.util.concurrent.ScheduledExecutorService'><parameter name='executor' type='java.util.concurrent.ScheduledExecutorService'/></method></class><class name='FutureTask' extends='java.lang.Object'><implements name='java.util.concurrent.Future'/><implements name='java.lang.Runnable'/><constructor name='FutureTask' type='java.util.concurrent.FutureTask'><parameter name='callable' type='java.util.concurrent.Callable&lt;V&gt;'/></constructor><constructor name='FutureTask' type='java.util.concurrent.FutureTask'><parameter name='runnable' type='java.lang.Runnable'/><parameter name='result' type='V'/></constructor><method name='cancel' return='boolean'><parameter name='mayInterruptIfRunning' type='boolean'/></method><method name='done' visibility='protected'/><method name='get' return='V'><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='get' return='V'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method name='isCancelled' return='boolean'/><method name='isDone' return='boolean'/><method name='run'/><method name='runAndReset' visibility='protected' return='boolean'/><method name='set' visibility='protected'><parameter name='v' type='V'/></method><method name='setException' visibility='protected'><parameter name='t' type='java.lang.Throwable'/></method></class><class name='LinkedBlockingQueue' extends='java.util.AbstractQueue'><implements name='java.util.concurrent.BlockingQueue'/><implements name='java.io.Serializable'/><constructor name='LinkedBlockingQueue' type='java.util.concurrent.LinkedBlockingQueue'/><constructor name='LinkedBlockingQueue' type='java.util.concurrent.LinkedBlockingQueue'><parameter name='capacity' type='int'/></constructor><constructor name='LinkedBlockingQueue' type='java.util.concurrent.LinkedBlockingQueue'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='poll' return='E'/><method name='put' api_removed='6'><parameter name='o' type='E'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='remainingCapacity' return='int'/><method name='size' return='int'/><method name='take' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='put'><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='PriorityBlockingQueue' extends='java.util.AbstractQueue'><implements name='java.util.concurrent.BlockingQueue'/><implements name='java.io.Serializable'/><constructor name='PriorityBlockingQueue' type='java.util.concurrent.PriorityBlockingQueue'/><constructor name='PriorityBlockingQueue' type='java.util.concurrent.PriorityBlockingQueue'><parameter name='initialCapacity' type='int'/></constructor><constructor name='PriorityBlockingQueue' type='java.util.concurrent.PriorityBlockingQueue'><parameter name='initialCapacity' type='int'/><parameter name='comparator' type='java.util.Comparator&lt;? super E&gt;'/></constructor><constructor name='PriorityBlockingQueue' type='java.util.concurrent.PriorityBlockingQueue'><parameter name='c' type='java.util.Collection&lt;? extends E&gt;'/></constructor><method name='comparator' return='java.util.Comparator&lt;? super E&gt;'/><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='e' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'/><method name='poll' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='put' api_removed='6'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='remainingCapacity' return='int'/><method name='size' return='int'/><method name='take' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method api_added='6' name='put'><parameter name='e' type='E'/></method></class><class name='RejectedExecutionException' extends='java.lang.RuntimeException'><constructor name='RejectedExecutionException' type='java.util.concurrent.RejectedExecutionException'/><constructor name='RejectedExecutionException' type='java.util.concurrent.RejectedExecutionException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='RejectedExecutionException' type='java.util.concurrent.RejectedExecutionException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='RejectedExecutionException' type='java.util.concurrent.RejectedExecutionException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='ScheduledThreadPoolExecutor' extends='java.util.concurrent.ThreadPoolExecutor'><implements name='java.util.concurrent.ScheduledExecutorService'/><constructor name='ScheduledThreadPoolExecutor' type='java.util.concurrent.ScheduledThreadPoolExecutor'><parameter name='corePoolSize' type='int'/></constructor><constructor name='ScheduledThreadPoolExecutor' type='java.util.concurrent.ScheduledThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></constructor><constructor name='ScheduledThreadPoolExecutor' type='java.util.concurrent.ScheduledThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='handler' type='java.util.concurrent.RejectedExecutionHandler'/></constructor><constructor name='ScheduledThreadPoolExecutor' type='java.util.concurrent.ScheduledThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/><parameter name='handler' type='java.util.concurrent.RejectedExecutionHandler'/></constructor><method name='getContinueExistingPeriodicTasksAfterShutdownPolicy' return='boolean'/><method name='getExecuteExistingDelayedTasksAfterShutdownPolicy' return='boolean'/><method name='schedule' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='schedule' return='java.util.concurrent.ScheduledFuture&lt;V&gt;'><parameter name='callable' type='java.util.concurrent.Callable&lt;V&gt;'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='scheduleAtFixedRate' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='initialDelay' type='long'/><parameter name='period' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='scheduleWithFixedDelay' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='initialDelay' type='long'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='setContinueExistingPeriodicTasksAfterShutdownPolicy'><parameter name='value' type='boolean'/></method><method name='setExecuteExistingDelayedTasksAfterShutdownPolicy'><parameter name='value' type='boolean'/></method></class><class name='Semaphore' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Semaphore' type='java.util.concurrent.Semaphore'><parameter name='permits' type='int'/></constructor><constructor name='Semaphore' type='java.util.concurrent.Semaphore'><parameter name='permits' type='int'/><parameter name='fair' type='boolean'/></constructor><method name='acquire'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='acquire'><parameter name='permits' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='acquireUninterruptibly'/><method name='acquireUninterruptibly'><parameter name='permits' type='int'/></method><method name='availablePermits' return='int'/><method name='drainPermits' return='int'/><method name='getQueueLength' final='true' return='int'/><method name='getQueuedThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='hasQueuedThreads' final='true' return='boolean'/><method name='isFair' return='boolean'/><method name='reducePermits' visibility='protected'><parameter name='reduction' type='int'/></method><method name='release'/><method name='release'><parameter name='permits' type='int'/></method><method name='tryAcquire' return='boolean'/><method name='tryAcquire' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='tryAcquire' return='boolean'><parameter name='permits' type='int'/></method><method name='tryAcquire' return='boolean'><parameter name='permits' type='int'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></class><class name='SynchronousQueue' extends='java.util.AbstractQueue'><implements name='java.util.concurrent.BlockingQueue'/><implements name='java.io.Serializable'/><constructor name='SynchronousQueue' type='java.util.concurrent.SynchronousQueue'/><constructor name='SynchronousQueue' type='java.util.concurrent.SynchronousQueue'><parameter name='fair' type='boolean'/></constructor><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='iterator' return='java.util.Iterator&lt;E&gt;'/><method name='offer' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='offer' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='peek' return='E'/><method name='poll' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='poll' return='E'/><method name='put'><parameter name='o' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='remainingCapacity' return='int'/><method name='size' return='int'/><method name='take' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='offer' return='boolean'><parameter name='e' type='E'/></method></class><class name='ThreadPoolExecutor' extends='java.util.concurrent.AbstractExecutorService'><constructor name='ThreadPoolExecutor' type='java.util.concurrent.ThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='maximumPoolSize' type='int'/><parameter name='keepAliveTime' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='workQueue' type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;'/></constructor><constructor name='ThreadPoolExecutor' type='java.util.concurrent.ThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='maximumPoolSize' type='int'/><parameter name='keepAliveTime' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='workQueue' type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></constructor><constructor name='ThreadPoolExecutor' type='java.util.concurrent.ThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='maximumPoolSize' type='int'/><parameter name='keepAliveTime' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='workQueue' type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;'/><parameter name='handler' type='java.util.concurrent.RejectedExecutionHandler'/></constructor><constructor name='ThreadPoolExecutor' type='java.util.concurrent.ThreadPoolExecutor'><parameter name='corePoolSize' type='int'/><parameter name='maximumPoolSize' type='int'/><parameter name='keepAliveTime' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='workQueue' type='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;'/><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/><parameter name='handler' type='java.util.concurrent.RejectedExecutionHandler'/></constructor><method name='afterExecute' visibility='protected'><parameter name='r' type='java.lang.Runnable'/><parameter name='t' type='java.lang.Throwable'/></method><method name='awaitTermination' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='beforeExecute' visibility='protected'><parameter name='t' type='java.lang.Thread'/><parameter name='r' type='java.lang.Runnable'/></method><method name='execute'><parameter name='command' type='java.lang.Runnable'/></method><method name='getActiveCount' return='int'/><method name='getCompletedTaskCount' return='long'/><method name='getCorePoolSize' return='int'/><method name='getKeepAliveTime' return='long'><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='getLargestPoolSize' return='int'/><method name='getMaximumPoolSize' return='int'/><method name='getPoolSize' return='int'/><method name='getQueue' return='java.util.concurrent.BlockingQueue&lt;java.lang.Runnable&gt;'/><method name='getRejectedExecutionHandler' return='java.util.concurrent.RejectedExecutionHandler'/><method name='getTaskCount' return='long'/><method name='getThreadFactory' return='java.util.concurrent.ThreadFactory'/><method name='isShutdown' return='boolean'/><method name='isTerminated' return='boolean'/><method name='isTerminating' return='boolean'/><method name='prestartAllCoreThreads' return='int'/><method name='prestartCoreThread' return='boolean'/><method name='purge'/><method name='remove' return='boolean'><parameter name='task' type='java.lang.Runnable'/></method><method name='setCorePoolSize'><parameter name='corePoolSize' type='int'/></method><method name='setKeepAliveTime'><parameter name='time' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='setMaximumPoolSize'><parameter name='maximumPoolSize' type='int'/></method><method name='setRejectedExecutionHandler'><parameter name='handler' type='java.util.concurrent.RejectedExecutionHandler'/></method><method name='setThreadFactory'><parameter name='threadFactory' type='java.util.concurrent.ThreadFactory'/></method><method name='shutdown'/><method name='shutdownNow' return='java.util.List&lt;java.lang.Runnable&gt;'/><method name='terminated' visibility='protected'/></class><class name='ThreadPoolExecutor.AbortPolicy' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.RejectedExecutionHandler'/><constructor name='ThreadPoolExecutor.AbortPolicy' type='java.util.concurrent.ThreadPoolExecutor.AbortPolicy'/><method name='rejectedExecution'><parameter name='r' type='java.lang.Runnable'/><parameter name='e' type='java.util.concurrent.ThreadPoolExecutor'/></method></class><class name='ThreadPoolExecutor.CallerRunsPolicy' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.RejectedExecutionHandler'/><constructor name='ThreadPoolExecutor.CallerRunsPolicy' type='java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy'/><method name='rejectedExecution'><parameter name='r' type='java.lang.Runnable'/><parameter name='e' type='java.util.concurrent.ThreadPoolExecutor'/></method></class><class name='ThreadPoolExecutor.DiscardOldestPolicy' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.RejectedExecutionHandler'/><constructor name='ThreadPoolExecutor.DiscardOldestPolicy' type='java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy'/><method name='rejectedExecution'><parameter name='r' type='java.lang.Runnable'/><parameter name='e' type='java.util.concurrent.ThreadPoolExecutor'/></method></class><class name='ThreadPoolExecutor.DiscardPolicy' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.RejectedExecutionHandler'/><constructor name='ThreadPoolExecutor.DiscardPolicy' type='java.util.concurrent.ThreadPoolExecutor.DiscardPolicy'/><method name='rejectedExecution'><parameter name='r' type='java.lang.Runnable'/><parameter name='e' type='java.util.concurrent.ThreadPoolExecutor'/></method></class><class name='TimeUnit' final='true' extends='java.lang.Enum'><method name='convert' api_removed='6' return='long'><parameter name='duration' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='sourceDuration' type='long'/><parameter name='sourceUnit' type='java.util.concurrent.TimeUnit'/></method><method name='sleep'><parameter name='timeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='timedJoin'><parameter name='thread' type='java.lang.Thread'/><parameter name='timeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='timedWait'><parameter name='obj' type='java.lang.Object'/><parameter name='timeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='toMicros' return='long'><parameter name='duration' type='long'/></method><method name='toMillis' return='long'><parameter name='duration' type='long'/></method><method name='toNanos' return='long'><parameter name='duration' type='long'/></method><method name='toSeconds' return='long'><parameter name='duration' type='long'/></method><method name='valueOf' static='true' return='java.util.concurrent.TimeUnit'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='java.util.concurrent.TimeUnit[]'/><method api_added='6' name='convert' return='long'><parameter name='sourceDuration' type='long'/><parameter name='sourceUnit' type='java.util.concurrent.TimeUnit'/></method></class><class name='TimeoutException' extends='java.lang.Exception'><constructor name='TimeoutException' type='java.util.concurrent.TimeoutException'/><constructor name='TimeoutException' type='java.util.concurrent.TimeoutException'><parameter name='message' type='java.lang.String'/></constructor></class><interface name='BlockingQueue' abstract='true'><implements name='java.util.Queue'/><method name='add' abstract='true' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='drainTo' abstract='true' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/></method><method name='drainTo' abstract='true' return='int'><parameter name='c' type='java.util.Collection&lt;? super E&gt;'/><parameter name='maxElements' type='int'/></method><method name='offer' abstract='true' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='e' type='E'/></method><method name='offer' abstract='true' api_removed='6' return='boolean'><parameter name='o' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='poll' abstract='true' return='E'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='put' abstract='true' api_removed='6'><parameter name='o' type='E'/><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='remainingCapacity' abstract='true' return='int'/><method name='take' abstract='true' return='E'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='5' name='contains' abstract='true' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method api_added='5' name='remove' abstract='true' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method api_added='6' name='add' abstract='true' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='offer' abstract='true' return='boolean'><parameter name='e' type='E'/></method><method api_added='6' name='offer' abstract='true' return='boolean'><parameter name='e' type='E'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method api_added='6' name='put' abstract='true'><parameter name='e' type='E'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></interface><interface name='Callable' abstract='true'><method name='call' abstract='true' return='V'><exception name='Exception' type='java.lang.Exception'/></method></interface><interface name='CompletionService' abstract='true'><method name='poll' abstract='true' return='java.util.concurrent.Future&lt;V&gt;'/><method name='poll' abstract='true' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='submit' abstract='true' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='task' type='java.util.concurrent.Callable&lt;V&gt;'/></method><method name='submit' abstract='true' return='java.util.concurrent.Future&lt;V&gt;'><parameter name='task' type='java.lang.Runnable'/><parameter name='result' type='V'/></method><method name='take' abstract='true' return='java.util.concurrent.Future&lt;V&gt;'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></interface><interface name='ConcurrentMap' abstract='true'><implements name='java.util.Map'/><method name='putIfAbsent' abstract='true' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method><method name='remove' abstract='true' return='boolean'><parameter name='key' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/></method><method name='replace' abstract='true' return='boolean'><parameter name='key' type='K'/><parameter name='oldValue' type='V'/><parameter name='newValue' type='V'/></method><method name='replace' abstract='true' return='V'><parameter name='key' type='K'/><parameter name='value' type='V'/></method></interface><interface name='Delayed' abstract='true'><implements name='java.lang.Comparable'/><method name='getDelay' abstract='true' return='long'><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method></interface><interface name='Executor' abstract='true'><method name='execute' abstract='true'><parameter name='command' type='java.lang.Runnable'/></method></interface><interface name='ExecutorService' abstract='true'><implements name='java.util.concurrent.Executor'/><method name='awaitTermination' abstract='true' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAll' abstract='true' return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAll' abstract='true' return='java.util.List&lt;java.util.concurrent.Future&lt;T&gt;&gt;'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAny' abstract='true' return='T'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='invokeAny' abstract='true' return='T'><parameter name='tasks' type='java.util.Collection&lt;java.util.concurrent.Callable&lt;T&gt;&gt;'/><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method name='isShutdown' abstract='true' return='boolean'/><method name='isTerminated' abstract='true' return='boolean'/><method name='shutdown' abstract='true'/><method name='shutdownNow' abstract='true' return='java.util.List&lt;java.lang.Runnable&gt;'/><method name='submit' abstract='true' return='java.util.concurrent.Future&lt;T&gt;'><parameter name='task' type='java.util.concurrent.Callable&lt;T&gt;'/></method><method name='submit' abstract='true' return='java.util.concurrent.Future&lt;T&gt;'><parameter name='task' type='java.lang.Runnable'/><parameter name='result' type='T'/></method><method name='submit' abstract='true' return='java.util.concurrent.Future&lt;?&gt;'><parameter name='task' type='java.lang.Runnable'/></method></interface><interface name='Future' abstract='true'><method name='cancel' abstract='true' return='boolean'><parameter name='mayInterruptIfRunning' type='boolean'/></method><method name='get' abstract='true' return='V'><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='get' abstract='true' return='V'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='ExecutionException' type='java.util.concurrent.ExecutionException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/><exception name='TimeoutException' type='java.util.concurrent.TimeoutException'/></method><method name='isCancelled' abstract='true' return='boolean'/><method name='isDone' abstract='true' return='boolean'/></interface><interface name='RejectedExecutionHandler' abstract='true'><method name='rejectedExecution' abstract='true'><parameter name='r' type='java.lang.Runnable'/><parameter name='executor' type='java.util.concurrent.ThreadPoolExecutor'/></method></interface><interface name='ScheduledExecutorService' abstract='true'><implements name='java.util.concurrent.ExecutorService'/><method name='schedule' abstract='true' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='schedule' abstract='true' return='java.util.concurrent.ScheduledFuture&lt;V&gt;'><parameter name='callable' type='java.util.concurrent.Callable&lt;V&gt;'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='scheduleAtFixedRate' abstract='true' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='initialDelay' type='long'/><parameter name='period' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='scheduleWithFixedDelay' abstract='true' return='java.util.concurrent.ScheduledFuture&lt;?&gt;'><parameter name='command' type='java.lang.Runnable'/><parameter name='initialDelay' type='long'/><parameter name='delay' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method></interface><interface name='ScheduledFuture' abstract='true'><implements name='java.util.concurrent.Delayed'/><implements name='java.util.concurrent.Future'/></interface><interface name='ThreadFactory' abstract='true'><method name='newThread' abstract='true' return='java.lang.Thread'><parameter name='r' type='java.lang.Runnable'/></method></interface></package><package name='java.util.concurrent.atomic'><class name='AtomicBoolean' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='AtomicBoolean' type='java.util.concurrent.atomic.AtomicBoolean'><parameter name='initialValue' type='boolean'/></constructor><constructor name='AtomicBoolean' type='java.util.concurrent.atomic.AtomicBoolean'/><method name='compareAndSet' final='true' return='boolean'><parameter name='expect' type='boolean'/><parameter name='update' type='boolean'/></method><method name='get' final='true' return='boolean'/><method name='getAndSet' final='true' return='boolean'><parameter name='newValue' type='boolean'/></method><method name='set' final='true'><parameter name='newValue' type='boolean'/></method><method name='weakCompareAndSet' return='boolean'><parameter name='expect' type='boolean'/><parameter name='update' type='boolean'/></method></class><class name='AtomicInteger' extends='java.lang.Number'><implements name='java.io.Serializable'/><constructor name='AtomicInteger' type='java.util.concurrent.atomic.AtomicInteger'><parameter name='initialValue' type='int'/></constructor><constructor name='AtomicInteger' type='java.util.concurrent.atomic.AtomicInteger'/><method name='addAndGet' final='true' return='int'><parameter name='delta' type='int'/></method><method name='compareAndSet' final='true' return='boolean'><parameter name='expect' type='int'/><parameter name='update' type='int'/></method><method name='decrementAndGet' final='true' return='int'/><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='get' final='true' return='int'/><method name='getAndAdd' final='true' return='int'><parameter name='delta' type='int'/></method><method name='getAndDecrement' final='true' return='int'/><method name='getAndIncrement' final='true' return='int'/><method name='getAndSet' final='true' return='int'><parameter name='newValue' type='int'/></method><method name='incrementAndGet' final='true' return='int'/><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='set' final='true'><parameter name='newValue' type='int'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='expect' type='int'/><parameter name='update' type='int'/></method></class><class name='AtomicIntegerArray' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='AtomicIntegerArray' type='java.util.concurrent.atomic.AtomicIntegerArray'><parameter name='length' type='int'/></constructor><constructor name='AtomicIntegerArray' type='java.util.concurrent.atomic.AtomicIntegerArray'><parameter name='array' type='int[]'/></constructor><method name='addAndGet' final='true' return='int'><parameter name='i' type='int'/><parameter name='delta' type='int'/></method><method name='compareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='int'/><parameter name='update' type='int'/></method><method name='decrementAndGet' final='true' return='int'><parameter name='i' type='int'/></method><method name='get' final='true' return='int'><parameter name='i' type='int'/></method><method name='getAndAdd' final='true' return='int'><parameter name='i' type='int'/><parameter name='delta' type='int'/></method><method name='getAndDecrement' final='true' return='int'><parameter name='i' type='int'/></method><method name='getAndIncrement' final='true' return='int'><parameter name='i' type='int'/></method><method name='getAndSet' final='true' return='int'><parameter name='i' type='int'/><parameter name='newValue' type='int'/></method><method name='incrementAndGet' final='true' return='int'><parameter name='i' type='int'/></method><method name='length' final='true' return='int'/><method name='set' final='true'><parameter name='i' type='int'/><parameter name='newValue' type='int'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='int'/><parameter name='update' type='int'/></method></class><class name='AtomicIntegerFieldUpdater' extends='java.lang.Object' abstract='true'><constructor name='AtomicIntegerFieldUpdater' type='java.util.concurrent.atomic.AtomicIntegerFieldUpdater' visibility='protected'/><method name='addAndGet' return='int'><parameter name='obj' type='T'/><parameter name='delta' type='int'/></method><method name='compareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='int'/><parameter name='update' type='int'/></method><method name='decrementAndGet' return='int'><parameter name='obj' type='T'/></method><method name='get' abstract='true' return='int'><parameter name='obj' type='T'/></method><method name='getAndAdd' return='int'><parameter name='obj' type='T'/><parameter name='delta' type='int'/></method><method name='getAndDecrement' return='int'><parameter name='obj' type='T'/></method><method name='getAndIncrement' return='int'><parameter name='obj' type='T'/></method><method name='getAndSet' return='int'><parameter name='obj' type='T'/><parameter name='newValue' type='int'/></method><method name='incrementAndGet' return='int'><parameter name='obj' type='T'/></method><method name='newUpdater' static='true' return='java.util.concurrent.atomic.AtomicIntegerFieldUpdater&lt;U&gt;'><parameter name='tclass' type='java.lang.Class&lt;U&gt;'/><parameter name='fieldName' type='java.lang.String'/></method><method name='set' abstract='true'><parameter name='obj' type='T'/><parameter name='newValue' type='int'/></method><method name='weakCompareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='int'/><parameter name='update' type='int'/></method></class><class name='AtomicLong' extends='java.lang.Number'><implements name='java.io.Serializable'/><constructor name='AtomicLong' type='java.util.concurrent.atomic.AtomicLong'><parameter name='initialValue' type='long'/></constructor><constructor name='AtomicLong' type='java.util.concurrent.atomic.AtomicLong'/><method name='addAndGet' final='true' return='long'><parameter name='delta' type='long'/></method><method name='compareAndSet' final='true' return='boolean'><parameter name='expect' type='long'/><parameter name='update' type='long'/></method><method name='decrementAndGet' final='true' return='long'/><method name='doubleValue' return='double'/><method name='floatValue' return='float'/><method name='get' final='true' return='long'/><method name='getAndAdd' final='true' return='long'><parameter name='delta' type='long'/></method><method name='getAndDecrement' final='true' return='long'/><method name='getAndIncrement' final='true' return='long'/><method name='getAndSet' final='true' return='long'><parameter name='newValue' type='long'/></method><method name='incrementAndGet' final='true' return='long'/><method name='intValue' return='int'/><method name='longValue' return='long'/><method name='set' final='true'><parameter name='newValue' type='long'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='expect' type='long'/><parameter name='update' type='long'/></method></class><class name='AtomicLongArray' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='AtomicLongArray' type='java.util.concurrent.atomic.AtomicLongArray'><parameter name='length' type='int'/></constructor><constructor name='AtomicLongArray' type='java.util.concurrent.atomic.AtomicLongArray'><parameter name='array' type='long[]'/></constructor><method name='addAndGet' return='long'><parameter name='i' type='int'/><parameter name='delta' type='long'/></method><method name='compareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='long'/><parameter name='update' type='long'/></method><method name='decrementAndGet' final='true' return='long'><parameter name='i' type='int'/></method><method name='get' final='true' return='long'><parameter name='i' type='int'/></method><method name='getAndAdd' final='true' return='long'><parameter name='i' type='int'/><parameter name='delta' type='long'/></method><method name='getAndDecrement' final='true' return='long'><parameter name='i' type='int'/></method><method name='getAndIncrement' final='true' return='long'><parameter name='i' type='int'/></method><method name='getAndSet' final='true' return='long'><parameter name='i' type='int'/><parameter name='newValue' type='long'/></method><method name='incrementAndGet' final='true' return='long'><parameter name='i' type='int'/></method><method name='length' final='true' return='int'/><method name='set' final='true'><parameter name='i' type='int'/><parameter name='newValue' type='long'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='long'/><parameter name='update' type='long'/></method></class><class name='AtomicLongFieldUpdater' extends='java.lang.Object' abstract='true'><constructor name='AtomicLongFieldUpdater' type='java.util.concurrent.atomic.AtomicLongFieldUpdater' visibility='protected'/><method name='addAndGet' return='long'><parameter name='obj' type='T'/><parameter name='delta' type='long'/></method><method name='compareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='long'/><parameter name='update' type='long'/></method><method name='decrementAndGet' return='long'><parameter name='obj' type='T'/></method><method name='get' abstract='true' return='long'><parameter name='obj' type='T'/></method><method name='getAndAdd' return='long'><parameter name='obj' type='T'/><parameter name='delta' type='long'/></method><method name='getAndDecrement' return='long'><parameter name='obj' type='T'/></method><method name='getAndIncrement' return='long'><parameter name='obj' type='T'/></method><method name='getAndSet' return='long'><parameter name='obj' type='T'/><parameter name='newValue' type='long'/></method><method name='incrementAndGet' return='long'><parameter name='obj' type='T'/></method><method name='newUpdater' static='true' return='java.util.concurrent.atomic.AtomicLongFieldUpdater&lt;U&gt;'><parameter name='tclass' type='java.lang.Class&lt;U&gt;'/><parameter name='fieldName' type='java.lang.String'/></method><method name='set' abstract='true'><parameter name='obj' type='T'/><parameter name='newValue' type='long'/></method><method name='weakCompareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='long'/><parameter name='update' type='long'/></method></class><class name='AtomicMarkableReference' extends='java.lang.Object'><constructor name='AtomicMarkableReference' type='java.util.concurrent.atomic.AtomicMarkableReference'><parameter name='initialRef' type='V'/><parameter name='initialMark' type='boolean'/></constructor><method name='attemptMark' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newMark' type='boolean'/></method><method name='compareAndSet' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newReference' type='V'/><parameter name='expectedMark' type='boolean'/><parameter name='newMark' type='boolean'/></method><method name='get' return='V'><parameter name='markHolder' type='boolean[]'/></method><method name='getReference' return='V'/><method name='isMarked' return='boolean'/><method name='set'><parameter name='newReference' type='V'/><parameter name='newMark' type='boolean'/></method><method name='weakCompareAndSet' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newReference' type='V'/><parameter name='expectedMark' type='boolean'/><parameter name='newMark' type='boolean'/></method></class><class name='AtomicReference' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='AtomicReference' type='java.util.concurrent.atomic.AtomicReference'><parameter name='initialValue' type='V'/></constructor><constructor name='AtomicReference' type='java.util.concurrent.atomic.AtomicReference'/><method name='compareAndSet' final='true' return='boolean'><parameter name='expect' type='V'/><parameter name='update' type='V'/></method><method name='get' final='true' return='V'/><method name='getAndSet' final='true' return='V'><parameter name='newValue' type='V'/></method><method name='set' final='true'><parameter name='newValue' type='V'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='expect' type='V'/><parameter name='update' type='V'/></method></class><class name='AtomicReferenceArray' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='AtomicReferenceArray' type='java.util.concurrent.atomic.AtomicReferenceArray'><parameter name='length' type='int'/></constructor><constructor name='AtomicReferenceArray' type='java.util.concurrent.atomic.AtomicReferenceArray'><parameter name='array' type='E[]'/></constructor><method name='compareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='E'/><parameter name='update' type='E'/></method><method name='get' final='true' return='E'><parameter name='i' type='int'/></method><method name='getAndSet' final='true' return='E'><parameter name='i' type='int'/><parameter name='newValue' type='E'/></method><method name='length' final='true' return='int'/><method name='set' final='true'><parameter name='i' type='int'/><parameter name='newValue' type='E'/></method><method name='weakCompareAndSet' final='true' return='boolean'><parameter name='i' type='int'/><parameter name='expect' type='E'/><parameter name='update' type='E'/></method></class><class name='AtomicReferenceFieldUpdater' extends='java.lang.Object' abstract='true'><constructor name='AtomicReferenceFieldUpdater' type='java.util.concurrent.atomic.AtomicReferenceFieldUpdater' visibility='protected'/><method name='compareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='V'/><parameter name='update' type='V'/></method><method name='get' abstract='true' return='V'><parameter name='obj' type='T'/></method><method name='getAndSet' return='V'><parameter name='obj' type='T'/><parameter name='newValue' type='V'/></method><method name='newUpdater' static='true' return='java.util.concurrent.atomic.AtomicReferenceFieldUpdater&lt;U, W&gt;'><parameter name='tclass' type='java.lang.Class&lt;U&gt;'/><parameter name='vclass' type='java.lang.Class&lt;W&gt;'/><parameter name='fieldName' type='java.lang.String'/></method><method name='set' abstract='true'><parameter name='obj' type='T'/><parameter name='newValue' type='V'/></method><method name='weakCompareAndSet' abstract='true' return='boolean'><parameter name='obj' type='T'/><parameter name='expect' type='V'/><parameter name='update' type='V'/></method></class><class name='AtomicStampedReference' extends='java.lang.Object'><constructor name='AtomicStampedReference' type='java.util.concurrent.atomic.AtomicStampedReference'><parameter name='initialRef' type='V'/><parameter name='initialStamp' type='int'/></constructor><method name='attemptStamp' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newStamp' type='int'/></method><method name='compareAndSet' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newReference' type='V'/><parameter name='expectedStamp' type='int'/><parameter name='newStamp' type='int'/></method><method name='get' return='V'><parameter name='stampHolder' type='int[]'/></method><method name='getReference' return='V'/><method name='getStamp' return='int'/><method name='set'><parameter name='newReference' type='V'/><parameter name='newStamp' type='int'/></method><method name='weakCompareAndSet' return='boolean'><parameter name='expectedReference' type='V'/><parameter name='newReference' type='V'/><parameter name='expectedStamp' type='int'/><parameter name='newStamp' type='int'/></method></class></package><package name='java.util.concurrent.locks'><class name='AbstractQueuedSynchronizer' extends='java.lang.Object' abstract='true'><implements name='java.io.Serializable'/><constructor name='AbstractQueuedSynchronizer' type='java.util.concurrent.locks.AbstractQueuedSynchronizer' visibility='protected'/><method name='acquire' final='true'><parameter name='arg' type='int'/></method><method name='acquireInterruptibly' final='true'><parameter name='arg' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='acquireShared' final='true'><parameter name='arg' type='int'/></method><method name='acquireSharedInterruptibly' final='true'><parameter name='arg' type='int'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='compareAndSetState' final='true' visibility='protected' return='boolean'><parameter name='expect' type='int'/><parameter name='update' type='int'/></method><method name='getExclusiveQueuedThreads' final='true' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getFirstQueuedThread' final='true' return='java.lang.Thread'/><method name='getQueueLength' final='true' return='int'/><method name='getQueuedThreads' final='true' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getSharedQueuedThreads' final='true' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getState' final='true' visibility='protected' return='int'/><method name='getWaitQueueLength' final='true' return='int'><parameter name='condition' type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject'/></method><method name='getWaitingThreads' final='true' return='java.util.Collection&lt;java.lang.Thread&gt;'><parameter name='condition' type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject'/></method><method name='hasContended' final='true' return='boolean'/><method name='hasQueuedThreads' final='true' return='boolean'/><method name='hasWaiters' final='true' return='boolean'><parameter name='condition' type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject'/></method><method name='isHeldExclusively' visibility='protected' return='boolean'/><method name='isQueued' final='true' return='boolean'><parameter name='thread' type='java.lang.Thread'/></method><method name='owns' final='true' return='boolean'><parameter name='condition' type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject'/></method><method name='release' final='true' return='boolean'><parameter name='arg' type='int'/></method><method name='releaseShared' final='true' return='boolean'><parameter name='arg' type='int'/></method><method name='setState' final='true' visibility='protected'><parameter name='newState' type='int'/></method><method name='tryAcquire' visibility='protected' return='boolean'><parameter name='arg' type='int'/></method><method name='tryAcquireNanos' final='true' return='boolean'><parameter name='arg' type='int'/><parameter name='nanosTimeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='tryAcquireShared' visibility='protected' return='int'><parameter name='arg' type='int'/></method><method name='tryAcquireSharedNanos' final='true' return='boolean'><parameter name='arg' type='int'/><parameter name='nanosTimeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='tryRelease' visibility='protected' return='boolean'><parameter name='arg' type='int'/></method><method name='tryReleaseShared' visibility='protected' return='boolean'><parameter name='arg' type='int'/></method></class><class name='AbstractQueuedSynchronizer.ConditionObject' extends='java.lang.Object'><implements name='java.util.concurrent.locks.Condition'/><implements name='java.io.Serializable'/><constructor name='AbstractQueuedSynchronizer.ConditionObject' type='java.util.concurrent.locks.AbstractQueuedSynchronizer.ConditionObject'/><method name='await' final='true'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='await' final='true' return='boolean'><parameter name='time' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='awaitNanos' final='true' return='long'><parameter name='nanosTimeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='awaitUninterruptibly' final='true'/><method name='awaitUntil' final='true' return='boolean'><parameter name='deadline' type='java.util.Date'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='getWaitQueueLength' final='true' visibility='protected' return='int'/><method name='getWaitingThreads' final='true' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='hasWaiters' final='true' visibility='protected' return='boolean'/><method name='signal' final='true'/><method name='signalAll' final='true'/></class><class name='LockSupport' extends='java.lang.Object'><method name='park' static='true'/><method name='parkNanos' static='true'><parameter name='nanos' type='long'/></method><method name='parkUntil' static='true'><parameter name='deadline' type='long'/></method><method name='unpark' static='true'><parameter name='thread' type='java.lang.Thread'/></method></class><class name='ReentrantLock' extends='java.lang.Object'><implements name='java.util.concurrent.locks.Lock'/><implements name='java.io.Serializable'/><constructor name='ReentrantLock' type='java.util.concurrent.locks.ReentrantLock'/><constructor name='ReentrantLock' type='java.util.concurrent.locks.ReentrantLock'><parameter name='fair' type='boolean'/></constructor><method name='getHoldCount' return='int'/><method name='getOwner' visibility='protected' return='java.lang.Thread'/><method name='getQueueLength' final='true' return='int'/><method name='getQueuedThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getWaitQueueLength' return='int'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='getWaitingThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='hasQueuedThread' final='true' return='boolean'><parameter name='thread' type='java.lang.Thread'/></method><method name='hasQueuedThreads' final='true' return='boolean'/><method name='hasWaiters' return='boolean'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='isFair' final='true' return='boolean'/><method name='isHeldByCurrentThread' return='boolean'/><method name='isLocked' return='boolean'/><method name='lock'/><method name='lockInterruptibly'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='newCondition' return='java.util.concurrent.locks.Condition'/><method name='tryLock' return='boolean'/><method name='tryLock' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='unlock'/></class><class name='ReentrantReadWriteLock' extends='java.lang.Object'><implements name='java.util.concurrent.locks.ReadWriteLock'/><implements name='java.io.Serializable'/><constructor name='ReentrantReadWriteLock' type='java.util.concurrent.locks.ReentrantReadWriteLock'/><constructor name='ReentrantReadWriteLock' type='java.util.concurrent.locks.ReentrantReadWriteLock'><parameter name='fair' type='boolean'/></constructor><method name='getOwner' visibility='protected' return='java.lang.Thread'/><method name='getQueueLength' final='true' return='int'/><method name='getQueuedReaderThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getQueuedThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getQueuedWriterThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'/><method name='getReadLockCount' return='int'/><method name='getWaitQueueLength' return='int'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='getWaitingThreads' visibility='protected' return='java.util.Collection&lt;java.lang.Thread&gt;'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='getWriteHoldCount' return='int'/><method name='hasQueuedThread' final='true' return='boolean'><parameter name='thread' type='java.lang.Thread'/></method><method name='hasQueuedThreads' final='true' return='boolean'/><method name='hasWaiters' return='boolean'><parameter name='condition' type='java.util.concurrent.locks.Condition'/></method><method name='isFair' final='true' return='boolean'/><method name='isWriteLocked' return='boolean'/><method name='isWriteLockedByCurrentThread' return='boolean'/><method name='readLock' return='java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock'/><method name='writeLock' return='java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock'/></class><class name='ReentrantReadWriteLock.ReadLock' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.locks.Lock'/><implements name='java.io.Serializable'/><constructor name='ReentrantReadWriteLock.ReadLock' type='java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock' visibility='protected'><parameter name='lock' type='java.util.concurrent.locks.ReentrantReadWriteLock'/></constructor><method name='lock'/><method name='lockInterruptibly'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='newCondition' return='java.util.concurrent.locks.Condition'/><method name='tryLock' return='boolean'/><method name='tryLock' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='unlock'/></class><class name='ReentrantReadWriteLock.WriteLock' extends='java.lang.Object' static='true'><implements name='java.util.concurrent.locks.Lock'/><implements name='java.io.Serializable'/><constructor name='ReentrantReadWriteLock.WriteLock' type='java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock' visibility='protected'><parameter name='lock' type='java.util.concurrent.locks.ReentrantReadWriteLock'/></constructor><method name='lock'/><method name='lockInterruptibly'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='newCondition' return='java.util.concurrent.locks.Condition'/><method name='tryLock' return='boolean'/><method name='tryLock' return='boolean'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='unlock'/></class><class api_added='5' name='AbstractOwnableSynchronizer' extends='java.lang.Object' abstract='true' visibility=''><implements name='java.io.Serializable'/><constructor api_added='5' name='AbstractOwnableSynchronizer' type='java.util.concurrent.locks.AbstractOwnableSynchronizer' visibility='protected'/><method api_added='5' name='getExclusiveOwnerThread' final='true' visibility='protected' return='java.lang.Thread'/><method api_added='5' name='setExclusiveOwnerThread' final='true' visibility='protected'><parameter name='t' type='java.lang.Thread'/></method></class><interface name='Condition' abstract='true'><method name='await' abstract='true'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='await' abstract='true' return='boolean'><parameter name='time' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='awaitNanos' abstract='true' return='long'><parameter name='nanosTimeout' type='long'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='awaitUninterruptibly' abstract='true'/><method name='awaitUntil' abstract='true' return='boolean'><parameter name='deadline' type='java.util.Date'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='signal' abstract='true'/><method name='signalAll' abstract='true'/></interface><interface name='Lock' abstract='true'><method name='lock' abstract='true'/><method name='lockInterruptibly' abstract='true'><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='newCondition' abstract='true' return='java.util.concurrent.locks.Condition'/><method name='tryLock' abstract='true' return='boolean'/><method name='tryLock' abstract='true' return='boolean'><parameter name='time' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='unlock' abstract='true'/></interface><interface name='ReadWriteLock' abstract='true'><method name='readLock' abstract='true' return='java.util.concurrent.locks.Lock'/><method name='writeLock' abstract='true' return='java.util.concurrent.locks.Lock'/></interface></package><package name='java.util.jar'><class name='Attributes' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.util.Map'/><constructor name='Attributes' type='java.util.jar.Attributes'/><constructor name='Attributes' type='java.util.jar.Attributes'><parameter name='attrib' type='java.util.jar.Attributes'/></constructor><constructor name='Attributes' type='java.util.jar.Attributes'><parameter name='size' type='int'/></constructor><field name='map' type='java.util.Map' visibility='protected'/><method name='clear'/><method name='clone' return='java.lang.Object'/><method name='containsKey' return='boolean'><parameter name='key' type='java.lang.Object'/></method><method name='containsValue' return='boolean'><parameter name='value' type='java.lang.Object'/></method><method name='entrySet' return='java.util.Set&lt;java.util.Map.Entry&lt;java.lang.Object, java.lang.Object&gt;&gt;'/><method name='get' return='java.lang.Object'><parameter name='key' type='java.lang.Object'/></method><method name='getValue' return='java.lang.String'><parameter name='name' type='java.util.jar.Attributes.Name'/></method><method name='getValue' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='isEmpty' return='boolean'/><method name='keySet' return='java.util.Set&lt;java.lang.Object&gt;'/><method name='put' return='java.lang.Object'><parameter name='key' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/></method><method name='putAll'><parameter name='attrib' type='java.util.Map&lt;?, ?&gt;'/></method><method name='putValue' return='java.lang.String'><parameter name='name' type='java.lang.String'/><parameter name='val' type='java.lang.String'/></method><method name='remove' return='java.lang.Object'><parameter name='key' type='java.lang.Object'/></method><method name='size' return='int'/><method name='values' return='java.util.Collection&lt;java.lang.Object&gt;'/></class><class name='Attributes.Name' extends='java.lang.Object' static='true'><constructor name='Attributes.Name' type='java.util.jar.Attributes.Name'><parameter name='s' type='java.lang.String'/></constructor><field name='CLASS_PATH' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='CONTENT_TYPE' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='EXTENSION_INSTALLATION' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='EXTENSION_LIST' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='EXTENSION_NAME' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='IMPLEMENTATION_TITLE' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='IMPLEMENTATION_URL' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='IMPLEMENTATION_VENDOR' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='IMPLEMENTATION_VENDOR_ID' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='IMPLEMENTATION_VERSION' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='MAIN_CLASS' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='MANIFEST_VERSION' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='SEALED' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='SIGNATURE_VERSION' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='SPECIFICATION_TITLE' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='SPECIFICATION_VENDOR' final='true' static='true' type='java.util.jar.Attributes.Name'/><field name='SPECIFICATION_VERSION' final='true' static='true' type='java.util.jar.Attributes.Name'/></class><class name='JarEntry' extends='java.util.zip.ZipEntry'><constructor name='JarEntry' type='java.util.jar.JarEntry'><parameter name='name' type='java.lang.String'/></constructor><constructor name='JarEntry' type='java.util.jar.JarEntry'><parameter name='entry' type='java.util.zip.ZipEntry'/></constructor><constructor name='JarEntry' type='java.util.jar.JarEntry'><parameter name='je' type='java.util.jar.JarEntry'/></constructor><method name='getAttributes' return='java.util.jar.Attributes'><exception name='IOException' type='java.io.IOException'/></method><method name='getCertificates' return='java.security.cert.Certificate[]'/><method name='getCodeSigners' return='java.security.CodeSigner[]'/></class><class name='JarException' extends='java.util.zip.ZipException'><constructor name='JarException' type='java.util.jar.JarException'/><constructor name='JarException' type='java.util.jar.JarException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='JarFile' extends='java.util.zip.ZipFile'><constructor name='JarFile' type='java.util.jar.JarFile'><parameter name='file' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarFile' type='java.util.jar.JarFile'><parameter name='file' type='java.io.File'/><parameter name='verify' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarFile' type='java.util.jar.JarFile'><parameter name='file' type='java.io.File'/><parameter name='verify' type='boolean'/><parameter name='mode' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarFile' type='java.util.jar.JarFile'><parameter name='filename' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarFile' type='java.util.jar.JarFile'><parameter name='filename' type='java.lang.String'/><parameter name='verify' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><field name='MANIFEST_NAME' final='true' static='true' value='&quot;META-INF/MANIFEST.MF&quot;' type='java.lang.String'/><method name='getJarEntry' return='java.util.jar.JarEntry'><parameter name='name' type='java.lang.String'/></method><method name='getManifest' return='java.util.jar.Manifest'><exception name='IOException' type='java.io.IOException'/></method></class><class name='JarInputStream' extends='java.util.zip.ZipInputStream'><constructor name='JarInputStream' type='java.util.jar.JarInputStream'><parameter name='stream' type='java.io.InputStream'/><parameter name='verify' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarInputStream' type='java.util.jar.JarInputStream'><parameter name='stream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getManifest' return='java.util.jar.Manifest'/><method name='getNextJarEntry' return='java.util.jar.JarEntry'><exception name='IOException' type='java.io.IOException'/></method></class><class name='JarOutputStream' extends='java.util.zip.ZipOutputStream'><constructor name='JarOutputStream' type='java.util.jar.JarOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='mf' type='java.util.jar.Manifest'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='JarOutputStream' type='java.util.jar.JarOutputStream'><parameter name='os' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class name='Manifest' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><constructor name='Manifest' type='java.util.jar.Manifest'/><constructor name='Manifest' type='java.util.jar.Manifest'><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='Manifest' type='java.util.jar.Manifest'><parameter name='man' type='java.util.jar.Manifest'/></constructor><method name='clear'/><method name='clone' return='java.lang.Object'/><method name='getAttributes' return='java.util.jar.Attributes'><parameter name='name' type='java.lang.String'/></method><method name='getEntries' return='java.util.Map&lt;java.lang.String, java.util.jar.Attributes&gt;'/><method name='getMainAttributes' return='java.util.jar.Attributes'/><method name='read'><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='os' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='Pack200' extends='java.lang.Object' abstract='true'><method name='newPacker' static='true' return='java.util.jar.Pack200.Packer'/><method name='newUnpacker' static='true' return='java.util.jar.Pack200.Unpacker'/></class><interface name='Pack200.Packer' abstract='true' static='true'><field name='CLASS_ATTRIBUTE_PFX' final='true' static='true' value='&quot;pack.class.attribute.&quot;' type='java.lang.String'/><field name='CODE_ATTRIBUTE_PFX' final='true' static='true' value='&quot;pack.code.attribute.&quot;' type='java.lang.String'/><field name='DEFLATE_HINT' final='true' static='true' value='&quot;pack.deflate.hint&quot;' type='java.lang.String'/><field name='EFFORT' final='true' static='true' value='&quot;pack.effort&quot;' type='java.lang.String'/><field name='ERROR' final='true' static='true' value='&quot;error&quot;' type='java.lang.String'/><field name='FALSE' final='true' static='true' value='&quot;false&quot;' type='java.lang.String'/><field name='FIELD_ATTRIBUTE_PFX' final='true' static='true' value='&quot;pack.field.attribute.&quot;' type='java.lang.String'/><field name='KEEP' final='true' static='true' value='&quot;keep&quot;' type='java.lang.String'/><field name='KEEP_FILE_ORDER' final='true' static='true' value='&quot;pack.keep.file.order&quot;' type='java.lang.String'/><field name='LATEST' final='true' static='true' value='&quot;latest&quot;' type='java.lang.String'/><field name='METHOD_ATTRIBUTE_PFX' final='true' static='true' value='&quot;pack.method.attribute.&quot;' type='java.lang.String'/><field name='MODIFICATION_TIME' final='true' static='true' value='&quot;pack.modification.time&quot;' type='java.lang.String'/><field name='PASS' final='true' static='true' value='&quot;pass&quot;' type='java.lang.String'/><field name='PASS_FILE_PFX' final='true' static='true' value='&quot;pack.pass.file.&quot;' type='java.lang.String'/><field name='PROGRESS' final='true' static='true' value='&quot;pack.progress&quot;' type='java.lang.String'/><field name='SEGMENT_LIMIT' final='true' static='true' value='&quot;pack.segment.limit&quot;' type='java.lang.String'/><field name='STRIP' final='true' static='true' value='&quot;strip&quot;' type='java.lang.String'/><field name='TRUE' final='true' static='true' value='&quot;true&quot;' type='java.lang.String'/><field name='UNKNOWN_ATTRIBUTE' final='true' static='true' value='&quot;pack.unknown.attribute&quot;' type='java.lang.String'/><method name='pack' abstract='true'><parameter name='in' type='java.util.jar.JarFile'/><parameter name='out' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='pack' abstract='true'><parameter name='in' type='java.util.jar.JarInputStream'/><parameter name='out' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='properties' abstract='true' return='java.util.SortedMap&lt;java.lang.String, java.lang.String&gt;'/><method api_added='3' name='addPropertyChangeListener' abstract='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='removePropertyChangeListener' abstract='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method></interface><interface name='Pack200.Unpacker' abstract='true' static='true'><field name='DEFLATE_HINT' final='true' static='true' value='&quot;unpack.deflate.hint&quot;' type='java.lang.String'/><field name='FALSE' final='true' static='true' value='&quot;false&quot;' type='java.lang.String'/><field name='KEEP' final='true' static='true' value='&quot;keep&quot;' type='java.lang.String'/><field name='PROGRESS' final='true' static='true' value='&quot;unpack.progress&quot;' type='java.lang.String'/><field name='TRUE' final='true' static='true' value='&quot;true&quot;' type='java.lang.String'/><method name='properties' abstract='true' return='java.util.SortedMap&lt;java.lang.String, java.lang.String&gt;'/><method name='unpack' abstract='true'><parameter name='in' type='java.io.InputStream'/><parameter name='out' type='java.util.jar.JarOutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='unpack' abstract='true'><parameter name='in' type='java.io.File'/><parameter name='out' type='java.util.jar.JarOutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='3' name='addPropertyChangeListener' abstract='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='removePropertyChangeListener' abstract='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method></interface></package><package name='java.util.logging'><class name='ConsoleHandler' extends='java.util.logging.StreamHandler'><constructor name='ConsoleHandler' type='java.util.logging.ConsoleHandler'/></class><class name='ErrorManager' extends='java.lang.Object'><constructor name='ErrorManager' type='java.util.logging.ErrorManager'/><field name='CLOSE_FAILURE' final='true' static='true' value='3' type='int'/><field name='FLUSH_FAILURE' final='true' static='true' value='2' type='int'/><field name='FORMAT_FAILURE' final='true' static='true' value='5' type='int'/><field name='GENERIC_FAILURE' final='true' static='true' value='0' type='int'/><field name='OPEN_FAILURE' final='true' static='true' value='4' type='int'/><field name='WRITE_FAILURE' final='true' static='true' value='1' type='int'/><method name='error'><parameter name='message' type='java.lang.String'/><parameter name='exception' type='java.lang.Exception'/><parameter name='errorCode' type='int'/></method></class><class name='FileHandler' extends='java.util.logging.StreamHandler'><constructor name='FileHandler' type='java.util.logging.FileHandler'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileHandler' type='java.util.logging.FileHandler'><parameter name='pattern' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileHandler' type='java.util.logging.FileHandler'><parameter name='pattern' type='java.lang.String'/><parameter name='append' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileHandler' type='java.util.logging.FileHandler'><parameter name='pattern' type='java.lang.String'/><parameter name='limit' type='int'/><parameter name='count' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='FileHandler' type='java.util.logging.FileHandler'><parameter name='pattern' type='java.lang.String'/><parameter name='limit' type='int'/><parameter name='count' type='int'/><parameter name='append' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class name='Formatter' extends='java.lang.Object' abstract='true'><constructor name='Formatter' type='java.util.logging.Formatter' visibility='protected'/><method name='format' abstract='true' return='java.lang.String'><parameter name='r' type='java.util.logging.LogRecord'/></method><method name='formatMessage' return='java.lang.String'><parameter name='r' type='java.util.logging.LogRecord'/></method><method name='getHead' return='java.lang.String'><parameter name='h' type='java.util.logging.Handler'/></method><method name='getTail' return='java.lang.String'><parameter name='h' type='java.util.logging.Handler'/></method></class><class name='Handler' extends='java.lang.Object' abstract='true'><constructor name='Handler' type='java.util.logging.Handler' visibility='protected'/><method name='close' abstract='true'/><method name='flush' abstract='true'/><method name='getEncoding' return='java.lang.String'/><method name='getErrorManager' return='java.util.logging.ErrorManager'/><method name='getFilter' return='java.util.logging.Filter'/><method name='getFormatter' return='java.util.logging.Formatter'/><method name='getLevel' return='java.util.logging.Level'/><method name='isLoggable' return='boolean'><parameter name='record' type='java.util.logging.LogRecord'/></method><method name='publish' abstract='true'><parameter name='record' type='java.util.logging.LogRecord'/></method><method name='reportError' visibility='protected'><parameter name='msg' type='java.lang.String'/><parameter name='ex' type='java.lang.Exception'/><parameter name='code' type='int'/></method><method name='setEncoding'><parameter name='encoding' type='java.lang.String'/><exception name='SecurityException' type='java.lang.SecurityException'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></method><method name='setErrorManager'><parameter name='em' type='java.util.logging.ErrorManager'/></method><method name='setFilter'><parameter name='newFilter' type='java.util.logging.Filter'/></method><method name='setFormatter'><parameter name='newFormatter' type='java.util.logging.Formatter'/></method><method name='setLevel'><parameter name='newLevel' type='java.util.logging.Level'/></method></class><class name='Level' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Level' type='java.util.logging.Level' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='level' type='int'/></constructor><constructor name='Level' type='java.util.logging.Level' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='level' type='int'/><parameter name='resourceBundleName' type='java.lang.String'/></constructor><field name='ALL' final='true' static='true' type='java.util.logging.Level'/><field name='CONFIG' final='true' static='true' type='java.util.logging.Level'/><field name='FINE' final='true' static='true' type='java.util.logging.Level'/><field name='FINER' final='true' static='true' type='java.util.logging.Level'/><field name='FINEST' final='true' static='true' type='java.util.logging.Level'/><field name='INFO' final='true' static='true' type='java.util.logging.Level'/><field name='OFF' final='true' static='true' type='java.util.logging.Level'/><field name='SEVERE' final='true' static='true' type='java.util.logging.Level'/><field name='WARNING' final='true' static='true' type='java.util.logging.Level'/><method name='getLocalizedName' return='java.lang.String'/><method name='getName' return='java.lang.String'/><method name='getResourceBundleName' return='java.lang.String'/><method name='intValue' final='true' return='int'/><method name='parse' final='true' static='true' return='java.util.logging.Level'><parameter name='name' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='toString' final='true' return='java.lang.String'/></class><class name='LogManager' extends='java.lang.Object'><constructor name='LogManager' type='java.util.logging.LogManager' visibility='protected'/><field name='LOGGING_MXBEAN_NAME' final='true' static='true' value='&quot;java.util.logging:type=Logging&quot;' type='java.lang.String'/><method name='addLogger' synchronized='true' return='boolean'><parameter name='logger' type='java.util.logging.Logger'/></method><method name='checkAccess'/><method name='getLogManager' static='true' return='java.util.logging.LogManager'/><method name='getLogger' synchronized='true' return='java.util.logging.Logger'><parameter name='name' type='java.lang.String'/></method><method name='getLoggerNames' synchronized='true' return='java.util.Enumeration&lt;java.lang.String&gt;'/><method name='getProperty' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='readConfiguration'><exception name='IOException' type='java.io.IOException'/></method><method name='readConfiguration'><parameter name='ins' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='reset'/><method api_added='3' name='addPropertyChangeListener'><parameter name='l' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='getLoggingMXBean' static='true' return='java.util.logging.LoggingMXBean'/><method api_added='3' name='removePropertyChangeListener'><parameter name='l' type='java.beans.PropertyChangeListener'/></method></class><class name='LogRecord' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='LogRecord' type='java.util.logging.LogRecord'><parameter name='level' type='java.util.logging.Level'/><parameter name='msg' type='java.lang.String'/></constructor><method name='getLevel' return='java.util.logging.Level'/><method name='getLoggerName' return='java.lang.String'/><method name='getMessage' return='java.lang.String'/><method name='getMillis' return='long'/><method name='getParameters' return='java.lang.Object[]'/><method name='getResourceBundle' return='java.util.ResourceBundle'/><method name='getResourceBundleName' return='java.lang.String'/><method name='getSequenceNumber' return='long'/><method name='getSourceClassName' return='java.lang.String'/><method name='getSourceMethodName' return='java.lang.String'/><method name='getThreadID' return='int'/><method name='getThrown' return='java.lang.Throwable'/><method name='setLevel'><parameter name='level' type='java.util.logging.Level'/></method><method name='setLoggerName'><parameter name='loggerName' type='java.lang.String'/></method><method name='setMessage'><parameter name='message' type='java.lang.String'/></method><method name='setMillis'><parameter name='millis' type='long'/></method><method name='setParameters'><parameter name='parameters' type='java.lang.Object[]'/></method><method name='setResourceBundle'><parameter name='resourceBundle' type='java.util.ResourceBundle'/></method><method name='setResourceBundleName'><parameter name='resourceBundleName' type='java.lang.String'/></method><method name='setSequenceNumber'><parameter name='sequenceNumber' type='long'/></method><method name='setSourceClassName'><parameter name='sourceClassName' type='java.lang.String'/></method><method name='setSourceMethodName'><parameter name='sourceMethodName' type='java.lang.String'/></method><method name='setThreadID'><parameter name='threadID' type='int'/></method><method name='setThrown'><parameter name='thrown' type='java.lang.Throwable'/></method></class><class name='Logger' extends='java.lang.Object'><constructor name='Logger' type='java.util.logging.Logger' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='resourceBundleName' type='java.lang.String'/></constructor><field name='global' final='true' static='true' type='java.util.logging.Logger'/><method name='addHandler'><parameter name='handler' type='java.util.logging.Handler'/></method><method name='config'><parameter name='msg' type='java.lang.String'/></method><method name='entering'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/></method><method name='entering'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='param' type='java.lang.Object'/></method><method name='entering'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='params' type='java.lang.Object[]'/></method><method name='exiting'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/></method><method name='exiting'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='result' type='java.lang.Object'/></method><method name='fine'><parameter name='msg' type='java.lang.String'/></method><method name='finer'><parameter name='msg' type='java.lang.String'/></method><method name='finest'><parameter name='msg' type='java.lang.String'/></method><method name='getAnonymousLogger' static='true' return='java.util.logging.Logger'/><method name='getAnonymousLogger' static='true' return='java.util.logging.Logger'><parameter name='resourceBundleName' type='java.lang.String'/></method><method name='getFilter' return='java.util.logging.Filter'/><method name='getHandlers' return='java.util.logging.Handler[]'/><method name='getLevel' return='java.util.logging.Level'/><method name='getLogger' static='true' return='java.util.logging.Logger'><parameter name='name' type='java.lang.String'/></method><method name='getLogger' static='true' return='java.util.logging.Logger'><parameter name='name' type='java.lang.String'/><parameter name='resourceBundleName' type='java.lang.String'/></method><method name='getName' return='java.lang.String'/><method name='getParent' return='java.util.logging.Logger'/><method name='getResourceBundle' return='java.util.ResourceBundle'/><method name='getResourceBundleName' return='java.lang.String'/><method name='getUseParentHandlers' return='boolean'/><method name='info'><parameter name='msg' type='java.lang.String'/></method><method name='isLoggable' return='boolean'><parameter name='l' type='java.util.logging.Level'/></method><method name='log'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='msg' type='java.lang.String'/></method><method name='log'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='msg' type='java.lang.String'/><parameter name='param' type='java.lang.Object'/></method><method name='log'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='msg' type='java.lang.String'/><parameter name='params' type='java.lang.Object[]'/></method><method name='log'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='msg' type='java.lang.String'/><parameter name='thrown' type='java.lang.Throwable'/></method><method name='log'><parameter name='record' type='java.util.logging.LogRecord'/></method><method name='logp'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='logp'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='param' type='java.lang.Object'/></method><method name='logp'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='params' type='java.lang.Object[]'/></method><method name='logp'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='thrown' type='java.lang.Throwable'/></method><method name='logrb'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='bundleName' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/></method><method name='logrb'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='bundleName' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='param' type='java.lang.Object'/></method><method name='logrb'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='bundleName' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='params' type='java.lang.Object[]'/></method><method name='logrb'><parameter name='logLevel' type='java.util.logging.Level'/><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='bundleName' type='java.lang.String'/><parameter name='msg' type='java.lang.String'/><parameter name='thrown' type='java.lang.Throwable'/></method><method name='removeHandler'><parameter name='handler' type='java.util.logging.Handler'/></method><method name='setFilter'><parameter name='newFilter' type='java.util.logging.Filter'/></method><method name='setLevel'><parameter name='newLevel' type='java.util.logging.Level'/></method><method name='setParent'><parameter name='parent' type='java.util.logging.Logger'/></method><method name='setUseParentHandlers'><parameter name='notifyParentHandlers' type='boolean'/></method><method name='severe'><parameter name='msg' type='java.lang.String'/></method><method name='throwing'><parameter name='sourceClass' type='java.lang.String'/><parameter name='sourceMethod' type='java.lang.String'/><parameter name='thrown' type='java.lang.Throwable'/></method><method name='warning'><parameter name='msg' type='java.lang.String'/></method></class><class name='LoggingPermission' final='true' extends='java.security.BasicPermission'><implements name='java.security.Guard'/><implements name='java.io.Serializable'/><constructor name='LoggingPermission' type='java.util.logging.LoggingPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='MemoryHandler' extends='java.util.logging.Handler'><constructor name='MemoryHandler' type='java.util.logging.MemoryHandler'/><constructor name='MemoryHandler' type='java.util.logging.MemoryHandler'><parameter name='target' type='java.util.logging.Handler'/><parameter name='size' type='int'/><parameter name='pushLevel' type='java.util.logging.Level'/></constructor><method name='close'/><method name='flush'/><method name='getPushLevel' return='java.util.logging.Level'/><method name='publish' synchronized='true'><parameter name='record' type='java.util.logging.LogRecord'/></method><method name='push'/><method name='setPushLevel'><parameter name='newLevel' type='java.util.logging.Level'/></method></class><class name='SimpleFormatter' extends='java.util.logging.Formatter'><constructor name='SimpleFormatter' type='java.util.logging.SimpleFormatter'/><method name='format' return='java.lang.String'><parameter name='r' type='java.util.logging.LogRecord'/></method></class><class name='SocketHandler' extends='java.util.logging.StreamHandler'><constructor name='SocketHandler' type='java.util.logging.SocketHandler'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='SocketHandler' type='java.util.logging.SocketHandler'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class name='StreamHandler' extends='java.util.logging.Handler'><constructor name='StreamHandler' type='java.util.logging.StreamHandler'/><constructor name='StreamHandler' type='java.util.logging.StreamHandler'><parameter name='os' type='java.io.OutputStream'/><parameter name='formatter' type='java.util.logging.Formatter'/></constructor><method name='close'/><method name='flush'/><method name='publish' synchronized='true'><parameter name='record' type='java.util.logging.LogRecord'/></method><method name='setOutputStream' visibility='protected'><parameter name='os' type='java.io.OutputStream'/></method></class><class name='XMLFormatter' extends='java.util.logging.Formatter'><constructor name='XMLFormatter' type='java.util.logging.XMLFormatter'/><method name='format' return='java.lang.String'><parameter name='r' type='java.util.logging.LogRecord'/></method></class><interface name='Filter' abstract='true'><method name='isLoggable' abstract='true' return='boolean'><parameter name='record' type='java.util.logging.LogRecord'/></method></interface><interface name='LoggingMXBean' abstract='true'><method name='getLoggerLevel' abstract='true' return='java.lang.String'><parameter name='loggerName' type='java.lang.String'/></method><method name='getLoggerNames' abstract='true' return='java.util.List&lt;java.lang.String&gt;'/><method name='getParentLoggerName' abstract='true' return='java.lang.String'><parameter name='loggerName' type='java.lang.String'/></method><method name='setLoggerLevel' abstract='true'><parameter name='loggerName' type='java.lang.String'/><parameter name='levelName' type='java.lang.String'/></method></interface></package><package name='java.util.prefs'><class name='AbstractPreferences' extends='java.util.prefs.Preferences' abstract='true'><constructor name='AbstractPreferences' type='java.util.prefs.AbstractPreferences' visibility='protected'><parameter name='parent' type='java.util.prefs.AbstractPreferences'/><parameter name='name' type='java.lang.String'/></constructor><field name='lock' final='true' type='java.lang.Object' visibility='protected'/><field name='newNode' type='boolean' visibility='protected'/><method name='absolutePath' return='java.lang.String'/><method name='addNodeChangeListener'><parameter name='ncl' type='java.util.prefs.NodeChangeListener'/></method><method name='addPreferenceChangeListener'><parameter name='pcl' type='java.util.prefs.PreferenceChangeListener'/></method><method name='cachedChildren' final='true' visibility='protected' return='java.util.prefs.AbstractPreferences[]'/><method name='childSpi' abstract='true' visibility='protected' return='java.util.prefs.AbstractPreferences'><parameter name='name' type='java.lang.String'/></method><method name='childrenNames' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='childrenNamesSpi' abstract='true' visibility='protected' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='clear'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='exportNode'><parameter name='ostream' type='java.io.OutputStream'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/><exception name='IOException' type='java.io.IOException'/></method><method name='exportSubtree'><parameter name='ostream' type='java.io.OutputStream'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='flushSpi' abstract='true' visibility='protected'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='get' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='java.lang.String'/></method><method name='getBoolean' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='boolean'/></method><method name='getByteArray' return='byte[]'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='byte[]'/></method><method name='getChild' visibility='protected' return='java.util.prefs.AbstractPreferences'><parameter name='name' type='java.lang.String'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='getDouble' return='double'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='double'/></method><method name='getFloat' return='float'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='float'/></method><method name='getInt' return='int'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='int'/></method><method name='getLong' return='long'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='long'/></method><method name='getSpi' abstract='true' visibility='protected' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='isRemoved' visibility='protected' return='boolean'/><method name='isUserNode' return='boolean'/><method name='keys' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='keysSpi' abstract='true' visibility='protected' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='name' return='java.lang.String'/><method name='node' return='java.util.prefs.Preferences'><parameter name='name' type='java.lang.String'/></method><method name='nodeExists' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='parent' return='java.util.prefs.Preferences'/><method name='put'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='putBoolean'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='putByteArray'><parameter name='key' type='java.lang.String'/><parameter name='value' type='byte[]'/></method><method name='putDouble'><parameter name='key' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='putFloat'><parameter name='key' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putInt'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putLong'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='putSpi' abstract='true' visibility='protected'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='remove'><parameter name='key' type='java.lang.String'/></method><method name='removeNode'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='removeNodeChangeListener'><parameter name='ncl' type='java.util.prefs.NodeChangeListener'/></method><method name='removeNodeSpi' abstract='true' visibility='protected'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='removePreferenceChangeListener'><parameter name='pcl' type='java.util.prefs.PreferenceChangeListener'/></method><method name='removeSpi' abstract='true' visibility='protected'><parameter name='key' type='java.lang.String'/></method><method name='sync'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='syncSpi' abstract='true' visibility='protected'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='toString' return='java.lang.String'/></class><class name='BackingStoreException' extends='java.lang.Exception'><constructor name='BackingStoreException' type='java.util.prefs.BackingStoreException'><parameter name='s' type='java.lang.String'/></constructor><constructor name='BackingStoreException' type='java.util.prefs.BackingStoreException'><parameter name='t' type='java.lang.Throwable'/></constructor></class><class name='InvalidPreferencesFormatException' extends='java.lang.Exception'><constructor name='InvalidPreferencesFormatException' type='java.util.prefs.InvalidPreferencesFormatException'><parameter name='s' type='java.lang.String'/></constructor><constructor name='InvalidPreferencesFormatException' type='java.util.prefs.InvalidPreferencesFormatException'><parameter name='s' type='java.lang.String'/><parameter name='t' type='java.lang.Throwable'/></constructor><constructor name='InvalidPreferencesFormatException' type='java.util.prefs.InvalidPreferencesFormatException'><parameter name='t' type='java.lang.Throwable'/></constructor></class><class name='NodeChangeEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='NodeChangeEvent' type='java.util.prefs.NodeChangeEvent'><parameter name='p' type='java.util.prefs.Preferences'/><parameter name='c' type='java.util.prefs.Preferences'/></constructor><method name='getChild' return='java.util.prefs.Preferences'/><method name='getParent' return='java.util.prefs.Preferences'/></class><class name='PreferenceChangeEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='PreferenceChangeEvent' type='java.util.prefs.PreferenceChangeEvent'><parameter name='p' type='java.util.prefs.Preferences'/><parameter name='k' type='java.lang.String'/><parameter name='v' type='java.lang.String'/></constructor><method name='getKey' return='java.lang.String'/><method name='getNewValue' return='java.lang.String'/><method name='getNode' return='java.util.prefs.Preferences'/></class><class name='Preferences' extends='java.lang.Object' abstract='true'><constructor name='Preferences' type='java.util.prefs.Preferences' visibility='protected'/><field name='MAX_KEY_LENGTH' final='true' static='true' value='80' type='int'/><field name='MAX_NAME_LENGTH' final='true' static='true' value='80' type='int'/><field name='MAX_VALUE_LENGTH' final='true' static='true' value='8192' type='int'/><method name='absolutePath' abstract='true' return='java.lang.String'/><method name='addNodeChangeListener' abstract='true'><parameter name='ncl' type='java.util.prefs.NodeChangeListener'/></method><method name='addPreferenceChangeListener' abstract='true'><parameter name='pcl' type='java.util.prefs.PreferenceChangeListener'/></method><method name='childrenNames' abstract='true' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='clear' abstract='true'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='exportNode' abstract='true'><parameter name='ostream' type='java.io.OutputStream'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/><exception name='IOException' type='java.io.IOException'/></method><method name='exportSubtree' abstract='true'><parameter name='ostream' type='java.io.OutputStream'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/><exception name='IOException' type='java.io.IOException'/></method><method name='flush' abstract='true'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='get' abstract='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='java.lang.String'/></method><method name='getBoolean' abstract='true' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='boolean'/></method><method name='getByteArray' abstract='true' return='byte[]'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='byte[]'/></method><method name='getDouble' abstract='true' return='double'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='double'/></method><method name='getFloat' abstract='true' return='float'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='float'/></method><method name='getInt' abstract='true' return='int'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='int'/></method><method name='getLong' abstract='true' return='long'><parameter name='key' type='java.lang.String'/><parameter name='deflt' type='long'/></method><method name='importPreferences' static='true'><parameter name='istream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='InvalidPreferencesFormatException' type='java.util.prefs.InvalidPreferencesFormatException'/></method><method name='isUserNode' abstract='true' return='boolean'/><method name='keys' abstract='true' return='java.lang.String[]'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='name' abstract='true' return='java.lang.String'/><method name='node' abstract='true' return='java.util.prefs.Preferences'><parameter name='path' type='java.lang.String'/></method><method name='nodeExists' abstract='true' return='boolean'><parameter name='path' type='java.lang.String'/><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='parent' abstract='true' return='java.util.prefs.Preferences'/><method name='put' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='putBoolean' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='putByteArray' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='byte[]'/></method><method name='putDouble' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='putFloat' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='float'/></method><method name='putInt' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='putLong' abstract='true'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='remove' abstract='true'><parameter name='key' type='java.lang.String'/></method><method name='removeNode' abstract='true'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='removeNodeChangeListener' abstract='true'><parameter name='ncl' type='java.util.prefs.NodeChangeListener'/></method><method name='removePreferenceChangeListener' abstract='true'><parameter name='pcl' type='java.util.prefs.PreferenceChangeListener'/></method><method name='sync' abstract='true'><exception name='BackingStoreException' type='java.util.prefs.BackingStoreException'/></method><method name='systemNodeForPackage' static='true' return='java.util.prefs.Preferences'><parameter name='c' type='java.lang.Class&lt;?&gt;'/></method><method name='systemRoot' static='true' return='java.util.prefs.Preferences'/><method name='toString' abstract='true' return='java.lang.String'/><method name='userNodeForPackage' static='true' return='java.util.prefs.Preferences'><parameter name='c' type='java.lang.Class&lt;?&gt;'/></method><method name='userRoot' static='true' return='java.util.prefs.Preferences'/></class><interface name='NodeChangeListener' abstract='true'><implements name='java.util.EventListener'/><method name='childAdded' abstract='true'><parameter name='e' type='java.util.prefs.NodeChangeEvent'/></method><method name='childRemoved' abstract='true'><parameter name='e' type='java.util.prefs.NodeChangeEvent'/></method></interface><interface name='PreferenceChangeListener' abstract='true'><implements name='java.util.EventListener'/><method name='preferenceChange' abstract='true'><parameter name='pce' type='java.util.prefs.PreferenceChangeEvent'/></method></interface><interface name='PreferencesFactory' abstract='true'><method name='systemRoot' abstract='true' return='java.util.prefs.Preferences'/><method name='userRoot' abstract='true' return='java.util.prefs.Preferences'/></interface></package><package name='java.util.regex'><class name='Matcher' final='true' extends='java.lang.Object'><implements name='java.util.regex.MatchResult'/><method name='appendReplacement' return='java.util.regex.Matcher'><parameter name='buffer' type='java.lang.StringBuffer'/><parameter name='replacement' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='appendTail' return='java.lang.StringBuffer'><parameter name='buffer' type='java.lang.StringBuffer'/></method><method name='end' return='int'/><method name='end' return='int'><parameter name='group' type='int'/></method><method name='find' return='boolean'/><method name='find' return='boolean'><parameter name='start' type='int'/></method><method name='group' return='java.lang.String'/><method name='group' return='java.lang.String'><parameter name='group' type='int'/></method><method name='groupCount' return='int'/><method name='hasAnchoringBounds' return='boolean'/><method name='hasTransparentBounds' return='boolean'/><method name='hitEnd' return='boolean'/><method name='lookingAt' return='boolean'/><method name='matches' return='boolean'/><method name='pattern' return='java.util.regex.Pattern'/><method name='quoteReplacement' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='region' return='java.util.regex.Matcher'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='regionEnd' return='int'/><method name='regionStart' return='int'/><method name='replaceAll' return='java.lang.String'><parameter name='replacement' type='java.lang.String'/></method><method name='replaceFirst' return='java.lang.String'><parameter name='replacement' type='java.lang.String'/></method><method name='requireEnd' return='boolean'/><method name='reset' return='java.util.regex.Matcher'/><method name='reset' return='java.util.regex.Matcher'><parameter name='input' type='java.lang.CharSequence'/></method><method name='start' return='int'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='start' return='int'><parameter name='group' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='toMatchResult' return='java.util.regex.MatchResult'/><method name='useAnchoringBounds' return='java.util.regex.Matcher'><parameter name='value' type='boolean'/></method><method name='usePattern' return='java.util.regex.Matcher'><parameter name='pattern' type='java.util.regex.Pattern'/></method><method name='useTransparentBounds' return='java.util.regex.Matcher'><parameter name='value' type='boolean'/></method></class><class name='Pattern' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><field name='CANON_EQ' final='true' static='true' value='128' type='int'/><field name='CASE_INSENSITIVE' final='true' static='true' value='2' type='int'/><field name='COMMENTS' final='true' static='true' value='4' type='int'/><field name='DOTALL' final='true' static='true' value='32' type='int'/><field name='LITERAL' final='true' static='true' value='16' type='int'/><field name='MULTILINE' final='true' static='true' value='8' type='int'/><field name='UNICODE_CASE' final='true' static='true' value='64' type='int'/><field name='UNIX_LINES' final='true' static='true' value='1' type='int'/><method name='compile' static='true' return='java.util.regex.Pattern'><parameter name='pattern' type='java.lang.String'/><exception name='PatternSyntaxException' type='java.util.regex.PatternSyntaxException'/></method><method name='compile' static='true' return='java.util.regex.Pattern'><parameter name='pattern' type='java.lang.String'/><parameter name='flags' type='int'/><exception name='PatternSyntaxException' type='java.util.regex.PatternSyntaxException'/></method><method name='flags' return='int'/><method name='matcher' return='java.util.regex.Matcher'><parameter name='input' type='java.lang.CharSequence'/></method><method name='matches' static='true' return='boolean'><parameter name='regex' type='java.lang.String'/><parameter name='input' type='java.lang.CharSequence'/></method><method name='pattern' return='java.lang.String'/><method name='quote' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='split' return='java.lang.String[]'><parameter name='input' type='java.lang.CharSequence'/></method><method name='split' return='java.lang.String[]'><parameter name='inputSeq' type='java.lang.CharSequence'/><parameter name='limit' type='int'/></method></class><class name='PatternSyntaxException' extends='java.lang.IllegalArgumentException'><constructor name='PatternSyntaxException' type='java.util.regex.PatternSyntaxException'><parameter name='description' type='java.lang.String'/><parameter name='pattern' type='java.lang.String'/><parameter name='index' type='int'/></constructor><method name='getDescription' return='java.lang.String'/><method name='getIndex' return='int'/><method name='getPattern' return='java.lang.String'/></class><interface name='MatchResult' abstract='true'><method name='end' abstract='true' return='int'/><method name='end' abstract='true' return='int'><parameter name='group' type='int'/></method><method name='group' abstract='true' return='java.lang.String'/><method name='group' abstract='true' return='java.lang.String'><parameter name='group' type='int'/></method><method name='groupCount' abstract='true' return='int'/><method name='start' abstract='true' return='int'/><method name='start' abstract='true' return='int'><parameter name='group' type='int'/></method></interface></package><package name='java.util.zip'><class name='Adler32' extends='java.lang.Object'><implements name='java.util.zip.Checksum'/><constructor name='Adler32' type='java.util.zip.Adler32'/><method name='getValue' return='long'/><method name='reset'/><method name='update'><parameter name='i' type='int'/></method><method name='update'><parameter name='buf' type='byte[]'/></method><method name='update'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method></class><class name='CRC32' extends='java.lang.Object'><implements name='java.util.zip.Checksum'/><constructor name='CRC32' type='java.util.zip.CRC32'/><method name='getValue' return='long'/><method name='reset'/><method name='update'><parameter name='val' type='int'/></method><method name='update'><parameter name='buf' type='byte[]'/></method><method name='update'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method></class><class name='CheckedInputStream' extends='java.io.FilterInputStream'><constructor name='CheckedInputStream' type='java.util.zip.CheckedInputStream'><parameter name='is' type='java.io.InputStream'/><parameter name='csum' type='java.util.zip.Checksum'/></constructor><method name='getChecksum' return='java.util.zip.Checksum'/></class><class name='CheckedOutputStream' extends='java.io.FilterOutputStream'><constructor name='CheckedOutputStream' type='java.util.zip.CheckedOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='cs' type='java.util.zip.Checksum'/></constructor><method name='getChecksum' return='java.util.zip.Checksum'/></class><class name='DataFormatException' extends='java.lang.Exception'><constructor name='DataFormatException' type='java.util.zip.DataFormatException'/><constructor name='DataFormatException' type='java.util.zip.DataFormatException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='Deflater' extends='java.lang.Object'><constructor name='Deflater' type='java.util.zip.Deflater'/><constructor name='Deflater' type='java.util.zip.Deflater'><parameter name='level' type='int'/></constructor><constructor name='Deflater' type='java.util.zip.Deflater'><parameter name='level' type='int'/><parameter name='noHeader' type='boolean'/></constructor><field name='BEST_COMPRESSION' final='true' static='true' value='9' type='int'/><field name='BEST_SPEED' final='true' static='true' value='1' type='int'/><field name='DEFAULT_COMPRESSION' final='true' static='true' value='-1' type='int'/><field name='DEFAULT_STRATEGY' final='true' static='true' value='0' type='int'/><field name='DEFLATED' final='true' static='true' value='8' type='int'/><field name='FILTERED' final='true' static='true' value='1' type='int'/><field name='HUFFMAN_ONLY' final='true' static='true' value='2' type='int'/><field name='NO_COMPRESSION' final='true' static='true' value='0' type='int'/><method name='deflate' return='int'><parameter name='buf' type='byte[]'/></method><method name='deflate' synchronized='true' return='int'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method><method name='end' synchronized='true'/><method name='finish' synchronized='true'/><method name='finished' synchronized='true' return='boolean'/><method name='getAdler' synchronized='true' return='int'/><method name='getBytesRead' synchronized='true' return='long'/><method name='getBytesWritten' synchronized='true' return='long'/><method name='getTotalIn' synchronized='true' return='int'/><method name='getTotalOut' synchronized='true' return='int'/><method name='needsInput' synchronized='true' return='boolean'/><method name='reset' synchronized='true'/><method name='setDictionary'><parameter name='buf' type='byte[]'/></method><method name='setDictionary' synchronized='true'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method><method name='setInput'><parameter name='buf' type='byte[]'/></method><method name='setInput' synchronized='true'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method><method name='setLevel' synchronized='true'><parameter name='level' type='int'/></method><method name='setStrategy' synchronized='true'><parameter name='strategy' type='int'/></method></class><class name='DeflaterOutputStream' extends='java.io.FilterOutputStream'><constructor name='DeflaterOutputStream' type='java.util.zip.DeflaterOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='def' type='java.util.zip.Deflater'/></constructor><constructor name='DeflaterOutputStream' type='java.util.zip.DeflaterOutputStream'><parameter name='os' type='java.io.OutputStream'/></constructor><constructor name='DeflaterOutputStream' type='java.util.zip.DeflaterOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='def' type='java.util.zip.Deflater'/><parameter name='bsize' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='def' type='java.util.zip.Deflater' visibility='protected'/><method name='deflate' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='finish'><exception name='IOException' type='java.io.IOException'/></method></class><class name='GZIPInputStream' extends='java.util.zip.InflaterInputStream'><constructor name='GZIPInputStream' type='java.util.zip.GZIPInputStream'><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='GZIPInputStream' type='java.util.zip.GZIPInputStream'><parameter name='is' type='java.io.InputStream'/><parameter name='size' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><field name='GZIP_MAGIC' final='true' static='true' value='35615' type='int'/><field name='crc' type='java.util.zip.CRC32' visibility='protected'/><field name='eos' type='boolean' visibility='protected'/></class><class name='GZIPOutputStream' extends='java.util.zip.DeflaterOutputStream'><constructor name='GZIPOutputStream' type='java.util.zip.GZIPOutputStream'><parameter name='os' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='GZIPOutputStream' type='java.util.zip.GZIPOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='size' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><field name='crc' type='java.util.zip.CRC32' visibility='protected'/></class><class name='Inflater' extends='java.lang.Object'><constructor name='Inflater' type='java.util.zip.Inflater'/><constructor name='Inflater' type='java.util.zip.Inflater'><parameter name='noHeader' type='boolean'/></constructor><method name='end' synchronized='true'/><method name='finished' synchronized='true' return='boolean'/><method name='getAdler' synchronized='true' return='int'/><method name='getBytesRead' synchronized='true' return='long'/><method name='getBytesWritten' synchronized='true' return='long'/><method name='getRemaining' synchronized='true' return='int'/><method name='getTotalIn' synchronized='true' return='int'/><method name='getTotalOut' synchronized='true' return='int'/><method name='inflate' return='int'><parameter name='buf' type='byte[]'/><exception name='DataFormatException' type='java.util.zip.DataFormatException'/></method><method name='inflate' synchronized='true' return='int'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/><exception name='DataFormatException' type='java.util.zip.DataFormatException'/></method><method name='needsDictionary' synchronized='true' return='boolean'/><method name='needsInput' synchronized='true' return='boolean'/><method name='reset' synchronized='true'/><method name='setDictionary' synchronized='true'><parameter name='buf' type='byte[]'/></method><method name='setDictionary' synchronized='true'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method><method name='setInput' synchronized='true'><parameter name='buf' type='byte[]'/></method><method name='setInput' synchronized='true'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method></class><class name='InflaterInputStream' extends='java.io.FilterInputStream'><constructor name='InflaterInputStream' type='java.util.zip.InflaterInputStream'><parameter name='is' type='java.io.InputStream'/></constructor><constructor name='InflaterInputStream' type='java.util.zip.InflaterInputStream'><parameter name='is' type='java.io.InputStream'/><parameter name='inf' type='java.util.zip.Inflater'/></constructor><constructor name='InflaterInputStream' type='java.util.zip.InflaterInputStream'><parameter name='is' type='java.io.InputStream'/><parameter name='inf' type='java.util.zip.Inflater'/><parameter name='bsize' type='int'/></constructor><field name='buf' value='null' type='byte[]' visibility='protected'/><field name='inf' type='java.util.zip.Inflater' visibility='protected'/><field name='len' type='int' visibility='protected'/><method name='fill' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ZipEntry' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><constructor name='ZipEntry' type='java.util.zip.ZipEntry'><parameter name='name' type='java.lang.String'/></constructor><constructor name='ZipEntry' type='java.util.zip.ZipEntry'><parameter name='ze' type='java.util.zip.ZipEntry'/></constructor><field name='DEFLATED' final='true' static='true' value='8' type='int'/><field name='STORED' final='true' static='true' value='0' type='int'/><method name='clone' return='java.lang.Object'/><method name='getComment' return='java.lang.String'/><method name='getCompressedSize' return='long'/><method name='getCrc' return='long'/><method name='getExtra' return='byte[]'/><method name='getMethod' return='int'/><method name='getName' return='java.lang.String'/><method name='getSize' return='long'/><method name='getTime' return='long'/><method name='isDirectory' return='boolean'/><method name='setComment'><parameter name='string' type='java.lang.String'/></method><method name='setCompressedSize'><parameter name='value' type='long'/></method><method name='setCrc'><parameter name='value' type='long'/></method><method name='setExtra'><parameter name='data' type='byte[]'/></method><method name='setMethod'><parameter name='value' type='int'/></method><method name='setSize'><parameter name='value' type='long'/></method><method name='setTime'><parameter name='value' type='long'/></method></class><class name='ZipException' extends='java.io.IOException'><constructor name='ZipException' type='java.util.zip.ZipException'/><constructor name='ZipException' type='java.util.zip.ZipException'><parameter name='detailMessage' type='java.lang.String'/></constructor></class><class name='ZipFile' extends='java.lang.Object'><constructor name='ZipFile' type='java.util.zip.ZipFile'><parameter name='file' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/><exception name='ZipException' type='java.util.zip.ZipException'/></constructor><constructor name='ZipFile' type='java.util.zip.ZipFile'><parameter name='file' type='java.io.File'/><parameter name='mode' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='ZipFile' type='java.util.zip.ZipFile'><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></constructor><field name='OPEN_DELETE' final='true' static='true' value='4' type='int'/><field name='OPEN_READ' final='true' static='true' value='1' type='int'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='entries' return='java.util.Enumeration&lt;? extends java.util.zip.ZipEntry&gt;'/><method name='getEntry' return='java.util.zip.ZipEntry'><parameter name='entryName' type='java.lang.String'/></method><method name='getInputStream' return='java.io.InputStream'><parameter name='entry' type='java.util.zip.ZipEntry'/><exception name='IOException' type='java.io.IOException'/></method><method name='getName' return='java.lang.String'/><method name='size' return='int'/></class><class name='ZipInputStream' extends='java.util.zip.InflaterInputStream'><constructor name='ZipInputStream' type='java.util.zip.ZipInputStream'><parameter name='stream' type='java.io.InputStream'/></constructor><method name='closeEntry'><exception name='IOException' type='java.io.IOException'/></method><method name='createZipEntry' visibility='protected' return='java.util.zip.ZipEntry'><parameter name='name' type='java.lang.String'/></method><method name='getNextEntry' return='java.util.zip.ZipEntry'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ZipOutputStream' extends='java.util.zip.DeflaterOutputStream'><constructor name='ZipOutputStream' type='java.util.zip.ZipOutputStream'><parameter name='p1' type='java.io.OutputStream'/></constructor><field name='DEFLATED' final='true' static='true' value='8' type='int'/><field name='STORED' final='true' static='true' value='0' type='int'/><method name='closeEntry'><exception name='IOException' type='java.io.IOException'/></method><method name='putNextEntry'><parameter name='ze' type='java.util.zip.ZipEntry'/><exception name='IOException' type='java.io.IOException'/></method><method name='setComment'><parameter name='comment' type='java.lang.String'/></method><method name='setLevel'><parameter name='level' type='int'/></method><method name='setMethod'><parameter name='method' type='int'/></method></class><interface name='Checksum' abstract='true'><method name='getValue' abstract='true' return='long'/><method name='reset' abstract='true'/><method name='update' abstract='true'><parameter name='val' type='int'/></method><method name='update' abstract='true'><parameter name='buf' type='byte[]'/><parameter name='off' type='int'/><parameter name='nbytes' type='int'/></method></interface></package><package name='javax.crypto'><class name='BadPaddingException' extends='java.security.GeneralSecurityException'><constructor name='BadPaddingException' type='javax.crypto.BadPaddingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='BadPaddingException' type='javax.crypto.BadPaddingException'/></class><class name='Cipher' extends='java.lang.Object'><constructor name='Cipher' type='javax.crypto.Cipher' visibility='protected'><parameter name='cipherSpi' type='javax.crypto.CipherSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='transformation' type='java.lang.String'/></constructor><field name='DECRYPT_MODE' final='true' static='true' value='2' type='int'/><field name='ENCRYPT_MODE' final='true' static='true' value='1' type='int'/><field name='PRIVATE_KEY' final='true' static='true' value='2' type='int'/><field name='PUBLIC_KEY' final='true' static='true' value='1' type='int'/><field name='SECRET_KEY' final='true' static='true' value='3' type='int'/><field name='UNWRAP_MODE' final='true' static='true' value='4' type='int'/><field name='WRAP_MODE' final='true' static='true' value='3' type='int'/><method name='doFinal' final='true' return='byte[]'><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></method><method name='doFinal' final='true' return='int'><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='doFinal' final='true' return='byte[]'><parameter name='input' type='byte[]'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></method><method name='doFinal' final='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></method><method name='doFinal' final='true' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='doFinal' final='true' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='doFinal' final='true' return='int'><parameter name='input' type='java.nio.ByteBuffer'/><parameter name='output' type='java.nio.ByteBuffer'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getBlockSize' final='true' return='int'/><method name='getExemptionMechanism' final='true' return='javax.crypto.ExemptionMechanism'/><method name='getIV' final='true' return='byte[]'/><method name='getInstance' final='true' static='true' return='javax.crypto.Cipher'><parameter name='transformation' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.Cipher'><parameter name='transformation' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.Cipher'><parameter name='transformation' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'/></method><method name='getMaxAllowedKeyLength' final='true' static='true' return='int'><parameter name='transformation' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getMaxAllowedParameterSpec' final='true' static='true' return='java.security.spec.AlgorithmParameterSpec'><parameter name='transformation' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getOutputSize' final='true' return='int'><parameter name='inputLen' type='int'/></method><method name='getParameters' final='true' return='java.security.AlgorithmParameters'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.AlgorithmParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.AlgorithmParameters'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='certificate' type='java.security.cert.Certificate'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='opmode' type='int'/><parameter name='certificate' type='java.security.cert.Certificate'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='unwrap' final='true' return='java.security.Key'><parameter name='wrappedKey' type='byte[]'/><parameter name='wrappedKeyAlgorithm' type='java.lang.String'/><parameter name='wrappedKeyType' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='update' final='true' return='byte[]'><parameter name='input' type='byte[]'/></method><method name='update' final='true' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/></method><method name='update' final='true' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='update' final='true' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='update' final='true' return='int'><parameter name='input' type='java.nio.ByteBuffer'/><parameter name='output' type='java.nio.ByteBuffer'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='wrap' final='true' return='byte[]'><parameter name='key' type='java.security.Key'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='CipherInputStream' extends='java.io.FilterInputStream'><constructor name='CipherInputStream' type='javax.crypto.CipherInputStream'><parameter name='is' type='java.io.InputStream'/><parameter name='c' type='javax.crypto.Cipher'/></constructor><constructor name='CipherInputStream' type='javax.crypto.CipherInputStream' visibility='protected'><parameter name='is' type='java.io.InputStream'/></constructor></class><class name='CipherOutputStream' extends='java.io.FilterOutputStream'><constructor name='CipherOutputStream' type='javax.crypto.CipherOutputStream'><parameter name='os' type='java.io.OutputStream'/><parameter name='c' type='javax.crypto.Cipher'/></constructor><constructor name='CipherOutputStream' type='javax.crypto.CipherOutputStream' visibility='protected'><parameter name='os' type='java.io.OutputStream'/></constructor></class><class name='CipherSpi' extends='java.lang.Object' abstract='true'><constructor name='CipherSpi' type='javax.crypto.CipherSpi'/><method name='engineDoFinal' abstract='true' visibility='protected' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></method><method name='engineDoFinal' abstract='true' visibility='protected' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineDoFinal' visibility='protected' return='int'><parameter name='input' type='java.nio.ByteBuffer'/><parameter name='output' type='java.nio.ByteBuffer'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineGetBlockSize' abstract='true' visibility='protected' return='int'/><method name='engineGetIV' abstract='true' visibility='protected' return='byte[]'/><method name='engineGetKeySize' visibility='protected' return='int'><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineGetOutputSize' abstract='true' visibility='protected' return='int'><parameter name='inputLen' type='int'/></method><method name='engineGetParameters' abstract='true' visibility='protected' return='java.security.AlgorithmParameters'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='opmode' type='int'/><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.AlgorithmParameters'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineSetMode' abstract='true' visibility='protected'><parameter name='mode' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineSetPadding' abstract='true' visibility='protected'><parameter name='padding' type='java.lang.String'/><exception name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'/></method><method name='engineUnwrap' visibility='protected' return='java.security.Key'><parameter name='wrappedKey' type='byte[]'/><parameter name='wrappedKeyAlgorithm' type='java.lang.String'/><parameter name='wrappedKeyType' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineUpdate' abstract='true' visibility='protected' return='byte[]'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/></method><method name='engineUpdate' abstract='true' visibility='protected' return='int'><parameter name='input' type='byte[]'/><parameter name='inputOffset' type='int'/><parameter name='inputLen' type='int'/><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineUpdate' visibility='protected' return='int'><parameter name='input' type='java.nio.ByteBuffer'/><parameter name='output' type='java.nio.ByteBuffer'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineWrap' visibility='protected' return='byte[]'><parameter name='key' type='java.security.Key'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='EncryptedPrivateKeyInfo' extends='java.lang.Object'><constructor name='EncryptedPrivateKeyInfo' type='javax.crypto.EncryptedPrivateKeyInfo'><parameter name='encoded' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='EncryptedPrivateKeyInfo' type='javax.crypto.EncryptedPrivateKeyInfo'><parameter name='encrAlgName' type='java.lang.String'/><parameter name='encryptedData' type='byte[]'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></constructor><constructor name='EncryptedPrivateKeyInfo' type='javax.crypto.EncryptedPrivateKeyInfo'><parameter name='algParams' type='java.security.AlgorithmParameters'/><parameter name='encryptedData' type='byte[]'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></constructor><method name='getAlgName' return='java.lang.String'/><method name='getAlgParameters' return='java.security.AlgorithmParameters'/><method name='getEncoded' return='byte[]'><exception name='IOException' type='java.io.IOException'/></method><method name='getEncryptedData' return='byte[]'/><method name='getKeySpec' return='java.security.spec.PKCS8EncodedKeySpec'><parameter name='cipher' type='javax.crypto.Cipher'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='getKeySpec' return='java.security.spec.PKCS8EncodedKeySpec'><parameter name='decryptKey' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getKeySpec' return='java.security.spec.PKCS8EncodedKeySpec'><parameter name='decryptKey' type='java.security.Key'/><parameter name='providerName' type='java.lang.String'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getKeySpec' return='java.security.spec.PKCS8EncodedKeySpec'><parameter name='decryptKey' type='java.security.Key'/><parameter name='provider' type='java.security.Provider'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method></class><class name='ExemptionMechanism' extends='java.lang.Object'><constructor name='ExemptionMechanism' type='javax.crypto.ExemptionMechanism' visibility='protected'><parameter name='exmechSpi' type='javax.crypto.ExemptionMechanismSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='mechanism' type='java.lang.String'/></constructor><method name='genExemptionBlob' final='true' return='byte[]'><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='genExemptionBlob' final='true' return='int'><parameter name='output' type='byte[]'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='genExemptionBlob' final='true' return='int'><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.ExemptionMechanism'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.ExemptionMechanism'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.ExemptionMechanism'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getName' final='true' return='java.lang.String'/><method name='getOutputSize' final='true' return='int'><parameter name='inputLen' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='key' type='java.security.Key'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='param' type='java.security.AlgorithmParameters'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='param' type='java.security.spec.AlgorithmParameterSpec'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='isCryptoAllowed' final='true' return='boolean'><parameter name='key' type='java.security.Key'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/></method></class><class name='ExemptionMechanismException' extends='java.security.GeneralSecurityException'><constructor name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/></class><class name='ExemptionMechanismSpi' extends='java.lang.Object' abstract='true'><constructor name='ExemptionMechanismSpi' type='javax.crypto.ExemptionMechanismSpi'/><method name='engineGenExemptionBlob' abstract='true' visibility='protected' return='byte[]'><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/></method><method name='engineGenExemptionBlob' abstract='true' visibility='protected' return='int'><parameter name='output' type='byte[]'/><parameter name='outputOffset' type='int'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineGetOutputSize' abstract='true' visibility='protected' return='int'><parameter name='inputLen' type='int'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.AlgorithmParameters'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='ExemptionMechanismException' type='javax.crypto.ExemptionMechanismException'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='IllegalBlockSizeException' extends='java.security.GeneralSecurityException'><constructor name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></class><class name='KeyAgreement' extends='java.lang.Object'><constructor name='KeyAgreement' type='javax.crypto.KeyAgreement' visibility='protected'><parameter name='keyAgreeSpi' type='javax.crypto.KeyAgreementSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='doPhase' final='true' return='java.security.Key'><parameter name='key' type='java.security.Key'/><parameter name='lastPhase' type='boolean'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='generateSecret' final='true' return='byte[]'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='generateSecret' final='true' return='int'><parameter name='sharedSecret' type='byte[]'/><parameter name='offset' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='generateSecret' final='true' return='javax.crypto.SecretKey'><parameter name='algorithm' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.crypto.KeyAgreement'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.KeyAgreement'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.KeyAgreement'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='KeyAgreementSpi' extends='java.lang.Object' abstract='true'><constructor name='KeyAgreementSpi' type='javax.crypto.KeyAgreementSpi'/><method name='engineDoPhase' abstract='true' visibility='protected' return='java.security.Key'><parameter name='key' type='java.security.Key'/><parameter name='lastPhase' type='boolean'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineGenerateSecret' abstract='true' visibility='protected' return='byte[]'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='engineGenerateSecret' abstract='true' visibility='protected' return='int'><parameter name='sharedSecret' type='byte[]'/><parameter name='offset' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='engineGenerateSecret' abstract='true' visibility='protected' return='javax.crypto.SecretKey'><parameter name='algorithm' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='KeyGenerator' extends='java.lang.Object'><constructor name='KeyGenerator' type='javax.crypto.KeyGenerator' visibility='protected'><parameter name='keyGenSpi' type='javax.crypto.KeyGeneratorSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='generateKey' final='true' return='javax.crypto.SecretKey'/><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.crypto.KeyGenerator'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.KeyGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.KeyGenerator'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='init' final='true'><parameter name='keysize' type='int'/></method><method name='init' final='true'><parameter name='keysize' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method><method name='init' final='true'><parameter name='random' type='java.security.SecureRandom'/></method></class><class name='KeyGeneratorSpi' extends='java.lang.Object' abstract='true'><constructor name='KeyGeneratorSpi' type='javax.crypto.KeyGeneratorSpi'/><method name='engineGenerateKey' abstract='true' visibility='protected' return='javax.crypto.SecretKey'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='random' type='java.security.SecureRandom'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='keysize' type='int'/><parameter name='random' type='java.security.SecureRandom'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='random' type='java.security.SecureRandom'/></method></class><class name='Mac' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><constructor name='Mac' type='javax.crypto.Mac' visibility='protected'><parameter name='macSpi' type='javax.crypto.MacSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='clone' final='true' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='doFinal' final='true' return='byte[]'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='doFinal' final='true'><parameter name='output' type='byte[]'/><parameter name='outOffset' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/><exception name='ShortBufferException' type='javax.crypto.ShortBufferException'/></method><method name='doFinal' final='true' return='byte[]'><parameter name='input' type='byte[]'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.crypto.Mac'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.Mac'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.Mac'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getMacLength' final='true' return='int'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='init' final='true'><parameter name='key' type='java.security.Key'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='reset' final='true'/><method name='update' final='true'><parameter name='input' type='byte'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='update' final='true'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='update' final='true'><parameter name='input' type='byte[]'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='update' final='true'><parameter name='input' type='java.nio.ByteBuffer'/></method></class><class name='MacSpi' extends='java.lang.Object' abstract='true'><constructor name='MacSpi' type='javax.crypto.MacSpi'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='engineDoFinal' abstract='true' visibility='protected' return='byte[]'/><method name='engineGetMacLength' abstract='true' visibility='protected' return='int'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='key' type='java.security.Key'/><parameter name='params' type='java.security.spec.AlgorithmParameterSpec'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='engineReset' abstract='true' visibility='protected'/><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='input' type='byte'/></method><method name='engineUpdate' abstract='true' visibility='protected'><parameter name='input' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></method><method name='engineUpdate' visibility='protected'><parameter name='input' type='java.nio.ByteBuffer'/></method></class><class name='NoSuchPaddingException' extends='java.security.GeneralSecurityException'><constructor name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='NoSuchPaddingException' type='javax.crypto.NoSuchPaddingException'/></class><class name='NullCipher' extends='javax.crypto.Cipher'><constructor name='NullCipher' type='javax.crypto.NullCipher'/></class><class name='SealedObject' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='SealedObject' type='javax.crypto.SealedObject'><parameter name='object' type='java.io.Serializable'/><parameter name='c' type='javax.crypto.Cipher'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></constructor><constructor name='SealedObject' type='javax.crypto.SealedObject' visibility='protected'><parameter name='so' type='javax.crypto.SealedObject'/></constructor><field name='encodedParams' value='null' type='byte[]' visibility='protected'/><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getObject' final='true' return='java.lang.Object'><parameter name='key' type='java.security.Key'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getObject' final='true' return='java.lang.Object'><parameter name='c' type='javax.crypto.Cipher'/><exception name='BadPaddingException' type='javax.crypto.BadPaddingException'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalBlockSizeException' type='javax.crypto.IllegalBlockSizeException'/></method><method name='getObject' final='true' return='java.lang.Object'><parameter name='key' type='java.security.Key'/><parameter name='provider' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IOException' type='java.io.IOException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method></class><class name='SecretKeyFactory' extends='java.lang.Object'><constructor name='SecretKeyFactory' type='javax.crypto.SecretKeyFactory' visibility='protected'><parameter name='keyFacSpi' type='javax.crypto.SecretKeyFactorySpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='generateSecret' final='true' return='javax.crypto.SecretKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.crypto.SecretKeyFactory'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.SecretKeyFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.crypto.SecretKeyFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getKeySpec' final='true' return='java.security.spec.KeySpec'><parameter name='key' type='javax.crypto.SecretKey'/><parameter name='keySpec' type='java.lang.Class'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='translateKey' final='true' return='javax.crypto.SecretKey'><parameter name='key' type='javax.crypto.SecretKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='SecretKeyFactorySpi' extends='java.lang.Object' abstract='true'><constructor name='SecretKeyFactorySpi' type='javax.crypto.SecretKeyFactorySpi'/><method name='engineGenerateSecret' abstract='true' visibility='protected' return='javax.crypto.SecretKey'><parameter name='keySpec' type='java.security.spec.KeySpec'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='engineGetKeySpec' abstract='true' visibility='protected' return='java.security.spec.KeySpec'><parameter name='key' type='javax.crypto.SecretKey'/><parameter name='keySpec' type='java.lang.Class'/><exception name='InvalidKeySpecException' type='java.security.spec.InvalidKeySpecException'/></method><method name='engineTranslateKey' abstract='true' visibility='protected' return='javax.crypto.SecretKey'><parameter name='key' type='javax.crypto.SecretKey'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='ShortBufferException' extends='java.security.GeneralSecurityException'><constructor name='ShortBufferException' type='javax.crypto.ShortBufferException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='ShortBufferException' type='javax.crypto.ShortBufferException'/></class><interface name='SecretKey' abstract='true'><implements name='java.security.Key'/><field name='serialVersionUID' final='true' static='true' value='-4795878709595146952L' type='long'/></interface></package><package name='javax.crypto.interfaces'><interface name='DHKey' abstract='true'><method name='getParams' abstract='true' return='javax.crypto.spec.DHParameterSpec'/></interface><interface name='DHPrivateKey' abstract='true'><implements name='javax.crypto.interfaces.DHKey'/><implements name='java.security.PrivateKey'/><field name='serialVersionUID' final='true' static='true' value='2211791113380396553L' type='long'/><method name='getX' abstract='true' return='java.math.BigInteger'/></interface><interface name='DHPublicKey' abstract='true'><implements name='javax.crypto.interfaces.DHKey'/><implements name='java.security.PublicKey'/><field name='serialVersionUID' final='true' static='true' value='-6628103563352519193L' type='long'/><method name='getY' abstract='true' return='java.math.BigInteger'/></interface><interface name='PBEKey' abstract='true'><implements name='javax.crypto.SecretKey'/><field name='serialVersionUID' final='true' static='true' value='-1430015993304333921L' type='long'/><method name='getIterationCount' abstract='true' return='int'/><method name='getPassword' abstract='true' return='char[]'/><method name='getSalt' abstract='true' return='byte[]'/></interface></package><package name='javax.crypto.spec'><class name='DESKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DESKeySpec' type='javax.crypto.spec.DESKeySpec'><parameter name='key' type='byte[]'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></constructor><constructor name='DESKeySpec' type='javax.crypto.spec.DESKeySpec'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></constructor><field name='DES_KEY_LEN' final='true' static='true' value='8' type='int'/><method name='getKey' return='byte[]'/><method name='isParityAdjusted' static='true' return='boolean'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method><method name='isWeak' static='true' return='boolean'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='DESedeKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DESedeKeySpec' type='javax.crypto.spec.DESedeKeySpec'><parameter name='key' type='byte[]'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></constructor><constructor name='DESedeKeySpec' type='javax.crypto.spec.DESedeKeySpec'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></constructor><field name='DES_EDE_KEY_LEN' final='true' static='true' value='24' type='int'/><method name='getKey' return='byte[]'/><method name='isParityAdjusted' static='true' return='boolean'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/></method></class><class name='DHGenParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='DHGenParameterSpec' type='javax.crypto.spec.DHGenParameterSpec'><parameter name='primeSize' type='int'/><parameter name='exponentSize' type='int'/></constructor><method name='getExponentSize' return='int'/><method name='getPrimeSize' return='int'/></class><class name='DHParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='DHParameterSpec' type='javax.crypto.spec.DHParameterSpec'><parameter name='p' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><constructor name='DHParameterSpec' type='javax.crypto.spec.DHParameterSpec'><parameter name='p' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/><parameter name='l' type='int'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getL' return='int'/><method name='getP' return='java.math.BigInteger'/></class><class name='DHPrivateKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DHPrivateKeySpec' type='javax.crypto.spec.DHPrivateKeySpec'><parameter name='x' type='java.math.BigInteger'/><parameter name='p' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getP' return='java.math.BigInteger'/><method name='getX' return='java.math.BigInteger'/></class><class name='DHPublicKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='DHPublicKeySpec' type='javax.crypto.spec.DHPublicKeySpec'><parameter name='y' type='java.math.BigInteger'/><parameter name='p' type='java.math.BigInteger'/><parameter name='g' type='java.math.BigInteger'/></constructor><method name='getG' return='java.math.BigInteger'/><method name='getP' return='java.math.BigInteger'/><method name='getY' return='java.math.BigInteger'/></class><class name='IvParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='IvParameterSpec' type='javax.crypto.spec.IvParameterSpec'><parameter name='iv' type='byte[]'/></constructor><constructor name='IvParameterSpec' type='javax.crypto.spec.IvParameterSpec'><parameter name='iv' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/></constructor><method name='getIV' return='byte[]'/></class><class name='OAEPParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='OAEPParameterSpec' type='javax.crypto.spec.OAEPParameterSpec'><parameter name='mdName' type='java.lang.String'/><parameter name='mgfName' type='java.lang.String'/><parameter name='mgfSpec' type='java.security.spec.AlgorithmParameterSpec'/><parameter name='pSrc' type='javax.crypto.spec.PSource'/></constructor><field name='DEFAULT' final='true' static='true' type='javax.crypto.spec.OAEPParameterSpec'/><method name='getDigestAlgorithm' return='java.lang.String'/><method name='getMGFAlgorithm' return='java.lang.String'/><method name='getMGFParameters' return='java.security.spec.AlgorithmParameterSpec'/><method name='getPSource' return='javax.crypto.spec.PSource'/></class><class name='PBEKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><constructor name='PBEKeySpec' type='javax.crypto.spec.PBEKeySpec'><parameter name='password' type='char[]'/></constructor><constructor name='PBEKeySpec' type='javax.crypto.spec.PBEKeySpec'><parameter name='password' type='char[]'/><parameter name='salt' type='byte[]'/><parameter name='iterationCount' type='int'/><parameter name='keyLength' type='int'/></constructor><constructor name='PBEKeySpec' type='javax.crypto.spec.PBEKeySpec'><parameter name='password' type='char[]'/><parameter name='salt' type='byte[]'/><parameter name='iterationCount' type='int'/></constructor><method name='clearPassword' final='true'/><method name='getIterationCount' final='true' return='int'/><method name='getKeyLength' final='true' return='int'/><method name='getPassword' final='true' return='char[]'/><method name='getSalt' final='true' return='byte[]'/></class><class name='PBEParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='PBEParameterSpec' type='javax.crypto.spec.PBEParameterSpec'><parameter name='salt' type='byte[]'/><parameter name='iterationCount' type='int'/></constructor><method name='getIterationCount' return='int'/><method name='getSalt' return='byte[]'/></class><class name='PSource' extends='java.lang.Object'><constructor name='PSource' type='javax.crypto.spec.PSource' visibility='protected'><parameter name='pSrcName' type='java.lang.String'/></constructor><method name='getAlgorithm' return='java.lang.String'/></class><class name='PSource.PSpecified' final='true' extends='javax.crypto.spec.PSource' static='true'><constructor name='PSource.PSpecified' type='javax.crypto.spec.PSource.PSpecified'><parameter name='p' type='byte[]'/></constructor><field name='DEFAULT' final='true' static='true' type='javax.crypto.spec.PSource.PSpecified'/><method name='getValue' return='byte[]'/></class><class name='RC2ParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='RC2ParameterSpec' type='javax.crypto.spec.RC2ParameterSpec'><parameter name='effectiveKeyBits' type='int'/></constructor><constructor name='RC2ParameterSpec' type='javax.crypto.spec.RC2ParameterSpec'><parameter name='effectiveKeyBits' type='int'/><parameter name='iv' type='byte[]'/></constructor><constructor name='RC2ParameterSpec' type='javax.crypto.spec.RC2ParameterSpec'><parameter name='effectiveKeyBits' type='int'/><parameter name='iv' type='byte[]'/><parameter name='offset' type='int'/></constructor><method name='getEffectiveKeyBits' return='int'/><method name='getIV' return='byte[]'/></class><class name='RC5ParameterSpec' extends='java.lang.Object'><implements name='java.security.spec.AlgorithmParameterSpec'/><constructor name='RC5ParameterSpec' type='javax.crypto.spec.RC5ParameterSpec'><parameter name='version' type='int'/><parameter name='rounds' type='int'/><parameter name='wordSize' type='int'/></constructor><constructor name='RC5ParameterSpec' type='javax.crypto.spec.RC5ParameterSpec'><parameter name='version' type='int'/><parameter name='rounds' type='int'/><parameter name='wordSize' type='int'/><parameter name='iv' type='byte[]'/></constructor><constructor name='RC5ParameterSpec' type='javax.crypto.spec.RC5ParameterSpec'><parameter name='version' type='int'/><parameter name='rounds' type='int'/><parameter name='wordSize' type='int'/><parameter name='iv' type='byte[]'/><parameter name='offset' type='int'/></constructor><method name='getIV' return='byte[]'/><method name='getRounds' return='int'/><method name='getVersion' return='int'/><method name='getWordSize' return='int'/></class><class name='SecretKeySpec' extends='java.lang.Object'><implements name='java.security.spec.KeySpec'/><implements name='javax.crypto.SecretKey'/><implements name='java.io.Serializable'/><constructor name='SecretKeySpec' type='javax.crypto.spec.SecretKeySpec'><parameter name='key' type='byte[]'/><parameter name='algorithm' type='java.lang.String'/></constructor><constructor name='SecretKeySpec' type='javax.crypto.spec.SecretKeySpec'><parameter name='key' type='byte[]'/><parameter name='offset' type='int'/><parameter name='len' type='int'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='getAlgorithm' return='java.lang.String'/><method name='getEncoded' return='byte[]'/><method name='getFormat' return='java.lang.String'/></class></package><package name='javax.microedition.khronos.egl'><class name='EGLConfig' extends='java.lang.Object' abstract='true'><constructor name='EGLConfig' type='javax.microedition.khronos.egl.EGLConfig'/></class><class name='EGLContext' extends='java.lang.Object' abstract='true'><constructor name='EGLContext' type='javax.microedition.khronos.egl.EGLContext'/><method name='getEGL' static='true' return='javax.microedition.khronos.egl.EGL'/><method name='getGL' abstract='true' return='javax.microedition.khronos.opengles.GL'/></class><class name='EGLDisplay' extends='java.lang.Object' abstract='true'><constructor name='EGLDisplay' type='javax.microedition.khronos.egl.EGLDisplay'/></class><class name='EGLSurface' extends='java.lang.Object' abstract='true'><constructor name='EGLSurface' type='javax.microedition.khronos.egl.EGLSurface'/></class><interface name='EGL' abstract='true'/><interface name='EGL10' abstract='true'><implements name='javax.microedition.khronos.egl.EGL'/><field name='EGL_ALPHA_FORMAT' final='true' static='true' value='12424' type='int'/><field name='EGL_ALPHA_MASK_SIZE' final='true' static='true' value='12350' type='int'/><field name='EGL_ALPHA_SIZE' final='true' static='true' value='12321' type='int'/><field name='EGL_BAD_ACCESS' final='true' static='true' value='12290' type='int'/><field name='EGL_BAD_ALLOC' final='true' static='true' value='12291' type='int'/><field name='EGL_BAD_ATTRIBUTE' final='true' static='true' value='12292' type='int'/><field name='EGL_BAD_CONFIG' final='true' static='true' value='12293' type='int'/><field name='EGL_BAD_CONTEXT' final='true' static='true' value='12294' type='int'/><field name='EGL_BAD_CURRENT_SURFACE' final='true' static='true' value='12295' type='int'/><field name='EGL_BAD_DISPLAY' final='true' static='true' value='12296' type='int'/><field name='EGL_BAD_MATCH' final='true' static='true' value='12297' type='int'/><field name='EGL_BAD_NATIVE_PIXMAP' final='true' static='true' value='12298' type='int'/><field name='EGL_BAD_NATIVE_WINDOW' final='true' static='true' value='12299' type='int'/><field name='EGL_BAD_PARAMETER' final='true' static='true' value='12300' type='int'/><field name='EGL_BAD_SURFACE' final='true' static='true' value='12301' type='int'/><field name='EGL_BLUE_SIZE' final='true' static='true' value='12322' type='int'/><field name='EGL_BUFFER_SIZE' final='true' static='true' value='12320' type='int'/><field name='EGL_COLORSPACE' final='true' static='true' value='12423' type='int'/><field name='EGL_COLOR_BUFFER_TYPE' final='true' static='true' value='12351' type='int'/><field name='EGL_CONFIG_CAVEAT' final='true' static='true' value='12327' type='int'/><field name='EGL_CONFIG_ID' final='true' static='true' value='12328' type='int'/><field name='EGL_CORE_NATIVE_ENGINE' final='true' static='true' value='12379' type='int'/><field name='EGL_DEFAULT_DISPLAY' final='true' static='true' value='null' type='java.lang.Object'/><field name='EGL_DEPTH_SIZE' final='true' static='true' value='12325' type='int'/><field name='EGL_DONT_CARE' final='true' static='true' value='-1' type='int'/><field name='EGL_DRAW' final='true' static='true' value='12377' type='int'/><field name='EGL_EXTENSIONS' final='true' static='true' value='12373' type='int'/><field name='EGL_GREEN_SIZE' final='true' static='true' value='12323' type='int'/><field name='EGL_HEIGHT' final='true' static='true' value='12374' type='int'/><field name='EGL_HORIZONTAL_RESOLUTION' final='true' static='true' value='12432' type='int'/><field name='EGL_LARGEST_PBUFFER' final='true' static='true' value='12376' type='int'/><field name='EGL_LEVEL' final='true' static='true' value='12329' type='int'/><field name='EGL_LUMINANCE_BUFFER' final='true' static='true' value='12431' type='int'/><field name='EGL_LUMINANCE_SIZE' final='true' static='true' value='12349' type='int'/><field name='EGL_MAX_PBUFFER_HEIGHT' final='true' static='true' value='12330' type='int'/><field name='EGL_MAX_PBUFFER_PIXELS' final='true' static='true' value='12331' type='int'/><field name='EGL_MAX_PBUFFER_WIDTH' final='true' static='true' value='12332' type='int'/><field name='EGL_NATIVE_RENDERABLE' final='true' static='true' value='12333' type='int'/><field name='EGL_NATIVE_VISUAL_ID' final='true' static='true' value='12334' type='int'/><field name='EGL_NATIVE_VISUAL_TYPE' final='true' static='true' value='12335' type='int'/><field name='EGL_NONE' final='true' static='true' value='12344' type='int'/><field name='EGL_NON_CONFORMANT_CONFIG' final='true' static='true' value='12369' type='int'/><field name='EGL_NOT_INITIALIZED' final='true' static='true' value='12289' type='int'/><field name='EGL_NO_CONTEXT' final='true' static='true' value='null' type='javax.microedition.khronos.egl.EGLContext'/><field name='EGL_NO_DISPLAY' final='true' static='true' value='null' type='javax.microedition.khronos.egl.EGLDisplay'/><field name='EGL_NO_SURFACE' final='true' static='true' value='null' type='javax.microedition.khronos.egl.EGLSurface'/><field name='EGL_PBUFFER_BIT' final='true' static='true' value='1' type='int'/><field name='EGL_PIXEL_ASPECT_RATIO' final='true' static='true' value='12434' type='int'/><field name='EGL_PIXMAP_BIT' final='true' static='true' value='2' type='int'/><field name='EGL_READ' final='true' static='true' value='12378' type='int'/><field name='EGL_RED_SIZE' final='true' static='true' value='12324' type='int'/><field name='EGL_RENDERABLE_TYPE' final='true' static='true' value='12352' type='int'/><field name='EGL_RENDER_BUFFER' final='true' static='true' value='12422' type='int'/><field name='EGL_RGB_BUFFER' final='true' static='true' value='12430' type='int'/><field name='EGL_SAMPLES' final='true' static='true' value='12337' type='int'/><field name='EGL_SAMPLE_BUFFERS' final='true' static='true' value='12338' type='int'/><field name='EGL_SINGLE_BUFFER' final='true' static='true' value='12421' type='int'/><field name='EGL_SLOW_CONFIG' final='true' static='true' value='12368' type='int'/><field name='EGL_STENCIL_SIZE' final='true' static='true' value='12326' type='int'/><field name='EGL_SUCCESS' final='true' static='true' value='12288' type='int'/><field name='EGL_SURFACE_TYPE' final='true' static='true' value='12339' type='int'/><field name='EGL_TRANSPARENT_BLUE_VALUE' final='true' static='true' value='12341' type='int'/><field name='EGL_TRANSPARENT_GREEN_VALUE' final='true' static='true' value='12342' type='int'/><field name='EGL_TRANSPARENT_RED_VALUE' final='true' static='true' value='12343' type='int'/><field name='EGL_TRANSPARENT_RGB' final='true' static='true' value='12370' type='int'/><field name='EGL_TRANSPARENT_TYPE' final='true' static='true' value='12340' type='int'/><field name='EGL_VENDOR' final='true' static='true' value='12371' type='int'/><field name='EGL_VERSION' final='true' static='true' value='12372' type='int'/><field name='EGL_VERTICAL_RESOLUTION' final='true' static='true' value='12433' type='int'/><field name='EGL_WIDTH' final='true' static='true' value='12375' type='int'/><field name='EGL_WINDOW_BIT' final='true' static='true' value='4' type='int'/><method name='eglChooseConfig' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='attrib_list' type='int[]'/><parameter name='configs' type='javax.microedition.khronos.egl.EGLConfig[]'/><parameter name='config_size' type='int'/><parameter name='num_config' type='int[]'/></method><method name='eglCopyBuffers' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='surface' type='javax.microedition.khronos.egl.EGLSurface'/><parameter name='native_pixmap' type='java.lang.Object'/></method><method name='eglCreateContext' abstract='true' return='javax.microedition.khronos.egl.EGLContext'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='share_context' type='javax.microedition.khronos.egl.EGLContext'/><parameter name='attrib_list' type='int[]'/></method><method name='eglCreatePbufferSurface' abstract='true' return='javax.microedition.khronos.egl.EGLSurface'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='attrib_list' type='int[]'/></method><method name='eglCreatePixmapSurface' abstract='true' return='javax.microedition.khronos.egl.EGLSurface'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='native_pixmap' type='java.lang.Object'/><parameter name='attrib_list' type='int[]'/></method><method name='eglCreateWindowSurface' abstract='true' return='javax.microedition.khronos.egl.EGLSurface'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='native_window' type='java.lang.Object'/><parameter name='attrib_list' type='int[]'/></method><method name='eglDestroyContext' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='context' type='javax.microedition.khronos.egl.EGLContext'/></method><method name='eglDestroySurface' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='surface' type='javax.microedition.khronos.egl.EGLSurface'/></method><method name='eglGetConfigAttrib' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='config' type='javax.microedition.khronos.egl.EGLConfig'/><parameter name='attribute' type='int'/><parameter name='value' type='int[]'/></method><method name='eglGetConfigs' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='configs' type='javax.microedition.khronos.egl.EGLConfig[]'/><parameter name='config_size' type='int'/><parameter name='num_config' type='int[]'/></method><method name='eglGetCurrentContext' abstract='true' return='javax.microedition.khronos.egl.EGLContext'/><method name='eglGetCurrentDisplay' abstract='true' return='javax.microedition.khronos.egl.EGLDisplay'/><method name='eglGetCurrentSurface' abstract='true' return='javax.microedition.khronos.egl.EGLSurface'><parameter name='readdraw' type='int'/></method><method name='eglGetDisplay' abstract='true' return='javax.microedition.khronos.egl.EGLDisplay'><parameter name='native_display' type='java.lang.Object'/></method><method name='eglGetError' abstract='true' return='int'/><method name='eglInitialize' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='major_minor' type='int[]'/></method><method name='eglMakeCurrent' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='draw' type='javax.microedition.khronos.egl.EGLSurface'/><parameter name='read' type='javax.microedition.khronos.egl.EGLSurface'/><parameter name='context' type='javax.microedition.khronos.egl.EGLContext'/></method><method name='eglQueryContext' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='context' type='javax.microedition.khronos.egl.EGLContext'/><parameter name='attribute' type='int'/><parameter name='value' type='int[]'/></method><method name='eglQueryString' abstract='true' return='java.lang.String'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='name' type='int'/></method><method name='eglQuerySurface' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='surface' type='javax.microedition.khronos.egl.EGLSurface'/><parameter name='attribute' type='int'/><parameter name='value' type='int[]'/></method><method name='eglSwapBuffers' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/><parameter name='surface' type='javax.microedition.khronos.egl.EGLSurface'/></method><method name='eglTerminate' abstract='true' return='boolean'><parameter name='display' type='javax.microedition.khronos.egl.EGLDisplay'/></method><method name='eglWaitGL' abstract='true' return='boolean'/><method name='eglWaitNative' abstract='true' return='boolean'><parameter name='engine' type='int'/><parameter name='bindTarget' type='java.lang.Object'/></method></interface><interface name='EGL11' abstract='true'><implements name='javax.microedition.khronos.egl.EGL10'/><field name='EGL_CONTEXT_LOST' final='true' static='true' value='12302' type='int'/></interface></package><package name='javax.microedition.khronos.opengles'><interface name='GL' abstract='true'/><interface name='GL10' abstract='true'><implements name='javax.microedition.khronos.opengles.GL'/><field name='GL_ADD' final='true' static='true' value='260' type='int'/><field name='GL_ALIASED_LINE_WIDTH_RANGE' final='true' static='true' value='33902' type='int'/><field name='GL_ALIASED_POINT_SIZE_RANGE' final='true' static='true' value='33901' type='int'/><field name='GL_ALPHA' final='true' static='true' value='6406' type='int'/><field name='GL_ALPHA_BITS' final='true' static='true' value='3413' type='int'/><field name='GL_ALPHA_TEST' final='true' static='true' value='3008' type='int'/><field name='GL_ALWAYS' final='true' static='true' value='519' type='int'/><field name='GL_AMBIENT' final='true' static='true' value='4608' type='int'/><field name='GL_AMBIENT_AND_DIFFUSE' final='true' static='true' value='5634' type='int'/><field name='GL_AND' final='true' static='true' value='5377' type='int'/><field name='GL_AND_INVERTED' final='true' static='true' value='5380' type='int'/><field name='GL_AND_REVERSE' final='true' static='true' value='5378' type='int'/><field name='GL_BACK' final='true' static='true' value='1029' type='int'/><field name='GL_BLEND' final='true' static='true' value='3042' type='int'/><field name='GL_BLUE_BITS' final='true' static='true' value='3412' type='int'/><field name='GL_BYTE' final='true' static='true' value='5120' type='int'/><field name='GL_CCW' final='true' static='true' value='2305' type='int'/><field name='GL_CLAMP_TO_EDGE' final='true' static='true' value='33071' type='int'/><field name='GL_CLEAR' final='true' static='true' value='5376' type='int'/><field name='GL_COLOR_ARRAY' final='true' static='true' value='32886' type='int'/><field name='GL_COLOR_BUFFER_BIT' final='true' static='true' value='16384' type='int'/><field name='GL_COLOR_LOGIC_OP' final='true' static='true' value='3058' type='int'/><field name='GL_COLOR_MATERIAL' final='true' static='true' value='2903' type='int'/><field name='GL_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34467' type='int'/><field name='GL_CONSTANT_ATTENUATION' final='true' static='true' value='4615' type='int'/><field name='GL_COPY' final='true' static='true' value='5379' type='int'/><field name='GL_COPY_INVERTED' final='true' static='true' value='5388' type='int'/><field name='GL_CULL_FACE' final='true' static='true' value='2884' type='int'/><field name='GL_CW' final='true' static='true' value='2304' type='int'/><field name='GL_DECAL' final='true' static='true' value='8449' type='int'/><field name='GL_DECR' final='true' static='true' value='7683' type='int'/><field name='GL_DEPTH_BITS' final='true' static='true' value='3414' type='int'/><field name='GL_DEPTH_BUFFER_BIT' final='true' static='true' value='256' type='int'/><field name='GL_DEPTH_TEST' final='true' static='true' value='2929' type='int'/><field name='GL_DIFFUSE' final='true' static='true' value='4609' type='int'/><field name='GL_DITHER' final='true' static='true' value='3024' type='int'/><field name='GL_DONT_CARE' final='true' static='true' value='4352' type='int'/><field name='GL_DST_ALPHA' final='true' static='true' value='772' type='int'/><field name='GL_DST_COLOR' final='true' static='true' value='774' type='int'/><field name='GL_EMISSION' final='true' static='true' value='5632' type='int'/><field name='GL_EQUAL' final='true' static='true' value='514' type='int'/><field name='GL_EQUIV' final='true' static='true' value='5385' type='int'/><field name='GL_EXP' final='true' static='true' value='2048' type='int'/><field name='GL_EXP2' final='true' static='true' value='2049' type='int'/><field name='GL_EXTENSIONS' final='true' static='true' value='7939' type='int'/><field name='GL_FALSE' final='true' static='true' value='0' type='int'/><field name='GL_FASTEST' final='true' static='true' value='4353' type='int'/><field name='GL_FIXED' final='true' static='true' value='5132' type='int'/><field name='GL_FLAT' final='true' static='true' value='7424' type='int'/><field name='GL_FLOAT' final='true' static='true' value='5126' type='int'/><field name='GL_FOG' final='true' static='true' value='2912' type='int'/><field name='GL_FOG_COLOR' final='true' static='true' value='2918' type='int'/><field name='GL_FOG_DENSITY' final='true' static='true' value='2914' type='int'/><field name='GL_FOG_END' final='true' static='true' value='2916' type='int'/><field name='GL_FOG_HINT' final='true' static='true' value='3156' type='int'/><field name='GL_FOG_MODE' final='true' static='true' value='2917' type='int'/><field name='GL_FOG_START' final='true' static='true' value='2915' type='int'/><field name='GL_FRONT' final='true' static='true' value='1028' type='int'/><field name='GL_FRONT_AND_BACK' final='true' static='true' value='1032' type='int'/><field name='GL_GEQUAL' final='true' static='true' value='518' type='int'/><field name='GL_GREATER' final='true' static='true' value='516' type='int'/><field name='GL_GREEN_BITS' final='true' static='true' value='3411' type='int'/><field name='GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES' final='true' static='true' value='35739' type='int'/><field name='GL_IMPLEMENTATION_COLOR_READ_TYPE_OES' final='true' static='true' value='35738' type='int'/><field name='GL_INCR' final='true' static='true' value='7682' type='int'/><field name='GL_INVALID_ENUM' final='true' static='true' value='1280' type='int'/><field name='GL_INVALID_OPERATION' final='true' static='true' value='1282' type='int'/><field name='GL_INVALID_VALUE' final='true' static='true' value='1281' type='int'/><field name='GL_INVERT' final='true' static='true' value='5386' type='int'/><field name='GL_KEEP' final='true' static='true' value='7680' type='int'/><field name='GL_LEQUAL' final='true' static='true' value='515' type='int'/><field name='GL_LESS' final='true' static='true' value='513' type='int'/><field name='GL_LIGHT0' final='true' static='true' value='16384' type='int'/><field name='GL_LIGHT1' final='true' static='true' value='16385' type='int'/><field name='GL_LIGHT2' final='true' static='true' value='16386' type='int'/><field name='GL_LIGHT3' final='true' static='true' value='16387' type='int'/><field name='GL_LIGHT4' final='true' static='true' value='16388' type='int'/><field name='GL_LIGHT5' final='true' static='true' value='16389' type='int'/><field name='GL_LIGHT6' final='true' static='true' value='16390' type='int'/><field name='GL_LIGHT7' final='true' static='true' value='16391' type='int'/><field name='GL_LIGHTING' final='true' static='true' value='2896' type='int'/><field name='GL_LIGHT_MODEL_AMBIENT' final='true' static='true' value='2899' type='int'/><field name='GL_LIGHT_MODEL_TWO_SIDE' final='true' static='true' value='2898' type='int'/><field name='GL_LINEAR' final='true' static='true' value='9729' type='int'/><field name='GL_LINEAR_ATTENUATION' final='true' static='true' value='4616' type='int'/><field name='GL_LINEAR_MIPMAP_LINEAR' final='true' static='true' value='9987' type='int'/><field name='GL_LINEAR_MIPMAP_NEAREST' final='true' static='true' value='9985' type='int'/><field name='GL_LINES' final='true' static='true' value='1' type='int'/><field name='GL_LINE_LOOP' final='true' static='true' value='2' type='int'/><field name='GL_LINE_SMOOTH' final='true' static='true' value='2848' type='int'/><field name='GL_LINE_SMOOTH_HINT' final='true' static='true' value='3154' type='int'/><field name='GL_LINE_STRIP' final='true' static='true' value='3' type='int'/><field name='GL_LUMINANCE' final='true' static='true' value='6409' type='int'/><field name='GL_LUMINANCE_ALPHA' final='true' static='true' value='6410' type='int'/><field name='GL_MAX_ELEMENTS_INDICES' final='true' static='true' value='33001' type='int'/><field name='GL_MAX_ELEMENTS_VERTICES' final='true' static='true' value='33000' type='int'/><field name='GL_MAX_LIGHTS' final='true' static='true' value='3377' type='int'/><field name='GL_MAX_MODELVIEW_STACK_DEPTH' final='true' static='true' value='3382' type='int'/><field name='GL_MAX_PROJECTION_STACK_DEPTH' final='true' static='true' value='3384' type='int'/><field name='GL_MAX_TEXTURE_SIZE' final='true' static='true' value='3379' type='int'/><field name='GL_MAX_TEXTURE_STACK_DEPTH' final='true' static='true' value='3385' type='int'/><field name='GL_MAX_TEXTURE_UNITS' final='true' static='true' value='34018' type='int'/><field name='GL_MAX_VIEWPORT_DIMS' final='true' static='true' value='3386' type='int'/><field name='GL_MODELVIEW' final='true' static='true' value='5888' type='int'/><field name='GL_MODULATE' final='true' static='true' value='8448' type='int'/><field name='GL_MULTISAMPLE' final='true' static='true' value='32925' type='int'/><field name='GL_NAND' final='true' static='true' value='5390' type='int'/><field name='GL_NEAREST' final='true' static='true' value='9728' type='int'/><field name='GL_NEAREST_MIPMAP_LINEAR' final='true' static='true' value='9986' type='int'/><field name='GL_NEAREST_MIPMAP_NEAREST' final='true' static='true' value='9984' type='int'/><field name='GL_NEVER' final='true' static='true' value='512' type='int'/><field name='GL_NICEST' final='true' static='true' value='4354' type='int'/><field name='GL_NOOP' final='true' static='true' value='5381' type='int'/><field name='GL_NOR' final='true' static='true' value='5384' type='int'/><field name='GL_NORMALIZE' final='true' static='true' value='2977' type='int'/><field name='GL_NORMAL_ARRAY' final='true' static='true' value='32885' type='int'/><field name='GL_NOTEQUAL' final='true' static='true' value='517' type='int'/><field name='GL_NO_ERROR' final='true' static='true' value='0' type='int'/><field name='GL_NUM_COMPRESSED_TEXTURE_FORMATS' final='true' static='true' value='34466' type='int'/><field name='GL_ONE' final='true' static='true' value='1' type='int'/><field name='GL_ONE_MINUS_DST_ALPHA' final='true' static='true' value='773' type='int'/><field name='GL_ONE_MINUS_DST_COLOR' final='true' static='true' value='775' type='int'/><field name='GL_ONE_MINUS_SRC_ALPHA' final='true' static='true' value='771' type='int'/><field name='GL_ONE_MINUS_SRC_COLOR' final='true' static='true' value='769' type='int'/><field name='GL_OR' final='true' static='true' value='5383' type='int'/><field name='GL_OR_INVERTED' final='true' static='true' value='5389' type='int'/><field name='GL_OR_REVERSE' final='true' static='true' value='5387' type='int'/><field name='GL_OUT_OF_MEMORY' final='true' static='true' value='1285' type='int'/><field name='GL_PACK_ALIGNMENT' final='true' static='true' value='3333' type='int'/><field name='GL_PALETTE4_R5_G6_B5_OES' final='true' static='true' value='35730' type='int'/><field name='GL_PALETTE4_RGB5_A1_OES' final='true' static='true' value='35732' type='int'/><field name='GL_PALETTE4_RGB8_OES' final='true' static='true' value='35728' type='int'/><field name='GL_PALETTE4_RGBA4_OES' final='true' static='true' value='35731' type='int'/><field name='GL_PALETTE4_RGBA8_OES' final='true' static='true' value='35729' type='int'/><field name='GL_PALETTE8_R5_G6_B5_OES' final='true' static='true' value='35735' type='int'/><field name='GL_PALETTE8_RGB5_A1_OES' final='true' static='true' value='35737' type='int'/><field name='GL_PALETTE8_RGB8_OES' final='true' static='true' value='35733' type='int'/><field name='GL_PALETTE8_RGBA4_OES' final='true' static='true' value='35736' type='int'/><field name='GL_PALETTE8_RGBA8_OES' final='true' static='true' value='35734' type='int'/><field name='GL_PERSPECTIVE_CORRECTION_HINT' final='true' static='true' value='3152' type='int'/><field name='GL_POINTS' final='true' static='true' value='0' type='int'/><field name='GL_POINT_FADE_THRESHOLD_SIZE' final='true' static='true' value='33064' type='int'/><field name='GL_POINT_SIZE' final='true' static='true' value='2833' type='int'/><field name='GL_POINT_SMOOTH' final='true' static='true' value='2832' type='int'/><field name='GL_POINT_SMOOTH_HINT' final='true' static='true' value='3153' type='int'/><field name='GL_POLYGON_OFFSET_FILL' final='true' static='true' value='32823' type='int'/><field name='GL_POLYGON_SMOOTH_HINT' final='true' static='true' value='3155' type='int'/><field name='GL_POSITION' final='true' static='true' value='4611' type='int'/><field name='GL_PROJECTION' final='true' static='true' value='5889' type='int'/><field name='GL_QUADRATIC_ATTENUATION' final='true' static='true' value='4617' type='int'/><field name='GL_RED_BITS' final='true' static='true' value='3410' type='int'/><field name='GL_RENDERER' final='true' static='true' value='7937' type='int'/><field name='GL_REPEAT' final='true' static='true' value='10497' type='int'/><field name='GL_REPLACE' final='true' static='true' value='7681' type='int'/><field name='GL_RESCALE_NORMAL' final='true' static='true' value='32826' type='int'/><field name='GL_RGB' final='true' static='true' value='6407' type='int'/><field name='GL_RGBA' final='true' static='true' value='6408' type='int'/><field name='GL_SAMPLE_ALPHA_TO_COVERAGE' final='true' static='true' value='32926' type='int'/><field name='GL_SAMPLE_ALPHA_TO_ONE' final='true' static='true' value='32927' type='int'/><field name='GL_SAMPLE_COVERAGE' final='true' static='true' value='32928' type='int'/><field name='GL_SCISSOR_TEST' final='true' static='true' value='3089' type='int'/><field name='GL_SET' final='true' static='true' value='5391' type='int'/><field name='GL_SHININESS' final='true' static='true' value='5633' type='int'/><field name='GL_SHORT' final='true' static='true' value='5122' type='int'/><field name='GL_SMOOTH' final='true' static='true' value='7425' type='int'/><field name='GL_SMOOTH_LINE_WIDTH_RANGE' final='true' static='true' value='2850' type='int'/><field name='GL_SMOOTH_POINT_SIZE_RANGE' final='true' static='true' value='2834' type='int'/><field name='GL_SPECULAR' final='true' static='true' value='4610' type='int'/><field name='GL_SPOT_CUTOFF' final='true' static='true' value='4614' type='int'/><field name='GL_SPOT_DIRECTION' final='true' static='true' value='4612' type='int'/><field name='GL_SPOT_EXPONENT' final='true' static='true' value='4613' type='int'/><field name='GL_SRC_ALPHA' final='true' static='true' value='770' type='int'/><field name='GL_SRC_ALPHA_SATURATE' final='true' static='true' value='776' type='int'/><field name='GL_SRC_COLOR' final='true' static='true' value='768' type='int'/><field name='GL_STACK_OVERFLOW' final='true' static='true' value='1283' type='int'/><field name='GL_STACK_UNDERFLOW' final='true' static='true' value='1284' type='int'/><field name='GL_STENCIL_BITS' final='true' static='true' value='3415' type='int'/><field name='GL_STENCIL_BUFFER_BIT' final='true' static='true' value='1024' type='int'/><field name='GL_STENCIL_TEST' final='true' static='true' value='2960' type='int'/><field name='GL_SUBPIXEL_BITS' final='true' static='true' value='3408' type='int'/><field name='GL_TEXTURE' final='true' static='true' value='5890' type='int'/><field name='GL_TEXTURE0' final='true' static='true' value='33984' type='int'/><field name='GL_TEXTURE1' final='true' static='true' value='33985' type='int'/><field name='GL_TEXTURE10' final='true' static='true' value='33994' type='int'/><field name='GL_TEXTURE11' final='true' static='true' value='33995' type='int'/><field name='GL_TEXTURE12' final='true' static='true' value='33996' type='int'/><field name='GL_TEXTURE13' final='true' static='true' value='33997' type='int'/><field name='GL_TEXTURE14' final='true' static='true' value='33998' type='int'/><field name='GL_TEXTURE15' final='true' static='true' value='33999' type='int'/><field name='GL_TEXTURE16' final='true' static='true' value='34000' type='int'/><field name='GL_TEXTURE17' final='true' static='true' value='34001' type='int'/><field name='GL_TEXTURE18' final='true' static='true' value='34002' type='int'/><field name='GL_TEXTURE19' final='true' static='true' value='34003' type='int'/><field name='GL_TEXTURE2' final='true' static='true' value='33986' type='int'/><field name='GL_TEXTURE20' final='true' static='true' value='34004' type='int'/><field name='GL_TEXTURE21' final='true' static='true' value='34005' type='int'/><field name='GL_TEXTURE22' final='true' static='true' value='34006' type='int'/><field name='GL_TEXTURE23' final='true' static='true' value='34007' type='int'/><field name='GL_TEXTURE24' final='true' static='true' value='34008' type='int'/><field name='GL_TEXTURE25' final='true' static='true' value='34009' type='int'/><field name='GL_TEXTURE26' final='true' static='true' value='34010' type='int'/><field name='GL_TEXTURE27' final='true' static='true' value='34011' type='int'/><field name='GL_TEXTURE28' final='true' static='true' value='34012' type='int'/><field name='GL_TEXTURE29' final='true' static='true' value='34013' type='int'/><field name='GL_TEXTURE3' final='true' static='true' value='33987' type='int'/><field name='GL_TEXTURE30' final='true' static='true' value='34014' type='int'/><field name='GL_TEXTURE31' final='true' static='true' value='34015' type='int'/><field name='GL_TEXTURE4' final='true' static='true' value='33988' type='int'/><field name='GL_TEXTURE5' final='true' static='true' value='33989' type='int'/><field name='GL_TEXTURE6' final='true' static='true' value='33990' type='int'/><field name='GL_TEXTURE7' final='true' static='true' value='33991' type='int'/><field name='GL_TEXTURE8' final='true' static='true' value='33992' type='int'/><field name='GL_TEXTURE9' final='true' static='true' value='33993' type='int'/><field name='GL_TEXTURE_2D' final='true' static='true' value='3553' type='int'/><field name='GL_TEXTURE_COORD_ARRAY' final='true' static='true' value='32888' type='int'/><field name='GL_TEXTURE_ENV' final='true' static='true' value='8960' type='int'/><field name='GL_TEXTURE_ENV_COLOR' final='true' static='true' value='8705' type='int'/><field name='GL_TEXTURE_ENV_MODE' final='true' static='true' value='8704' type='int'/><field name='GL_TEXTURE_MAG_FILTER' final='true' static='true' value='10240' type='int'/><field name='GL_TEXTURE_MIN_FILTER' final='true' static='true' value='10241' type='int'/><field name='GL_TEXTURE_WRAP_S' final='true' static='true' value='10242' type='int'/><field name='GL_TEXTURE_WRAP_T' final='true' static='true' value='10243' type='int'/><field name='GL_TRIANGLES' final='true' static='true' value='4' type='int'/><field name='GL_TRIANGLE_FAN' final='true' static='true' value='6' type='int'/><field name='GL_TRIANGLE_STRIP' final='true' static='true' value='5' type='int'/><field name='GL_TRUE' final='true' static='true' value='1' type='int'/><field name='GL_UNPACK_ALIGNMENT' final='true' static='true' value='3317' type='int'/><field name='GL_UNSIGNED_BYTE' final='true' static='true' value='5121' type='int'/><field name='GL_UNSIGNED_SHORT' final='true' static='true' value='5123' type='int'/><field name='GL_UNSIGNED_SHORT_4_4_4_4' final='true' static='true' value='32819' type='int'/><field name='GL_UNSIGNED_SHORT_5_5_5_1' final='true' static='true' value='32820' type='int'/><field name='GL_UNSIGNED_SHORT_5_6_5' final='true' static='true' value='33635' type='int'/><field name='GL_VENDOR' final='true' static='true' value='7936' type='int'/><field name='GL_VERSION' final='true' static='true' value='7938' type='int'/><field name='GL_VERTEX_ARRAY' final='true' static='true' value='32884' type='int'/><field name='GL_XOR' final='true' static='true' value='5382' type='int'/><field name='GL_ZERO' final='true' static='true' value='0' type='int'/><method name='glActiveTexture' abstract='true'><parameter name='texture' type='int'/></method><method name='glAlphaFunc' abstract='true'><parameter name='func' type='int'/><parameter name='ref' type='float'/></method><method name='glAlphaFuncx' abstract='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/></method><method name='glBindTexture' abstract='true'><parameter name='target' type='int'/><parameter name='texture' type='int'/></method><method name='glBlendFunc' abstract='true'><parameter name='sfactor' type='int'/><parameter name='dfactor' type='int'/></method><method name='glClear' abstract='true'><parameter name='mask' type='int'/></method><method name='glClearColor' abstract='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method name='glClearColorx' abstract='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method name='glClearDepthf' abstract='true'><parameter name='depth' type='float'/></method><method name='glClearDepthx' abstract='true'><parameter name='depth' type='int'/></method><method name='glClearStencil' abstract='true'><parameter name='s' type='int'/></method><method name='glClientActiveTexture' abstract='true'><parameter name='texture' type='int'/></method><method name='glColor4f' abstract='true'><parameter name='red' type='float'/><parameter name='green' type='float'/><parameter name='blue' type='float'/><parameter name='alpha' type='float'/></method><method name='glColor4x' abstract='true'><parameter name='red' type='int'/><parameter name='green' type='int'/><parameter name='blue' type='int'/><parameter name='alpha' type='int'/></method><method name='glColorMask' abstract='true'><parameter name='red' type='boolean'/><parameter name='green' type='boolean'/><parameter name='blue' type='boolean'/><parameter name='alpha' type='boolean'/></method><method name='glColorPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glCompressedTexImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method name='glCompressedTexSubImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method name='glCopyTexImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/></method><method name='glCopyTexSubImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='glCullFace' abstract='true'><parameter name='mode' type='int'/></method><method name='glDeleteTextures' abstract='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDeleteTextures' abstract='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method name='glDepthFunc' abstract='true'><parameter name='func' type='int'/></method><method name='glDepthMask' abstract='true'><parameter name='flag' type='boolean'/></method><method name='glDepthRangef' abstract='true'><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method name='glDepthRangex' abstract='true'><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method name='glDisable' abstract='true'><parameter name='cap' type='int'/></method><method name='glDisableClientState' abstract='true'><parameter name='array' type='int'/></method><method name='glDrawArrays' abstract='true'><parameter name='mode' type='int'/><parameter name='first' type='int'/><parameter name='count' type='int'/></method><method name='glDrawElements' abstract='true'><parameter name='mode' type='int'/><parameter name='count' type='int'/><parameter name='type' type='int'/><parameter name='indices' type='java.nio.Buffer'/></method><method name='glEnable' abstract='true'><parameter name='cap' type='int'/></method><method name='glEnableClientState' abstract='true'><parameter name='array' type='int'/></method><method name='glFinish' abstract='true'/><method name='glFlush' abstract='true'/><method name='glFogf' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glFogfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glFogfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glFogx' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glFogxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glFogxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glFrontFace' abstract='true'><parameter name='mode' type='int'/></method><method name='glFrustumf' abstract='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method name='glFrustumx' abstract='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method name='glGenTextures' abstract='true'><parameter name='n' type='int'/><parameter name='textures' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGenTextures' abstract='true'><parameter name='n' type='int'/><parameter name='textures' type='java.nio.IntBuffer'/></method><method name='glGetError' abstract='true' return='int'/><method name='glGetIntegerv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetIntegerv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetString' abstract='true' return='java.lang.String'><parameter name='name' type='int'/></method><method name='glHint' abstract='true'><parameter name='target' type='int'/><parameter name='mode' type='int'/></method><method name='glLightModelf' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glLightModelfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glLightModelfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glLightModelx' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glLightModelxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glLightModelxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glLightf' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glLightfv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glLightfv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glLightx' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glLightxv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glLightxv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glLineWidth' abstract='true'><parameter name='width' type='float'/></method><method name='glLineWidthx' abstract='true'><parameter name='width' type='int'/></method><method name='glLoadIdentity' abstract='true'/><method name='glLoadMatrixf' abstract='true'><parameter name='m' type='float[]'/><parameter name='offset' type='int'/></method><method name='glLoadMatrixf' abstract='true'><parameter name='m' type='java.nio.FloatBuffer'/></method><method name='glLoadMatrixx' abstract='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method name='glLoadMatrixx' abstract='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method name='glLogicOp' abstract='true'><parameter name='opcode' type='int'/></method><method name='glMaterialf' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glMaterialfv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glMaterialfv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glMaterialx' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glMaterialxv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glMaterialxv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glMatrixMode' abstract='true'><parameter name='mode' type='int'/></method><method name='glMultMatrixf' abstract='true'><parameter name='m' type='float[]'/><parameter name='offset' type='int'/></method><method name='glMultMatrixf' abstract='true'><parameter name='m' type='java.nio.FloatBuffer'/></method><method name='glMultMatrixx' abstract='true'><parameter name='m' type='int[]'/><parameter name='offset' type='int'/></method><method name='glMultMatrixx' abstract='true'><parameter name='m' type='java.nio.IntBuffer'/></method><method name='glMultiTexCoord4f' abstract='true'><parameter name='target' type='int'/><parameter name='s' type='float'/><parameter name='t' type='float'/><parameter name='r' type='float'/><parameter name='q' type='float'/></method><method name='glMultiTexCoord4x' abstract='true'><parameter name='target' type='int'/><parameter name='s' type='int'/><parameter name='t' type='int'/><parameter name='r' type='int'/><parameter name='q' type='int'/></method><method name='glNormal3f' abstract='true'><parameter name='nx' type='float'/><parameter name='ny' type='float'/><parameter name='nz' type='float'/></method><method name='glNormal3x' abstract='true'><parameter name='nx' type='int'/><parameter name='ny' type='int'/><parameter name='nz' type='int'/></method><method name='glNormalPointer' abstract='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glOrthof' abstract='true'><parameter name='left' type='float'/><parameter name='right' type='float'/><parameter name='bottom' type='float'/><parameter name='top' type='float'/><parameter name='zNear' type='float'/><parameter name='zFar' type='float'/></method><method name='glOrthox' abstract='true'><parameter name='left' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/><parameter name='top' type='int'/><parameter name='zNear' type='int'/><parameter name='zFar' type='int'/></method><method name='glPixelStorei' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glPointSize' abstract='true'><parameter name='size' type='float'/></method><method name='glPointSizex' abstract='true'><parameter name='size' type='int'/></method><method name='glPolygonOffset' abstract='true'><parameter name='factor' type='float'/><parameter name='units' type='float'/></method><method name='glPolygonOffsetx' abstract='true'><parameter name='factor' type='int'/><parameter name='units' type='int'/></method><method name='glPopMatrix' abstract='true'/><method name='glPushMatrix' abstract='true'/><method name='glReadPixels' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method name='glRotatef' abstract='true'><parameter name='angle' type='float'/><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='glRotatex' abstract='true'><parameter name='angle' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method name='glSampleCoverage' abstract='true'><parameter name='value' type='float'/><parameter name='invert' type='boolean'/></method><method name='glSampleCoveragex' abstract='true'><parameter name='value' type='int'/><parameter name='invert' type='boolean'/></method><method name='glScalef' abstract='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='glScalex' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method name='glScissor' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='glShadeModel' abstract='true'><parameter name='mode' type='int'/></method><method name='glStencilFunc' abstract='true'><parameter name='func' type='int'/><parameter name='ref' type='int'/><parameter name='mask' type='int'/></method><method name='glStencilMask' abstract='true'><parameter name='mask' type='int'/></method><method name='glStencilOp' abstract='true'><parameter name='fail' type='int'/><parameter name='zfail' type='int'/><parameter name='zpass' type='int'/></method><method name='glTexCoordPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glTexEnvf' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glTexEnvfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glTexEnvfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glTexEnvx' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexEnvxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexEnvxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method name='glTexParameterf' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glTexParameterx' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexSubImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='xoffset' type='int'/><parameter name='yoffset' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='format' type='int'/><parameter name='type' type='int'/><parameter name='pixels' type='java.nio.Buffer'/></method><method name='glTranslatef' abstract='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/></method><method name='glTranslatex' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/></method><method name='glVertexPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glViewport' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method></interface><interface name='GL10Ext' abstract='true'><implements name='javax.microedition.khronos.opengles.GL'/><method name='glQueryMatrixxOES' abstract='true' return='int'><parameter name='mantissa' type='int[]'/><parameter name='mantissaOffset' type='int'/><parameter name='exponent' type='int[]'/><parameter name='exponentOffset' type='int'/></method><method name='glQueryMatrixxOES' abstract='true' return='int'><parameter name='mantissa' type='java.nio.IntBuffer'/><parameter name='exponent' type='java.nio.IntBuffer'/></method></interface><interface name='GL11' abstract='true'><implements name='javax.microedition.khronos.opengles.GL10'/><field name='GL_ACTIVE_TEXTURE' final='true' static='true' value='34016' type='int'/><field name='GL_ADD_SIGNED' final='true' static='true' value='34164' type='int'/><field name='GL_ALPHA_SCALE' final='true' static='true' value='3356' type='int'/><field name='GL_ALPHA_TEST_FUNC' final='true' static='true' value='3009' type='int'/><field name='GL_ALPHA_TEST_REF' final='true' static='true' value='3010' type='int'/><field name='GL_ARRAY_BUFFER' final='true' static='true' value='34962' type='int'/><field name='GL_ARRAY_BUFFER_BINDING' final='true' static='true' value='34964' type='int'/><field name='GL_BLEND_DST' final='true' static='true' value='3040' type='int'/><field name='GL_BLEND_SRC' final='true' static='true' value='3041' type='int'/><field name='GL_BUFFER_ACCESS' final='true' static='true' value='35003' type='int'/><field name='GL_BUFFER_SIZE' final='true' static='true' value='34660' type='int'/><field name='GL_BUFFER_USAGE' final='true' static='true' value='34661' type='int'/><field name='GL_CLIENT_ACTIVE_TEXTURE' final='true' static='true' value='34017' type='int'/><field name='GL_CLIP_PLANE0' final='true' static='true' value='12288' type='int'/><field name='GL_CLIP_PLANE1' final='true' static='true' value='12289' type='int'/><field name='GL_CLIP_PLANE2' final='true' static='true' value='12290' type='int'/><field name='GL_CLIP_PLANE3' final='true' static='true' value='12291' type='int'/><field name='GL_CLIP_PLANE4' final='true' static='true' value='12292' type='int'/><field name='GL_CLIP_PLANE5' final='true' static='true' value='12293' type='int'/><field name='GL_COLOR_ARRAY_BUFFER_BINDING' final='true' static='true' value='34968' type='int'/><field name='GL_COLOR_ARRAY_POINTER' final='true' static='true' value='32912' type='int'/><field name='GL_COLOR_ARRAY_SIZE' final='true' static='true' value='32897' type='int'/><field name='GL_COLOR_ARRAY_STRIDE' final='true' static='true' value='32899' type='int'/><field name='GL_COLOR_ARRAY_TYPE' final='true' static='true' value='32898' type='int'/><field name='GL_COLOR_CLEAR_VALUE' final='true' static='true' value='3106' type='int'/><field name='GL_COLOR_WRITEMASK' final='true' static='true' value='3107' type='int'/><field name='GL_COMBINE' final='true' static='true' value='34160' type='int'/><field name='GL_COMBINE_ALPHA' final='true' static='true' value='34162' type='int'/><field name='GL_COMBINE_RGB' final='true' static='true' value='34161' type='int'/><field name='GL_CONSTANT' final='true' static='true' value='34166' type='int'/><field name='GL_COORD_REPLACE_OES' final='true' static='true' value='34914' type='int'/><field name='GL_CULL_FACE_MODE' final='true' static='true' value='2885' type='int'/><field name='GL_CURRENT_COLOR' final='true' static='true' value='2816' type='int'/><field name='GL_CURRENT_NORMAL' final='true' static='true' value='2818' type='int'/><field name='GL_CURRENT_TEXTURE_COORDS' final='true' static='true' value='2819' type='int'/><field name='GL_DEPTH_CLEAR_VALUE' final='true' static='true' value='2931' type='int'/><field name='GL_DEPTH_FUNC' final='true' static='true' value='2932' type='int'/><field name='GL_DEPTH_RANGE' final='true' static='true' value='2928' type='int'/><field name='GL_DEPTH_WRITEMASK' final='true' static='true' value='2930' type='int'/><field name='GL_DOT3_RGB' final='true' static='true' value='34478' type='int'/><field name='GL_DOT3_RGBA' final='true' static='true' value='34479' type='int'/><field name='GL_DYNAMIC_DRAW' final='true' static='true' value='35048' type='int'/><field name='GL_ELEMENT_ARRAY_BUFFER' final='true' static='true' value='34963' type='int'/><field name='GL_ELEMENT_ARRAY_BUFFER_BINDING' final='true' static='true' value='34965' type='int'/><field name='GL_FRONT_FACE' final='true' static='true' value='2886' type='int'/><field name='GL_GENERATE_MIPMAP' final='true' static='true' value='33169' type='int'/><field name='GL_GENERATE_MIPMAP_HINT' final='true' static='true' value='33170' type='int'/><field name='GL_INTERPOLATE' final='true' static='true' value='34165' type='int'/><field name='GL_LINE_WIDTH' final='true' static='true' value='2849' type='int'/><field name='GL_LOGIC_OP_MODE' final='true' static='true' value='3056' type='int'/><field name='GL_MATRIX_MODE' final='true' static='true' value='2976' type='int'/><field name='GL_MAX_CLIP_PLANES' final='true' static='true' value='3378' type='int'/><field name='GL_MODELVIEW_MATRIX' final='true' static='true' value='2982' type='int'/><field name='GL_MODELVIEW_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35213' type='int'/><field name='GL_MODELVIEW_STACK_DEPTH' final='true' static='true' value='2979' type='int'/><field name='GL_NORMAL_ARRAY_BUFFER_BINDING' final='true' static='true' value='34967' type='int'/><field name='GL_NORMAL_ARRAY_POINTER' final='true' static='true' value='32911' type='int'/><field name='GL_NORMAL_ARRAY_STRIDE' final='true' static='true' value='32895' type='int'/><field name='GL_NORMAL_ARRAY_TYPE' final='true' static='true' value='32894' type='int'/><field name='GL_OPERAND0_ALPHA' final='true' static='true' value='34200' type='int'/><field name='GL_OPERAND0_RGB' final='true' static='true' value='34192' type='int'/><field name='GL_OPERAND1_ALPHA' final='true' static='true' value='34201' type='int'/><field name='GL_OPERAND1_RGB' final='true' static='true' value='34193' type='int'/><field name='GL_OPERAND2_ALPHA' final='true' static='true' value='34202' type='int'/><field name='GL_OPERAND2_RGB' final='true' static='true' value='34194' type='int'/><field name='GL_POINT_DISTANCE_ATTENUATION' final='true' static='true' value='33065' type='int'/><field name='GL_POINT_FADE_THRESHOLD_SIZE' final='true' static='true' value='33064' type='int'/><field name='GL_POINT_SIZE' final='true' static='true' value='2833' type='int'/><field name='GL_POINT_SIZE_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='35743' type='int'/><field name='GL_POINT_SIZE_ARRAY_OES' final='true' static='true' value='35740' type='int'/><field name='GL_POINT_SIZE_ARRAY_POINTER_OES' final='true' static='true' value='35212' type='int'/><field name='GL_POINT_SIZE_ARRAY_STRIDE_OES' final='true' static='true' value='35211' type='int'/><field name='GL_POINT_SIZE_ARRAY_TYPE_OES' final='true' static='true' value='35210' type='int'/><field name='GL_POINT_SIZE_MAX' final='true' static='true' value='33063' type='int'/><field name='GL_POINT_SIZE_MIN' final='true' static='true' value='33062' type='int'/><field name='GL_POINT_SPRITE_OES' final='true' static='true' value='34913' type='int'/><field name='GL_POLYGON_OFFSET_FACTOR' final='true' static='true' value='32824' type='int'/><field name='GL_POLYGON_OFFSET_UNITS' final='true' static='true' value='10752' type='int'/><field name='GL_PREVIOUS' final='true' static='true' value='34168' type='int'/><field name='GL_PRIMARY_COLOR' final='true' static='true' value='34167' type='int'/><field name='GL_PROJECTION_MATRIX' final='true' static='true' value='2983' type='int'/><field name='GL_PROJECTION_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35214' type='int'/><field name='GL_PROJECTION_STACK_DEPTH' final='true' static='true' value='2980' type='int'/><field name='GL_RGB_SCALE' final='true' static='true' value='34163' type='int'/><field name='GL_SAMPLES' final='true' static='true' value='32937' type='int'/><field name='GL_SAMPLE_BUFFERS' final='true' static='true' value='32936' type='int'/><field name='GL_SAMPLE_COVERAGE_INVERT' final='true' static='true' value='32939' type='int'/><field name='GL_SAMPLE_COVERAGE_VALUE' final='true' static='true' value='32938' type='int'/><field name='GL_SCISSOR_BOX' final='true' static='true' value='3088' type='int'/><field name='GL_SHADE_MODEL' final='true' static='true' value='2900' type='int'/><field name='GL_SRC0_ALPHA' final='true' static='true' value='34184' type='int'/><field name='GL_SRC0_RGB' final='true' static='true' value='34176' type='int'/><field name='GL_SRC1_ALPHA' final='true' static='true' value='34185' type='int'/><field name='GL_SRC1_RGB' final='true' static='true' value='34177' type='int'/><field name='GL_SRC2_ALPHA' final='true' static='true' value='34186' type='int'/><field name='GL_SRC2_RGB' final='true' static='true' value='34178' type='int'/><field name='GL_STATIC_DRAW' final='true' static='true' value='35044' type='int'/><field name='GL_STENCIL_CLEAR_VALUE' final='true' static='true' value='2961' type='int'/><field name='GL_STENCIL_FAIL' final='true' static='true' value='2964' type='int'/><field name='GL_STENCIL_FUNC' final='true' static='true' value='2962' type='int'/><field name='GL_STENCIL_PASS_DEPTH_FAIL' final='true' static='true' value='2965' type='int'/><field name='GL_STENCIL_PASS_DEPTH_PASS' final='true' static='true' value='2966' type='int'/><field name='GL_STENCIL_REF' final='true' static='true' value='2967' type='int'/><field name='GL_STENCIL_VALUE_MASK' final='true' static='true' value='2963' type='int'/><field name='GL_STENCIL_WRITEMASK' final='true' static='true' value='2968' type='int'/><field name='GL_SUBTRACT' final='true' static='true' value='34023' type='int'/><field name='GL_TEXTURE_BINDING_2D' final='true' static='true' value='32873' type='int'/><field name='GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING' final='true' static='true' value='34970' type='int'/><field name='GL_TEXTURE_COORD_ARRAY_POINTER' final='true' static='true' value='32914' type='int'/><field name='GL_TEXTURE_COORD_ARRAY_SIZE' final='true' static='true' value='32904' type='int'/><field name='GL_TEXTURE_COORD_ARRAY_STRIDE' final='true' static='true' value='32906' type='int'/><field name='GL_TEXTURE_COORD_ARRAY_TYPE' final='true' static='true' value='32905' type='int'/><field name='GL_TEXTURE_MATRIX' final='true' static='true' value='2984' type='int'/><field name='GL_TEXTURE_MATRIX_FLOAT_AS_INT_BITS_OES' final='true' static='true' value='35215' type='int'/><field name='GL_TEXTURE_STACK_DEPTH' final='true' static='true' value='2981' type='int'/><field name='GL_VERTEX_ARRAY_BUFFER_BINDING' final='true' static='true' value='34966' type='int'/><field name='GL_VERTEX_ARRAY_POINTER' final='true' static='true' value='32910' type='int'/><field name='GL_VERTEX_ARRAY_SIZE' final='true' static='true' value='32890' type='int'/><field name='GL_VERTEX_ARRAY_STRIDE' final='true' static='true' value='32892' type='int'/><field name='GL_VERTEX_ARRAY_TYPE' final='true' static='true' value='32891' type='int'/><field name='GL_VIEWPORT' final='true' static='true' value='2978' type='int'/><field name='GL_WRITE_ONLY' final='true' static='true' value='35001' type='int'/><method name='glBindBuffer' abstract='true'><parameter name='target' type='int'/><parameter name='buffer' type='int'/></method><method name='glBufferData' abstract='true'><parameter name='target' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/><parameter name='usage' type='int'/></method><method name='glBufferSubData' abstract='true'><parameter name='target' type='int'/><parameter name='offset' type='int'/><parameter name='size' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method name='glClipPlanef' abstract='true'><parameter name='plane' type='int'/><parameter name='equation' type='float[]'/><parameter name='offset' type='int'/></method><method name='glClipPlanef' abstract='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.FloatBuffer'/></method><method name='glClipPlanex' abstract='true'><parameter name='plane' type='int'/><parameter name='equation' type='int[]'/><parameter name='offset' type='int'/></method><method name='glClipPlanex' abstract='true'><parameter name='plane' type='int'/><parameter name='equation' type='java.nio.IntBuffer'/></method><method name='glColor4ub' abstract='true'><parameter name='red' type='byte'/><parameter name='green' type='byte'/><parameter name='blue' type='byte'/><parameter name='alpha' type='byte'/></method><method name='glColorPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method name='glDeleteBuffers' abstract='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDeleteBuffers' abstract='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method name='glDrawElements' abstract='true'><parameter name='mode' type='int'/><parameter name='count' type='int'/><parameter name='type' type='int'/><parameter name='offset' type='int'/></method><method name='glGenBuffers' abstract='true'><parameter name='n' type='int'/><parameter name='buffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGenBuffers' abstract='true'><parameter name='n' type='int'/><parameter name='buffers' type='java.nio.IntBuffer'/></method><method name='glGetBooleanv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='boolean[]'/><parameter name='offset' type='int'/></method><method name='glGetBooleanv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetBufferParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetBufferParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetClipPlanef' abstract='true'><parameter name='pname' type='int'/><parameter name='eqn' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetClipPlanef' abstract='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.FloatBuffer'/></method><method name='glGetClipPlanex' abstract='true'><parameter name='pname' type='int'/><parameter name='eqn' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetClipPlanex' abstract='true'><parameter name='pname' type='int'/><parameter name='eqn' type='java.nio.IntBuffer'/></method><method name='glGetFixedv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetFixedv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetFloatv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetFloatv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glGetLightfv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetLightfv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glGetLightxv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetLightxv' abstract='true'><parameter name='light' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetMaterialfv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetMaterialfv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glGetMaterialxv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetMaterialxv' abstract='true'><parameter name='face' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetPointerv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.Buffer[]'/></method><method name='glGetTexEnviv' abstract='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexEnviv' abstract='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetTexEnvxv' abstract='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexEnvxv' abstract='true'><parameter name='env' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetTexParameterfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetTexParameterfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glGetTexParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetTexParameterxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexParameterxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glIsBuffer' abstract='true' return='boolean'><parameter name='buffer' type='int'/></method><method name='glIsEnabled' abstract='true' return='boolean'><parameter name='cap' type='int'/></method><method name='glIsTexture' abstract='true' return='boolean'><parameter name='texture' type='int'/></method><method name='glNormalPointer' abstract='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method name='glPointParameterf' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glPointParameterfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glPointParameterfv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glPointParameterx' abstract='true'><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glPointParameterxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glPointParameterxv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glPointSizePointerOES' abstract='true'><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glTexCoordPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method name='glTexEnvi' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexEnviv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexEnviv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexParameterfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glTexParameterfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glTexParameteri' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexParameteriv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexParameterxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexParameterxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glVertexPointer' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method></interface><interface name='GL11Ext' abstract='true'><implements name='javax.microedition.khronos.opengles.GL'/><field name='GL_MATRIX_INDEX_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='35742' type='int'/><field name='GL_MATRIX_INDEX_ARRAY_OES' final='true' static='true' value='34884' type='int'/><field name='GL_MATRIX_INDEX_ARRAY_POINTER_OES' final='true' static='true' value='34889' type='int'/><field name='GL_MATRIX_INDEX_ARRAY_SIZE_OES' final='true' static='true' value='34886' type='int'/><field name='GL_MATRIX_INDEX_ARRAY_STRIDE_OES' final='true' static='true' value='34888' type='int'/><field name='GL_MATRIX_INDEX_ARRAY_TYPE_OES' final='true' static='true' value='34887' type='int'/><field name='GL_MATRIX_PALETTE_OES' final='true' static='true' value='34880' type='int'/><field name='GL_MAX_PALETTE_MATRICES_OES' final='true' static='true' value='34882' type='int'/><field name='GL_MAX_VERTEX_UNITS_OES' final='true' static='true' value='34468' type='int'/><field name='GL_TEXTURE_CROP_RECT_OES' final='true' static='true' value='35741' type='int'/><field name='GL_WEIGHT_ARRAY_BUFFER_BINDING_OES' final='true' static='true' value='34974' type='int'/><field name='GL_WEIGHT_ARRAY_OES' final='true' static='true' value='34477' type='int'/><field name='GL_WEIGHT_ARRAY_POINTER_OES' final='true' static='true' value='34476' type='int'/><field name='GL_WEIGHT_ARRAY_SIZE_OES' final='true' static='true' value='34475' type='int'/><field name='GL_WEIGHT_ARRAY_STRIDE_OES' final='true' static='true' value='34474' type='int'/><field name='GL_WEIGHT_ARRAY_TYPE_OES' final='true' static='true' value='34473' type='int'/><method name='glCurrentPaletteMatrixOES' abstract='true'><parameter name='matrixpaletteindex' type='int'/></method><method name='glDrawTexfOES' abstract='true'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='z' type='float'/><parameter name='width' type='float'/><parameter name='height' type='float'/></method><method name='glDrawTexfvOES' abstract='true'><parameter name='coords' type='float[]'/><parameter name='offset' type='int'/></method><method name='glDrawTexfvOES' abstract='true'><parameter name='coords' type='java.nio.FloatBuffer'/></method><method name='glDrawTexiOES' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='glDrawTexivOES' abstract='true'><parameter name='coords' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDrawTexivOES' abstract='true'><parameter name='coords' type='java.nio.IntBuffer'/></method><method name='glDrawTexsOES' abstract='true'><parameter name='x' type='short'/><parameter name='y' type='short'/><parameter name='z' type='short'/><parameter name='width' type='short'/><parameter name='height' type='short'/></method><method name='glDrawTexsvOES' abstract='true'><parameter name='coords' type='short[]'/><parameter name='offset' type='int'/></method><method name='glDrawTexsvOES' abstract='true'><parameter name='coords' type='java.nio.ShortBuffer'/></method><method name='glDrawTexxOES' abstract='true'><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='glDrawTexxvOES' abstract='true'><parameter name='coords' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDrawTexxvOES' abstract='true'><parameter name='coords' type='java.nio.IntBuffer'/></method><method name='glEnable' abstract='true'><parameter name='cap' type='int'/></method><method name='glEnableClientState' abstract='true'><parameter name='array' type='int'/></method><method name='glLoadPaletteFromModelViewMatrixOES' abstract='true'/><method name='glMatrixIndexPointerOES' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glMatrixIndexPointerOES' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method><method name='glTexParameterfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float[]'/><parameter name='offset' type='int'/></method><method name='glWeightPointerOES' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='pointer' type='java.nio.Buffer'/></method><method name='glWeightPointerOES' abstract='true'><parameter name='size' type='int'/><parameter name='type' type='int'/><parameter name='stride' type='int'/><parameter name='offset' type='int'/></method></interface><interface name='GL11ExtensionPack' abstract='true'><implements name='javax.microedition.khronos.opengles.GL'/><field name='GL_BLEND_DST_ALPHA' final='true' static='true' value='32970' type='int'/><field name='GL_BLEND_DST_RGB' final='true' static='true' value='32968' type='int'/><field name='GL_BLEND_EQUATION' final='true' static='true' value='32777' type='int'/><field name='GL_BLEND_EQUATION_ALPHA' final='true' static='true' value='34877' type='int'/><field name='GL_BLEND_EQUATION_RGB' final='true' static='true' value='32777' type='int'/><field name='GL_BLEND_SRC_ALPHA' final='true' static='true' value='32971' type='int'/><field name='GL_BLEND_SRC_RGB' final='true' static='true' value='32969' type='int'/><field name='GL_COLOR_ATTACHMENT0_OES' final='true' static='true' value='36064' type='int'/><field name='GL_COLOR_ATTACHMENT10_OES' final='true' static='true' value='36074' type='int'/><field name='GL_COLOR_ATTACHMENT11_OES' final='true' static='true' value='36075' type='int'/><field name='GL_COLOR_ATTACHMENT12_OES' final='true' static='true' value='36076' type='int'/><field name='GL_COLOR_ATTACHMENT13_OES' final='true' static='true' value='36077' type='int'/><field name='GL_COLOR_ATTACHMENT14_OES' final='true' static='true' value='36078' type='int'/><field name='GL_COLOR_ATTACHMENT15_OES' final='true' static='true' value='36079' type='int'/><field name='GL_COLOR_ATTACHMENT1_OES' final='true' static='true' value='36065' type='int'/><field name='GL_COLOR_ATTACHMENT2_OES' final='true' static='true' value='36066' type='int'/><field name='GL_COLOR_ATTACHMENT3_OES' final='true' static='true' value='36067' type='int'/><field name='GL_COLOR_ATTACHMENT4_OES' final='true' static='true' value='36068' type='int'/><field name='GL_COLOR_ATTACHMENT5_OES' final='true' static='true' value='36069' type='int'/><field name='GL_COLOR_ATTACHMENT6_OES' final='true' static='true' value='36070' type='int'/><field name='GL_COLOR_ATTACHMENT7_OES' final='true' static='true' value='36071' type='int'/><field name='GL_COLOR_ATTACHMENT8_OES' final='true' static='true' value='36072' type='int'/><field name='GL_COLOR_ATTACHMENT9_OES' final='true' static='true' value='36073' type='int'/><field name='GL_DECR_WRAP' final='true' static='true' value='34056' type='int'/><field name='GL_DEPTH_ATTACHMENT_OES' final='true' static='true' value='36096' type='int'/><field name='GL_DEPTH_COMPONENT' final='true' static='true' value='6402' type='int'/><field name='GL_DEPTH_COMPONENT16' final='true' static='true' value='33189' type='int'/><field name='GL_DEPTH_COMPONENT24' final='true' static='true' value='33190' type='int'/><field name='GL_DEPTH_COMPONENT32' final='true' static='true' value='33191' type='int'/><field name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_OES' final='true' static='true' value='36049' type='int'/><field name='GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_OES' final='true' static='true' value='36048' type='int'/><field name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_OES' final='true' static='true' value='36051' type='int'/><field name='GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_OES' final='true' static='true' value='36050' type='int'/><field name='GL_FRAMEBUFFER_BINDING_OES' final='true' static='true' value='36006' type='int'/><field name='GL_FRAMEBUFFER_COMPLETE_OES' final='true' static='true' value='36053' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_OES' final='true' static='true' value='36054' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_OES' final='true' static='true' value='36057' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_OES' final='true' static='true' value='36059' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_FORMATS_OES' final='true' static='true' value='36058' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_OES' final='true' static='true' value='36055' type='int'/><field name='GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_OES' final='true' static='true' value='36060' type='int'/><field name='GL_FRAMEBUFFER_OES' final='true' static='true' value='36160' type='int'/><field name='GL_FRAMEBUFFER_UNSUPPORTED_OES' final='true' static='true' value='36061' type='int'/><field name='GL_FUNC_ADD' final='true' static='true' value='32774' type='int'/><field name='GL_FUNC_REVERSE_SUBTRACT' final='true' static='true' value='32779' type='int'/><field name='GL_FUNC_SUBTRACT' final='true' static='true' value='32778' type='int'/><field name='GL_INCR_WRAP' final='true' static='true' value='34055' type='int'/><field name='GL_INVALID_FRAMEBUFFER_OPERATION_OES' final='true' static='true' value='1286' type='int'/><field name='GL_MAX_COLOR_ATTACHMENTS_OES' final='true' static='true' value='36063' type='int'/><field name='GL_MAX_CUBE_MAP_TEXTURE_SIZE' final='true' static='true' value='34076' type='int'/><field name='GL_MAX_RENDERBUFFER_SIZE_OES' final='true' static='true' value='34024' type='int'/><field name='GL_MIRRORED_REPEAT' final='true' static='true' value='33648' type='int'/><field name='GL_NORMAL_MAP' final='true' static='true' value='34065' type='int'/><field name='GL_REFLECTION_MAP' final='true' static='true' value='34066' type='int'/><field name='GL_RENDERBUFFER_ALPHA_SIZE_OES' final='true' static='true' value='36179' type='int'/><field name='GL_RENDERBUFFER_BINDING_OES' final='true' static='true' value='36007' type='int'/><field name='GL_RENDERBUFFER_BLUE_SIZE_OES' final='true' static='true' value='36178' type='int'/><field name='GL_RENDERBUFFER_DEPTH_SIZE_OES' final='true' static='true' value='36180' type='int'/><field name='GL_RENDERBUFFER_GREEN_SIZE_OES' final='true' static='true' value='36177' type='int'/><field name='GL_RENDERBUFFER_HEIGHT_OES' final='true' static='true' value='36163' type='int'/><field name='GL_RENDERBUFFER_INTERNAL_FORMAT_OES' final='true' static='true' value='36164' type='int'/><field name='GL_RENDERBUFFER_OES' final='true' static='true' value='36161' type='int'/><field name='GL_RENDERBUFFER_RED_SIZE_OES' final='true' static='true' value='36176' type='int'/><field name='GL_RENDERBUFFER_STENCIL_SIZE_OES' final='true' static='true' value='36181' type='int'/><field name='GL_RENDERBUFFER_WIDTH_OES' final='true' static='true' value='36162' type='int'/><field name='GL_RGB565_OES' final='true' static='true' value='36194' type='int'/><field name='GL_RGB5_A1' final='true' static='true' value='32855' type='int'/><field name='GL_RGB8' final='true' static='true' value='32849' type='int'/><field name='GL_RGBA4' final='true' static='true' value='32854' type='int'/><field name='GL_RGBA8' final='true' static='true' value='32856' type='int'/><field name='GL_STENCIL_ATTACHMENT_OES' final='true' static='true' value='36128' type='int'/><field name='GL_STENCIL_INDEX' final='true' static='true' value='6401' type='int'/><field name='GL_STENCIL_INDEX1_OES' final='true' static='true' value='36166' type='int'/><field name='GL_STENCIL_INDEX4_OES' final='true' static='true' value='36167' type='int'/><field name='GL_STENCIL_INDEX8_OES' final='true' static='true' value='36168' type='int'/><field name='GL_STR' final='true' static='true' value='-1' type='int'/><field name='GL_TEXTURE_BINDING_CUBE_MAP' final='true' static='true' value='34068' type='int'/><field name='GL_TEXTURE_CUBE_MAP' final='true' static='true' value='34067' type='int'/><field name='GL_TEXTURE_CUBE_MAP_NEGATIVE_X' final='true' static='true' value='34070' type='int'/><field name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Y' final='true' static='true' value='34072' type='int'/><field name='GL_TEXTURE_CUBE_MAP_NEGATIVE_Z' final='true' static='true' value='34074' type='int'/><field name='GL_TEXTURE_CUBE_MAP_POSITIVE_X' final='true' static='true' value='34069' type='int'/><field name='GL_TEXTURE_CUBE_MAP_POSITIVE_Y' final='true' static='true' value='34071' type='int'/><field name='GL_TEXTURE_CUBE_MAP_POSITIVE_Z' final='true' static='true' value='34073' type='int'/><field name='GL_TEXTURE_GEN_MODE' final='true' static='true' value='9472' type='int'/><field name='GL_TEXTURE_GEN_STR' final='true' static='true' value='36192' type='int'/><method name='glBindFramebufferOES' abstract='true'><parameter name='target' type='int'/><parameter name='framebuffer' type='int'/></method><method name='glBindRenderbufferOES' abstract='true'><parameter name='target' type='int'/><parameter name='renderbuffer' type='int'/></method><method name='glBindTexture' abstract='true'><parameter name='target' type='int'/><parameter name='texture' type='int'/></method><method name='glBlendEquation' abstract='true'><parameter name='mode' type='int'/></method><method name='glBlendEquationSeparate' abstract='true'><parameter name='modeRGB' type='int'/><parameter name='modeAlpha' type='int'/></method><method name='glBlendFuncSeparate' abstract='true'><parameter name='srcRGB' type='int'/><parameter name='dstRGB' type='int'/><parameter name='srcAlpha' type='int'/><parameter name='dstAlpha' type='int'/></method><method name='glCheckFramebufferStatusOES' abstract='true' return='int'><parameter name='target' type='int'/></method><method name='glCompressedTexImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/><parameter name='imageSize' type='int'/><parameter name='data' type='java.nio.Buffer'/></method><method name='glCopyTexImage2D' abstract='true'><parameter name='target' type='int'/><parameter name='level' type='int'/><parameter name='internalformat' type='int'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='border' type='int'/></method><method name='glDeleteFramebuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDeleteFramebuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method name='glDeleteRenderbuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glDeleteRenderbuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method name='glEnable' abstract='true'><parameter name='cap' type='int'/></method><method name='glFramebufferRenderbufferOES' abstract='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='renderbuffertarget' type='int'/><parameter name='renderbuffer' type='int'/></method><method name='glFramebufferTexture2DOES' abstract='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='textarget' type='int'/><parameter name='texture' type='int'/><parameter name='level' type='int'/></method><method name='glGenFramebuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGenFramebuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='framebuffers' type='java.nio.IntBuffer'/></method><method name='glGenRenderbuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGenRenderbuffersOES' abstract='true'><parameter name='n' type='int'/><parameter name='renderbuffers' type='java.nio.IntBuffer'/></method><method name='glGenerateMipmapOES' abstract='true'><parameter name='target' type='int'/></method><method name='glGetFramebufferAttachmentParameterivOES' abstract='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetFramebufferAttachmentParameterivOES' abstract='true'><parameter name='target' type='int'/><parameter name='attachment' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetIntegerv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetIntegerv' abstract='true'><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetRenderbufferParameterivOES' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetRenderbufferParameterivOES' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetTexGenfv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glGetTexGenfv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glGetTexGeniv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexGeniv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glGetTexGenxv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glGetTexGenxv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glIsFramebufferOES' abstract='true' return='boolean'><parameter name='framebuffer' type='int'/></method><method name='glIsRenderbufferOES' abstract='true' return='boolean'><parameter name='renderbuffer' type='int'/></method><method name='glRenderbufferStorageOES' abstract='true'><parameter name='target' type='int'/><parameter name='internalformat' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method name='glStencilOp' abstract='true'><parameter name='fail' type='int'/><parameter name='zfail' type='int'/><parameter name='zpass' type='int'/></method><method name='glTexEnvf' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glTexEnvfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glTexEnvfv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glTexEnvx' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexEnvxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexEnvxv' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexGenf' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method><method name='glTexGenfv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='float[]'/><parameter name='offset' type='int'/></method><method name='glTexGenfv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.FloatBuffer'/></method><method name='glTexGeni' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexGeniv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexGeniv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexGenx' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='int'/></method><method name='glTexGenxv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='int[]'/><parameter name='offset' type='int'/></method><method name='glTexGenxv' abstract='true'><parameter name='coord' type='int'/><parameter name='pname' type='int'/><parameter name='params' type='java.nio.IntBuffer'/></method><method name='glTexParameterf' abstract='true'><parameter name='target' type='int'/><parameter name='pname' type='int'/><parameter name='param' type='float'/></method></interface></package><package name='javax.net'><class name='ServerSocketFactory' extends='java.lang.Object' abstract='true'><constructor name='ServerSocketFactory' type='javax.net.ServerSocketFactory' visibility='protected'/><method name='createServerSocket' return='java.net.ServerSocket'><exception name='IOException' type='java.io.IOException'/></method><method name='createServerSocket' abstract='true' return='java.net.ServerSocket'><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createServerSocket' abstract='true' return='java.net.ServerSocket'><parameter name='port' type='int'/><parameter name='backlog' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createServerSocket' abstract='true' return='java.net.ServerSocket'><parameter name='port' type='int'/><parameter name='backlog' type='int'/><parameter name='iAddress' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' synchronized='true' static='true' return='javax.net.ServerSocketFactory'/></class><class name='SocketFactory' extends='java.lang.Object' abstract='true'><constructor name='SocketFactory' type='javax.net.SocketFactory' visibility='protected'/><method name='createSocket' return='java.net.Socket'><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localHost' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='host' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' synchronized='true' static='true' return='javax.net.SocketFactory'/></class></package><package name='javax.net.ssl'><class name='CertPathTrustManagerParameters' extends='java.lang.Object'><implements name='javax.net.ssl.ManagerFactoryParameters'/><constructor name='CertPathTrustManagerParameters' type='javax.net.ssl.CertPathTrustManagerParameters'><parameter name='parameters' type='java.security.cert.CertPathParameters'/></constructor><method name='getParameters' return='java.security.cert.CertPathParameters'/></class><class name='HandshakeCompletedEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='HandshakeCompletedEvent' type='javax.net.ssl.HandshakeCompletedEvent'><parameter name='sock' type='javax.net.ssl.SSLSocket'/><parameter name='s' type='javax.net.ssl.SSLSession'/></constructor><method name='getCipherSuite' return='java.lang.String'/><method name='getLocalCertificates' return='java.security.cert.Certificate[]'/><method name='getLocalPrincipal' return='java.security.Principal'/><method name='getPeerCertificateChain' return='javax.security.cert.X509Certificate[]'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getPeerCertificates' return='java.security.cert.Certificate[]'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getPeerPrincipal' return='java.security.Principal'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getSession' return='javax.net.ssl.SSLSession'/><method name='getSocket' return='javax.net.ssl.SSLSocket'/></class><class name='HttpsURLConnection' extends='java.net.HttpURLConnection' abstract='true'><constructor name='HttpsURLConnection' type='javax.net.ssl.HttpsURLConnection' visibility='protected'><parameter name='url' type='java.net.URL'/></constructor><field name='hostnameVerifier' type='javax.net.ssl.HostnameVerifier' visibility='protected'/><method name='getCipherSuite' abstract='true' return='java.lang.String'/><method name='getDefaultHostnameVerifier' static='true' return='javax.net.ssl.HostnameVerifier'/><method name='getDefaultSSLSocketFactory' static='true' return='javax.net.ssl.SSLSocketFactory'/><method name='getHostnameVerifier' return='javax.net.ssl.HostnameVerifier'/><method name='getLocalCertificates' abstract='true' return='java.security.cert.Certificate[]'/><method name='getLocalPrincipal' return='java.security.Principal'/><method name='getPeerPrincipal' return='java.security.Principal'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getSSLSocketFactory' return='javax.net.ssl.SSLSocketFactory'/><method name='getServerCertificates' abstract='true' return='java.security.cert.Certificate[]'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='setDefaultHostnameVerifier' static='true'><parameter name='v' type='javax.net.ssl.HostnameVerifier'/></method><method name='setDefaultSSLSocketFactory' static='true'><parameter name='sf' type='javax.net.ssl.SSLSocketFactory'/></method><method name='setHostnameVerifier'><parameter name='v' type='javax.net.ssl.HostnameVerifier'/></method><method name='setSSLSocketFactory'><parameter name='sf' type='javax.net.ssl.SSLSocketFactory'/></method></class><class name='KeyManagerFactory' extends='java.lang.Object'><constructor name='KeyManagerFactory' type='javax.net.ssl.KeyManagerFactory' visibility='protected'><parameter name='factorySpi' type='javax.net.ssl.KeyManagerFactorySpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getDefaultAlgorithm' final='true' static='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.net.ssl.KeyManagerFactory'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.net.ssl.KeyManagerFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.net.ssl.KeyManagerFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getKeyManagers' final='true' return='javax.net.ssl.KeyManager[]'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='init' final='true'><parameter name='ks' type='java.security.KeyStore'/><parameter name='password' type='char[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></method><method name='init' final='true'><parameter name='spec' type='javax.net.ssl.ManagerFactoryParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='KeyManagerFactorySpi' extends='java.lang.Object' abstract='true'><constructor name='KeyManagerFactorySpi' type='javax.net.ssl.KeyManagerFactorySpi'/><method name='engineGetKeyManagers' abstract='true' visibility='protected' return='javax.net.ssl.KeyManager[]'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='ks' type='java.security.KeyStore'/><parameter name='password' type='char[]'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='spec' type='javax.net.ssl.ManagerFactoryParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='KeyStoreBuilderParameters' extends='java.lang.Object'><implements name='javax.net.ssl.ManagerFactoryParameters'/><constructor name='KeyStoreBuilderParameters' type='javax.net.ssl.KeyStoreBuilderParameters'><parameter name='builder' type='java.security.KeyStore.Builder'/></constructor><constructor name='KeyStoreBuilderParameters' type='javax.net.ssl.KeyStoreBuilderParameters'><parameter name='parameters' type='java.util.List'/></constructor><method name='getParameters' return='java.util.List'/></class><class name='SSLContext' extends='java.lang.Object'><constructor name='SSLContext' type='javax.net.ssl.SSLContext' visibility='protected'><parameter name='contextSpi' type='javax.net.ssl.SSLContextSpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='protocol' type='java.lang.String'/></constructor><method name='createSSLEngine' final='true' return='javax.net.ssl.SSLEngine'/><method name='createSSLEngine' final='true' return='javax.net.ssl.SSLEngine'><parameter name='peerHost' type='java.lang.String'/><parameter name='peerPort' type='int'/></method><method name='getClientSessionContext' final='true' return='javax.net.ssl.SSLSessionContext'/><method name='getInstance' static='true' return='javax.net.ssl.SSLContext'><parameter name='protocol' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' static='true' return='javax.net.ssl.SSLContext'><parameter name='protocol' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' static='true' return='javax.net.ssl.SSLContext'><parameter name='protocol' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProtocol' final='true' return='java.lang.String'/><method name='getProvider' final='true' return='java.security.Provider'/><method name='getServerSessionContext' final='true' return='javax.net.ssl.SSLSessionContext'/><method name='getServerSocketFactory' final='true' return='javax.net.ssl.SSLServerSocketFactory'/><method name='getSocketFactory' final='true' return='javax.net.ssl.SSLSocketFactory'/><method name='init' final='true'><parameter name='km' type='javax.net.ssl.KeyManager[]'/><parameter name='tm' type='javax.net.ssl.TrustManager[]'/><parameter name='sr' type='java.security.SecureRandom'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method></class><class name='SSLContextSpi' extends='java.lang.Object' abstract='true'><constructor name='SSLContextSpi' type='javax.net.ssl.SSLContextSpi'/><method name='engineCreateSSLEngine' abstract='true' visibility='protected' return='javax.net.ssl.SSLEngine'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></method><method name='engineCreateSSLEngine' abstract='true' visibility='protected' return='javax.net.ssl.SSLEngine'/><method name='engineGetClientSessionContext' abstract='true' visibility='protected' return='javax.net.ssl.SSLSessionContext'/><method name='engineGetServerSessionContext' abstract='true' visibility='protected' return='javax.net.ssl.SSLSessionContext'/><method name='engineGetServerSocketFactory' abstract='true' visibility='protected' return='javax.net.ssl.SSLServerSocketFactory'/><method name='engineGetSocketFactory' abstract='true' visibility='protected' return='javax.net.ssl.SSLSocketFactory'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='km' type='javax.net.ssl.KeyManager[]'/><parameter name='tm' type='javax.net.ssl.TrustManager[]'/><parameter name='sr' type='java.security.SecureRandom'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/></method></class><class name='SSLEngine' extends='java.lang.Object' abstract='true'><constructor name='SSLEngine' type='javax.net.ssl.SSLEngine' visibility='protected'/><constructor name='SSLEngine' type='javax.net.ssl.SSLEngine' visibility='protected'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></constructor><method name='beginHandshake' abstract='true'><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='closeInbound' abstract='true'><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='closeOutbound' abstract='true'/><method name='getDelegatedTask' abstract='true' return='java.lang.Runnable'/><method name='getEnableSessionCreation' abstract='true' return='boolean'/><method name='getEnabledCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getEnabledProtocols' abstract='true' return='java.lang.String[]'/><method name='getHandshakeStatus' abstract='true' return='javax.net.ssl.SSLEngineResult.HandshakeStatus'/><method name='getNeedClientAuth' abstract='true' return='boolean'/><method name='getPeerHost' return='java.lang.String'/><method name='getPeerPort' return='int'/><method name='getSession' abstract='true' return='javax.net.ssl.SSLSession'/><method name='getSupportedCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getSupportedProtocols' abstract='true' return='java.lang.String[]'/><method name='getUseClientMode' abstract='true' return='boolean'/><method name='getWantClientAuth' abstract='true' return='boolean'/><method name='isInboundDone' abstract='true' return='boolean'/><method name='isOutboundDone' abstract='true' return='boolean'/><method name='setEnableSessionCreation' abstract='true'><parameter name='flag' type='boolean'/></method><method name='setEnabledCipherSuites' abstract='true'><parameter name='suites' type='java.lang.String[]'/></method><method name='setEnabledProtocols' abstract='true'><parameter name='protocols' type='java.lang.String[]'/></method><method name='setNeedClientAuth' abstract='true'><parameter name='need' type='boolean'/></method><method name='setUseClientMode' abstract='true'><parameter name='mode' type='boolean'/></method><method name='setWantClientAuth' abstract='true'><parameter name='want' type='boolean'/></method><method name='unwrap' abstract='true' return='javax.net.ssl.SSLEngineResult'><parameter name='src' type='java.nio.ByteBuffer'/><parameter name='dsts' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='unwrap' return='javax.net.ssl.SSLEngineResult'><parameter name='src' type='java.nio.ByteBuffer'/><parameter name='dst' type='java.nio.ByteBuffer'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='unwrap' return='javax.net.ssl.SSLEngineResult'><parameter name='src' type='java.nio.ByteBuffer'/><parameter name='dsts' type='java.nio.ByteBuffer[]'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='wrap' abstract='true' return='javax.net.ssl.SSLEngineResult'><parameter name='srcs' type='java.nio.ByteBuffer[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='dst' type='java.nio.ByteBuffer'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='wrap' return='javax.net.ssl.SSLEngineResult'><parameter name='srcs' type='java.nio.ByteBuffer[]'/><parameter name='dst' type='java.nio.ByteBuffer'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='wrap' return='javax.net.ssl.SSLEngineResult'><parameter name='src' type='java.nio.ByteBuffer'/><parameter name='dst' type='java.nio.ByteBuffer'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method></class><class name='SSLEngineResult' extends='java.lang.Object'><constructor name='SSLEngineResult' type='javax.net.ssl.SSLEngineResult'><parameter name='status' type='javax.net.ssl.SSLEngineResult.Status'/><parameter name='handshakeStatus' type='javax.net.ssl.SSLEngineResult.HandshakeStatus'/><parameter name='bytesConsumed' type='int'/><parameter name='bytesProduced' type='int'/></constructor><method name='bytesConsumed' final='true' return='int'/><method name='bytesProduced' final='true' return='int'/><method name='getHandshakeStatus' final='true' return='javax.net.ssl.SSLEngineResult.HandshakeStatus'/><method name='getStatus' final='true' return='javax.net.ssl.SSLEngineResult.Status'/></class><class name='SSLEngineResult.HandshakeStatus' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='javax.net.ssl.SSLEngineResult.HandshakeStatus'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='javax.net.ssl.SSLEngineResult.HandshakeStatus[]'/></class><class name='SSLEngineResult.Status' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='javax.net.ssl.SSLEngineResult.Status'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='javax.net.ssl.SSLEngineResult.Status[]'/></class><class name='SSLException' extends='java.io.IOException'><constructor name='SSLException' type='javax.net.ssl.SSLException'><parameter name='reason' type='java.lang.String'/></constructor><constructor name='SSLException' type='javax.net.ssl.SSLException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='SSLException' type='javax.net.ssl.SSLException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='SSLHandshakeException' extends='javax.net.ssl.SSLException'><constructor name='SSLHandshakeException' type='javax.net.ssl.SSLHandshakeException'><parameter name='reason' type='java.lang.String'/></constructor></class><class name='SSLKeyException' extends='javax.net.ssl.SSLException'><constructor name='SSLKeyException' type='javax.net.ssl.SSLKeyException'><parameter name='reason' type='java.lang.String'/></constructor></class><class name='SSLPeerUnverifiedException' extends='javax.net.ssl.SSLException'><constructor name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'><parameter name='reason' type='java.lang.String'/></constructor></class><class name='SSLPermission' final='true' extends='java.security.BasicPermission'><constructor name='SSLPermission' type='javax.net.ssl.SSLPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='SSLPermission' type='javax.net.ssl.SSLPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='SSLProtocolException' extends='javax.net.ssl.SSLException'><constructor name='SSLProtocolException' type='javax.net.ssl.SSLProtocolException'><parameter name='reason' type='java.lang.String'/></constructor></class><class name='SSLServerSocket' extends='java.net.ServerSocket' abstract='true'><constructor name='SSLServerSocket' type='javax.net.ssl.SSLServerSocket' visibility='protected'><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='SSLServerSocket' type='javax.net.ssl.SSLServerSocket' visibility='protected'><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='SSLServerSocket' type='javax.net.ssl.SSLServerSocket' visibility='protected'><parameter name='port' type='int'/><parameter name='backlog' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='SSLServerSocket' type='javax.net.ssl.SSLServerSocket' visibility='protected'><parameter name='port' type='int'/><parameter name='backlog' type='int'/><parameter name='address' type='java.net.InetAddress'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getEnableSessionCreation' abstract='true' return='boolean'/><method name='getEnabledCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getEnabledProtocols' abstract='true' return='java.lang.String[]'/><method name='getNeedClientAuth' abstract='true' return='boolean'/><method name='getSupportedCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getSupportedProtocols' abstract='true' return='java.lang.String[]'/><method name='getUseClientMode' abstract='true' return='boolean'/><method name='getWantClientAuth' abstract='true' return='boolean'/><method name='setEnableSessionCreation' abstract='true'><parameter name='flag' type='boolean'/></method><method name='setEnabledCipherSuites' abstract='true'><parameter name='suites' type='java.lang.String[]'/></method><method name='setEnabledProtocols' abstract='true'><parameter name='protocols' type='java.lang.String[]'/></method><method name='setNeedClientAuth' abstract='true'><parameter name='need' type='boolean'/></method><method name='setUseClientMode' abstract='true'><parameter name='mode' type='boolean'/></method><method name='setWantClientAuth' abstract='true'><parameter name='want' type='boolean'/></method></class><class name='SSLServerSocketFactory' extends='javax.net.ServerSocketFactory' abstract='true'><constructor name='SSLServerSocketFactory' type='javax.net.ssl.SSLServerSocketFactory' visibility='protected'/><method name='getDefault' static='true' return='javax.net.ServerSocketFactory'/><method name='getDefaultCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getSupportedCipherSuites' abstract='true' return='java.lang.String[]'/></class><class name='SSLSessionBindingEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='SSLSessionBindingEvent' type='javax.net.ssl.SSLSessionBindingEvent'><parameter name='session' type='javax.net.ssl.SSLSession'/><parameter name='name' type='java.lang.String'/></constructor><method name='getName' return='java.lang.String'/><method name='getSession' return='javax.net.ssl.SSLSession'/></class><class name='SSLSocket' extends='java.net.Socket' abstract='true'><constructor name='SSLSocket' type='javax.net.ssl.SSLSocket' visibility='protected'/><constructor name='SSLSocket' type='javax.net.ssl.SSLSocket' visibility='protected'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></constructor><constructor name='SSLSocket' type='javax.net.ssl.SSLSocket' visibility='protected'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='SSLSocket' type='javax.net.ssl.SSLSocket' visibility='protected'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='clientAddress' type='java.net.InetAddress'/><parameter name='clientPort' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></constructor><constructor name='SSLSocket' type='javax.net.ssl.SSLSocket' visibility='protected'><parameter name='address' type='java.net.InetAddress'/><parameter name='port' type='int'/><parameter name='clientAddress' type='java.net.InetAddress'/><parameter name='clientPort' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='addHandshakeCompletedListener' abstract='true'><parameter name='listener' type='javax.net.ssl.HandshakeCompletedListener'/></method><method name='getEnableSessionCreation' abstract='true' return='boolean'/><method name='getEnabledCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getEnabledProtocols' abstract='true' return='java.lang.String[]'/><method name='getNeedClientAuth' abstract='true' return='boolean'/><method name='getSession' abstract='true' return='javax.net.ssl.SSLSession'/><method name='getSupportedCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getSupportedProtocols' abstract='true' return='java.lang.String[]'/><method name='getUseClientMode' abstract='true' return='boolean'/><method name='getWantClientAuth' abstract='true' return='boolean'/><method name='removeHandshakeCompletedListener' abstract='true'><parameter name='listener' type='javax.net.ssl.HandshakeCompletedListener'/></method><method name='setEnableSessionCreation' abstract='true'><parameter name='flag' type='boolean'/></method><method name='setEnabledCipherSuites' abstract='true'><parameter name='suites' type='java.lang.String[]'/></method><method name='setEnabledProtocols' abstract='true'><parameter name='protocols' type='java.lang.String[]'/></method><method name='setNeedClientAuth' abstract='true'><parameter name='need' type='boolean'/></method><method name='setUseClientMode' abstract='true'><parameter name='mode' type='boolean'/></method><method name='setWantClientAuth' abstract='true'><parameter name='want' type='boolean'/></method><method name='startHandshake' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></class><class name='SSLSocketFactory' extends='javax.net.SocketFactory' abstract='true'><constructor name='SSLSocketFactory' type='javax.net.ssl.SSLSocketFactory'/><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='s' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='autoClose' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method name='getDefault' static='true' return='javax.net.SocketFactory'/><method name='getDefaultCipherSuites' abstract='true' return='java.lang.String[]'/><method name='getSupportedCipherSuites' abstract='true' return='java.lang.String[]'/></class><class name='TrustManagerFactory' extends='java.lang.Object'><constructor name='TrustManagerFactory' type='javax.net.ssl.TrustManagerFactory' visibility='protected'><parameter name='factorySpi' type='javax.net.ssl.TrustManagerFactorySpi'/><parameter name='provider' type='java.security.Provider'/><parameter name='algorithm' type='java.lang.String'/></constructor><method name='getAlgorithm' final='true' return='java.lang.String'/><method name='getDefaultAlgorithm' final='true' static='true' return='java.lang.String'/><method name='getInstance' final='true' static='true' return='javax.net.ssl.TrustManagerFactory'><parameter name='algorithm' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getInstance' final='true' static='true' return='javax.net.ssl.TrustManagerFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.lang.String'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/></method><method name='getInstance' final='true' static='true' return='javax.net.ssl.TrustManagerFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='provider' type='java.security.Provider'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/></method><method name='getProvider' final='true' return='java.security.Provider'/><method name='getTrustManagers' final='true' return='javax.net.ssl.TrustManager[]'/><method name='init' final='true'><parameter name='ks' type='java.security.KeyStore'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='init' final='true'><parameter name='spec' type='javax.net.ssl.ManagerFactoryParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='TrustManagerFactorySpi' extends='java.lang.Object' abstract='true'><constructor name='TrustManagerFactorySpi' type='javax.net.ssl.TrustManagerFactorySpi'/><method name='engineGetTrustManagers' abstract='true' visibility='protected' return='javax.net.ssl.TrustManager[]'/><method name='engineInit' abstract='true' visibility='protected'><parameter name='ks' type='java.security.KeyStore'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/></method><method name='engineInit' abstract='true' visibility='protected'><parameter name='spec' type='javax.net.ssl.ManagerFactoryParameters'/><exception name='InvalidAlgorithmParameterException' type='java.security.InvalidAlgorithmParameterException'/></method></class><class name='X509ExtendedKeyManager' extends='java.lang.Object' abstract='true'><implements name='javax.net.ssl.X509KeyManager'/><constructor name='X509ExtendedKeyManager' type='javax.net.ssl.X509ExtendedKeyManager' visibility='protected'/><method name='chooseEngineClientAlias' return='java.lang.String'><parameter name='keyType' type='java.lang.String[]'/><parameter name='issuers' type='java.security.Principal[]'/><parameter name='engine' type='javax.net.ssl.SSLEngine'/></method><method name='chooseEngineServerAlias' return='java.lang.String'><parameter name='keyType' type='java.lang.String'/><parameter name='issuers' type='java.security.Principal[]'/><parameter name='engine' type='javax.net.ssl.SSLEngine'/></method></class><interface name='HandshakeCompletedListener' abstract='true'><implements name='java.util.EventListener'/><method name='handshakeCompleted' abstract='true'><parameter name='event' type='javax.net.ssl.HandshakeCompletedEvent'/></method></interface><interface name='HostnameVerifier' abstract='true'><method name='verify' abstract='true' return='boolean'><parameter name='hostname' type='java.lang.String'/><parameter name='session' type='javax.net.ssl.SSLSession'/></method></interface><interface name='KeyManager' abstract='true'/><interface name='ManagerFactoryParameters' abstract='true'/><interface name='SSLSession' abstract='true'><method name='getApplicationBufferSize' abstract='true' return='int'/><method name='getCipherSuite' abstract='true' return='java.lang.String'/><method name='getCreationTime' abstract='true' return='long'/><method name='getId' abstract='true' return='byte[]'/><method name='getLastAccessedTime' abstract='true' return='long'/><method name='getLocalCertificates' abstract='true' return='java.security.cert.Certificate[]'/><method name='getLocalPrincipal' abstract='true' return='java.security.Principal'/><method name='getPacketBufferSize' abstract='true' return='int'/><method name='getPeerCertificateChain' abstract='true' return='javax.security.cert.X509Certificate[]'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getPeerCertificates' abstract='true' return='java.security.cert.Certificate[]'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getPeerHost' abstract='true' return='java.lang.String'/><method name='getPeerPort' abstract='true' return='int'/><method name='getPeerPrincipal' abstract='true' return='java.security.Principal'><exception name='SSLPeerUnverifiedException' type='javax.net.ssl.SSLPeerUnverifiedException'/></method><method name='getProtocol' abstract='true' return='java.lang.String'/><method name='getSessionContext' abstract='true' return='javax.net.ssl.SSLSessionContext'/><method name='getValue' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getValueNames' abstract='true' return='java.lang.String[]'/><method name='invalidate' abstract='true'/><method name='isValid' abstract='true' return='boolean'/><method name='putValue' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method name='removeValue' abstract='true'><parameter name='name' type='java.lang.String'/></method></interface><interface name='SSLSessionBindingListener' abstract='true'><implements name='java.util.EventListener'/><method name='valueBound' abstract='true'><parameter name='event' type='javax.net.ssl.SSLSessionBindingEvent'/></method><method name='valueUnbound' abstract='true'><parameter name='event' type='javax.net.ssl.SSLSessionBindingEvent'/></method></interface><interface name='SSLSessionContext' abstract='true'><method name='getIds' abstract='true' return='java.util.Enumeration'/><method name='getSession' abstract='true' return='javax.net.ssl.SSLSession'><parameter name='sessionId' type='byte[]'/></method><method name='getSessionCacheSize' abstract='true' return='int'/><method name='getSessionTimeout' abstract='true' return='int'/><method name='setSessionCacheSize' abstract='true'><parameter name='size' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setSessionTimeout' abstract='true'><parameter name='seconds' type='int'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></interface><interface name='TrustManager' abstract='true'/><interface name='X509KeyManager' abstract='true'><implements name='javax.net.ssl.KeyManager'/><method name='chooseClientAlias' abstract='true' return='java.lang.String'><parameter name='keyType' type='java.lang.String[]'/><parameter name='issuers' type='java.security.Principal[]'/><parameter name='socket' type='java.net.Socket'/></method><method name='chooseServerAlias' abstract='true' return='java.lang.String'><parameter name='keyType' type='java.lang.String'/><parameter name='issuers' type='java.security.Principal[]'/><parameter name='socket' type='java.net.Socket'/></method><method name='getCertificateChain' abstract='true' return='java.security.cert.X509Certificate[]'><parameter name='alias' type='java.lang.String'/></method><method name='getClientAliases' abstract='true' return='java.lang.String[]'><parameter name='keyType' type='java.lang.String'/><parameter name='issuers' type='java.security.Principal[]'/></method><method name='getPrivateKey' abstract='true' return='java.security.PrivateKey'><parameter name='alias' type='java.lang.String'/></method><method name='getServerAliases' abstract='true' return='java.lang.String[]'><parameter name='keyType' type='java.lang.String'/><parameter name='issuers' type='java.security.Principal[]'/></method></interface><interface name='X509TrustManager' abstract='true'><implements name='javax.net.ssl.TrustManager'/><method name='checkClientTrusted' abstract='true'><parameter name='chain' type='java.security.cert.X509Certificate[]'/><parameter name='authType' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='checkServerTrusted' abstract='true'><parameter name='chain' type='java.security.cert.X509Certificate[]'/><parameter name='authType' type='java.lang.String'/><exception name='CertificateException' type='java.security.cert.CertificateException'/></method><method name='getAcceptedIssuers' abstract='true' return='java.security.cert.X509Certificate[]'/></interface></package><package name='javax.security.auth'><class name='AuthPermission' final='true' extends='java.security.BasicPermission'><constructor name='AuthPermission' type='javax.security.auth.AuthPermission'><parameter name='name' type='java.lang.String'/></constructor><constructor name='AuthPermission' type='javax.security.auth.AuthPermission'><parameter name='name' type='java.lang.String'/><parameter name='actions' type='java.lang.String'/></constructor></class><class name='DestroyFailedException' extends='java.lang.Exception'><constructor name='DestroyFailedException' type='javax.security.auth.DestroyFailedException'/><constructor name='DestroyFailedException' type='javax.security.auth.DestroyFailedException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='PrivateCredentialPermission' final='true' extends='java.security.Permission'><constructor name='PrivateCredentialPermission' type='javax.security.auth.PrivateCredentialPermission'><parameter name='name' type='java.lang.String'/><parameter name='action' type='java.lang.String'/></constructor><method name='equals' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getActions' return='java.lang.String'/><method name='getCredentialClass' return='java.lang.String'/><method name='getPrincipals' return='java.lang.String[][]'/><method name='hashCode' return='int'/><method name='implies' return='boolean'><parameter name='permission' type='java.security.Permission'/></method></class><class name='Subject' final='true' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor name='Subject' type='javax.security.auth.Subject'/><constructor name='Subject' type='javax.security.auth.Subject'><parameter name='readOnly' type='boolean'/><parameter name='subjPrincipals' type='java.util.Set&lt;? extends java.security.Principal&gt;'/><parameter name='pubCredentials' type='java.util.Set&lt;?&gt;'/><parameter name='privCredentials' type='java.util.Set&lt;?&gt;'/></constructor><method name='doAs' static='true' return='java.lang.Object'><parameter name='subject' type='javax.security.auth.Subject'/><parameter name='action' type='java.security.PrivilegedAction'/></method><method name='doAs' static='true' return='java.lang.Object'><parameter name='subject' type='javax.security.auth.Subject'/><parameter name='action' type='java.security.PrivilegedExceptionAction'/><exception name='PrivilegedActionException' type='java.security.PrivilegedActionException'/></method><method name='doAsPrivileged' static='true' return='java.lang.Object'><parameter name='subject' type='javax.security.auth.Subject'/><parameter name='action' type='java.security.PrivilegedAction'/><parameter name='context' type='java.security.AccessControlContext'/></method><method name='doAsPrivileged' static='true' return='java.lang.Object'><parameter name='subject' type='javax.security.auth.Subject'/><parameter name='action' type='java.security.PrivilegedExceptionAction'/><parameter name='context' type='java.security.AccessControlContext'/><exception name='PrivilegedActionException' type='java.security.PrivilegedActionException'/></method><method name='getPrincipals' return='java.util.Set&lt;java.security.Principal&gt;'/><method name='getPrincipals' return='java.util.Set&lt;T&gt;'><parameter name='c' type='java.lang.Class&lt;T&gt;'/></method><method name='getPrivateCredentials' return='java.util.Set&lt;java.lang.Object&gt;'/><method name='getPrivateCredentials' return='java.util.Set&lt;T&gt;'><parameter name='c' type='java.lang.Class&lt;T&gt;'/></method><method name='getPublicCredentials' return='java.util.Set&lt;java.lang.Object&gt;'/><method name='getPublicCredentials' return='java.util.Set&lt;T&gt;'><parameter name='c' type='java.lang.Class&lt;T&gt;'/></method><method name='getSubject' static='true' return='javax.security.auth.Subject'><parameter name='context' type='java.security.AccessControlContext'/></method><method name='isReadOnly' return='boolean'/><method name='setReadOnly'/></class><class name='SubjectDomainCombiner' extends='java.lang.Object'><implements name='java.security.DomainCombiner'/><constructor name='SubjectDomainCombiner' type='javax.security.auth.SubjectDomainCombiner'><parameter name='subject' type='javax.security.auth.Subject'/></constructor><method name='combine' return='java.security.ProtectionDomain[]'><parameter name='currentDomains' type='java.security.ProtectionDomain[]'/><parameter name='assignedDomains' type='java.security.ProtectionDomain[]'/></method><method name='getSubject' return='javax.security.auth.Subject'/></class><interface name='Destroyable' abstract='true'><method name='destroy' abstract='true'><exception name='DestroyFailedException' type='javax.security.auth.DestroyFailedException'/></method><method name='isDestroyed' abstract='true' return='boolean'/></interface></package><package name='javax.security.auth.callback'><class name='PasswordCallback' extends='java.lang.Object'><implements name='javax.security.auth.callback.Callback'/><implements name='java.io.Serializable'/><constructor name='PasswordCallback' type='javax.security.auth.callback.PasswordCallback'><parameter name='prompt' type='java.lang.String'/><parameter name='echoOn' type='boolean'/></constructor><method name='clearPassword'/><method name='getPassword' return='char[]'/><method name='getPrompt' return='java.lang.String'/><method name='isEchoOn' return='boolean'/><method name='setPassword'><parameter name='password' type='char[]'/></method></class><class name='UnsupportedCallbackException' extends='java.lang.Exception'><constructor name='UnsupportedCallbackException' type='javax.security.auth.callback.UnsupportedCallbackException'><parameter name='callback' type='javax.security.auth.callback.Callback'/></constructor><constructor name='UnsupportedCallbackException' type='javax.security.auth.callback.UnsupportedCallbackException'><parameter name='callback' type='javax.security.auth.callback.Callback'/><parameter name='message' type='java.lang.String'/></constructor><method name='getCallback' return='javax.security.auth.callback.Callback'/></class><interface name='Callback' abstract='true'/><interface name='CallbackHandler' abstract='true'><method name='handle' abstract='true'><parameter name='callbacks' type='javax.security.auth.callback.Callback[]'/><exception name='IOException' type='java.io.IOException'/><exception name='UnsupportedCallbackException' type='javax.security.auth.callback.UnsupportedCallbackException'/></method></interface></package><package name='javax.security.auth.login'><class name='LoginException' extends='java.security.GeneralSecurityException'><constructor name='LoginException' type='javax.security.auth.login.LoginException'/><constructor name='LoginException' type='javax.security.auth.login.LoginException'><parameter name='message' type='java.lang.String'/></constructor></class></package><package name='javax.security.auth.x500'><class name='X500Principal' final='true' extends='java.lang.Object'><implements name='java.security.Principal'/><implements name='java.io.Serializable'/><constructor name='X500Principal' type='javax.security.auth.x500.X500Principal'><parameter name='name' type='byte[]'/></constructor><constructor name='X500Principal' type='javax.security.auth.x500.X500Principal'><parameter name='in' type='java.io.InputStream'/></constructor><constructor name='X500Principal' type='javax.security.auth.x500.X500Principal'><parameter name='name' type='java.lang.String'/></constructor><field name='CANONICAL' final='true' static='true' value='&quot;CANONICAL&quot;' type='java.lang.String'/><field name='RFC1779' final='true' static='true' value='&quot;RFC1779&quot;' type='java.lang.String'/><field name='RFC2253' final='true' static='true' value='&quot;RFC2253&quot;' type='java.lang.String'/><method name='getEncoded' return='byte[]'/><method name='getName' return='java.lang.String'/><method name='getName' return='java.lang.String'><parameter name='format' type='java.lang.String'/></method></class></package><package name='javax.security.cert'><class name='Certificate' extends='java.lang.Object' abstract='true'><constructor name='Certificate' type='javax.security.cert.Certificate'/><method name='getEncoded' abstract='true' return='byte[]'><exception name='CertificateEncodingException' type='javax.security.cert.CertificateEncodingException'/></method><method name='getPublicKey' abstract='true' return='java.security.PublicKey'/><method name='toString' abstract='true' return='java.lang.String'/><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><exception name='CertificateException' type='javax.security.cert.CertificateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method><method name='verify' abstract='true'><parameter name='key' type='java.security.PublicKey'/><parameter name='sigProvider' type='java.lang.String'/><exception name='CertificateException' type='javax.security.cert.CertificateException'/><exception name='InvalidKeyException' type='java.security.InvalidKeyException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='NoSuchProviderException' type='java.security.NoSuchProviderException'/><exception name='SignatureException' type='java.security.SignatureException'/></method></class><class name='CertificateEncodingException' extends='javax.security.cert.CertificateException'><constructor name='CertificateEncodingException' type='javax.security.cert.CertificateEncodingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateEncodingException' type='javax.security.cert.CertificateEncodingException'/></class><class name='CertificateException' extends='java.lang.Exception'><constructor name='CertificateException' type='javax.security.cert.CertificateException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateException' type='javax.security.cert.CertificateException'/></class><class name='CertificateExpiredException' extends='javax.security.cert.CertificateException'><constructor name='CertificateExpiredException' type='javax.security.cert.CertificateExpiredException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateExpiredException' type='javax.security.cert.CertificateExpiredException'/></class><class name='CertificateNotYetValidException' extends='javax.security.cert.CertificateException'><constructor name='CertificateNotYetValidException' type='javax.security.cert.CertificateNotYetValidException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateNotYetValidException' type='javax.security.cert.CertificateNotYetValidException'/></class><class name='CertificateParsingException' extends='javax.security.cert.CertificateException'><constructor name='CertificateParsingException' type='javax.security.cert.CertificateParsingException'><parameter name='msg' type='java.lang.String'/></constructor><constructor name='CertificateParsingException' type='javax.security.cert.CertificateParsingException'/></class><class name='X509Certificate' extends='javax.security.cert.Certificate' abstract='true'><constructor name='X509Certificate' type='javax.security.cert.X509Certificate'/><method name='checkValidity' abstract='true'><exception name='CertificateExpiredException' type='javax.security.cert.CertificateExpiredException'/><exception name='CertificateNotYetValidException' type='javax.security.cert.CertificateNotYetValidException'/></method><method name='checkValidity' abstract='true'><parameter name='date' type='java.util.Date'/><exception name='CertificateExpiredException' type='javax.security.cert.CertificateExpiredException'/><exception name='CertificateNotYetValidException' type='javax.security.cert.CertificateNotYetValidException'/></method><method name='getInstance' final='true' static='true' return='javax.security.cert.X509Certificate'><parameter name='inStream' type='java.io.InputStream'/><exception name='CertificateException' type='javax.security.cert.CertificateException'/></method><method name='getInstance' final='true' static='true' return='javax.security.cert.X509Certificate'><parameter name='certData' type='byte[]'/><exception name='CertificateException' type='javax.security.cert.CertificateException'/></method><method name='getIssuerDN' abstract='true' return='java.security.Principal'/><method name='getNotAfter' abstract='true' return='java.util.Date'/><method name='getNotBefore' abstract='true' return='java.util.Date'/><method name='getSerialNumber' abstract='true' return='java.math.BigInteger'/><method name='getSigAlgName' abstract='true' return='java.lang.String'/><method name='getSigAlgOID' abstract='true' return='java.lang.String'/><method name='getSigAlgParams' abstract='true' return='byte[]'/><method name='getSubjectDN' abstract='true' return='java.security.Principal'/><method name='getVersion' abstract='true' return='int'/></class></package><package name='javax.sql'><class name='ConnectionEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='ConnectionEvent' type='javax.sql.ConnectionEvent'><parameter name='theConnection' type='javax.sql.PooledConnection'/></constructor><constructor name='ConnectionEvent' type='javax.sql.ConnectionEvent'><parameter name='theConnection' type='javax.sql.PooledConnection'/><parameter name='theException' type='java.sql.SQLException'/></constructor><method name='getSQLException' return='java.sql.SQLException'/></class><class name='RowSetEvent' extends='java.util.EventObject'><implements name='java.io.Serializable'/><constructor name='RowSetEvent' type='javax.sql.RowSetEvent'><parameter name='theSource' type='javax.sql.RowSet'/></constructor></class><interface name='ConnectionEventListener' abstract='true'><implements name='java.util.EventListener'/><method name='connectionClosed' abstract='true'><parameter name='theEvent' type='javax.sql.ConnectionEvent'/></method><method name='connectionErrorOccurred' abstract='true'><parameter name='theEvent' type='javax.sql.ConnectionEvent'/></method></interface><interface name='ConnectionPoolDataSource' abstract='true'><method name='getLogWriter' abstract='true' return='java.io.PrintWriter'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLoginTimeout' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPooledConnection' abstract='true' return='javax.sql.PooledConnection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPooledConnection' abstract='true' return='javax.sql.PooledConnection'><parameter name='theUser' type='java.lang.String'/><parameter name='thePassword' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLogWriter' abstract='true'><parameter name='theWriter' type='java.io.PrintWriter'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLoginTimeout' abstract='true'><parameter name='theTimeout' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='DataSource' abstract='true'><method name='getConnection' abstract='true' return='java.sql.Connection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' abstract='true' return='java.sql.Connection'><parameter name='theUsername' type='java.lang.String'/><parameter name='thePassword' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLogWriter' abstract='true' return='java.io.PrintWriter'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getLoginTimeout' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLogWriter' abstract='true'><parameter name='theWriter' type='java.io.PrintWriter'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLoginTimeout' abstract='true'><parameter name='theTimeout' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='PooledConnection' abstract='true'><method name='addConnectionEventListener' abstract='true'><parameter name='theListener' type='javax.sql.ConnectionEventListener'/></method><method name='close' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getConnection' abstract='true' return='java.sql.Connection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='removeConnectionEventListener' abstract='true'><parameter name='theListener' type='javax.sql.ConnectionEventListener'/></method></interface><interface name='RowSet' abstract='true'><implements name='java.sql.ResultSet'/><method name='addRowSetListener' abstract='true'><parameter name='theListener' type='javax.sql.RowSetListener'/></method><method name='clearParameters' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='execute' abstract='true'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getCommand' abstract='true' return='java.lang.String'/><method name='getDataSourceName' abstract='true' return='java.lang.String'/><method name='getEscapeProcessing' abstract='true' return='boolean'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxFieldSize' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getMaxRows' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getPassword' abstract='true' return='java.lang.String'/><method name='getQueryTimeout' abstract='true' return='int'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getTransactionIsolation' abstract='true' return='int'/><method name='getTypeMap' abstract='true' return='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUrl' abstract='true' return='java.lang.String'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getUsername' abstract='true' return='java.lang.String'/><method name='isReadOnly' abstract='true' return='boolean'/><method name='removeRowSetListener' abstract='true'><parameter name='theListener' type='javax.sql.RowSetListener'/></method><method name='setArray' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theArray' type='java.sql.Array'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setAsciiStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBigDecimal' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBigDecimal' type='java.math.BigDecimal'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBinaryStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInputStream' type='java.io.InputStream'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBlob' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBlob' type='java.sql.Blob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBoolean' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theBoolean' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setByte' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theByte' type='byte'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setBytes' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theByteArray' type='byte[]'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCharacterStream' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theReader' type='java.io.Reader'/><parameter name='length' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setClob' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theClob' type='java.sql.Clob'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCommand' abstract='true'><parameter name='cmd' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setConcurrency' abstract='true'><parameter name='concurrency' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDataSourceName' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDate' type='java.sql.Date'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDate' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDate' type='java.sql.Date'/><parameter name='theCalendar' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setDouble' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theDouble' type='double'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setEscapeProcessing' abstract='true'><parameter name='enable' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setFloat' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theFloat' type='float'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setInt' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theInteger' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setLong' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theLong' type='long'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setMaxFieldSize' abstract='true'><parameter name='max' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setMaxRows' abstract='true'><parameter name='max' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='sqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNull' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='sqlType' type='int'/><parameter name='typeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setObject' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theObject' type='java.lang.Object'/><parameter name='targetSqlType' type='int'/><parameter name='scale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setPassword' abstract='true'><parameter name='password' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setQueryTimeout' abstract='true'><parameter name='seconds' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setReadOnly' abstract='true'><parameter name='readOnly' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setRef' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theRef' type='java.sql.Ref'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setShort' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theShort' type='short'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setString' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theString' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTime' type='java.sql.Time'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTime' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTime' type='java.sql.Time'/><parameter name='theCalendar' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTimestamp' abstract='true'><parameter name='parameterIndex' type='int'/><parameter name='theTimestamp' type='java.sql.Timestamp'/><parameter name='theCalendar' type='java.util.Calendar'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTransactionIsolation' abstract='true'><parameter name='level' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setType' abstract='true'><parameter name='type' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTypeMap' abstract='true'><parameter name='theTypeMap' type='java.util.Map&lt;java.lang.String, java.lang.Class&lt;?&gt;&gt;'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setUrl' abstract='true'><parameter name='theURL' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setUsername' abstract='true'><parameter name='theUsername' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='RowSetInternal' abstract='true'><method name='getConnection' abstract='true' return='java.sql.Connection'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getOriginal' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getOriginalRow' abstract='true' return='java.sql.ResultSet'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='getParams' abstract='true' return='java.lang.Object[]'><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setMetaData' abstract='true'><parameter name='theMetaData' type='javax.sql.RowSetMetaData'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='RowSetListener' abstract='true'><implements name='java.util.EventListener'/><method name='cursorMoved' abstract='true'><parameter name='theEvent' type='javax.sql.RowSetEvent'/></method><method name='rowChanged' abstract='true'><parameter name='theEvent' type='javax.sql.RowSetEvent'/></method><method name='rowSetChanged' abstract='true'><parameter name='theEvent' type='javax.sql.RowSetEvent'/></method></interface><interface name='RowSetMetaData' abstract='true'><implements name='java.sql.ResultSetMetaData'/><method name='setAutoIncrement' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='autoIncrement' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCaseSensitive' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='caseSensitive' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCatalogName' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='catalogName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnCount' abstract='true'><parameter name='columnCount' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnDisplaySize' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='displaySize' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnLabel' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theLabel' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnName' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theColumnName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnType' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theSQLType' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setColumnTypeName' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theTypeName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setCurrency' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='isCurrency' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setNullable' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='nullability' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setPrecision' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='thePrecision' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setScale' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theScale' type='int'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setSchemaName' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theSchemaName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setSearchable' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='isSearchable' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setSigned' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='isSigned' type='boolean'/><exception name='SQLException' type='java.sql.SQLException'/></method><method name='setTableName' abstract='true'><parameter name='columnIndex' type='int'/><parameter name='theTableName' type='java.lang.String'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='RowSetReader' abstract='true'><method name='readData' abstract='true'><parameter name='theCaller' type='javax.sql.RowSetInternal'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface><interface name='RowSetWriter' abstract='true'><method name='writeData' abstract='true' return='boolean'><parameter name='theRowSet' type='javax.sql.RowSetInternal'/><exception name='SQLException' type='java.sql.SQLException'/></method></interface></package><package name='javax.xml'><class name='XMLConstants' extends='java.lang.Object'><constructor name='XMLConstants' api_removed='8' type='javax.xml.XMLConstants'/><field name='DEFAULT_NS_PREFIX' final='true' static='true' value='&quot;&quot;' type='java.lang.String'/><field name='FEATURE_SECURE_PROCESSING' final='true' static='true' value='&quot;http://javax.xml.XMLConstants/feature/secure-processing&quot;' type='java.lang.String'/><field name='NULL_NS_URI' final='true' static='true' value='&quot;&quot;' type='java.lang.String'/><field name='RELAXNG_NS_URI' final='true' static='true' value='&quot;http://relaxng.org/ns/structure/1.0&quot;' type='java.lang.String'/><field name='W3C_XML_SCHEMA_INSTANCE_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/2001/XMLSchema-instance&quot;' type='java.lang.String'/><field name='W3C_XML_SCHEMA_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/2001/XMLSchema&quot;' type='java.lang.String'/><field name='W3C_XPATH_DATATYPE_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/2003/11/xpath-datatypes&quot;' type='java.lang.String'/><field name='XMLNS_ATTRIBUTE' final='true' static='true' value='&quot;xmlns&quot;' type='java.lang.String'/><field name='XMLNS_ATTRIBUTE_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/2000/xmlns/&quot;' type='java.lang.String'/><field name='XML_DTD_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/TR/REC-xml&quot;' type='java.lang.String'/><field name='XML_NS_PREFIX' final='true' static='true' value='&quot;xml&quot;' type='java.lang.String'/><field name='XML_NS_URI' final='true' static='true' value='&quot;http://www.w3.org/XML/1998/namespace&quot;' type='java.lang.String'/></class></package><package name='javax.xml.parsers'><class name='DocumentBuilder' extends='java.lang.Object' abstract='true'><constructor name='DocumentBuilder' type='javax.xml.parsers.DocumentBuilder' visibility='protected'/><method name='getDOMImplementation' abstract='true' return='org.w3c.dom.DOMImplementation'/><method name='isNamespaceAware' abstract='true' return='boolean'/><method name='isValidating' abstract='true' return='boolean'/><method name='isXIncludeAware' return='boolean'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='newDocument' abstract='true' return='org.w3c.dom.Document'/><method name='parse' return='org.w3c.dom.Document'><parameter name='file' type='java.io.File'/><parameter name='f' type='java.io.File'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' return='org.w3c.dom.Document'><parameter name='stream' type='java.io.InputStream'/><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' return='org.w3c.dom.Document'><parameter name='stream' type='java.io.InputStream'/><parameter name='systemId' type='java.lang.String'/><parameter name='is' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' return='org.w3c.dom.Document'><parameter name='uri' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' abstract='true' return='org.w3c.dom.Document'><parameter name='source' type='org.xml.sax.InputSource'/><parameter name='is' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='reset'/><method name='setEntityResolver' abstract='true'><parameter name='resolver' type='org.xml.sax.EntityResolver'/><parameter name='er' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler' abstract='true'><parameter name='handler' type='org.xml.sax.ErrorHandler'/><parameter name='eh' type='org.xml.sax.ErrorHandler'/></method><method api_added='8' name='getSchema' return='javax.xml.validation.Schema'/></class><class name='DocumentBuilderFactory' extends='java.lang.Object' abstract='true'><constructor name='DocumentBuilderFactory' type='javax.xml.parsers.DocumentBuilderFactory' visibility='protected'/><method name='getAttribute' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/></method><method name='isCoalescing' return='boolean'/><method name='isExpandEntityReferences' return='boolean'/><method name='isIgnoringComments' return='boolean'/><method name='isIgnoringElementContentWhitespace' return='boolean'/><method name='isNamespaceAware' return='boolean'/><method name='isValidating' return='boolean'/><method name='isXIncludeAware' return='boolean'/><method name='newDocumentBuilder' abstract='true' return='javax.xml.parsers.DocumentBuilder'><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/></method><method name='newInstance' static='true' return='javax.xml.parsers.DocumentBuilderFactory'><exception name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'/></method><method name='setAttribute' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setCoalescing'><parameter name='value' type='boolean'/><parameter name='coalescing' type='boolean'/></method><method name='setExpandEntityReferences'><parameter name='value' type='boolean'/><parameter name='expandEntityRef' type='boolean'/></method><method name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/></method><method name='setIgnoringComments'><parameter name='value' type='boolean'/><parameter name='ignoreComments' type='boolean'/></method><method name='setIgnoringElementContentWhitespace'><parameter name='value' type='boolean'/><parameter name='whitespace' type='boolean'/></method><method name='setNamespaceAware'><parameter name='value' type='boolean'/><parameter name='awareness' type='boolean'/></method><method name='setValidating'><parameter name='value' type='boolean'/><parameter name='validating' type='boolean'/></method><method name='setXIncludeAware'><parameter name='value' type='boolean'/><parameter name='state' type='boolean'/></method><method api_added='8' name='getSchema' return='javax.xml.validation.Schema'/><method api_added='8' name='setSchema'><parameter name='schema' type='javax.xml.validation.Schema'/></method></class><class name='FactoryConfigurationError' extends='java.lang.Error'><constructor name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'/><constructor name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'><parameter name='cause' type='java.lang.Exception'/></constructor><constructor name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'><parameter name='cause' type='java.lang.Exception'/><parameter name='message' type='java.lang.String'/></constructor><constructor name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'><parameter name='message' type='java.lang.String'/><parameter name='e' type='java.lang.Exception'/><parameter name='msg' type='java.lang.String'/></constructor><method name='getException' return='java.lang.Exception'/></class><class name='ParserConfigurationException' extends='java.lang.Exception'><constructor name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/><constructor name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'><parameter name='msg' type='java.lang.String'/></constructor></class><class name='SAXParser' extends='java.lang.Object' abstract='true'><constructor name='SAXParser' type='javax.xml.parsers.SAXParser' visibility='protected'/><method name='getParser' abstract='true' return='org.xml.sax.Parser'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='getProperty' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getXMLReader' abstract='true' return='org.xml.sax.XMLReader'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='isNamespaceAware' abstract='true' return='boolean'/><method name='isValidating' abstract='true' return='boolean'/><method name='isXIncludeAware' return='boolean'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='parse'><parameter name='file' type='java.io.File'/><parameter name='handler' type='org.xml.sax.HandlerBase'/><parameter name='f' type='java.io.File'/><parameter name='hb' type='org.xml.sax.HandlerBase'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='file' type='java.io.File'/><parameter name='handler' type='org.xml.sax.helpers.DefaultHandler'/><parameter name='f' type='java.io.File'/><parameter name='dh' type='org.xml.sax.helpers.DefaultHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='stream' type='java.io.InputStream'/><parameter name='handler' type='org.xml.sax.HandlerBase'/><parameter name='is' type='java.io.InputStream'/><parameter name='hb' type='org.xml.sax.HandlerBase'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='stream' type='java.io.InputStream'/><parameter name='handler' type='org.xml.sax.HandlerBase'/><parameter name='systemId' type='java.lang.String'/><parameter name='is' type='java.io.InputStream'/><parameter name='hb' type='org.xml.sax.HandlerBase'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='stream' type='java.io.InputStream'/><parameter name='handler' type='org.xml.sax.helpers.DefaultHandler'/><parameter name='is' type='java.io.InputStream'/><parameter name='dh' type='org.xml.sax.helpers.DefaultHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='stream' type='java.io.InputStream'/><parameter name='handler' type='org.xml.sax.helpers.DefaultHandler'/><parameter name='systemId' type='java.lang.String'/><parameter name='is' type='java.io.InputStream'/><parameter name='dh' type='org.xml.sax.helpers.DefaultHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='uri' type='java.lang.String'/><parameter name='handler' type='org.xml.sax.HandlerBase'/><parameter name='hb' type='org.xml.sax.HandlerBase'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='uri' type='java.lang.String'/><parameter name='handler' type='org.xml.sax.helpers.DefaultHandler'/><parameter name='dh' type='org.xml.sax.helpers.DefaultHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='source' type='org.xml.sax.InputSource'/><parameter name='handler' type='org.xml.sax.HandlerBase'/><parameter name='is' type='org.xml.sax.InputSource'/><parameter name='hb' type='org.xml.sax.HandlerBase'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='source' type='org.xml.sax.InputSource'/><parameter name='handler' type='org.xml.sax.helpers.DefaultHandler'/><parameter name='is' type='org.xml.sax.InputSource'/><parameter name='dh' type='org.xml.sax.helpers.DefaultHandler'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='reset'/><method name='setProperty' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getSchema' return='javax.xml.validation.Schema'/></class><class name='SAXParserFactory' extends='java.lang.Object' abstract='true'><constructor name='SAXParserFactory' type='javax.xml.parsers.SAXParserFactory' visibility='protected'/><method name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='isNamespaceAware' return='boolean'/><method name='isValidating' return='boolean'/><method name='isXIncludeAware' return='boolean'/><method name='newInstance' static='true' return='javax.xml.parsers.SAXParserFactory'><exception name='FactoryConfigurationError' type='javax.xml.parsers.FactoryConfigurationError'/></method><method name='newSAXParser' abstract='true' return='javax.xml.parsers.SAXParser'><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='ParserConfigurationException' type='javax.xml.parsers.ParserConfigurationException'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='setNamespaceAware'><parameter name='value' type='boolean'/><parameter name='awareness' type='boolean'/></method><method name='setValidating'><parameter name='value' type='boolean'/><parameter name='validating' type='boolean'/></method><method name='setXIncludeAware'><parameter name='value' type='boolean'/><parameter name='state' type='boolean'/></method><method api_added='8' name='getSchema' return='javax.xml.validation.Schema'/><method api_added='8' name='setSchema'><parameter name='schema' type='javax.xml.validation.Schema'/></method></class></package><package name='junit.framework'><class name='Assert' extends='java.lang.Object'><constructor name='Assert' type='junit.framework.Assert' visibility='protected'/><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertEquals' static='true'><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertEquals' static='true'><parameter name='expected' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='double'/><parameter name='actual' type='double'/><parameter name='delta' type='double'/></method><method name='assertEquals' static='true'><parameter name='expected' type='double'/><parameter name='actual' type='double'/><parameter name='delta' type='double'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='float'/><parameter name='actual' type='float'/><parameter name='delta' type='float'/></method><method name='assertEquals' static='true'><parameter name='expected' type='float'/><parameter name='actual' type='float'/><parameter name='delta' type='float'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='long'/><parameter name='actual' type='long'/></method><method name='assertEquals' static='true'><parameter name='expected' type='long'/><parameter name='actual' type='long'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='boolean'/><parameter name='actual' type='boolean'/></method><method name='assertEquals' static='true'><parameter name='expected' type='boolean'/><parameter name='actual' type='boolean'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='byte'/><parameter name='actual' type='byte'/></method><method name='assertEquals' static='true'><parameter name='expected' type='byte'/><parameter name='actual' type='byte'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='char'/><parameter name='actual' type='char'/></method><method name='assertEquals' static='true'><parameter name='expected' type='char'/><parameter name='actual' type='char'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='short'/><parameter name='actual' type='short'/></method><method name='assertEquals' static='true'><parameter name='expected' type='short'/><parameter name='actual' type='short'/></method><method name='assertEquals' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='int'/><parameter name='actual' type='int'/></method><method name='assertEquals' static='true'><parameter name='expected' type='int'/><parameter name='actual' type='int'/></method><method name='assertFalse' static='true'><parameter name='message' type='java.lang.String'/><parameter name='condition' type='boolean'/></method><method name='assertFalse' static='true'><parameter name='condition' type='boolean'/></method><method name='assertNotNull' static='true'><parameter name='object' type='java.lang.Object'/></method><method name='assertNotNull' static='true'><parameter name='message' type='java.lang.String'/><parameter name='object' type='java.lang.Object'/></method><method name='assertNotSame' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertNotSame' static='true'><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertNull' static='true'><parameter name='object' type='java.lang.Object'/></method><method name='assertNull' static='true'><parameter name='message' type='java.lang.String'/><parameter name='object' type='java.lang.Object'/></method><method name='assertSame' static='true'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertSame' static='true'><parameter name='expected' type='java.lang.Object'/><parameter name='actual' type='java.lang.Object'/></method><method name='assertTrue' static='true'><parameter name='message' type='java.lang.String'/><parameter name='condition' type='boolean'/></method><method name='assertTrue' static='true'><parameter name='condition' type='boolean'/></method><method name='fail' static='true'><parameter name='message' type='java.lang.String'/></method><method name='fail' static='true'/></class><class name='AssertionFailedError' extends='java.lang.Error'><constructor name='AssertionFailedError' type='junit.framework.AssertionFailedError'/><constructor name='AssertionFailedError' type='junit.framework.AssertionFailedError'><parameter name='message' type='java.lang.String'/></constructor></class><class name='ComparisonFailure' extends='junit.framework.AssertionFailedError'><constructor name='ComparisonFailure' type='junit.framework.ComparisonFailure'><parameter name='message' type='java.lang.String'/><parameter name='expected' type='java.lang.String'/><parameter name='actual' type='java.lang.String'/></constructor></class><class name='TestCase' extends='junit.framework.Assert' abstract='true'><implements name='junit.framework.Test'/><constructor name='TestCase' type='junit.framework.TestCase'/><constructor name='TestCase' type='junit.framework.TestCase'><parameter name='name' type='java.lang.String'/></constructor><method name='countTestCases' return='int'/><method name='createResult' visibility='protected' return='junit.framework.TestResult'/><method name='getName' return='java.lang.String'/><method name='run' return='junit.framework.TestResult'/><method name='run'><parameter name='result' type='junit.framework.TestResult'/></method><method name='runBare'><exception name='Throwable' type='java.lang.Throwable'/></method><method name='runTest' visibility='protected'><exception name='Throwable' type='java.lang.Throwable'/></method><method name='setName'><parameter name='name' type='java.lang.String'/></method><method name='setUp' visibility='protected'><exception name='Exception' type='java.lang.Exception'/></method><method name='tearDown' visibility='protected'><exception name='Exception' type='java.lang.Exception'/></method></class><class name='TestFailure' extends='java.lang.Object'><constructor name='TestFailure' type='junit.framework.TestFailure'><parameter name='failedTest' type='junit.framework.Test'/><parameter name='thrownException' type='java.lang.Throwable'/></constructor><field name='fFailedTest' type='junit.framework.Test' visibility='protected'/><field name='fThrownException' type='java.lang.Throwable' visibility='protected'/><method name='exceptionMessage' return='java.lang.String'/><method name='failedTest' return='junit.framework.Test'/><method name='isFailure' return='boolean'/><method name='thrownException' return='java.lang.Throwable'/><method name='trace' return='java.lang.String'/></class><class name='TestResult' extends='java.lang.Object'><constructor name='TestResult' type='junit.framework.TestResult'/><field name='fErrors' type='java.util.Vector' visibility='protected'/><field name='fFailures' type='java.util.Vector' visibility='protected'/><field name='fListeners' type='java.util.Vector' visibility='protected'/><field name='fRunTests' type='int' visibility='protected'/><method name='addError' synchronized='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='java.lang.Throwable'/></method><method name='addFailure' synchronized='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='junit.framework.AssertionFailedError'/></method><method name='addListener' synchronized='true'><parameter name='listener' type='junit.framework.TestListener'/></method><method name='endTest'><parameter name='test' type='junit.framework.Test'/></method><method name='errorCount' synchronized='true' return='int'/><method name='errors' synchronized='true' return='java.util.Enumeration'/><method name='failureCount' synchronized='true' return='int'/><method name='failures' synchronized='true' return='java.util.Enumeration'/><method name='removeListener' synchronized='true'><parameter name='listener' type='junit.framework.TestListener'/></method><method name='run' visibility='protected'><parameter name='test' type='junit.framework.TestCase'/></method><method name='runCount' synchronized='true' return='int'/><method name='runProtected'><parameter name='test' type='junit.framework.Test'/><parameter name='p' type='junit.framework.Protectable'/></method><method name='shouldStop' synchronized='true' return='boolean'/><method name='startTest'><parameter name='test' type='junit.framework.Test'/></method><method name='stop' synchronized='true'/><method name='wasSuccessful' synchronized='true' return='boolean'/></class><class name='TestSuite' extends='java.lang.Object'><implements name='junit.framework.Test'/><constructor name='TestSuite' type='junit.framework.TestSuite'/><constructor name='TestSuite' type='junit.framework.TestSuite'><parameter name='theClass' type='java.lang.Class'/><parameter name='name' type='java.lang.String'/></constructor><constructor name='TestSuite' type='junit.framework.TestSuite'><parameter name='theClass' type='java.lang.Class'/></constructor><constructor name='TestSuite' type='junit.framework.TestSuite'><parameter name='name' type='java.lang.String'/></constructor><method name='addTest'><parameter name='test' type='junit.framework.Test'/></method><method name='addTestSuite'><parameter name='testClass' type='java.lang.Class'/></method><method name='countTestCases' return='int'/><method name='createTest' static='true' return='junit.framework.Test'><parameter name='theClass' type='java.lang.Class'/><parameter name='name' type='java.lang.String'/></method><method name='getName' return='java.lang.String'/><method name='getTestConstructor' static='true' return='java.lang.reflect.Constructor'><parameter name='theClass' type='java.lang.Class'/><exception name='NoSuchMethodException' type='java.lang.NoSuchMethodException'/></method><method name='run'><parameter name='result' type='junit.framework.TestResult'/></method><method name='runTest'><parameter name='test' type='junit.framework.Test'/><parameter name='result' type='junit.framework.TestResult'/></method><method name='setName'><parameter name='name' type='java.lang.String'/></method><method name='testAt' return='junit.framework.Test'><parameter name='index' type='int'/></method><method name='testCount' return='int'/><method name='tests' return='java.util.Enumeration'/></class><interface name='Protectable' abstract='true'><method name='protect' abstract='true'><exception name='Throwable' type='java.lang.Throwable'/></method></interface><interface name='Test' abstract='true'><method name='countTestCases' abstract='true' return='int'/><method name='run' abstract='true'><parameter name='result' type='junit.framework.TestResult'/></method></interface><interface name='TestListener' abstract='true'><method name='addError' abstract='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='java.lang.Throwable'/></method><method name='addFailure' abstract='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='junit.framework.AssertionFailedError'/></method><method name='endTest' abstract='true'><parameter name='test' type='junit.framework.Test'/></method><method name='startTest' abstract='true'><parameter name='test' type='junit.framework.Test'/></method></interface></package><package name='junit.runner'><class name='BaseTestRunner' extends='java.lang.Object' abstract='true'><implements name='junit.framework.TestListener'/><constructor name='BaseTestRunner' type='junit.runner.BaseTestRunner'/><field name='SUITE_METHODNAME' final='true' static='true' value='&quot;suite&quot;' type='java.lang.String'/><method name='addError' synchronized='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='java.lang.Throwable'/></method><method name='addFailure' synchronized='true'><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='junit.framework.AssertionFailedError'/></method><method name='clearStatus' visibility='protected'/><method name='elapsedTimeAsString' return='java.lang.String'><parameter name='runTime' type='long'/></method><method name='endTest' synchronized='true'><parameter name='test' type='junit.framework.Test'/></method><method name='extractClassName' return='java.lang.String'><parameter name='className' type='java.lang.String'/></method><method name='getFilteredTrace' static='true' return='java.lang.String'><parameter name='t' type='java.lang.Throwable'/></method><method name='getFilteredTrace' static='true' return='java.lang.String'><parameter name='stack' type='java.lang.String'/></method><method name='getLoader' return='junit.runner.TestSuiteLoader'/><method name='getPreference' static='true' return='java.lang.String'><parameter name='key' type='java.lang.String'/></method><method name='getPreference' static='true' return='int'><parameter name='key' type='java.lang.String'/><parameter name='dflt' type='int'/></method><method name='getPreferences' static='true' visibility='protected' return='java.util.Properties'/><method name='getTest' return='junit.framework.Test'><parameter name='suiteClassName' type='java.lang.String'/></method><method name='inVAJava' static='true' return='boolean'/><method name='loadSuiteClass' visibility='protected' return='java.lang.Class'><parameter name='suiteClassName' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='processArguments' visibility='protected' return='java.lang.String'><parameter name='args' type='java.lang.String[]'/></method><method name='runFailed' abstract='true' visibility='protected'><parameter name='message' type='java.lang.String'/></method><method name='savePreferences' static='true'><exception name='IOException' type='java.io.IOException'/></method><method name='setLoading'><parameter name='enable' type='boolean'/></method><method name='setPreference'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setPreferences' static='true' visibility='protected'><parameter name='preferences' type='java.util.Properties'/></method><method name='showStackRaw' static='true' visibility='protected' return='boolean'/><method name='startTest' synchronized='true'><parameter name='test' type='junit.framework.Test'/></method><method name='testEnded' abstract='true'><parameter name='testName' type='java.lang.String'/></method><method name='testFailed' abstract='true'><parameter name='status' type='int'/><parameter name='test' type='junit.framework.Test'/><parameter name='t' type='java.lang.Throwable'/></method><method name='testStarted' abstract='true'><parameter name='testName' type='java.lang.String'/></method><method name='truncate' static='true' return='java.lang.String'><parameter name='s' type='java.lang.String'/></method><method name='useReloadingTestSuiteLoader' visibility='protected' return='boolean'/></class><class name='Version' extends='java.lang.Object'><method name='id' static='true' return='java.lang.String'/></class><interface name='TestSuiteLoader' abstract='true'><method name='load' abstract='true' return='java.lang.Class'><parameter name='suiteClassName' type='java.lang.String'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method><method name='reload' abstract='true' return='java.lang.Class'><parameter name='aClass' type='java.lang.Class'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/></method></interface></package><package name='org.apache.commons.logging'><interface name='Log' abstract='true'><method name='debug' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='debug' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method name='error' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='error' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method name='fatal' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='fatal' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method name='info' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='info' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method name='isDebugEnabled' abstract='true' return='boolean'/><method name='isErrorEnabled' abstract='true' return='boolean'/><method name='isFatalEnabled' abstract='true' return='boolean'/><method name='isInfoEnabled' abstract='true' return='boolean'/><method name='isTraceEnabled' abstract='true' return='boolean'/><method name='isWarnEnabled' abstract='true' return='boolean'/><method name='trace' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='trace' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method name='warn' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='arg0' type='java.lang.Object'/></method><method name='warn' abstract='true' api_removed='4'><parameter name='message' type='java.lang.Object'/><parameter name='t' type='java.lang.Throwable'/><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='debug' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='debug' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='error' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='error' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='fatal' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='fatal' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='info' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='info' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='trace' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='trace' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method><method api_added='4' name='warn' abstract='true'><parameter name='arg0' type='java.lang.Object'/></method><method api_added='4' name='warn' abstract='true'><parameter name='arg0' type='java.lang.Object'/><parameter name='arg1' type='java.lang.Throwable'/></method></interface></package><package name='org.apache.http'><class name='ConnectionClosedException' extends='java.io.IOException'><constructor name='ConnectionClosedException' type='org.apache.http.ConnectionClosedException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='HttpException' extends='java.lang.Exception'><constructor name='HttpException' type='org.apache.http.HttpException'/><constructor name='HttpException' type='org.apache.http.HttpException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='HttpException' type='org.apache.http.HttpException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='HttpHost' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><constructor name='HttpHost' type='org.apache.http.HttpHost'><parameter name='hostname' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='scheme' type='java.lang.String'/></constructor><constructor name='HttpHost' type='org.apache.http.HttpHost'><parameter name='hostname' type='java.lang.String'/><parameter name='port' type='int'/></constructor><constructor name='HttpHost' type='org.apache.http.HttpHost'><parameter name='hostname' type='java.lang.String'/></constructor><constructor name='HttpHost' type='org.apache.http.HttpHost'><parameter name='httphost' type='org.apache.http.HttpHost'/></constructor><field name='DEFAULT_SCHEME_NAME' final='true' static='true' value='&quot;http&quot;' type='java.lang.String'/><field name='hostname' final='true' type='java.lang.String' visibility='protected'/><field name='lcHostname' final='true' type='java.lang.String' visibility='protected'/><field name='port' final='true' type='int' visibility='protected'/><field name='schemeName' final='true' type='java.lang.String' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getHostName' return='java.lang.String'/><method name='getPort' return='int'/><method name='getSchemeName' return='java.lang.String'/><method name='toHostString' return='java.lang.String'/><method name='toURI' return='java.lang.String'/></class><class name='HttpVersion' final='true' extends='org.apache.http.ProtocolVersion'><implements name='java.io.Serializable'/><constructor name='HttpVersion' type='org.apache.http.HttpVersion'><parameter name='major' type='int'/><parameter name='minor' type='int'/></constructor><field name='HTTP' final='true' static='true' value='&quot;HTTP&quot;' type='java.lang.String'/><field name='HTTP_0_9' final='true' static='true' type='org.apache.http.HttpVersion'/><field name='HTTP_1_0' final='true' static='true' type='org.apache.http.HttpVersion'/><field name='HTTP_1_1' final='true' static='true' type='org.apache.http.HttpVersion'/></class><class name='MalformedChunkCodingException' extends='java.io.IOException'><constructor name='MalformedChunkCodingException' type='org.apache.http.MalformedChunkCodingException'/><constructor name='MalformedChunkCodingException' type='org.apache.http.MalformedChunkCodingException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='MethodNotSupportedException' extends='org.apache.http.HttpException'><constructor name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='NoHttpResponseException' extends='java.io.IOException'><constructor name='NoHttpResponseException' type='org.apache.http.NoHttpResponseException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='ParseException' extends='java.lang.RuntimeException'><constructor name='ParseException' type='org.apache.http.ParseException'/><constructor name='ParseException' type='org.apache.http.ParseException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='ProtocolException' extends='org.apache.http.HttpException'><constructor name='ProtocolException' type='org.apache.http.ProtocolException'/><constructor name='ProtocolException' type='org.apache.http.ProtocolException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='ProtocolException' type='org.apache.http.ProtocolException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='ProtocolVersion' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='ProtocolVersion' type='org.apache.http.ProtocolVersion'><parameter name='protocol' type='java.lang.String'/><parameter name='major' type='int'/><parameter name='minor' type='int'/></constructor><field name='major' final='true' type='int' visibility='protected'/><field name='minor' final='true' type='int' visibility='protected'/><field name='protocol' final='true' type='java.lang.String' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='compareToVersion' return='int'><parameter name='that' type='org.apache.http.ProtocolVersion'/></method><method name='equals' final='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='forVersion' return='org.apache.http.ProtocolVersion'><parameter name='major' type='int'/><parameter name='minor' type='int'/></method><method name='getMajor' final='true' return='int'/><method name='getMinor' final='true' return='int'/><method name='getProtocol' final='true' return='java.lang.String'/><method name='greaterEquals' final='true' return='boolean'><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='hashCode' final='true' return='int'/><method name='isComparable' return='boolean'><parameter name='that' type='org.apache.http.ProtocolVersion'/></method><method name='lessEquals' final='true' return='boolean'><parameter name='version' type='org.apache.http.ProtocolVersion'/></method></class><class name='UnsupportedHttpVersionException' extends='org.apache.http.ProtocolException'><constructor name='UnsupportedHttpVersionException' type='org.apache.http.UnsupportedHttpVersionException'/><constructor name='UnsupportedHttpVersionException' type='org.apache.http.UnsupportedHttpVersionException'><parameter name='message' type='java.lang.String'/></constructor></class><interface name='ConnectionReuseStrategy' abstract='true'><method name='keepAlive' abstract='true' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface><interface name='FormattedHeader' abstract='true'><implements name='org.apache.http.Header'/><method name='getBuffer' abstract='true' return='org.apache.http.util.CharArrayBuffer'/><method name='getValuePos' abstract='true' return='int'/></interface><interface name='Header' abstract='true'><method name='getElements' abstract='true' return='org.apache.http.HeaderElement[]'><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='getName' abstract='true' return='java.lang.String'/><method name='getValue' abstract='true' return='java.lang.String'/></interface><interface name='HeaderElement' abstract='true'><method name='getName' abstract='true' return='java.lang.String'/><method name='getParameter' abstract='true' return='org.apache.http.NameValuePair'><parameter name='index' type='int'/></method><method name='getParameterByName' abstract='true' return='org.apache.http.NameValuePair'><parameter name='name' type='java.lang.String'/></method><method name='getParameterCount' abstract='true' return='int'/><method name='getParameters' abstract='true' return='org.apache.http.NameValuePair[]'/><method name='getValue' abstract='true' return='java.lang.String'/></interface><interface name='HeaderElementIterator' abstract='true'><implements name='java.util.Iterator'/><method name='hasNext' abstract='true' return='boolean'/><method name='nextElement' abstract='true' return='org.apache.http.HeaderElement'/></interface><interface name='HeaderIterator' abstract='true'><implements name='java.util.Iterator'/><method name='hasNext' abstract='true' return='boolean'/><method name='nextHeader' abstract='true' return='org.apache.http.Header'/></interface><interface name='HttpClientConnection' abstract='true'><implements name='org.apache.http.HttpConnection'/><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='isResponseAvailable' abstract='true' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveResponseEntity' abstract='true'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveResponseHeader' abstract='true' return='org.apache.http.HttpResponse'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendRequestEntity' abstract='true'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendRequestHeader' abstract='true'><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpConnection' abstract='true'><method name='close' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' abstract='true' return='org.apache.http.HttpConnectionMetrics'/><method name='getSocketTimeout' abstract='true' return='int'/><method name='isOpen' abstract='true' return='boolean'/><method name='isStale' abstract='true' return='boolean'/><method name='setSocketTimeout' abstract='true'><parameter name='timeout' type='int'/></method><method name='shutdown' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpConnectionMetrics' abstract='true'><method name='getMetric' abstract='true' return='java.lang.Object'><parameter name='metricName' type='java.lang.String'/></method><method name='getReceivedBytesCount' abstract='true' return='long'/><method name='getRequestCount' abstract='true' return='long'/><method name='getResponseCount' abstract='true' return='long'/><method name='getSentBytesCount' abstract='true' return='long'/><method name='reset' abstract='true'/></interface><interface name='HttpEntity' abstract='true'><method name='consumeContent' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getContent' abstract='true' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getContentEncoding' abstract='true' return='org.apache.http.Header'/><method name='getContentLength' abstract='true' return='long'/><method name='getContentType' abstract='true' return='org.apache.http.Header'/><method name='isChunked' abstract='true' return='boolean'/><method name='isRepeatable' abstract='true' return='boolean'/><method name='isStreaming' abstract='true' return='boolean'/><method name='writeTo' abstract='true'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpEntityEnclosingRequest' abstract='true'><implements name='org.apache.http.HttpRequest'/><method name='expectContinue' abstract='true' return='boolean'/><method name='getEntity' abstract='true' return='org.apache.http.HttpEntity'/><method name='setEntity' abstract='true'><parameter name='entity' type='org.apache.http.HttpEntity'/></method></interface><interface name='HttpInetConnection' abstract='true'><implements name='org.apache.http.HttpConnection'/><method name='getLocalAddress' abstract='true' return='java.net.InetAddress'/><method name='getLocalPort' abstract='true' return='int'/><method name='getRemoteAddress' abstract='true' return='java.net.InetAddress'/><method name='getRemotePort' abstract='true' return='int'/></interface><interface name='HttpMessage' abstract='true'><method name='addHeader' abstract='true'><parameter name='header' type='org.apache.http.Header'/></method><method name='addHeader' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='containsHeader' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getAllHeaders' abstract='true' return='org.apache.http.Header[]'/><method name='getFirstHeader' abstract='true' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getHeaders' abstract='true' return='org.apache.http.Header[]'><parameter name='name' type='java.lang.String'/></method><method name='getLastHeader' abstract='true' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getParams' abstract='true' return='org.apache.http.params.HttpParams'/><method name='getProtocolVersion' abstract='true' return='org.apache.http.ProtocolVersion'/><method name='headerIterator' abstract='true' return='org.apache.http.HeaderIterator'/><method name='headerIterator' abstract='true' return='org.apache.http.HeaderIterator'><parameter name='name' type='java.lang.String'/></method><method name='removeHeader' abstract='true'><parameter name='header' type='org.apache.http.Header'/></method><method name='removeHeaders' abstract='true'><parameter name='name' type='java.lang.String'/></method><method name='setHeader' abstract='true'><parameter name='header' type='org.apache.http.Header'/></method><method name='setHeader' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setHeaders' abstract='true'><parameter name='headers' type='org.apache.http.Header[]'/></method><method name='setParams' abstract='true'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></interface><interface name='HttpRequest' abstract='true'><implements name='org.apache.http.HttpMessage'/><method name='getRequestLine' abstract='true' return='org.apache.http.RequestLine'/></interface><interface name='HttpRequestFactory' abstract='true'><method name='newHttpRequest' abstract='true' return='org.apache.http.HttpRequest'><parameter name='requestline' type='org.apache.http.RequestLine'/><exception name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'/></method><method name='newHttpRequest' abstract='true' return='org.apache.http.HttpRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><exception name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'/></method></interface><interface name='HttpRequestInterceptor' abstract='true'><method name='process' abstract='true'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpResponse' abstract='true'><implements name='org.apache.http.HttpMessage'/><method name='getEntity' abstract='true' return='org.apache.http.HttpEntity'/><method name='getLocale' abstract='true' return='java.util.Locale'/><method name='getStatusLine' abstract='true' return='org.apache.http.StatusLine'/><method name='setEntity' abstract='true'><parameter name='entity' type='org.apache.http.HttpEntity'/></method><method name='setLocale' abstract='true'><parameter name='loc' type='java.util.Locale'/></method><method name='setReasonPhrase' abstract='true'><parameter name='reason' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setStatusCode' abstract='true'><parameter name='code' type='int'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setStatusLine' abstract='true'><parameter name='statusline' type='org.apache.http.StatusLine'/></method><method name='setStatusLine' abstract='true'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='code' type='int'/></method><method name='setStatusLine' abstract='true'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='code' type='int'/><parameter name='reason' type='java.lang.String'/></method></interface><interface name='HttpResponseFactory' abstract='true'><method name='newHttpResponse' abstract='true' return='org.apache.http.HttpResponse'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='status' type='int'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='newHttpResponse' abstract='true' return='org.apache.http.HttpResponse'><parameter name='statusline' type='org.apache.http.StatusLine'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface><interface name='HttpResponseInterceptor' abstract='true'><method name='process' abstract='true'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpServerConnection' abstract='true'><implements name='org.apache.http.HttpConnection'/><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='receiveRequestEntity' abstract='true'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveRequestHeader' abstract='true' return='org.apache.http.HttpRequest'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendResponseEntity' abstract='true'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendResponseHeader' abstract='true'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpStatus' abstract='true'><field name='SC_ACCEPTED' final='true' static='true' value='202' type='int'/><field name='SC_BAD_GATEWAY' final='true' static='true' value='502' type='int'/><field name='SC_BAD_REQUEST' final='true' static='true' value='400' type='int'/><field name='SC_CONFLICT' final='true' static='true' value='409' type='int'/><field name='SC_CONTINUE' final='true' static='true' value='100' type='int'/><field name='SC_CREATED' final='true' static='true' value='201' type='int'/><field name='SC_EXPECTATION_FAILED' final='true' static='true' value='417' type='int'/><field name='SC_FAILED_DEPENDENCY' final='true' static='true' value='424' type='int'/><field name='SC_FORBIDDEN' final='true' static='true' value='403' type='int'/><field name='SC_GATEWAY_TIMEOUT' final='true' static='true' value='504' type='int'/><field name='SC_GONE' final='true' static='true' value='410' type='int'/><field name='SC_HTTP_VERSION_NOT_SUPPORTED' final='true' static='true' value='505' type='int'/><field name='SC_INSUFFICIENT_SPACE_ON_RESOURCE' final='true' static='true' value='419' type='int'/><field name='SC_INSUFFICIENT_STORAGE' final='true' static='true' value='507' type='int'/><field name='SC_INTERNAL_SERVER_ERROR' final='true' static='true' value='500' type='int'/><field name='SC_LENGTH_REQUIRED' final='true' static='true' value='411' type='int'/><field name='SC_LOCKED' final='true' static='true' value='423' type='int'/><field name='SC_METHOD_FAILURE' final='true' static='true' value='420' type='int'/><field name='SC_METHOD_NOT_ALLOWED' final='true' static='true' value='405' type='int'/><field name='SC_MOVED_PERMANENTLY' final='true' static='true' value='301' type='int'/><field name='SC_MOVED_TEMPORARILY' final='true' static='true' value='302' type='int'/><field name='SC_MULTIPLE_CHOICES' final='true' static='true' value='300' type='int'/><field name='SC_MULTI_STATUS' final='true' static='true' value='207' type='int'/><field name='SC_NON_AUTHORITATIVE_INFORMATION' final='true' static='true' value='203' type='int'/><field name='SC_NOT_ACCEPTABLE' final='true' static='true' value='406' type='int'/><field name='SC_NOT_FOUND' final='true' static='true' value='404' type='int'/><field name='SC_NOT_IMPLEMENTED' final='true' static='true' value='501' type='int'/><field name='SC_NOT_MODIFIED' final='true' static='true' value='304' type='int'/><field name='SC_NO_CONTENT' final='true' static='true' value='204' type='int'/><field name='SC_OK' final='true' static='true' value='200' type='int'/><field name='SC_PARTIAL_CONTENT' final='true' static='true' value='206' type='int'/><field name='SC_PAYMENT_REQUIRED' final='true' static='true' value='402' type='int'/><field name='SC_PRECONDITION_FAILED' final='true' static='true' value='412' type='int'/><field name='SC_PROCESSING' final='true' static='true' value='102' type='int'/><field name='SC_PROXY_AUTHENTICATION_REQUIRED' final='true' static='true' value='407' type='int'/><field name='SC_REQUESTED_RANGE_NOT_SATISFIABLE' final='true' static='true' value='416' type='int'/><field name='SC_REQUEST_TIMEOUT' final='true' static='true' value='408' type='int'/><field name='SC_REQUEST_TOO_LONG' final='true' static='true' value='413' type='int'/><field name='SC_REQUEST_URI_TOO_LONG' final='true' static='true' value='414' type='int'/><field name='SC_RESET_CONTENT' final='true' static='true' value='205' type='int'/><field name='SC_SEE_OTHER' final='true' static='true' value='303' type='int'/><field name='SC_SERVICE_UNAVAILABLE' final='true' static='true' value='503' type='int'/><field name='SC_SWITCHING_PROTOCOLS' final='true' static='true' value='101' type='int'/><field name='SC_TEMPORARY_REDIRECT' final='true' static='true' value='307' type='int'/><field name='SC_UNAUTHORIZED' final='true' static='true' value='401' type='int'/><field name='SC_UNPROCESSABLE_ENTITY' final='true' static='true' value='422' type='int'/><field name='SC_UNSUPPORTED_MEDIA_TYPE' final='true' static='true' value='415' type='int'/><field name='SC_USE_PROXY' final='true' static='true' value='305' type='int'/></interface><interface name='NameValuePair' abstract='true'><method name='getName' abstract='true' return='java.lang.String'/><method name='getValue' abstract='true' return='java.lang.String'/></interface><interface name='ReasonPhraseCatalog' abstract='true'><method name='getReason' abstract='true' return='java.lang.String'><parameter name='status' type='int'/><parameter name='loc' type='java.util.Locale'/></method></interface><interface name='RequestLine' abstract='true'><method name='getMethod' abstract='true' return='java.lang.String'/><method name='getProtocolVersion' abstract='true' return='org.apache.http.ProtocolVersion'/><method name='getUri' abstract='true' return='java.lang.String'/></interface><interface name='StatusLine' abstract='true'><method name='getProtocolVersion' abstract='true' return='org.apache.http.ProtocolVersion'/><method name='getReasonPhrase' abstract='true' return='java.lang.String'/><method name='getStatusCode' abstract='true' return='int'/></interface><interface name='TokenIterator' abstract='true'><implements name='java.util.Iterator'/><method name='hasNext' abstract='true' return='boolean'/><method name='nextToken' abstract='true' return='java.lang.String'/></interface></package><package name='org.apache.http.auth'><class name='AUTH' final='true' extends='java.lang.Object'><field name='PROXY_AUTH' final='true' static='true' value='&quot;Proxy-Authenticate&quot;' type='java.lang.String'/><field name='PROXY_AUTH_RESP' final='true' static='true' value='&quot;Proxy-Authorization&quot;' type='java.lang.String'/><field name='WWW_AUTH' final='true' static='true' value='&quot;WWW-Authenticate&quot;' type='java.lang.String'/><field name='WWW_AUTH_RESP' final='true' static='true' value='&quot;Authorization&quot;' type='java.lang.String'/></class><class name='AuthSchemeRegistry' final='true' extends='java.lang.Object'><constructor name='AuthSchemeRegistry' type='org.apache.http.auth.AuthSchemeRegistry'/><method name='getAuthScheme' synchronized='true' return='org.apache.http.auth.AuthScheme'><parameter name='name' type='java.lang.String'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getSchemeNames' synchronized='true' return='java.util.List&lt;java.lang.String&gt;'/><method name='register' synchronized='true'><parameter name='name' type='java.lang.String'/><parameter name='factory' type='org.apache.http.auth.AuthSchemeFactory'/></method><method name='setItems' synchronized='true'><parameter name='map' type='java.util.Map&lt;java.lang.String, org.apache.http.auth.AuthSchemeFactory&gt;'/></method><method name='unregister' synchronized='true'><parameter name='name' type='java.lang.String'/></method></class><class name='AuthScope' extends='java.lang.Object'><constructor name='AuthScope' type='org.apache.http.auth.AuthScope'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='realm' type='java.lang.String'/><parameter name='scheme' type='java.lang.String'/></constructor><constructor name='AuthScope' type='org.apache.http.auth.AuthScope'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='realm' type='java.lang.String'/></constructor><constructor name='AuthScope' type='org.apache.http.auth.AuthScope'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/></constructor><constructor name='AuthScope' type='org.apache.http.auth.AuthScope'><parameter name='authscope' type='org.apache.http.auth.AuthScope'/></constructor><field name='ANY' final='true' static='true' type='org.apache.http.auth.AuthScope'/><field name='ANY_HOST' final='true' static='true' type='java.lang.String'/><field name='ANY_PORT' final='true' static='true' value='-1' type='int'/><field name='ANY_REALM' final='true' static='true' type='java.lang.String'/><field name='ANY_SCHEME' final='true' static='true' type='java.lang.String'/><method name='getHost' return='java.lang.String'/><method name='getPort' return='int'/><method name='getRealm' return='java.lang.String'/><method name='getScheme' return='java.lang.String'/><method name='match' return='int'><parameter name='that' type='org.apache.http.auth.AuthScope'/></method></class><class name='AuthState' extends='java.lang.Object'><constructor name='AuthState' type='org.apache.http.auth.AuthState'/><method name='getAuthScheme' return='org.apache.http.auth.AuthScheme'/><method name='getAuthScope' return='org.apache.http.auth.AuthScope'/><method name='getCredentials' return='org.apache.http.auth.Credentials'/><method name='invalidate'/><method name='isValid' return='boolean'/><method name='setAuthScheme'><parameter name='authScheme' type='org.apache.http.auth.AuthScheme'/></method><method name='setAuthScope'><parameter name='authScope' type='org.apache.http.auth.AuthScope'/></method><method name='setCredentials'><parameter name='credentials' type='org.apache.http.auth.Credentials'/></method></class><class name='AuthenticationException' extends='org.apache.http.ProtocolException'><constructor name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/><constructor name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='BasicUserPrincipal' final='true' extends='java.lang.Object'><implements name='java.security.Principal'/><constructor name='BasicUserPrincipal' type='org.apache.http.auth.BasicUserPrincipal'><parameter name='username' type='java.lang.String'/></constructor><method name='getName' return='java.lang.String'/></class><class name='InvalidCredentialsException' extends='org.apache.http.auth.AuthenticationException'><constructor name='InvalidCredentialsException' type='org.apache.http.auth.InvalidCredentialsException'/><constructor name='InvalidCredentialsException' type='org.apache.http.auth.InvalidCredentialsException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='InvalidCredentialsException' type='org.apache.http.auth.InvalidCredentialsException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='MalformedChallengeException' extends='org.apache.http.ProtocolException'><constructor name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/><constructor name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='NTCredentials' extends='java.lang.Object'><implements name='org.apache.http.auth.Credentials'/><constructor name='NTCredentials' type='org.apache.http.auth.NTCredentials'><parameter name='usernamePassword' type='java.lang.String'/></constructor><constructor name='NTCredentials' type='org.apache.http.auth.NTCredentials'><parameter name='userName' type='java.lang.String'/><parameter name='password' type='java.lang.String'/><parameter name='workstation' type='java.lang.String'/><parameter name='domain' type='java.lang.String'/></constructor><method name='getDomain' return='java.lang.String'/><method name='getPassword' return='java.lang.String'/><method name='getUserName' return='java.lang.String'/><method name='getUserPrincipal' return='java.security.Principal'/><method name='getWorkstation' return='java.lang.String'/></class><class name='NTUserPrincipal' extends='java.lang.Object'><implements name='java.security.Principal'/><constructor name='NTUserPrincipal' type='org.apache.http.auth.NTUserPrincipal'><parameter name='domain' type='java.lang.String'/><parameter name='username' type='java.lang.String'/></constructor><method name='getDomain' return='java.lang.String'/><method name='getName' return='java.lang.String'/><method name='getUsername' return='java.lang.String'/></class><class name='UsernamePasswordCredentials' extends='java.lang.Object'><implements name='org.apache.http.auth.Credentials'/><constructor name='UsernamePasswordCredentials' type='org.apache.http.auth.UsernamePasswordCredentials'><parameter name='usernamePassword' type='java.lang.String'/></constructor><constructor name='UsernamePasswordCredentials' type='org.apache.http.auth.UsernamePasswordCredentials'><parameter name='userName' type='java.lang.String'/><parameter name='password' type='java.lang.String'/></constructor><method name='getPassword' return='java.lang.String'/><method name='getUserName' return='java.lang.String'/><method name='getUserPrincipal' return='java.security.Principal'/></class><interface name='AuthScheme' abstract='true'><method name='authenticate' abstract='true' return='org.apache.http.Header'><parameter name='credentials' type='org.apache.http.auth.Credentials'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method><method name='getParameter' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getRealm' abstract='true' return='java.lang.String'/><method name='getSchemeName' abstract='true' return='java.lang.String'/><method name='isComplete' abstract='true' return='boolean'/><method name='isConnectionBased' abstract='true' return='boolean'/><method name='processChallenge' abstract='true'><parameter name='header' type='org.apache.http.Header'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method></interface><interface name='AuthSchemeFactory' abstract='true'><method name='newInstance' abstract='true' return='org.apache.http.auth.AuthScheme'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></interface><interface name='Credentials' abstract='true'><method name='getPassword' abstract='true' return='java.lang.String'/><method name='getUserPrincipal' abstract='true' return='java.security.Principal'/></interface></package><package name='org.apache.http.auth.params'><class name='AuthParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='AuthParamBean' type='org.apache.http.auth.params.AuthParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setCredentialCharset'><parameter name='charset' type='java.lang.String'/></method></class><class name='AuthParams' final='true' extends='java.lang.Object'><method name='getCredentialCharset' static='true' return='java.lang.String'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setCredentialCharset' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='charset' type='java.lang.String'/></method></class><interface name='AuthPNames' abstract='true'><field name='CREDENTIAL_CHARSET' final='true' static='true' value='&quot;http.auth.credential-charset&quot;' type='java.lang.String'/></interface></package><package name='org.apache.http.client'><class name='CircularRedirectException' extends='org.apache.http.client.RedirectException'><constructor name='CircularRedirectException' type='org.apache.http.client.CircularRedirectException'/><constructor name='CircularRedirectException' type='org.apache.http.client.CircularRedirectException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='CircularRedirectException' type='org.apache.http.client.CircularRedirectException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='ClientProtocolException' extends='java.io.IOException'><constructor name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><constructor name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'><parameter name='s' type='java.lang.String'/></constructor><constructor name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='HttpResponseException' extends='org.apache.http.client.ClientProtocolException'><constructor name='HttpResponseException' type='org.apache.http.client.HttpResponseException'><parameter name='statusCode' type='int'/><parameter name='s' type='java.lang.String'/></constructor><method name='getStatusCode' return='int'/></class><class name='NonRepeatableRequestException' extends='org.apache.http.ProtocolException'><constructor name='NonRepeatableRequestException' type='org.apache.http.client.NonRepeatableRequestException'/><constructor name='NonRepeatableRequestException' type='org.apache.http.client.NonRepeatableRequestException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='RedirectException' extends='org.apache.http.ProtocolException'><constructor name='RedirectException' type='org.apache.http.client.RedirectException'/><constructor name='RedirectException' type='org.apache.http.client.RedirectException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='RedirectException' type='org.apache.http.client.RedirectException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><interface name='AuthenticationHandler' abstract='true'><method name='getChallenges' abstract='true' return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method><method name='isAuthenticationRequested' abstract='true' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='selectScheme' abstract='true' return='org.apache.http.auth.AuthScheme'><parameter name='challenges' type='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method></interface><interface name='CookieStore' abstract='true'><method name='addCookie' abstract='true'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/></method><method name='clear' abstract='true'/><method name='clearExpired' abstract='true' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='getCookies' abstract='true' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></interface><interface name='CredentialsProvider' abstract='true'><method name='clear' abstract='true'/><method name='getCredentials' abstract='true' return='org.apache.http.auth.Credentials'><parameter name='authscope' type='org.apache.http.auth.AuthScope'/></method><method name='setCredentials' abstract='true'><parameter name='authscope' type='org.apache.http.auth.AuthScope'/><parameter name='credentials' type='org.apache.http.auth.Credentials'/></method></interface><interface name='HttpClient' abstract='true'><method name='execute' abstract='true' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' abstract='true' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='getConnectionManager' abstract='true' return='org.apache.http.conn.ClientConnectionManager'/><method name='getParams' abstract='true' return='org.apache.http.params.HttpParams'/></interface><interface name='HttpRequestRetryHandler' abstract='true'><method name='retryRequest' abstract='true' return='boolean'><parameter name='exception' type='java.io.IOException'/><parameter name='executionCount' type='int'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface><interface name='RedirectHandler' abstract='true'><method name='getLocationURI' abstract='true' return='java.net.URI'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ProtocolException' type='org.apache.http.ProtocolException'/></method><method name='isRedirectRequested' abstract='true' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface><interface name='RequestDirector' abstract='true'><method name='execute' abstract='true' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ResponseHandler' abstract='true'><method name='handleResponse' abstract='true' return='T'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='UserTokenHandler' abstract='true'><method name='getUserToken' abstract='true' return='java.lang.Object'><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface></package><package name='org.apache.http.client.entity'><class name='UrlEncodedFormEntity' extends='org.apache.http.entity.StringEntity'><constructor name='UrlEncodedFormEntity' type='org.apache.http.client.entity.UrlEncodedFormEntity'><parameter name='parameters' type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;'/><parameter name='encoding' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='UrlEncodedFormEntity' type='org.apache.http.client.entity.UrlEncodedFormEntity'><parameter name='parameters' type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor></class></package><package name='org.apache.http.client.methods'><class name='HttpDelete' extends='org.apache.http.client.methods.HttpRequestBase'><constructor name='HttpDelete' type='org.apache.http.client.methods.HttpDelete'/><constructor name='HttpDelete' type='org.apache.http.client.methods.HttpDelete'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpDelete' type='org.apache.http.client.methods.HttpDelete'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;DELETE&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><class name='HttpEntityEnclosingRequestBase' extends='org.apache.http.client.methods.HttpRequestBase' abstract='true'><implements name='org.apache.http.HttpEntityEnclosingRequest'/><constructor name='HttpEntityEnclosingRequestBase' type='org.apache.http.client.methods.HttpEntityEnclosingRequestBase'/><method name='expectContinue' return='boolean'/><method name='getEntity' return='org.apache.http.HttpEntity'/><method name='setEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/></method></class><class name='HttpGet' extends='org.apache.http.client.methods.HttpRequestBase'><constructor name='HttpGet' type='org.apache.http.client.methods.HttpGet'/><constructor name='HttpGet' type='org.apache.http.client.methods.HttpGet'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpGet' type='org.apache.http.client.methods.HttpGet'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;GET&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><class name='HttpHead' extends='org.apache.http.client.methods.HttpRequestBase'><constructor name='HttpHead' type='org.apache.http.client.methods.HttpHead'/><constructor name='HttpHead' type='org.apache.http.client.methods.HttpHead'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpHead' type='org.apache.http.client.methods.HttpHead'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;HEAD&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><class name='HttpOptions' extends='org.apache.http.client.methods.HttpRequestBase'><constructor name='HttpOptions' type='org.apache.http.client.methods.HttpOptions'/><constructor name='HttpOptions' type='org.apache.http.client.methods.HttpOptions'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpOptions' type='org.apache.http.client.methods.HttpOptions'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;OPTIONS&quot;' type='java.lang.String'/><method name='getAllowedMethods' return='java.util.Set&lt;java.lang.String&gt;'><parameter name='response' type='org.apache.http.HttpResponse'/></method><method name='getMethod' return='java.lang.String'/></class><class name='HttpPost' extends='org.apache.http.client.methods.HttpEntityEnclosingRequestBase'><constructor name='HttpPost' type='org.apache.http.client.methods.HttpPost'/><constructor name='HttpPost' type='org.apache.http.client.methods.HttpPost'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpPost' type='org.apache.http.client.methods.HttpPost'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;POST&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><class name='HttpPut' extends='org.apache.http.client.methods.HttpEntityEnclosingRequestBase'><constructor name='HttpPut' type='org.apache.http.client.methods.HttpPut'/><constructor name='HttpPut' type='org.apache.http.client.methods.HttpPut'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpPut' type='org.apache.http.client.methods.HttpPut'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;PUT&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><class name='HttpRequestBase' extends='org.apache.http.message.AbstractHttpMessage' abstract='true'><implements name='org.apache.http.client.methods.AbortableHttpRequest'/><implements name='java.lang.Cloneable'/><implements name='org.apache.http.client.methods.HttpUriRequest'/><constructor name='HttpRequestBase' type='org.apache.http.client.methods.HttpRequestBase'/><method name='abort'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getMethod' abstract='true' return='java.lang.String'/><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getRequestLine' return='org.apache.http.RequestLine'/><method name='getURI' return='java.net.URI'/><method name='isAborted' return='boolean'/><method name='setConnectionRequest'><parameter name='connRequest' type='org.apache.http.conn.ClientConnectionRequest'/><exception name='IOException' type='java.io.IOException'/></method><method name='setReleaseTrigger'><parameter name='releaseTrigger' type='org.apache.http.conn.ConnectionReleaseTrigger'/><exception name='IOException' type='java.io.IOException'/></method><method name='setURI'><parameter name='uri' type='java.net.URI'/></method></class><class name='HttpTrace' extends='org.apache.http.client.methods.HttpRequestBase'><constructor name='HttpTrace' type='org.apache.http.client.methods.HttpTrace'/><constructor name='HttpTrace' type='org.apache.http.client.methods.HttpTrace'><parameter name='uri' type='java.net.URI'/></constructor><constructor name='HttpTrace' type='org.apache.http.client.methods.HttpTrace'><parameter name='uri' type='java.lang.String'/></constructor><field name='METHOD_NAME' final='true' static='true' value='&quot;TRACE&quot;' type='java.lang.String'/><method name='getMethod' return='java.lang.String'/></class><interface name='AbortableHttpRequest' abstract='true'><method name='abort' abstract='true'/><method name='setConnectionRequest' abstract='true'><parameter name='connRequest' type='org.apache.http.conn.ClientConnectionRequest'/><exception name='IOException' type='java.io.IOException'/></method><method name='setReleaseTrigger' abstract='true'><parameter name='releaseTrigger' type='org.apache.http.conn.ConnectionReleaseTrigger'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpUriRequest' abstract='true'><implements name='org.apache.http.HttpRequest'/><method name='abort' abstract='true'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='getMethod' abstract='true' return='java.lang.String'/><method name='getURI' abstract='true' return='java.net.URI'/><method name='isAborted' abstract='true' return='boolean'/></interface></package><package name='org.apache.http.client.params'><class name='AuthPolicy' final='true' extends='java.lang.Object'><field name='BASIC' final='true' static='true' value='&quot;Basic&quot;' type='java.lang.String'/><field name='DIGEST' final='true' static='true' value='&quot;Digest&quot;' type='java.lang.String'/><field name='NTLM' final='true' static='true' value='&quot;NTLM&quot;' type='java.lang.String'/></class><class name='ClientParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='ClientParamBean' type='org.apache.http.client.params.ClientParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setAllowCircularRedirects'><parameter name='allow' type='boolean'/></method><method name='setConnectionManagerFactory'><parameter name='factory' type='org.apache.http.conn.ClientConnectionManagerFactory'/></method><method name='setConnectionManagerFactoryClassName'><parameter name='factory' type='java.lang.String'/></method><method name='setCookiePolicy'><parameter name='policy' type='java.lang.String'/></method><method name='setDefaultHeaders'><parameter name='headers' type='java.util.Collection&lt;org.apache.http.Header&gt;'/></method><method name='setDefaultHost'><parameter name='host' type='org.apache.http.HttpHost'/></method><method name='setHandleAuthentication'><parameter name='handle' type='boolean'/></method><method name='setHandleRedirects'><parameter name='handle' type='boolean'/></method><method name='setMaxRedirects'><parameter name='maxRedirects' type='int'/></method><method name='setRejectRelativeRedirect'><parameter name='reject' type='boolean'/></method><method name='setVirtualHost'><parameter name='host' type='org.apache.http.HttpHost'/></method></class><class name='CookiePolicy' final='true' extends='java.lang.Object'><field name='BEST_MATCH' final='true' static='true' value='&quot;best-match&quot;' type='java.lang.String'/><field name='BROWSER_COMPATIBILITY' final='true' static='true' value='&quot;compatibility&quot;' type='java.lang.String'/><field name='NETSCAPE' final='true' static='true' value='&quot;netscape&quot;' type='java.lang.String'/><field name='RFC_2109' final='true' static='true' value='&quot;rfc2109&quot;' type='java.lang.String'/><field name='RFC_2965' final='true' static='true' value='&quot;rfc2965&quot;' type='java.lang.String'/></class><class name='HttpClientParams' extends='java.lang.Object'><method name='getCookiePolicy' static='true' return='java.lang.String'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='isAuthenticating' static='true' return='boolean'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='isRedirecting' static='true' return='boolean'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setAuthenticating' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='value' type='boolean'/></method><method name='setCookiePolicy' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='cookiePolicy' type='java.lang.String'/></method><method name='setRedirecting' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='value' type='boolean'/></method></class><interface name='AllClientPNames' abstract='true'><implements name='org.apache.http.auth.params.AuthPNames'/><implements name='org.apache.http.client.params.ClientPNames'/><implements name='org.apache.http.conn.params.ConnConnectionPNames'/><implements name='org.apache.http.conn.params.ConnManagerPNames'/><implements name='org.apache.http.conn.params.ConnRoutePNames'/><implements name='org.apache.http.cookie.params.CookieSpecPNames'/><implements name='org.apache.http.params.CoreConnectionPNames'/><implements name='org.apache.http.params.CoreProtocolPNames'/></interface><interface name='ClientPNames' abstract='true'><field name='ALLOW_CIRCULAR_REDIRECTS' final='true' static='true' value='&quot;http.protocol.allow-circular-redirects&quot;' type='java.lang.String'/><field name='CONNECTION_MANAGER_FACTORY' final='true' static='true' value='&quot;http.connection-manager.factory-object&quot;' type='java.lang.String'/><field name='CONNECTION_MANAGER_FACTORY_CLASS_NAME' final='true' static='true' value='&quot;http.connection-manager.factory-class-name&quot;' type='java.lang.String'/><field name='COOKIE_POLICY' final='true' static='true' value='&quot;http.protocol.cookie-policy&quot;' type='java.lang.String'/><field name='DEFAULT_HEADERS' final='true' static='true' value='&quot;http.default-headers&quot;' type='java.lang.String'/><field name='DEFAULT_HOST' final='true' static='true' value='&quot;http.default-host&quot;' type='java.lang.String'/><field name='HANDLE_AUTHENTICATION' final='true' static='true' value='&quot;http.protocol.handle-authentication&quot;' type='java.lang.String'/><field name='HANDLE_REDIRECTS' final='true' static='true' value='&quot;http.protocol.handle-redirects&quot;' type='java.lang.String'/><field name='MAX_REDIRECTS' final='true' static='true' value='&quot;http.protocol.max-redirects&quot;' type='java.lang.String'/><field name='REJECT_RELATIVE_REDIRECT' final='true' static='true' value='&quot;http.protocol.reject-relative-redirect&quot;' type='java.lang.String'/><field name='VIRTUAL_HOST' final='true' static='true' value='&quot;http.virtual-host&quot;' type='java.lang.String'/></interface></package><package name='org.apache.http.client.protocol'><class name='ClientContextConfigurer' extends='java.lang.Object'><implements name='org.apache.http.client.protocol.ClientContext'/><constructor name='ClientContextConfigurer' type='org.apache.http.client.protocol.ClientContextConfigurer'><parameter name='context' type='org.apache.http.protocol.HttpContext'/></constructor><method name='setAuthSchemePref'><parameter name='list' type='java.util.List&lt;java.lang.String&gt;'/></method><method name='setAuthSchemeRegistry'><parameter name='registry' type='org.apache.http.auth.AuthSchemeRegistry'/></method><method name='setCookieSpecRegistry'><parameter name='registry' type='org.apache.http.cookie.CookieSpecRegistry'/></method><method name='setCookieStore'><parameter name='store' type='org.apache.http.client.CookieStore'/></method><method name='setCredentialsProvider'><parameter name='provider' type='org.apache.http.client.CredentialsProvider'/></method></class><class name='RequestAddCookies' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestAddCookies' type='org.apache.http.client.protocol.RequestAddCookies'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestDefaultHeaders' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestDefaultHeaders' type='org.apache.http.client.protocol.RequestDefaultHeaders'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestProxyAuthentication' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestProxyAuthentication' type='org.apache.http.client.protocol.RequestProxyAuthentication'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestTargetAuthentication' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestTargetAuthentication' type='org.apache.http.client.protocol.RequestTargetAuthentication'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ResponseProcessCookies' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseInterceptor'/><constructor name='ResponseProcessCookies' type='org.apache.http.client.protocol.ResponseProcessCookies'/><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><interface name='ClientContext' abstract='true'><field name='AUTHSCHEME_REGISTRY' final='true' static='true' value='&quot;http.authscheme-registry&quot;' type='java.lang.String'/><field name='AUTH_SCHEME_PREF' final='true' static='true' value='&quot;http.auth.scheme-pref&quot;' type='java.lang.String'/><field name='COOKIESPEC_REGISTRY' final='true' static='true' value='&quot;http.cookiespec-registry&quot;' type='java.lang.String'/><field name='COOKIE_ORIGIN' final='true' static='true' value='&quot;http.cookie-origin&quot;' type='java.lang.String'/><field name='COOKIE_SPEC' final='true' static='true' value='&quot;http.cookie-spec&quot;' type='java.lang.String'/><field name='COOKIE_STORE' final='true' static='true' value='&quot;http.cookie-store&quot;' type='java.lang.String'/><field name='CREDS_PROVIDER' final='true' static='true' value='&quot;http.auth.credentials-provider&quot;' type='java.lang.String'/><field name='PROXY_AUTH_STATE' final='true' static='true' value='&quot;http.auth.proxy-scope&quot;' type='java.lang.String'/><field name='TARGET_AUTH_STATE' final='true' static='true' value='&quot;http.auth.target-scope&quot;' type='java.lang.String'/><field name='USER_TOKEN' final='true' static='true' value='&quot;http.user-token&quot;' type='java.lang.String'/></interface></package><package name='org.apache.http.client.utils'><class name='CloneUtils' extends='java.lang.Object'><method name='clone' static='true' return='java.lang.Object'><parameter name='obj' type='java.lang.Object'/><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method></class><class name='URIUtils' extends='java.lang.Object'><method name='createURI' static='true' return='java.net.URI'><parameter name='scheme' type='java.lang.String'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='path' type='java.lang.String'/><parameter name='query' type='java.lang.String'/><parameter name='fragment' type='java.lang.String'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method name='resolve' static='true' return='java.net.URI'><parameter name='baseURI' type='java.net.URI'/><parameter name='reference' type='java.lang.String'/></method><method name='resolve' static='true' return='java.net.URI'><parameter name='baseURI' type='java.net.URI'/><parameter name='reference' type='java.net.URI'/></method><method name='rewriteURI' static='true' return='java.net.URI'><parameter name='uri' type='java.net.URI'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='dropFragment' type='boolean'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method><method name='rewriteURI' static='true' return='java.net.URI'><parameter name='uri' type='java.net.URI'/><parameter name='target' type='org.apache.http.HttpHost'/><exception name='URISyntaxException' type='java.net.URISyntaxException'/></method></class><class name='URLEncodedUtils' extends='java.lang.Object'><constructor name='URLEncodedUtils' type='org.apache.http.client.utils.URLEncodedUtils'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;application/x-www-form-urlencoded&quot;' type='java.lang.String'/><method name='format' static='true' return='java.lang.String'><parameter name='parameters' type='java.util.List&lt;? extends org.apache.http.NameValuePair&gt;'/><parameter name='encoding' type='java.lang.String'/></method><method name='isEncoded' static='true' return='boolean'><parameter name='entity' type='org.apache.http.HttpEntity'/></method><method name='parse' static='true' return='java.util.List&lt;org.apache.http.NameValuePair&gt;'><parameter name='uri' type='java.net.URI'/><parameter name='encoding' type='java.lang.String'/></method><method name='parse' static='true' return='java.util.List&lt;org.apache.http.NameValuePair&gt;'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='IOException' type='java.io.IOException'/></method><method name='parse' static='true'><parameter name='parameters' type='java.util.List&lt;org.apache.http.NameValuePair&gt;'/><parameter name='scanner' type='java.util.Scanner'/><parameter name='encoding' type='java.lang.String'/></method></class></package><package name='org.apache.http.conn'><class name='BasicEofSensorWatcher' extends='java.lang.Object'><implements name='org.apache.http.conn.EofSensorWatcher'/><constructor name='BasicEofSensorWatcher' type='org.apache.http.conn.BasicEofSensorWatcher'><parameter name='conn' type='org.apache.http.conn.ManagedClientConnection'/><parameter name='reuse' type='boolean'/></constructor><field name='attemptReuse' type='boolean' visibility='protected'/><field name='managedConn' type='org.apache.http.conn.ManagedClientConnection' visibility='protected'/><method name='eofDetected' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='streamAbort' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='streamClosed' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='BasicManagedEntity' extends='org.apache.http.entity.HttpEntityWrapper'><implements name='org.apache.http.conn.ConnectionReleaseTrigger'/><implements name='org.apache.http.conn.EofSensorWatcher'/><constructor name='BasicManagedEntity' type='org.apache.http.conn.BasicManagedEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/><parameter name='conn' type='org.apache.http.conn.ManagedClientConnection'/><parameter name='reuse' type='boolean'/></constructor><field name='attemptReuse' final='true' type='boolean' visibility='protected'/><field name='managedConn' type='org.apache.http.conn.ManagedClientConnection' visibility='protected'/><method name='abortConnection'><exception name='IOException' type='java.io.IOException'/></method><method name='eofDetected' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='releaseConnection'><exception name='IOException' type='java.io.IOException'/></method><method name='releaseManagedConnection' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='streamAbort' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='streamClosed' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ConnectTimeoutException' extends='java.io.InterruptedIOException'><constructor name='ConnectTimeoutException' type='org.apache.http.conn.ConnectTimeoutException'/><constructor name='ConnectTimeoutException' type='org.apache.http.conn.ConnectTimeoutException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='ConnectionPoolTimeoutException' extends='org.apache.http.conn.ConnectTimeoutException'><constructor name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'/><constructor name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='EofSensorInputStream' extends='java.io.InputStream'><implements name='org.apache.http.conn.ConnectionReleaseTrigger'/><constructor name='EofSensorInputStream' type='org.apache.http.conn.EofSensorInputStream'><parameter name='in' type='java.io.InputStream'/><parameter name='watcher' type='org.apache.http.conn.EofSensorWatcher'/></constructor><field name='wrappedStream' type='java.io.InputStream' visibility='protected'/><method name='abortConnection'><exception name='IOException' type='java.io.IOException'/></method><method name='checkAbort' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='checkClose' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='checkEOF' visibility='protected'><parameter name='eof' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='isReadAllowed' visibility='protected' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='releaseConnection'><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpHostConnectException' extends='java.net.ConnectException'><constructor name='HttpHostConnectException' type='org.apache.http.conn.HttpHostConnectException'><parameter name='host' type='org.apache.http.HttpHost'/><parameter name='cause' type='java.net.ConnectException'/></constructor><method name='getHost' return='org.apache.http.HttpHost'/></class><class name='MultihomePlainSocketFactory' final='true' extends='java.lang.Object'><implements name='org.apache.http.conn.scheme.SocketFactory'/><method name='connectSocket' return='java.net.Socket'><parameter name='sock' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'/><method name='getSocketFactory' static='true' return='org.apache.http.conn.MultihomePlainSocketFactory'/><method name='isSecure' final='true' return='boolean'><parameter name='sock' type='java.net.Socket'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><interface name='ClientConnectionManager' abstract='true'><method name='closeExpiredConnections' abstract='true'/><method name='closeIdleConnections' abstract='true'><parameter name='idletime' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/></method><method name='getSchemeRegistry' abstract='true' return='org.apache.http.conn.scheme.SchemeRegistry'/><method name='releaseConnection' abstract='true'><parameter name='conn' type='org.apache.http.conn.ManagedClientConnection'/><parameter name='validDuration' type='long'/><parameter name='timeUnit' type='java.util.concurrent.TimeUnit'/></method><method name='requestConnection' abstract='true' return='org.apache.http.conn.ClientConnectionRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method><method name='shutdown' abstract='true'/></interface><interface name='ClientConnectionManagerFactory' abstract='true'><method name='newInstance' abstract='true' return='org.apache.http.conn.ClientConnectionManager'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry'/></method></interface><interface name='ClientConnectionOperator' abstract='true'><method name='createConnection' abstract='true' return='org.apache.http.conn.OperatedClientConnection'/><method name='openConnection' abstract='true'><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='updateSecureConnection' abstract='true'><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ClientConnectionRequest' abstract='true'><method name='abortRequest' abstract='true'/><method name='getConnection' abstract='true' return='org.apache.http.conn.ManagedClientConnection'><parameter name='timeout' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/><exception name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></interface><interface name='ConnectionKeepAliveStrategy' abstract='true'><method name='getKeepAliveDuration' abstract='true' return='long'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></interface><interface name='ConnectionReleaseTrigger' abstract='true'><method name='abortConnection' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='releaseConnection' abstract='true'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='EofSensorWatcher' abstract='true'><method name='eofDetected' abstract='true' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='streamAbort' abstract='true' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='streamClosed' abstract='true' return='boolean'><parameter name='wrapped' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='ManagedClientConnection' abstract='true'><implements name='org.apache.http.conn.ConnectionReleaseTrigger'/><implements name='org.apache.http.HttpClientConnection'/><implements name='org.apache.http.HttpInetConnection'/><method name='getRoute' abstract='true' return='org.apache.http.conn.routing.HttpRoute'/><method name='getSSLSession' abstract='true' return='javax.net.ssl.SSLSession'/><method name='getState' abstract='true' return='java.lang.Object'/><method name='isMarkedReusable' abstract='true' return='boolean'/><method name='isSecure' abstract='true' return='boolean'/><method name='layerProtocol' abstract='true'><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='markReusable' abstract='true'/><method name='open' abstract='true'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='setIdleDuration' abstract='true'><parameter name='duration' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='setState' abstract='true'><parameter name='state' type='java.lang.Object'/></method><method name='tunnelProxy' abstract='true'><parameter name='next' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='tunnelTarget' abstract='true'><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='unmarkReusable' abstract='true'/></interface><interface name='OperatedClientConnection' abstract='true'><implements name='org.apache.http.HttpClientConnection'/><implements name='org.apache.http.HttpInetConnection'/><method name='getSocket' abstract='true' return='java.net.Socket'/><method name='getTargetHost' abstract='true' return='org.apache.http.HttpHost'/><method name='isSecure' abstract='true' return='boolean'/><method name='openCompleted' abstract='true'><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='opening' abstract='true'><parameter name='sock' type='java.net.Socket'/><parameter name='target' type='org.apache.http.HttpHost'/><exception name='IOException' type='java.io.IOException'/></method><method name='update' abstract='true'><parameter name='sock' type='java.net.Socket'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></interface></package><package name='org.apache.http.conn.params'><class name='ConnConnectionParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='ConnConnectionParamBean' type='org.apache.http.conn.params.ConnConnectionParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setMaxStatusLineGarbage'><parameter name='maxStatusLineGarbage' type='int'/></method></class><class name='ConnManagerParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='ConnManagerParamBean' type='org.apache.http.conn.params.ConnManagerParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setConnectionsPerRoute'><parameter name='connPerRoute' type='org.apache.http.conn.params.ConnPerRouteBean'/></method><method name='setMaxTotalConnections'><parameter name='maxConnections' type='int'/></method><method name='setTimeout'><parameter name='timeout' type='long'/></method></class><class name='ConnManagerParams' final='true' extends='java.lang.Object'><implements name='org.apache.http.conn.params.ConnManagerPNames'/><constructor name='ConnManagerParams' type='org.apache.http.conn.params.ConnManagerParams'/><field name='DEFAULT_MAX_TOTAL_CONNECTIONS' final='true' static='true' value='20' type='int'/><method name='getMaxConnectionsPerRoute' static='true' return='org.apache.http.conn.params.ConnPerRoute'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getMaxTotalConnections' static='true' return='int'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getTimeout' static='true' return='long'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setMaxConnectionsPerRoute' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='connPerRoute' type='org.apache.http.conn.params.ConnPerRoute'/></method><method name='setMaxTotalConnections' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='maxTotalConnections' type='int'/></method><method name='setTimeout' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='timeout' type='long'/></method></class><class name='ConnPerRouteBean' final='true' extends='java.lang.Object'><implements name='org.apache.http.conn.params.ConnPerRoute'/><constructor name='ConnPerRouteBean' type='org.apache.http.conn.params.ConnPerRouteBean'><parameter name='defaultMax' type='int'/></constructor><constructor name='ConnPerRouteBean' type='org.apache.http.conn.params.ConnPerRouteBean'/><field name='DEFAULT_MAX_CONNECTIONS_PER_ROUTE' final='true' static='true' value='2' type='int'/><method name='getDefaultMax' return='int'/><method name='getMaxForRoute' return='int'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='setDefaultMaxPerRoute'><parameter name='max' type='int'/></method><method name='setMaxForRoute'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='max' type='int'/></method><method name='setMaxForRoutes'><parameter name='map' type='java.util.Map&lt;org.apache.http.conn.routing.HttpRoute, java.lang.Integer&gt;'/></method></class><class name='ConnRouteParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='ConnRouteParamBean' type='org.apache.http.conn.params.ConnRouteParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setDefaultProxy'><parameter name='defaultProxy' type='org.apache.http.HttpHost'/></method><method name='setForcedRoute'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='setLocalAddress'><parameter name='address' type='java.net.InetAddress'/></method></class><class name='ConnRouteParams' extends='java.lang.Object'><implements name='org.apache.http.conn.params.ConnRoutePNames'/><field name='NO_HOST' final='true' static='true' type='org.apache.http.HttpHost'/><field name='NO_ROUTE' final='true' static='true' type='org.apache.http.conn.routing.HttpRoute'/><method name='getDefaultProxy' static='true' return='org.apache.http.HttpHost'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getForcedRoute' static='true' return='org.apache.http.conn.routing.HttpRoute'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getLocalAddress' static='true' return='java.net.InetAddress'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setDefaultProxy' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='proxy' type='org.apache.http.HttpHost'/></method><method name='setForcedRoute' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='setLocalAddress' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='local' type='java.net.InetAddress'/></method></class><interface name='ConnConnectionPNames' abstract='true'><field name='MAX_STATUS_LINE_GARBAGE' final='true' static='true' value='&quot;http.connection.max-status-line-garbage&quot;' type='java.lang.String'/></interface><interface name='ConnManagerPNames' abstract='true'><field name='MAX_CONNECTIONS_PER_ROUTE' final='true' static='true' value='&quot;http.conn-manager.max-per-route&quot;' type='java.lang.String'/><field name='MAX_TOTAL_CONNECTIONS' final='true' static='true' value='&quot;http.conn-manager.max-total&quot;' type='java.lang.String'/><field name='TIMEOUT' final='true' static='true' value='&quot;http.conn-manager.timeout&quot;' type='java.lang.String'/></interface><interface name='ConnPerRoute' abstract='true'><method name='getMaxForRoute' abstract='true' return='int'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method></interface><interface name='ConnRoutePNames' abstract='true'><field name='DEFAULT_PROXY' final='true' static='true' value='&quot;http.route.default-proxy&quot;' type='java.lang.String'/><field name='FORCED_ROUTE' final='true' static='true' value='&quot;http.route.forced-route&quot;' type='java.lang.String'/><field name='LOCAL_ADDRESS' final='true' static='true' value='&quot;http.route.local-address&quot;' type='java.lang.String'/></interface></package><package name='org.apache.http.conn.routing'><class name='BasicRouteDirector' extends='java.lang.Object'><implements name='org.apache.http.conn.routing.HttpRouteDirector'/><constructor name='BasicRouteDirector' type='org.apache.http.conn.routing.BasicRouteDirector'/><method name='directStep' visibility='protected' return='int'><parameter name='plan' type='org.apache.http.conn.routing.RouteInfo'/><parameter name='fact' type='org.apache.http.conn.routing.RouteInfo'/></method><method name='firstStep' visibility='protected' return='int'><parameter name='plan' type='org.apache.http.conn.routing.RouteInfo'/></method><method name='nextStep' return='int'><parameter name='plan' type='org.apache.http.conn.routing.RouteInfo'/><parameter name='fact' type='org.apache.http.conn.routing.RouteInfo'/></method><method name='proxiedStep' visibility='protected' return='int'><parameter name='plan' type='org.apache.http.conn.routing.RouteInfo'/><parameter name='fact' type='org.apache.http.conn.routing.RouteInfo'/></method></class><class name='HttpRoute' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.conn.routing.RouteInfo'/><constructor name='HttpRoute' type='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='proxies' type='org.apache.http.HttpHost[]'/><parameter name='secure' type='boolean'/><parameter name='tunnelled' type='org.apache.http.conn.routing.RouteInfo.TunnelType'/><parameter name='layered' type='org.apache.http.conn.routing.RouteInfo.LayerType'/></constructor><constructor name='HttpRoute' type='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='proxy' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='tunnelled' type='org.apache.http.conn.routing.RouteInfo.TunnelType'/><parameter name='layered' type='org.apache.http.conn.routing.RouteInfo.LayerType'/></constructor><constructor name='HttpRoute' type='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='secure' type='boolean'/></constructor><constructor name='HttpRoute' type='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/></constructor><constructor name='HttpRoute' type='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='proxy' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='equals' final='true' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method name='getHopCount' final='true' return='int'/><method name='getHopTarget' final='true' return='org.apache.http.HttpHost'><parameter name='hop' type='int'/></method><method name='getLayerType' final='true' return='org.apache.http.conn.routing.RouteInfo.LayerType'/><method name='getLocalAddress' final='true' return='java.net.InetAddress'/><method name='getProxyHost' final='true' return='org.apache.http.HttpHost'/><method name='getTargetHost' final='true' return='org.apache.http.HttpHost'/><method name='getTunnelType' final='true' return='org.apache.http.conn.routing.RouteInfo.TunnelType'/><method name='hashCode' final='true' return='int'/><method name='isLayered' final='true' return='boolean'/><method name='isSecure' final='true' return='boolean'/><method name='isTunnelled' final='true' return='boolean'/><method name='toString' final='true' return='java.lang.String'/></class><class name='RouteInfo.LayerType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='org.apache.http.conn.routing.RouteInfo.LayerType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='org.apache.http.conn.routing.RouteInfo.LayerType[]'/></class><class name='RouteInfo.TunnelType' final='true' extends='java.lang.Enum' static='true'><method name='valueOf' static='true' return='org.apache.http.conn.routing.RouteInfo.TunnelType'><parameter name='name' type='java.lang.String'/></method><method name='values' final='true' static='true' return='org.apache.http.conn.routing.RouteInfo.TunnelType[]'/></class><class name='RouteTracker' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.conn.routing.RouteInfo'/><constructor name='RouteTracker' type='org.apache.http.conn.routing.RouteTracker'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/></constructor><constructor name='RouteTracker' type='org.apache.http.conn.routing.RouteTracker'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='connectProxy' final='true'><parameter name='proxy' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/></method><method name='connectTarget' final='true'><parameter name='secure' type='boolean'/></method><method name='equals' final='true' return='boolean'><parameter name='o' type='java.lang.Object'/></method><method name='getHopCount' final='true' return='int'/><method name='getHopTarget' final='true' return='org.apache.http.HttpHost'><parameter name='hop' type='int'/></method><method name='getLayerType' final='true' return='org.apache.http.conn.routing.RouteInfo.LayerType'/><method name='getLocalAddress' final='true' return='java.net.InetAddress'/><method name='getProxyHost' final='true' return='org.apache.http.HttpHost'/><method name='getTargetHost' final='true' return='org.apache.http.HttpHost'/><method name='getTunnelType' final='true' return='org.apache.http.conn.routing.RouteInfo.TunnelType'/><method name='hashCode' final='true' return='int'/><method name='isConnected' final='true' return='boolean'/><method name='isLayered' final='true' return='boolean'/><method name='isSecure' final='true' return='boolean'/><method name='isTunnelled' final='true' return='boolean'/><method name='layerProtocol' final='true'><parameter name='secure' type='boolean'/></method><method name='toRoute' final='true' return='org.apache.http.conn.routing.HttpRoute'/><method name='toString' final='true' return='java.lang.String'/><method name='tunnelProxy' final='true'><parameter name='proxy' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/></method><method name='tunnelTarget' final='true'><parameter name='secure' type='boolean'/></method></class><interface name='HttpRouteDirector' abstract='true'><field name='COMPLETE' final='true' static='true' value='0' type='int'/><field name='CONNECT_PROXY' final='true' static='true' value='2' type='int'/><field name='CONNECT_TARGET' final='true' static='true' value='1' type='int'/><field name='LAYER_PROTOCOL' final='true' static='true' value='5' type='int'/><field name='TUNNEL_PROXY' final='true' static='true' value='4' type='int'/><field name='TUNNEL_TARGET' final='true' static='true' value='3' type='int'/><field name='UNREACHABLE' final='true' static='true' value='-1' type='int'/><method name='nextStep' abstract='true' return='int'><parameter name='plan' type='org.apache.http.conn.routing.RouteInfo'/><parameter name='fact' type='org.apache.http.conn.routing.RouteInfo'/></method></interface><interface name='HttpRoutePlanner' abstract='true'><method name='determineRoute' abstract='true' return='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></interface><interface name='RouteInfo' abstract='true'><method name='getHopCount' abstract='true' return='int'/><method name='getHopTarget' abstract='true' return='org.apache.http.HttpHost'><parameter name='hop' type='int'/></method><method name='getLayerType' abstract='true' return='org.apache.http.conn.routing.RouteInfo.LayerType'/><method name='getLocalAddress' abstract='true' return='java.net.InetAddress'/><method name='getProxyHost' abstract='true' return='org.apache.http.HttpHost'/><method name='getTargetHost' abstract='true' return='org.apache.http.HttpHost'/><method name='getTunnelType' abstract='true' return='org.apache.http.conn.routing.RouteInfo.TunnelType'/><method name='isLayered' abstract='true' return='boolean'/><method name='isSecure' abstract='true' return='boolean'/><method name='isTunnelled' abstract='true' return='boolean'/></interface></package><package name='org.apache.http.conn.scheme'><class name='PlainSocketFactory' final='true' extends='java.lang.Object'><implements name='org.apache.http.conn.scheme.SocketFactory'/><constructor name='PlainSocketFactory' type='org.apache.http.conn.scheme.PlainSocketFactory'><parameter name='nameResolver' type='org.apache.http.conn.scheme.HostNameResolver'/></constructor><constructor name='PlainSocketFactory' type='org.apache.http.conn.scheme.PlainSocketFactory'/><method name='connectSocket' return='java.net.Socket'><parameter name='sock' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'/><method name='getSocketFactory' static='true' return='org.apache.http.conn.scheme.PlainSocketFactory'/><method name='isSecure' final='true' return='boolean'><parameter name='sock' type='java.net.Socket'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></class><class name='Scheme' final='true' extends='java.lang.Object'><constructor name='Scheme' type='org.apache.http.conn.scheme.Scheme'><parameter name='name' type='java.lang.String'/><parameter name='factory' type='org.apache.http.conn.scheme.SocketFactory'/><parameter name='port' type='int'/></constructor><method name='equals' final='true' return='boolean'><parameter name='obj' type='java.lang.Object'/></method><method name='getDefaultPort' final='true' return='int'/><method name='getName' final='true' return='java.lang.String'/><method name='getSocketFactory' final='true' return='org.apache.http.conn.scheme.SocketFactory'/><method name='isLayered' final='true' return='boolean'/><method name='resolvePort' final='true' return='int'><parameter name='port' type='int'/></method><method name='toString' final='true' return='java.lang.String'/></class><class name='SchemeRegistry' final='true' extends='java.lang.Object'><constructor name='SchemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry'/><method name='get' final='true' synchronized='true' return='org.apache.http.conn.scheme.Scheme'><parameter name='name' type='java.lang.String'/></method><method name='getScheme' final='true' synchronized='true' return='org.apache.http.conn.scheme.Scheme'><parameter name='name' type='java.lang.String'/></method><method name='getScheme' final='true' synchronized='true' return='org.apache.http.conn.scheme.Scheme'><parameter name='host' type='org.apache.http.HttpHost'/></method><method name='getSchemeNames' final='true' synchronized='true' return='java.util.List&lt;java.lang.String&gt;'/><method name='register' final='true' synchronized='true' return='org.apache.http.conn.scheme.Scheme'><parameter name='sch' type='org.apache.http.conn.scheme.Scheme'/></method><method name='setItems' synchronized='true'><parameter name='map' type='java.util.Map&lt;java.lang.String, org.apache.http.conn.scheme.Scheme&gt;'/></method><method name='unregister' final='true' synchronized='true' return='org.apache.http.conn.scheme.Scheme'><parameter name='name' type='java.lang.String'/></method></class><interface name='HostNameResolver' abstract='true'><method name='resolve' abstract='true' return='java.net.InetAddress'><parameter name='hostname' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='LayeredSocketFactory' abstract='true'><implements name='org.apache.http.conn.scheme.SocketFactory'/><method name='createSocket' abstract='true' return='java.net.Socket'><parameter name='socket' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='autoClose' type='boolean'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method></interface><interface name='SocketFactory' abstract='true'><method name='connectSocket' abstract='true' return='java.net.Socket'><parameter name='sock' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='ConnectTimeoutException' type='org.apache.http.conn.ConnectTimeoutException'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='createSocket' abstract='true' return='java.net.Socket'><exception name='IOException' type='java.io.IOException'/></method><method name='isSecure' abstract='true' return='boolean'><parameter name='sock' type='java.net.Socket'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method></interface></package><package name='org.apache.http.conn.ssl'><class name='AbstractVerifier' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.conn.ssl.X509HostnameVerifier'/><constructor name='AbstractVerifier' type='org.apache.http.conn.ssl.AbstractVerifier'/><method name='acceptableCountryWildcard' static='true' return='boolean'><parameter name='cn' type='java.lang.String'/></method><method name='countDots' static='true' return='int'><parameter name='s' type='java.lang.String'/></method><method name='getCNs' static='true' return='java.lang.String[]'><parameter name='cert' type='java.security.cert.X509Certificate'/></method><method name='getDNSSubjectAlts' static='true' return='java.lang.String[]'><parameter name='cert' type='java.security.cert.X509Certificate'/></method><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='ssl' type='javax.net.ssl.SSLSocket'/><exception name='IOException' type='java.io.IOException'/></method><method name='verify' final='true' return='boolean'><parameter name='host' type='java.lang.String'/><parameter name='session' type='javax.net.ssl.SSLSession'/></method><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='cert' type='java.security.cert.X509Certificate'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='cns' type='java.lang.String[]'/><parameter name='subjectAlts' type='java.lang.String[]'/><parameter name='strictWithSubDomains' type='boolean'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method></class><class name='AllowAllHostnameVerifier' extends='org.apache.http.conn.ssl.AbstractVerifier'><constructor name='AllowAllHostnameVerifier' type='org.apache.http.conn.ssl.AllowAllHostnameVerifier'/><method name='toString' final='true' return='java.lang.String'/><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='cns' type='java.lang.String[]'/><parameter name='subjectAlts' type='java.lang.String[]'/></method></class><class name='BrowserCompatHostnameVerifier' extends='org.apache.http.conn.ssl.AbstractVerifier'><constructor name='BrowserCompatHostnameVerifier' type='org.apache.http.conn.ssl.BrowserCompatHostnameVerifier'/><method name='toString' final='true' return='java.lang.String'/><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='cns' type='java.lang.String[]'/><parameter name='subjectAlts' type='java.lang.String[]'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method></class><class name='SSLSocketFactory' extends='java.lang.Object'><implements name='org.apache.http.conn.scheme.LayeredSocketFactory'/><constructor name='SSLSocketFactory' type='org.apache.http.conn.ssl.SSLSocketFactory'><parameter name='algorithm' type='java.lang.String'/><parameter name='keystore' type='java.security.KeyStore'/><parameter name='keystorePassword' type='java.lang.String'/><parameter name='truststore' type='java.security.KeyStore'/><parameter name='random' type='java.security.SecureRandom'/><parameter name='nameResolver' type='org.apache.http.conn.scheme.HostNameResolver'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></constructor><constructor name='SSLSocketFactory' type='org.apache.http.conn.ssl.SSLSocketFactory'><parameter name='keystore' type='java.security.KeyStore'/><parameter name='keystorePassword' type='java.lang.String'/><parameter name='truststore' type='java.security.KeyStore'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></constructor><constructor name='SSLSocketFactory' type='org.apache.http.conn.ssl.SSLSocketFactory'><parameter name='keystore' type='java.security.KeyStore'/><parameter name='keystorePassword' type='java.lang.String'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></constructor><constructor name='SSLSocketFactory' type='org.apache.http.conn.ssl.SSLSocketFactory'><parameter name='truststore' type='java.security.KeyStore'/><exception name='KeyManagementException' type='java.security.KeyManagementException'/><exception name='KeyStoreException' type='java.security.KeyStoreException'/><exception name='NoSuchAlgorithmException' type='java.security.NoSuchAlgorithmException'/><exception name='UnrecoverableKeyException' type='java.security.UnrecoverableKeyException'/></constructor><field name='ALLOW_ALL_HOSTNAME_VERIFIER' final='true' static='true' type='org.apache.http.conn.ssl.X509HostnameVerifier'/><field name='BROWSER_COMPATIBLE_HOSTNAME_VERIFIER' final='true' static='true' type='org.apache.http.conn.ssl.X509HostnameVerifier'/><field name='SSL' final='true' static='true' value='&quot;SSL&quot;' type='java.lang.String'/><field name='SSLV2' final='true' static='true' value='&quot;SSLv2&quot;' type='java.lang.String'/><field name='STRICT_HOSTNAME_VERIFIER' final='true' static='true' type='org.apache.http.conn.ssl.X509HostnameVerifier'/><field name='TLS' final='true' static='true' value='&quot;TLS&quot;' type='java.lang.String'/><method name='connectSocket' return='java.net.Socket'><parameter name='sock' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='localAddress' type='java.net.InetAddress'/><parameter name='localPort' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><exception name='IOException' type='java.io.IOException'/></method><method name='createSocket' return='java.net.Socket'><parameter name='socket' type='java.net.Socket'/><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='autoClose' type='boolean'/><exception name='IOException' type='java.io.IOException'/><exception name='UnknownHostException' type='java.net.UnknownHostException'/></method><method name='getHostnameVerifier' return='org.apache.http.conn.ssl.X509HostnameVerifier'/><method name='getSocketFactory' static='true' return='org.apache.http.conn.ssl.SSLSocketFactory'/><method name='isSecure' return='boolean'><parameter name='sock' type='java.net.Socket'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='setHostnameVerifier'><parameter name='hostnameVerifier' type='org.apache.http.conn.ssl.X509HostnameVerifier'/></method></class><class name='StrictHostnameVerifier' extends='org.apache.http.conn.ssl.AbstractVerifier'><constructor name='StrictHostnameVerifier' type='org.apache.http.conn.ssl.StrictHostnameVerifier'/><method name='toString' final='true' return='java.lang.String'/><method name='verify' final='true'><parameter name='host' type='java.lang.String'/><parameter name='cns' type='java.lang.String[]'/><parameter name='subjectAlts' type='java.lang.String[]'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method></class><interface name='X509HostnameVerifier' abstract='true'><implements name='javax.net.ssl.HostnameVerifier'/><method name='verify' abstract='true' return='boolean'><parameter name='host' type='java.lang.String'/><parameter name='session' type='javax.net.ssl.SSLSession'/></method><method name='verify' abstract='true'><parameter name='host' type='java.lang.String'/><parameter name='ssl' type='javax.net.ssl.SSLSocket'/><exception name='IOException' type='java.io.IOException'/></method><method name='verify' abstract='true'><parameter name='host' type='java.lang.String'/><parameter name='cert' type='java.security.cert.X509Certificate'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method><method name='verify' abstract='true'><parameter name='host' type='java.lang.String'/><parameter name='cns' type='java.lang.String[]'/><parameter name='subjectAlts' type='java.lang.String[]'/><exception name='SSLException' type='javax.net.ssl.SSLException'/></method></interface></package><package name='org.apache.http.conn.util'><class name='InetAddressUtils' extends='java.lang.Object'><method name='isIPv4Address' static='true' return='boolean'><parameter name='input' type='java.lang.String'/></method><method name='isIPv6Address' static='true' return='boolean'><parameter name='input' type='java.lang.String'/></method><method name='isIPv6HexCompressedAddress' static='true' return='boolean'><parameter name='input' type='java.lang.String'/></method><method name='isIPv6StdAddress' static='true' return='boolean'><parameter name='input' type='java.lang.String'/></method></class></package><package name='org.apache.http.cookie'><class name='CookieIdentityComparator' extends='java.lang.Object'><implements name='java.util.Comparator'/><implements name='java.io.Serializable'/><constructor name='CookieIdentityComparator' type='org.apache.http.cookie.CookieIdentityComparator'/><method name='compare' return='int'><parameter name='c1' type='org.apache.http.cookie.Cookie'/><parameter name='c2' type='org.apache.http.cookie.Cookie'/></method></class><class name='CookieOrigin' final='true' extends='java.lang.Object'><constructor name='CookieOrigin' type='org.apache.http.cookie.CookieOrigin'><parameter name='host' type='java.lang.String'/><parameter name='port' type='int'/><parameter name='path' type='java.lang.String'/><parameter name='secure' type='boolean'/></constructor><method name='getHost' return='java.lang.String'/><method name='getPath' return='java.lang.String'/><method name='getPort' return='int'/><method name='isSecure' return='boolean'/></class><class name='CookiePathComparator' extends='java.lang.Object'><implements name='java.util.Comparator'/><implements name='java.io.Serializable'/><constructor name='CookiePathComparator' type='org.apache.http.cookie.CookiePathComparator'/><method name='compare' return='int'><parameter name='c1' type='org.apache.http.cookie.Cookie'/><parameter name='c2' type='org.apache.http.cookie.Cookie'/></method></class><class name='CookieSpecRegistry' final='true' extends='java.lang.Object'><constructor name='CookieSpecRegistry' type='org.apache.http.cookie.CookieSpecRegistry'/><method name='getCookieSpec' synchronized='true' return='org.apache.http.cookie.CookieSpec'><parameter name='name' type='java.lang.String'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getCookieSpec' synchronized='true' return='org.apache.http.cookie.CookieSpec'><parameter name='name' type='java.lang.String'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getSpecNames' synchronized='true' return='java.util.List&lt;java.lang.String&gt;'/><method name='register' synchronized='true'><parameter name='name' type='java.lang.String'/><parameter name='factory' type='org.apache.http.cookie.CookieSpecFactory'/></method><method name='setItems' synchronized='true'><parameter name='map' type='java.util.Map&lt;java.lang.String, org.apache.http.cookie.CookieSpecFactory&gt;'/></method><method name='unregister' synchronized='true'><parameter name='id' type='java.lang.String'/></method></class><class name='MalformedCookieException' extends='org.apache.http.ProtocolException'><constructor name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/><constructor name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><interface name='ClientCookie' abstract='true'><implements name='org.apache.http.cookie.Cookie'/><field name='COMMENTURL_ATTR' final='true' static='true' value='&quot;commenturl&quot;' type='java.lang.String'/><field name='COMMENT_ATTR' final='true' static='true' value='&quot;comment&quot;' type='java.lang.String'/><field name='DISCARD_ATTR' final='true' static='true' value='&quot;discard&quot;' type='java.lang.String'/><field name='DOMAIN_ATTR' final='true' static='true' value='&quot;domain&quot;' type='java.lang.String'/><field name='EXPIRES_ATTR' final='true' static='true' value='&quot;expires&quot;' type='java.lang.String'/><field name='MAX_AGE_ATTR' final='true' static='true' value='&quot;max-age&quot;' type='java.lang.String'/><field name='PATH_ATTR' final='true' static='true' value='&quot;path&quot;' type='java.lang.String'/><field name='PORT_ATTR' final='true' static='true' value='&quot;port&quot;' type='java.lang.String'/><field name='SECURE_ATTR' final='true' static='true' value='&quot;secure&quot;' type='java.lang.String'/><field name='VERSION_ATTR' final='true' static='true' value='&quot;version&quot;' type='java.lang.String'/><method name='containsAttribute' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getAttribute' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method></interface><interface name='Cookie' abstract='true'><method name='getComment' abstract='true' return='java.lang.String'/><method name='getCommentURL' abstract='true' return='java.lang.String'/><method name='getDomain' abstract='true' return='java.lang.String'/><method name='getExpiryDate' abstract='true' return='java.util.Date'/><method name='getName' abstract='true' return='java.lang.String'/><method name='getPath' abstract='true' return='java.lang.String'/><method name='getPorts' abstract='true' return='int[]'/><method name='getValue' abstract='true' return='java.lang.String'/><method name='getVersion' abstract='true' return='int'/><method name='isExpired' abstract='true' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='isPersistent' abstract='true' return='boolean'/><method name='isSecure' abstract='true' return='boolean'/></interface><interface name='CookieAttributeHandler' abstract='true'><method name='match' abstract='true' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse' abstract='true'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate' abstract='true'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></interface><interface name='CookieSpec' abstract='true'><method name='formatCookies' abstract='true' return='java.util.List&lt;org.apache.http.Header&gt;'><parameter name='cookies' type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></method><method name='getVersion' abstract='true' return='int'/><method name='getVersionHeader' abstract='true' return='org.apache.http.Header'/><method name='match' abstract='true' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse' abstract='true' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='header' type='org.apache.http.Header'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate' abstract='true'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></interface><interface name='CookieSpecFactory' abstract='true'><method name='newInstance' abstract='true' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></interface><interface name='SM' abstract='true'><field name='COOKIE' final='true' static='true' value='&quot;Cookie&quot;' type='java.lang.String'/><field name='COOKIE2' final='true' static='true' value='&quot;Cookie2&quot;' type='java.lang.String'/><field name='SET_COOKIE' final='true' static='true' value='&quot;Set-Cookie&quot;' type='java.lang.String'/><field name='SET_COOKIE2' final='true' static='true' value='&quot;Set-Cookie2&quot;' type='java.lang.String'/></interface><interface name='SetCookie' abstract='true'><implements name='org.apache.http.cookie.Cookie'/><method name='setComment' abstract='true'><parameter name='comment' type='java.lang.String'/></method><method name='setDomain' abstract='true'><parameter name='domain' type='java.lang.String'/></method><method name='setExpiryDate' abstract='true'><parameter name='expiryDate' type='java.util.Date'/></method><method name='setPath' abstract='true'><parameter name='path' type='java.lang.String'/></method><method name='setSecure' abstract='true'><parameter name='secure' type='boolean'/></method><method name='setValue' abstract='true'><parameter name='value' type='java.lang.String'/></method><method name='setVersion' abstract='true'><parameter name='version' type='int'/></method></interface><interface name='SetCookie2' abstract='true'><implements name='org.apache.http.cookie.SetCookie'/><method name='setCommentURL' abstract='true'><parameter name='commentURL' type='java.lang.String'/></method><method name='setDiscard' abstract='true'><parameter name='discard' type='boolean'/></method><method name='setPorts' abstract='true'><parameter name='ports' type='int[]'/></method></interface></package><package name='org.apache.http.cookie.params'><class name='CookieSpecParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='CookieSpecParamBean' type='org.apache.http.cookie.params.CookieSpecParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setDatePatterns'><parameter name='patterns' type='java.util.Collection&lt;java.lang.String&gt;'/></method><method name='setSingleHeader'><parameter name='singleHeader' type='boolean'/></method></class><interface name='CookieSpecPNames' abstract='true'><field name='DATE_PATTERNS' final='true' static='true' value='&quot;http.protocol.cookie-datepatterns&quot;' type='java.lang.String'/><field name='SINGLE_COOKIE_HEADER' final='true' static='true' value='&quot;http.protocol.single-cookie-header&quot;' type='java.lang.String'/></interface></package><package name='org.apache.http.entity'><class name='AbstractHttpEntity' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.HttpEntity'/><constructor name='AbstractHttpEntity' type='org.apache.http.entity.AbstractHttpEntity' visibility='protected'/><field name='chunked' type='boolean' visibility='protected'/><field name='contentEncoding' type='org.apache.http.Header' visibility='protected'/><field name='contentType' type='org.apache.http.Header' visibility='protected'/><method name='consumeContent'><exception name='IOException' type='java.io.IOException'/><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='getContentEncoding' return='org.apache.http.Header'/><method name='getContentType' return='org.apache.http.Header'/><method name='isChunked' return='boolean'/><method name='setChunked'><parameter name='b' type='boolean'/></method><method name='setContentEncoding'><parameter name='contentEncoding' type='org.apache.http.Header'/></method><method name='setContentEncoding'><parameter name='ceString' type='java.lang.String'/></method><method name='setContentType'><parameter name='contentType' type='org.apache.http.Header'/></method><method name='setContentType'><parameter name='ctString' type='java.lang.String'/></method></class><class name='BasicHttpEntity' extends='org.apache.http.entity.AbstractHttpEntity'><constructor name='BasicHttpEntity' type='org.apache.http.entity.BasicHttpEntity'/><method name='getContent' return='java.io.InputStream'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='setContent'><parameter name='instream' type='java.io.InputStream'/></method><method name='setContentLength'><parameter name='len' type='long'/></method><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='BufferedHttpEntity' extends='org.apache.http.entity.HttpEntityWrapper'><constructor name='BufferedHttpEntity' type='org.apache.http.entity.BufferedHttpEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='IOException' type='java.io.IOException'/></constructor></class><class name='ByteArrayEntity' extends='org.apache.http.entity.AbstractHttpEntity'><implements name='java.lang.Cloneable'/><constructor name='ByteArrayEntity' type='org.apache.http.entity.ByteArrayEntity'><parameter name='b' type='byte[]'/></constructor><field name='content' final='true' value='null' type='byte[]' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getContent' return='java.io.InputStream'/><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='EntityTemplate' extends='org.apache.http.entity.AbstractHttpEntity'><constructor name='EntityTemplate' type='org.apache.http.entity.EntityTemplate'><parameter name='contentproducer' type='org.apache.http.entity.ContentProducer'/></constructor><method name='getContent' return='java.io.InputStream'/><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='FileEntity' extends='org.apache.http.entity.AbstractHttpEntity'><implements name='java.lang.Cloneable'/><constructor name='FileEntity' type='org.apache.http.entity.FileEntity'><parameter name='file' type='java.io.File'/><parameter name='contentType' type='java.lang.String'/></constructor><field name='file' final='true' type='java.io.File' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getContent' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpEntityWrapper' extends='java.lang.Object'><implements name='org.apache.http.HttpEntity'/><constructor name='HttpEntityWrapper' type='org.apache.http.entity.HttpEntityWrapper'><parameter name='wrapped' type='org.apache.http.HttpEntity'/></constructor><field name='wrappedEntity' type='org.apache.http.HttpEntity' visibility='protected'/><method name='consumeContent'><exception name='IOException' type='java.io.IOException'/></method><method name='getContent' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getContentEncoding' return='org.apache.http.Header'/><method name='getContentLength' return='long'/><method name='getContentType' return='org.apache.http.Header'/><method name='isChunked' return='boolean'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='InputStreamEntity' extends='org.apache.http.entity.AbstractHttpEntity'><constructor name='InputStreamEntity' type='org.apache.http.entity.InputStreamEntity'><parameter name='instream' type='java.io.InputStream'/><parameter name='length' type='long'/></constructor><method name='getContent' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='SerializableEntity' extends='org.apache.http.entity.AbstractHttpEntity'><constructor name='SerializableEntity' type='org.apache.http.entity.SerializableEntity'><parameter name='ser' type='java.io.Serializable'/><parameter name='bufferize' type='boolean'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='getContent' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='StringEntity' extends='org.apache.http.entity.AbstractHttpEntity'><implements name='java.lang.Cloneable'/><constructor name='StringEntity' type='org.apache.http.entity.StringEntity'><parameter name='s' type='java.lang.String'/><parameter name='charset' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><constructor name='StringEntity' type='org.apache.http.entity.StringEntity'><parameter name='s' type='java.lang.String'/><exception name='UnsupportedEncodingException' type='java.io.UnsupportedEncodingException'/></constructor><field name='content' final='true' value='null' type='byte[]' visibility='protected'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getContent' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method name='getContentLength' return='long'/><method name='isRepeatable' return='boolean'/><method name='isStreaming' return='boolean'/><method name='writeTo'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></class><interface name='ContentLengthStrategy' abstract='true'><field name='CHUNKED' final='true' static='true' value='-2' type='int'/><field name='IDENTITY' final='true' static='true' value='-1' type='int'/><method name='determineLength' abstract='true' return='long'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></interface><interface name='ContentProducer' abstract='true'><method name='writeTo' abstract='true'><parameter name='outstream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method></interface></package><package name='org.apache.http.impl'><class name='AbstractHttpClientConnection' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.HttpClientConnection'/><constructor name='AbstractHttpClientConnection' type='org.apache.http.impl.AbstractHttpClientConnection'/><method name='assertOpen' abstract='true' visibility='protected'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='createEntityDeserializer' visibility='protected' return='org.apache.http.impl.entity.EntityDeserializer'/><method name='createEntitySerializer' visibility='protected' return='org.apache.http.impl.entity.EntitySerializer'/><method name='createHttpResponseFactory' visibility='protected' return='org.apache.http.HttpResponseFactory'/><method name='createRequestWriter' visibility='protected' return='org.apache.http.io.HttpMessageWriter'><parameter name='buffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='createResponseParser' visibility='protected' return='org.apache.http.io.HttpMessageParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='responseFactory' type='org.apache.http.HttpResponseFactory'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='doFlush' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' return='org.apache.http.HttpConnectionMetrics'/><method name='init' visibility='protected'><parameter name='inbuffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='outbuffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='isResponseAvailable' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='isStale' return='boolean'/><method name='receiveResponseEntity'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveResponseHeader' return='org.apache.http.HttpResponse'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendRequestEntity'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendRequestHeader'><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='AbstractHttpServerConnection' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.HttpServerConnection'/><constructor name='AbstractHttpServerConnection' type='org.apache.http.impl.AbstractHttpServerConnection'/><method name='assertOpen' abstract='true' visibility='protected'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='createEntityDeserializer' visibility='protected' return='org.apache.http.impl.entity.EntityDeserializer'/><method name='createEntitySerializer' visibility='protected' return='org.apache.http.impl.entity.EntitySerializer'/><method name='createHttpRequestFactory' visibility='protected' return='org.apache.http.HttpRequestFactory'/><method name='createRequestParser' visibility='protected' return='org.apache.http.io.HttpMessageParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='requestFactory' type='org.apache.http.HttpRequestFactory'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='createResponseWriter' visibility='protected' return='org.apache.http.io.HttpMessageWriter'><parameter name='buffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='doFlush' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' return='org.apache.http.HttpConnectionMetrics'/><method name='init' visibility='protected'><parameter name='inbuffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='outbuffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='isStale' return='boolean'/><method name='receiveRequestEntity'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveRequestHeader' return='org.apache.http.HttpRequest'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendResponseEntity'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendResponseHeader'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DefaultConnectionReuseStrategy' extends='java.lang.Object'><implements name='org.apache.http.ConnectionReuseStrategy'/><constructor name='DefaultConnectionReuseStrategy' type='org.apache.http.impl.DefaultConnectionReuseStrategy'/><method name='createTokenIterator' visibility='protected' return='org.apache.http.TokenIterator'><parameter name='hit' type='org.apache.http.HeaderIterator'/></method><method name='keepAlive' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultHttpClientConnection' extends='org.apache.http.impl.SocketHttpClientConnection'><constructor name='DefaultHttpClientConnection' type='org.apache.http.impl.DefaultHttpClientConnection'/><method name='bind'><parameter name='socket' type='java.net.Socket'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DefaultHttpRequestFactory' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestFactory'/><constructor name='DefaultHttpRequestFactory' type='org.apache.http.impl.DefaultHttpRequestFactory'/><method name='newHttpRequest' return='org.apache.http.HttpRequest'><parameter name='requestline' type='org.apache.http.RequestLine'/><exception name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'/></method><method name='newHttpRequest' return='org.apache.http.HttpRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><exception name='MethodNotSupportedException' type='org.apache.http.MethodNotSupportedException'/></method></class><class name='DefaultHttpResponseFactory' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseFactory'/><constructor name='DefaultHttpResponseFactory' type='org.apache.http.impl.DefaultHttpResponseFactory'><parameter name='catalog' type='org.apache.http.ReasonPhraseCatalog'/></constructor><constructor name='DefaultHttpResponseFactory' type='org.apache.http.impl.DefaultHttpResponseFactory'/><field name='reasonCatalog' final='true' type='org.apache.http.ReasonPhraseCatalog' visibility='protected'/><method name='determineLocale' visibility='protected' return='java.util.Locale'><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='newHttpResponse' return='org.apache.http.HttpResponse'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='status' type='int'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='newHttpResponse' return='org.apache.http.HttpResponse'><parameter name='statusline' type='org.apache.http.StatusLine'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultHttpServerConnection' extends='org.apache.http.impl.SocketHttpServerConnection'><constructor name='DefaultHttpServerConnection' type='org.apache.http.impl.DefaultHttpServerConnection'/><method name='bind'><parameter name='socket' type='java.net.Socket'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='EnglishReasonPhraseCatalog' extends='java.lang.Object'><implements name='org.apache.http.ReasonPhraseCatalog'/><constructor name='EnglishReasonPhraseCatalog' type='org.apache.http.impl.EnglishReasonPhraseCatalog' visibility='protected'/><field name='INSTANCE' final='true' static='true' type='org.apache.http.impl.EnglishReasonPhraseCatalog'/><method name='getReason' return='java.lang.String'><parameter name='status' type='int'/><parameter name='loc' type='java.util.Locale'/></method></class><class name='HttpConnectionMetricsImpl' extends='java.lang.Object'><implements name='org.apache.http.HttpConnectionMetrics'/><constructor name='HttpConnectionMetricsImpl' type='org.apache.http.impl.HttpConnectionMetricsImpl'><parameter name='inTransportMetric' type='org.apache.http.io.HttpTransportMetrics'/><parameter name='outTransportMetric' type='org.apache.http.io.HttpTransportMetrics'/></constructor><field name='RECEIVED_BYTES_COUNT' final='true' static='true' value='&quot;http.received-bytes-count&quot;' type='java.lang.String'/><field name='REQUEST_COUNT' final='true' static='true' value='&quot;http.request-count&quot;' type='java.lang.String'/><field name='RESPONSE_COUNT' final='true' static='true' value='&quot;http.response-count&quot;' type='java.lang.String'/><field name='SENT_BYTES_COUNT' final='true' static='true' value='&quot;http.sent-bytes-count&quot;' type='java.lang.String'/><method name='getMetric' return='java.lang.Object'><parameter name='metricName' type='java.lang.String'/></method><method name='getReceivedBytesCount' return='long'/><method name='getRequestCount' return='long'/><method name='getResponseCount' return='long'/><method name='getSentBytesCount' return='long'/><method name='incrementRequestCount'/><method name='incrementResponseCount'/><method name='reset'/><method name='setMetric'><parameter name='metricName' type='java.lang.String'/><parameter name='obj' type='java.lang.Object'/></method></class><class name='NoConnectionReuseStrategy' extends='java.lang.Object'><implements name='org.apache.http.ConnectionReuseStrategy'/><constructor name='NoConnectionReuseStrategy' type='org.apache.http.impl.NoConnectionReuseStrategy'/><method name='keepAlive' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='SocketHttpClientConnection' extends='org.apache.http.impl.AbstractHttpClientConnection'><implements name='org.apache.http.HttpInetConnection'/><constructor name='SocketHttpClientConnection' type='org.apache.http.impl.SocketHttpClientConnection'/><method name='assertNotOpen' visibility='protected'/><method name='assertOpen' visibility='protected'/><method name='bind' visibility='protected'><parameter name='socket' type='java.net.Socket'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='createSessionInputBuffer' visibility='protected' return='org.apache.http.io.SessionInputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='createSessionOutputBuffer' visibility='protected' return='org.apache.http.io.SessionOutputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='getLocalAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getRemoteAddress' return='java.net.InetAddress'/><method name='getRemotePort' return='int'/><method name='getSocket' visibility='protected' return='java.net.Socket'/><method name='getSocketTimeout' return='int'/><method name='isOpen' return='boolean'/><method name='setSocketTimeout'><parameter name='timeout' type='int'/></method><method name='shutdown'><exception name='IOException' type='java.io.IOException'/></method></class><class name='SocketHttpServerConnection' extends='org.apache.http.impl.AbstractHttpServerConnection'><implements name='org.apache.http.HttpInetConnection'/><constructor name='SocketHttpServerConnection' type='org.apache.http.impl.SocketHttpServerConnection'/><method name='assertNotOpen' visibility='protected'/><method name='assertOpen' visibility='protected'/><method name='bind' visibility='protected'><parameter name='socket' type='java.net.Socket'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='createHttpDataReceiver' visibility='protected' return='org.apache.http.io.SessionInputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='createHttpDataTransmitter' visibility='protected' return='org.apache.http.io.SessionOutputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='getLocalAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getRemoteAddress' return='java.net.InetAddress'/><method name='getRemotePort' return='int'/><method name='getSocket' visibility='protected' return='java.net.Socket'/><method name='getSocketTimeout' return='int'/><method name='isOpen' return='boolean'/><method name='setSocketTimeout'><parameter name='timeout' type='int'/></method><method name='shutdown'><exception name='IOException' type='java.io.IOException'/></method></class></package><package name='org.apache.http.impl.auth'><class name='AuthSchemeBase' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.auth.AuthScheme'/><constructor name='AuthSchemeBase' type='org.apache.http.impl.auth.AuthSchemeBase'/><method name='isProxy' return='boolean'/><method name='parseChallenge' abstract='true' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='pos' type='int'/><parameter name='len' type='int'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method><method name='processChallenge'><parameter name='header' type='org.apache.http.Header'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method></class><class name='BasicScheme' extends='org.apache.http.impl.auth.RFC2617Scheme'><constructor name='BasicScheme' type='org.apache.http.impl.auth.BasicScheme'/><method name='authenticate' return='org.apache.http.Header'><parameter name='credentials' type='org.apache.http.auth.Credentials'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method><method name='authenticate' static='true' return='org.apache.http.Header'><parameter name='credentials' type='org.apache.http.auth.Credentials'/><parameter name='charset' type='java.lang.String'/><parameter name='proxy' type='boolean'/></method><method name='getSchemeName' return='java.lang.String'/><method name='isComplete' return='boolean'/><method name='isConnectionBased' return='boolean'/></class><class name='BasicSchemeFactory' extends='java.lang.Object'><implements name='org.apache.http.auth.AuthSchemeFactory'/><constructor name='BasicSchemeFactory' type='org.apache.http.impl.auth.BasicSchemeFactory'/><method name='newInstance' return='org.apache.http.auth.AuthScheme'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='DigestScheme' extends='org.apache.http.impl.auth.RFC2617Scheme'><constructor name='DigestScheme' type='org.apache.http.impl.auth.DigestScheme'/><method name='authenticate' return='org.apache.http.Header'><parameter name='credentials' type='org.apache.http.auth.Credentials'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method><method name='createCnonce' static='true' return='java.lang.String'/><method name='getSchemeName' return='java.lang.String'/><method name='isComplete' return='boolean'/><method name='isConnectionBased' return='boolean'/><method name='overrideParamter'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method></class><class name='DigestSchemeFactory' extends='java.lang.Object'><implements name='org.apache.http.auth.AuthSchemeFactory'/><constructor name='DigestSchemeFactory' type='org.apache.http.impl.auth.DigestSchemeFactory'/><method name='newInstance' return='org.apache.http.auth.AuthScheme'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='NTLMEngineException' extends='org.apache.http.auth.AuthenticationException'><constructor name='NTLMEngineException' type='org.apache.http.impl.auth.NTLMEngineException'/><constructor name='NTLMEngineException' type='org.apache.http.impl.auth.NTLMEngineException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='NTLMEngineException' type='org.apache.http.impl.auth.NTLMEngineException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class name='NTLMScheme' extends='org.apache.http.impl.auth.AuthSchemeBase'><constructor name='NTLMScheme' type='org.apache.http.impl.auth.NTLMScheme'><parameter name='engine' type='org.apache.http.impl.auth.NTLMEngine'/></constructor><method name='authenticate' return='org.apache.http.Header'><parameter name='credentials' type='org.apache.http.auth.Credentials'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method><method name='getParameter' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getRealm' return='java.lang.String'/><method name='getSchemeName' return='java.lang.String'/><method name='isComplete' return='boolean'/><method name='isConnectionBased' return='boolean'/><method name='parseChallenge' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='pos' type='int'/><parameter name='len' type='int'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method></class><class name='RFC2617Scheme' extends='org.apache.http.impl.auth.AuthSchemeBase' abstract='true'><constructor name='RFC2617Scheme' type='org.apache.http.impl.auth.RFC2617Scheme'/><method name='getParameter' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getParameters' visibility='protected' return='java.util.Map&lt;java.lang.String, java.lang.String&gt;'/><method name='getRealm' return='java.lang.String'/><method name='parseChallenge' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='pos' type='int'/><parameter name='len' type='int'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method></class><class name='UnsupportedDigestAlgorithmException' extends='java.lang.RuntimeException'><constructor name='UnsupportedDigestAlgorithmException' type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException'/><constructor name='UnsupportedDigestAlgorithmException' type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='UnsupportedDigestAlgorithmException' type='org.apache.http.impl.auth.UnsupportedDigestAlgorithmException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor></class><interface name='NTLMEngine' abstract='true'><method name='generateType1Msg' abstract='true' return='java.lang.String'><parameter name='domain' type='java.lang.String'/><parameter name='workstation' type='java.lang.String'/><exception name='NTLMEngineException' type='org.apache.http.impl.auth.NTLMEngineException'/></method><method name='generateType3Msg' abstract='true' return='java.lang.String'><parameter name='username' type='java.lang.String'/><parameter name='password' type='java.lang.String'/><parameter name='domain' type='java.lang.String'/><parameter name='workstation' type='java.lang.String'/><parameter name='challenge' type='java.lang.String'/><exception name='NTLMEngineException' type='org.apache.http.impl.auth.NTLMEngineException'/></method></interface></package><package name='org.apache.http.impl.client'><class name='AbstractAuthenticationHandler' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.client.AuthenticationHandler'/><constructor name='AbstractAuthenticationHandler' type='org.apache.http.impl.client.AbstractAuthenticationHandler'/><method name='getAuthPreferences' visibility='protected' return='java.util.List&lt;java.lang.String&gt;'/><method name='parseChallenges' visibility='protected' return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'><parameter name='headers' type='org.apache.http.Header[]'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method><method name='selectScheme' return='org.apache.http.auth.AuthScheme'><parameter name='challenges' type='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='AuthenticationException' type='org.apache.http.auth.AuthenticationException'/></method></class><class name='AbstractHttpClient' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.client.HttpClient'/><constructor name='AbstractHttpClient' type='org.apache.http.impl.client.AbstractHttpClient' visibility='protected'><parameter name='conman' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='addRequestInterceptor' synchronized='true'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/></method><method name='addRequestInterceptor' synchronized='true'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/><parameter name='index' type='int'/></method><method name='addResponseInterceptor' synchronized='true'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/></method><method name='addResponseInterceptor' synchronized='true'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/><parameter name='index' type='int'/></method><method name='clearRequestInterceptors' synchronized='true'/><method name='clearResponseInterceptors' synchronized='true'/><method name='createAuthSchemeRegistry' abstract='true' visibility='protected' return='org.apache.http.auth.AuthSchemeRegistry'/><method name='createClientConnectionManager' abstract='true' visibility='protected' return='org.apache.http.conn.ClientConnectionManager'/><method name='createClientRequestDirector' visibility='protected' return='org.apache.http.client.RequestDirector'><parameter name='requestExec' type='org.apache.http.protocol.HttpRequestExecutor'/><parameter name='conman' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='reustrat' type='org.apache.http.ConnectionReuseStrategy'/><parameter name='kastrat' type='org.apache.http.conn.ConnectionKeepAliveStrategy'/><parameter name='rouplan' type='org.apache.http.conn.routing.HttpRoutePlanner'/><parameter name='httpProcessor' type='org.apache.http.protocol.HttpProcessor'/><parameter name='retryHandler' type='org.apache.http.client.HttpRequestRetryHandler'/><parameter name='redirectHandler' type='org.apache.http.client.RedirectHandler'/><parameter name='targetAuthHandler' type='org.apache.http.client.AuthenticationHandler'/><parameter name='proxyAuthHandler' type='org.apache.http.client.AuthenticationHandler'/><parameter name='stateHandler' type='org.apache.http.client.UserTokenHandler'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='createConnectionKeepAliveStrategy' abstract='true' visibility='protected' return='org.apache.http.conn.ConnectionKeepAliveStrategy'/><method name='createConnectionReuseStrategy' abstract='true' visibility='protected' return='org.apache.http.ConnectionReuseStrategy'/><method name='createCookieSpecRegistry' abstract='true' visibility='protected' return='org.apache.http.cookie.CookieSpecRegistry'/><method name='createCookieStore' abstract='true' visibility='protected' return='org.apache.http.client.CookieStore'/><method name='createCredentialsProvider' abstract='true' visibility='protected' return='org.apache.http.client.CredentialsProvider'/><method name='createHttpContext' abstract='true' visibility='protected' return='org.apache.http.protocol.HttpContext'/><method name='createHttpParams' abstract='true' visibility='protected' return='org.apache.http.params.HttpParams'/><method name='createHttpProcessor' abstract='true' visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor'/><method name='createHttpRequestRetryHandler' abstract='true' visibility='protected' return='org.apache.http.client.HttpRequestRetryHandler'/><method name='createHttpRoutePlanner' abstract='true' visibility='protected' return='org.apache.http.conn.routing.HttpRoutePlanner'/><method name='createProxyAuthenticationHandler' abstract='true' visibility='protected' return='org.apache.http.client.AuthenticationHandler'/><method name='createRedirectHandler' abstract='true' visibility='protected' return='org.apache.http.client.RedirectHandler'/><method name='createRequestExecutor' abstract='true' visibility='protected' return='org.apache.http.protocol.HttpRequestExecutor'/><method name='createTargetAuthenticationHandler' abstract='true' visibility='protected' return='org.apache.http.client.AuthenticationHandler'/><method name='createUserTokenHandler' abstract='true' visibility='protected' return='org.apache.http.client.UserTokenHandler'/><method name='determineParams' visibility='protected' return='org.apache.http.params.HttpParams'><parameter name='req' type='org.apache.http.HttpRequest'/></method><method name='execute' final='true' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' final='true' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' final='true' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' final='true' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='T'><parameter name='request' type='org.apache.http.client.methods.HttpUriRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='T'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='responseHandler' type='org.apache.http.client.ResponseHandler&lt;? extends T&gt;'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ClientProtocolException' type='org.apache.http.client.ClientProtocolException'/><exception name='IOException' type='java.io.IOException'/></method><method name='getAuthSchemes' final='true' synchronized='true' return='org.apache.http.auth.AuthSchemeRegistry'/><method name='getConnectionKeepAliveStrategy' final='true' synchronized='true' return='org.apache.http.conn.ConnectionKeepAliveStrategy'/><method name='getConnectionManager' final='true' synchronized='true' return='org.apache.http.conn.ClientConnectionManager'/><method name='getConnectionReuseStrategy' final='true' synchronized='true' return='org.apache.http.ConnectionReuseStrategy'/><method name='getCookieSpecs' final='true' synchronized='true' return='org.apache.http.cookie.CookieSpecRegistry'/><method name='getCookieStore' final='true' synchronized='true' return='org.apache.http.client.CookieStore'/><method name='getCredentialsProvider' final='true' synchronized='true' return='org.apache.http.client.CredentialsProvider'/><method name='getHttpProcessor' final='true' synchronized='true' visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor'/><method name='getHttpRequestRetryHandler' final='true' synchronized='true' return='org.apache.http.client.HttpRequestRetryHandler'/><method name='getParams' final='true' synchronized='true' return='org.apache.http.params.HttpParams'/><method name='getProxyAuthenticationHandler' final='true' synchronized='true' return='org.apache.http.client.AuthenticationHandler'/><method name='getRedirectHandler' final='true' synchronized='true' return='org.apache.http.client.RedirectHandler'/><method name='getRequestExecutor' final='true' synchronized='true' return='org.apache.http.protocol.HttpRequestExecutor'/><method name='getRequestInterceptor' synchronized='true' return='org.apache.http.HttpRequestInterceptor'><parameter name='index' type='int'/></method><method name='getRequestInterceptorCount' synchronized='true' return='int'/><method name='getResponseInterceptor' synchronized='true' return='org.apache.http.HttpResponseInterceptor'><parameter name='index' type='int'/></method><method name='getResponseInterceptorCount' synchronized='true' return='int'/><method name='getRoutePlanner' final='true' synchronized='true' return='org.apache.http.conn.routing.HttpRoutePlanner'/><method name='getTargetAuthenticationHandler' final='true' synchronized='true' return='org.apache.http.client.AuthenticationHandler'/><method name='getUserTokenHandler' final='true' synchronized='true' return='org.apache.http.client.UserTokenHandler'/><method name='removeRequestInterceptorByClass'><parameter name='clazz' type='java.lang.Class&lt;? extends org.apache.http.HttpRequestInterceptor&gt;'/></method><method name='removeResponseInterceptorByClass'><parameter name='clazz' type='java.lang.Class&lt;? extends org.apache.http.HttpResponseInterceptor&gt;'/></method><method name='setAuthSchemes' synchronized='true'><parameter name='authSchemeRegistry' type='org.apache.http.auth.AuthSchemeRegistry'/></method><method name='setCookieSpecs' synchronized='true'><parameter name='cookieSpecRegistry' type='org.apache.http.cookie.CookieSpecRegistry'/></method><method name='setCookieStore' synchronized='true'><parameter name='cookieStore' type='org.apache.http.client.CookieStore'/></method><method name='setCredentialsProvider' synchronized='true'><parameter name='credsProvider' type='org.apache.http.client.CredentialsProvider'/></method><method name='setHttpRequestRetryHandler' synchronized='true'><parameter name='retryHandler' type='org.apache.http.client.HttpRequestRetryHandler'/></method><method name='setKeepAliveStrategy' synchronized='true'><parameter name='keepAliveStrategy' type='org.apache.http.conn.ConnectionKeepAliveStrategy'/></method><method name='setParams' synchronized='true'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setProxyAuthenticationHandler' synchronized='true'><parameter name='proxyAuthHandler' type='org.apache.http.client.AuthenticationHandler'/></method><method name='setRedirectHandler' synchronized='true'><parameter name='redirectHandler' type='org.apache.http.client.RedirectHandler'/></method><method name='setReuseStrategy' synchronized='true'><parameter name='reuseStrategy' type='org.apache.http.ConnectionReuseStrategy'/></method><method name='setRoutePlanner' synchronized='true'><parameter name='routePlanner' type='org.apache.http.conn.routing.HttpRoutePlanner'/></method><method name='setTargetAuthenticationHandler' synchronized='true'><parameter name='targetAuthHandler' type='org.apache.http.client.AuthenticationHandler'/></method><method name='setUserTokenHandler' synchronized='true'><parameter name='userTokenHandler' type='org.apache.http.client.UserTokenHandler'/></method></class><class name='BasicCookieStore' extends='java.lang.Object'><implements name='org.apache.http.client.CookieStore'/><constructor name='BasicCookieStore' type='org.apache.http.impl.client.BasicCookieStore'/><method name='addCookie' synchronized='true'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/></method><method name='addCookies' synchronized='true'><parameter name='cookies' type='org.apache.http.cookie.Cookie[]'/></method><method name='clear' synchronized='true'/><method name='clearExpired' synchronized='true' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='getCookies' synchronized='true' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></class><class name='BasicCredentialsProvider' extends='java.lang.Object'><implements name='org.apache.http.client.CredentialsProvider'/><constructor name='BasicCredentialsProvider' type='org.apache.http.impl.client.BasicCredentialsProvider'/><method name='clear' synchronized='true'/><method name='getCredentials' synchronized='true' return='org.apache.http.auth.Credentials'><parameter name='authscope' type='org.apache.http.auth.AuthScope'/></method><method name='setCredentials' synchronized='true'><parameter name='authscope' type='org.apache.http.auth.AuthScope'/><parameter name='credentials' type='org.apache.http.auth.Credentials'/></method></class><class name='BasicResponseHandler' extends='java.lang.Object'><implements name='org.apache.http.client.ResponseHandler'/><constructor name='BasicResponseHandler' type='org.apache.http.impl.client.BasicResponseHandler'/><method name='handleResponse' return='java.lang.String'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpResponseException' type='org.apache.http.client.HttpResponseException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ClientParamsStack' extends='org.apache.http.params.AbstractHttpParams'><constructor name='ClientParamsStack' type='org.apache.http.impl.client.ClientParamsStack'><parameter name='aparams' type='org.apache.http.params.HttpParams'/><parameter name='cparams' type='org.apache.http.params.HttpParams'/><parameter name='rparams' type='org.apache.http.params.HttpParams'/><parameter name='oparams' type='org.apache.http.params.HttpParams'/></constructor><constructor name='ClientParamsStack' type='org.apache.http.impl.client.ClientParamsStack'><parameter name='stack' type='org.apache.http.impl.client.ClientParamsStack'/></constructor><constructor name='ClientParamsStack' type='org.apache.http.impl.client.ClientParamsStack'><parameter name='stack' type='org.apache.http.impl.client.ClientParamsStack'/><parameter name='aparams' type='org.apache.http.params.HttpParams'/><parameter name='cparams' type='org.apache.http.params.HttpParams'/><parameter name='rparams' type='org.apache.http.params.HttpParams'/><parameter name='oparams' type='org.apache.http.params.HttpParams'/></constructor><field name='applicationParams' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/><field name='clientParams' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/><field name='overrideParams' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/><field name='requestParams' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/><method name='copy' return='org.apache.http.params.HttpParams'/><method name='getApplicationParams' final='true' return='org.apache.http.params.HttpParams'/><method name='getClientParams' final='true' return='org.apache.http.params.HttpParams'/><method name='getOverrideParams' final='true' return='org.apache.http.params.HttpParams'/><method name='getParameter' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getRequestParams' final='true' return='org.apache.http.params.HttpParams'/><method name='removeParameter' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='setParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method></class><class name='DefaultConnectionKeepAliveStrategy' extends='java.lang.Object'><implements name='org.apache.http.conn.ConnectionKeepAliveStrategy'/><constructor name='DefaultConnectionKeepAliveStrategy' type='org.apache.http.impl.client.DefaultConnectionKeepAliveStrategy'/><method name='getKeepAliveDuration' return='long'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultHttpClient' extends='org.apache.http.impl.client.AbstractHttpClient'><constructor name='DefaultHttpClient' type='org.apache.http.impl.client.DefaultHttpClient'><parameter name='conman' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><constructor name='DefaultHttpClient' type='org.apache.http.impl.client.DefaultHttpClient'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><constructor name='DefaultHttpClient' type='org.apache.http.impl.client.DefaultHttpClient'/><method name='createAuthSchemeRegistry' visibility='protected' return='org.apache.http.auth.AuthSchemeRegistry'/><method name='createClientConnectionManager' visibility='protected' return='org.apache.http.conn.ClientConnectionManager'/><method name='createConnectionKeepAliveStrategy' visibility='protected' return='org.apache.http.conn.ConnectionKeepAliveStrategy'/><method name='createConnectionReuseStrategy' visibility='protected' return='org.apache.http.ConnectionReuseStrategy'/><method name='createCookieSpecRegistry' visibility='protected' return='org.apache.http.cookie.CookieSpecRegistry'/><method name='createCookieStore' visibility='protected' return='org.apache.http.client.CookieStore'/><method name='createCredentialsProvider' visibility='protected' return='org.apache.http.client.CredentialsProvider'/><method name='createHttpContext' visibility='protected' return='org.apache.http.protocol.HttpContext'/><method name='createHttpParams' visibility='protected' return='org.apache.http.params.HttpParams'/><method name='createHttpProcessor' visibility='protected' return='org.apache.http.protocol.BasicHttpProcessor'/><method name='createHttpRequestRetryHandler' visibility='protected' return='org.apache.http.client.HttpRequestRetryHandler'/><method name='createHttpRoutePlanner' visibility='protected' return='org.apache.http.conn.routing.HttpRoutePlanner'/><method name='createProxyAuthenticationHandler' visibility='protected' return='org.apache.http.client.AuthenticationHandler'/><method name='createRedirectHandler' visibility='protected' return='org.apache.http.client.RedirectHandler'/><method name='createRequestExecutor' visibility='protected' return='org.apache.http.protocol.HttpRequestExecutor'/><method name='createTargetAuthenticationHandler' visibility='protected' return='org.apache.http.client.AuthenticationHandler'/><method name='createUserTokenHandler' visibility='protected' return='org.apache.http.client.UserTokenHandler'/></class><class name='DefaultHttpRequestRetryHandler' extends='java.lang.Object'><implements name='org.apache.http.client.HttpRequestRetryHandler'/><constructor name='DefaultHttpRequestRetryHandler' type='org.apache.http.impl.client.DefaultHttpRequestRetryHandler'><parameter name='retryCount' type='int'/><parameter name='requestSentRetryEnabled' type='boolean'/></constructor><constructor name='DefaultHttpRequestRetryHandler' type='org.apache.http.impl.client.DefaultHttpRequestRetryHandler'/><method name='getRetryCount' return='int'/><method name='isRequestSentRetryEnabled' return='boolean'/><method name='retryRequest' return='boolean'><parameter name='exception' type='java.io.IOException'/><parameter name='executionCount' type='int'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultProxyAuthenticationHandler' extends='org.apache.http.impl.client.AbstractAuthenticationHandler'><constructor name='DefaultProxyAuthenticationHandler' type='org.apache.http.impl.client.DefaultProxyAuthenticationHandler'/><method name='getChallenges' return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method><method name='isAuthenticationRequested' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultRedirectHandler' extends='java.lang.Object'><implements name='org.apache.http.client.RedirectHandler'/><constructor name='DefaultRedirectHandler' type='org.apache.http.impl.client.DefaultRedirectHandler'/><method name='getLocationURI' return='java.net.URI'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='ProtocolException' type='org.apache.http.ProtocolException'/></method><method name='isRedirectRequested' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultRequestDirector' extends='java.lang.Object'><implements name='org.apache.http.client.RequestDirector'/><constructor name='DefaultRequestDirector' type='org.apache.http.impl.client.DefaultRequestDirector'><parameter name='requestExec' type='org.apache.http.protocol.HttpRequestExecutor'/><parameter name='conman' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='reustrat' type='org.apache.http.ConnectionReuseStrategy'/><parameter name='kastrat' type='org.apache.http.conn.ConnectionKeepAliveStrategy'/><parameter name='rouplan' type='org.apache.http.conn.routing.HttpRoutePlanner'/><parameter name='httpProcessor' type='org.apache.http.protocol.HttpProcessor'/><parameter name='retryHandler' type='org.apache.http.client.HttpRequestRetryHandler'/><parameter name='redirectHandler' type='org.apache.http.client.RedirectHandler'/><parameter name='targetAuthHandler' type='org.apache.http.client.AuthenticationHandler'/><parameter name='proxyAuthHandler' type='org.apache.http.client.AuthenticationHandler'/><parameter name='userTokenHandler' type='org.apache.http.client.UserTokenHandler'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><field name='connManager' final='true' type='org.apache.http.conn.ClientConnectionManager' visibility='protected'/><field name='httpProcessor' final='true' type='org.apache.http.protocol.HttpProcessor' visibility='protected'/><field name='keepAliveStrategy' final='true' type='org.apache.http.conn.ConnectionKeepAliveStrategy' visibility='protected'/><field name='managedConn' type='org.apache.http.conn.ManagedClientConnection' visibility='protected'/><field name='params' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/><field name='redirectHandler' final='true' type='org.apache.http.client.RedirectHandler' visibility='protected'/><field name='requestExec' final='true' type='org.apache.http.protocol.HttpRequestExecutor' visibility='protected'/><field name='retryHandler' final='true' type='org.apache.http.client.HttpRequestRetryHandler' visibility='protected'/><field name='reuseStrategy' final='true' type='org.apache.http.ConnectionReuseStrategy' visibility='protected'/><field name='routePlanner' final='true' type='org.apache.http.conn.routing.HttpRoutePlanner' visibility='protected'/><method name='createConnectRequest' visibility='protected' return='org.apache.http.HttpRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='createTunnelToProxy' visibility='protected' return='boolean'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='hop' type='int'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='createTunnelToTarget' visibility='protected' return='boolean'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='determineRoute' visibility='protected' return='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method><method name='establishRoute' visibility='protected'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='org.apache.http.HttpResponse'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='handleResponse' visibility='protected' return='org.apache.http.impl.client.RoutedRequest'><parameter name='roureq' type='org.apache.http.impl.client.RoutedRequest'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='releaseConnection' visibility='protected'/><method name='rewriteRequestURI' visibility='protected'><parameter name='request' type='org.apache.http.impl.client.RequestWrapper'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><exception name='ProtocolException' type='org.apache.http.ProtocolException'/></method></class><class name='DefaultTargetAuthenticationHandler' extends='org.apache.http.impl.client.AbstractAuthenticationHandler'><constructor name='DefaultTargetAuthenticationHandler' type='org.apache.http.impl.client.DefaultTargetAuthenticationHandler'/><method name='getChallenges' return='java.util.Map&lt;java.lang.String, org.apache.http.Header&gt;'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='MalformedChallengeException' type='org.apache.http.auth.MalformedChallengeException'/></method><method name='isAuthenticationRequested' return='boolean'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='DefaultUserTokenHandler' extends='java.lang.Object'><implements name='org.apache.http.client.UserTokenHandler'/><constructor name='DefaultUserTokenHandler' type='org.apache.http.impl.client.DefaultUserTokenHandler'/><method name='getUserToken' return='java.lang.Object'><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method></class><class name='EntityEnclosingRequestWrapper' extends='org.apache.http.impl.client.RequestWrapper'><implements name='org.apache.http.HttpEntityEnclosingRequest'/><constructor name='EntityEnclosingRequestWrapper' type='org.apache.http.impl.client.EntityEnclosingRequestWrapper'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='ProtocolException' type='org.apache.http.ProtocolException'/></constructor><method name='expectContinue' return='boolean'/><method name='getEntity' return='org.apache.http.HttpEntity'/><method name='setEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/></method></class><class name='RedirectLocations' extends='java.lang.Object'><constructor name='RedirectLocations' type='org.apache.http.impl.client.RedirectLocations'/><method name='add'><parameter name='uri' type='java.net.URI'/></method><method name='contains' return='boolean'><parameter name='uri' type='java.net.URI'/></method><method name='remove' return='boolean'><parameter name='uri' type='java.net.URI'/></method></class><class name='RequestWrapper' extends='org.apache.http.message.AbstractHttpMessage'><implements name='org.apache.http.client.methods.HttpUriRequest'/><constructor name='RequestWrapper' type='org.apache.http.impl.client.RequestWrapper'><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='ProtocolException' type='org.apache.http.ProtocolException'/></constructor><method name='abort'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method><method name='getExecCount' return='int'/><method name='getMethod' return='java.lang.String'/><method name='getOriginal' return='org.apache.http.HttpRequest'/><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getRequestLine' return='org.apache.http.RequestLine'/><method name='getURI' return='java.net.URI'/><method name='incrementExecCount'/><method name='isAborted' return='boolean'/><method name='isRepeatable' return='boolean'/><method name='resetHeaders'/><method name='setMethod'><parameter name='method' type='java.lang.String'/></method><method name='setProtocolVersion'><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='setURI'><parameter name='uri' type='java.net.URI'/></method></class><class name='RoutedRequest' extends='java.lang.Object'><constructor name='RoutedRequest' type='org.apache.http.impl.client.RoutedRequest'><parameter name='req' type='org.apache.http.impl.client.RequestWrapper'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></constructor><field name='request' final='true' type='org.apache.http.impl.client.RequestWrapper' visibility='protected'/><field name='route' final='true' type='org.apache.http.conn.routing.HttpRoute' visibility='protected'/><method name='getRequest' final='true' return='org.apache.http.impl.client.RequestWrapper'/><method name='getRoute' final='true' return='org.apache.http.conn.routing.HttpRoute'/></class><class name='TunnelRefusedException' extends='org.apache.http.HttpException'><constructor name='TunnelRefusedException' type='org.apache.http.impl.client.TunnelRefusedException'><parameter name='message' type='java.lang.String'/><parameter name='response' type='org.apache.http.HttpResponse'/></constructor><method name='getResponse' return='org.apache.http.HttpResponse'/></class></package><package name='org.apache.http.impl.conn'><class name='AbstractClientConnAdapter' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.conn.ManagedClientConnection'/><constructor name='AbstractClientConnAdapter' type='org.apache.http.impl.conn.AbstractClientConnAdapter' visibility='protected'><parameter name='mgr' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/></constructor><method name='abortConnection'/><method name='assertNotAborted' final='true' visibility='protected'><exception name='InterruptedIOException' type='java.io.InterruptedIOException'/></method><method name='assertValid' final='true' visibility='protected'><parameter name='wrappedConn' type='org.apache.http.conn.OperatedClientConnection'/></method><method name='detach' visibility='protected'/><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='getLocalAddress' return='java.net.InetAddress'/><method name='getLocalPort' return='int'/><method name='getManager' visibility='protected' return='org.apache.http.conn.ClientConnectionManager'/><method name='getMetrics' return='org.apache.http.HttpConnectionMetrics'/><method name='getRemoteAddress' return='java.net.InetAddress'/><method name='getRemotePort' return='int'/><method name='getSSLSession' return='javax.net.ssl.SSLSession'/><method name='getSocketTimeout' return='int'/><method name='getWrappedConnection' visibility='protected' return='org.apache.http.conn.OperatedClientConnection'/><method name='isMarkedReusable' return='boolean'/><method name='isOpen' return='boolean'/><method name='isResponseAvailable' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='isSecure' return='boolean'/><method name='isStale' return='boolean'/><method name='markReusable'/><method name='receiveResponseEntity'><parameter name='response' type='org.apache.http.HttpResponse'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='receiveResponseHeader' return='org.apache.http.HttpResponse'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='releaseConnection'/><method name='sendRequestEntity'><parameter name='request' type='org.apache.http.HttpEntityEnclosingRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='sendRequestHeader'><parameter name='request' type='org.apache.http.HttpRequest'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='setIdleDuration'><parameter name='duration' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='setSocketTimeout'><parameter name='timeout' type='int'/></method><method name='unmarkReusable'/></class><class name='AbstractPoolEntry' extends='java.lang.Object' abstract='true'><constructor name='AbstractPoolEntry' type='org.apache.http.impl.conn.AbstractPoolEntry' visibility='protected'><parameter name='connOperator' type='org.apache.http.conn.ClientConnectionOperator'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></constructor><field name='connOperator' final='true' type='org.apache.http.conn.ClientConnectionOperator' visibility='protected'/><field name='connection' final='true' type='org.apache.http.conn.OperatedClientConnection' visibility='protected'/><field name='route' type='org.apache.http.conn.routing.HttpRoute' volatile='true' visibility='protected'/><field name='state' type='java.lang.Object' volatile='true' visibility='protected'/><field name='tracker' type='org.apache.http.conn.routing.RouteTracker' volatile='true' visibility='protected'/><method name='getState' return='java.lang.Object'/><method name='layerProtocol'><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='open'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='setState'><parameter name='state' type='java.lang.Object'/></method><method name='shutdownEntry' visibility='protected'/><method name='tunnelProxy'><parameter name='next' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='tunnelTarget'><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='AbstractPooledConnAdapter' extends='org.apache.http.impl.conn.AbstractClientConnAdapter' abstract='true'><constructor name='AbstractPooledConnAdapter' type='org.apache.http.impl.conn.AbstractPooledConnAdapter' visibility='protected'><parameter name='manager' type='org.apache.http.conn.ClientConnectionManager'/><parameter name='entry' type='org.apache.http.impl.conn.AbstractPoolEntry'/></constructor><field name='poolEntry' type='org.apache.http.impl.conn.AbstractPoolEntry' volatile='true' visibility='protected'/><method name='assertAttached' final='true' visibility='protected'/><method name='close'><exception name='IOException' type='java.io.IOException'/></method><method name='getRoute' return='org.apache.http.conn.routing.HttpRoute'/><method name='getState' return='java.lang.Object'/><method name='layerProtocol'><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='open'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='setState'><parameter name='state' type='java.lang.Object'/></method><method name='shutdown'><exception name='IOException' type='java.io.IOException'/></method><method name='tunnelProxy'><parameter name='next' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='tunnelTarget'><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DefaultClientConnection' extends='org.apache.http.impl.SocketHttpClientConnection'><implements name='org.apache.http.conn.OperatedClientConnection'/><constructor name='DefaultClientConnection' type='org.apache.http.impl.conn.DefaultClientConnection'/><method name='getSocket' final='true' return='java.net.Socket'/><method name='getTargetHost' final='true' return='org.apache.http.HttpHost'/><method name='isSecure' final='true' return='boolean'/><method name='openCompleted'><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='opening'><parameter name='sock' type='java.net.Socket'/><parameter name='target' type='org.apache.http.HttpHost'/><exception name='IOException' type='java.io.IOException'/></method><method name='update'><parameter name='sock' type='java.net.Socket'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='secure' type='boolean'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DefaultClientConnectionOperator' extends='java.lang.Object'><implements name='org.apache.http.conn.ClientConnectionOperator'/><constructor name='DefaultClientConnectionOperator' type='org.apache.http.impl.conn.DefaultClientConnectionOperator'><parameter name='schemes' type='org.apache.http.conn.scheme.SchemeRegistry'/></constructor><field name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry' visibility='protected'/><method name='createConnection' return='org.apache.http.conn.OperatedClientConnection'/><method name='openConnection'><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='local' type='java.net.InetAddress'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='prepareSocket' visibility='protected'><parameter name='sock' type='java.net.Socket'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method><method name='updateSecureConnection'><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='DefaultHttpRoutePlanner' extends='java.lang.Object'><implements name='org.apache.http.conn.routing.HttpRoutePlanner'/><constructor name='DefaultHttpRoutePlanner' type='org.apache.http.impl.conn.DefaultHttpRoutePlanner'><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/></constructor><field name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry' visibility='protected'/><method name='determineRoute' return='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></class><class name='DefaultResponseParser' extends='org.apache.http.impl.io.AbstractMessageParser'><constructor name='DefaultResponseParser' type='org.apache.http.impl.conn.DefaultResponseParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='parser' type='org.apache.http.message.LineParser'/><parameter name='responseFactory' type='org.apache.http.HttpResponseFactory'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='parseHead' visibility='protected' return='org.apache.http.HttpMessage'><parameter name='sessionBuffer' type='org.apache.http.io.SessionInputBuffer'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='IdleConnectionHandler' extends='java.lang.Object'><constructor name='IdleConnectionHandler' type='org.apache.http.impl.conn.IdleConnectionHandler'/><method name='add'><parameter name='connection' type='org.apache.http.HttpConnection'/><parameter name='validDuration' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter name='idleTime' type='long'/></method><method name='remove' return='boolean'><parameter name='connection' type='org.apache.http.HttpConnection'/></method><method name='removeAll'/></class><class name='LoggingSessionInputBuffer' extends='java.lang.Object'><implements name='org.apache.http.io.SessionInputBuffer'/><constructor name='LoggingSessionInputBuffer' type='org.apache.http.impl.conn.LoggingSessionInputBuffer'><parameter name='in' type='org.apache.http.io.SessionInputBuffer'/><parameter name='wire' type='org.apache.http.impl.conn.Wire'/></constructor><method name='getMetrics' return='org.apache.http.io.HttpTransportMetrics'/><method name='isDataAvailable' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' return='int'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='LoggingSessionOutputBuffer' extends='java.lang.Object'><implements name='org.apache.http.io.SessionOutputBuffer'/><constructor name='LoggingSessionOutputBuffer' type='org.apache.http.impl.conn.LoggingSessionOutputBuffer'><parameter name='out' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='wire' type='org.apache.http.impl.conn.Wire'/></constructor><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' return='org.apache.http.io.HttpTransportMetrics'/><method name='write'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine'><parameter name='s' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ProxySelectorRoutePlanner' extends='java.lang.Object'><implements name='org.apache.http.conn.routing.HttpRoutePlanner'/><constructor name='ProxySelectorRoutePlanner' type='org.apache.http.impl.conn.ProxySelectorRoutePlanner'><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/><parameter name='prosel' type='java.net.ProxySelector'/></constructor><field name='proxySelector' type='java.net.ProxySelector' visibility='protected'/><field name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry' visibility='protected'/><method name='chooseProxy' visibility='protected' return='java.net.Proxy'><parameter name='proxies' type='java.util.List&lt;java.net.Proxy&gt;'/><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/></method><method name='determineProxy' visibility='protected' return='org.apache.http.HttpHost'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method><method name='determineRoute' return='org.apache.http.conn.routing.HttpRoute'><parameter name='target' type='org.apache.http.HttpHost'/><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method><method name='getHost' visibility='protected' return='java.lang.String'><parameter name='isa' type='java.net.InetSocketAddress'/></method><method name='getProxySelector' return='java.net.ProxySelector'/><method name='setProxySelector'><parameter name='prosel' type='java.net.ProxySelector'/></method></class><class name='SingleClientConnManager' extends='java.lang.Object'><implements name='org.apache.http.conn.ClientConnectionManager'/><constructor name='SingleClientConnManager' type='org.apache.http.impl.conn.SingleClientConnManager'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/></constructor><field name='MISUSE_MESSAGE' final='true' static='true' value='&quot;Invalid use of SingleClientConnManager: connection still allocated.\nMake sure to release the connection before allocating another one.&quot;' type='java.lang.String'/><field name='alwaysShutDown' type='boolean' visibility='protected'/><field name='connOperator' type='org.apache.http.conn.ClientConnectionOperator' visibility='protected'/><field name='connectionExpiresTime' type='long' visibility='protected'/><field name='isShutDown' type='boolean' volatile='true' visibility='protected'/><field name='lastReleaseTime' type='long' visibility='protected'/><field name='managedConn' type='org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter' visibility='protected'/><field name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry' visibility='protected'/><field name='uniquePoolEntry' type='org.apache.http.impl.conn.SingleClientConnManager.PoolEntry' visibility='protected'/><method name='assertStillUp' final='true' visibility='protected'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter name='idletime' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/></method><method name='createConnectionOperator' visibility='protected' return='org.apache.http.conn.ClientConnectionOperator'><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/></method><method name='getConnection' return='org.apache.http.conn.ManagedClientConnection'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method><method name='getSchemeRegistry' return='org.apache.http.conn.scheme.SchemeRegistry'/><method name='releaseConnection'><parameter name='conn' type='org.apache.http.conn.ManagedClientConnection'/><parameter name='validDuration' type='long'/><parameter name='timeUnit' type='java.util.concurrent.TimeUnit'/></method><method name='requestConnection' final='true' return='org.apache.http.conn.ClientConnectionRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method><method name='revokeConnection' visibility='protected'/><method name='shutdown'/></class><class name='SingleClientConnManager.ConnAdapter' extends='org.apache.http.impl.conn.AbstractPooledConnAdapter' visibility='protected'><constructor name='SingleClientConnManager.ConnAdapter' type='org.apache.http.impl.conn.SingleClientConnManager.ConnAdapter' visibility='protected'><parameter name='entry' type='org.apache.http.impl.conn.SingleClientConnManager.PoolEntry'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></constructor></class><class name='SingleClientConnManager.PoolEntry' extends='org.apache.http.impl.conn.AbstractPoolEntry' visibility='protected'><constructor name='SingleClientConnManager.PoolEntry' type='org.apache.http.impl.conn.SingleClientConnManager.PoolEntry' visibility='protected'/><method name='close' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='shutdown' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method></class><class name='Wire' extends='java.lang.Object'><constructor name='Wire' type='org.apache.http.impl.conn.Wire'><parameter name='log' type='org.apache.commons.logging.Log'/></constructor><method name='enabled' return='boolean'/><method name='input'><parameter name='instream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='input'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='input'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='input'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='input'><parameter name='s' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='output'><parameter name='outstream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method name='output'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='output'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='output'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='output'><parameter name='s' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method></class></package><package name='org.apache.http.impl.conn.tsccm'><class name='AbstractConnPool' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.impl.conn.tsccm.RefQueueHandler'/><constructor name='AbstractConnPool' type='org.apache.http.impl.conn.tsccm.AbstractConnPool' visibility='protected'/><field name='idleConnHandler' type='org.apache.http.impl.conn.IdleConnectionHandler' visibility='protected'/><field name='isShutDown' type='boolean' volatile='true' visibility='protected'/><field name='issuedConnections' type='java.util.Set' visibility='protected'/><field name='numConnections' type='int' visibility='protected'/><field name='poolLock' final='true' type='java.util.concurrent.locks.Lock' visibility='protected'/><field name='refQueue' type='java.lang.ref.ReferenceQueue' visibility='protected'/><method name='closeConnection' visibility='protected'><parameter name='conn' type='org.apache.http.conn.OperatedClientConnection'/></method><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter name='idletime' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/></method><method name='deleteClosedConnections' abstract='true'/><method name='enableConnectionGC'><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='freeEntry' abstract='true'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/><parameter name='reusable' type='boolean'/><parameter name='validDuration' type='long'/><parameter name='timeUnit' type='java.util.concurrent.TimeUnit'/></method><method name='getEntry' final='true' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/><parameter name='timeout' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/><exception name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='handleLostEntry' abstract='true' visibility='protected'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='handleReference'><parameter name='ref' type='java.lang.ref.Reference'/></method><method name='requestPoolEntry' abstract='true' return='org.apache.http.impl.conn.tsccm.PoolEntryRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method><method name='shutdown'/></class><class name='BasicPoolEntry' extends='org.apache.http.impl.conn.AbstractPoolEntry'><constructor name='BasicPoolEntry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='op' type='org.apache.http.conn.ClientConnectionOperator'/><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='queue' type='java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;'/></constructor><method name='getConnection' final='true' visibility='protected' return='org.apache.http.conn.OperatedClientConnection'/><method name='getPlannedRoute' final='true' visibility='protected' return='org.apache.http.conn.routing.HttpRoute'/><method name='getWeakRef' final='true' visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntryRef'/></class><class name='BasicPoolEntryRef' extends='java.lang.ref.WeakReference'><constructor name='BasicPoolEntryRef' type='org.apache.http.impl.conn.tsccm.BasicPoolEntryRef'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/><parameter name='queue' type='java.lang.ref.ReferenceQueue&lt;java.lang.Object&gt;'/></constructor><method name='getRoute' final='true' return='org.apache.http.conn.routing.HttpRoute'/></class><class name='BasicPooledConnAdapter' extends='org.apache.http.impl.conn.AbstractPooledConnAdapter'><constructor name='BasicPooledConnAdapter' type='org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter' visibility='protected'><parameter name='tsccm' type='org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager'/><parameter name='entry' type='org.apache.http.impl.conn.AbstractPoolEntry'/></constructor><method name='getPoolEntry' visibility='protected' return='org.apache.http.impl.conn.AbstractPoolEntry'/></class><class name='ConnPoolByRoute' extends='org.apache.http.impl.conn.tsccm.AbstractConnPool'><constructor name='ConnPoolByRoute' type='org.apache.http.impl.conn.tsccm.ConnPoolByRoute'><parameter name='operator' type='org.apache.http.conn.ClientConnectionOperator'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><field name='freeConnections' type='java.util.Queue' visibility='protected'/><field name='maxTotalConnections' final='true' type='int' visibility='protected'/><field name='operator' final='true' type='org.apache.http.conn.ClientConnectionOperator' visibility='protected'/><field name='routeToPool' final='true' type='java.util.Map' visibility='protected'/><field name='waitingThreads' type='java.util.Queue' visibility='protected'/><method name='createEntry' visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='rospl' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/><parameter name='op' type='org.apache.http.conn.ClientConnectionOperator'/></method><method name='createFreeConnQueue' visibility='protected' return='java.util.Queue&lt;org.apache.http.impl.conn.tsccm.BasicPoolEntry&gt;'/><method name='createRouteToPoolMap' visibility='protected' return='java.util.Map&lt;org.apache.http.conn.routing.HttpRoute, org.apache.http.impl.conn.tsccm.RouteSpecificPool&gt;'/><method name='createWaitingThreadQueue' visibility='protected' return='java.util.Queue&lt;org.apache.http.impl.conn.tsccm.WaitingThread&gt;'/><method name='deleteClosedConnections'/><method name='deleteEntry' visibility='protected'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/></method><method name='deleteLeastUsedEntry' visibility='protected'/><method name='freeEntry'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/><parameter name='reusable' type='boolean'/><parameter name='validDuration' type='long'/><parameter name='timeUnit' type='java.util.concurrent.TimeUnit'/></method><method name='getConnectionsInPool' return='int'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='getEntryBlocking' visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/><parameter name='timeout' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/><parameter name='aborter' type='org.apache.http.impl.conn.tsccm.WaitingThreadAborter'/><exception name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='getFreeEntry' visibility='protected' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='rospl' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/><parameter name='state' type='java.lang.Object'/></method><method name='getRoutePool' visibility='protected' return='org.apache.http.impl.conn.tsccm.RouteSpecificPool'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='create' type='boolean'/></method><method name='handleLostEntry' visibility='protected'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='newRouteSpecificPool' visibility='protected' return='org.apache.http.impl.conn.tsccm.RouteSpecificPool'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='newWaitingThread' visibility='protected' return='org.apache.http.impl.conn.tsccm.WaitingThread'><parameter name='cond' type='java.util.concurrent.locks.Condition'/><parameter name='rospl' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/></method><method name='notifyWaitingThread' visibility='protected'><parameter name='rospl' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/></method><method name='requestPoolEntry' return='org.apache.http.impl.conn.tsccm.PoolEntryRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method></class><class name='RefQueueWorker' extends='java.lang.Object'><implements name='java.lang.Runnable'/><constructor name='RefQueueWorker' type='org.apache.http.impl.conn.tsccm.RefQueueWorker'><parameter name='queue' type='java.lang.ref.ReferenceQueue&lt;?&gt;'/><parameter name='handler' type='org.apache.http.impl.conn.tsccm.RefQueueHandler'/></constructor><field name='refHandler' final='true' type='org.apache.http.impl.conn.tsccm.RefQueueHandler' visibility='protected'/><field name='refQueue' final='true' type='java.lang.ref.ReferenceQueue' visibility='protected'/><field name='workerThread' type='java.lang.Thread' volatile='true' visibility='protected'/><method name='run'/><method name='shutdown'/></class><class name='RouteSpecificPool' extends='java.lang.Object'><constructor name='RouteSpecificPool' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='maxEntries' type='int'/></constructor><field name='freeEntries' final='true' type='java.util.LinkedList' visibility='protected'/><field name='maxEntries' final='true' type='int' visibility='protected'/><field name='numEntries' type='int' visibility='protected'/><field name='route' final='true' type='org.apache.http.conn.routing.HttpRoute' visibility='protected'/><field name='waitingThreads' final='true' type='java.util.Queue' visibility='protected'/><method name='allocEntry' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='state' type='java.lang.Object'/></method><method name='createdEntry'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/></method><method name='deleteEntry' return='boolean'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/></method><method name='dropEntry'/><method name='freeEntry'><parameter name='entry' type='org.apache.http.impl.conn.tsccm.BasicPoolEntry'/></method><method name='getCapacity' return='int'/><method name='getEntryCount' final='true' return='int'/><method name='getMaxEntries' final='true' return='int'/><method name='getRoute' final='true' return='org.apache.http.conn.routing.HttpRoute'/><method name='hasThread' return='boolean'/><method name='isUnused' return='boolean'/><method name='nextThread' return='org.apache.http.impl.conn.tsccm.WaitingThread'/><method name='queueThread'><parameter name='wt' type='org.apache.http.impl.conn.tsccm.WaitingThread'/></method><method name='removeThread'><parameter name='wt' type='org.apache.http.impl.conn.tsccm.WaitingThread'/></method></class><class name='ThreadSafeClientConnManager' extends='java.lang.Object'><implements name='org.apache.http.conn.ClientConnectionManager'/><constructor name='ThreadSafeClientConnManager' type='org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/></constructor><field name='connOperator' type='org.apache.http.conn.ClientConnectionOperator' visibility='protected'/><field name='connectionPool' final='true' type='org.apache.http.impl.conn.tsccm.AbstractConnPool' visibility='protected'/><field name='schemeRegistry' type='org.apache.http.conn.scheme.SchemeRegistry' visibility='protected'/><method name='closeExpiredConnections'/><method name='closeIdleConnections'><parameter name='idleTimeout' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/></method><method name='createConnectionOperator' visibility='protected' return='org.apache.http.conn.ClientConnectionOperator'><parameter name='schreg' type='org.apache.http.conn.scheme.SchemeRegistry'/></method><method name='createConnectionPool' visibility='protected' return='org.apache.http.impl.conn.tsccm.AbstractConnPool'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getConnectionsInPool' return='int'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/></method><method name='getConnectionsInPool' return='int'/><method name='getSchemeRegistry' return='org.apache.http.conn.scheme.SchemeRegistry'/><method name='releaseConnection'><parameter name='conn' type='org.apache.http.conn.ManagedClientConnection'/><parameter name='validDuration' type='long'/><parameter name='timeUnit' type='java.util.concurrent.TimeUnit'/></method><method name='requestConnection' return='org.apache.http.conn.ClientConnectionRequest'><parameter name='route' type='org.apache.http.conn.routing.HttpRoute'/><parameter name='state' type='java.lang.Object'/></method><method name='shutdown'/></class><class name='WaitingThread' extends='java.lang.Object'><constructor name='WaitingThread' type='org.apache.http.impl.conn.tsccm.WaitingThread'><parameter name='cond' type='java.util.concurrent.locks.Condition'/><parameter name='pool' type='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/></constructor><method name='await' return='boolean'><parameter name='deadline' type='java.util.Date'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method><method name='getCondition' final='true' return='java.util.concurrent.locks.Condition'/><method name='getPool' final='true' return='org.apache.http.impl.conn.tsccm.RouteSpecificPool'/><method name='getThread' final='true' return='java.lang.Thread'/><method name='interrupt'/><method name='wakeup'/></class><class name='WaitingThreadAborter' extends='java.lang.Object'><constructor name='WaitingThreadAborter' type='org.apache.http.impl.conn.tsccm.WaitingThreadAborter'/><method name='abort'/><method name='setWaitingThread'><parameter name='waitingThread' type='org.apache.http.impl.conn.tsccm.WaitingThread'/></method></class><interface name='PoolEntryRequest' abstract='true'><method name='abortRequest' abstract='true'/><method name='getPoolEntry' abstract='true' return='org.apache.http.impl.conn.tsccm.BasicPoolEntry'><parameter name='timeout' type='long'/><parameter name='tunit' type='java.util.concurrent.TimeUnit'/><exception name='ConnectionPoolTimeoutException' type='org.apache.http.conn.ConnectionPoolTimeoutException'/><exception name='InterruptedException' type='java.lang.InterruptedException'/></method></interface><interface name='RefQueueHandler' abstract='true'><method name='handleReference' abstract='true'><parameter name='ref' type='java.lang.ref.Reference&lt;?&gt;'/></method></interface></package><package name='org.apache.http.impl.cookie'><class name='AbstractCookieAttributeHandler' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='AbstractCookieAttributeHandler' type='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='AbstractCookieSpec' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.cookie.CookieSpec'/><constructor name='AbstractCookieSpec' type='org.apache.http.impl.cookie.AbstractCookieSpec'/><method name='findAttribHandler' visibility='protected' return='org.apache.http.cookie.CookieAttributeHandler'><parameter name='name' type='java.lang.String'/></method><method name='getAttribHandler' visibility='protected' return='org.apache.http.cookie.CookieAttributeHandler'><parameter name='name' type='java.lang.String'/></method><method name='getAttribHandlers' visibility='protected' return='java.util.Collection&lt;org.apache.http.cookie.CookieAttributeHandler&gt;'/><method name='registerAttribHandler'><parameter name='name' type='java.lang.String'/><parameter name='handler' type='org.apache.http.cookie.CookieAttributeHandler'/></method></class><class name='BasicClientCookie' extends='java.lang.Object'><implements name='org.apache.http.cookie.ClientCookie'/><implements name='java.lang.Cloneable'/><implements name='org.apache.http.cookie.SetCookie'/><constructor name='BasicClientCookie' type='org.apache.http.impl.cookie.BasicClientCookie'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='containsAttribute' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getAttribute' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getComment' return='java.lang.String'/><method name='getCommentURL' return='java.lang.String'/><method name='getDomain' return='java.lang.String'/><method name='getExpiryDate' return='java.util.Date'/><method name='getName' return='java.lang.String'/><method name='getPath' return='java.lang.String'/><method name='getPorts' return='int[]'/><method name='getValue' return='java.lang.String'/><method name='getVersion' return='int'/><method name='isExpired' return='boolean'><parameter name='date' type='java.util.Date'/></method><method name='isPersistent' return='boolean'/><method name='isSecure' return='boolean'/><method name='setAttribute'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setComment'><parameter name='comment' type='java.lang.String'/></method><method name='setDomain'><parameter name='domain' type='java.lang.String'/></method><method name='setExpiryDate'><parameter name='expiryDate' type='java.util.Date'/></method><method name='setPath'><parameter name='path' type='java.lang.String'/></method><method name='setSecure'><parameter name='secure' type='boolean'/></method><method name='setValue'><parameter name='value' type='java.lang.String'/></method><method name='setVersion'><parameter name='version' type='int'/></method></class><class name='BasicClientCookie2' extends='org.apache.http.impl.cookie.BasicClientCookie'><implements name='org.apache.http.cookie.SetCookie2'/><constructor name='BasicClientCookie2' type='org.apache.http.impl.cookie.BasicClientCookie2'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><method name='setCommentURL'><parameter name='commentURL' type='java.lang.String'/></method><method name='setDiscard'><parameter name='discard' type='boolean'/></method><method name='setPorts'><parameter name='ports' type='int[]'/></method></class><class name='BasicCommentHandler' extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'><constructor name='BasicCommentHandler' type='org.apache.http.impl.cookie.BasicCommentHandler'/><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BasicDomainHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='BasicDomainHandler' type='org.apache.http.impl.cookie.BasicDomainHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BasicExpiresHandler' extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'><constructor name='BasicExpiresHandler' type='org.apache.http.impl.cookie.BasicExpiresHandler'><parameter name='datepatterns' type='java.lang.String[]'/></constructor><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BasicMaxAgeHandler' extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'><constructor name='BasicMaxAgeHandler' type='org.apache.http.impl.cookie.BasicMaxAgeHandler'/><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BasicPathHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='BasicPathHandler' type='org.apache.http.impl.cookie.BasicPathHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BasicSecureHandler' extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'><constructor name='BasicSecureHandler' type='org.apache.http.impl.cookie.BasicSecureHandler'/><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BestMatchSpec' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpec'/><constructor name='BestMatchSpec' type='org.apache.http.impl.cookie.BestMatchSpec'><parameter name='datepatterns' type='java.lang.String[]'/><parameter name='oneHeader' type='boolean'/></constructor><constructor name='BestMatchSpec' type='org.apache.http.impl.cookie.BestMatchSpec'/><method name='formatCookies' return='java.util.List&lt;org.apache.http.Header&gt;'><parameter name='cookies' type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></method><method name='getVersion' return='int'/><method name='getVersionHeader' return='org.apache.http.Header'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='header' type='org.apache.http.Header'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BestMatchSpecFactory' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpecFactory'/><constructor name='BestMatchSpecFactory' type='org.apache.http.impl.cookie.BestMatchSpecFactory'/><method name='newInstance' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='BrowserCompatSpec' extends='org.apache.http.impl.cookie.CookieSpecBase'><constructor name='BrowserCompatSpec' type='org.apache.http.impl.cookie.BrowserCompatSpec'><parameter name='datepatterns' type='java.lang.String[]'/></constructor><constructor name='BrowserCompatSpec' type='org.apache.http.impl.cookie.BrowserCompatSpec'/><field name='DATE_PATTERNS' final='true' static='true' value='null' type='java.lang.String[]' visibility='protected'/><method name='formatCookies' return='java.util.List&lt;org.apache.http.Header&gt;'><parameter name='cookies' type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></method><method name='getVersion' return='int'/><method name='getVersionHeader' return='org.apache.http.Header'/><method name='parse' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='header' type='org.apache.http.Header'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='BrowserCompatSpecFactory' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpecFactory'/><constructor name='BrowserCompatSpecFactory' type='org.apache.http.impl.cookie.BrowserCompatSpecFactory'/><method name='newInstance' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='CookieSpecBase' extends='org.apache.http.impl.cookie.AbstractCookieSpec' abstract='true'><constructor name='CookieSpecBase' type='org.apache.http.impl.cookie.CookieSpecBase'/><method name='getDefaultDomain' static='true' visibility='protected' return='java.lang.String'><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='getDefaultPath' static='true' visibility='protected' return='java.lang.String'><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse' visibility='protected' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='elems' type='org.apache.http.HeaderElement[]'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='DateParseException' extends='java.lang.Exception'><constructor name='DateParseException' type='org.apache.http.impl.cookie.DateParseException'/><constructor name='DateParseException' type='org.apache.http.impl.cookie.DateParseException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='DateUtils' final='true' extends='java.lang.Object'><field name='GMT' final='true' static='true' type='java.util.TimeZone'/><field name='PATTERN_ASCTIME' final='true' static='true' value='&quot;EEE MMM d HH:mm:ss yyyy&quot;' type='java.lang.String'/><field name='PATTERN_RFC1036' final='true' static='true' value='&quot;EEEE, dd-MMM-yy HH:mm:ss zzz&quot;' type='java.lang.String'/><field name='PATTERN_RFC1123' final='true' static='true' value='&quot;EEE, dd MMM yyyy HH:mm:ss zzz&quot;' type='java.lang.String'/><method name='formatDate' static='true' return='java.lang.String'><parameter name='date' type='java.util.Date'/></method><method name='formatDate' static='true' return='java.lang.String'><parameter name='date' type='java.util.Date'/><parameter name='pattern' type='java.lang.String'/></method><method name='parseDate' static='true' return='java.util.Date'><parameter name='dateValue' type='java.lang.String'/><exception name='DateParseException' type='org.apache.http.impl.cookie.DateParseException'/></method><method name='parseDate' static='true' return='java.util.Date'><parameter name='dateValue' type='java.lang.String'/><parameter name='dateFormats' type='java.lang.String[]'/><exception name='DateParseException' type='org.apache.http.impl.cookie.DateParseException'/></method><method name='parseDate' static='true' return='java.util.Date'><parameter name='dateValue' type='java.lang.String'/><parameter name='dateFormats' type='java.lang.String[]'/><parameter name='startDate' type='java.util.Date'/><exception name='DateParseException' type='org.apache.http.impl.cookie.DateParseException'/></method></class><class name='NetscapeDomainHandler' extends='org.apache.http.impl.cookie.BasicDomainHandler'><constructor name='NetscapeDomainHandler' type='org.apache.http.impl.cookie.NetscapeDomainHandler'/></class><class name='NetscapeDraftHeaderParser' extends='java.lang.Object'><constructor name='NetscapeDraftHeaderParser' type='org.apache.http.impl.cookie.NetscapeDraftHeaderParser'/><field name='DEFAULT' final='true' static='true' type='org.apache.http.impl.cookie.NetscapeDraftHeaderParser'/><method name='parseHeader' return='org.apache.http.HeaderElement'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></class><class name='NetscapeDraftSpec' extends='org.apache.http.impl.cookie.CookieSpecBase'><constructor name='NetscapeDraftSpec' type='org.apache.http.impl.cookie.NetscapeDraftSpec'><parameter name='datepatterns' type='java.lang.String[]'/></constructor><constructor name='NetscapeDraftSpec' type='org.apache.http.impl.cookie.NetscapeDraftSpec'/><field name='EXPIRES_PATTERN' final='true' static='true' value='&quot;EEE, dd-MMM-yyyy HH:mm:ss z&quot;' type='java.lang.String' visibility='protected'/><method name='formatCookies' return='java.util.List&lt;org.apache.http.Header&gt;'><parameter name='cookies' type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></method><method name='getVersion' return='int'/><method name='getVersionHeader' return='org.apache.http.Header'/><method name='parse' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='header' type='org.apache.http.Header'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='NetscapeDraftSpecFactory' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpecFactory'/><constructor name='NetscapeDraftSpecFactory' type='org.apache.http.impl.cookie.NetscapeDraftSpecFactory'/><method name='newInstance' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='RFC2109DomainHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2109DomainHandler' type='org.apache.http.impl.cookie.RFC2109DomainHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2109Spec' extends='org.apache.http.impl.cookie.CookieSpecBase'><constructor name='RFC2109Spec' type='org.apache.http.impl.cookie.RFC2109Spec'><parameter name='datepatterns' type='java.lang.String[]'/><parameter name='oneHeader' type='boolean'/></constructor><constructor name='RFC2109Spec' type='org.apache.http.impl.cookie.RFC2109Spec'/><method name='formatCookieAsVer' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='version' type='int'/></method><method name='formatCookies' return='java.util.List&lt;org.apache.http.Header&gt;'><parameter name='cookies' type='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'/></method><method name='formatParamAsVer' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><parameter name='version' type='int'/></method><method name='getVersion' return='int'/><method name='getVersionHeader' return='org.apache.http.Header'/><method name='parse' return='java.util.List&lt;org.apache.http.cookie.Cookie&gt;'><parameter name='header' type='org.apache.http.Header'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2109SpecFactory' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpecFactory'/><constructor name='RFC2109SpecFactory' type='org.apache.http.impl.cookie.RFC2109SpecFactory'/><method name='newInstance' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='RFC2109VersionHandler' extends='org.apache.http.impl.cookie.AbstractCookieAttributeHandler'><constructor name='RFC2109VersionHandler' type='org.apache.http.impl.cookie.RFC2109VersionHandler'/><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2965CommentUrlAttributeHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2965CommentUrlAttributeHandler' type='org.apache.http.impl.cookie.RFC2965CommentUrlAttributeHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='commenturl' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2965DiscardAttributeHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2965DiscardAttributeHandler' type='org.apache.http.impl.cookie.RFC2965DiscardAttributeHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='commenturl' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2965DomainAttributeHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2965DomainAttributeHandler' type='org.apache.http.impl.cookie.RFC2965DomainAttributeHandler'/><method name='domainMatch' return='boolean'><parameter name='host' type='java.lang.String'/><parameter name='domain' type='java.lang.String'/></method><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='domain' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2965PortAttributeHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2965PortAttributeHandler' type='org.apache.http.impl.cookie.RFC2965PortAttributeHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='portValue' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class><class name='RFC2965Spec' extends='org.apache.http.impl.cookie.RFC2109Spec'><constructor name='RFC2965Spec' type='org.apache.http.impl.cookie.RFC2965Spec'/><constructor name='RFC2965Spec' type='org.apache.http.impl.cookie.RFC2965Spec'><parameter name='datepatterns' type='java.lang.String[]'/><parameter name='oneHeader' type='boolean'/></constructor></class><class name='RFC2965SpecFactory' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieSpecFactory'/><constructor name='RFC2965SpecFactory' type='org.apache.http.impl.cookie.RFC2965SpecFactory'/><method name='newInstance' return='org.apache.http.cookie.CookieSpec'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='RFC2965VersionAttributeHandler' extends='java.lang.Object'><implements name='org.apache.http.cookie.CookieAttributeHandler'/><constructor name='RFC2965VersionAttributeHandler' type='org.apache.http.impl.cookie.RFC2965VersionAttributeHandler'/><method name='match' return='boolean'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/></method><method name='parse'><parameter name='cookie' type='org.apache.http.cookie.SetCookie'/><parameter name='value' type='java.lang.String'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method><method name='validate'><parameter name='cookie' type='org.apache.http.cookie.Cookie'/><parameter name='origin' type='org.apache.http.cookie.CookieOrigin'/><exception name='MalformedCookieException' type='org.apache.http.cookie.MalformedCookieException'/></method></class></package><package name='org.apache.http.impl.entity'><class name='EntityDeserializer' extends='java.lang.Object'><constructor name='EntityDeserializer' type='org.apache.http.impl.entity.EntityDeserializer'><parameter name='lenStrategy' type='org.apache.http.entity.ContentLengthStrategy'/></constructor><method name='deserialize' return='org.apache.http.HttpEntity'><parameter name='inbuffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='doDeserialize' visibility='protected' return='org.apache.http.entity.BasicHttpEntity'><parameter name='inbuffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='EntitySerializer' extends='java.lang.Object'><constructor name='EntitySerializer' type='org.apache.http.impl.entity.EntitySerializer'><parameter name='lenStrategy' type='org.apache.http.entity.ContentLengthStrategy'/></constructor><method name='doSerialize' visibility='protected' return='java.io.OutputStream'><parameter name='outbuffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='serialize'><parameter name='outbuffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='message' type='org.apache.http.HttpMessage'/><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='LaxContentLengthStrategy' extends='java.lang.Object'><implements name='org.apache.http.entity.ContentLengthStrategy'/><constructor name='LaxContentLengthStrategy' type='org.apache.http.impl.entity.LaxContentLengthStrategy'/><method name='determineLength' return='long'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></class><class name='StrictContentLengthStrategy' extends='java.lang.Object'><implements name='org.apache.http.entity.ContentLengthStrategy'/><constructor name='StrictContentLengthStrategy' type='org.apache.http.impl.entity.StrictContentLengthStrategy'/><method name='determineLength' return='long'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></class></package><package name='org.apache.http.impl.io'><class name='AbstractMessageParser' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.io.HttpMessageParser'/><constructor name='AbstractMessageParser' type='org.apache.http.impl.io.AbstractMessageParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='parser' type='org.apache.http.message.LineParser'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><field name='lineParser' final='true' type='org.apache.http.message.LineParser' visibility='protected'/><method name='parse' return='org.apache.http.HttpMessage'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='parseHead' abstract='true' visibility='protected' return='org.apache.http.HttpMessage'><parameter name='sessionBuffer' type='org.apache.http.io.SessionInputBuffer'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseHeaders' static='true' return='org.apache.http.Header[]'><parameter name='inbuffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='maxHeaderCount' type='int'/><parameter name='maxLineLen' type='int'/><parameter name='parser' type='org.apache.http.message.LineParser'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='AbstractMessageWriter' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.io.HttpMessageWriter'/><constructor name='AbstractMessageWriter' type='org.apache.http.impl.io.AbstractMessageWriter'><parameter name='buffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><field name='lineBuf' final='true' type='org.apache.http.util.CharArrayBuffer' visibility='protected'/><field name='lineFormatter' final='true' type='org.apache.http.message.LineFormatter' visibility='protected'/><field name='sessionBuffer' final='true' type='org.apache.http.io.SessionOutputBuffer' visibility='protected'/><method name='write'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeHeadLine' abstract='true' visibility='protected'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='AbstractSessionInputBuffer' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.io.SessionInputBuffer'/><constructor name='AbstractSessionInputBuffer' type='org.apache.http.impl.io.AbstractSessionInputBuffer'/><method name='fillBuffer' visibility='protected' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' return='org.apache.http.io.HttpTransportMetrics'/><method name='hasBufferedData' visibility='protected' return='boolean'/><method name='init' visibility='protected'><parameter name='instream' type='java.io.InputStream'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' return='int'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' return='int'><parameter name='charbuffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method></class><class name='AbstractSessionOutputBuffer' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.io.SessionOutputBuffer'/><constructor name='AbstractSessionOutputBuffer' type='org.apache.http.impl.io.AbstractSessionOutputBuffer'/><method name='flush'><exception name='IOException' type='java.io.IOException'/></method><method name='flushBuffer' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' return='org.apache.http.io.HttpTransportMetrics'/><method name='init' visibility='protected'><parameter name='outstream' type='java.io.OutputStream'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='write'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine'><parameter name='s' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine'><parameter name='s' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ChunkedInputStream' extends='java.io.InputStream'><constructor name='ChunkedInputStream' type='org.apache.http.impl.io.ChunkedInputStream'><parameter name='in' type='org.apache.http.io.SessionInputBuffer'/></constructor><method name='getFooters' return='org.apache.http.Header[]'/><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ChunkedOutputStream' extends='java.io.OutputStream'><constructor name='ChunkedOutputStream' type='org.apache.http.impl.io.ChunkedOutputStream'><parameter name='out' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='bufferSize' type='int'/><exception name='IOException' type='java.io.IOException'/></constructor><constructor name='ChunkedOutputStream' type='org.apache.http.impl.io.ChunkedOutputStream'><parameter name='out' type='org.apache.http.io.SessionOutputBuffer'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='finish'><exception name='IOException' type='java.io.IOException'/></method><method name='flushCache' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method><method name='flushCacheWithAppend' visibility='protected'><parameter name='bufferToAppend' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeClosingChunk' visibility='protected'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ContentLengthInputStream' extends='java.io.InputStream'><constructor name='ContentLengthInputStream' type='org.apache.http.impl.io.ContentLengthInputStream'><parameter name='in' type='org.apache.http.io.SessionInputBuffer'/><parameter name='contentLength' type='long'/></constructor><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='ContentLengthOutputStream' extends='java.io.OutputStream'><constructor name='ContentLengthOutputStream' type='org.apache.http.impl.io.ContentLengthOutputStream'><parameter name='out' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='contentLength' type='long'/></constructor><method name='write'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpRequestParser' extends='org.apache.http.impl.io.AbstractMessageParser'><constructor name='HttpRequestParser' type='org.apache.http.impl.io.HttpRequestParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='parser' type='org.apache.http.message.LineParser'/><parameter name='requestFactory' type='org.apache.http.HttpRequestFactory'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='parseHead' visibility='protected' return='org.apache.http.HttpMessage'><parameter name='sessionBuffer' type='org.apache.http.io.SessionInputBuffer'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></class><class name='HttpRequestWriter' extends='org.apache.http.impl.io.AbstractMessageWriter'><constructor name='HttpRequestWriter' type='org.apache.http.impl.io.HttpRequestWriter'><parameter name='buffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='writeHeadLine' visibility='protected'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpResponseParser' extends='org.apache.http.impl.io.AbstractMessageParser'><constructor name='HttpResponseParser' type='org.apache.http.impl.io.HttpResponseParser'><parameter name='buffer' type='org.apache.http.io.SessionInputBuffer'/><parameter name='parser' type='org.apache.http.message.LineParser'/><parameter name='responseFactory' type='org.apache.http.HttpResponseFactory'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='parseHead' visibility='protected' return='org.apache.http.HttpMessage'><parameter name='sessionBuffer' type='org.apache.http.io.SessionInputBuffer'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></class><class name='HttpResponseWriter' extends='org.apache.http.impl.io.AbstractMessageWriter'><constructor name='HttpResponseWriter' type='org.apache.http.impl.io.HttpResponseWriter'><parameter name='buffer' type='org.apache.http.io.SessionOutputBuffer'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='writeHeadLine' visibility='protected'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpTransportMetricsImpl' extends='java.lang.Object'><implements name='org.apache.http.io.HttpTransportMetrics'/><constructor name='HttpTransportMetricsImpl' type='org.apache.http.impl.io.HttpTransportMetricsImpl'/><method name='getBytesTransferred' return='long'/><method name='incrementBytesTransferred'><parameter name='count' type='long'/></method><method name='reset'/><method name='setBytesTransferred'><parameter name='count' type='long'/></method></class><class name='IdentityInputStream' extends='java.io.InputStream'><constructor name='IdentityInputStream' type='org.apache.http.impl.io.IdentityInputStream'><parameter name='in' type='org.apache.http.io.SessionInputBuffer'/></constructor><method name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method></class><class name='IdentityOutputStream' extends='java.io.OutputStream'><constructor name='IdentityOutputStream' type='org.apache.http.impl.io.IdentityOutputStream'><parameter name='out' type='org.apache.http.io.SessionOutputBuffer'/></constructor><method name='write'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='SocketInputBuffer' extends='org.apache.http.impl.io.AbstractSessionInputBuffer'><constructor name='SocketInputBuffer' type='org.apache.http.impl.io.SocketInputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></constructor><method name='isDataAvailable' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='SocketOutputBuffer' extends='org.apache.http.impl.io.AbstractSessionOutputBuffer'><constructor name='SocketOutputBuffer' type='org.apache.http.impl.io.SocketOutputBuffer'><parameter name='socket' type='java.net.Socket'/><parameter name='buffersize' type='int'/><parameter name='params' type='org.apache.http.params.HttpParams'/><exception name='IOException' type='java.io.IOException'/></constructor></class></package><package name='org.apache.http.io'><interface name='HttpMessageParser' abstract='true'><method name='parse' abstract='true' return='org.apache.http.HttpMessage'><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpMessageWriter' abstract='true'><method name='write' abstract='true'><parameter name='message' type='org.apache.http.HttpMessage'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpTransportMetrics' abstract='true'><method name='getBytesTransferred' abstract='true' return='long'/><method name='reset' abstract='true'/></interface><interface name='SessionInputBuffer' abstract='true'><method name='getMetrics' abstract='true' return='org.apache.http.io.HttpTransportMetrics'/><method name='isDataAvailable' abstract='true' return='boolean'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='read' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' abstract='true' return='int'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method><method name='readLine' abstract='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='SessionOutputBuffer' abstract='true'><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getMetrics' abstract='true' return='org.apache.http.io.HttpTransportMetrics'/><method name='write' abstract='true'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='b' type='byte[]'/><exception name='IOException' type='java.io.IOException'/></method><method name='write' abstract='true'><parameter name='b' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine' abstract='true'><parameter name='s' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/></method><method name='writeLine' abstract='true'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='IOException' type='java.io.IOException'/></method></interface></package><package name='org.apache.http.message'><class name='AbstractHttpMessage' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.HttpMessage'/><constructor name='AbstractHttpMessage' type='org.apache.http.message.AbstractHttpMessage' visibility='protected'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><constructor name='AbstractHttpMessage' type='org.apache.http.message.AbstractHttpMessage' visibility='protected'/><field name='headergroup' type='org.apache.http.message.HeaderGroup' visibility='protected'/><field name='params' type='org.apache.http.params.HttpParams' visibility='protected'/><method name='addHeader'><parameter name='header' type='org.apache.http.Header'/></method><method name='addHeader'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='containsHeader' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getAllHeaders' return='org.apache.http.Header[]'/><method name='getFirstHeader' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getHeaders' return='org.apache.http.Header[]'><parameter name='name' type='java.lang.String'/></method><method name='getLastHeader' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getParams' return='org.apache.http.params.HttpParams'/><method name='headerIterator' return='org.apache.http.HeaderIterator'/><method name='headerIterator' return='org.apache.http.HeaderIterator'><parameter name='name' type='java.lang.String'/></method><method name='removeHeader'><parameter name='header' type='org.apache.http.Header'/></method><method name='removeHeaders'><parameter name='name' type='java.lang.String'/></method><method name='setHeader'><parameter name='header' type='org.apache.http.Header'/></method><method name='setHeader'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setHeaders'><parameter name='headers' type='org.apache.http.Header[]'/></method><method name='setParams'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><class name='BasicHeader' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.Header'/><constructor name='BasicHeader' type='org.apache.http.message.BasicHeader'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getElements' return='org.apache.http.HeaderElement[]'><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='getName' return='java.lang.String'/><method name='getValue' return='java.lang.String'/></class><class name='BasicHeaderElement' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.HeaderElement'/><constructor name='BasicHeaderElement' type='org.apache.http.message.BasicHeaderElement'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><parameter name='parameters' type='org.apache.http.NameValuePair[]'/></constructor><constructor name='BasicHeaderElement' type='org.apache.http.message.BasicHeaderElement'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getName' return='java.lang.String'/><method name='getParameter' return='org.apache.http.NameValuePair'><parameter name='index' type='int'/></method><method name='getParameterByName' return='org.apache.http.NameValuePair'><parameter name='name' type='java.lang.String'/></method><method name='getParameterCount' return='int'/><method name='getParameters' return='org.apache.http.NameValuePair[]'/><method name='getValue' return='java.lang.String'/></class><class name='BasicHeaderElementIterator' extends='java.lang.Object'><implements name='org.apache.http.HeaderElementIterator'/><constructor name='BasicHeaderElementIterator' type='org.apache.http.message.BasicHeaderElementIterator'><parameter name='headerIterator' type='org.apache.http.HeaderIterator'/><parameter name='parser' type='org.apache.http.message.HeaderValueParser'/></constructor><constructor name='BasicHeaderElementIterator' type='org.apache.http.message.BasicHeaderElementIterator'><parameter name='headerIterator' type='org.apache.http.HeaderIterator'/></constructor><method name='hasNext' return='boolean'/><method name='next' final='true' return='java.lang.Object'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='nextElement' return='org.apache.http.HeaderElement'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='remove'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method></class><class name='BasicHeaderIterator' extends='java.lang.Object'><implements name='org.apache.http.HeaderIterator'/><constructor name='BasicHeaderIterator' type='org.apache.http.message.BasicHeaderIterator'><parameter name='headers' type='org.apache.http.Header[]'/><parameter name='name' type='java.lang.String'/></constructor><field name='allHeaders' final='true' value='null' type='org.apache.http.Header[]' visibility='protected'/><field name='currentIndex' type='int' visibility='protected'/><field name='headerName' type='java.lang.String' visibility='protected'/><method name='filterHeader' visibility='protected' return='boolean'><parameter name='index' type='int'/></method><method name='findNext' visibility='protected' return='int'><parameter name='from' type='int'/></method><method name='hasNext' return='boolean'/><method name='next' final='true' return='java.lang.Object'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='nextHeader' return='org.apache.http.Header'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='remove'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method></class><class name='BasicHeaderValueFormatter' extends='java.lang.Object'><implements name='org.apache.http.message.HeaderValueFormatter'/><constructor name='BasicHeaderValueFormatter' type='org.apache.http.message.BasicHeaderValueFormatter'/><field name='DEFAULT' final='true' static='true' type='org.apache.http.message.BasicHeaderValueFormatter'/><field name='SEPARATORS' final='true' static='true' value='&quot; ;,:@()&lt;&gt;\\\&quot;/[]?={}\t&quot;' type='java.lang.String'/><field name='UNSAFE_CHARS' final='true' static='true' value='&quot;\&quot;\\&quot;' type='java.lang.String'/><method name='doFormatValue' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='value' type='java.lang.String'/><parameter name='quote' type='boolean'/></method><method name='estimateElementsLen' visibility='protected' return='int'><parameter name='elems' type='org.apache.http.HeaderElement[]'/></method><method name='estimateHeaderElementLen' visibility='protected' return='int'><parameter name='elem' type='org.apache.http.HeaderElement'/></method><method name='estimateNameValuePairLen' visibility='protected' return='int'><parameter name='nvp' type='org.apache.http.NameValuePair'/></method><method name='estimateParametersLen' visibility='protected' return='int'><parameter name='nvps' type='org.apache.http.NameValuePair[]'/></method><method name='formatElements' final='true' static='true' return='java.lang.String'><parameter name='elems' type='org.apache.http.HeaderElement[]'/><parameter name='quote' type='boolean'/><parameter name='formatter' type='org.apache.http.message.HeaderValueFormatter'/></method><method name='formatElements' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='elems' type='org.apache.http.HeaderElement[]'/><parameter name='quote' type='boolean'/></method><method name='formatHeaderElement' final='true' static='true' return='java.lang.String'><parameter name='elem' type='org.apache.http.HeaderElement'/><parameter name='quote' type='boolean'/><parameter name='formatter' type='org.apache.http.message.HeaderValueFormatter'/></method><method name='formatHeaderElement' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='elem' type='org.apache.http.HeaderElement'/><parameter name='quote' type='boolean'/></method><method name='formatNameValuePair' final='true' static='true' return='java.lang.String'><parameter name='nvp' type='org.apache.http.NameValuePair'/><parameter name='quote' type='boolean'/><parameter name='formatter' type='org.apache.http.message.HeaderValueFormatter'/></method><method name='formatNameValuePair' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='nvp' type='org.apache.http.NameValuePair'/><parameter name='quote' type='boolean'/></method><method name='formatParameters' final='true' static='true' return='java.lang.String'><parameter name='nvps' type='org.apache.http.NameValuePair[]'/><parameter name='quote' type='boolean'/><parameter name='formatter' type='org.apache.http.message.HeaderValueFormatter'/></method><method name='formatParameters' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='nvps' type='org.apache.http.NameValuePair[]'/><parameter name='quote' type='boolean'/></method><method name='isSeparator' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method><method name='isUnsafe' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method></class><class name='BasicHeaderValueParser' extends='java.lang.Object'><implements name='org.apache.http.message.HeaderValueParser'/><constructor name='BasicHeaderValueParser' type='org.apache.http.message.BasicHeaderValueParser'/><field name='DEFAULT' final='true' static='true' type='org.apache.http.message.BasicHeaderValueParser'/><method name='createHeaderElement' visibility='protected' return='org.apache.http.HeaderElement'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><parameter name='params' type='org.apache.http.NameValuePair[]'/></method><method name='createNameValuePair' visibility='protected' return='org.apache.http.NameValuePair'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='parseElements' final='true' static='true' return='org.apache.http.HeaderElement[]'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.HeaderValueParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseElements' return='org.apache.http.HeaderElement[]'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method><method name='parseHeaderElement' final='true' static='true' return='org.apache.http.HeaderElement'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.HeaderValueParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseHeaderElement' return='org.apache.http.HeaderElement'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method><method name='parseNameValuePair' final='true' static='true' return='org.apache.http.NameValuePair'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.HeaderValueParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseNameValuePair' return='org.apache.http.NameValuePair'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method><method name='parseNameValuePair' return='org.apache.http.NameValuePair'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><parameter name='delimiters' type='char[]'/></method><method name='parseParameters' final='true' static='true' return='org.apache.http.NameValuePair[]'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.HeaderValueParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseParameters' return='org.apache.http.NameValuePair[]'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method></class><class name='BasicHttpEntityEnclosingRequest' extends='org.apache.http.message.BasicHttpRequest'><implements name='org.apache.http.HttpEntityEnclosingRequest'/><constructor name='BasicHttpEntityEnclosingRequest' type='org.apache.http.message.BasicHttpEntityEnclosingRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/></constructor><constructor name='BasicHttpEntityEnclosingRequest' type='org.apache.http.message.BasicHttpEntityEnclosingRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><parameter name='ver' type='org.apache.http.ProtocolVersion'/></constructor><constructor name='BasicHttpEntityEnclosingRequest' type='org.apache.http.message.BasicHttpEntityEnclosingRequest'><parameter name='requestline' type='org.apache.http.RequestLine'/></constructor><method name='expectContinue' return='boolean'/><method name='getEntity' return='org.apache.http.HttpEntity'/><method name='setEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/></method></class><class name='BasicHttpRequest' extends='org.apache.http.message.AbstractHttpMessage'><implements name='org.apache.http.HttpRequest'/><constructor name='BasicHttpRequest' type='org.apache.http.message.BasicHttpRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/></constructor><constructor name='BasicHttpRequest' type='org.apache.http.message.BasicHttpRequest'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><parameter name='ver' type='org.apache.http.ProtocolVersion'/></constructor><constructor name='BasicHttpRequest' type='org.apache.http.message.BasicHttpRequest'><parameter name='requestline' type='org.apache.http.RequestLine'/></constructor><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getRequestLine' return='org.apache.http.RequestLine'/></class><class name='BasicHttpResponse' extends='org.apache.http.message.AbstractHttpMessage'><implements name='org.apache.http.HttpResponse'/><constructor name='BasicHttpResponse' type='org.apache.http.message.BasicHttpResponse'><parameter name='statusline' type='org.apache.http.StatusLine'/><parameter name='catalog' type='org.apache.http.ReasonPhraseCatalog'/><parameter name='locale' type='java.util.Locale'/></constructor><constructor name='BasicHttpResponse' type='org.apache.http.message.BasicHttpResponse'><parameter name='statusline' type='org.apache.http.StatusLine'/></constructor><constructor name='BasicHttpResponse' type='org.apache.http.message.BasicHttpResponse'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='code' type='int'/><parameter name='reason' type='java.lang.String'/></constructor><method name='getEntity' return='org.apache.http.HttpEntity'/><method name='getLocale' return='java.util.Locale'/><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getReason' visibility='protected' return='java.lang.String'><parameter name='code' type='int'/></method><method name='getStatusLine' return='org.apache.http.StatusLine'/><method name='setEntity'><parameter name='entity' type='org.apache.http.HttpEntity'/></method><method name='setLocale'><parameter name='loc' type='java.util.Locale'/></method><method name='setReasonPhrase'><parameter name='reason' type='java.lang.String'/></method><method name='setStatusCode'><parameter name='code' type='int'/></method><method name='setStatusLine'><parameter name='statusline' type='org.apache.http.StatusLine'/></method><method name='setStatusLine'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='code' type='int'/></method><method name='setStatusLine'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='code' type='int'/><parameter name='reason' type='java.lang.String'/></method></class><class name='BasicLineFormatter' extends='java.lang.Object'><implements name='org.apache.http.message.LineFormatter'/><constructor name='BasicLineFormatter' type='org.apache.http.message.BasicLineFormatter'/><field name='DEFAULT' final='true' static='true' type='org.apache.http.message.BasicLineFormatter'/><method name='appendProtocolVersion' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='doFormatHeader' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='header' type='org.apache.http.Header'/></method><method name='doFormatRequestLine' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='reqline' type='org.apache.http.RequestLine'/></method><method name='doFormatStatusLine' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='statline' type='org.apache.http.StatusLine'/></method><method name='estimateProtocolVersionLen' visibility='protected' return='int'><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='formatHeader' final='true' static='true' return='java.lang.String'><parameter name='header' type='org.apache.http.Header'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/></method><method name='formatHeader' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='header' type='org.apache.http.Header'/></method><method name='formatProtocolVersion' final='true' static='true' return='java.lang.String'><parameter name='version' type='org.apache.http.ProtocolVersion'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/></method><method name='formatRequestLine' final='true' static='true' return='java.lang.String'><parameter name='reqline' type='org.apache.http.RequestLine'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/></method><method name='formatRequestLine' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='reqline' type='org.apache.http.RequestLine'/></method><method name='formatStatusLine' final='true' static='true' return='java.lang.String'><parameter name='statline' type='org.apache.http.StatusLine'/><parameter name='formatter' type='org.apache.http.message.LineFormatter'/></method><method name='formatStatusLine' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='statline' type='org.apache.http.StatusLine'/></method><method name='initBuffer' visibility='protected' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/></method></class><class name='BasicLineParser' extends='java.lang.Object'><implements name='org.apache.http.message.LineParser'/><constructor name='BasicLineParser' type='org.apache.http.message.BasicLineParser'><parameter name='proto' type='org.apache.http.ProtocolVersion'/></constructor><constructor name='BasicLineParser' type='org.apache.http.message.BasicLineParser'/><field name='DEFAULT' final='true' static='true' type='org.apache.http.message.BasicLineParser'/><field name='protocol' final='true' type='org.apache.http.ProtocolVersion' visibility='protected'/><method name='createProtocolVersion' visibility='protected' return='org.apache.http.ProtocolVersion'><parameter name='major' type='int'/><parameter name='minor' type='int'/></method><method name='createRequestLine' visibility='protected' return='org.apache.http.RequestLine'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><parameter name='ver' type='org.apache.http.ProtocolVersion'/></method><method name='createStatusLine' visibility='protected' return='org.apache.http.StatusLine'><parameter name='ver' type='org.apache.http.ProtocolVersion'/><parameter name='status' type='int'/><parameter name='reason' type='java.lang.String'/></method><method name='hasProtocolVersion' return='boolean'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method><method name='parseHeader' final='true' static='true' return='org.apache.http.Header'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.LineParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseHeader' return='org.apache.http.Header'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseProtocolVersion' final='true' static='true' return='org.apache.http.ProtocolVersion'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.LineParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseProtocolVersion' return='org.apache.http.ProtocolVersion'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseRequestLine' final='true' static='true' return='org.apache.http.RequestLine'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.LineParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseRequestLine' return='org.apache.http.RequestLine'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseStatusLine' final='true' static='true' return='org.apache.http.StatusLine'><parameter name='value' type='java.lang.String'/><parameter name='parser' type='org.apache.http.message.LineParser'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseStatusLine' return='org.apache.http.StatusLine'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='skipWhitespace' visibility='protected'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method></class><class name='BasicListHeaderIterator' extends='java.lang.Object'><implements name='org.apache.http.HeaderIterator'/><constructor name='BasicListHeaderIterator' type='org.apache.http.message.BasicListHeaderIterator'><parameter name='headers' type='java.util.List'/><parameter name='name' type='java.lang.String'/></constructor><field name='allHeaders' final='true' type='java.util.List' visibility='protected'/><field name='currentIndex' type='int' visibility='protected'/><field name='headerName' type='java.lang.String' visibility='protected'/><field name='lastIndex' type='int' visibility='protected'/><method name='filterHeader' visibility='protected' return='boolean'><parameter name='index' type='int'/></method><method name='findNext' visibility='protected' return='int'><parameter name='from' type='int'/></method><method name='hasNext' return='boolean'/><method name='next' final='true' return='java.lang.Object'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='nextHeader' return='org.apache.http.Header'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/></method><method name='remove'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method></class><class name='BasicNameValuePair' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.NameValuePair'/><constructor name='BasicNameValuePair' type='org.apache.http.message.BasicNameValuePair'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getName' return='java.lang.String'/><method name='getValue' return='java.lang.String'/></class><class name='BasicRequestLine' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.RequestLine'/><constructor name='BasicRequestLine' type='org.apache.http.message.BasicRequestLine'><parameter name='method' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><parameter name='version' type='org.apache.http.ProtocolVersion'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getMethod' return='java.lang.String'/><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getUri' return='java.lang.String'/></class><class name='BasicStatusLine' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.StatusLine'/><constructor name='BasicStatusLine' type='org.apache.http.message.BasicStatusLine'><parameter name='version' type='org.apache.http.ProtocolVersion'/><parameter name='statusCode' type='int'/><parameter name='reasonPhrase' type='java.lang.String'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getProtocolVersion' return='org.apache.http.ProtocolVersion'/><method name='getReasonPhrase' return='java.lang.String'/><method name='getStatusCode' return='int'/></class><class name='BasicTokenIterator' extends='java.lang.Object'><implements name='org.apache.http.TokenIterator'/><constructor name='BasicTokenIterator' type='org.apache.http.message.BasicTokenIterator'><parameter name='headerIterator' type='org.apache.http.HeaderIterator'/></constructor><field name='HTTP_SEPARATORS' final='true' static='true' value='&quot; ,;=()&lt;&gt;@:\\\&quot;/[]?{}\t&quot;' type='java.lang.String'/><field name='currentHeader' type='java.lang.String' visibility='protected'/><field name='currentToken' type='java.lang.String' visibility='protected'/><field name='headerIt' final='true' type='org.apache.http.HeaderIterator' visibility='protected'/><field name='searchPos' type='int' visibility='protected'/><method name='createToken' visibility='protected' return='java.lang.String'><parameter name='value' type='java.lang.String'/><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method name='findNext' visibility='protected' return='int'><parameter name='from' type='int'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='findTokenEnd' visibility='protected' return='int'><parameter name='from' type='int'/></method><method name='findTokenSeparator' visibility='protected' return='int'><parameter name='from' type='int'/></method><method name='findTokenStart' visibility='protected' return='int'><parameter name='from' type='int'/></method><method name='hasNext' return='boolean'/><method name='isHttpSeparator' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method><method name='isTokenChar' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method><method name='isTokenSeparator' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method><method name='isWhitespace' visibility='protected' return='boolean'><parameter name='ch' type='char'/></method><method name='next' final='true' return='java.lang.Object'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='nextToken' return='java.lang.String'><exception name='NoSuchElementException' type='java.util.NoSuchElementException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='remove' final='true'><exception name='UnsupportedOperationException' type='java.lang.UnsupportedOperationException'/></method></class><class name='BufferedHeader' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.FormattedHeader'/><constructor name='BufferedHeader' type='org.apache.http.message.BufferedHeader'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='ParseException' type='org.apache.http.ParseException'/></constructor><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='getBuffer' return='org.apache.http.util.CharArrayBuffer'/><method name='getElements' return='org.apache.http.HeaderElement[]'><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='getName' return='java.lang.String'/><method name='getValue' return='java.lang.String'/><method name='getValuePos' return='int'/></class><class name='HeaderGroup' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><constructor name='HeaderGroup' type='org.apache.http.message.HeaderGroup'/><method name='addHeader'><parameter name='header' type='org.apache.http.Header'/></method><method name='clear'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='containsHeader' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='copy' return='org.apache.http.message.HeaderGroup'/><method name='getAllHeaders' return='org.apache.http.Header[]'/><method name='getCondensedHeader' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getFirstHeader' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='getHeaders' return='org.apache.http.Header[]'><parameter name='name' type='java.lang.String'/></method><method name='getLastHeader' return='org.apache.http.Header'><parameter name='name' type='java.lang.String'/></method><method name='iterator' return='org.apache.http.HeaderIterator'/><method name='iterator' return='org.apache.http.HeaderIterator'><parameter name='name' type='java.lang.String'/></method><method name='removeHeader'><parameter name='header' type='org.apache.http.Header'/></method><method name='setHeaders'><parameter name='headers' type='org.apache.http.Header[]'/></method><method name='updateHeader'><parameter name='header' type='org.apache.http.Header'/></method></class><class name='ParserCursor' extends='java.lang.Object'><constructor name='ParserCursor' type='org.apache.http.message.ParserCursor'><parameter name='lowerBound' type='int'/><parameter name='upperBound' type='int'/></constructor><method name='atEnd' return='boolean'/><method name='getLowerBound' return='int'/><method name='getPos' return='int'/><method name='getUpperBound' return='int'/><method name='updatePos'><parameter name='pos' type='int'/></method></class><interface name='HeaderValueFormatter' abstract='true'><method name='formatElements' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='elems' type='org.apache.http.HeaderElement[]'/><parameter name='quote' type='boolean'/></method><method name='formatHeaderElement' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='elem' type='org.apache.http.HeaderElement'/><parameter name='quote' type='boolean'/></method><method name='formatNameValuePair' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='nvp' type='org.apache.http.NameValuePair'/><parameter name='quote' type='boolean'/></method><method name='formatParameters' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='nvps' type='org.apache.http.NameValuePair[]'/><parameter name='quote' type='boolean'/></method></interface><interface name='HeaderValueParser' abstract='true'><method name='parseElements' abstract='true' return='org.apache.http.HeaderElement[]'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseHeaderElement' abstract='true' return='org.apache.http.HeaderElement'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseNameValuePair' abstract='true' return='org.apache.http.NameValuePair'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseParameters' abstract='true' return='org.apache.http.NameValuePair[]'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></interface><interface name='LineFormatter' abstract='true'><method name='appendProtocolVersion' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='formatHeader' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='header' type='org.apache.http.Header'/></method><method name='formatRequestLine' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='reqline' type='org.apache.http.RequestLine'/></method><method name='formatStatusLine' abstract='true' return='org.apache.http.util.CharArrayBuffer'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='statline' type='org.apache.http.StatusLine'/></method></interface><interface name='LineParser' abstract='true'><method name='hasProtocolVersion' abstract='true' return='boolean'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/></method><method name='parseHeader' abstract='true' return='org.apache.http.Header'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseProtocolVersion' abstract='true' return='org.apache.http.ProtocolVersion'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseRequestLine' abstract='true' return='org.apache.http.RequestLine'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='parseStatusLine' abstract='true' return='org.apache.http.StatusLine'><parameter name='buffer' type='org.apache.http.util.CharArrayBuffer'/><parameter name='cursor' type='org.apache.http.message.ParserCursor'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></interface></package><package name='org.apache.http.params'><class name='AbstractHttpParams' extends='java.lang.Object' abstract='true'><implements name='org.apache.http.params.HttpParams'/><constructor name='AbstractHttpParams' type='org.apache.http.params.AbstractHttpParams' visibility='protected'/><method name='getBooleanParameter' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/></method><method name='getDoubleParameter' return='double'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='double'/></method><method name='getIntParameter' return='int'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getLongParameter' return='long'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='isParameterFalse' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='isParameterTrue' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='setBooleanParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='setDoubleParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='setIntParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='setLongParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method></class><class name='BasicHttpParams' final='true' extends='org.apache.http.params.AbstractHttpParams'><implements name='java.lang.Cloneable'/><implements name='java.io.Serializable'/><constructor name='BasicHttpParams' type='org.apache.http.params.BasicHttpParams'/><method name='clear'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='copy' return='org.apache.http.params.HttpParams'/><method name='copyParams' visibility='protected'><parameter name='target' type='org.apache.http.params.HttpParams'/></method><method name='getParameter' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='isParameterSet' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='isParameterSetLocally' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='removeParameter' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='setParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method name='setParameters'><parameter name='names' type='java.lang.String[]'/><parameter name='value' type='java.lang.Object'/></method></class><class name='DefaultedHttpParams' final='true' extends='org.apache.http.params.AbstractHttpParams'><constructor name='DefaultedHttpParams' type='org.apache.http.params.DefaultedHttpParams'><parameter name='local' type='org.apache.http.params.HttpParams'/><parameter name='defaults' type='org.apache.http.params.HttpParams'/></constructor><method name='copy' return='org.apache.http.params.HttpParams'/><method name='getDefaults' return='org.apache.http.params.HttpParams'/><method name='getParameter' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='removeParameter' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='setParameter' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method></class><class name='HttpAbstractParamBean' extends='java.lang.Object' abstract='true'><constructor name='HttpAbstractParamBean' type='org.apache.http.params.HttpAbstractParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><field name='params' final='true' type='org.apache.http.params.HttpParams' visibility='protected'/></class><class name='HttpConnectionParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='HttpConnectionParamBean' type='org.apache.http.params.HttpConnectionParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setConnectionTimeout'><parameter name='connectionTimeout' type='int'/></method><method name='setLinger'><parameter name='linger' type='int'/></method><method name='setSoTimeout'><parameter name='soTimeout' type='int'/></method><method name='setSocketBufferSize'><parameter name='socketBufferSize' type='int'/></method><method name='setStaleCheckingEnabled'><parameter name='staleCheckingEnabled' type='boolean'/></method><method name='setTcpNoDelay'><parameter name='tcpNoDelay' type='boolean'/></method></class><class name='HttpConnectionParams' final='true' extends='java.lang.Object'><implements name='org.apache.http.params.CoreConnectionPNames'/><method name='getConnectionTimeout' static='true' return='int'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getLinger' static='true' return='int'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getSoTimeout' static='true' return='int'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getSocketBufferSize' static='true' return='int'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getTcpNoDelay' static='true' return='boolean'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='isStaleCheckingEnabled' static='true' return='boolean'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setConnectionTimeout' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='timeout' type='int'/></method><method name='setLinger' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='value' type='int'/></method><method name='setSoTimeout' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='timeout' type='int'/></method><method name='setSocketBufferSize' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='size' type='int'/></method><method name='setStaleCheckingEnabled' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='value' type='boolean'/></method><method name='setTcpNoDelay' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='value' type='boolean'/></method></class><class name='HttpProtocolParamBean' extends='org.apache.http.params.HttpAbstractParamBean'><constructor name='HttpProtocolParamBean' type='org.apache.http.params.HttpProtocolParamBean'><parameter name='params' type='org.apache.http.params.HttpParams'/></constructor><method name='setContentCharset'><parameter name='contentCharset' type='java.lang.String'/></method><method name='setHttpElementCharset'><parameter name='httpElementCharset' type='java.lang.String'/></method><method name='setUseExpectContinue'><parameter name='useExpectContinue' type='boolean'/></method><method name='setUserAgent'><parameter name='userAgent' type='java.lang.String'/></method><method name='setVersion'><parameter name='version' type='org.apache.http.HttpVersion'/></method></class><class name='HttpProtocolParams' final='true' extends='java.lang.Object'><implements name='org.apache.http.params.CoreProtocolPNames'/><method name='getContentCharset' static='true' return='java.lang.String'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getHttpElementCharset' static='true' return='java.lang.String'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getUserAgent' static='true' return='java.lang.String'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='getVersion' static='true' return='org.apache.http.ProtocolVersion'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setContentCharset' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='charset' type='java.lang.String'/></method><method name='setHttpElementCharset' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='charset' type='java.lang.String'/></method><method name='setUseExpectContinue' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='b' type='boolean'/></method><method name='setUserAgent' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='useragent' type='java.lang.String'/></method><method name='setVersion' static='true'><parameter name='params' type='org.apache.http.params.HttpParams'/><parameter name='version' type='org.apache.http.ProtocolVersion'/></method><method name='useExpectContinue' static='true' return='boolean'><parameter name='params' type='org.apache.http.params.HttpParams'/></method></class><interface name='CoreConnectionPNames' abstract='true'><field name='CONNECTION_TIMEOUT' final='true' static='true' value='&quot;http.connection.timeout&quot;' type='java.lang.String'/><field name='MAX_HEADER_COUNT' final='true' static='true' value='&quot;http.connection.max-header-count&quot;' type='java.lang.String'/><field name='MAX_LINE_LENGTH' final='true' static='true' value='&quot;http.connection.max-line-length&quot;' type='java.lang.String'/><field name='SOCKET_BUFFER_SIZE' final='true' static='true' value='&quot;http.socket.buffer-size&quot;' type='java.lang.String'/><field name='SO_LINGER' final='true' static='true' value='&quot;http.socket.linger&quot;' type='java.lang.String'/><field name='SO_TIMEOUT' final='true' static='true' value='&quot;http.socket.timeout&quot;' type='java.lang.String'/><field name='STALE_CONNECTION_CHECK' final='true' static='true' value='&quot;http.connection.stalecheck&quot;' type='java.lang.String'/><field name='TCP_NODELAY' final='true' static='true' value='&quot;http.tcp.nodelay&quot;' type='java.lang.String'/></interface><interface name='CoreProtocolPNames' abstract='true'><field name='HTTP_CONTENT_CHARSET' final='true' static='true' value='&quot;http.protocol.content-charset&quot;' type='java.lang.String'/><field name='HTTP_ELEMENT_CHARSET' final='true' static='true' value='&quot;http.protocol.element-charset&quot;' type='java.lang.String'/><field name='ORIGIN_SERVER' final='true' static='true' value='&quot;http.origin-server&quot;' type='java.lang.String'/><field name='PROTOCOL_VERSION' final='true' static='true' value='&quot;http.protocol.version&quot;' type='java.lang.String'/><field name='STRICT_TRANSFER_ENCODING' final='true' static='true' value='&quot;http.protocol.strict-transfer-encoding&quot;' type='java.lang.String'/><field name='USER_AGENT' final='true' static='true' value='&quot;http.useragent&quot;' type='java.lang.String'/><field name='USE_EXPECT_CONTINUE' final='true' static='true' value='&quot;http.protocol.expect-continue&quot;' type='java.lang.String'/><field name='WAIT_FOR_CONTINUE' final='true' static='true' value='&quot;http.protocol.wait-for-continue&quot;' type='java.lang.String'/></interface><interface name='HttpParams' abstract='true'><method name='copy' abstract='true' return='org.apache.http.params.HttpParams'/><method name='getBooleanParameter' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/></method><method name='getDoubleParameter' abstract='true' return='double'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='double'/></method><method name='getIntParameter' abstract='true' return='int'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='int'/></method><method name='getLongParameter' abstract='true' return='long'><parameter name='name' type='java.lang.String'/><parameter name='defaultValue' type='long'/></method><method name='getParameter' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='isParameterFalse' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='isParameterTrue' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='removeParameter' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='setBooleanParameter' abstract='true' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/></method><method name='setDoubleParameter' abstract='true' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='double'/></method><method name='setIntParameter' abstract='true' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='int'/></method><method name='setLongParameter' abstract='true' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='long'/></method><method name='setParameter' abstract='true' return='org.apache.http.params.HttpParams'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method></interface></package><package name='org.apache.http.protocol'><class name='BasicHttpContext' extends='java.lang.Object'><implements name='org.apache.http.protocol.HttpContext'/><constructor name='BasicHttpContext' type='org.apache.http.protocol.BasicHttpContext'/><constructor name='BasicHttpContext' type='org.apache.http.protocol.BasicHttpContext'><parameter name='parentContext' type='org.apache.http.protocol.HttpContext'/></constructor><method name='getAttribute' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='removeAttribute' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='setAttribute'><parameter name='id' type='java.lang.String'/><parameter name='obj' type='java.lang.Object'/></method></class><class name='BasicHttpProcessor' final='true' extends='java.lang.Object'><implements name='java.lang.Cloneable'/><implements name='org.apache.http.protocol.HttpProcessor'/><implements name='org.apache.http.protocol.HttpRequestInterceptorList'/><implements name='org.apache.http.protocol.HttpResponseInterceptorList'/><constructor name='BasicHttpProcessor' type='org.apache.http.protocol.BasicHttpProcessor'/><field name='requestInterceptors' type='java.util.List' visibility='protected'/><field name='responseInterceptors' type='java.util.List' visibility='protected'/><method name='addInterceptor' final='true'><parameter name='interceptor' type='org.apache.http.HttpRequestInterceptor'/></method><method name='addInterceptor' final='true'><parameter name='interceptor' type='org.apache.http.HttpRequestInterceptor'/><parameter name='index' type='int'/></method><method name='addInterceptor' final='true'><parameter name='interceptor' type='org.apache.http.HttpResponseInterceptor'/></method><method name='addInterceptor' final='true'><parameter name='interceptor' type='org.apache.http.HttpResponseInterceptor'/><parameter name='index' type='int'/></method><method name='addRequestInterceptor'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/></method><method name='addRequestInterceptor'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/><parameter name='index' type='int'/></method><method name='addResponseInterceptor'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/><parameter name='index' type='int'/></method><method name='addResponseInterceptor'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/></method><method name='clearInterceptors'/><method name='clearRequestInterceptors'/><method name='clearResponseInterceptors'/><method name='clone' return='java.lang.Object'><exception name='CloneNotSupportedException' type='java.lang.CloneNotSupportedException'/></method><method name='copy' return='org.apache.http.protocol.BasicHttpProcessor'/><method name='copyInterceptors' visibility='protected'><parameter name='target' type='org.apache.http.protocol.BasicHttpProcessor'/></method><method name='getRequestInterceptor' return='org.apache.http.HttpRequestInterceptor'><parameter name='index' type='int'/></method><method name='getRequestInterceptorCount' return='int'/><method name='getResponseInterceptor' return='org.apache.http.HttpResponseInterceptor'><parameter name='index' type='int'/></method><method name='getResponseInterceptorCount' return='int'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='removeRequestInterceptorByClass'><parameter name='clazz' type='java.lang.Class'/></method><method name='removeResponseInterceptorByClass'><parameter name='clazz' type='java.lang.Class'/></method><method name='setInterceptors'><parameter name='list' type='java.util.List'/></method></class><class name='DefaultedHttpContext' final='true' extends='java.lang.Object'><implements name='org.apache.http.protocol.HttpContext'/><constructor name='DefaultedHttpContext' type='org.apache.http.protocol.DefaultedHttpContext'><parameter name='local' type='org.apache.http.protocol.HttpContext'/><parameter name='defaults' type='org.apache.http.protocol.HttpContext'/></constructor><method name='getAttribute' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='getDefaults' return='org.apache.http.protocol.HttpContext'/><method name='removeAttribute' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='setAttribute'><parameter name='id' type='java.lang.String'/><parameter name='obj' type='java.lang.Object'/></method></class><class name='HTTP' final='true' extends='java.lang.Object'><field name='ASCII' final='true' static='true' value='&quot;ASCII&quot;' type='java.lang.String'/><field name='CHARSET_PARAM' final='true' static='true' value='&quot;; charset=&quot;' type='java.lang.String'/><field name='CHUNK_CODING' final='true' static='true' value='&quot;chunked&quot;' type='java.lang.String'/><field name='CONN_CLOSE' final='true' static='true' value='&quot;Close&quot;' type='java.lang.String'/><field name='CONN_DIRECTIVE' final='true' static='true' value='&quot;Connection&quot;' type='java.lang.String'/><field name='CONN_KEEP_ALIVE' final='true' static='true' value='&quot;Keep-Alive&quot;' type='java.lang.String'/><field name='CONTENT_ENCODING' final='true' static='true' value='&quot;Content-Encoding&quot;' type='java.lang.String'/><field name='CONTENT_LEN' final='true' static='true' value='&quot;Content-Length&quot;' type='java.lang.String'/><field name='CONTENT_TYPE' final='true' static='true' value='&quot;Content-Type&quot;' type='java.lang.String'/><field name='CR' final='true' static='true' value='13' type='int'/><field name='DATE_HEADER' final='true' static='true' value='&quot;Date&quot;' type='java.lang.String'/><field name='DEFAULT_CONTENT_CHARSET' final='true' static='true' value='&quot;ISO-8859-1&quot;' type='java.lang.String'/><field name='DEFAULT_CONTENT_TYPE' final='true' static='true' value='&quot;application/octet-stream&quot;' type='java.lang.String'/><field name='DEFAULT_PROTOCOL_CHARSET' final='true' static='true' value='&quot;US-ASCII&quot;' type='java.lang.String'/><field name='EXPECT_CONTINUE' final='true' static='true' value='&quot;100-Continue&quot;' type='java.lang.String'/><field name='EXPECT_DIRECTIVE' final='true' static='true' value='&quot;Expect&quot;' type='java.lang.String'/><field name='HT' final='true' static='true' value='9' type='int'/><field name='IDENTITY_CODING' final='true' static='true' value='&quot;identity&quot;' type='java.lang.String'/><field name='ISO_8859_1' final='true' static='true' value='&quot;ISO-8859-1&quot;' type='java.lang.String'/><field name='LF' final='true' static='true' value='10' type='int'/><field name='OCTET_STREAM_TYPE' final='true' static='true' value='&quot;application/octet-stream&quot;' type='java.lang.String'/><field name='PLAIN_TEXT_TYPE' final='true' static='true' value='&quot;text/plain&quot;' type='java.lang.String'/><field name='SERVER_HEADER' final='true' static='true' value='&quot;Server&quot;' type='java.lang.String'/><field name='SP' final='true' static='true' value='32' type='int'/><field name='TARGET_HOST' final='true' static='true' value='&quot;Host&quot;' type='java.lang.String'/><field name='TRANSFER_ENCODING' final='true' static='true' value='&quot;Transfer-Encoding&quot;' type='java.lang.String'/><field name='USER_AGENT' final='true' static='true' value='&quot;User-Agent&quot;' type='java.lang.String'/><field name='US_ASCII' final='true' static='true' value='&quot;US-ASCII&quot;' type='java.lang.String'/><field name='UTF_16' final='true' static='true' value='&quot;UTF-16&quot;' type='java.lang.String'/><field name='UTF_8' final='true' static='true' value='&quot;UTF-8&quot;' type='java.lang.String'/><method name='isWhitespace' static='true' return='boolean'><parameter name='ch' type='char'/></method></class><class name='HttpDateGenerator' extends='java.lang.Object'><constructor name='HttpDateGenerator' type='org.apache.http.protocol.HttpDateGenerator'/><field name='GMT' final='true' static='true' type='java.util.TimeZone'/><field name='PATTERN_RFC1123' final='true' static='true' value='&quot;EEE, dd MMM yyyy HH:mm:ss zzz&quot;' type='java.lang.String'/><method name='getCurrentDate' synchronized='true' return='java.lang.String'/></class><class name='HttpRequestExecutor' extends='java.lang.Object'><constructor name='HttpRequestExecutor' type='org.apache.http.protocol.HttpRequestExecutor'/><method name='canResponseHaveBody' visibility='protected' return='boolean'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='response' type='org.apache.http.HttpResponse'/></method><method name='doReceiveResponse' visibility='protected' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='conn' type='org.apache.http.HttpClientConnection'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='doSendRequest' visibility='protected' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='conn' type='org.apache.http.HttpClientConnection'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='execute' return='org.apache.http.HttpResponse'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='conn' type='org.apache.http.HttpClientConnection'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='postProcess'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='processor' type='org.apache.http.protocol.HttpProcessor'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='preProcess'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='processor' type='org.apache.http.protocol.HttpProcessor'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='HttpRequestHandlerRegistry' extends='java.lang.Object'><implements name='org.apache.http.protocol.HttpRequestHandlerResolver'/><constructor name='HttpRequestHandlerRegistry' type='org.apache.http.protocol.HttpRequestHandlerRegistry'/><method name='lookup' return='org.apache.http.protocol.HttpRequestHandler'><parameter name='requestURI' type='java.lang.String'/></method><method name='matchUriRequestPattern' deprecated='1' visibility='protected' return='boolean'><parameter name='pattern' type='java.lang.String'/><parameter name='requestUri' type='java.lang.String'/></method><method name='register'><parameter name='pattern' type='java.lang.String'/><parameter name='handler' type='org.apache.http.protocol.HttpRequestHandler'/></method><method name='setHandlers'><parameter name='map' type='java.util.Map'/></method><method name='unregister'><parameter name='pattern' type='java.lang.String'/></method></class><class name='HttpService' extends='java.lang.Object'><constructor name='HttpService' type='org.apache.http.protocol.HttpService'><parameter name='proc' type='org.apache.http.protocol.HttpProcessor'/><parameter name='connStrategy' type='org.apache.http.ConnectionReuseStrategy'/><parameter name='responseFactory' type='org.apache.http.HttpResponseFactory'/></constructor><method name='doService' visibility='protected'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='getParams' return='org.apache.http.params.HttpParams'/><method name='handleException' visibility='protected'><parameter name='ex' type='org.apache.http.HttpException'/><parameter name='response' type='org.apache.http.HttpResponse'/></method><method name='handleRequest'><parameter name='conn' type='org.apache.http.HttpServerConnection'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method><method name='setConnReuseStrategy'><parameter name='connStrategy' type='org.apache.http.ConnectionReuseStrategy'/></method><method name='setExpectationVerifier'><parameter name='expectationVerifier' type='org.apache.http.protocol.HttpExpectationVerifier'/></method><method name='setHandlerResolver'><parameter name='handlerResolver' type='org.apache.http.protocol.HttpRequestHandlerResolver'/></method><method name='setHttpProcessor'><parameter name='processor' type='org.apache.http.protocol.HttpProcessor'/></method><method name='setParams'><parameter name='params' type='org.apache.http.params.HttpParams'/></method><method name='setResponseFactory'><parameter name='responseFactory' type='org.apache.http.HttpResponseFactory'/></method></class><class name='RequestConnControl' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestConnControl' type='org.apache.http.protocol.RequestConnControl'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestContent' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestContent' type='org.apache.http.protocol.RequestContent'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestDate' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestDate' type='org.apache.http.protocol.RequestDate'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestExpectContinue' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestExpectContinue' type='org.apache.http.protocol.RequestExpectContinue'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestTargetHost' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestTargetHost' type='org.apache.http.protocol.RequestTargetHost'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='RequestUserAgent' extends='java.lang.Object'><implements name='org.apache.http.HttpRequestInterceptor'/><constructor name='RequestUserAgent' type='org.apache.http.protocol.RequestUserAgent'/><method name='process'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ResponseConnControl' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseInterceptor'/><constructor name='ResponseConnControl' type='org.apache.http.protocol.ResponseConnControl'/><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ResponseContent' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseInterceptor'/><constructor name='ResponseContent' type='org.apache.http.protocol.ResponseContent'/><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ResponseDate' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseInterceptor'/><constructor name='ResponseDate' type='org.apache.http.protocol.ResponseDate'/><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='ResponseServer' extends='java.lang.Object'><implements name='org.apache.http.HttpResponseInterceptor'/><constructor name='ResponseServer' type='org.apache.http.protocol.ResponseServer'/><method name='process'><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></class><class name='SyncBasicHttpContext' extends='org.apache.http.protocol.BasicHttpContext'><constructor name='SyncBasicHttpContext' type='org.apache.http.protocol.SyncBasicHttpContext'><parameter name='parentContext' type='org.apache.http.protocol.HttpContext'/></constructor></class><class name='UriPatternMatcher' extends='java.lang.Object'><constructor name='UriPatternMatcher' type='org.apache.http.protocol.UriPatternMatcher'/><method name='lookup' return='java.lang.Object'><parameter name='requestURI' type='java.lang.String'/></method><method name='matchUriRequestPattern' visibility='protected' return='boolean'><parameter name='pattern' type='java.lang.String'/><parameter name='requestUri' type='java.lang.String'/></method><method name='register'><parameter name='pattern' type='java.lang.String'/><parameter name='handler' type='java.lang.Object'/></method><method name='setHandlers'><parameter name='map' type='java.util.Map'/></method><method name='unregister'><parameter name='pattern' type='java.lang.String'/></method></class><interface name='ExecutionContext' abstract='true'><field name='HTTP_CONNECTION' final='true' static='true' value='&quot;http.connection&quot;' type='java.lang.String'/><field name='HTTP_PROXY_HOST' final='true' static='true' value='&quot;http.proxy_host&quot;' type='java.lang.String'/><field name='HTTP_REQUEST' final='true' static='true' value='&quot;http.request&quot;' type='java.lang.String'/><field name='HTTP_REQ_SENT' final='true' static='true' value='&quot;http.request_sent&quot;' type='java.lang.String'/><field name='HTTP_RESPONSE' final='true' static='true' value='&quot;http.response&quot;' type='java.lang.String'/><field name='HTTP_TARGET_HOST' final='true' static='true' value='&quot;http.target_host&quot;' type='java.lang.String'/></interface><interface name='HttpContext' abstract='true'><field name='RESERVED_PREFIX' final='true' static='true' value='&quot;http.&quot;' type='java.lang.String'/><method name='getAttribute' abstract='true' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='removeAttribute' abstract='true' return='java.lang.Object'><parameter name='id' type='java.lang.String'/></method><method name='setAttribute' abstract='true'><parameter name='id' type='java.lang.String'/><parameter name='obj' type='java.lang.Object'/></method></interface><interface name='HttpExpectationVerifier' abstract='true'><method name='verify' abstract='true'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/></method></interface><interface name='HttpProcessor' abstract='true'><implements name='org.apache.http.HttpRequestInterceptor'/><implements name='org.apache.http.HttpResponseInterceptor'/></interface><interface name='HttpRequestHandler' abstract='true'><method name='handle' abstract='true'><parameter name='request' type='org.apache.http.HttpRequest'/><parameter name='response' type='org.apache.http.HttpResponse'/><parameter name='context' type='org.apache.http.protocol.HttpContext'/><exception name='HttpException' type='org.apache.http.HttpException'/><exception name='IOException' type='java.io.IOException'/></method></interface><interface name='HttpRequestHandlerResolver' abstract='true'><method name='lookup' abstract='true' return='org.apache.http.protocol.HttpRequestHandler'><parameter name='requestURI' type='java.lang.String'/></method></interface><interface name='HttpRequestInterceptorList' abstract='true'><method name='addRequestInterceptor' abstract='true'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/></method><method name='addRequestInterceptor' abstract='true'><parameter name='itcp' type='org.apache.http.HttpRequestInterceptor'/><parameter name='index' type='int'/></method><method name='clearRequestInterceptors' abstract='true'/><method name='getRequestInterceptor' abstract='true' return='org.apache.http.HttpRequestInterceptor'><parameter name='index' type='int'/></method><method name='getRequestInterceptorCount' abstract='true' return='int'/><method name='removeRequestInterceptorByClass' abstract='true'><parameter name='clazz' type='java.lang.Class'/></method><method name='setInterceptors' abstract='true'><parameter name='itcps' type='java.util.List'/></method></interface><interface name='HttpResponseInterceptorList' abstract='true'><method name='addResponseInterceptor' abstract='true'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/></method><method name='addResponseInterceptor' abstract='true'><parameter name='itcp' type='org.apache.http.HttpResponseInterceptor'/><parameter name='index' type='int'/></method><method name='clearResponseInterceptors' abstract='true'/><method name='getResponseInterceptor' abstract='true' return='org.apache.http.HttpResponseInterceptor'><parameter name='index' type='int'/></method><method name='getResponseInterceptorCount' abstract='true' return='int'/><method name='removeResponseInterceptorByClass' abstract='true'><parameter name='clazz' type='java.lang.Class'/></method><method name='setInterceptors' abstract='true'><parameter name='itcps' type='java.util.List'/></method></interface></package><package name='org.apache.http.util'><class name='ByteArrayBuffer' final='true' extends='java.lang.Object'><constructor name='ByteArrayBuffer' type='org.apache.http.util.ByteArrayBuffer'><parameter name='capacity' type='int'/></constructor><method name='append'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='b' type='int'/></method><method name='append'><parameter name='b' type='char[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='b' type='org.apache.http.util.CharArrayBuffer'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='buffer' return='byte[]'/><method name='byteAt' return='int'><parameter name='i' type='int'/></method><method name='capacity' return='int'/><method name='clear'/><method name='isEmpty' return='boolean'/><method name='isFull' return='boolean'/><method name='length' return='int'/><method name='setLength'><parameter name='len' type='int'/></method><method name='toByteArray' return='byte[]'/></class><class name='CharArrayBuffer' final='true' extends='java.lang.Object'><constructor name='CharArrayBuffer' type='org.apache.http.util.CharArrayBuffer'><parameter name='capacity' type='int'/></constructor><method name='append'><parameter name='b' type='char[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='str' type='java.lang.String'/></method><method name='append'><parameter name='b' type='org.apache.http.util.CharArrayBuffer'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='b' type='org.apache.http.util.CharArrayBuffer'/></method><method name='append'><parameter name='ch' type='char'/></method><method name='append'><parameter name='b' type='byte[]'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='b' type='org.apache.http.util.ByteArrayBuffer'/><parameter name='off' type='int'/><parameter name='len' type='int'/></method><method name='append'><parameter name='obj' type='java.lang.Object'/></method><method name='buffer' return='char[]'/><method name='capacity' return='int'/><method name='charAt' return='char'><parameter name='i' type='int'/></method><method name='clear'/><method name='ensureCapacity'><parameter name='required' type='int'/></method><method name='indexOf' return='int'><parameter name='ch' type='int'/><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='indexOf' return='int'><parameter name='ch' type='int'/></method><method name='isEmpty' return='boolean'/><method name='isFull' return='boolean'/><method name='length' return='int'/><method name='setLength'><parameter name='len' type='int'/></method><method name='substring' return='java.lang.String'><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='substringTrimmed' return='java.lang.String'><parameter name='beginIndex' type='int'/><parameter name='endIndex' type='int'/></method><method name='toCharArray' return='char[]'/></class><class name='EncodingUtils' final='true' extends='java.lang.Object'><method name='getAsciiBytes' static='true' return='byte[]'><parameter name='data' type='java.lang.String'/></method><method name='getAsciiString' static='true' return='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/></method><method name='getAsciiString' static='true' return='java.lang.String'><parameter name='data' type='byte[]'/></method><method name='getBytes' static='true' return='byte[]'><parameter name='data' type='java.lang.String'/><parameter name='charset' type='java.lang.String'/></method><method name='getString' static='true' return='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='length' type='int'/><parameter name='charset' type='java.lang.String'/></method><method name='getString' static='true' return='java.lang.String'><parameter name='data' type='byte[]'/><parameter name='charset' type='java.lang.String'/></method></class><class name='EntityUtils' final='true' extends='java.lang.Object'><method name='getContentCharSet' static='true' return='java.lang.String'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='toByteArray' static='true' return='byte[]'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='IOException' type='java.io.IOException'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='entity' type='org.apache.http.HttpEntity'/><parameter name='defaultCharset' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method><method name='toString' static='true' return='java.lang.String'><parameter name='entity' type='org.apache.http.HttpEntity'/><exception name='IOException' type='java.io.IOException'/><exception name='ParseException' type='org.apache.http.ParseException'/></method></class><class name='ExceptionUtils' final='true' extends='java.lang.Object'><method name='initCause' static='true'><parameter name='throwable' type='java.lang.Throwable'/><parameter name='cause' type='java.lang.Throwable'/></method></class><class name='LangUtils' final='true' extends='java.lang.Object'><field name='HASH_OFFSET' final='true' static='true' value='37' type='int'/><field name='HASH_SEED' final='true' static='true' value='17' type='int'/><method name='equals' static='true' return='boolean'><parameter name='obj1' type='java.lang.Object'/><parameter name='obj2' type='java.lang.Object'/></method><method name='equals' static='true' return='boolean'><parameter name='a1' type='java.lang.Object[]'/><parameter name='a2' type='java.lang.Object[]'/></method><method name='hashCode' static='true' return='int'><parameter name='seed' type='int'/><parameter name='hashcode' type='int'/></method><method name='hashCode' static='true' return='int'><parameter name='seed' type='int'/><parameter name='b' type='boolean'/></method><method name='hashCode' static='true' return='int'><parameter name='seed' type='int'/><parameter name='obj' type='java.lang.Object'/></method></class><class name='VersionInfo' extends='java.lang.Object'><constructor name='VersionInfo' type='org.apache.http.util.VersionInfo' visibility='protected'><parameter name='pckg' type='java.lang.String'/><parameter name='module' type='java.lang.String'/><parameter name='release' type='java.lang.String'/><parameter name='time' type='java.lang.String'/><parameter name='clsldr' type='java.lang.String'/></constructor><field name='PROPERTY_MODULE' final='true' static='true' value='&quot;info.module&quot;' type='java.lang.String'/><field name='PROPERTY_RELEASE' final='true' static='true' value='&quot;info.release&quot;' type='java.lang.String'/><field name='PROPERTY_TIMESTAMP' final='true' static='true' value='&quot;info.timestamp&quot;' type='java.lang.String'/><field name='UNAVAILABLE' final='true' static='true' value='&quot;UNAVAILABLE&quot;' type='java.lang.String'/><field name='VERSION_PROPERTY_FILE' final='true' static='true' value='&quot;version.properties&quot;' type='java.lang.String'/><method name='fromMap' final='true' static='true' visibility='protected' return='org.apache.http.util.VersionInfo'><parameter name='pckg' type='java.lang.String'/><parameter name='info' type='java.util.Map'/><parameter name='clsldr' type='java.lang.ClassLoader'/></method><method name='getClassloader' final='true' return='java.lang.String'/><method name='getModule' final='true' return='java.lang.String'/><method name='getPackage' final='true' return='java.lang.String'/><method name='getRelease' final='true' return='java.lang.String'/><method name='getTimestamp' final='true' return='java.lang.String'/><method name='loadVersionInfo' final='true' static='true' return='org.apache.http.util.VersionInfo[]'><parameter name='pckgs' type='java.lang.String[]'/><parameter name='clsldr' type='java.lang.ClassLoader'/></method><method name='loadVersionInfo' final='true' static='true' return='org.apache.http.util.VersionInfo'><parameter name='pckg' type='java.lang.String'/><parameter name='clsldr' type='java.lang.ClassLoader'/></method></class></package><package name='org.json'><class name='JSONArray' extends='java.lang.Object'><constructor name='JSONArray' type='org.json.JSONArray'/><constructor name='JSONArray' type='org.json.JSONArray'><parameter name='x' type='org.json.JSONTokener'/><exception name='JSONException' type='org.json.JSONException'/></constructor><constructor name='JSONArray' type='org.json.JSONArray'><parameter name='string' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></constructor><constructor name='JSONArray' type='org.json.JSONArray'><parameter name='collection' type='java.util.Collection'/><parameter name='json' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></constructor><method name='get' return='java.lang.Object'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getBoolean' return='boolean'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getDouble' return='double'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getInt' return='int'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getJSONArray' return='org.json.JSONArray'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getJSONObject' return='org.json.JSONObject'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getLong' return='long'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getString' return='java.lang.String'><parameter name='index' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='isNull' return='boolean'><parameter name='index' type='int'/></method><method name='join' return='java.lang.String'><parameter name='separator' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='length' return='int'/><method name='opt' return='java.lang.Object'><parameter name='index' type='int'/></method><method name='optBoolean' return='boolean'><parameter name='index' type='int'/></method><method name='optBoolean' return='boolean'><parameter name='index' type='int'/><parameter name='defaultValue' type='boolean'/><parameter name='fallback' type='boolean'/></method><method name='optDouble' return='double'><parameter name='index' type='int'/></method><method name='optDouble' return='double'><parameter name='index' type='int'/><parameter name='defaultValue' type='double'/><parameter name='fallback' type='double'/></method><method name='optInt' return='int'><parameter name='index' type='int'/></method><method name='optInt' return='int'><parameter name='index' type='int'/><parameter name='defaultValue' type='int'/><parameter name='fallback' type='int'/></method><method name='optJSONArray' return='org.json.JSONArray'><parameter name='index' type='int'/></method><method name='optJSONObject' return='org.json.JSONObject'><parameter name='index' type='int'/></method><method name='optLong' return='long'><parameter name='index' type='int'/></method><method name='optLong' return='long'><parameter name='index' type='int'/><parameter name='defaultValue' type='long'/><parameter name='fallback' type='long'/></method><method name='optString' return='java.lang.String'><parameter name='index' type='int'/></method><method name='optString' return='java.lang.String'><parameter name='index' type='int'/><parameter name='defaultValue' type='java.lang.String'/><parameter name='fallback' type='java.lang.String'/></method><method name='put' return='org.json.JSONArray'><parameter name='value' type='boolean'/></method><method name='put' return='org.json.JSONArray'><parameter name='value' type='double'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONArray'><parameter name='value' type='int'/></method><method name='put' return='org.json.JSONArray'><parameter name='value' type='long'/></method><method name='put' return='org.json.JSONArray'><parameter name='value' type='java.lang.Object'/></method><method name='put' return='org.json.JSONArray'><parameter name='index' type='int'/><parameter name='value' type='boolean'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONArray'><parameter name='index' type='int'/><parameter name='value' type='double'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONArray'><parameter name='index' type='int'/><parameter name='value' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONArray'><parameter name='index' type='int'/><parameter name='value' type='long'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONArray'><parameter name='index' type='int'/><parameter name='value' type='java.lang.Object'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='toJSONObject' return='org.json.JSONObject'><parameter name='names' type='org.json.JSONArray'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='toString' return='java.lang.String'><parameter name='indentFactor' type='int'/><parameter name='indentSpaces' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method></class><class name='JSONException' extends='java.lang.Exception'><constructor name='JSONException' type='org.json.JSONException'><parameter name='message' type='java.lang.String'/><parameter name='s' type='java.lang.String'/></constructor></class><class name='JSONObject' extends='java.lang.Object'><constructor name='JSONObject' type='org.json.JSONObject'/><constructor name='JSONObject' type='org.json.JSONObject'><parameter name='jo' type='org.json.JSONObject'/><parameter name='sa' type='java.lang.String[]'/><exception name='JSONException' type='org.json.JSONException'/></constructor><constructor name='JSONObject' type='org.json.JSONObject'><parameter name='x' type='org.json.JSONTokener'/><exception name='JSONException' type='org.json.JSONException'/></constructor><constructor name='JSONObject' type='org.json.JSONObject'><parameter name='map' type='java.util.Map'/></constructor><constructor name='JSONObject' type='org.json.JSONObject'><parameter name='string' type='java.lang.String'/><parameter name='copyFrom' type='org.json.JSONObject'/><parameter name='names' type='java.lang.String[]'/><exception name='JSONException' type='org.json.JSONException'/></constructor><field name='NULL' final='true' static='true' type='java.lang.Object'/><method name='accumulate' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='get' return='java.lang.Object'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getBoolean' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getDouble' return='double'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getInt' return='int'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getJSONArray' return='org.json.JSONArray'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getJSONObject' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getLong' return='long'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='getString' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='has' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='isNull' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='keys' return='java.util.Iterator'/><method name='length' return='int'/><method name='names' return='org.json.JSONArray'/><method name='numberToString' static='true' return='java.lang.String'><parameter name='n' type='java.lang.Number'/><parameter name='number' type='java.lang.Number'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='opt' return='java.lang.Object'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optBoolean' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optBoolean' return='boolean'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='boolean'/><parameter name='name' type='java.lang.String'/><parameter name='fallback' type='boolean'/></method><method name='optDouble' return='double'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optDouble' return='double'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='double'/><parameter name='name' type='java.lang.String'/><parameter name='fallback' type='double'/></method><method name='optInt' return='int'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optInt' return='int'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='int'/><parameter name='name' type='java.lang.String'/><parameter name='fallback' type='int'/></method><method name='optJSONArray' return='org.json.JSONArray'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optJSONObject' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optLong' return='long'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optLong' return='long'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='long'/><parameter name='name' type='java.lang.String'/><parameter name='fallback' type='long'/></method><method name='optString' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='optString' return='java.lang.String'><parameter name='key' type='java.lang.String'/><parameter name='defaultValue' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><parameter name='fallback' type='java.lang.String'/></method><method name='put' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='boolean'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='double'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='int'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='long'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='put' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='putOpt' return='org.json.JSONObject'><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='quote' static='true' return='java.lang.String'><parameter name='string' type='java.lang.String'/><parameter name='data' type='java.lang.String'/></method><method name='remove' return='java.lang.Object'><parameter name='key' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='toJSONArray' return='org.json.JSONArray'><parameter name='names' type='org.json.JSONArray'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='toString' return='java.lang.String'><parameter name='indentFactor' type='int'/><parameter name='indentSpaces' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method></class><class name='JSONStringer' extends='java.lang.Object'><constructor name='JSONStringer' type='org.json.JSONStringer'/><method name='array' return='org.json.JSONStringer'><exception name='JSONException' type='org.json.JSONException'/></method><method name='endArray' return='org.json.JSONStringer'><exception name='JSONException' type='org.json.JSONException'/></method><method name='endObject' return='org.json.JSONStringer'><exception name='JSONException' type='org.json.JSONException'/></method><method name='key' return='org.json.JSONStringer'><parameter name='s' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='object' return='org.json.JSONStringer'><exception name='JSONException' type='org.json.JSONException'/></method><method name='value' return='org.json.JSONStringer'><parameter name='b' type='boolean'/><parameter name='value' type='boolean'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='value' return='org.json.JSONStringer'><parameter name='d' type='double'/><parameter name='value' type='double'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='value' return='org.json.JSONStringer'><parameter name='l' type='long'/><parameter name='value' type='long'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='value' return='org.json.JSONStringer'><parameter name='o' type='java.lang.Object'/><parameter name='value' type='java.lang.Object'/><exception name='JSONException' type='org.json.JSONException'/></method></class><class name='JSONTokener' extends='java.lang.Object'><constructor name='JSONTokener' type='org.json.JSONTokener'><parameter name='s' type='java.lang.String'/><parameter name='in' type='java.lang.String'/></constructor><method name='back'/><method name='dehexchar' static='true' return='int'><parameter name='c' type='char'/><parameter name='hex' type='char'/></method><method name='more' return='boolean'/><method name='next' return='char'/><method name='next' return='char'><parameter name='c' type='char'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='next' return='java.lang.String'><parameter name='n' type='int'/><parameter name='length' type='int'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='nextClean' return='char'><exception name='JSONException' type='org.json.JSONException'/></method><method name='nextString' return='java.lang.String'><parameter name='quote' type='char'/><exception name='JSONException' type='org.json.JSONException'/></method><method name='nextTo' return='java.lang.String'><parameter name='d' type='char'/><parameter name='excluded' type='char'/></method><method name='nextTo' return='java.lang.String'><parameter name='delimiters' type='java.lang.String'/><parameter name='excluded' type='java.lang.String'/></method><method name='nextValue' return='java.lang.Object'><exception name='JSONException' type='org.json.JSONException'/></method><method name='skipPast'><parameter name='to' type='java.lang.String'/><parameter name='thru' type='java.lang.String'/></method><method name='skipTo' return='char'><parameter name='to' type='char'/></method><method name='syntaxError' return='org.json.JSONException'><parameter name='message' type='java.lang.String'/></method></class></package><package name='org.w3c.dom'><class name='DOMException' extends='java.lang.RuntimeException'><constructor name='DOMException' type='org.w3c.dom.DOMException'><parameter name='code' type='short'/><parameter name='message' type='java.lang.String'/></constructor><field name='DOMSTRING_SIZE_ERR' final='true' static='true' value='2' type='short'/><field name='HIERARCHY_REQUEST_ERR' final='true' static='true' value='3' type='short'/><field name='INDEX_SIZE_ERR' final='true' static='true' value='1' type='short'/><field name='INUSE_ATTRIBUTE_ERR' final='true' static='true' value='10' type='short'/><field name='INVALID_ACCESS_ERR' final='true' static='true' value='15' type='short'/><field name='INVALID_CHARACTER_ERR' final='true' static='true' value='5' type='short'/><field name='INVALID_MODIFICATION_ERR' final='true' static='true' value='13' type='short'/><field name='INVALID_STATE_ERR' final='true' static='true' value='11' type='short'/><field name='NAMESPACE_ERR' final='true' static='true' value='14' type='short'/><field name='NOT_FOUND_ERR' final='true' static='true' value='8' type='short'/><field name='NOT_SUPPORTED_ERR' final='true' static='true' value='9' type='short'/><field name='NO_DATA_ALLOWED_ERR' final='true' static='true' value='6' type='short'/><field name='NO_MODIFICATION_ALLOWED_ERR' final='true' static='true' value='7' type='short'/><field name='SYNTAX_ERR' final='true' static='true' value='12' type='short'/><field name='WRONG_DOCUMENT_ERR' final='true' static='true' value='4' type='short'/><field name='code' type='short'/><field api_added='8' name='TYPE_MISMATCH_ERR' final='true' static='true' value='17' type='short'/><field api_added='8' name='VALIDATION_ERR' final='true' static='true' value='16' type='short'/></class><interface name='Attr' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getName' abstract='true' return='java.lang.String'/><method name='getOwnerElement' abstract='true' return='org.w3c.dom.Element'/><method name='getSpecified' abstract='true' return='boolean'/><method name='getValue' abstract='true' return='java.lang.String'/><method name='setValue' abstract='true'><parameter name='value' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getSchemaTypeInfo' abstract='true' return='org.w3c.dom.TypeInfo'/><method api_added='8' name='isId' abstract='true' return='boolean'/></interface><interface name='CDATASection' abstract='true'><implements name='org.w3c.dom.Text'/></interface><interface name='CharacterData' abstract='true'><implements name='org.w3c.dom.Node'/><method name='appendData' abstract='true'><parameter name='arg' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='deleteData' abstract='true'><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getData' abstract='true' return='java.lang.String'><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getLength' abstract='true' return='int'/><method name='insertData' abstract='true'><parameter name='offset' type='int'/><parameter name='arg' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='replaceData' abstract='true'><parameter name='offset' type='int'/><parameter name='count' type='int'/><parameter name='arg' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setData' abstract='true'><parameter name='data' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='substringData' abstract='true' return='java.lang.String'><parameter name='offset' type='int'/><parameter name='count' type='int'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface name='Comment' abstract='true'><implements name='org.w3c.dom.CharacterData'/></interface><interface name='DOMImplementation' abstract='true'><method name='createDocument' abstract='true' return='org.w3c.dom.Document'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='qualifiedName' type='java.lang.String'/><parameter name='doctype' type='org.w3c.dom.DocumentType'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createDocumentType' abstract='true' return='org.w3c.dom.DocumentType'><parameter name='qualifiedName' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='hasFeature' abstract='true' return='boolean'><parameter name='feature' type='java.lang.String'/><parameter name='version' type='java.lang.String'/></method><method api_added='8' name='getFeature' abstract='true' return='java.lang.Object'><parameter name='feature' type='java.lang.String'/><parameter name='version' type='java.lang.String'/></method></interface><interface name='Document' abstract='true'><implements name='org.w3c.dom.Node'/><method name='createAttribute' abstract='true' return='org.w3c.dom.Attr'><parameter name='name' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createAttributeNS' abstract='true' return='org.w3c.dom.Attr'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='qualifiedName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createCDATASection' abstract='true' return='org.w3c.dom.CDATASection'><parameter name='data' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createComment' abstract='true' return='org.w3c.dom.Comment'><parameter name='data' type='java.lang.String'/></method><method name='createDocumentFragment' abstract='true' return='org.w3c.dom.DocumentFragment'/><method name='createElement' abstract='true' return='org.w3c.dom.Element'><parameter name='tagName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createElementNS' abstract='true' return='org.w3c.dom.Element'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='qualifiedName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createEntityReference' abstract='true' return='org.w3c.dom.EntityReference'><parameter name='name' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createProcessingInstruction' abstract='true' return='org.w3c.dom.ProcessingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='createTextNode' abstract='true' return='org.w3c.dom.Text'><parameter name='data' type='java.lang.String'/></method><method name='getDoctype' abstract='true' return='org.w3c.dom.DocumentType'/><method name='getDocumentElement' abstract='true' return='org.w3c.dom.Element'/><method name='getElementById' abstract='true' return='org.w3c.dom.Element'><parameter name='elementId' type='java.lang.String'/></method><method name='getElementsByTagName' abstract='true' return='org.w3c.dom.NodeList'><parameter name='tagname' type='java.lang.String'/></method><method name='getElementsByTagNameNS' abstract='true' return='org.w3c.dom.NodeList'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getImplementation' abstract='true' return='org.w3c.dom.DOMImplementation'/><method name='importNode' abstract='true' return='org.w3c.dom.Node'><parameter name='importedNode' type='org.w3c.dom.Node'/><parameter name='deep' type='boolean'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='adoptNode' abstract='true' return='org.w3c.dom.Node'><parameter name='source' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getDocumentURI' abstract='true' return='java.lang.String'/><method api_added='8' name='getDomConfig' abstract='true' return='org.w3c.dom.DOMConfiguration'/><method api_added='8' name='getInputEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getStrictErrorChecking' abstract='true' return='boolean'/><method api_added='8' name='getXmlEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getXmlStandalone' abstract='true' return='boolean'/><method api_added='8' name='getXmlVersion' abstract='true' return='java.lang.String'/><method api_added='8' name='normalizeDocument' abstract='true'/><method api_added='8' name='renameNode' abstract='true' return='org.w3c.dom.Node'><parameter name='n' type='org.w3c.dom.Node'/><parameter name='namespaceURI' type='java.lang.String'/><parameter name='qualifiedName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='setDocumentURI' abstract='true'><parameter name='documentURI' type='java.lang.String'/></method><method api_added='8' name='setStrictErrorChecking' abstract='true'><parameter name='strictErrorChecking' type='boolean'/></method><method api_added='8' name='setXmlStandalone' abstract='true'><parameter name='xmlStandalone' type='boolean'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='setXmlVersion' abstract='true'><parameter name='xmlVersion' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface name='DocumentFragment' abstract='true'><implements name='org.w3c.dom.Node'/></interface><interface name='DocumentType' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getEntities' abstract='true' return='org.w3c.dom.NamedNodeMap'/><method name='getInternalSubset' abstract='true' return='java.lang.String'/><method name='getName' abstract='true' return='java.lang.String'/><method name='getNotations' abstract='true' return='org.w3c.dom.NamedNodeMap'/><method name='getPublicId' abstract='true' return='java.lang.String'/><method name='getSystemId' abstract='true' return='java.lang.String'/></interface><interface name='Element' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getAttribute' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getAttributeNS' abstract='true' return='java.lang.String'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getAttributeNode' abstract='true' return='org.w3c.dom.Attr'><parameter name='name' type='java.lang.String'/></method><method name='getAttributeNodeNS' abstract='true' return='org.w3c.dom.Attr'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getElementsByTagName' abstract='true' return='org.w3c.dom.NodeList'><parameter name='name' type='java.lang.String'/></method><method name='getElementsByTagNameNS' abstract='true' return='org.w3c.dom.NodeList'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getTagName' abstract='true' return='java.lang.String'/><method name='hasAttribute' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='hasAttributeNS' abstract='true' return='boolean'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='removeAttribute' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='removeAttributeNS' abstract='true'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='removeAttributeNode' abstract='true' return='org.w3c.dom.Attr'><parameter name='oldAttr' type='org.w3c.dom.Attr'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setAttribute' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setAttributeNS' abstract='true'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='qualifiedName' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setAttributeNode' abstract='true' return='org.w3c.dom.Attr'><parameter name='newAttr' type='org.w3c.dom.Attr'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setAttributeNodeNS' abstract='true' return='org.w3c.dom.Attr'><parameter name='newAttr' type='org.w3c.dom.Attr'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getSchemaTypeInfo' abstract='true' return='org.w3c.dom.TypeInfo'/><method api_added='8' name='setIdAttribute' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='isId' type='boolean'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='setIdAttributeNS' abstract='true'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='isId' type='boolean'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='setIdAttributeNode' abstract='true'><parameter name='idAttr' type='org.w3c.dom.Attr'/><parameter name='isId' type='boolean'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface name='Entity' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getNotationName' abstract='true' return='java.lang.String'/><method name='getPublicId' abstract='true' return='java.lang.String'/><method name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='getInputEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getXmlEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getXmlVersion' abstract='true' return='java.lang.String'/></interface><interface name='EntityReference' abstract='true'><implements name='org.w3c.dom.Node'/></interface><interface name='NamedNodeMap' abstract='true'><method name='getLength' abstract='true' return='int'/><method name='getNamedItem' abstract='true' return='org.w3c.dom.Node'><parameter name='name' type='java.lang.String'/></method><method name='getNamedItemNS' abstract='true' return='org.w3c.dom.Node'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='item' abstract='true' return='org.w3c.dom.Node'><parameter name='index' type='int'/></method><method name='removeNamedItem' abstract='true' return='org.w3c.dom.Node'><parameter name='name' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='removeNamedItemNS' abstract='true' return='org.w3c.dom.Node'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setNamedItem' abstract='true' return='org.w3c.dom.Node'><parameter name='arg' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setNamedItemNS' abstract='true' return='org.w3c.dom.Node'><parameter name='arg' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface name='Node' abstract='true'><field name='ATTRIBUTE_NODE' final='true' static='true' value='2' type='short'/><field name='CDATA_SECTION_NODE' final='true' static='true' value='4' type='short'/><field name='COMMENT_NODE' final='true' static='true' value='8' type='short'/><field name='DOCUMENT_FRAGMENT_NODE' final='true' static='true' value='11' type='short'/><field name='DOCUMENT_NODE' final='true' static='true' value='9' type='short'/><field name='DOCUMENT_TYPE_NODE' final='true' static='true' value='10' type='short'/><field name='ELEMENT_NODE' final='true' static='true' value='1' type='short'/><field name='ENTITY_NODE' final='true' static='true' value='6' type='short'/><field name='ENTITY_REFERENCE_NODE' final='true' static='true' value='5' type='short'/><field name='NOTATION_NODE' final='true' static='true' value='12' type='short'/><field name='PROCESSING_INSTRUCTION_NODE' final='true' static='true' value='7' type='short'/><field name='TEXT_NODE' final='true' static='true' value='3' type='short'/><field api_added='8' name='DOCUMENT_POSITION_CONTAINED_BY' final='true' static='true' value='16' type='short'/><field api_added='8' name='DOCUMENT_POSITION_CONTAINS' final='true' static='true' value='8' type='short'/><field api_added='8' name='DOCUMENT_POSITION_DISCONNECTED' final='true' static='true' value='1' type='short'/><field api_added='8' name='DOCUMENT_POSITION_FOLLOWING' final='true' static='true' value='4' type='short'/><field api_added='8' name='DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC' final='true' static='true' value='32' type='short'/><field api_added='8' name='DOCUMENT_POSITION_PRECEDING' final='true' static='true' value='2' type='short'/><method name='appendChild' abstract='true' return='org.w3c.dom.Node'><parameter name='newChild' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='cloneNode' abstract='true' return='org.w3c.dom.Node'><parameter name='deep' type='boolean'/></method><method name='getAttributes' abstract='true' return='org.w3c.dom.NamedNodeMap'/><method name='getChildNodes' abstract='true' return='org.w3c.dom.NodeList'/><method name='getFirstChild' abstract='true' return='org.w3c.dom.Node'/><method name='getLastChild' abstract='true' return='org.w3c.dom.Node'/><method name='getLocalName' abstract='true' return='java.lang.String'/><method name='getNamespaceURI' abstract='true' return='java.lang.String'/><method name='getNextSibling' abstract='true' return='org.w3c.dom.Node'/><method name='getNodeName' abstract='true' return='java.lang.String'/><method name='getNodeType' abstract='true' return='short'/><method name='getNodeValue' abstract='true' return='java.lang.String'><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='getOwnerDocument' abstract='true' return='org.w3c.dom.Document'/><method name='getParentNode' abstract='true' return='org.w3c.dom.Node'/><method name='getPrefix' abstract='true' return='java.lang.String'/><method name='getPreviousSibling' abstract='true' return='org.w3c.dom.Node'/><method name='hasAttributes' abstract='true' return='boolean'/><method name='hasChildNodes' abstract='true' return='boolean'/><method name='insertBefore' abstract='true' return='org.w3c.dom.Node'><parameter name='newChild' type='org.w3c.dom.Node'/><parameter name='refChild' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='isSupported' abstract='true' return='boolean'><parameter name='feature' type='java.lang.String'/><parameter name='version' type='java.lang.String'/></method><method name='normalize' abstract='true'/><method name='removeChild' abstract='true' return='org.w3c.dom.Node'><parameter name='oldChild' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='replaceChild' abstract='true' return='org.w3c.dom.Node'><parameter name='newChild' type='org.w3c.dom.Node'/><parameter name='oldChild' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setNodeValue' abstract='true'><parameter name='nodeValue' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method name='setPrefix' abstract='true'><parameter name='prefix' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='compareDocumentPosition' abstract='true' return='short'><parameter name='other' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getBaseURI' abstract='true' return='java.lang.String'/><method api_added='8' name='getFeature' abstract='true' return='java.lang.Object'><parameter name='feature' type='java.lang.String'/><parameter name='version' type='java.lang.String'/></method><method api_added='8' name='getTextContent' abstract='true' return='java.lang.String'><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getUserData' abstract='true' return='java.lang.Object'><parameter name='key' type='java.lang.String'/></method><method api_added='8' name='isDefaultNamespace' abstract='true' return='boolean'><parameter name='namespaceURI' type='java.lang.String'/></method><method api_added='8' name='isEqualNode' abstract='true' return='boolean'><parameter name='arg' type='org.w3c.dom.Node'/></method><method api_added='8' name='isSameNode' abstract='true' return='boolean'><parameter name='other' type='org.w3c.dom.Node'/></method><method api_added='8' name='lookupNamespaceURI' abstract='true' return='java.lang.String'><parameter name='prefix' type='java.lang.String'/></method><method api_added='8' name='lookupPrefix' abstract='true' return='java.lang.String'><parameter name='namespaceURI' type='java.lang.String'/></method><method api_added='8' name='setTextContent' abstract='true'><parameter name='textContent' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='setUserData' abstract='true' return='java.lang.Object'><parameter name='key' type='java.lang.String'/><parameter name='data' type='java.lang.Object'/><parameter name='handler' type='org.w3c.dom.UserDataHandler'/></method></interface><interface name='NodeList' abstract='true'><method name='getLength' abstract='true' return='int'/><method name='item' abstract='true' return='org.w3c.dom.Node'><parameter name='index' type='int'/></method></interface><interface name='Notation' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getPublicId' abstract='true' return='java.lang.String'/><method name='getSystemId' abstract='true' return='java.lang.String'/></interface><interface name='ProcessingInstruction' abstract='true'><implements name='org.w3c.dom.Node'/><method name='getData' abstract='true' return='java.lang.String'/><method name='getTarget' abstract='true' return='java.lang.String'/><method name='setData' abstract='true'><parameter name='data' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface name='Text' abstract='true'><implements name='org.w3c.dom.CharacterData'/><method name='splitText' abstract='true' return='org.w3c.dom.Text'><parameter name='offset' type='int'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getWholeText' abstract='true' return='java.lang.String'/><method api_added='8' name='isElementContentWhitespace' abstract='true' return='boolean'/><method api_added='8' name='replaceWholeText' abstract='true' return='org.w3c.dom.Text'><parameter name='content' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface api_added='8' name='DOMConfiguration' abstract='true'><method api_added='8' name='canSetParameter' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method api_added='8' name='getParameter' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='getParameterNames' abstract='true' return='org.w3c.dom.DOMStringList'/><method api_added='8' name='setParameter' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method></interface><interface api_added='8' name='DOMError' abstract='true'><field api_added='8' name='SEVERITY_ERROR' final='true' static='true' value='2' type='short'/><field api_added='8' name='SEVERITY_FATAL_ERROR' final='true' static='true' value='3' type='short'/><field api_added='8' name='SEVERITY_WARNING' final='true' static='true' value='1' type='short'/><method api_added='8' name='getLocation' abstract='true' return='org.w3c.dom.DOMLocator'/><method api_added='8' name='getMessage' abstract='true' return='java.lang.String'/><method api_added='8' name='getRelatedData' abstract='true' return='java.lang.Object'/><method api_added='8' name='getRelatedException' abstract='true' return='java.lang.Object'/><method api_added='8' name='getSeverity' abstract='true' return='short'/><method api_added='8' name='getType' abstract='true' return='java.lang.String'/></interface><interface api_added='8' name='DOMErrorHandler' abstract='true'><method api_added='8' name='handleError' abstract='true' return='boolean'><parameter name='error' type='org.w3c.dom.DOMError'/></method></interface><interface api_added='8' name='DOMImplementationList' abstract='true'><method api_added='8' name='getLength' abstract='true' return='int'/><method api_added='8' name='item' abstract='true' return='org.w3c.dom.DOMImplementation'><parameter name='index' type='int'/></method></interface><interface api_added='8' name='DOMImplementationSource' abstract='true'><method api_added='8' name='getDOMImplementation' abstract='true' return='org.w3c.dom.DOMImplementation'><parameter name='features' type='java.lang.String'/></method><method api_added='8' name='getDOMImplementationList' abstract='true' return='org.w3c.dom.DOMImplementationList'><parameter name='features' type='java.lang.String'/></method></interface><interface api_added='8' name='DOMLocator' abstract='true'><method api_added='8' name='getByteOffset' abstract='true' return='int'/><method api_added='8' name='getColumnNumber' abstract='true' return='int'/><method api_added='8' name='getLineNumber' abstract='true' return='int'/><method api_added='8' name='getRelatedNode' abstract='true' return='org.w3c.dom.Node'/><method api_added='8' name='getUri' abstract='true' return='java.lang.String'/><method api_added='8' name='getUtf16Offset' abstract='true' return='int'/></interface><interface api_added='8' name='DOMStringList' abstract='true'><method api_added='8' name='contains' abstract='true' return='boolean'><parameter name='str' type='java.lang.String'/></method><method api_added='8' name='getLength' abstract='true' return='int'/><method api_added='8' name='item' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method></interface><interface api_added='8' name='NameList' abstract='true'><method api_added='8' name='contains' abstract='true' return='boolean'><parameter name='str' type='java.lang.String'/></method><method api_added='8' name='containsNS' abstract='true' return='boolean'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getLength' abstract='true' return='int'/><method api_added='8' name='getName' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method api_added='8' name='getNamespaceURI' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method></interface><interface api_added='8' name='TypeInfo' abstract='true'><field api_added='8' name='DERIVATION_EXTENSION' final='true' static='true' value='2' type='int'/><field api_added='8' name='DERIVATION_LIST' final='true' static='true' value='8' type='int'/><field api_added='8' name='DERIVATION_RESTRICTION' final='true' static='true' value='1' type='int'/><field api_added='8' name='DERIVATION_UNION' final='true' static='true' value='4' type='int'/><method api_added='8' name='getTypeName' abstract='true' return='java.lang.String'/><method api_added='8' name='getTypeNamespace' abstract='true' return='java.lang.String'/><method api_added='8' name='isDerivedFrom' abstract='true' return='boolean'><parameter name='typeNamespaceArg' type='java.lang.String'/><parameter name='typeNameArg' type='java.lang.String'/><parameter name='derivationMethod' type='int'/></method></interface><interface api_added='8' name='UserDataHandler' abstract='true'><field api_added='8' name='NODE_ADOPTED' final='true' static='true' value='5' type='short'/><field api_added='8' name='NODE_CLONED' final='true' static='true' value='1' type='short'/><field api_added='8' name='NODE_DELETED' final='true' static='true' value='3' type='short'/><field api_added='8' name='NODE_IMPORTED' final='true' static='true' value='2' type='short'/><field api_added='8' name='NODE_RENAMED' final='true' static='true' value='4' type='short'/><method api_added='8' name='handle' abstract='true'><parameter name='operation' type='short'/><parameter name='key' type='java.lang.String'/><parameter name='data' type='java.lang.Object'/><parameter name='src' type='org.w3c.dom.Node'/><parameter name='dst' type='org.w3c.dom.Node'/></method></interface></package><package name='org.xml.sax'><class name='HandlerBase' extends='java.lang.Object' deprecated='1'><implements name='org.xml.sax.DTDHandler'/><implements name='org.xml.sax.DocumentHandler'/><implements name='org.xml.sax.EntityResolver'/><implements name='org.xml.sax.ErrorHandler'/><constructor name='HandlerBase' type='org.xml.sax.HandlerBase'/><method name='characters'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='error'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='fatalError'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='ignorableWhitespace'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='notationDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/></method><method name='processingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='resolveEntity' return='org.xml.sax.InputSource'><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDocumentLocator'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='startDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement'><parameter name='name' type='java.lang.String'/><parameter name='attributes' type='org.xml.sax.AttributeList'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='unparsedEntityDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='notationName' type='java.lang.String'/></method><method name='warning'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='InputSource' extends='java.lang.Object'><constructor name='InputSource' type='org.xml.sax.InputSource'/><constructor name='InputSource' type='org.xml.sax.InputSource'><parameter name='systemId' type='java.lang.String'/></constructor><constructor name='InputSource' type='org.xml.sax.InputSource'><parameter name='byteStream' type='java.io.InputStream'/></constructor><constructor name='InputSource' type='org.xml.sax.InputSource'><parameter name='characterStream' type='java.io.Reader'/></constructor><method name='getByteStream' return='java.io.InputStream'/><method name='getCharacterStream' return='java.io.Reader'/><method name='getEncoding' return='java.lang.String'/><method name='getPublicId' return='java.lang.String'/><method name='getSystemId' return='java.lang.String'/><method name='setByteStream'><parameter name='byteStream' type='java.io.InputStream'/></method><method name='setCharacterStream'><parameter name='characterStream' type='java.io.Reader'/></method><method name='setEncoding'><parameter name='encoding' type='java.lang.String'/></method><method name='setPublicId'><parameter name='publicId' type='java.lang.String'/></method><method name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method></class><class name='SAXException' extends='java.lang.Exception'><constructor name='SAXException' type='org.xml.sax.SAXException'/><constructor name='SAXException' type='org.xml.sax.SAXException'><parameter name='message' type='java.lang.String'/></constructor><constructor name='SAXException' type='org.xml.sax.SAXException'><parameter name='e' type='java.lang.Exception'/></constructor><constructor name='SAXException' type='org.xml.sax.SAXException'><parameter name='message' type='java.lang.String'/><parameter name='e' type='java.lang.Exception'/></constructor><method name='getException' return='java.lang.Exception'/></class><class name='SAXNotRecognizedException' extends='org.xml.sax.SAXException'><constructor name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><constructor name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='SAXNotSupportedException' extends='org.xml.sax.SAXException'><constructor name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/><constructor name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'><parameter name='message' type='java.lang.String'/></constructor></class><class name='SAXParseException' extends='org.xml.sax.SAXException'><constructor name='SAXParseException' type='org.xml.sax.SAXParseException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='org.xml.sax.Locator'/></constructor><constructor name='SAXParseException' type='org.xml.sax.SAXParseException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='org.xml.sax.Locator'/><parameter name='e' type='java.lang.Exception'/></constructor><constructor name='SAXParseException' type='org.xml.sax.SAXParseException'><parameter name='message' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='lineNumber' type='int'/><parameter name='columnNumber' type='int'/></constructor><constructor name='SAXParseException' type='org.xml.sax.SAXParseException'><parameter name='message' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='lineNumber' type='int'/><parameter name='columnNumber' type='int'/><parameter name='e' type='java.lang.Exception'/></constructor><method name='getColumnNumber' return='int'/><method name='getLineNumber' return='int'/><method name='getPublicId' return='java.lang.String'/><method name='getSystemId' return='java.lang.String'/></class><interface name='AttributeList' abstract='true' deprecated='1'><method name='getLength' abstract='true' return='int'/><method name='getName' abstract='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getType' abstract='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getType' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getValue' abstract='true' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getValue' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method></interface><interface name='Attributes' abstract='true'><method name='getIndex' abstract='true' return='int'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getIndex' abstract='true' return='int'><parameter name='qName' type='java.lang.String'/></method><method name='getLength' abstract='true' return='int'/><method name='getLocalName' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getQName' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getType' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getType' abstract='true' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getType' abstract='true' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method><method name='getURI' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' abstract='true' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getValue' abstract='true' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method></interface><interface name='ContentHandler' abstract='true'><method name='characters' abstract='true'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement' abstract='true'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endPrefixMapping' abstract='true'><parameter name='prefix' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='ignorableWhitespace' abstract='true'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction' abstract='true'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDocumentLocator' abstract='true'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='skippedEntity' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDocument' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement' abstract='true'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='atts' type='org.xml.sax.Attributes'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startPrefixMapping' abstract='true'><parameter name='prefix' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='DTDHandler' abstract='true'><method name='notationDecl' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='unparsedEntityDecl' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='notationName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='DocumentHandler' abstract='true' deprecated='1'><method name='characters' abstract='true'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='ignorableWhitespace' abstract='true'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction' abstract='true'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDocumentLocator' abstract='true'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='startDocument' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='atts' type='org.xml.sax.AttributeList'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='EntityResolver' abstract='true'><method name='resolveEntity' abstract='true' return='org.xml.sax.InputSource'><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='ErrorHandler' abstract='true'><method name='error' abstract='true'><parameter name='exception' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='fatalError' abstract='true'><parameter name='exception' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='warning' abstract='true'><parameter name='exception' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='Locator' abstract='true'><method name='getColumnNumber' abstract='true' return='int'/><method name='getLineNumber' abstract='true' return='int'/><method name='getPublicId' abstract='true' return='java.lang.String'/><method name='getSystemId' abstract='true' return='java.lang.String'/></interface><interface name='Parser' abstract='true' deprecated='1'><method name='parse' abstract='true'><parameter name='source' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' abstract='true'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDTDHandler' abstract='true'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setDocumentHandler' abstract='true'><parameter name='handler' type='org.xml.sax.DocumentHandler'/></method><method name='setEntityResolver' abstract='true'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler' abstract='true'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setLocale' abstract='true'><parameter name='locale' type='java.util.Locale'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='XMLFilter' abstract='true'><implements name='org.xml.sax.XMLReader'/><method name='getParent' abstract='true' return='org.xml.sax.XMLReader'/><method name='setParent' abstract='true'><parameter name='parent' type='org.xml.sax.XMLReader'/></method></interface><interface name='XMLReader' abstract='true'><method name='getContentHandler' abstract='true' return='org.xml.sax.ContentHandler'/><method name='getDTDHandler' abstract='true' return='org.xml.sax.DTDHandler'/><method name='getEntityResolver' abstract='true' return='org.xml.sax.EntityResolver'/><method name='getErrorHandler' abstract='true' return='org.xml.sax.ErrorHandler'/><method name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getProperty' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='parse' abstract='true'><parameter name='input' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse' abstract='true'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setContentHandler' abstract='true'><parameter name='handler' type='org.xml.sax.ContentHandler'/></method><method name='setDTDHandler' abstract='true'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setEntityResolver' abstract='true'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler' abstract='true'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='setProperty' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method></interface></package><package name='org.xml.sax.ext'><class name='Attributes2Impl' extends='org.xml.sax.helpers.AttributesImpl'><implements name='org.xml.sax.ext.Attributes2'/><constructor name='Attributes2Impl' type='org.xml.sax.ext.Attributes2Impl'/><constructor name='Attributes2Impl' type='org.xml.sax.ext.Attributes2Impl'><parameter name='atts' type='org.xml.sax.Attributes'/></constructor><method name='isDeclared' return='boolean'><parameter name='index' type='int'/></method><method name='isDeclared' return='boolean'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='isDeclared' return='boolean'><parameter name='qName' type='java.lang.String'/></method><method name='isSpecified' return='boolean'><parameter name='index' type='int'/></method><method name='isSpecified' return='boolean'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='isSpecified' return='boolean'><parameter name='qName' type='java.lang.String'/></method><method name='setDeclared'><parameter name='index' type='int'/><parameter name='value' type='boolean'/></method><method name='setSpecified'><parameter name='index' type='int'/><parameter name='value' type='boolean'/></method></class><class name='DefaultHandler2' extends='org.xml.sax.helpers.DefaultHandler'><implements name='org.xml.sax.ext.DeclHandler'/><implements name='org.xml.sax.ext.EntityResolver2'/><implements name='org.xml.sax.ext.LexicalHandler'/><constructor name='DefaultHandler2' type='org.xml.sax.ext.DefaultHandler2'/><method name='attributeDecl'><parameter name='eName' type='java.lang.String'/><parameter name='aName' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='mode' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='comment'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='elementDecl'><parameter name='name' type='java.lang.String'/><parameter name='model' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endCDATA'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDTD'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endEntity'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='externalEntityDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='getExternalSubset' return='org.xml.sax.InputSource'><parameter name='name' type='java.lang.String'/><parameter name='baseURI' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='internalEntityDecl'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='resolveEntity' return='org.xml.sax.InputSource'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='baseURI' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startCDATA'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDTD'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startEntity'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='Locator2Impl' extends='org.xml.sax.helpers.LocatorImpl'><implements name='org.xml.sax.ext.Locator2'/><constructor name='Locator2Impl' type='org.xml.sax.ext.Locator2Impl'/><constructor name='Locator2Impl' type='org.xml.sax.ext.Locator2Impl'><parameter name='locator' type='org.xml.sax.Locator'/></constructor><method name='getEncoding' return='java.lang.String'/><method name='getXMLVersion' return='java.lang.String'/><method name='setEncoding'><parameter name='encoding' type='java.lang.String'/></method><method name='setXMLVersion'><parameter name='version' type='java.lang.String'/></method></class><interface name='Attributes2' abstract='true'><implements name='org.xml.sax.Attributes'/><method name='isDeclared' abstract='true' return='boolean'><parameter name='index' type='int'/></method><method name='isDeclared' abstract='true' return='boolean'><parameter name='qName' type='java.lang.String'/></method><method name='isDeclared' abstract='true' return='boolean'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='isSpecified' abstract='true' return='boolean'><parameter name='index' type='int'/></method><method name='isSpecified' abstract='true' return='boolean'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='isSpecified' abstract='true' return='boolean'><parameter name='qName' type='java.lang.String'/></method></interface><interface name='DeclHandler' abstract='true'><method name='attributeDecl' abstract='true'><parameter name='eName' type='java.lang.String'/><parameter name='aName' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='mode' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='elementDecl' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='model' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='externalEntityDecl' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='internalEntityDecl' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='EntityResolver2' abstract='true'><implements name='org.xml.sax.EntityResolver'/><method name='getExternalSubset' abstract='true' return='org.xml.sax.InputSource'><parameter name='name' type='java.lang.String'/><parameter name='baseURI' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='resolveEntity' abstract='true' return='org.xml.sax.InputSource'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='baseURI' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='LexicalHandler' abstract='true'><method name='comment' abstract='true'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endCDATA' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDTD' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endEntity' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startCDATA' abstract='true'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDTD' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startEntity' abstract='true'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></interface><interface name='Locator2' abstract='true'><implements name='org.xml.sax.Locator'/><method name='getEncoding' abstract='true' return='java.lang.String'/><method name='getXMLVersion' abstract='true' return='java.lang.String'/></interface></package><package name='org.xml.sax.helpers'><class name='AttributeListImpl' extends='java.lang.Object' deprecated='1'><implements name='org.xml.sax.AttributeList'/><constructor name='AttributeListImpl' type='org.xml.sax.helpers.AttributeListImpl'/><constructor name='AttributeListImpl' type='org.xml.sax.helpers.AttributeListImpl'><parameter name='atts' type='org.xml.sax.AttributeList'/></constructor><method name='addAttribute'><parameter name='name' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='clear'/><method name='getLength' return='int'/><method name='getName' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getType' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getType' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='getValue' return='java.lang.String'><parameter name='i' type='int'/></method><method name='getValue' return='java.lang.String'><parameter name='name' type='java.lang.String'/></method><method name='removeAttribute'><parameter name='name' type='java.lang.String'/></method><method name='setAttributeList'><parameter name='atts' type='org.xml.sax.AttributeList'/></method></class><class name='AttributesImpl' extends='java.lang.Object'><implements name='org.xml.sax.Attributes'/><constructor name='AttributesImpl' type='org.xml.sax.helpers.AttributesImpl'/><constructor name='AttributesImpl' type='org.xml.sax.helpers.AttributesImpl'><parameter name='atts' type='org.xml.sax.Attributes'/></constructor><method name='addAttribute'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='clear'/><method name='getIndex' return='int'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getIndex' return='int'><parameter name='qName' type='java.lang.String'/></method><method name='getLength' return='int'/><method name='getLocalName' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getQName' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getType' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getType' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getType' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method><method name='getURI' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getValue' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method><method name='removeAttribute'><parameter name='index' type='int'/></method><method name='setAttribute'><parameter name='index' type='int'/><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='type' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method name='setAttributes'><parameter name='atts' type='org.xml.sax.Attributes'/></method><method name='setLocalName'><parameter name='index' type='int'/><parameter name='localName' type='java.lang.String'/></method><method name='setQName'><parameter name='index' type='int'/><parameter name='qName' type='java.lang.String'/></method><method name='setType'><parameter name='index' type='int'/><parameter name='type' type='java.lang.String'/></method><method name='setURI'><parameter name='index' type='int'/><parameter name='uri' type='java.lang.String'/></method><method name='setValue'><parameter name='index' type='int'/><parameter name='value' type='java.lang.String'/></method></class><class name='DefaultHandler' extends='java.lang.Object'><implements name='org.xml.sax.ContentHandler'/><implements name='org.xml.sax.DTDHandler'/><implements name='org.xml.sax.EntityResolver'/><implements name='org.xml.sax.ErrorHandler'/><constructor name='DefaultHandler' type='org.xml.sax.helpers.DefaultHandler'/><method name='characters'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endPrefixMapping'><parameter name='prefix' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='error'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='fatalError'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='ignorableWhitespace'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='notationDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='resolveEntity' return='org.xml.sax.InputSource'><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDocumentLocator'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='skippedEntity'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='attributes' type='org.xml.sax.Attributes'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startPrefixMapping'><parameter name='prefix' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='unparsedEntityDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='notationName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='warning'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='LocatorImpl' extends='java.lang.Object'><implements name='org.xml.sax.Locator'/><constructor name='LocatorImpl' type='org.xml.sax.helpers.LocatorImpl'/><constructor name='LocatorImpl' type='org.xml.sax.helpers.LocatorImpl'><parameter name='locator' type='org.xml.sax.Locator'/></constructor><method name='getColumnNumber' return='int'/><method name='getLineNumber' return='int'/><method name='getPublicId' return='java.lang.String'/><method name='getSystemId' return='java.lang.String'/><method name='setColumnNumber'><parameter name='columnNumber' type='int'/></method><method name='setLineNumber'><parameter name='lineNumber' type='int'/></method><method name='setPublicId'><parameter name='publicId' type='java.lang.String'/></method><method name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method></class><class name='NamespaceSupport' extends='java.lang.Object'><constructor name='NamespaceSupport' type='org.xml.sax.helpers.NamespaceSupport'/><field name='NSDECL' final='true' static='true' value='&quot;http://www.w3.org/xmlns/2000/&quot;' type='java.lang.String'/><field name='XMLNS' final='true' static='true' value='&quot;http://www.w3.org/XML/1998/namespace&quot;' type='java.lang.String'/><method name='declarePrefix' return='boolean'><parameter name='prefix' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/></method><method name='getDeclaredPrefixes' return='java.util.Enumeration'/><method name='getPrefix' return='java.lang.String'><parameter name='uri' type='java.lang.String'/></method><method name='getPrefixes' return='java.util.Enumeration'/><method name='getPrefixes' return='java.util.Enumeration'><parameter name='uri' type='java.lang.String'/></method><method name='getURI' return='java.lang.String'><parameter name='prefix' type='java.lang.String'/></method><method name='isNamespaceDeclUris' return='boolean'/><method name='popContext'/><method name='processName' return='java.lang.String[]'><parameter name='qName' type='java.lang.String'/><parameter name='parts' type='java.lang.String[]'/><parameter name='isAttribute' type='boolean'/></method><method name='pushContext'/><method name='reset'/><method name='setNamespaceDeclUris'><parameter name='value' type='boolean'/></method></class><class name='ParserAdapter' extends='java.lang.Object'><implements name='org.xml.sax.DocumentHandler'/><implements name='org.xml.sax.XMLReader'/><constructor name='ParserAdapter' type='org.xml.sax.helpers.ParserAdapter'><exception name='SAXException' type='org.xml.sax.SAXException'/></constructor><constructor name='ParserAdapter' type='org.xml.sax.helpers.ParserAdapter'><parameter name='parser' type='org.xml.sax.Parser'/></constructor><method name='characters'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement'><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='getContentHandler' return='org.xml.sax.ContentHandler'/><method name='getDTDHandler' return='org.xml.sax.DTDHandler'/><method name='getEntityResolver' return='org.xml.sax.EntityResolver'/><method name='getErrorHandler' return='org.xml.sax.ErrorHandler'/><method name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='ignorableWhitespace'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='input' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setContentHandler'><parameter name='handler' type='org.xml.sax.ContentHandler'/></method><method name='setDTDHandler'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setDocumentLocator'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='setEntityResolver'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='startDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement'><parameter name='qName' type='java.lang.String'/><parameter name='qAtts' type='org.xml.sax.AttributeList'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='ParserFactory' extends='java.lang.Object' deprecated='1'><method name='makeParser' static='true' return='org.xml.sax.Parser'><exception name='ClassCastException' type='java.lang.ClassCastException'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/><exception name='NullPointerException' type='java.lang.NullPointerException'/></method><method name='makeParser' static='true' return='org.xml.sax.Parser'><parameter name='className' type='java.lang.String'/><exception name='ClassCastException' type='java.lang.ClassCastException'/><exception name='ClassNotFoundException' type='java.lang.ClassNotFoundException'/><exception name='IllegalAccessException' type='java.lang.IllegalAccessException'/><exception name='InstantiationException' type='java.lang.InstantiationException'/></method></class><class name='XMLFilterImpl' extends='java.lang.Object'><implements name='org.xml.sax.ContentHandler'/><implements name='org.xml.sax.DTDHandler'/><implements name='org.xml.sax.EntityResolver'/><implements name='org.xml.sax.ErrorHandler'/><implements name='org.xml.sax.XMLFilter'/><constructor name='XMLFilterImpl' type='org.xml.sax.helpers.XMLFilterImpl'/><constructor name='XMLFilterImpl' type='org.xml.sax.helpers.XMLFilterImpl'><parameter name='parent' type='org.xml.sax.XMLReader'/></constructor><method name='characters'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endPrefixMapping'><parameter name='prefix' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='error'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='fatalError'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='getContentHandler' return='org.xml.sax.ContentHandler'/><method name='getDTDHandler' return='org.xml.sax.DTDHandler'/><method name='getEntityResolver' return='org.xml.sax.EntityResolver'/><method name='getErrorHandler' return='org.xml.sax.ErrorHandler'/><method name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getParent' return='org.xml.sax.XMLReader'/><method name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='ignorableWhitespace'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='notationDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='input' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='resolveEntity' return='org.xml.sax.InputSource'><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setContentHandler'><parameter name='handler' type='org.xml.sax.ContentHandler'/></method><method name='setDTDHandler'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setDocumentLocator'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='setEntityResolver'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='setParent'><parameter name='parent' type='org.xml.sax.XMLReader'/></method><method name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='skippedEntity'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='atts' type='org.xml.sax.Attributes'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startPrefixMapping'><parameter name='prefix' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='unparsedEntityDecl'><parameter name='name' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='notationName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='warning'><parameter name='e' type='org.xml.sax.SAXParseException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class name='XMLReaderAdapter' extends='java.lang.Object'><implements name='org.xml.sax.ContentHandler'/><implements name='org.xml.sax.Parser'/><constructor name='XMLReaderAdapter' type='org.xml.sax.helpers.XMLReaderAdapter'><exception name='SAXException' type='org.xml.sax.SAXException'/></constructor><constructor name='XMLReaderAdapter' type='org.xml.sax.helpers.XMLReaderAdapter'><parameter name='xmlReader' type='org.xml.sax.XMLReader'/></constructor><method name='characters'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='endPrefixMapping'><parameter name='prefix' type='java.lang.String'/></method><method name='ignorableWhitespace'><parameter name='ch' type='char[]'/><parameter name='start' type='int'/><parameter name='length' type='int'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='input' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='processingInstruction'><parameter name='target' type='java.lang.String'/><parameter name='data' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setDTDHandler'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setDocumentHandler'><parameter name='handler' type='org.xml.sax.DocumentHandler'/></method><method name='setDocumentLocator'><parameter name='locator' type='org.xml.sax.Locator'/></method><method name='setEntityResolver'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setLocale'><parameter name='locale' type='java.util.Locale'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='skippedEntity'><parameter name='name' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startDocument'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startElement'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><parameter name='atts' type='org.xml.sax.Attributes'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='startPrefixMapping'><parameter name='prefix' type='java.lang.String'/><parameter name='uri' type='java.lang.String'/></method></class><class name='XMLReaderFactory' final='true' extends='java.lang.Object'><method name='createXMLReader' static='true' return='org.xml.sax.XMLReader'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='createXMLReader' static='true' return='org.xml.sax.XMLReader'><parameter name='className' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class></package><package name='org.xmlpull.v1'><class name='XmlPullParserException' extends='java.lang.Exception'><constructor name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'><parameter name='s' type='java.lang.String'/></constructor><constructor name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'><parameter name='msg' type='java.lang.String'/><parameter name='parser' type='org.xmlpull.v1.XmlPullParser'/><parameter name='chain' type='java.lang.Throwable'/></constructor><field name='column' type='int' visibility='protected'/><field name='detail' type='java.lang.Throwable' visibility='protected'/><field name='row' type='int' visibility='protected'/><method name='getColumnNumber' return='int'/><method name='getDetail' return='java.lang.Throwable'/><method name='getLineNumber' return='int'/></class><class name='XmlPullParserFactory' extends='java.lang.Object'><constructor name='XmlPullParserFactory' type='org.xmlpull.v1.XmlPullParserFactory' visibility='protected'/><field name='PROPERTY_NAME' final='true' static='true' value='&quot;org.xmlpull.v1.XmlPullParserFactory&quot;' type='java.lang.String'/><field name='classNamesLocation' type='java.lang.String' visibility='protected'/><field name='features' type='java.util.HashMap' visibility='protected'/><field name='parserClasses' type='java.util.ArrayList' visibility='protected'/><field name='serializerClasses' type='java.util.ArrayList' visibility='protected'/><method name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='isNamespaceAware' return='boolean'/><method name='isValidating' return='boolean'/><method name='newInstance' static='true' return='org.xmlpull.v1.XmlPullParserFactory'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='newInstance' static='true' return='org.xmlpull.v1.XmlPullParserFactory'><parameter name='classNames' type='java.lang.String'/><parameter name='context' type='java.lang.Class'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='newPullParser' return='org.xmlpull.v1.XmlPullParser'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='newSerializer' return='org.xmlpull.v1.XmlSerializer'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='state' type='boolean'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setNamespaceAware'><parameter name='awareness' type='boolean'/></method><method name='setValidating'><parameter name='validating' type='boolean'/></method></class><interface name='XmlPullParser' abstract='true'><field name='CDSECT' final='true' static='true' value='5' type='int'/><field name='COMMENT' final='true' static='true' value='9' type='int'/><field name='DOCDECL' final='true' static='true' value='10' type='int'/><field name='END_DOCUMENT' final='true' static='true' value='1' type='int'/><field name='END_TAG' final='true' static='true' value='3' type='int'/><field name='ENTITY_REF' final='true' static='true' value='6' type='int'/><field name='FEATURE_PROCESS_DOCDECL' final='true' static='true' value='&quot;http://xmlpull.org/v1/doc/features.html#process-docdecl&quot;' type='java.lang.String'/><field name='FEATURE_PROCESS_NAMESPACES' final='true' static='true' value='&quot;http://xmlpull.org/v1/doc/features.html#process-namespaces&quot;' type='java.lang.String'/><field name='FEATURE_REPORT_NAMESPACE_ATTRIBUTES' final='true' static='true' value='&quot;http://xmlpull.org/v1/doc/features.html#report-namespace-prefixes&quot;' type='java.lang.String'/><field name='FEATURE_VALIDATION' final='true' static='true' value='&quot;http://xmlpull.org/v1/doc/features.html#validation&quot;' type='java.lang.String'/><field name='IGNORABLE_WHITESPACE' final='true' static='true' value='7' type='int'/><field name='NO_NAMESPACE' final='true' static='true' value='&quot;&quot;' type='java.lang.String'/><field name='PROCESSING_INSTRUCTION' final='true' static='true' value='8' type='int'/><field name='START_DOCUMENT' final='true' static='true' value='0' type='int'/><field name='START_TAG' final='true' static='true' value='2' type='int'/><field name='TEXT' final='true' static='true' value='4' type='int'/><field name='TYPES' final='true' static='true' value='null' type='java.lang.String[]'/><method name='defineEntityReplacementText' abstract='true'><parameter name='entityName' type='java.lang.String'/><parameter name='replacementText' type='java.lang.String'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='getAttributeCount' abstract='true' return='int'/><method name='getAttributeName' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeNamespace' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributePrefix' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeType' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeValue' abstract='true' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getAttributeValue' abstract='true' return='java.lang.String'><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/></method><method name='getColumnNumber' abstract='true' return='int'/><method name='getDepth' abstract='true' return='int'/><method name='getEventType' abstract='true' return='int'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getInputEncoding' abstract='true' return='java.lang.String'/><method name='getLineNumber' abstract='true' return='int'/><method name='getName' abstract='true' return='java.lang.String'/><method name='getNamespace' abstract='true' return='java.lang.String'><parameter name='prefix' type='java.lang.String'/></method><method name='getNamespace' abstract='true' return='java.lang.String'/><method name='getNamespaceCount' abstract='true' return='int'><parameter name='depth' type='int'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='getNamespacePrefix' abstract='true' return='java.lang.String'><parameter name='pos' type='int'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='getNamespaceUri' abstract='true' return='java.lang.String'><parameter name='pos' type='int'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='getPositionDescription' abstract='true' return='java.lang.String'/><method name='getPrefix' abstract='true' return='java.lang.String'/><method name='getProperty' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='getText' abstract='true' return='java.lang.String'/><method name='getTextCharacters' abstract='true' return='char[]'><parameter name='holderForStartAndLength' type='int[]'/></method><method name='isAttributeDefault' abstract='true' return='boolean'><parameter name='index' type='int'/></method><method name='isEmptyElementTag' abstract='true' return='boolean'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='isWhitespace' abstract='true' return='boolean'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='next' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='nextTag' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='nextText' abstract='true' return='java.lang.String'><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='nextToken' abstract='true' return='int'><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='require' abstract='true'><parameter name='type' type='int'/><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='state' type='boolean'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setInput' abstract='true'><parameter name='in' type='java.io.Reader'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setInput' abstract='true'><parameter name='inputStream' type='java.io.InputStream'/><parameter name='inputEncoding' type='java.lang.String'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method><method name='setProperty' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></method></interface><interface name='XmlSerializer' abstract='true'><method name='attribute' abstract='true' return='org.xmlpull.v1.XmlSerializer'><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='cdsect' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='comment' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='docdecl' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='endDocument' abstract='true'><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='endTag' abstract='true' return='org.xmlpull.v1.XmlSerializer'><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='entityRef' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='flush' abstract='true'><exception name='IOException' type='java.io.IOException'/></method><method name='getDepth' abstract='true' return='int'/><method name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method name='getName' abstract='true' return='java.lang.String'/><method name='getNamespace' abstract='true' return='java.lang.String'/><method name='getPrefix' abstract='true' return='java.lang.String'><parameter name='namespace' type='java.lang.String'/><parameter name='generatePrefix' type='boolean'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method name='getProperty' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method name='ignorableWhitespace' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='processingInstruction' abstract='true'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='state' type='boolean'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setOutput' abstract='true'><parameter name='os' type='java.io.OutputStream'/><parameter name='encoding' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setOutput' abstract='true'><parameter name='writer' type='java.io.Writer'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setPrefix' abstract='true'><parameter name='prefix' type='java.lang.String'/><parameter name='namespace' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='setProperty' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='startDocument' abstract='true'><parameter name='encoding' type='java.lang.String'/><parameter name='standalone' type='java.lang.Boolean'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='startTag' abstract='true' return='org.xmlpull.v1.XmlSerializer'><parameter name='namespace' type='java.lang.String'/><parameter name='name' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='text' abstract='true' return='org.xmlpull.v1.XmlSerializer'><parameter name='text' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method><method name='text' abstract='true' return='org.xmlpull.v1.XmlSerializer'><parameter name='buf' type='char[]'/><parameter name='start' type='int'/><parameter name='len' type='int'/><exception name='IOException' type='java.io.IOException'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/><exception name='IllegalStateException' type='java.lang.IllegalStateException'/></method></interface></package><package name='org.xmlpull.v1.sax2'><class name='Driver' extends='java.lang.Object'><implements name='org.xml.sax.Attributes'/><implements name='org.xml.sax.Locator'/><implements name='org.xml.sax.XMLReader'/><constructor name='Driver' type='org.xmlpull.v1.sax2.Driver'><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></constructor><constructor name='Driver' type='org.xmlpull.v1.sax2.Driver'><parameter name='pp' type='org.xmlpull.v1.XmlPullParser'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></constructor><field name='APACHE_DYNAMIC_VALIDATION_FEATURE' final='true' static='true' value='&quot;http://apache.org/xml/features/validation/dynamic&quot;' type='java.lang.String' visibility='protected'/><field name='APACHE_SCHEMA_VALIDATION_FEATURE' final='true' static='true' value='&quot;http://apache.org/xml/features/validation/schema&quot;' type='java.lang.String' visibility='protected'/><field name='DECLARATION_HANDLER_PROPERTY' final='true' static='true' value='&quot;http://xml.org/sax/properties/declaration-handler&quot;' type='java.lang.String' visibility='protected'/><field name='LEXICAL_HANDLER_PROPERTY' final='true' static='true' value='&quot;http://xml.org/sax/properties/lexical-handler&quot;' type='java.lang.String' visibility='protected'/><field name='NAMESPACES_FEATURE' final='true' static='true' value='&quot;http://xml.org/sax/features/namespaces&quot;' type='java.lang.String' visibility='protected'/><field name='NAMESPACE_PREFIXES_FEATURE' final='true' static='true' value='&quot;http://xml.org/sax/features/namespace-prefixes&quot;' type='java.lang.String' visibility='protected'/><field name='VALIDATION_FEATURE' final='true' static='true' value='&quot;http://xml.org/sax/features/validation&quot;' type='java.lang.String' visibility='protected'/><field name='contentHandler' type='org.xml.sax.ContentHandler' visibility='protected'/><field name='errorHandler' type='org.xml.sax.ErrorHandler' visibility='protected'/><field name='pp' type='org.xmlpull.v1.XmlPullParser' visibility='protected'/><field name='systemId' type='java.lang.String' visibility='protected'/><method name='getColumnNumber' return='int'/><method name='getContentHandler' return='org.xml.sax.ContentHandler'/><method name='getDTDHandler' return='org.xml.sax.DTDHandler'/><method name='getEntityResolver' return='org.xml.sax.EntityResolver'/><method name='getErrorHandler' return='org.xml.sax.ErrorHandler'/><method name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getIndex' return='int'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getIndex' return='int'><parameter name='qName' type='java.lang.String'/></method><method name='getLength' return='int'/><method name='getLineNumber' return='int'/><method name='getLocalName' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='getPublicId' return='java.lang.String'/><method name='getQName' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getSystemId' return='java.lang.String'/><method name='getType' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getType' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getType' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method><method name='getURI' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' return='java.lang.String'><parameter name='index' type='int'/></method><method name='getValue' return='java.lang.String'><parameter name='uri' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/></method><method name='getValue' return='java.lang.String'><parameter name='qName' type='java.lang.String'/></method><method name='parse'><parameter name='source' type='org.xml.sax.InputSource'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parse'><parameter name='systemId' type='java.lang.String'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='parseSubTree'><parameter name='pp' type='org.xmlpull.v1.XmlPullParser'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method name='setContentHandler'><parameter name='handler' type='org.xml.sax.ContentHandler'/></method><method name='setDTDHandler'><parameter name='handler' type='org.xml.sax.DTDHandler'/></method><method name='setEntityResolver'><parameter name='resolver' type='org.xml.sax.EntityResolver'/></method><method name='setErrorHandler'><parameter name='handler' type='org.xml.sax.ErrorHandler'/></method><method name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method name='startElement' visibility='protected'><parameter name='namespace' type='java.lang.String'/><parameter name='localName' type='java.lang.String'/><parameter name='qName' type='java.lang.String'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class></package><package api_added='3' name='android.appwidget'><class api_added='3' name='AppWidgetHost' extends='java.lang.Object'><constructor api_added='3' name='AppWidgetHost' type='android.appwidget.AppWidgetHost'><parameter name='context' type='android.content.Context'/><parameter name='hostId' type='int'/></constructor><method api_added='3' name='allocateAppWidgetId' return='int'/><method api_added='3' name='createView' final='true' return='android.appwidget.AppWidgetHostView'><parameter name='context' type='android.content.Context'/><parameter name='appWidgetId' type='int'/><parameter name='appWidget' type='android.appwidget.AppWidgetProviderInfo'/></method><method api_added='3' name='deleteAllHosts' static='true'/><method api_added='3' name='deleteAppWidgetId'><parameter name='appWidgetId' type='int'/></method><method api_added='3' name='deleteHost'/><method api_added='3' name='onCreateView' visibility='protected' return='android.appwidget.AppWidgetHostView'><parameter name='context' type='android.content.Context'/><parameter name='appWidgetId' type='int'/><parameter name='appWidget' type='android.appwidget.AppWidgetProviderInfo'/></method><method api_added='3' name='onProviderChanged' visibility='protected'><parameter name='appWidgetId' type='int'/><parameter name='appWidget' type='android.appwidget.AppWidgetProviderInfo'/></method><method api_added='3' name='startListening'/><method api_added='3' name='stopListening'/></class><class api_added='3' name='AppWidgetHostView' extends='android.widget.FrameLayout'><constructor api_added='3' name='AppWidgetHostView' type='android.appwidget.AppWidgetHostView'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='3' name='AppWidgetHostView' type='android.appwidget.AppWidgetHostView'><parameter name='context' type='android.content.Context'/><parameter name='animationIn' type='int'/><parameter name='animationOut' type='int'/></constructor><method api_added='3' name='getAppWidgetId' return='int'/><method api_added='3' name='getAppWidgetInfo' return='android.appwidget.AppWidgetProviderInfo'/><method api_added='3' name='getDefaultView' visibility='protected' return='android.view.View'/><method api_added='3' name='getErrorView' visibility='protected' return='android.view.View'/><method api_added='3' name='prepareView' visibility='protected'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='setAppWidget'><parameter name='appWidgetId' type='int'/><parameter name='info' type='android.appwidget.AppWidgetProviderInfo'/></method><method api_added='3' name='updateAppWidget'><parameter name='remoteViews' type='android.widget.RemoteViews'/></method></class><class api_added='3' name='AppWidgetManager' extends='java.lang.Object'><field api_added='3' name='ACTION_APPWIDGET_CONFIGURE' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_CONFIGURE&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPWIDGET_DELETED' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_DELETED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPWIDGET_DISABLED' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_DISABLED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPWIDGET_ENABLED' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_ENABLED&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPWIDGET_PICK' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_PICK&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_APPWIDGET_UPDATE' final='true' static='true' value='&quot;android.appwidget.action.APPWIDGET_UPDATE&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_APPWIDGET_ID' final='true' static='true' value='&quot;appWidgetId&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_APPWIDGET_IDS' final='true' static='true' value='&quot;appWidgetIds&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_CUSTOM_EXTRAS' final='true' static='true' value='&quot;customExtras&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_CUSTOM_INFO' final='true' static='true' value='&quot;customInfo&quot;' type='java.lang.String'/><field api_added='3' name='INVALID_APPWIDGET_ID' final='true' static='true' value='0' type='int'/><field api_added='3' name='META_DATA_APPWIDGET_PROVIDER' final='true' static='true' value='&quot;android.appwidget.provider&quot;' type='java.lang.String'/><method api_added='3' name='bindAppWidgetId'><parameter name='appWidgetId' type='int'/><parameter name='provider' type='android.content.ComponentName'/></method><method api_added='3' name='getAppWidgetIds' return='int[]'><parameter name='provider' type='android.content.ComponentName'/></method><method api_added='3' name='getAppWidgetInfo' return='android.appwidget.AppWidgetProviderInfo'><parameter name='appWidgetId' type='int'/></method><method api_added='3' name='getInstalledProviders' return='java.util.List&lt;android.appwidget.AppWidgetProviderInfo&gt;'/><method api_added='3' name='getInstance' static='true' return='android.appwidget.AppWidgetManager'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='updateAppWidget'><parameter name='appWidgetIds' type='int[]'/><parameter name='views' type='android.widget.RemoteViews'/></method><method api_added='3' name='updateAppWidget'><parameter name='appWidgetId' type='int'/><parameter name='views' type='android.widget.RemoteViews'/></method><method api_added='3' name='updateAppWidget'><parameter name='provider' type='android.content.ComponentName'/><parameter name='views' type='android.widget.RemoteViews'/></method></class><class api_added='3' name='AppWidgetProvider' extends='android.content.BroadcastReceiver'><constructor api_added='3' name='AppWidgetProvider' type='android.appwidget.AppWidgetProvider'/><method api_added='3' name='onDeleted'><parameter name='context' type='android.content.Context'/><parameter name='appWidgetIds' type='int[]'/></method><method api_added='3' name='onDisabled'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='onEnabled'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='onReceive'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='3' name='onUpdate'><parameter name='context' type='android.content.Context'/><parameter name='appWidgetManager' type='android.appwidget.AppWidgetManager'/><parameter name='appWidgetIds' type='int[]'/></method></class><class api_added='3' name='AppWidgetProviderInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='AppWidgetProviderInfo' type='android.appwidget.AppWidgetProviderInfo'/><constructor api_added='3' name='AppWidgetProviderInfo' type='android.appwidget.AppWidgetProviderInfo'><parameter name='in' type='android.os.Parcel'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='configure' type='android.content.ComponentName'/><field api_added='3' name='icon' type='int'/><field api_added='3' name='initialLayout' type='int'/><field api_added='3' name='label' type='java.lang.String'/><field api_added='3' name='minHeight' type='int'/><field api_added='3' name='minWidth' type='int'/><field api_added='3' name='provider' type='android.content.ComponentName'/><field api_added='3' name='updatePeriodMillis' type='int'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class></package><package api_added='3' name='android.inputmethodservice'><class api_added='3' name='AbstractInputMethodService' extends='android.app.Service' abstract='true'><implements name='android.view.KeyEvent.Callback'/><constructor api_added='3' name='AbstractInputMethodService' type='android.inputmethodservice.AbstractInputMethodService'/><method api_added='3' name='onBind' final='true' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method api_added='3' name='onCreateInputMethodInterface' abstract='true' return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl'/><method api_added='3' name='onCreateInputMethodSessionInterface' abstract='true' return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl'/><method api_added='3' name='onTrackballEvent' return='boolean'><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='5' name='getKeyDispatcherState' return='android.view.KeyEvent.DispatcherState'/></class><class api_added='3' name='AbstractInputMethodService.AbstractInputMethodImpl' extends='java.lang.Object' abstract='true'><implements name='android.view.inputmethod.InputMethod'/><constructor api_added='3' name='AbstractInputMethodService.AbstractInputMethodImpl' type='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl'/><method api_added='3' name='createSession'><parameter name='callback' type='android.view.inputmethod.InputMethod.SessionCallback'/></method><method api_added='3' name='revokeSession'><parameter name='session' type='android.view.inputmethod.InputMethodSession'/></method><method api_added='3' name='setSessionEnabled'><parameter name='session' type='android.view.inputmethod.InputMethodSession'/><parameter name='enabled' type='boolean'/></method></class><class api_added='3' name='AbstractInputMethodService.AbstractInputMethodSessionImpl' extends='java.lang.Object' abstract='true'><implements name='android.view.inputmethod.InputMethodSession'/><constructor api_added='3' name='AbstractInputMethodService.AbstractInputMethodSessionImpl' type='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl'/><method api_added='3' name='dispatchKeyEvent'><parameter name='seq' type='int'/><parameter name='event' type='android.view.KeyEvent'/><parameter name='callback' type='android.view.inputmethod.InputMethodSession.EventCallback'/></method><method api_added='3' name='dispatchTrackballEvent'><parameter name='seq' type='int'/><parameter name='event' type='android.view.MotionEvent'/><parameter name='callback' type='android.view.inputmethod.InputMethodSession.EventCallback'/></method><method api_added='3' name='isEnabled' return='boolean'/><method api_added='3' name='isRevoked' return='boolean'/><method api_added='3' name='revokeSelf'/><method api_added='3' name='setEnabled'><parameter name='enabled' type='boolean'/></method></class><class api_added='3' name='ExtractEditText' extends='android.widget.EditText'><constructor api_added='3' name='ExtractEditText' type='android.inputmethodservice.ExtractEditText'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='3' name='ExtractEditText' type='android.inputmethodservice.ExtractEditText'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='3' name='ExtractEditText' type='android.inputmethodservice.ExtractEditText'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method api_added='3' name='finishInternalChanges'/><method api_added='3' name='hasVerticalScrollBar' return='boolean'/><method api_added='3' name='startInternalChanges'/></class><class api_added='3' name='InputMethodService' extends='android.inputmethodservice.AbstractInputMethodService'><constructor api_added='3' name='InputMethodService' type='android.inputmethodservice.InputMethodService'/><method api_added='3' name='getCandidatesHiddenVisibility' return='int'/><method api_added='3' name='getCurrentInputBinding' return='android.view.inputmethod.InputBinding'/><method api_added='3' name='getCurrentInputConnection' return='android.view.inputmethod.InputConnection'/><method api_added='3' name='getCurrentInputEditorInfo' return='android.view.inputmethod.EditorInfo'/><method api_added='3' name='getCurrentInputStarted' return='boolean'/><method api_added='3' name='getLayoutInflater' return='android.view.LayoutInflater'/><method api_added='3' name='getMaxWidth' return='int'/><method api_added='3' name='getTextForImeAction' return='java.lang.CharSequence'><parameter name='imeOptions' type='int'/></method><method api_added='3' name='getWindow' return='android.app.Dialog'/><method api_added='3' name='hideStatusIcon'/><method api_added='3' name='hideWindow'/><method api_added='3' name='isExtractViewShown' return='boolean'/><method api_added='3' name='isFullscreenMode' return='boolean'/><method api_added='3' name='isInputViewShown' return='boolean'/><method api_added='3' name='isShowInputRequested' return='boolean'/><method api_added='3' name='onAppPrivateCommand'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='onBindInput'/><method api_added='3' name='onComputeInsets'><parameter name='outInsets' type='android.inputmethodservice.InputMethodService.Insets'/></method><method api_added='3' name='onConfigureWindow'><parameter name='win' type='android.view.Window'/><parameter name='isFullscreen' type='boolean'/><parameter name='isCandidatesOnly' type='boolean'/></method><method api_added='3' name='onCreateCandidatesView' return='android.view.View'/><method api_added='3' name='onCreateExtractTextView' return='android.view.View'/><method api_added='3' name='onCreateInputMethodInterface' return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl'/><method api_added='3' name='onCreateInputMethodSessionInterface' return='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl'/><method api_added='3' name='onCreateInputView' return='android.view.View'/><method api_added='3' name='onDisplayCompletions'><parameter name='completions' type='android.view.inputmethod.CompletionInfo[]'/></method><method api_added='3' name='onEvaluateFullscreenMode' return='boolean'/><method api_added='3' name='onEvaluateInputViewShown' return='boolean'/><method api_added='3' name='onExtractTextContextMenuItem' return='boolean'><parameter name='id' type='int'/></method><method api_added='3' name='onExtractedCursorMovement'><parameter name='dx' type='int'/><parameter name='dy' type='int'/></method><method api_added='3' name='onExtractedSelectionChanged'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method api_added='3' name='onExtractedTextClicked'/><method api_added='3' name='onExtractingInputChanged'><parameter name='ei' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='onFinishCandidatesView'><parameter name='finishingInput' type='boolean'/></method><method api_added='3' name='onFinishInput'/><method api_added='3' name='onFinishInputView'><parameter name='finishingInput' type='boolean'/></method><method api_added='3' name='onInitializeInterface'/><method api_added='3' name='onKeyDown' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='onKeyMultiple' return='boolean'><parameter name='keyCode' type='int'/><parameter name='count' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='onKeyUp' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='onShowInputRequested' return='boolean'><parameter name='flags' type='int'/><parameter name='configChange' type='boolean'/></method><method api_added='3' name='onStartCandidatesView'><parameter name='info' type='android.view.inputmethod.EditorInfo'/><parameter name='restarting' type='boolean'/></method><method api_added='3' name='onStartInput'><parameter name='attribute' type='android.view.inputmethod.EditorInfo'/><parameter name='restarting' type='boolean'/></method><method api_added='3' name='onStartInputView'><parameter name='info' type='android.view.inputmethod.EditorInfo'/><parameter name='restarting' type='boolean'/></method><method api_added='3' name='onUnbindInput'/><method api_added='3' name='onUpdateCursor'><parameter name='newCursor' type='android.graphics.Rect'/></method><method api_added='3' name='onUpdateExtractedText'><parameter name='token' type='int'/><parameter name='text' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='onUpdateExtractingViews'><parameter name='ei' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='onUpdateExtractingVisibility'><parameter name='ei' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='onUpdateSelection'><parameter name='oldSelStart' type='int'/><parameter name='oldSelEnd' type='int'/><parameter name='newSelStart' type='int'/><parameter name='newSelEnd' type='int'/><parameter name='candidatesStart' type='int'/><parameter name='candidatesEnd' type='int'/></method><method api_added='3' name='onWindowHidden'/><method api_added='3' name='onWindowShown'/><method api_added='3' name='requestHideSelf'><parameter name='flags' type='int'/></method><method api_added='3' name='sendDefaultEditorAction' return='boolean'><parameter name='fromEnterKey' type='boolean'/></method><method api_added='3' name='sendDownUpKeyEvents'><parameter name='keyEventCode' type='int'/></method><method api_added='3' name='sendKeyChar'><parameter name='charCode' type='char'/></method><method api_added='3' name='setCandidatesView'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='setCandidatesViewShown'><parameter name='shown' type='boolean'/></method><method api_added='3' name='setExtractView'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='setExtractViewShown'><parameter name='shown' type='boolean'/></method><method api_added='3' name='setInputView'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='showStatusIcon'><parameter name='iconResId' type='int'/></method><method api_added='3' name='showWindow'><parameter name='showInput' type='boolean'/></method><method api_added='3' name='switchInputMethod'><parameter name='id' type='java.lang.String'/></method><method api_added='3' name='updateFullscreenMode'/><method api_added='3' name='updateInputViewShown'/><method api_added='5' name='onKeyLongPress' return='boolean'><parameter name='keyCode' type='int'/><parameter name='event' type='android.view.KeyEvent'/></method></class><class api_added='3' name='InputMethodService.InputMethodImpl' extends='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodImpl'><constructor api_added='3' name='InputMethodService.InputMethodImpl' type='android.inputmethodservice.InputMethodService.InputMethodImpl'/><method api_added='3' name='attachToken'><parameter name='token' type='android.os.IBinder'/></method><method api_added='3' name='bindInput'><parameter name='binding' type='android.view.inputmethod.InputBinding'/></method><method api_added='3' name='hideSoftInput'><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='restartInput'><parameter name='ic' type='android.view.inputmethod.InputConnection'/><parameter name='attribute' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='showSoftInput'><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='startInput'><parameter name='ic' type='android.view.inputmethod.InputConnection'/><parameter name='attribute' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='unbindInput'/></class><class api_added='3' name='InputMethodService.InputMethodSessionImpl' extends='android.inputmethodservice.AbstractInputMethodService.AbstractInputMethodSessionImpl'><constructor api_added='3' name='InputMethodService.InputMethodSessionImpl' type='android.inputmethodservice.InputMethodService.InputMethodSessionImpl'/><method api_added='3' name='appPrivateCommand'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='displayCompletions'><parameter name='completions' type='android.view.inputmethod.CompletionInfo[]'/></method><method api_added='3' name='finishInput'/><method api_added='3' name='toggleSoftInput'><parameter name='showFlags' type='int'/><parameter name='hideFlags' type='int'/></method><method api_added='3' name='updateCursor'><parameter name='newCursor' type='android.graphics.Rect'/></method><method api_added='3' name='updateExtractedText'><parameter name='token' type='int'/><parameter name='text' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='updateSelection'><parameter name='oldSelStart' type='int'/><parameter name='oldSelEnd' type='int'/><parameter name='newSelStart' type='int'/><parameter name='newSelEnd' type='int'/><parameter name='candidatesStart' type='int'/><parameter name='candidatesEnd' type='int'/></method></class><class api_added='3' name='InputMethodService.Insets' final='true' extends='java.lang.Object' static='true'><constructor api_added='3' name='InputMethodService.Insets' type='android.inputmethodservice.InputMethodService.Insets'/><field api_added='3' name='TOUCHABLE_INSETS_CONTENT' final='true' static='true' value='1' type='int'/><field api_added='3' name='TOUCHABLE_INSETS_FRAME' final='true' static='true' value='0' type='int'/><field api_added='3' name='TOUCHABLE_INSETS_VISIBLE' final='true' static='true' value='2' type='int'/><field api_added='3' name='contentTopInsets' type='int'/><field api_added='3' name='touchableInsets' type='int'/><field api_added='3' name='visibleTopInsets' type='int'/></class><class api_added='3' name='Keyboard' extends='java.lang.Object'><constructor api_added='3' name='Keyboard' type='android.inputmethodservice.Keyboard'><parameter name='context' type='android.content.Context'/><parameter name='xmlLayoutResId' type='int'/></constructor><constructor api_added='3' name='Keyboard' type='android.inputmethodservice.Keyboard'><parameter name='context' type='android.content.Context'/><parameter name='xmlLayoutResId' type='int'/><parameter name='modeId' type='int'/></constructor><constructor api_added='3' name='Keyboard' type='android.inputmethodservice.Keyboard'><parameter name='context' type='android.content.Context'/><parameter name='layoutTemplateResId' type='int'/><parameter name='characters' type='java.lang.CharSequence'/><parameter name='columns' type='int'/><parameter name='horizontalPadding' type='int'/></constructor><field api_added='3' name='EDGE_BOTTOM' final='true' static='true' value='8' type='int'/><field api_added='3' name='EDGE_LEFT' final='true' static='true' value='1' type='int'/><field api_added='3' name='EDGE_RIGHT' final='true' static='true' value='2' type='int'/><field api_added='3' name='EDGE_TOP' final='true' static='true' value='4' type='int'/><field api_added='3' name='KEYCODE_ALT' final='true' static='true' value='-6' type='int'/><field api_added='3' name='KEYCODE_CANCEL' final='true' static='true' value='-3' type='int'/><field api_added='3' name='KEYCODE_DELETE' final='true' static='true' value='-5' type='int'/><field api_added='3' name='KEYCODE_DONE' final='true' static='true' value='-4' type='int'/><field api_added='3' name='KEYCODE_MODE_CHANGE' final='true' static='true' value='-2' type='int'/><field api_added='3' name='KEYCODE_SHIFT' final='true' static='true' value='-1' type='int'/><method api_added='3' name='createKeyFromXml' visibility='protected' return='android.inputmethodservice.Keyboard.Key'><parameter name='res' type='android.content.res.Resources'/><parameter name='parent' type='android.inputmethodservice.Keyboard.Row'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='parser' type='android.content.res.XmlResourceParser'/></method><method api_added='3' name='createRowFromXml' visibility='protected' return='android.inputmethodservice.Keyboard.Row'><parameter name='res' type='android.content.res.Resources'/><parameter name='parser' type='android.content.res.XmlResourceParser'/></method><method api_added='3' name='getHeight' return='int'/><method api_added='3' name='getHorizontalGap' visibility='protected' return='int'/><method api_added='3' name='getKeyHeight' visibility='protected' return='int'/><method api_added='3' name='getKeyWidth' visibility='protected' return='int'/><method api_added='3' name='getKeys' return='java.util.List&lt;android.inputmethodservice.Keyboard.Key&gt;'/><method api_added='3' name='getMinWidth' return='int'/><method api_added='3' name='getModifierKeys' return='java.util.List&lt;android.inputmethodservice.Keyboard.Key&gt;'/><method api_added='3' name='getNearestKeys' return='int[]'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method api_added='3' name='getShiftKeyIndex' return='int'/><method api_added='3' name='getVerticalGap' visibility='protected' return='int'/><method api_added='3' name='isShifted' return='boolean'/><method api_added='3' name='setHorizontalGap' visibility='protected'><parameter name='gap' type='int'/></method><method api_added='3' name='setKeyHeight' visibility='protected'><parameter name='height' type='int'/></method><method api_added='3' name='setKeyWidth' visibility='protected'><parameter name='width' type='int'/></method><method api_added='3' name='setShifted' return='boolean'><parameter name='shiftState' type='boolean'/></method><method api_added='3' name='setVerticalGap' visibility='protected'><parameter name='gap' type='int'/></method></class><class api_added='3' name='Keyboard.Key' extends='java.lang.Object' static='true'><constructor api_added='3' name='Keyboard.Key' type='android.inputmethodservice.Keyboard.Key'><parameter name='parent' type='android.inputmethodservice.Keyboard.Row'/></constructor><constructor api_added='3' name='Keyboard.Key' type='android.inputmethodservice.Keyboard.Key'><parameter name='res' type='android.content.res.Resources'/><parameter name='parent' type='android.inputmethodservice.Keyboard.Row'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='parser' type='android.content.res.XmlResourceParser'/></constructor><field api_added='3' name='codes' value='null' type='int[]'/><field api_added='3' name='edgeFlags' type='int'/><field api_added='3' name='gap' type='int'/><field api_added='3' name='height' type='int'/><field api_added='3' name='icon' type='android.graphics.drawable.Drawable'/><field api_added='3' name='iconPreview' type='android.graphics.drawable.Drawable'/><field api_added='3' name='label' type='java.lang.CharSequence'/><field api_added='3' name='modifier' type='boolean'/><field api_added='3' name='on' type='boolean'/><field api_added='3' name='popupCharacters' type='java.lang.CharSequence'/><field api_added='3' name='popupResId' type='int'/><field api_added='3' name='pressed' type='boolean'/><field api_added='3' name='repeatable' type='boolean'/><field api_added='3' name='sticky' type='boolean'/><field api_added='3' name='text' type='java.lang.CharSequence'/><field api_added='3' name='width' type='int'/><field api_added='3' name='x' type='int'/><field api_added='3' name='y' type='int'/><method api_added='3' name='getCurrentDrawableState' return='int[]'/><method api_added='3' name='isInside' return='boolean'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method api_added='3' name='onPressed'/><method api_added='3' name='onReleased'><parameter name='inside' type='boolean'/></method><method api_added='3' name='squaredDistanceFrom' return='int'><parameter name='x' type='int'/><parameter name='y' type='int'/></method></class><class api_added='3' name='Keyboard.Row' extends='java.lang.Object' static='true'><constructor api_added='3' name='Keyboard.Row' type='android.inputmethodservice.Keyboard.Row'><parameter name='parent' type='android.inputmethodservice.Keyboard'/></constructor><constructor api_added='3' name='Keyboard.Row' type='android.inputmethodservice.Keyboard.Row'><parameter name='res' type='android.content.res.Resources'/><parameter name='parent' type='android.inputmethodservice.Keyboard'/><parameter name='parser' type='android.content.res.XmlResourceParser'/></constructor><field api_added='3' name='defaultHeight' type='int'/><field api_added='3' name='defaultHorizontalGap' type='int'/><field api_added='3' name='defaultWidth' type='int'/><field api_added='3' name='mode' type='int'/><field api_added='3' name='rowEdgeFlags' type='int'/><field api_added='3' name='verticalGap' type='int'/></class><class api_added='3' name='KeyboardView' extends='android.view.View'><implements name='android.view.View.OnClickListener'/><constructor api_added='3' name='KeyboardView' type='android.inputmethodservice.KeyboardView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='3' name='KeyboardView' type='android.inputmethodservice.KeyboardView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><method api_added='3' name='closing'/><method api_added='3' name='getKeyboard' return='android.inputmethodservice.Keyboard'/><method api_added='3' name='getOnKeyboardActionListener' visibility='protected' return='android.inputmethodservice.KeyboardView.OnKeyboardActionListener'/><method api_added='3' name='handleBack' return='boolean'/><method api_added='3' name='isPreviewEnabled' return='boolean'/><method api_added='3' name='isProximityCorrectionEnabled' return='boolean'/><method api_added='3' name='isShifted' return='boolean'/><method api_added='3' name='onClick'><parameter name='v' type='android.view.View'/></method><method api_added='3' name='onDetachedFromWindow'/><method api_added='3' name='onDraw'><parameter name='canvas' type='android.graphics.Canvas'/></method><method api_added='3' name='onLongPress' visibility='protected' return='boolean'><parameter name='popupKey' type='android.inputmethodservice.Keyboard.Key'/></method><method api_added='3' name='onMeasure'><parameter name='widthMeasureSpec' type='int'/><parameter name='heightMeasureSpec' type='int'/></method><method api_added='3' name='onSizeChanged'><parameter name='w' type='int'/><parameter name='h' type='int'/><parameter name='oldw' type='int'/><parameter name='oldh' type='int'/></method><method api_added='3' name='setKeyboard'><parameter name='keyboard' type='android.inputmethodservice.Keyboard'/></method><method api_added='3' name='setOnKeyboardActionListener'><parameter name='listener' type='android.inputmethodservice.KeyboardView.OnKeyboardActionListener'/></method><method api_added='3' name='setPopupOffset'><parameter name='x' type='int'/><parameter name='y' type='int'/></method><method api_added='3' name='setPopupParent'><parameter name='v' type='android.view.View'/></method><method api_added='3' name='setPreviewEnabled'><parameter name='previewEnabled' type='boolean'/></method><method api_added='3' name='setProximityCorrectionEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='setShifted' return='boolean'><parameter name='shifted' type='boolean'/></method><method api_added='3' name='setVerticalCorrection'><parameter name='verticalOffset' type='int'/></method><method api_added='3' name='swipeDown' visibility='protected'/><method api_added='3' name='swipeLeft' visibility='protected'/><method api_added='3' name='swipeRight' visibility='protected'/><method api_added='3' name='swipeUp' visibility='protected'/><method api_added='4' name='invalidateAllKeys'/><method api_added='4' name='invalidateKey'><parameter name='keyIndex' type='int'/></method></class><interface api_added='3' name='KeyboardView.OnKeyboardActionListener' abstract='true' static='true'><method api_added='3' name='onKey' abstract='true'><parameter name='primaryCode' type='int'/><parameter name='keyCodes' type='int[]'/></method><method api_added='3' name='onPress' abstract='true'><parameter name='primaryCode' type='int'/></method><method api_added='3' name='onRelease' abstract='true'><parameter name='primaryCode' type='int'/></method><method api_added='3' name='onText' abstract='true'><parameter name='text' type='java.lang.CharSequence'/></method><method api_added='3' name='swipeDown' abstract='true'/><method api_added='3' name='swipeLeft' abstract='true'/><method api_added='3' name='swipeRight' abstract='true'/><method api_added='3' name='swipeUp' abstract='true'/></interface></package><package api_added='3' name='android.speech'><class api_added='3' name='RecognizerIntent' extends='java.lang.Object'><field api_added='3' name='ACTION_RECOGNIZE_SPEECH' final='true' static='true' value='&quot;android.speech.action.RECOGNIZE_SPEECH&quot;' type='java.lang.String'/><field api_added='3' name='ACTION_WEB_SEARCH' final='true' static='true' value='&quot;android.speech.action.WEB_SEARCH&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_LANGUAGE' final='true' static='true' value='&quot;android.speech.extra.LANGUAGE&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_LANGUAGE_MODEL' final='true' static='true' value='&quot;android.speech.extra.LANGUAGE_MODEL&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_MAX_RESULTS' final='true' static='true' value='&quot;android.speech.extra.MAX_RESULTS&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_PROMPT' final='true' static='true' value='&quot;android.speech.extra.PROMPT&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_RESULTS' final='true' static='true' value='&quot;android.speech.extra.RESULTS&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_RESULTS_PENDINGINTENT' final='true' static='true' value='&quot;android.speech.extra.RESULTS_PENDINGINTENT&quot;' type='java.lang.String'/><field api_added='3' name='EXTRA_RESULTS_PENDINGINTENT_BUNDLE' final='true' static='true' value='&quot;android.speech.extra.RESULTS_PENDINGINTENT_BUNDLE&quot;' type='java.lang.String'/><field api_added='3' name='LANGUAGE_MODEL_FREE_FORM' final='true' static='true' value='&quot;free_form&quot;' type='java.lang.String'/><field api_added='3' name='LANGUAGE_MODEL_WEB_SEARCH' final='true' static='true' value='&quot;web_search&quot;' type='java.lang.String'/><field api_added='3' name='RESULT_AUDIO_ERROR' final='true' static='true' value='5' type='int'/><field api_added='3' name='RESULT_CLIENT_ERROR' final='true' static='true' value='2' type='int'/><field api_added='3' name='RESULT_NETWORK_ERROR' final='true' static='true' value='4' type='int'/><field api_added='3' name='RESULT_NO_MATCH' final='true' static='true' value='1' type='int'/><field api_added='3' name='RESULT_SERVER_ERROR' final='true' static='true' value='3' type='int'/><field api_added='8' name='ACTION_GET_LANGUAGE_DETAILS' final='true' static='true' value='&quot;android.speech.action.GET_LANGUAGE_DETAILS&quot;' type='java.lang.String'/><field api_added='8' name='DETAILS_META_DATA' final='true' static='true' value='&quot;android.speech.DETAILS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_CALLING_PACKAGE' final='true' static='true' value='&quot;calling_package&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_LANGUAGE_PREFERENCE' final='true' static='true' value='&quot;android.speech.extra.LANGUAGE_PREFERENCE&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_ONLY_RETURN_LANGUAGE_PREFERENCE' final='true' static='true' value='&quot;android.speech.extra.ONLY_RETURN_LANGUAGE_PREFERENCE&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_PARTIAL_RESULTS' final='true' static='true' value='&quot;android.speech.extra.PARTIAL_RESULTS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS' final='true' static='true' value='&quot;android.speech.extras.SPEECH_INPUT_COMPLETE_SILENCE_LENGTH_MILLIS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SPEECH_INPUT_MINIMUM_LENGTH_MILLIS' final='true' static='true' value='&quot;android.speech.extras.SPEECH_INPUT_MINIMUM_LENGTH_MILLIS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SPEECH_INPUT_POSSIBLY_COMPLETE_SILENCE_LENGTH_MILLIS' final='true' static='true' value='&quot;android.speech.extras.SPEECH_INPUT_POSSIBLY_COMPLETE_SILENCE_LENGTH_MILLIS&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_SUPPORTED_LANGUAGES' final='true' static='true' value='&quot;android.speech.extra.SUPPORTED_LANGUAGES&quot;' type='java.lang.String'/><method api_added='8' name='getVoiceDetailsIntent' final='true' static='true' return='android.content.Intent'><parameter name='context' type='android.content.Context'/></method></class><class api_added='8' name='RecognitionService' extends='android.app.Service' abstract='true'><constructor api_added='8' name='RecognitionService' type='android.speech.RecognitionService'/><field api_added='8' name='SERVICE_INTERFACE' final='true' static='true' value='&quot;android.speech.RecognitionService&quot;' type='java.lang.String'/><field api_added='8' name='SERVICE_META_DATA' final='true' static='true' value='&quot;android.speech&quot;' type='java.lang.String'/><method api_added='8' name='onBind' final='true' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onCancel' abstract='true' visibility='protected'><parameter name='listener' type='android.speech.RecognitionService.Callback'/></method><method api_added='8' name='onStartListening' abstract='true' visibility='protected'><parameter name='recognizerIntent' type='android.content.Intent'/><parameter name='listener' type='android.speech.RecognitionService.Callback'/></method><method api_added='8' name='onStopListening' abstract='true' visibility='protected'><parameter name='listener' type='android.speech.RecognitionService.Callback'/></method></class><class api_added='8' name='RecognitionService.Callback' extends='java.lang.Object'><method api_added='8' name='beginningOfSpeech'><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='bufferReceived'><parameter name='buffer' type='byte[]'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='endOfSpeech'><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='error'><parameter name='error' type='int'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='partialResults'><parameter name='partialResults' type='android.os.Bundle'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='readyForSpeech'><parameter name='params' type='android.os.Bundle'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='results'><parameter name='results' type='android.os.Bundle'/><exception name='RemoteException' type='android.os.RemoteException'/></method><method api_added='8' name='rmsChanged'><parameter name='rmsdB' type='float'/><exception name='RemoteException' type='android.os.RemoteException'/></method></class><class api_added='8' name='SpeechRecognizer' extends='java.lang.Object'><field api_added='8' name='ERROR_AUDIO' final='true' static='true' value='3' type='int'/><field api_added='8' name='ERROR_CLIENT' final='true' static='true' value='5' type='int'/><field api_added='8' name='ERROR_INSUFFICIENT_PERMISSIONS' final='true' static='true' value='9' type='int'/><field api_added='8' name='ERROR_NETWORK' final='true' static='true' value='2' type='int'/><field api_added='8' name='ERROR_NETWORK_TIMEOUT' final='true' static='true' value='1' type='int'/><field api_added='8' name='ERROR_NO_MATCH' final='true' static='true' value='7' type='int'/><field api_added='8' name='ERROR_RECOGNIZER_BUSY' final='true' static='true' value='8' type='int'/><field api_added='8' name='ERROR_SERVER' final='true' static='true' value='4' type='int'/><field api_added='8' name='ERROR_SPEECH_TIMEOUT' final='true' static='true' value='6' type='int'/><field api_added='8' name='RESULTS_RECOGNITION' final='true' static='true' value='&quot;results_recognition&quot;' type='java.lang.String'/><method api_added='8' name='cancel'/><method api_added='8' name='createSpeechRecognizer' static='true' return='android.speech.SpeechRecognizer'><parameter name='context' type='android.content.Context'/></method><method api_added='8' name='createSpeechRecognizer' static='true' return='android.speech.SpeechRecognizer'><parameter name='context' type='android.content.Context'/><parameter name='serviceComponent' type='android.content.ComponentName'/></method><method api_added='8' name='destroy'/><method api_added='8' name='isRecognitionAvailable' static='true' return='boolean'><parameter name='context' type='android.content.Context'/></method><method api_added='8' name='setRecognitionListener'><parameter name='listener' type='android.speech.RecognitionListener'/></method><method api_added='8' name='startListening'><parameter name='recognizerIntent' type='android.content.Intent'/></method><method api_added='8' name='stopListening'/></class><interface api_added='8' name='RecognitionListener' abstract='true'><method api_added='8' name='onBeginningOfSpeech' abstract='true'/><method api_added='8' name='onBufferReceived' abstract='true'><parameter name='buffer' type='byte[]'/></method><method api_added='8' name='onEndOfSpeech' abstract='true'/><method api_added='8' name='onError' abstract='true'><parameter name='error' type='int'/></method><method api_added='8' name='onEvent' abstract='true'><parameter name='eventType' type='int'/><parameter name='params' type='android.os.Bundle'/></method><method api_added='8' name='onPartialResults' abstract='true'><parameter name='partialResults' type='android.os.Bundle'/></method><method api_added='8' name='onReadyForSpeech' abstract='true'><parameter name='params' type='android.os.Bundle'/></method><method api_added='8' name='onResults' abstract='true'><parameter name='results' type='android.os.Bundle'/></method><method api_added='8' name='onRmsChanged' abstract='true'><parameter name='rmsdB' type='float'/></method></interface></package><package api_added='3' name='android.text.format'><class api_added='3' name='DateFormat' extends='java.lang.Object'><constructor api_added='3' name='DateFormat' type='android.text.format.DateFormat'/><field api_added='3' name='AM_PM' final='true' static='true' value='97' type='char'/><field api_added='3' name='CAPITAL_AM_PM' final='true' static='true' value='65' type='char'/><field api_added='3' name='DATE' final='true' static='true' value='100' type='char'/><field api_added='3' name='DAY' final='true' static='true' value='69' type='char'/><field api_added='3' name='HOUR' final='true' static='true' value='104' type='char'/><field api_added='3' name='HOUR_OF_DAY' final='true' static='true' value='107' type='char'/><field api_added='3' name='MINUTE' final='true' static='true' value='109' type='char'/><field api_added='3' name='MONTH' final='true' static='true' value='77' type='char'/><field api_added='3' name='QUOTE' final='true' static='true' value='39' type='char'/><field api_added='3' name='SECONDS' final='true' static='true' value='115' type='char'/><field api_added='3' name='TIME_ZONE' final='true' static='true' value='122' type='char'/><field api_added='3' name='YEAR' final='true' static='true' value='121' type='char'/><method api_added='3' name='format' final='true' static='true' return='java.lang.CharSequence'><parameter name='inFormat' type='java.lang.CharSequence'/><parameter name='inTimeInMillis' type='long'/></method><method api_added='3' name='format' final='true' static='true' return='java.lang.CharSequence'><parameter name='inFormat' type='java.lang.CharSequence'/><parameter name='inDate' type='java.util.Date'/></method><method api_added='3' name='format' final='true' static='true' return='java.lang.CharSequence'><parameter name='inFormat' type='java.lang.CharSequence'/><parameter name='inDate' type='java.util.Calendar'/></method><method api_added='3' name='getDateFormat' final='true' static='true' return='java.text.DateFormat'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='getDateFormatOrder' final='true' static='true' return='char[]'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='getLongDateFormat' final='true' static='true' return='java.text.DateFormat'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='getMediumDateFormat' final='true' static='true' return='java.text.DateFormat'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='getTimeFormat' final='true' static='true' return='java.text.DateFormat'><parameter name='context' type='android.content.Context'/></method><method api_added='3' name='is24HourFormat' static='true' return='boolean'><parameter name='context' type='android.content.Context'/></method></class><class api_added='3' name='DateUtils' extends='java.lang.Object'><constructor api_added='3' name='DateUtils' type='android.text.format.DateUtils'/><field api_added='3' name='ABBREV_MONTH_FORMAT' final='true' static='true' value='&quot;%b&quot;' type='java.lang.String'/><field api_added='3' name='ABBREV_WEEKDAY_FORMAT' final='true' static='true' value='&quot;%a&quot;' type='java.lang.String'/><field api_added='3' name='DAY_IN_MILLIS' final='true' static='true' value='86400000L' type='long'/><field api_added='3' name='FORMAT_12HOUR' final='true' static='true' value='64' type='int'/><field api_added='3' name='FORMAT_24HOUR' final='true' static='true' value='128' type='int'/><field api_added='3' name='FORMAT_ABBREV_ALL' final='true' static='true' value='524288' type='int'/><field api_added='3' name='FORMAT_ABBREV_MONTH' final='true' static='true' value='65536' type='int'/><field api_added='3' name='FORMAT_ABBREV_RELATIVE' final='true' static='true' value='262144' type='int'/><field api_added='3' name='FORMAT_ABBREV_TIME' final='true' static='true' value='16384' type='int'/><field api_added='3' name='FORMAT_ABBREV_WEEKDAY' final='true' static='true' value='32768' type='int'/><field api_added='3' name='FORMAT_CAP_AMPM' final='true' static='true' value='256' type='int'/><field api_added='3' name='FORMAT_CAP_MIDNIGHT' final='true' static='true' value='4096' type='int'/><field api_added='3' name='FORMAT_CAP_NOON' final='true' static='true' value='1024' type='int'/><field api_added='3' name='FORMAT_CAP_NOON_MIDNIGHT' final='true' static='true' value='5120' type='int'/><field api_added='3' name='FORMAT_NO_MIDNIGHT' final='true' static='true' value='2048' type='int'/><field api_added='3' name='FORMAT_NO_MONTH_DAY' final='true' static='true' value='32' type='int'/><field api_added='3' name='FORMAT_NO_NOON' final='true' static='true' value='512' type='int'/><field api_added='3' name='FORMAT_NO_NOON_MIDNIGHT' final='true' static='true' value='2560' type='int'/><field api_added='3' name='FORMAT_NO_YEAR' final='true' static='true' value='8' type='int'/><field api_added='3' name='FORMAT_NUMERIC_DATE' final='true' static='true' value='131072' type='int'/><field api_added='3' name='FORMAT_SHOW_DATE' final='true' static='true' value='16' type='int'/><field api_added='3' name='FORMAT_SHOW_TIME' final='true' static='true' value='1' type='int'/><field api_added='3' name='FORMAT_SHOW_WEEKDAY' final='true' static='true' value='2' type='int'/><field api_added='3' name='FORMAT_SHOW_YEAR' final='true' static='true' value='4' type='int'/><field api_added='3' name='FORMAT_UTC' final='true' static='true' value='8192' type='int'/><field api_added='3' name='HOUR_IN_MILLIS' final='true' static='true' value='3600000L' type='long'/><field api_added='3' name='HOUR_MINUTE_24' final='true' static='true' value='&quot;%H:%M&quot;' type='java.lang.String'/><field api_added='3' name='LENGTH_LONG' final='true' static='true' value='10' type='int'/><field api_added='3' name='LENGTH_MEDIUM' final='true' static='true' value='20' type='int'/><field api_added='3' name='LENGTH_SHORT' final='true' static='true' value='30' type='int'/><field api_added='3' name='LENGTH_SHORTER' final='true' static='true' value='40' type='int'/><field api_added='3' name='LENGTH_SHORTEST' final='true' static='true' value='50' type='int'/><field api_added='3' name='MINUTE_IN_MILLIS' final='true' static='true' value='60000L' type='long'/><field api_added='3' name='MONTH_DAY_FORMAT' final='true' static='true' value='&quot;%-d&quot;' type='java.lang.String'/><field api_added='3' name='MONTH_FORMAT' final='true' static='true' value='&quot;%B&quot;' type='java.lang.String'/><field api_added='3' name='NUMERIC_MONTH_FORMAT' final='true' static='true' value='&quot;%m&quot;' type='java.lang.String'/><field api_added='3' name='SECOND_IN_MILLIS' final='true' static='true' value='1000L' type='long'/><field api_added='3' name='WEEKDAY_FORMAT' final='true' static='true' value='&quot;%A&quot;' type='java.lang.String'/><field api_added='3' name='WEEK_IN_MILLIS' final='true' static='true' value='604800000L' type='long'/><field api_added='3' name='YEAR_FORMAT' final='true' static='true' value='&quot;%Y&quot;' type='java.lang.String'/><field api_added='3' name='YEAR_FORMAT_TWO_DIGITS' final='true' static='true' value='&quot;%g&quot;' type='java.lang.String'/><field api_added='3' name='YEAR_IN_MILLIS' final='true' static='true' value='31449600000L' type='long'/><field api_added='3' name='sameMonthTable' final='true' static='true' value='null' type='int[]'/><field api_added='3' name='sameYearTable' final='true' static='true' value='null' type='int[]'/><method api_added='3' name='formatDateRange' static='true' return='java.lang.String'><parameter name='context' type='android.content.Context'/><parameter name='startMillis' type='long'/><parameter name='endMillis' type='long'/><parameter name='flags' type='int'/></method><method api_added='3' name='formatDateTime' static='true' return='java.lang.String'><parameter name='context' type='android.content.Context'/><parameter name='millis' type='long'/><parameter name='flags' type='int'/></method><method api_added='3' name='formatElapsedTime' static='true' return='java.lang.String'><parameter name='elapsedSeconds' type='long'/></method><method api_added='3' name='formatElapsedTime' static='true' return='java.lang.String'><parameter name='recycle' type='java.lang.StringBuilder'/><parameter name='elapsedSeconds' type='long'/></method><method api_added='3' name='formatSameDayTime' final='true' static='true' return='java.lang.CharSequence'><parameter name='then' type='long'/><parameter name='now' type='long'/><parameter name='dateStyle' type='int'/><parameter name='timeStyle' type='int'/></method><method api_added='3' name='getAMPMString' static='true' return='java.lang.String'><parameter name='ampm' type='int'/></method><method api_added='3' name='getDayOfWeekString' static='true' return='java.lang.String'><parameter name='dayOfWeek' type='int'/><parameter name='abbrev' type='int'/></method><method api_added='3' name='getMonthString' static='true' return='java.lang.String'><parameter name='month' type='int'/><parameter name='abbrev' type='int'/></method><method api_added='3' name='getRelativeDateTimeString' static='true' return='java.lang.CharSequence'><parameter name='c' type='android.content.Context'/><parameter name='time' type='long'/><parameter name='minResolution' type='long'/><parameter name='transitionResolution' type='long'/><parameter name='flags' type='int'/></method><method api_added='3' name='getRelativeTimeSpanString' static='true' return='java.lang.CharSequence'><parameter name='startTime' type='long'/></method><method api_added='3' name='getRelativeTimeSpanString' static='true' return='java.lang.CharSequence'><parameter name='time' type='long'/><parameter name='now' type='long'/><parameter name='minResolution' type='long'/></method><method api_added='3' name='getRelativeTimeSpanString' static='true' return='java.lang.CharSequence'><parameter name='time' type='long'/><parameter name='now' type='long'/><parameter name='minResolution' type='long'/><parameter name='flags' type='int'/></method><method api_added='3' name='getRelativeTimeSpanString' static='true' return='java.lang.CharSequence'><parameter name='c' type='android.content.Context'/><parameter name='millis' type='long'/><parameter name='withPreposition' type='boolean'/></method><method api_added='3' name='getRelativeTimeSpanString' static='true' return='java.lang.CharSequence'><parameter name='c' type='android.content.Context'/><parameter name='millis' type='long'/></method><method api_added='3' name='isToday' static='true' return='boolean'><parameter name='when' type='long'/></method><method api_added='5' name='formatDateRange' static='true' return='java.util.Formatter'><parameter name='context' type='android.content.Context'/><parameter name='formatter' type='java.util.Formatter'/><parameter name='startMillis' type='long'/><parameter name='endMillis' type='long'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='Formatter' final='true' extends='java.lang.Object'><constructor api_added='3' name='Formatter' type='android.text.format.Formatter'/><method api_added='3' name='formatFileSize' static='true' return='java.lang.String'><parameter name='context' type='android.content.Context'/><parameter name='number' type='long'/></method><method api_added='3' name='formatIpAddress' static='true' return='java.lang.String'><parameter name='addr' type='int'/></method><method api_added='5' name='formatShortFileSize' static='true' return='java.lang.String'><parameter name='context' type='android.content.Context'/><parameter name='number' type='long'/></method></class><class api_added='3' name='Time' extends='java.lang.Object'><constructor api_added='3' name='Time' type='android.text.format.Time'><parameter name='timezone' type='java.lang.String'/></constructor><constructor api_added='3' name='Time' type='android.text.format.Time'/><constructor api_added='3' name='Time' type='android.text.format.Time'><parameter name='other' type='android.text.format.Time'/></constructor><field api_added='3' name='EPOCH_JULIAN_DAY' final='true' static='true' value='2440588' type='int'/><field api_added='3' name='FRIDAY' final='true' static='true' value='5' type='int'/><field api_added='3' name='HOUR' final='true' static='true' value='3' type='int'/><field api_added='3' name='MINUTE' final='true' static='true' value='2' type='int'/><field api_added='3' name='MONDAY' final='true' static='true' value='1' type='int'/><field api_added='3' name='MONTH' final='true' static='true' value='5' type='int'/><field api_added='3' name='MONTH_DAY' final='true' static='true' value='4' type='int'/><field api_added='3' name='SATURDAY' final='true' static='true' value='6' type='int'/><field api_added='3' name='SECOND' final='true' static='true' value='1' type='int'/><field api_added='3' name='SUNDAY' final='true' static='true' value='0' type='int'/><field api_added='3' name='THURSDAY' final='true' static='true' value='4' type='int'/><field api_added='3' name='TIMEZONE_UTC' final='true' static='true' value='&quot;UTC&quot;' type='java.lang.String'/><field api_added='3' name='TUESDAY' final='true' static='true' value='2' type='int'/><field api_added='3' name='WEDNESDAY' final='true' static='true' value='3' type='int'/><field api_added='3' name='WEEK_DAY' final='true' static='true' value='7' type='int'/><field api_added='3' name='WEEK_NUM' final='true' static='true' value='9' type='int'/><field api_added='3' name='YEAR' final='true' static='true' value='6' type='int'/><field api_added='3' name='YEAR_DAY' final='true' static='true' value='8' type='int'/><field api_added='3' name='allDay' type='boolean'/><field api_added='3' name='gmtoff' type='long'/><field api_added='3' name='hour' type='int'/><field api_added='3' name='isDst' type='int'/><field api_added='3' name='minute' type='int'/><field api_added='3' name='month' type='int'/><field api_added='3' name='monthDay' type='int'/><field api_added='3' name='second' type='int'/><field api_added='3' name='timezone' type='java.lang.String'/><field api_added='3' name='weekDay' type='int'/><field api_added='3' name='year' type='int'/><field api_added='3' name='yearDay' type='int'/><method api_added='3' name='after' return='boolean'><parameter name='that' type='android.text.format.Time'/></method><method api_added='3' name='before' return='boolean'><parameter name='that' type='android.text.format.Time'/></method><method api_added='3' name='clear'><parameter name='timezone' type='java.lang.String'/></method><method api_added='3' name='compare' native='true' static='true' return='int'><parameter name='a' type='android.text.format.Time'/><parameter name='b' type='android.text.format.Time'/></method><method api_added='3' name='format' return='java.lang.String'><parameter name='format' type='java.lang.String'/></method><method api_added='3' name='format2445' native='true' return='java.lang.String'/><method api_added='3' name='format3339' return='java.lang.String'><parameter name='allDay' type='boolean'/></method><method api_added='3' name='getActualMaximum' return='int'><parameter name='field' type='int'/></method><method api_added='3' name='getCurrentTimezone' static='true' return='java.lang.String'/><method api_added='3' name='getJulianDay' static='true' return='int'><parameter name='millis' type='long'/><parameter name='gmtoff' type='long'/></method><method api_added='3' name='getWeekNumber' return='int'/><method api_added='3' name='isEpoch' static='true' return='boolean'><parameter name='time' type='android.text.format.Time'/></method><method api_added='3' name='normalize' native='true' return='long'><parameter name='ignoreDst' type='boolean'/></method><method api_added='3' name='parse' return='boolean'><parameter name='s' type='java.lang.String'/></method><method api_added='3' name='parse3339' return='boolean'><parameter name='s' type='java.lang.String'/></method><method api_added='3' name='set' native='true'><parameter name='millis' type='long'/></method><method api_added='3' name='set'><parameter name='that' type='android.text.format.Time'/></method><method api_added='3' name='set'><parameter name='second' type='int'/><parameter name='minute' type='int'/><parameter name='hour' type='int'/><parameter name='monthDay' type='int'/><parameter name='month' type='int'/><parameter name='year' type='int'/></method><method api_added='3' name='set'><parameter name='monthDay' type='int'/><parameter name='month' type='int'/><parameter name='year' type='int'/></method><method api_added='3' name='setJulianDay' return='long'><parameter name='julianDay' type='int'/></method><method api_added='3' name='setToNow' native='true'/><method api_added='3' name='switchTimezone' native='true'><parameter name='timezone' type='java.lang.String'/></method><method api_added='3' name='toMillis' native='true' return='long'><parameter name='ignoreDst' type='boolean'/></method></class></package><package api_added='3' name='android.view.inputmethod'><class api_added='3' name='BaseInputConnection' extends='java.lang.Object'><implements name='android.view.inputmethod.InputConnection'/><constructor api_added='3' name='BaseInputConnection' type='android.view.inputmethod.BaseInputConnection'><parameter name='targetView' type='android.view.View'/><parameter name='fullEditor' type='boolean'/></constructor><method api_added='3' name='beginBatchEdit' return='boolean'/><method api_added='3' name='clearMetaKeyStates' return='boolean'><parameter name='states' type='int'/></method><method api_added='3' name='commitCompletion' return='boolean'><parameter name='text' type='android.view.inputmethod.CompletionInfo'/></method><method api_added='3' name='commitText' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='deleteSurroundingText' return='boolean'><parameter name='leftLength' type='int'/><parameter name='rightLength' type='int'/></method><method api_added='3' name='endBatchEdit' return='boolean'/><method api_added='3' name='finishComposingText' return='boolean'/><method api_added='3' name='getComposingSpanEnd' static='true' return='int'><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='getComposingSpanStart' static='true' return='int'><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='getCursorCapsMode' return='int'><parameter name='reqModes' type='int'/></method><method api_added='3' name='getEditable' return='android.text.Editable'/><method api_added='3' name='getExtractedText' return='android.view.inputmethod.ExtractedText'><parameter name='request' type='android.view.inputmethod.ExtractedTextRequest'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextAfterCursor' return='java.lang.CharSequence'><parameter name='length' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextBeforeCursor' return='java.lang.CharSequence'><parameter name='length' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='performContextMenuAction' return='boolean'><parameter name='id' type='int'/></method><method api_added='3' name='performEditorAction' return='boolean'><parameter name='actionCode' type='int'/></method><method api_added='3' name='performPrivateCommand' return='boolean'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='removeComposingSpans' final='true' static='true'><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='reportFullscreenMode' return='boolean'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='sendKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='setComposingSpans' static='true'><parameter name='text' type='android.text.Spannable'/></method><method api_added='3' name='setComposingText' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='setSelection' return='boolean'><parameter name='start' type='int'/><parameter name='end' type='int'/></method></class><class api_added='3' name='CompletionInfo' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='CompletionInfo' type='android.view.inputmethod.CompletionInfo'><parameter name='id' type='long'/><parameter name='index' type='int'/><parameter name='text' type='java.lang.CharSequence'/></constructor><constructor api_added='3' name='CompletionInfo' type='android.view.inputmethod.CompletionInfo'><parameter name='id' type='long'/><parameter name='index' type='int'/><parameter name='text' type='java.lang.CharSequence'/><parameter name='label' type='java.lang.CharSequence'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getId' return='long'/><method api_added='3' name='getLabel' return='java.lang.CharSequence'/><method api_added='3' name='getPosition' return='int'/><method api_added='3' name='getText' return='java.lang.CharSequence'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='EditorInfo' extends='java.lang.Object'><implements name='android.text.InputType'/><implements name='android.os.Parcelable'/><constructor api_added='3' name='EditorInfo' type='android.view.inputmethod.EditorInfo'/><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='IME_ACTION_DONE' final='true' static='true' value='6' type='int'/><field api_added='3' name='IME_ACTION_GO' final='true' static='true' value='2' type='int'/><field api_added='3' name='IME_ACTION_NEXT' final='true' static='true' value='5' type='int'/><field api_added='3' name='IME_ACTION_NONE' final='true' static='true' value='1' type='int'/><field api_added='3' name='IME_ACTION_SEARCH' final='true' static='true' value='3' type='int'/><field api_added='3' name='IME_ACTION_SEND' final='true' static='true' value='4' type='int'/><field api_added='3' name='IME_ACTION_UNSPECIFIED' final='true' static='true' value='0' type='int'/><field api_added='3' name='IME_FLAG_NO_ACCESSORY_ACTION' final='true' static='true' value='536870912' type='int'/><field api_added='3' name='IME_FLAG_NO_ENTER_ACTION' final='true' static='true' value='1073741824' type='int'/><field api_added='3' name='IME_FLAG_NO_EXTRACT_UI' final='true' static='true' value='268435456' type='int'/><field api_added='3' name='IME_MASK_ACTION' final='true' static='true' value='255' type='int'/><field api_added='3' name='IME_NULL' final='true' static='true' value='0' type='int'/><field api_added='3' name='actionId' type='int'/><field api_added='3' name='actionLabel' type='java.lang.CharSequence'/><field api_added='3' name='extras' type='android.os.Bundle'/><field api_added='3' name='fieldId' type='int'/><field api_added='3' name='fieldName' type='java.lang.String'/><field api_added='3' name='hintText' type='java.lang.CharSequence'/><field api_added='3' name='imeOptions' type='int'/><field api_added='3' name='initialCapsMode' type='int'/><field api_added='3' name='initialSelEnd' type='int'/><field api_added='3' name='initialSelStart' type='int'/><field api_added='3' name='inputType' type='int'/><field api_added='3' name='label' type='java.lang.CharSequence'/><field api_added='3' name='packageName' type='java.lang.String'/><field api_added='3' name='privateImeOptions' type='java.lang.String'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='ExtractedText' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='ExtractedText' type='android.view.inputmethod.ExtractedText'/><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='FLAG_SELECTING' final='true' static='true' value='2' type='int'/><field api_added='3' name='FLAG_SINGLE_LINE' final='true' static='true' value='1' type='int'/><field api_added='3' name='flags' type='int'/><field api_added='3' name='partialEndOffset' type='int'/><field api_added='3' name='partialStartOffset' type='int'/><field api_added='3' name='selectionEnd' type='int'/><field api_added='3' name='selectionStart' type='int'/><field api_added='3' name='startOffset' type='int'/><field api_added='3' name='text' type='java.lang.CharSequence'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='ExtractedTextRequest' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='ExtractedTextRequest' type='android.view.inputmethod.ExtractedTextRequest'/><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='3' name='flags' type='int'/><field api_added='3' name='hintMaxChars' type='int'/><field api_added='3' name='hintMaxLines' type='int'/><field api_added='3' name='token' type='int'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='InputBinding' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='InputBinding' type='android.view.inputmethod.InputBinding'><parameter name='conn' type='android.view.inputmethod.InputConnection'/><parameter name='connToken' type='android.os.IBinder'/><parameter name='uid' type='int'/><parameter name='pid' type='int'/></constructor><constructor api_added='3' name='InputBinding' type='android.view.inputmethod.InputBinding'><parameter name='conn' type='android.view.inputmethod.InputConnection'/><parameter name='binding' type='android.view.inputmethod.InputBinding'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='getConnection' return='android.view.inputmethod.InputConnection'/><method api_added='3' name='getConnectionToken' return='android.os.IBinder'/><method api_added='3' name='getPid' return='int'/><method api_added='3' name='getUid' return='int'/><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='InputConnectionWrapper' extends='java.lang.Object'><implements name='android.view.inputmethod.InputConnection'/><constructor api_added='3' name='InputConnectionWrapper' type='android.view.inputmethod.InputConnectionWrapper'><parameter name='target' type='android.view.inputmethod.InputConnection'/><parameter name='mutable' type='boolean'/></constructor><method api_added='3' name='beginBatchEdit' return='boolean'/><method api_added='3' name='clearMetaKeyStates' return='boolean'><parameter name='states' type='int'/></method><method api_added='3' name='commitCompletion' return='boolean'><parameter name='text' type='android.view.inputmethod.CompletionInfo'/></method><method api_added='3' name='commitText' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='deleteSurroundingText' return='boolean'><parameter name='leftLength' type='int'/><parameter name='rightLength' type='int'/></method><method api_added='3' name='endBatchEdit' return='boolean'/><method api_added='3' name='finishComposingText' return='boolean'/><method api_added='3' name='getCursorCapsMode' return='int'><parameter name='reqModes' type='int'/></method><method api_added='3' name='getExtractedText' return='android.view.inputmethod.ExtractedText'><parameter name='request' type='android.view.inputmethod.ExtractedTextRequest'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextAfterCursor' return='java.lang.CharSequence'><parameter name='n' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextBeforeCursor' return='java.lang.CharSequence'><parameter name='n' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='performContextMenuAction' return='boolean'><parameter name='id' type='int'/></method><method api_added='3' name='performEditorAction' return='boolean'><parameter name='editorAction' type='int'/></method><method api_added='3' name='performPrivateCommand' return='boolean'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='reportFullscreenMode' return='boolean'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='sendKeyEvent' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='setComposingText' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='setSelection' return='boolean'><parameter name='start' type='int'/><parameter name='end' type='int'/></method><method api_added='3' name='setTarget'><parameter name='target' type='android.view.inputmethod.InputConnection'/></method></class><class api_added='3' name='InputMethodInfo' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='3' name='InputMethodInfo' type='android.view.inputmethod.InputMethodInfo'><parameter name='context' type='android.content.Context'/><parameter name='service' type='android.content.pm.ResolveInfo'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></constructor><constructor api_added='3' name='InputMethodInfo' type='android.view.inputmethod.InputMethodInfo'><parameter name='packageName' type='java.lang.String'/><parameter name='className' type='java.lang.String'/><parameter name='label' type='java.lang.CharSequence'/><parameter name='settingsActivity' type='java.lang.String'/></constructor><field api_added='3' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='3' name='describeContents' return='int'/><method api_added='3' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method api_added='3' name='getComponent' return='android.content.ComponentName'/><method api_added='3' name='getId' return='java.lang.String'/><method api_added='3' name='getIsDefaultResourceId' return='int'/><method api_added='3' name='getPackageName' return='java.lang.String'/><method api_added='3' name='getServiceInfo' return='android.content.pm.ServiceInfo'/><method api_added='3' name='getServiceName' return='java.lang.String'/><method api_added='3' name='getSettingsActivity' return='java.lang.String'/><method api_added='3' name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='3' name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='3' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='3' name='InputMethodManager' final='true' extends='java.lang.Object'><field api_added='3' name='HIDE_IMPLICIT_ONLY' final='true' static='true' value='1' type='int'/><field api_added='3' name='HIDE_NOT_ALWAYS' final='true' static='true' value='2' type='int'/><field api_added='3' name='RESULT_HIDDEN' final='true' static='true' value='3' type='int'/><field api_added='3' name='RESULT_SHOWN' final='true' static='true' value='2' type='int'/><field api_added='3' name='RESULT_UNCHANGED_HIDDEN' final='true' static='true' value='1' type='int'/><field api_added='3' name='RESULT_UNCHANGED_SHOWN' final='true' static='true' value='0' type='int'/><field api_added='3' name='SHOW_FORCED' final='true' static='true' value='2' type='int'/><field api_added='3' name='SHOW_IMPLICIT' final='true' static='true' value='1' type='int'/><method api_added='3' name='displayCompletions'><parameter name='view' type='android.view.View'/><parameter name='completions' type='android.view.inputmethod.CompletionInfo[]'/></method><method api_added='3' name='getEnabledInputMethodList' return='java.util.List&lt;android.view.inputmethod.InputMethodInfo&gt;'/><method api_added='3' name='getInputMethodList' return='java.util.List&lt;android.view.inputmethod.InputMethodInfo&gt;'/><method api_added='3' name='hideSoftInputFromInputMethod'><parameter name='token' type='android.os.IBinder'/><parameter name='flags' type='int'/></method><method api_added='3' name='hideSoftInputFromWindow' return='boolean'><parameter name='windowToken' type='android.os.IBinder'/><parameter name='flags' type='int'/></method><method api_added='3' name='hideSoftInputFromWindow' return='boolean'><parameter name='windowToken' type='android.os.IBinder'/><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='hideStatusIcon'><parameter name='imeToken' type='android.os.IBinder'/></method><method api_added='3' name='isAcceptingText' return='boolean'/><method api_added='3' name='isActive' return='boolean'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='isActive' return='boolean'/><method api_added='3' name='isFullscreenMode' return='boolean'/><method api_added='3' name='isWatchingCursor' return='boolean'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='restartInput'><parameter name='view' type='android.view.View'/></method><method api_added='3' name='sendAppPrivateCommand'><parameter name='view' type='android.view.View'/><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='setInputMethod'><parameter name='token' type='android.os.IBinder'/><parameter name='id' type='java.lang.String'/></method><method api_added='3' name='showInputMethodPicker'/><method api_added='3' name='showSoftInput' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='flags' type='int'/></method><method api_added='3' name='showSoftInput' return='boolean'><parameter name='view' type='android.view.View'/><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='showSoftInputFromInputMethod'><parameter name='token' type='android.os.IBinder'/><parameter name='flags' type='int'/></method><method api_added='3' name='showStatusIcon'><parameter name='imeToken' type='android.os.IBinder'/><parameter name='packageName' type='java.lang.String'/><parameter name='iconId' type='int'/></method><method api_added='3' name='toggleSoftInput'><parameter name='showFlags' type='int'/><parameter name='hideFlags' type='int'/></method><method api_added='3' name='toggleSoftInputFromWindow'><parameter name='windowToken' type='android.os.IBinder'/><parameter name='showFlags' type='int'/><parameter name='hideFlags' type='int'/></method><method api_added='3' name='updateCursor'><parameter name='view' type='android.view.View'/><parameter name='left' type='int'/><parameter name='top' type='int'/><parameter name='right' type='int'/><parameter name='bottom' type='int'/></method><method api_added='3' name='updateExtractedText'><parameter name='view' type='android.view.View'/><parameter name='token' type='int'/><parameter name='text' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='updateSelection'><parameter name='view' type='android.view.View'/><parameter name='selStart' type='int'/><parameter name='selEnd' type='int'/><parameter name='candidatesStart' type='int'/><parameter name='candidatesEnd' type='int'/></method></class><interface api_added='3' name='InputConnection' abstract='true'><field api_added='3' name='GET_EXTRACTED_TEXT_MONITOR' final='true' static='true' value='1' type='int'/><field api_added='3' name='GET_TEXT_WITH_STYLES' final='true' static='true' value='1' type='int'/><method api_added='3' name='beginBatchEdit' abstract='true' return='boolean'/><method api_added='3' name='clearMetaKeyStates' abstract='true' return='boolean'><parameter name='states' type='int'/></method><method api_added='3' name='commitCompletion' abstract='true' return='boolean'><parameter name='text' type='android.view.inputmethod.CompletionInfo'/></method><method api_added='3' name='commitText' abstract='true' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='deleteSurroundingText' abstract='true' return='boolean'><parameter name='leftLength' type='int'/><parameter name='rightLength' type='int'/></method><method api_added='3' name='endBatchEdit' abstract='true' return='boolean'/><method api_added='3' name='finishComposingText' abstract='true' return='boolean'/><method api_added='3' name='getCursorCapsMode' abstract='true' return='int'><parameter name='reqModes' type='int'/></method><method api_added='3' name='getExtractedText' abstract='true' return='android.view.inputmethod.ExtractedText'><parameter name='request' type='android.view.inputmethod.ExtractedTextRequest'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextAfterCursor' abstract='true' return='java.lang.CharSequence'><parameter name='n' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='getTextBeforeCursor' abstract='true' return='java.lang.CharSequence'><parameter name='n' type='int'/><parameter name='flags' type='int'/></method><method api_added='3' name='performContextMenuAction' abstract='true' return='boolean'><parameter name='id' type='int'/></method><method api_added='3' name='performEditorAction' abstract='true' return='boolean'><parameter name='editorAction' type='int'/></method><method api_added='3' name='performPrivateCommand' abstract='true' return='boolean'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='reportFullscreenMode' abstract='true' return='boolean'><parameter name='enabled' type='boolean'/></method><method api_added='3' name='sendKeyEvent' abstract='true' return='boolean'><parameter name='event' type='android.view.KeyEvent'/></method><method api_added='3' name='setComposingText' abstract='true' return='boolean'><parameter name='text' type='java.lang.CharSequence'/><parameter name='newCursorPosition' type='int'/></method><method api_added='3' name='setSelection' abstract='true' return='boolean'><parameter name='start' type='int'/><parameter name='end' type='int'/></method></interface><interface api_added='3' name='InputMethod' abstract='true'><field api_added='3' name='SERVICE_INTERFACE' final='true' static='true' value='&quot;android.view.InputMethod&quot;' type='java.lang.String'/><field api_added='3' name='SERVICE_META_DATA' final='true' static='true' value='&quot;android.view.im&quot;' type='java.lang.String'/><field api_added='3' name='SHOW_EXPLICIT' final='true' static='true' value='1' type='int'/><field api_added='3' name='SHOW_FORCED' final='true' static='true' value='2' type='int'/><method api_added='3' name='attachToken' abstract='true'><parameter name='token' type='android.os.IBinder'/></method><method api_added='3' name='bindInput' abstract='true'><parameter name='binding' type='android.view.inputmethod.InputBinding'/></method><method api_added='3' name='createSession' abstract='true'><parameter name='callback' type='android.view.inputmethod.InputMethod.SessionCallback'/></method><method api_added='3' name='hideSoftInput' abstract='true'><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='restartInput' abstract='true'><parameter name='inputConnection' type='android.view.inputmethod.InputConnection'/><parameter name='attribute' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='revokeSession' abstract='true'><parameter name='session' type='android.view.inputmethod.InputMethodSession'/></method><method api_added='3' name='setSessionEnabled' abstract='true'><parameter name='session' type='android.view.inputmethod.InputMethodSession'/><parameter name='enabled' type='boolean'/></method><method api_added='3' name='showSoftInput' abstract='true'><parameter name='flags' type='int'/><parameter name='resultReceiver' type='android.os.ResultReceiver'/></method><method api_added='3' name='startInput' abstract='true'><parameter name='inputConnection' type='android.view.inputmethod.InputConnection'/><parameter name='info' type='android.view.inputmethod.EditorInfo'/></method><method api_added='3' name='unbindInput' abstract='true'/></interface><interface api_added='3' name='InputMethod.SessionCallback' abstract='true' static='true'><method api_added='3' name='sessionCreated' abstract='true'><parameter name='session' type='android.view.inputmethod.InputMethodSession'/></method></interface><interface api_added='3' name='InputMethodSession' abstract='true'><method api_added='3' name='appPrivateCommand' abstract='true'><parameter name='action' type='java.lang.String'/><parameter name='data' type='android.os.Bundle'/></method><method api_added='3' name='dispatchKeyEvent' abstract='true'><parameter name='seq' type='int'/><parameter name='event' type='android.view.KeyEvent'/><parameter name='callback' type='android.view.inputmethod.InputMethodSession.EventCallback'/></method><method api_added='3' name='dispatchTrackballEvent' abstract='true'><parameter name='seq' type='int'/><parameter name='event' type='android.view.MotionEvent'/><parameter name='callback' type='android.view.inputmethod.InputMethodSession.EventCallback'/></method><method api_added='3' name='displayCompletions' abstract='true'><parameter name='completions' type='android.view.inputmethod.CompletionInfo[]'/></method><method api_added='3' name='finishInput' abstract='true'/><method api_added='3' name='toggleSoftInput' abstract='true'><parameter name='showFlags' type='int'/><parameter name='hideFlags' type='int'/></method><method api_added='3' name='updateCursor' abstract='true'><parameter name='newCursor' type='android.graphics.Rect'/></method><method api_added='3' name='updateExtractedText' abstract='true'><parameter name='token' type='int'/><parameter name='text' type='android.view.inputmethod.ExtractedText'/></method><method api_added='3' name='updateSelection' abstract='true'><parameter name='oldSelStart' type='int'/><parameter name='oldSelEnd' type='int'/><parameter name='newSelStart' type='int'/><parameter name='newSelEnd' type='int'/><parameter name='candidatesStart' type='int'/><parameter name='candidatesEnd' type='int'/></method></interface><interface api_added='3' name='InputMethodSession.EventCallback' abstract='true' static='true'><method api_added='3' name='finishedEvent' abstract='true'><parameter name='seq' type='int'/><parameter name='handled' type='boolean'/></method></interface></package><package api_added='3' name='java.beans'><class api_added='3' name='IndexedPropertyChangeEvent' extends='java.beans.PropertyChangeEvent'><constructor api_added='3' name='IndexedPropertyChangeEvent' type='java.beans.IndexedPropertyChangeEvent'><parameter name='source' type='java.lang.Object'/><parameter name='propertyName' type='java.lang.String'/><parameter name='oldValue' type='java.lang.Object'/><parameter name='newValue' type='java.lang.Object'/><parameter name='index' type='int'/></constructor><method api_added='3' name='getIndex' return='int'/></class><class api_added='3' name='PropertyChangeEvent' extends='java.util.EventObject'><constructor api_added='3' name='PropertyChangeEvent' type='java.beans.PropertyChangeEvent'><parameter name='source' type='java.lang.Object'/><parameter name='propertyName' type='java.lang.String'/><parameter name='oldValue' type='java.lang.Object'/><parameter name='newValue' type='java.lang.Object'/></constructor><method api_added='3' name='getNewValue' return='java.lang.Object'/><method api_added='3' name='getOldValue' return='java.lang.Object'/><method api_added='3' name='getPropagationId' return='java.lang.Object'/><method api_added='3' name='getPropertyName' return='java.lang.String'/><method api_added='3' name='setPropagationId'><parameter name='propagationId' type='java.lang.Object'/></method></class><class api_added='3' name='PropertyChangeListenerProxy' extends='java.util.EventListenerProxy'><implements name='java.beans.PropertyChangeListener'/><constructor api_added='3' name='PropertyChangeListenerProxy' type='java.beans.PropertyChangeListenerProxy'><parameter name='propertyName' type='java.lang.String'/><parameter name='listener' type='java.beans.PropertyChangeListener'/></constructor><method api_added='3' name='getPropertyName' return='java.lang.String'/><method api_added='3' name='propertyChange'><parameter name='event' type='java.beans.PropertyChangeEvent'/></method></class><class api_added='3' name='PropertyChangeSupport' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor api_added='3' name='PropertyChangeSupport' type='java.beans.PropertyChangeSupport'><parameter name='sourceBean' type='java.lang.Object'/></constructor><method api_added='3' name='addPropertyChangeListener' synchronized='true'><parameter name='propertyName' type='java.lang.String'/><parameter name='listener' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='addPropertyChangeListener' synchronized='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='fireIndexedPropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='index' type='int'/><parameter name='oldValue' type='java.lang.Object'/><parameter name='newValue' type='java.lang.Object'/></method><method api_added='3' name='fireIndexedPropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='index' type='int'/><parameter name='oldValue' type='boolean'/><parameter name='newValue' type='boolean'/></method><method api_added='3' name='fireIndexedPropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='index' type='int'/><parameter name='oldValue' type='int'/><parameter name='newValue' type='int'/></method><method api_added='3' name='firePropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='oldValue' type='java.lang.Object'/><parameter name='newValue' type='java.lang.Object'/></method><method api_added='3' name='firePropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='oldValue' type='boolean'/><parameter name='newValue' type='boolean'/></method><method api_added='3' name='firePropertyChange'><parameter name='propertyName' type='java.lang.String'/><parameter name='oldValue' type='int'/><parameter name='newValue' type='int'/></method><method api_added='3' name='firePropertyChange'><parameter name='event' type='java.beans.PropertyChangeEvent'/></method><method api_added='3' name='getPropertyChangeListeners' synchronized='true' return='java.beans.PropertyChangeListener[]'><parameter name='propertyName' type='java.lang.String'/></method><method api_added='3' name='getPropertyChangeListeners' synchronized='true' return='java.beans.PropertyChangeListener[]'/><method api_added='3' name='hasListeners' synchronized='true' return='boolean'><parameter name='propertyName' type='java.lang.String'/></method><method api_added='3' name='removePropertyChangeListener' synchronized='true'><parameter name='propertyName' type='java.lang.String'/><parameter name='listener' type='java.beans.PropertyChangeListener'/></method><method api_added='3' name='removePropertyChangeListener' synchronized='true'><parameter name='listener' type='java.beans.PropertyChangeListener'/></method></class><interface api_added='3' name='PropertyChangeListener' abstract='true'><implements name='java.util.EventListener'/><method api_added='3' name='propertyChange' abstract='true'><parameter name='event' type='java.beans.PropertyChangeEvent'/></method></interface></package><package api_added='4' name='android.accessibilityservice'><class api_added='4' name='AccessibilityService' extends='android.app.Service' abstract='true'><constructor api_added='4' name='AccessibilityService' type='android.accessibilityservice.AccessibilityService'/><field api_added='4' name='SERVICE_INTERFACE' final='true' static='true' value='&quot;android.accessibilityservice.AccessibilityService&quot;' type='java.lang.String'/><method api_added='4' name='onAccessibilityEvent' abstract='true'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method><method api_added='4' name='onBind' final='true' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method api_added='4' name='onInterrupt' abstract='true'/><method api_added='4' name='onServiceConnected' visibility='protected'/><method api_added='4' name='setServiceInfo' final='true'><parameter name='info' type='android.accessibilityservice.AccessibilityServiceInfo'/></method></class><class api_added='4' name='AccessibilityServiceInfo' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='4' name='AccessibilityServiceInfo' type='android.accessibilityservice.AccessibilityServiceInfo'/><field api_added='4' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='4' name='DEFAULT' final='true' static='true' value='1' type='int'/><field api_added='4' name='FEEDBACK_AUDIBLE' final='true' static='true' value='4' type='int'/><field api_added='4' name='FEEDBACK_GENERIC' final='true' static='true' value='16' type='int'/><field api_added='4' name='FEEDBACK_HAPTIC' final='true' static='true' value='2' type='int'/><field api_added='4' name='FEEDBACK_SPOKEN' final='true' static='true' value='1' type='int'/><field api_added='4' name='FEEDBACK_VISUAL' final='true' static='true' value='8' type='int'/><field api_added='4' name='eventTypes' type='int'/><field api_added='4' name='feedbackType' type='int'/><field api_added='4' name='flags' type='int'/><field api_added='4' name='notificationTimeout' type='long'/><field api_added='4' name='packageNames' value='null' type='java.lang.String[]'/><method api_added='4' name='describeContents' return='int'/><method api_added='4' name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/><parameter name='flagz' type='int'/></method></class></package><package api_added='4' name='android.gesture'><class api_added='4' name='Gesture' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='4' name='Gesture' type='android.gesture.Gesture'/><field api_added='4' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='4' name='addStroke'><parameter name='stroke' type='android.gesture.GestureStroke'/></method><method api_added='4' name='describeContents' return='int'/><method api_added='4' name='getBoundingBox' return='android.graphics.RectF'/><method api_added='4' name='getID' return='long'/><method api_added='4' name='getLength' return='float'/><method api_added='4' name='getStrokes' return='java.util.ArrayList&lt;android.gesture.GestureStroke&gt;'/><method api_added='4' name='getStrokesCount' return='int'/><method api_added='4' name='toBitmap' return='android.graphics.Bitmap'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='edge' type='int'/><parameter name='numSample' type='int'/><parameter name='color' type='int'/></method><method api_added='4' name='toBitmap' return='android.graphics.Bitmap'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='inset' type='int'/><parameter name='color' type='int'/></method><method api_added='4' name='toPath' return='android.graphics.Path'/><method api_added='4' name='toPath' return='android.graphics.Path'><parameter name='path' type='android.graphics.Path'/></method><method api_added='4' name='toPath' return='android.graphics.Path'><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='edge' type='int'/><parameter name='numSample' type='int'/></method><method api_added='4' name='toPath' return='android.graphics.Path'><parameter name='path' type='android.graphics.Path'/><parameter name='width' type='int'/><parameter name='height' type='int'/><parameter name='edge' type='int'/><parameter name='numSample' type='int'/></method><method api_added='4' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method><method api_added='8' name='clone' return='java.lang.Object'/></class><class api_added='4' name='GestureLibraries' final='true' extends='java.lang.Object'><method api_added='4' name='fromFile' static='true' return='android.gesture.GestureLibrary'><parameter name='path' type='java.lang.String'/></method><method api_added='4' name='fromFile' static='true' return='android.gesture.GestureLibrary'><parameter name='path' type='java.io.File'/></method><method api_added='4' name='fromPrivateFile' static='true' return='android.gesture.GestureLibrary'><parameter name='context' type='android.content.Context'/><parameter name='name' type='java.lang.String'/></method><method api_added='4' name='fromRawResource' static='true' return='android.gesture.GestureLibrary'><parameter name='context' type='android.content.Context'/><parameter name='resourceId' type='int'/></method></class><class api_added='4' name='GestureLibrary' extends='java.lang.Object' abstract='true'><constructor api_added='4' name='GestureLibrary' type='android.gesture.GestureLibrary' visibility='protected'/><field api_added='4' name='mStore' final='true' type='android.gesture.GestureStore' visibility='protected'/><method api_added='4' name='addGesture'><parameter name='entryName' type='java.lang.String'/><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='getGestureEntries' return='java.util.Set&lt;java.lang.String&gt;'/><method api_added='4' name='getGestures' return='java.util.ArrayList&lt;android.gesture.Gesture&gt;'><parameter name='entryName' type='java.lang.String'/></method><method api_added='4' name='getOrientationStyle' return='int'/><method api_added='4' name='getSequenceType' return='int'/><method api_added='4' name='isReadOnly' return='boolean'/><method api_added='4' name='load' abstract='true' return='boolean'/><method api_added='4' name='recognize' return='java.util.ArrayList&lt;android.gesture.Prediction&gt;'><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='removeEntry'><parameter name='entryName' type='java.lang.String'/></method><method api_added='4' name='removeGesture'><parameter name='entryName' type='java.lang.String'/><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='save' abstract='true' return='boolean'/><method api_added='4' name='setOrientationStyle'><parameter name='style' type='int'/></method><method api_added='4' name='setSequenceType'><parameter name='type' type='int'/></method></class><class api_added='4' name='GestureOverlayView' extends='android.widget.FrameLayout'><constructor api_added='4' name='GestureOverlayView' type='android.gesture.GestureOverlayView'><parameter name='context' type='android.content.Context'/></constructor><constructor api_added='4' name='GestureOverlayView' type='android.gesture.GestureOverlayView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/></constructor><constructor api_added='4' name='GestureOverlayView' type='android.gesture.GestureOverlayView'><parameter name='context' type='android.content.Context'/><parameter name='attrs' type='android.util.AttributeSet'/><parameter name='defStyle' type='int'/></constructor><field api_added='4' name='GESTURE_STROKE_TYPE_MULTIPLE' final='true' static='true' value='1' type='int'/><field api_added='4' name='GESTURE_STROKE_TYPE_SINGLE' final='true' static='true' value='0' type='int'/><field api_added='4' name='ORIENTATION_HORIZONTAL' final='true' static='true' value='0' type='int'/><field api_added='4' name='ORIENTATION_VERTICAL' final='true' static='true' value='1' type='int'/><method api_added='4' name='addOnGestureListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGestureListener'/></method><method api_added='4' name='addOnGesturePerformedListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGesturePerformedListener'/></method><method api_added='4' name='addOnGesturingListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGesturingListener'/></method><method api_added='4' name='cancelClearAnimation'/><method api_added='4' name='cancelGesture'/><method api_added='4' name='clear'><parameter name='animated' type='boolean'/></method><method api_added='4' name='getCurrentStroke' return='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;'/><method api_added='4' name='getFadeOffset' return='long'/><method api_added='4' name='getGesture' return='android.gesture.Gesture'/><method api_added='4' name='getGestureColor' return='int'/><method api_added='4' name='getGesturePath' return='android.graphics.Path'/><method api_added='4' name='getGesturePath' return='android.graphics.Path'><parameter name='path' type='android.graphics.Path'/></method><method api_added='4' name='getGestureStrokeAngleThreshold' return='float'/><method api_added='4' name='getGestureStrokeLengthThreshold' return='float'/><method api_added='4' name='getGestureStrokeSquarenessTreshold' return='float'/><method api_added='4' name='getGestureStrokeType' return='int'/><method api_added='4' name='getGestureStrokeWidth' return='float'/><method api_added='4' name='getOrientation' return='int'/><method api_added='4' name='getUncertainGestureColor' return='int'/><method api_added='4' name='isEventsInterceptionEnabled' return='boolean'/><method api_added='4' name='isFadeEnabled' return='boolean'/><method api_added='4' name='isGestureVisible' return='boolean'/><method api_added='4' name='isGesturing' return='boolean'/><method api_added='4' name='removeAllOnGestureListeners'/><method api_added='4' name='removeAllOnGesturePerformedListeners'/><method api_added='4' name='removeAllOnGesturingListeners'/><method api_added='4' name='removeOnGestureListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGestureListener'/></method><method api_added='4' name='removeOnGesturePerformedListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGesturePerformedListener'/></method><method api_added='4' name='removeOnGesturingListener'><parameter name='listener' type='android.gesture.GestureOverlayView.OnGesturingListener'/></method><method api_added='4' name='setEventsInterceptionEnabled'><parameter name='enabled' type='boolean'/></method><method api_added='4' name='setFadeEnabled'><parameter name='fadeEnabled' type='boolean'/></method><method api_added='4' name='setFadeOffset'><parameter name='fadeOffset' type='long'/></method><method api_added='4' name='setGesture'><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='setGestureColor'><parameter name='color' type='int'/></method><method api_added='4' name='setGestureStrokeAngleThreshold'><parameter name='gestureStrokeAngleThreshold' type='float'/></method><method api_added='4' name='setGestureStrokeLengthThreshold'><parameter name='gestureStrokeLengthThreshold' type='float'/></method><method api_added='4' name='setGestureStrokeSquarenessTreshold'><parameter name='gestureStrokeSquarenessTreshold' type='float'/></method><method api_added='4' name='setGestureStrokeType'><parameter name='gestureStrokeType' type='int'/></method><method api_added='4' name='setGestureStrokeWidth'><parameter name='gestureStrokeWidth' type='float'/></method><method api_added='4' name='setGestureVisible'><parameter name='visible' type='boolean'/></method><method api_added='4' name='setOrientation'><parameter name='orientation' type='int'/></method><method api_added='4' name='setUncertainGestureColor'><parameter name='color' type='int'/></method></class><class api_added='4' name='GesturePoint' extends='java.lang.Object'><constructor api_added='4' name='GesturePoint' type='android.gesture.GesturePoint'><parameter name='x' type='float'/><parameter name='y' type='float'/><parameter name='t' type='long'/></constructor><field api_added='4' name='timestamp' final='true' type='long'/><field api_added='4' name='x' final='true' type='float'/><field api_added='4' name='y' final='true' type='float'/><method api_added='8' name='clone' return='java.lang.Object'/></class><class api_added='4' name='GestureStore' extends='java.lang.Object'><constructor api_added='4' name='GestureStore' type='android.gesture.GestureStore'/><field api_added='4' name='ORIENTATION_INVARIANT' final='true' static='true' value='1' type='int'/><field api_added='4' name='ORIENTATION_SENSITIVE' final='true' static='true' value='2' type='int'/><field api_added='4' name='SEQUENCE_INVARIANT' final='true' static='true' value='1' type='int'/><field api_added='4' name='SEQUENCE_SENSITIVE' final='true' static='true' value='2' type='int'/><method api_added='4' name='addGesture'><parameter name='entryName' type='java.lang.String'/><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='getGestureEntries' return='java.util.Set&lt;java.lang.String&gt;'/><method api_added='4' name='getGestures' return='java.util.ArrayList&lt;android.gesture.Gesture&gt;'><parameter name='entryName' type='java.lang.String'/></method><method api_added='4' name='getOrientationStyle' return='int'/><method api_added='4' name='getSequenceType' return='int'/><method api_added='4' name='hasChanged' return='boolean'/><method api_added='4' name='load'><parameter name='stream' type='java.io.InputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='4' name='load'><parameter name='stream' type='java.io.InputStream'/><parameter name='closeStream' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='4' name='recognize' return='java.util.ArrayList&lt;android.gesture.Prediction&gt;'><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='removeEntry'><parameter name='entryName' type='java.lang.String'/></method><method api_added='4' name='removeGesture'><parameter name='entryName' type='java.lang.String'/><parameter name='gesture' type='android.gesture.Gesture'/></method><method api_added='4' name='save'><parameter name='stream' type='java.io.OutputStream'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='4' name='save'><parameter name='stream' type='java.io.OutputStream'/><parameter name='closeStream' type='boolean'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='4' name='setOrientationStyle'><parameter name='style' type='int'/></method><method api_added='4' name='setSequenceType'><parameter name='type' type='int'/></method></class><class api_added='4' name='GestureStroke' extends='java.lang.Object'><constructor api_added='4' name='GestureStroke' type='android.gesture.GestureStroke'><parameter name='points' type='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;'/></constructor><field api_added='4' name='boundingBox' final='true' type='android.graphics.RectF'/><field api_added='4' name='length' final='true' type='float'/><field api_added='4' name='points' final='true' value='null' type='float[]'/><method api_added='4' name='clearPath'/><method api_added='4' name='computeOrientedBoundingBox' return='android.gesture.OrientedBoundingBox'/><method api_added='4' name='getPath' return='android.graphics.Path'/><method api_added='4' name='toPath' return='android.graphics.Path'><parameter name='width' type='float'/><parameter name='height' type='float'/><parameter name='numSample' type='int'/></method><method api_added='8' name='clone' return='java.lang.Object'/></class><class api_added='4' name='OrientedBoundingBox' extends='java.lang.Object'><field api_added='4' name='centerX' final='true' type='float'/><field api_added='4' name='centerY' final='true' type='float'/><field api_added='4' name='height' final='true' type='float'/><field api_added='4' name='orientation' final='true' type='float'/><field api_added='4' name='squareness' final='true' type='float'/><field api_added='4' name='width' final='true' type='float'/></class><class api_added='4' name='Prediction' extends='java.lang.Object'><field api_added='4' name='name' final='true' type='java.lang.String'/><field api_added='4' name='score' type='double'/></class><class api_added='8' name='GestureUtils' final='true' extends='java.lang.Object'><method api_added='8' name='computeOrientedBoundingBox' static='true' return='android.gesture.OrientedBoundingBox'><parameter name='originalPoints' type='java.util.ArrayList&lt;android.gesture.GesturePoint&gt;'/></method><method api_added='8' name='computeOrientedBoundingBox' static='true' return='android.gesture.OrientedBoundingBox'><parameter name='originalPoints' type='float[]'/></method><method api_added='8' name='spatialSampling' static='true' return='float[]'><parameter name='gesture' type='android.gesture.Gesture'/><parameter name='bitmapSize' type='int'/></method><method api_added='8' name='spatialSampling' static='true' return='float[]'><parameter name='gesture' type='android.gesture.Gesture'/><parameter name='bitmapSize' type='int'/><parameter name='keepAspectRatio' type='boolean'/></method><method api_added='8' name='temporalSampling' static='true' return='float[]'><parameter name='stroke' type='android.gesture.GestureStroke'/><parameter name='numPoints' type='int'/></method></class><interface api_added='4' name='GestureOverlayView.OnGestureListener' abstract='true' static='true'><method api_added='4' name='onGesture' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='4' name='onGestureCancelled' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='4' name='onGestureEnded' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='4' name='onGestureStarted' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/><parameter name='event' type='android.view.MotionEvent'/></method></interface><interface api_added='4' name='GestureOverlayView.OnGesturePerformedListener' abstract='true' static='true'><method api_added='4' name='onGesturePerformed' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/><parameter name='gesture' type='android.gesture.Gesture'/></method></interface><interface api_added='4' name='GestureOverlayView.OnGesturingListener' abstract='true' static='true'><method api_added='4' name='onGesturingEnded' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/></method><method api_added='4' name='onGesturingStarted' abstract='true'><parameter name='overlay' type='android.gesture.GestureOverlayView'/></method></interface></package><package api_added='4' name='android.speech.tts'><class api_added='4' name='TextToSpeech' extends='java.lang.Object'><constructor api_added='4' name='TextToSpeech' type='android.speech.tts.TextToSpeech'><parameter name='context' type='android.content.Context'/><parameter name='listener' type='android.speech.tts.TextToSpeech.OnInitListener'/></constructor><field api_added='4' name='ACTION_TTS_QUEUE_PROCESSING_COMPLETED' final='true' static='true' value='&quot;android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED&quot;' type='java.lang.String'/><field api_added='4' name='ERROR' final='true' static='true' value='-1' type='int'/><field api_added='4' name='LANG_AVAILABLE' final='true' static='true' value='0' type='int'/><field api_added='4' name='LANG_COUNTRY_AVAILABLE' final='true' static='true' value='1' type='int'/><field api_added='4' name='LANG_COUNTRY_VAR_AVAILABLE' final='true' static='true' value='2' type='int'/><field api_added='4' name='LANG_MISSING_DATA' final='true' static='true' value='-1' type='int'/><field api_added='4' name='LANG_NOT_SUPPORTED' final='true' static='true' value='-2' type='int'/><field api_added='4' name='QUEUE_ADD' final='true' static='true' value='1' type='int'/><field api_added='4' name='QUEUE_FLUSH' final='true' static='true' value='0' type='int'/><field api_added='4' name='SUCCESS' final='true' static='true' value='0' type='int'/><method api_added='4' name='addEarcon' return='int'><parameter name='earcon' type='java.lang.String'/><parameter name='packagename' type='java.lang.String'/><parameter name='resourceId' type='int'/></method><method api_added='4' name='addEarcon' return='int'><parameter name='earcon' type='java.lang.String'/><parameter name='filename' type='java.lang.String'/></method><method api_added='4' name='addSpeech' return='int'><parameter name='text' type='java.lang.String'/><parameter name='packagename' type='java.lang.String'/><parameter name='resourceId' type='int'/></method><method api_added='4' name='addSpeech' return='int'><parameter name='text' type='java.lang.String'/><parameter name='filename' type='java.lang.String'/></method><method api_added='4' name='getLanguage' return='java.util.Locale'/><method api_added='4' name='isLanguageAvailable' return='int'><parameter name='loc' type='java.util.Locale'/></method><method api_added='4' name='isSpeaking' return='boolean'/><method api_added='4' name='playEarcon' return='int'><parameter name='earcon' type='java.lang.String'/><parameter name='queueMode' type='int'/><parameter name='params' type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'/></method><method api_added='4' name='playSilence' return='int'><parameter name='durationInMs' type='long'/><parameter name='queueMode' type='int'/><parameter name='params' type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'/></method><method api_added='4' name='setLanguage' return='int'><parameter name='loc' type='java.util.Locale'/></method><method api_added='4' name='setOnUtteranceCompletedListener' return='int'><parameter name='listener' type='android.speech.tts.TextToSpeech.OnUtteranceCompletedListener'/></method><method api_added='4' name='setPitch' return='int'><parameter name='pitch' type='float'/></method><method api_added='4' name='setSpeechRate' return='int'><parameter name='speechRate' type='float'/></method><method api_added='4' name='shutdown'/><method api_added='4' name='speak' return='int'><parameter name='text' type='java.lang.String'/><parameter name='queueMode' type='int'/><parameter name='params' type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'/></method><method api_added='4' name='stop' return='int'/><method api_added='4' name='synthesizeToFile' return='int'><parameter name='text' type='java.lang.String'/><parameter name='params' type='java.util.HashMap&lt;java.lang.String, java.lang.String&gt;'/><parameter name='filename' type='java.lang.String'/></method><method api_added='8' name='areDefaultsEnforced' return='boolean'/><method api_added='8' name='getDefaultEngine' return='java.lang.String'/><method api_added='8' name='setEngineByPackageName' return='int'><parameter name='enginePackageName' type='java.lang.String'/></method></class><class api_added='4' name='TextToSpeech.Engine' extends='java.lang.Object'><constructor api_added='4' name='TextToSpeech.Engine' type='android.speech.tts.TextToSpeech.Engine'/><field api_added='4' name='ACTION_CHECK_TTS_DATA' final='true' static='true' value='&quot;android.speech.tts.engine.CHECK_TTS_DATA&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_INSTALL_TTS_DATA' final='true' static='true' value='&quot;android.speech.tts.engine.INSTALL_TTS_DATA&quot;' type='java.lang.String'/><field api_added='4' name='ACTION_TTS_DATA_INSTALLED' final='true' static='true' value='&quot;android.speech.tts.engine.TTS_DATA_INSTALLED&quot;' type='java.lang.String'/><field api_added='4' name='CHECK_VOICE_DATA_BAD_DATA' final='true' static='true' value='-1' type='int'/><field api_added='4' name='CHECK_VOICE_DATA_FAIL' final='true' static='true' value='0' type='int'/><field api_added='4' name='CHECK_VOICE_DATA_MISSING_DATA' final='true' static='true' value='-2' type='int'/><field api_added='4' name='CHECK_VOICE_DATA_MISSING_VOLUME' final='true' static='true' value='-3' type='int'/><field api_added='4' name='CHECK_VOICE_DATA_PASS' final='true' static='true' value='1' type='int'/><field api_added='4' name='DEFAULT_STREAM' final='true' static='true' value='3' type='int'/><field api_added='4' name='EXTRA_TTS_DATA_INSTALLED' final='true' static='true' value='&quot;dataInstalled&quot;' type='java.lang.String'/><field api_added='4' name='EXTRA_VOICE_DATA_FILES' final='true' static='true' value='&quot;dataFiles&quot;' type='java.lang.String'/><field api_added='4' name='EXTRA_VOICE_DATA_FILES_INFO' final='true' static='true' value='&quot;dataFilesInfo&quot;' type='java.lang.String'/><field api_added='4' name='EXTRA_VOICE_DATA_ROOT_DIRECTORY' final='true' static='true' value='&quot;dataRoot&quot;' type='java.lang.String'/><field api_added='4' name='KEY_PARAM_STREAM' final='true' static='true' value='&quot;streamType&quot;' type='java.lang.String'/><field api_added='4' name='KEY_PARAM_UTTERANCE_ID' final='true' static='true' value='&quot;utteranceId&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_AVAILABLE_VOICES' final='true' static='true' value='&quot;availableVoices&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_CHECK_VOICE_DATA_FOR' final='true' static='true' value='&quot;checkVoiceDataFor&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_UNAVAILABLE_VOICES' final='true' static='true' value='&quot;unavailableVoices&quot;' type='java.lang.String'/></class><interface api_added='4' name='TextToSpeech.OnInitListener' abstract='true' static='true'><method api_added='4' name='onInit' abstract='true'><parameter name='status' type='int'/></method></interface><interface api_added='4' name='TextToSpeech.OnUtteranceCompletedListener' abstract='true' static='true'><method api_added='4' name='onUtteranceCompleted' abstract='true'><parameter name='utteranceId' type='java.lang.String'/></method></interface></package><package api_added='4' name='android.view.accessibility'><class api_added='4' name='AccessibilityEvent' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='4' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='4' name='INVALID_POSITION' final='true' static='true' value='-1' type='int'/><field api_added='4' name='MAX_TEXT_LENGTH' final='true' static='true' value='500' type='int'/><field api_added='4' name='TYPES_ALL_MASK' final='true' static='true' value='-1' type='int'/><field api_added='4' name='TYPE_NOTIFICATION_STATE_CHANGED' final='true' static='true' value='64' type='int'/><field api_added='4' name='TYPE_VIEW_CLICKED' final='true' static='true' value='1' type='int'/><field api_added='4' name='TYPE_VIEW_FOCUSED' final='true' static='true' value='8' type='int'/><field api_added='4' name='TYPE_VIEW_LONG_CLICKED' final='true' static='true' value='2' type='int'/><field api_added='4' name='TYPE_VIEW_SELECTED' final='true' static='true' value='4' type='int'/><field api_added='4' name='TYPE_VIEW_TEXT_CHANGED' final='true' static='true' value='16' type='int'/><field api_added='4' name='TYPE_WINDOW_STATE_CHANGED' final='true' static='true' value='32' type='int'/><method api_added='4' name='describeContents' return='int'/><method api_added='4' name='getAddedCount' return='int'/><method api_added='4' name='getBeforeText' return='java.lang.CharSequence'/><method api_added='4' name='getClassName' return='java.lang.CharSequence'/><method api_added='4' name='getContentDescription' return='java.lang.CharSequence'/><method api_added='4' name='getCurrentItemIndex' return='int'/><method api_added='4' name='getEventTime' return='long'/><method api_added='4' name='getEventType' return='int'/><method api_added='4' name='getFromIndex' return='int'/><method api_added='4' name='getItemCount' return='int'/><method api_added='4' name='getPackageName' return='java.lang.CharSequence'/><method api_added='4' name='getParcelableData' return='android.os.Parcelable'/><method api_added='4' name='getRemovedCount' return='int'/><method api_added='4' name='getText' return='java.util.List&lt;java.lang.CharSequence&gt;'/><method api_added='4' name='initFromParcel'><parameter name='parcel' type='android.os.Parcel'/></method><method api_added='4' name='isChecked' return='boolean'/><method api_added='4' name='isEnabled' return='boolean'/><method api_added='4' name='isFullScreen' return='boolean'/><method api_added='4' name='isPassword' return='boolean'/><method api_added='4' name='obtain' static='true' return='android.view.accessibility.AccessibilityEvent'><parameter name='eventType' type='int'/></method><method api_added='4' name='obtain' static='true' return='android.view.accessibility.AccessibilityEvent'/><method api_added='4' name='recycle'/><method api_added='4' name='setAddedCount'><parameter name='addedCount' type='int'/></method><method api_added='4' name='setBeforeText'><parameter name='beforeText' type='java.lang.CharSequence'/></method><method api_added='4' name='setChecked'><parameter name='isChecked' type='boolean'/></method><method api_added='4' name='setClassName'><parameter name='className' type='java.lang.CharSequence'/></method><method api_added='4' name='setContentDescription'><parameter name='contentDescription' type='java.lang.CharSequence'/></method><method api_added='4' name='setCurrentItemIndex'><parameter name='currentItemIndex' type='int'/></method><method api_added='4' name='setEnabled'><parameter name='isEnabled' type='boolean'/></method><method api_added='4' name='setEventTime'><parameter name='eventTime' type='long'/></method><method api_added='4' name='setEventType'><parameter name='eventType' type='int'/></method><method api_added='4' name='setFromIndex'><parameter name='fromIndex' type='int'/></method><method api_added='4' name='setFullScreen'><parameter name='isFullScreen' type='boolean'/></method><method api_added='4' name='setItemCount'><parameter name='itemCount' type='int'/></method><method api_added='4' name='setPackageName'><parameter name='packageName' type='java.lang.CharSequence'/></method><method api_added='4' name='setParcelableData'><parameter name='parcelableData' type='android.os.Parcelable'/></method><method api_added='4' name='setPassword'><parameter name='isPassword' type='boolean'/></method><method api_added='4' name='setRemovedCount'><parameter name='removedCount' type='int'/></method><method api_added='4' name='writeToParcel'><parameter name='parcel' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='4' name='AccessibilityManager' final='true' extends='java.lang.Object'><method api_added='4' name='getAccessibilityServiceList' return='java.util.List&lt;android.content.pm.ServiceInfo&gt;'/><method api_added='4' name='interrupt'/><method api_added='4' name='isEnabled' return='boolean'/><method api_added='4' name='sendAccessibilityEvent'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method></class><interface api_added='4' name='AccessibilityEventSource' abstract='true'><method api_added='4' name='sendAccessibilityEvent' abstract='true'><parameter name='eventType' type='int'/></method><method api_added='4' name='sendAccessibilityEventUnchecked' abstract='true'><parameter name='event' type='android.view.accessibility.AccessibilityEvent'/></method></interface></package><package api_added='5' name='android.accounts'><class api_added='5' name='AbstractAccountAuthenticator' extends='java.lang.Object' abstract='true'><constructor api_added='5' name='AbstractAccountAuthenticator' type='android.accounts.AbstractAccountAuthenticator'><parameter name='context' type='android.content.Context'/></constructor><method api_added='5' name='addAccount' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='accountType' type='java.lang.String'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='requiredFeatures' type='java.lang.String[]'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='5' name='confirmCredentials' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='5' name='editProperties' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='accountType' type='java.lang.String'/></method><method api_added='5' name='getAccountRemovalAllowed' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='5' name='getAuthToken' abstract='true' api_removed='8' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='loginOptions' type='android.os.Bundle'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='5' name='getAuthTokenLabel' abstract='true' return='java.lang.String'><parameter name='authTokenType' type='java.lang.String'/></method><method api_added='5' name='getIBinder' final='true' return='android.os.IBinder'/><method api_added='5' name='hasFeatures' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='features' type='java.lang.String[]'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='5' name='updateCredentials' abstract='true' api_removed='8' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='loginOptions' type='android.os.Bundle'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='8' name='getAuthToken' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method><method api_added='8' name='updateCredentials' abstract='true' return='android.os.Bundle'><parameter name='response' type='android.accounts.AccountAuthenticatorResponse'/><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='options' type='android.os.Bundle'/><exception name='NetworkErrorException' type='android.accounts.NetworkErrorException'/></method></class><class api_added='5' name='Account' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='Account' type='android.accounts.Account'><parameter name='name' type='java.lang.String'/><parameter name='type' type='java.lang.String'/></constructor><constructor api_added='5' name='Account' type='android.accounts.Account'><parameter name='in' type='android.os.Parcel'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='name' final='true' type='java.lang.String'/><field api_added='5' name='type' final='true' type='java.lang.String'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='AccountAuthenticatorActivity' extends='android.app.Activity'><constructor api_added='5' name='AccountAuthenticatorActivity' type='android.accounts.AccountAuthenticatorActivity'/><method api_added='5' name='setAccountAuthenticatorResult' final='true'><parameter name='result' type='android.os.Bundle'/></method></class><class api_added='5' name='AccountAuthenticatorResponse' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='AccountAuthenticatorResponse' type='android.accounts.AccountAuthenticatorResponse'><parameter name='parcel' type='android.os.Parcel'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='onError'><parameter name='errorCode' type='int'/><parameter name='errorMessage' type='java.lang.String'/></method><method api_added='5' name='onRequestContinued'/><method api_added='5' name='onResult'><parameter name='result' type='android.os.Bundle'/></method><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='AccountManager' extends='java.lang.Object'><field api_added='5' name='ACTION_AUTHENTICATOR_INTENT' final='true' static='true' value='&quot;android.accounts.AccountAuthenticator&quot;' type='java.lang.String'/><field api_added='5' name='AUTHENTICATOR_ATTRIBUTES_NAME' final='true' static='true' value='&quot;account-authenticator&quot;' type='java.lang.String'/><field api_added='5' name='AUTHENTICATOR_META_DATA_NAME' final='true' static='true' value='&quot;android.accounts.AccountAuthenticator&quot;' type='java.lang.String'/><field api_added='5' name='ERROR_CODE_BAD_ARGUMENTS' final='true' static='true' value='7' type='int'/><field api_added='5' name='ERROR_CODE_BAD_REQUEST' final='true' static='true' value='8' type='int'/><field api_added='5' name='ERROR_CODE_CANCELED' final='true' static='true' value='4' type='int'/><field api_added='5' name='ERROR_CODE_INVALID_RESPONSE' final='true' static='true' value='5' type='int'/><field api_added='5' name='ERROR_CODE_NETWORK_ERROR' final='true' static='true' value='3' type='int'/><field api_added='5' name='ERROR_CODE_REMOTE_EXCEPTION' final='true' static='true' value='1' type='int'/><field api_added='5' name='ERROR_CODE_UNSUPPORTED_OPERATION' final='true' static='true' value='6' type='int'/><field api_added='5' name='KEY_ACCOUNTS' final='true' static='true' value='&quot;accounts&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ACCOUNT_AUTHENTICATOR_RESPONSE' final='true' static='true' value='&quot;accountAuthenticatorResponse&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ACCOUNT_MANAGER_RESPONSE' final='true' static='true' value='&quot;accountManagerResponse&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ACCOUNT_NAME' final='true' static='true' value='&quot;authAccount&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ACCOUNT_TYPE' final='true' static='true' value='&quot;accountType&quot;' type='java.lang.String'/><field api_added='5' name='KEY_AUTHENTICATOR_TYPES' final='true' static='true' value='&quot;authenticator_types&quot;' type='java.lang.String'/><field api_added='5' name='KEY_AUTHTOKEN' final='true' static='true' value='&quot;authtoken&quot;' type='java.lang.String'/><field api_added='5' name='KEY_AUTH_FAILED_MESSAGE' final='true' static='true' value='&quot;authFailedMessage&quot;' type='java.lang.String'/><field api_added='5' name='KEY_AUTH_TOKEN_LABEL' final='true' static='true' value='&quot;authTokenLabelKey&quot;' type='java.lang.String'/><field api_added='5' name='KEY_BOOLEAN_RESULT' final='true' static='true' value='&quot;booleanResult&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ERROR_CODE' final='true' static='true' value='&quot;errorCode&quot;' type='java.lang.String'/><field api_added='5' name='KEY_ERROR_MESSAGE' final='true' static='true' value='&quot;errorMessage&quot;' type='java.lang.String'/><field api_added='5' name='KEY_INTENT' final='true' static='true' value='&quot;intent&quot;' type='java.lang.String'/><field api_added='5' name='KEY_PASSWORD' final='true' static='true' value='&quot;password&quot;' type='java.lang.String'/><field api_added='5' name='KEY_USERDATA' final='true' static='true' value='&quot;userdata&quot;' type='java.lang.String'/><field api_added='5' name='LOGIN_ACCOUNTS_CHANGED_ACTION' final='true' static='true' value='&quot;android.accounts.LOGIN_ACCOUNTS_CHANGED&quot;' type='java.lang.String'/><method api_added='5' name='addAccount' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='accountType' type='java.lang.String'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='requiredFeatures' type='java.lang.String[]'/><parameter name='addAccountOptions' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='addAccountExplicitly' api_removed='8' return='boolean'><parameter name='account' type='android.accounts.Account'/><parameter name='password' type='java.lang.String'/><parameter name='extras' type='android.os.Bundle'/><parameter name='userdata' type='android.os.Bundle'/></method><method api_added='5' name='addOnAccountsUpdatedListener'><parameter name='listener' type='android.accounts.OnAccountsUpdateListener'/><parameter name='handler' type='android.os.Handler'/><parameter name='updateImmediately' type='boolean'/></method><method api_added='5' name='blockingGetAuthToken' return='java.lang.String'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='notifyAuthFailure' type='boolean'/><exception name='AuthenticatorException' type='android.accounts.AuthenticatorException'/><exception name='IOException' type='java.io.IOException'/><exception name='OperationCanceledException' type='android.accounts.OperationCanceledException'/></method><method api_added='5' name='clearPassword'><parameter name='account' type='android.accounts.Account'/></method><method api_added='5' name='confirmCredentials' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='options' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='editProperties' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='accountType' type='java.lang.String'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='get' static='true' return='android.accounts.AccountManager'><parameter name='context' type='android.content.Context'/></method><method api_added='5' name='getAccounts' return='android.accounts.Account[]'/><method api_added='5' name='getAccountsByType' return='android.accounts.Account[]'><parameter name='type' type='java.lang.String'/></method><method api_added='5' name='getAccountsByTypeAndFeatures' return='android.accounts.AccountManagerFuture&lt;android.accounts.Account[]&gt;'><parameter name='type' type='java.lang.String'/><parameter name='features' type='java.lang.String[]'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.accounts.Account[]&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='getAuthToken' api_removed='8' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='loginOptions' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/><parameter name='options' type='android.os.Bundle'/></method><method api_added='5' name='getAuthToken' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='notifyAuthFailure' type='boolean'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='getAuthTokenByFeatures' api_removed='8' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='accountType' type='java.lang.String'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='features' type='java.lang.String[]'/><parameter name='activityForPrompting' type='android.app.Activity'/><parameter name='addAccountOptions' type='android.os.Bundle'/><parameter name='loginOptions' type='android.os.Bundle'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/><parameter name='getAuthTokenOptions' type='android.os.Bundle'/></method><method api_added='5' name='getAuthenticatorTypes' return='android.accounts.AuthenticatorDescription[]'/><method api_added='5' name='getPassword' return='java.lang.String'><parameter name='account' type='android.accounts.Account'/></method><method api_added='5' name='getUserData' return='java.lang.String'><parameter name='account' type='android.accounts.Account'/><parameter name='key' type='java.lang.String'/></method><method api_added='5' name='invalidateAuthToken'><parameter name='accountType' type='java.lang.String'/><parameter name='authToken' type='java.lang.String'/></method><method api_added='5' name='peekAuthToken' return='java.lang.String'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/></method><method api_added='5' name='removeAccount' return='android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='5' name='removeOnAccountsUpdatedListener'><parameter name='listener' type='android.accounts.OnAccountsUpdateListener'/></method><method api_added='5' name='setAuthToken'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='authToken' type='java.lang.String'/></method><method api_added='5' name='setPassword'><parameter name='account' type='android.accounts.Account'/><parameter name='password' type='java.lang.String'/></method><method api_added='5' name='setUserData'><parameter name='account' type='android.accounts.Account'/><parameter name='key' type='java.lang.String'/><parameter name='value' type='java.lang.String'/></method><method api_added='5' name='updateCredentials' api_removed='8' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='loginOptions' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/><parameter name='options' type='android.os.Bundle'/></method><method api_added='8' name='addAccountExplicitly' return='boolean'><parameter name='account' type='android.accounts.Account'/><parameter name='password' type='java.lang.String'/><parameter name='userdata' type='android.os.Bundle'/></method><method api_added='8' name='getAuthToken' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='options' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='8' name='getAuthTokenByFeatures' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='accountType' type='java.lang.String'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='features' type='java.lang.String[]'/><parameter name='activity' type='android.app.Activity'/><parameter name='addAccountOptions' type='android.os.Bundle'/><parameter name='getAuthTokenOptions' type='android.os.Bundle'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='8' name='hasFeatures' return='android.accounts.AccountManagerFuture&lt;java.lang.Boolean&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='features' type='java.lang.String[]'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;java.lang.Boolean&gt;'/><parameter name='handler' type='android.os.Handler'/></method><method api_added='8' name='updateCredentials' return='android.accounts.AccountManagerFuture&lt;android.os.Bundle&gt;'><parameter name='account' type='android.accounts.Account'/><parameter name='authTokenType' type='java.lang.String'/><parameter name='options' type='android.os.Bundle'/><parameter name='activity' type='android.app.Activity'/><parameter name='callback' type='android.accounts.AccountManagerCallback&lt;android.os.Bundle&gt;'/><parameter name='handler' type='android.os.Handler'/></method></class><class api_added='5' name='AccountsException' extends='java.lang.Exception'><constructor api_added='5' name='AccountsException' type='android.accounts.AccountsException'/><constructor api_added='5' name='AccountsException' type='android.accounts.AccountsException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='5' name='AccountsException' type='android.accounts.AccountsException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='AccountsException' type='android.accounts.AccountsException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='5' name='AuthenticatorDescription' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='5' name='AuthenticatorDescription' type='android.accounts.AuthenticatorDescription'><parameter name='type' type='java.lang.String'/><parameter name='packageName' type='java.lang.String'/><parameter name='labelId' type='int'/><parameter name='iconId' type='int'/><parameter name='smallIconId' type='int'/><parameter name='prefId' type='int'/></constructor><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='accountPreferencesId' final='true' type='int'/><field api_added='5' name='iconId' final='true' type='int'/><field api_added='5' name='labelId' final='true' type='int'/><field api_added='5' name='packageName' final='true' type='java.lang.String'/><field api_added='5' name='smallIconId' final='true' type='int'/><field api_added='5' name='type' final='true' type='java.lang.String'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='newKey' static='true' return='android.accounts.AuthenticatorDescription'><parameter name='type' type='java.lang.String'/></method><method api_added='5' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='AuthenticatorException' extends='android.accounts.AccountsException'><constructor api_added='5' name='AuthenticatorException' type='android.accounts.AuthenticatorException'/><constructor api_added='5' name='AuthenticatorException' type='android.accounts.AuthenticatorException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='5' name='AuthenticatorException' type='android.accounts.AuthenticatorException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='AuthenticatorException' type='android.accounts.AuthenticatorException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='5' name='NetworkErrorException' extends='android.accounts.AccountsException'><constructor api_added='5' name='NetworkErrorException' type='android.accounts.NetworkErrorException'/><constructor api_added='5' name='NetworkErrorException' type='android.accounts.NetworkErrorException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='5' name='NetworkErrorException' type='android.accounts.NetworkErrorException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='NetworkErrorException' type='android.accounts.NetworkErrorException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='5' name='OperationCanceledException' extends='android.accounts.AccountsException'><constructor api_added='5' name='OperationCanceledException' type='android.accounts.OperationCanceledException'/><constructor api_added='5' name='OperationCanceledException' type='android.accounts.OperationCanceledException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='5' name='OperationCanceledException' type='android.accounts.OperationCanceledException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='5' name='OperationCanceledException' type='android.accounts.OperationCanceledException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><interface api_added='5' name='AccountManagerCallback' abstract='true'><method api_added='5' name='run' abstract='true'><parameter name='future' type='android.accounts.AccountManagerFuture&lt;V&gt;'/></method></interface><interface api_added='5' name='AccountManagerFuture' abstract='true'><method api_added='5' name='cancel' abstract='true' return='boolean'><parameter name='mayInterruptIfRunning' type='boolean'/></method><method api_added='5' name='getResult' abstract='true' return='V'><exception name='AuthenticatorException' type='android.accounts.AuthenticatorException'/><exception name='IOException' type='java.io.IOException'/><exception name='OperationCanceledException' type='android.accounts.OperationCanceledException'/></method><method api_added='5' name='getResult' abstract='true' return='V'><parameter name='timeout' type='long'/><parameter name='unit' type='java.util.concurrent.TimeUnit'/><exception name='AuthenticatorException' type='android.accounts.AuthenticatorException'/><exception name='IOException' type='java.io.IOException'/><exception name='OperationCanceledException' type='android.accounts.OperationCanceledException'/></method><method api_added='5' name='isCancelled' abstract='true' return='boolean'/><method api_added='5' name='isDone' abstract='true' return='boolean'/></interface><interface api_added='5' name='OnAccountsUpdateListener' abstract='true'><method api_added='5' name='onAccountsUpdated' abstract='true'><parameter name='accounts' type='android.accounts.Account[]'/></method></interface></package><package api_added='5' name='android.bluetooth'><class api_added='5' name='BluetoothAdapter' final='true' extends='java.lang.Object'><field api_added='5' name='ACTION_DISCOVERY_FINISHED' final='true' static='true' value='&quot;android.bluetooth.adapter.action.DISCOVERY_FINISHED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_DISCOVERY_STARTED' final='true' static='true' value='&quot;android.bluetooth.adapter.action.DISCOVERY_STARTED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_LOCAL_NAME_CHANGED' final='true' static='true' value='&quot;android.bluetooth.adapter.action.LOCAL_NAME_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_REQUEST_DISCOVERABLE' final='true' static='true' value='&quot;android.bluetooth.adapter.action.REQUEST_DISCOVERABLE&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_REQUEST_ENABLE' final='true' static='true' value='&quot;android.bluetooth.adapter.action.REQUEST_ENABLE&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_SCAN_MODE_CHANGED' final='true' static='true' value='&quot;android.bluetooth.adapter.action.SCAN_MODE_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_STATE_CHANGED' final='true' static='true' value='&quot;android.bluetooth.adapter.action.STATE_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='ERROR' final='true' static='true' value='-2147483648' type='int'/><field api_added='5' name='EXTRA_DISCOVERABLE_DURATION' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.DISCOVERABLE_DURATION&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_LOCAL_NAME' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.LOCAL_NAME&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_PREVIOUS_SCAN_MODE' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.PREVIOUS_SCAN_MODE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_PREVIOUS_STATE' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.PREVIOUS_STATE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_SCAN_MODE' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.SCAN_MODE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_STATE' final='true' static='true' value='&quot;android.bluetooth.adapter.extra.STATE&quot;' type='java.lang.String'/><field api_added='5' name='SCAN_MODE_CONNECTABLE' final='true' static='true' value='21' type='int'/><field api_added='5' name='SCAN_MODE_CONNECTABLE_DISCOVERABLE' final='true' static='true' value='23' type='int'/><field api_added='5' name='SCAN_MODE_NONE' final='true' static='true' value='20' type='int'/><field api_added='5' name='STATE_OFF' final='true' static='true' value='10' type='int'/><field api_added='5' name='STATE_ON' final='true' static='true' value='12' type='int'/><field api_added='5' name='STATE_TURNING_OFF' final='true' static='true' value='13' type='int'/><field api_added='5' name='STATE_TURNING_ON' final='true' static='true' value='11' type='int'/><method api_added='5' name='cancelDiscovery' return='boolean'/><method api_added='5' name='checkBluetoothAddress' static='true' return='boolean'><parameter name='address' type='java.lang.String'/></method><method api_added='5' name='disable' return='boolean'/><method api_added='5' name='enable' return='boolean'/><method api_added='5' name='getAddress' return='java.lang.String'/><method api_added='5' name='getBondedDevices' return='java.util.Set&lt;android.bluetooth.BluetoothDevice&gt;'/><method api_added='5' name='getDefaultAdapter' synchronized='true' static='true' return='android.bluetooth.BluetoothAdapter'/><method api_added='5' name='getName' return='java.lang.String'/><method api_added='5' name='getRemoteDevice' return='android.bluetooth.BluetoothDevice'><parameter name='address' type='java.lang.String'/></method><method api_added='5' name='getScanMode' return='int'/><method api_added='5' name='getState' return='int'/><method api_added='5' name='isDiscovering' return='boolean'/><method api_added='5' name='isEnabled' return='boolean'/><method api_added='5' name='listenUsingRfcommWithServiceRecord' return='android.bluetooth.BluetoothServerSocket'><parameter name='name' type='java.lang.String'/><parameter name='uuid' type='java.util.UUID'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='setName' return='boolean'><parameter name='name' type='java.lang.String'/></method><method api_added='5' name='startDiscovery' return='boolean'/></class><class api_added='5' name='BluetoothClass' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='getDeviceClass' return='int'/><method api_added='5' name='getMajorDeviceClass' return='int'/><method api_added='5' name='hasService' return='boolean'><parameter name='service' type='int'/></method><method api_added='5' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='BluetoothClass.Device' extends='java.lang.Object' static='true'><constructor api_added='5' name='BluetoothClass.Device' type='android.bluetooth.BluetoothClass.Device'/><field api_added='5' name='AUDIO_VIDEO_CAMCORDER' final='true' static='true' value='1076' type='int'/><field api_added='5' name='AUDIO_VIDEO_CAR_AUDIO' final='true' static='true' value='1056' type='int'/><field api_added='5' name='AUDIO_VIDEO_HANDSFREE' final='true' static='true' value='1032' type='int'/><field api_added='5' name='AUDIO_VIDEO_HEADPHONES' final='true' static='true' value='1048' type='int'/><field api_added='5' name='AUDIO_VIDEO_HIFI_AUDIO' final='true' static='true' value='1064' type='int'/><field api_added='5' name='AUDIO_VIDEO_LOUDSPEAKER' final='true' static='true' value='1044' type='int'/><field api_added='5' name='AUDIO_VIDEO_MICROPHONE' final='true' static='true' value='1040' type='int'/><field api_added='5' name='AUDIO_VIDEO_PORTABLE_AUDIO' final='true' static='true' value='1052' type='int'/><field api_added='5' name='AUDIO_VIDEO_SET_TOP_BOX' final='true' static='true' value='1060' type='int'/><field api_added='5' name='AUDIO_VIDEO_UNCATEGORIZED' final='true' static='true' value='1024' type='int'/><field api_added='5' name='AUDIO_VIDEO_VCR' final='true' static='true' value='1068' type='int'/><field api_added='5' name='AUDIO_VIDEO_VIDEO_CAMERA' final='true' static='true' value='1072' type='int'/><field api_added='5' name='AUDIO_VIDEO_VIDEO_CONFERENCING' final='true' static='true' value='1088' type='int'/><field api_added='5' name='AUDIO_VIDEO_VIDEO_DISPLAY_AND_LOUDSPEAKER' final='true' static='true' value='1084' type='int'/><field api_added='5' name='AUDIO_VIDEO_VIDEO_GAMING_TOY' final='true' static='true' value='1096' type='int'/><field api_added='5' name='AUDIO_VIDEO_VIDEO_MONITOR' final='true' static='true' value='1080' type='int'/><field api_added='5' name='AUDIO_VIDEO_WEARABLE_HEADSET' final='true' static='true' value='1028' type='int'/><field api_added='5' name='COMPUTER_DESKTOP' final='true' static='true' value='260' type='int'/><field api_added='5' name='COMPUTER_HANDHELD_PC_PDA' final='true' static='true' value='272' type='int'/><field api_added='5' name='COMPUTER_LAPTOP' final='true' static='true' value='268' type='int'/><field api_added='5' name='COMPUTER_PALM_SIZE_PC_PDA' final='true' static='true' value='276' type='int'/><field api_added='5' name='COMPUTER_SERVER' final='true' static='true' value='264' type='int'/><field api_added='5' name='COMPUTER_UNCATEGORIZED' final='true' static='true' value='256' type='int'/><field api_added='5' name='COMPUTER_WEARABLE' final='true' static='true' value='280' type='int'/><field api_added='5' name='HEALTH_BLOOD_PRESSURE' final='true' static='true' value='2308' type='int'/><field api_added='5' name='HEALTH_DATA_DISPLAY' final='true' static='true' value='2332' type='int'/><field api_added='5' name='HEALTH_GLUCOSE' final='true' static='true' value='2320' type='int'/><field api_added='5' name='HEALTH_PULSE_OXIMETER' final='true' static='true' value='2324' type='int'/><field api_added='5' name='HEALTH_PULSE_RATE' final='true' static='true' value='2328' type='int'/><field api_added='5' name='HEALTH_THERMOMETER' final='true' static='true' value='2312' type='int'/><field api_added='5' name='HEALTH_UNCATEGORIZED' final='true' static='true' value='2304' type='int'/><field api_added='5' name='HEALTH_WEIGHING' final='true' static='true' value='2316' type='int'/><field api_added='5' name='PHONE_CELLULAR' final='true' static='true' value='516' type='int'/><field api_added='5' name='PHONE_CORDLESS' final='true' static='true' value='520' type='int'/><field api_added='5' name='PHONE_ISDN' final='true' static='true' value='532' type='int'/><field api_added='5' name='PHONE_MODEM_OR_GATEWAY' final='true' static='true' value='528' type='int'/><field api_added='5' name='PHONE_SMART' final='true' static='true' value='524' type='int'/><field api_added='5' name='PHONE_UNCATEGORIZED' final='true' static='true' value='512' type='int'/><field api_added='5' name='TOY_CONTROLLER' final='true' static='true' value='2064' type='int'/><field api_added='5' name='TOY_DOLL_ACTION_FIGURE' final='true' static='true' value='2060' type='int'/><field api_added='5' name='TOY_GAME' final='true' static='true' value='2068' type='int'/><field api_added='5' name='TOY_ROBOT' final='true' static='true' value='2052' type='int'/><field api_added='5' name='TOY_UNCATEGORIZED' final='true' static='true' value='2048' type='int'/><field api_added='5' name='TOY_VEHICLE' final='true' static='true' value='2056' type='int'/><field api_added='5' name='WEARABLE_GLASSES' final='true' static='true' value='1812' type='int'/><field api_added='5' name='WEARABLE_HELMET' final='true' static='true' value='1808' type='int'/><field api_added='5' name='WEARABLE_JACKET' final='true' static='true' value='1804' type='int'/><field api_added='5' name='WEARABLE_PAGER' final='true' static='true' value='1800' type='int'/><field api_added='5' name='WEARABLE_UNCATEGORIZED' final='true' static='true' value='1792' type='int'/><field api_added='5' name='WEARABLE_WRIST_WATCH' final='true' static='true' value='1796' type='int'/></class><class api_added='5' name='BluetoothClass.Device.Major' extends='java.lang.Object' static='true'><constructor api_added='5' name='BluetoothClass.Device.Major' type='android.bluetooth.BluetoothClass.Device.Major'/><field api_added='5' name='AUDIO_VIDEO' final='true' static='true' value='1024' type='int'/><field api_added='5' name='COMPUTER' final='true' static='true' value='256' type='int'/><field api_added='5' name='HEALTH' final='true' static='true' value='2304' type='int'/><field api_added='5' name='IMAGING' final='true' static='true' value='1536' type='int'/><field api_added='5' name='MISC' final='true' static='true' value='0' type='int'/><field api_added='5' name='NETWORKING' final='true' static='true' value='768' type='int'/><field api_added='5' name='PERIPHERAL' final='true' static='true' value='1280' type='int'/><field api_added='5' name='PHONE' final='true' static='true' value='512' type='int'/><field api_added='5' name='TOY' final='true' static='true' value='2048' type='int'/><field api_added='5' name='UNCATEGORIZED' final='true' static='true' value='7936' type='int'/><field api_added='5' name='WEARABLE' final='true' static='true' value='1792' type='int'/></class><class api_added='5' name='BluetoothClass.Service' final='true' extends='java.lang.Object' static='true'><constructor api_added='5' name='BluetoothClass.Service' type='android.bluetooth.BluetoothClass.Service'/><field api_added='5' name='AUDIO' final='true' static='true' value='2097152' type='int'/><field api_added='5' name='CAPTURE' final='true' static='true' value='524288' type='int'/><field api_added='5' name='INFORMATION' final='true' static='true' value='8388608' type='int'/><field api_added='5' name='LIMITED_DISCOVERABILITY' final='true' static='true' value='8192' type='int'/><field api_added='5' name='NETWORKING' final='true' static='true' value='131072' type='int'/><field api_added='5' name='OBJECT_TRANSFER' final='true' static='true' value='1048576' type='int'/><field api_added='5' name='POSITIONING' final='true' static='true' value='65536' type='int'/><field api_added='5' name='RENDER' final='true' static='true' value='262144' type='int'/><field api_added='5' name='TELEPHONY' final='true' static='true' value='4194304' type='int'/></class><class api_added='5' name='BluetoothDevice' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><field api_added='5' name='ACTION_ACL_CONNECTED' final='true' static='true' value='&quot;android.bluetooth.device.action.ACL_CONNECTED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_ACL_DISCONNECTED' final='true' static='true' value='&quot;android.bluetooth.device.action.ACL_DISCONNECTED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_ACL_DISCONNECT_REQUESTED' final='true' static='true' value='&quot;android.bluetooth.device.action.ACL_DISCONNECT_REQUESTED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_BOND_STATE_CHANGED' final='true' static='true' value='&quot;android.bluetooth.device.action.BOND_STATE_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_CLASS_CHANGED' final='true' static='true' value='&quot;android.bluetooth.device.action.CLASS_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_FOUND' final='true' static='true' value='&quot;android.bluetooth.device.action.FOUND&quot;' type='java.lang.String'/><field api_added='5' name='ACTION_NAME_CHANGED' final='true' static='true' value='&quot;android.bluetooth.device.action.NAME_CHANGED&quot;' type='java.lang.String'/><field api_added='5' name='BOND_BONDED' final='true' static='true' value='12' type='int'/><field api_added='5' name='BOND_BONDING' final='true' static='true' value='11' type='int'/><field api_added='5' name='BOND_NONE' final='true' static='true' value='10' type='int'/><field api_added='5' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='5' name='ERROR' final='true' static='true' value='-2147483648' type='int'/><field api_added='5' name='EXTRA_BOND_STATE' final='true' static='true' value='&quot;android.bluetooth.device.extra.BOND_STATE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_CLASS' final='true' static='true' value='&quot;android.bluetooth.device.extra.CLASS&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_DEVICE' final='true' static='true' value='&quot;android.bluetooth.device.extra.DEVICE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_NAME' final='true' static='true' value='&quot;android.bluetooth.device.extra.NAME&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_PREVIOUS_BOND_STATE' final='true' static='true' value='&quot;android.bluetooth.device.extra.PREVIOUS_BOND_STATE&quot;' type='java.lang.String'/><field api_added='5' name='EXTRA_RSSI' final='true' static='true' value='&quot;android.bluetooth.device.extra.RSSI&quot;' type='java.lang.String'/><method api_added='5' name='createRfcommSocketToServiceRecord' return='android.bluetooth.BluetoothSocket'><parameter name='uuid' type='java.util.UUID'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='describeContents' return='int'/><method api_added='5' name='getAddress' return='java.lang.String'/><method api_added='5' name='getBluetoothClass' return='android.bluetooth.BluetoothClass'/><method api_added='5' name='getBondState' return='int'/><method api_added='5' name='getName' return='java.lang.String'/><method api_added='5' name='writeToParcel'><parameter name='out' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='5' name='BluetoothServerSocket' final='true' extends='java.lang.Object'><implements name='java.io.Closeable'/><method api_added='5' name='accept' return='android.bluetooth.BluetoothSocket'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='accept' return='android.bluetooth.BluetoothSocket'><parameter name='timeout' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='close'><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='5' name='BluetoothSocket' final='true' extends='java.lang.Object'><implements name='java.io.Closeable'/><method api_added='5' name='close'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='connect'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='getInputStream' return='java.io.InputStream'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='getOutputStream' return='java.io.OutputStream'><exception name='IOException' type='java.io.IOException'/></method><method api_added='5' name='getRemoteDevice' return='android.bluetooth.BluetoothDevice'/></class></package><package api_added='5' name='android.telephony.cdma'><class api_added='5' name='CdmaCellLocation' extends='android.telephony.CellLocation'><constructor api_added='5' name='CdmaCellLocation' type='android.telephony.cdma.CdmaCellLocation'/><constructor api_added='5' name='CdmaCellLocation' type='android.telephony.cdma.CdmaCellLocation'><parameter name='bundleWithValues' type='android.os.Bundle'/><parameter name='bundle' type='android.os.Bundle'/></constructor><method api_added='5' name='fillInNotifierBundle'><parameter name='bundleToFill' type='android.os.Bundle'/></method><method api_added='5' name='getBaseStationId' return='int'/><method api_added='5' name='getBaseStationLatitude' return='int'/><method api_added='5' name='getBaseStationLongitude' return='int'/><method api_added='5' name='getNetworkId' return='int'/><method api_added='5' name='getSystemId' return='int'/><method api_added='5' name='setCellLocationData'><parameter name='baseStationId' type='int'/><parameter name='baseStationLatitude' type='int'/><parameter name='baseStationLongitude' type='int'/></method><method api_added='5' name='setCellLocationData'><parameter name='baseStationId' type='int'/><parameter name='baseStationLatitude' type='int'/><parameter name='baseStationLongitude' type='int'/><parameter name='systemId' type='int'/><parameter name='networkId' type='int'/></method><method api_added='5' name='setStateInvalid'/></class></package><package api_added='7' name='android.service.wallpaper'><class api_added='7' name='WallpaperService' extends='android.app.Service' abstract='true'><constructor api_added='7' name='WallpaperService' type='android.service.wallpaper.WallpaperService'/><field api_added='7' name='SERVICE_INTERFACE' final='true' static='true' value='&quot;android.service.wallpaper.WallpaperService&quot;' type='java.lang.String'/><field api_added='7' name='SERVICE_META_DATA' final='true' static='true' value='&quot;android.service.wallpaper&quot;' type='java.lang.String'/><method api_added='7' name='onBind' final='true' return='android.os.IBinder'><parameter name='intent' type='android.content.Intent'/></method><method api_added='7' name='onCreateEngine' abstract='true' return='android.service.wallpaper.WallpaperService.Engine'/></class><class api_added='7' name='WallpaperService.Engine' extends='java.lang.Object'><constructor api_added='7' name='WallpaperService.Engine' type='android.service.wallpaper.WallpaperService.Engine'/><method api_added='7' name='getDesiredMinimumHeight' return='int'/><method api_added='7' name='getDesiredMinimumWidth' return='int'/><method api_added='7' name='getSurfaceHolder' return='android.view.SurfaceHolder'/><method api_added='7' name='isPreview' return='boolean'/><method api_added='7' name='isVisible' return='boolean'/><method api_added='7' name='onCommand' return='android.os.Bundle'><parameter name='action' type='java.lang.String'/><parameter name='x' type='int'/><parameter name='y' type='int'/><parameter name='z' type='int'/><parameter name='extras' type='android.os.Bundle'/><parameter name='resultRequested' type='boolean'/></method><method api_added='7' name='onCreate'><parameter name='surfaceHolder' type='android.view.SurfaceHolder'/></method><method api_added='7' name='onDesiredSizeChanged'><parameter name='desiredWidth' type='int'/><parameter name='desiredHeight' type='int'/></method><method api_added='7' name='onDestroy'/><method api_added='7' name='onOffsetsChanged'><parameter name='xOffset' type='float'/><parameter name='yOffset' type='float'/><parameter name='xOffsetStep' type='float'/><parameter name='yOffsetStep' type='float'/><parameter name='xPixelOffset' type='int'/><parameter name='yPixelOffset' type='int'/></method><method api_added='7' name='onSurfaceChanged'><parameter name='holder' type='android.view.SurfaceHolder'/><parameter name='format' type='int'/><parameter name='width' type='int'/><parameter name='height' type='int'/></method><method api_added='7' name='onSurfaceCreated'><parameter name='holder' type='android.view.SurfaceHolder'/></method><method api_added='7' name='onSurfaceDestroyed'><parameter name='holder' type='android.view.SurfaceHolder'/></method><method api_added='7' name='onTouchEvent'><parameter name='event' type='android.view.MotionEvent'/></method><method api_added='7' name='onVisibilityChanged'><parameter name='visible' type='boolean'/></method><method api_added='7' name='setTouchEventsEnabled'><parameter name='enabled' type='boolean'/></method></class></package><package api_added='8' name='android.app.admin'><class api_added='8' name='DeviceAdminInfo' final='true' extends='java.lang.Object'><implements name='android.os.Parcelable'/><constructor api_added='8' name='DeviceAdminInfo' type='android.app.admin.DeviceAdminInfo'><parameter name='context' type='android.content.Context'/><parameter name='receiver' type='android.content.pm.ResolveInfo'/><exception name='IOException' type='java.io.IOException'/><exception name='XmlPullParserException' type='org.xmlpull.v1.XmlPullParserException'/></constructor><field api_added='8' name='CREATOR' final='true' static='true' type='android.os.Parcelable.Creator'/><field api_added='8' name='USES_POLICY_FORCE_LOCK' final='true' static='true' value='3' type='int'/><field api_added='8' name='USES_POLICY_LIMIT_PASSWORD' final='true' static='true' value='0' type='int'/><field api_added='8' name='USES_POLICY_RESET_PASSWORD' final='true' static='true' value='2' type='int'/><field api_added='8' name='USES_POLICY_WATCH_LOGIN' final='true' static='true' value='1' type='int'/><field api_added='8' name='USES_POLICY_WIPE_DATA' final='true' static='true' value='4' type='int'/><method api_added='8' name='describeContents' return='int'/><method api_added='8' name='dump'><parameter name='pw' type='android.util.Printer'/><parameter name='prefix' type='java.lang.String'/></method><method api_added='8' name='getActivityInfo' return='android.content.pm.ActivityInfo'/><method api_added='8' name='getComponent' return='android.content.ComponentName'/><method api_added='8' name='getPackageName' return='java.lang.String'/><method api_added='8' name='getReceiverName' return='java.lang.String'/><method api_added='8' name='getTagForPolicy' return='java.lang.String'><parameter name='policyIdent' type='int'/></method><method api_added='8' name='isVisible' return='boolean'/><method api_added='8' name='loadDescription' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/><exception name='Resources.NotFoundException' type='android.content.res.Resources.NotFoundException'/></method><method api_added='8' name='loadIcon' return='android.graphics.drawable.Drawable'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='8' name='loadLabel' return='java.lang.CharSequence'><parameter name='pm' type='android.content.pm.PackageManager'/></method><method api_added='8' name='usesPolicy' return='boolean'><parameter name='policyIdent' type='int'/></method><method api_added='8' name='writeToParcel'><parameter name='dest' type='android.os.Parcel'/><parameter name='flags' type='int'/></method></class><class api_added='8' name='DeviceAdminReceiver' extends='android.content.BroadcastReceiver'><constructor api_added='8' name='DeviceAdminReceiver' type='android.app.admin.DeviceAdminReceiver'/><field api_added='8' name='ACTION_DEVICE_ADMIN_DISABLED' final='true' static='true' value='&quot;android.app.action.DEVICE_ADMIN_DISABLED&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_DEVICE_ADMIN_DISABLE_REQUESTED' final='true' static='true' value='&quot;android.app.action.DEVICE_ADMIN_DISABLE_REQUESTED&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_DEVICE_ADMIN_ENABLED' final='true' static='true' value='&quot;android.app.action.DEVICE_ADMIN_ENABLED&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_PASSWORD_CHANGED' final='true' static='true' value='&quot;android.app.action.ACTION_PASSWORD_CHANGED&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_PASSWORD_FAILED' final='true' static='true' value='&quot;android.app.action.ACTION_PASSWORD_FAILED&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_PASSWORD_SUCCEEDED' final='true' static='true' value='&quot;android.app.action.ACTION_PASSWORD_SUCCEEDED&quot;' type='java.lang.String'/><field api_added='8' name='DEVICE_ADMIN_META_DATA' final='true' static='true' value='&quot;android.app.device_admin&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_DISABLE_WARNING' final='true' static='true' value='&quot;android.app.extra.DISABLE_WARNING&quot;' type='java.lang.String'/><method api_added='8' name='getManager' return='android.app.admin.DevicePolicyManager'><parameter name='context' type='android.content.Context'/></method><method api_added='8' name='getWho' return='android.content.ComponentName'><parameter name='context' type='android.content.Context'/></method><method api_added='8' name='onDisableRequested' return='java.lang.CharSequence'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onDisabled'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onEnabled'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onPasswordChanged'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onPasswordFailed'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onPasswordSucceeded'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method><method api_added='8' name='onReceive'><parameter name='context' type='android.content.Context'/><parameter name='intent' type='android.content.Intent'/></method></class><class api_added='8' name='DevicePolicyManager' extends='java.lang.Object'><field api_added='8' name='ACTION_ADD_DEVICE_ADMIN' final='true' static='true' value='&quot;android.app.action.ADD_DEVICE_ADMIN&quot;' type='java.lang.String'/><field api_added='8' name='ACTION_SET_NEW_PASSWORD' final='true' static='true' value='&quot;android.app.action.SET_NEW_PASSWORD&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_ADD_EXPLANATION' final='true' static='true' value='&quot;android.app.extra.ADD_EXPLANATION&quot;' type='java.lang.String'/><field api_added='8' name='EXTRA_DEVICE_ADMIN' final='true' static='true' value='&quot;android.app.extra.DEVICE_ADMIN&quot;' type='java.lang.String'/><field api_added='8' name='PASSWORD_QUALITY_ALPHABETIC' final='true' static='true' value='262144' type='int'/><field api_added='8' name='PASSWORD_QUALITY_ALPHANUMERIC' final='true' static='true' value='327680' type='int'/><field api_added='8' name='PASSWORD_QUALITY_NUMERIC' final='true' static='true' value='131072' type='int'/><field api_added='8' name='PASSWORD_QUALITY_SOMETHING' final='true' static='true' value='65536' type='int'/><field api_added='8' name='PASSWORD_QUALITY_UNSPECIFIED' final='true' static='true' value='0' type='int'/><field api_added='8' name='RESET_PASSWORD_REQUIRE_ENTRY' final='true' static='true' value='1' type='int'/><method api_added='8' name='getActiveAdmins' return='java.util.List&lt;android.content.ComponentName&gt;'/><method api_added='8' name='getCurrentFailedPasswordAttempts' return='int'/><method api_added='8' name='getMaximumFailedPasswordsForWipe' return='int'><parameter name='admin' type='android.content.ComponentName'/></method><method api_added='8' name='getMaximumTimeToLock' return='long'><parameter name='admin' type='android.content.ComponentName'/></method><method api_added='8' name='getPasswordMaximumLength' return='int'><parameter name='quality' type='int'/></method><method api_added='8' name='getPasswordMinimumLength' return='int'><parameter name='admin' type='android.content.ComponentName'/></method><method api_added='8' name='getPasswordQuality' return='int'><parameter name='admin' type='android.content.ComponentName'/></method><method api_added='8' name='isActivePasswordSufficient' return='boolean'/><method api_added='8' name='isAdminActive' return='boolean'><parameter name='who' type='android.content.ComponentName'/></method><method api_added='8' name='lockNow'/><method api_added='8' name='removeActiveAdmin'><parameter name='who' type='android.content.ComponentName'/></method><method api_added='8' name='resetPassword' return='boolean'><parameter name='password' type='java.lang.String'/><parameter name='flags' type='int'/></method><method api_added='8' name='setMaximumFailedPasswordsForWipe'><parameter name='admin' type='android.content.ComponentName'/><parameter name='num' type='int'/></method><method api_added='8' name='setMaximumTimeToLock'><parameter name='admin' type='android.content.ComponentName'/><parameter name='timeMs' type='long'/></method><method api_added='8' name='setPasswordMinimumLength'><parameter name='admin' type='android.content.ComponentName'/><parameter name='length' type='int'/></method><method api_added='8' name='setPasswordQuality'><parameter name='admin' type='android.content.ComponentName'/><parameter name='quality' type='int'/></method><method api_added='8' name='wipeData'><parameter name='flags' type='int'/></method></class></package><package api_added='8' name='android.app.backup'><class api_added='8' name='BackupAgent' extends='android.content.ContextWrapper' abstract='true'><constructor api_added='8' name='BackupAgent' type='android.app.backup.BackupAgent'/><method api_added='8' name='onBackup' abstract='true'><parameter name='oldState' type='android.os.ParcelFileDescriptor'/><parameter name='data' type='android.app.backup.BackupDataOutput'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='onCreate'/><method api_added='8' name='onDestroy'/><method api_added='8' name='onRestore' abstract='true'><parameter name='data' type='android.app.backup.BackupDataInput'/><parameter name='appVersionCode' type='int'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='8' name='BackupAgentHelper' extends='android.app.backup.BackupAgent'><constructor api_added='8' name='BackupAgentHelper' type='android.app.backup.BackupAgentHelper'/><method api_added='8' name='addHelper'><parameter name='keyPrefix' type='java.lang.String'/><parameter name='helper' type='android.app.backup.BackupHelper'/></method><method api_added='8' name='onBackup'><parameter name='oldState' type='android.os.ParcelFileDescriptor'/><parameter name='data' type='android.app.backup.BackupDataOutput'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='onRestore'><parameter name='data' type='android.app.backup.BackupDataInput'/><parameter name='appVersionCode' type='int'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='8' name='BackupDataInput' extends='java.lang.Object'><method api_added='8' name='getDataSize' return='int'/><method api_added='8' name='getKey' return='java.lang.String'/><method api_added='8' name='readEntityData' return='int'><parameter name='data' type='byte[]'/><parameter name='offset' type='int'/><parameter name='size' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='readNextHeader' return='boolean'><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='skipEntityData'><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='8' name='BackupDataInputStream' extends='java.io.InputStream'><method api_added='8' name='getKey' return='java.lang.String'/><method api_added='8' name='read' return='int'><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='size' return='int'/></class><class api_added='8' name='BackupDataOutput' extends='java.lang.Object'><method api_added='8' name='writeEntityData' return='int'><parameter name='data' type='byte[]'/><parameter name='size' type='int'/><exception name='IOException' type='java.io.IOException'/></method><method api_added='8' name='writeEntityHeader' return='int'><parameter name='key' type='java.lang.String'/><parameter name='dataSize' type='int'/><exception name='IOException' type='java.io.IOException'/></method></class><class api_added='8' name='BackupManager' extends='java.lang.Object'><constructor api_added='8' name='BackupManager' type='android.app.backup.BackupManager'><parameter name='context' type='android.content.Context'/></constructor><method api_added='8' name='dataChanged'/><method api_added='8' name='dataChanged' static='true'><parameter name='packageName' type='java.lang.String'/></method><method api_added='8' name='requestRestore' return='int'><parameter name='observer' type='android.app.backup.RestoreObserver'/></method></class><class api_added='8' name='FileBackupHelper' extends='android.app.backup.FileBackupHelperBase'><implements name='android.app.backup.BackupHelper'/><constructor api_added='8' name='FileBackupHelper' type='android.app.backup.FileBackupHelper'><parameter name='context' type='android.content.Context'/><parameter name='files' type='java.lang.String...'/></constructor><method api_added='8' name='performBackup'><parameter name='oldState' type='android.os.ParcelFileDescriptor'/><parameter name='data' type='android.app.backup.BackupDataOutput'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/></method><method api_added='8' name='restoreEntity'><parameter name='data' type='android.app.backup.BackupDataInputStream'/></method></class><class api_added='8' name='FileBackupHelperBase' extends='java.lang.Object' visibility=''><method api_added='8' name='writeNewStateDescription'><parameter name='fd' type='android.os.ParcelFileDescriptor'/></method></class><class api_added='8' name='RestoreObserver' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='RestoreObserver' type='android.app.backup.RestoreObserver'/><method api_added='8' name='onUpdate'><parameter name='nowBeingRestored' type='int'/><parameter name='currentPackage' type='java.lang.String'/></method><method api_added='8' name='restoreFinished'><parameter name='error' type='int'/></method><method api_added='8' name='restoreStarting'><parameter name='numPackages' type='int'/></method></class><class api_added='8' name='SharedPreferencesBackupHelper' extends='android.app.backup.FileBackupHelperBase'><implements name='android.app.backup.BackupHelper'/><constructor api_added='8' name='SharedPreferencesBackupHelper' type='android.app.backup.SharedPreferencesBackupHelper'><parameter name='context' type='android.content.Context'/><parameter name='prefGroups' type='java.lang.String...'/></constructor><method api_added='8' name='performBackup'><parameter name='oldState' type='android.os.ParcelFileDescriptor'/><parameter name='data' type='android.app.backup.BackupDataOutput'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/></method><method api_added='8' name='restoreEntity'><parameter name='data' type='android.app.backup.BackupDataInputStream'/></method></class><interface api_added='8' name='BackupHelper' abstract='true'><method api_added='8' name='performBackup' abstract='true'><parameter name='oldState' type='android.os.ParcelFileDescriptor'/><parameter name='data' type='android.app.backup.BackupDataOutput'/><parameter name='newState' type='android.os.ParcelFileDescriptor'/></method><method api_added='8' name='restoreEntity' abstract='true'><parameter name='data' type='android.app.backup.BackupDataInputStream'/></method><method api_added='8' name='writeNewStateDescription' abstract='true'><parameter name='newState' type='android.os.ParcelFileDescriptor'/></method></interface></package><package api_added='8' name='javax.xml.datatype'><class api_added='8' name='DatatypeConfigurationException' extends='java.lang.Exception'><constructor api_added='8' name='DatatypeConfigurationException' type='javax.xml.datatype.DatatypeConfigurationException'/><constructor api_added='8' name='DatatypeConfigurationException' type='javax.xml.datatype.DatatypeConfigurationException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='DatatypeConfigurationException' type='javax.xml.datatype.DatatypeConfigurationException'><parameter name='message' type='java.lang.String'/><parameter name='cause' type='java.lang.Throwable'/></constructor><constructor api_added='8' name='DatatypeConfigurationException' type='javax.xml.datatype.DatatypeConfigurationException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='8' name='DatatypeConstants' final='true' extends='java.lang.Object'><field api_added='8' name='APRIL' final='true' static='true' value='4' type='int'/><field api_added='8' name='AUGUST' final='true' static='true' value='8' type='int'/><field api_added='8' name='DATE' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='DATETIME' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='DAYS' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/><field api_added='8' name='DECEMBER' final='true' static='true' value='12' type='int'/><field api_added='8' name='DURATION' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='DURATION_DAYTIME' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='DURATION_YEARMONTH' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='EQUAL' final='true' static='true' value='0' type='int'/><field api_added='8' name='FEBRUARY' final='true' static='true' value='2' type='int'/><field api_added='8' name='FIELD_UNDEFINED' final='true' static='true' value='-2147483648' type='int'/><field api_added='8' name='GDAY' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='GMONTH' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='GMONTHDAY' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='GREATER' final='true' static='true' value='1' type='int'/><field api_added='8' name='GYEAR' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='GYEARMONTH' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='HOURS' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/><field api_added='8' name='INDETERMINATE' final='true' static='true' value='2' type='int'/><field api_added='8' name='JANUARY' final='true' static='true' value='1' type='int'/><field api_added='8' name='JULY' final='true' static='true' value='7' type='int'/><field api_added='8' name='JUNE' final='true' static='true' value='6' type='int'/><field api_added='8' name='LESSER' final='true' static='true' value='-1' type='int'/><field api_added='8' name='MARCH' final='true' static='true' value='3' type='int'/><field api_added='8' name='MAX_TIMEZONE_OFFSET' final='true' static='true' value='-840' type='int'/><field api_added='8' name='MAY' final='true' static='true' value='5' type='int'/><field api_added='8' name='MINUTES' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/><field api_added='8' name='MIN_TIMEZONE_OFFSET' final='true' static='true' value='840' type='int'/><field api_added='8' name='MONTHS' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/><field api_added='8' name='NOVEMBER' final='true' static='true' value='11' type='int'/><field api_added='8' name='OCTOBER' final='true' static='true' value='10' type='int'/><field api_added='8' name='SECONDS' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/><field api_added='8' name='SEPTEMBER' final='true' static='true' value='9' type='int'/><field api_added='8' name='TIME' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='YEARS' final='true' static='true' type='javax.xml.datatype.DatatypeConstants.Field'/></class><class api_added='8' name='DatatypeConstants.Field' final='true' extends='java.lang.Object' static='true'><method api_added='8' name='getId' return='int'/></class><class api_added='8' name='DatatypeFactory' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='DatatypeFactory' type='javax.xml.datatype.DatatypeFactory' visibility='protected'/><field api_added='8' name='DATATYPEFACTORY_IMPLEMENTATION_CLASS' final='true' static='true' type='java.lang.String'/><field api_added='8' name='DATATYPEFACTORY_PROPERTY' final='true' static='true' value='&quot;javax.xml.datatype.DatatypeFactory&quot;' type='java.lang.String'/><method api_added='8' name='newDuration' abstract='true' return='javax.xml.datatype.Duration'><parameter name='lexicalRepresentation' type='java.lang.String'/></method><method api_added='8' name='newDuration' abstract='true' return='javax.xml.datatype.Duration'><parameter name='durationInMilliSeconds' type='long'/></method><method api_added='8' name='newDuration' abstract='true' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='years' type='java.math.BigInteger'/><parameter name='months' type='java.math.BigInteger'/><parameter name='days' type='java.math.BigInteger'/><parameter name='hours' type='java.math.BigInteger'/><parameter name='minutes' type='java.math.BigInteger'/><parameter name='seconds' type='java.math.BigDecimal'/></method><method api_added='8' name='newDuration' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='years' type='int'/><parameter name='months' type='int'/><parameter name='days' type='int'/><parameter name='hours' type='int'/><parameter name='minutes' type='int'/><parameter name='seconds' type='int'/></method><method api_added='8' name='newDurationDayTime' return='javax.xml.datatype.Duration'><parameter name='lexicalRepresentation' type='java.lang.String'/></method><method api_added='8' name='newDurationDayTime' return='javax.xml.datatype.Duration'><parameter name='durationInMilliseconds' type='long'/></method><method api_added='8' name='newDurationDayTime' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='day' type='java.math.BigInteger'/><parameter name='hour' type='java.math.BigInteger'/><parameter name='minute' type='java.math.BigInteger'/><parameter name='second' type='java.math.BigInteger'/></method><method api_added='8' name='newDurationDayTime' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></method><method api_added='8' name='newDurationYearMonth' return='javax.xml.datatype.Duration'><parameter name='lexicalRepresentation' type='java.lang.String'/></method><method api_added='8' name='newDurationYearMonth' return='javax.xml.datatype.Duration'><parameter name='durationInMilliseconds' type='long'/></method><method api_added='8' name='newDurationYearMonth' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='year' type='java.math.BigInteger'/><parameter name='month' type='java.math.BigInteger'/></method><method api_added='8' name='newDurationYearMonth' return='javax.xml.datatype.Duration'><parameter name='isPositive' type='boolean'/><parameter name='year' type='int'/><parameter name='month' type='int'/></method><method api_added='8' name='newInstance' static='true' return='javax.xml.datatype.DatatypeFactory'><exception name='DatatypeConfigurationException' type='javax.xml.datatype.DatatypeConfigurationException'/></method><method api_added='8' name='newXMLGregorianCalendar' abstract='true' return='javax.xml.datatype.XMLGregorianCalendar'/><method api_added='8' name='newXMLGregorianCalendar' abstract='true' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='lexicalRepresentation' type='java.lang.String'/></method><method api_added='8' name='newXMLGregorianCalendar' abstract='true' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='cal' type='java.util.GregorianCalendar'/></method><method api_added='8' name='newXMLGregorianCalendar' abstract='true' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='year' type='java.math.BigInteger'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/><parameter name='fractionalSecond' type='java.math.BigDecimal'/><parameter name='timezone' type='int'/></method><method api_added='8' name='newXMLGregorianCalendar' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/><parameter name='millisecond' type='int'/><parameter name='timezone' type='int'/></method><method api_added='8' name='newXMLGregorianCalendarDate' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='year' type='int'/><parameter name='month' type='int'/><parameter name='day' type='int'/><parameter name='timezone' type='int'/></method><method api_added='8' name='newXMLGregorianCalendarTime' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='hours' type='int'/><parameter name='minutes' type='int'/><parameter name='seconds' type='int'/><parameter name='timezone' type='int'/></method><method api_added='8' name='newXMLGregorianCalendarTime' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='hours' type='int'/><parameter name='minutes' type='int'/><parameter name='seconds' type='int'/><parameter name='fractionalSecond' type='java.math.BigDecimal'/><parameter name='timezone' type='int'/></method><method api_added='8' name='newXMLGregorianCalendarTime' return='javax.xml.datatype.XMLGregorianCalendar'><parameter name='hours' type='int'/><parameter name='minutes' type='int'/><parameter name='seconds' type='int'/><parameter name='milliseconds' type='int'/><parameter name='timezone' type='int'/></method></class><class api_added='8' name='Duration' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='Duration' type='javax.xml.datatype.Duration'/><method api_added='8' name='add' abstract='true' return='javax.xml.datatype.Duration'><parameter name='rhs' type='javax.xml.datatype.Duration'/></method><method api_added='8' name='addTo' abstract='true'><parameter name='calendar' type='java.util.Calendar'/></method><method api_added='8' name='addTo'><parameter name='date' type='java.util.Date'/></method><method api_added='8' name='compare' abstract='true' return='int'><parameter name='duration' type='javax.xml.datatype.Duration'/></method><method api_added='8' name='getDays' return='int'/><method api_added='8' name='getField' abstract='true' return='java.lang.Number'><parameter name='field' type='javax.xml.datatype.DatatypeConstants.Field'/></method><method api_added='8' name='getHours' return='int'/><method api_added='8' name='getMinutes' return='int'/><method api_added='8' name='getMonths' return='int'/><method api_added='8' name='getSeconds' return='int'/><method api_added='8' name='getSign' abstract='true' return='int'/><method api_added='8' name='getTimeInMillis' return='long'><parameter name='startInstant' type='java.util.Calendar'/></method><method api_added='8' name='getTimeInMillis' return='long'><parameter name='startInstant' type='java.util.Date'/></method><method api_added='8' name='getXMLSchemaType' return='javax.xml.namespace.QName'/><method api_added='8' name='getYears' return='int'/><method api_added='8' name='hashCode' abstract='true' return='int'/><method api_added='8' name='isLongerThan' return='boolean'><parameter name='duration' type='javax.xml.datatype.Duration'/></method><method api_added='8' name='isSet' abstract='true' return='boolean'><parameter name='field' type='javax.xml.datatype.DatatypeConstants.Field'/></method><method api_added='8' name='isShorterThan' return='boolean'><parameter name='duration' type='javax.xml.datatype.Duration'/></method><method api_added='8' name='multiply' return='javax.xml.datatype.Duration'><parameter name='factor' type='int'/></method><method api_added='8' name='multiply' abstract='true' return='javax.xml.datatype.Duration'><parameter name='factor' type='java.math.BigDecimal'/></method><method api_added='8' name='negate' abstract='true' return='javax.xml.datatype.Duration'/><method api_added='8' name='normalizeWith' abstract='true' return='javax.xml.datatype.Duration'><parameter name='startTimeInstant' type='java.util.Calendar'/></method><method api_added='8' name='subtract' return='javax.xml.datatype.Duration'><parameter name='rhs' type='javax.xml.datatype.Duration'/></method></class><class api_added='8' name='XMLGregorianCalendar' extends='java.lang.Object' abstract='true'><implements name='java.lang.Cloneable'/><constructor api_added='8' name='XMLGregorianCalendar' type='javax.xml.datatype.XMLGregorianCalendar'/><method api_added='8' name='add' abstract='true'><parameter name='duration' type='javax.xml.datatype.Duration'/></method><method api_added='8' name='clear' abstract='true'/><method api_added='8' name='clone' abstract='true' return='java.lang.Object'/><method api_added='8' name='compare' abstract='true' return='int'><parameter name='xmlGregorianCalendar' type='javax.xml.datatype.XMLGregorianCalendar'/></method><method api_added='8' name='getDay' abstract='true' return='int'/><method api_added='8' name='getEon' abstract='true' return='java.math.BigInteger'/><method api_added='8' name='getEonAndYear' abstract='true' return='java.math.BigInteger'/><method api_added='8' name='getFractionalSecond' abstract='true' return='java.math.BigDecimal'/><method api_added='8' name='getHour' abstract='true' return='int'/><method api_added='8' name='getMillisecond' return='int'/><method api_added='8' name='getMinute' abstract='true' return='int'/><method api_added='8' name='getMonth' abstract='true' return='int'/><method api_added='8' name='getSecond' abstract='true' return='int'/><method api_added='8' name='getTimeZone' abstract='true' return='java.util.TimeZone'><parameter name='defaultZoneoffset' type='int'/></method><method api_added='8' name='getTimezone' abstract='true' return='int'/><method api_added='8' name='getXMLSchemaType' abstract='true' return='javax.xml.namespace.QName'/><method api_added='8' name='getYear' abstract='true' return='int'/><method api_added='8' name='isValid' abstract='true' return='boolean'/><method api_added='8' name='normalize' abstract='true' return='javax.xml.datatype.XMLGregorianCalendar'/><method api_added='8' name='reset' abstract='true'/><method api_added='8' name='setDay' abstract='true'><parameter name='day' type='int'/></method><method api_added='8' name='setFractionalSecond' abstract='true'><parameter name='fractional' type='java.math.BigDecimal'/></method><method api_added='8' name='setHour' abstract='true'><parameter name='hour' type='int'/></method><method api_added='8' name='setMillisecond' abstract='true'><parameter name='millisecond' type='int'/></method><method api_added='8' name='setMinute' abstract='true'><parameter name='minute' type='int'/></method><method api_added='8' name='setMonth' abstract='true'><parameter name='month' type='int'/></method><method api_added='8' name='setSecond' abstract='true'><parameter name='second' type='int'/></method><method api_added='8' name='setTime'><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/></method><method api_added='8' name='setTime'><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/><parameter name='fractional' type='java.math.BigDecimal'/></method><method api_added='8' name='setTime'><parameter name='hour' type='int'/><parameter name='minute' type='int'/><parameter name='second' type='int'/><parameter name='millisecond' type='int'/></method><method api_added='8' name='setTimezone' abstract='true'><parameter name='offset' type='int'/></method><method api_added='8' name='setYear' abstract='true'><parameter name='year' type='java.math.BigInteger'/></method><method api_added='8' name='setYear' abstract='true'><parameter name='year' type='int'/></method><method api_added='8' name='toGregorianCalendar' abstract='true' return='java.util.GregorianCalendar'/><method api_added='8' name='toGregorianCalendar' abstract='true' return='java.util.GregorianCalendar'><parameter name='timezone' type='java.util.TimeZone'/><parameter name='aLocale' type='java.util.Locale'/><parameter name='defaults' type='javax.xml.datatype.XMLGregorianCalendar'/></method><method api_added='8' name='toXMLFormat' abstract='true' return='java.lang.String'/></class></package><package api_added='8' name='javax.xml.namespace'><class api_added='8' name='QName' extends='java.lang.Object'><implements name='java.io.Serializable'/><constructor api_added='8' name='QName' type='javax.xml.namespace.QName'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localPart' type='java.lang.String'/></constructor><constructor api_added='8' name='QName' type='javax.xml.namespace.QName'><parameter name='namespaceURI' type='java.lang.String'/><parameter name='localPart' type='java.lang.String'/><parameter name='prefix' type='java.lang.String'/></constructor><constructor api_added='8' name='QName' type='javax.xml.namespace.QName'><parameter name='localPart' type='java.lang.String'/></constructor><method api_added='8' name='equals' final='true' return='boolean'><parameter name='objectToTest' type='java.lang.Object'/></method><method api_added='8' name='getLocalPart' return='java.lang.String'/><method api_added='8' name='getNamespaceURI' return='java.lang.String'/><method api_added='8' name='getPrefix' return='java.lang.String'/><method api_added='8' name='hashCode' final='true' return='int'/><method api_added='8' name='valueOf' static='true' return='javax.xml.namespace.QName'><parameter name='qNameAsString' type='java.lang.String'/></method></class><interface api_added='8' name='NamespaceContext' abstract='true'><method api_added='8' name='getNamespaceURI' abstract='true' return='java.lang.String'><parameter name='prefix' type='java.lang.String'/></method><method api_added='8' name='getPrefix' abstract='true' return='java.lang.String'><parameter name='namespaceURI' type='java.lang.String'/></method><method api_added='8' name='getPrefixes' abstract='true' return='java.util.Iterator'><parameter name='namespaceURI' type='java.lang.String'/></method></interface></package><package api_added='8' name='javax.xml.transform'><class api_added='8' name='OutputKeys' extends='java.lang.Object'><field api_added='8' name='CDATA_SECTION_ELEMENTS' final='true' static='true' value='&quot;cdata-section-elements&quot;' type='java.lang.String'/><field api_added='8' name='DOCTYPE_PUBLIC' final='true' static='true' value='&quot;doctype-public&quot;' type='java.lang.String'/><field api_added='8' name='DOCTYPE_SYSTEM' final='true' static='true' value='&quot;doctype-system&quot;' type='java.lang.String'/><field api_added='8' name='ENCODING' final='true' static='true' value='&quot;encoding&quot;' type='java.lang.String'/><field api_added='8' name='INDENT' final='true' static='true' value='&quot;indent&quot;' type='java.lang.String'/><field api_added='8' name='MEDIA_TYPE' final='true' static='true' value='&quot;media-type&quot;' type='java.lang.String'/><field api_added='8' name='METHOD' final='true' static='true' value='&quot;method&quot;' type='java.lang.String'/><field api_added='8' name='OMIT_XML_DECLARATION' final='true' static='true' value='&quot;omit-xml-declaration&quot;' type='java.lang.String'/><field api_added='8' name='STANDALONE' final='true' static='true' value='&quot;standalone&quot;' type='java.lang.String'/><field api_added='8' name='VERSION' final='true' static='true' value='&quot;version&quot;' type='java.lang.String'/></class><class api_added='8' name='Transformer' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='Transformer' type='javax.xml.transform.Transformer' visibility='protected'/><method api_added='8' name='clearParameters' abstract='true'/><method api_added='8' name='getErrorListener' abstract='true' return='javax.xml.transform.ErrorListener'/><method api_added='8' name='getOutputProperties' abstract='true' return='java.util.Properties'/><method api_added='8' name='getOutputProperty' abstract='true' return='java.lang.String'><parameter name='name' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='8' name='getParameter' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getURIResolver' abstract='true' return='javax.xml.transform.URIResolver'/><method api_added='8' name='reset'/><method api_added='8' name='setErrorListener' abstract='true'><parameter name='listener' type='javax.xml.transform.ErrorListener'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='8' name='setOutputProperties' abstract='true'><parameter name='oformat' type='java.util.Properties'/></method><method api_added='8' name='setOutputProperty' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.String'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='8' name='setParameter' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method api_added='8' name='setURIResolver' abstract='true'><parameter name='resolver' type='javax.xml.transform.URIResolver'/></method><method api_added='8' name='transform' abstract='true'><parameter name='xmlSource' type='javax.xml.transform.Source'/><parameter name='outputTarget' type='javax.xml.transform.Result'/><exception name='TransformerException' type='javax.xml.transform.TransformerException'/></method></class><class api_added='8' name='TransformerConfigurationException' extends='javax.xml.transform.TransformerException'><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'><parameter name='msg' type='java.lang.String'/></constructor><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'><parameter name='e' type='java.lang.Throwable'/></constructor><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'><parameter name='msg' type='java.lang.String'/><parameter name='e' type='java.lang.Throwable'/></constructor><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='javax.xml.transform.SourceLocator'/></constructor><constructor api_added='8' name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='javax.xml.transform.SourceLocator'/><parameter name='e' type='java.lang.Throwable'/></constructor></class><class api_added='8' name='TransformerException' extends='java.lang.Exception'><constructor api_added='8' name='TransformerException' type='javax.xml.transform.TransformerException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='TransformerException' type='javax.xml.transform.TransformerException'><parameter name='e' type='java.lang.Throwable'/></constructor><constructor api_added='8' name='TransformerException' type='javax.xml.transform.TransformerException'><parameter name='message' type='java.lang.String'/><parameter name='e' type='java.lang.Throwable'/></constructor><constructor api_added='8' name='TransformerException' type='javax.xml.transform.TransformerException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='javax.xml.transform.SourceLocator'/></constructor><constructor api_added='8' name='TransformerException' type='javax.xml.transform.TransformerException'><parameter name='message' type='java.lang.String'/><parameter name='locator' type='javax.xml.transform.SourceLocator'/><parameter name='e' type='java.lang.Throwable'/></constructor><method api_added='8' name='getException' return='java.lang.Throwable'/><method api_added='8' name='getLocationAsString' return='java.lang.String'/><method api_added='8' name='getLocator' return='javax.xml.transform.SourceLocator'/><method api_added='8' name='getMessageAndLocation' return='java.lang.String'/><method api_added='8' name='setLocator'><parameter name='location' type='javax.xml.transform.SourceLocator'/></method></class><class api_added='8' name='TransformerFactory' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='TransformerFactory' type='javax.xml.transform.TransformerFactory' visibility='protected'/><method api_added='8' name='getAssociatedStylesheet' abstract='true' return='javax.xml.transform.Source'><parameter name='source' type='javax.xml.transform.Source'/><parameter name='media' type='java.lang.String'/><parameter name='title' type='java.lang.String'/><parameter name='charset' type='java.lang.String'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='getAttribute' abstract='true' return='java.lang.Object'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getErrorListener' abstract='true' return='javax.xml.transform.ErrorListener'/><method api_added='8' name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/></method><method api_added='8' name='getURIResolver' abstract='true' return='javax.xml.transform.URIResolver'/><method api_added='8' name='newInstance' static='true' return='javax.xml.transform.TransformerFactory'><exception name='TransformerFactoryConfigurationError' type='javax.xml.transform.TransformerFactoryConfigurationError'/></method><method api_added='8' name='newTemplates' abstract='true' return='javax.xml.transform.Templates'><parameter name='source' type='javax.xml.transform.Source'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newTransformer' abstract='true' return='javax.xml.transform.Transformer'><parameter name='source' type='javax.xml.transform.Source'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newTransformer' abstract='true' return='javax.xml.transform.Transformer'><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='setAttribute' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='java.lang.Object'/></method><method api_added='8' name='setErrorListener' abstract='true'><parameter name='listener' type='javax.xml.transform.ErrorListener'/></method><method api_added='8' name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='setURIResolver' abstract='true'><parameter name='resolver' type='javax.xml.transform.URIResolver'/></method></class><class api_added='8' name='TransformerFactoryConfigurationError' extends='java.lang.Error'><constructor api_added='8' name='TransformerFactoryConfigurationError' type='javax.xml.transform.TransformerFactoryConfigurationError'/><constructor api_added='8' name='TransformerFactoryConfigurationError' type='javax.xml.transform.TransformerFactoryConfigurationError'><parameter name='msg' type='java.lang.String'/></constructor><constructor api_added='8' name='TransformerFactoryConfigurationError' type='javax.xml.transform.TransformerFactoryConfigurationError'><parameter name='e' type='java.lang.Exception'/></constructor><constructor api_added='8' name='TransformerFactoryConfigurationError' type='javax.xml.transform.TransformerFactoryConfigurationError'><parameter name='e' type='java.lang.Exception'/><parameter name='msg' type='java.lang.String'/></constructor><method api_added='8' name='getException' return='java.lang.Exception'/></class><interface api_added='8' name='ErrorListener' abstract='true'><method api_added='8' name='error' abstract='true'><parameter name='exception' type='javax.xml.transform.TransformerException'/><exception name='TransformerException' type='javax.xml.transform.TransformerException'/></method><method api_added='8' name='fatalError' abstract='true'><parameter name='exception' type='javax.xml.transform.TransformerException'/><exception name='TransformerException' type='javax.xml.transform.TransformerException'/></method><method api_added='8' name='warning' abstract='true'><parameter name='exception' type='javax.xml.transform.TransformerException'/><exception name='TransformerException' type='javax.xml.transform.TransformerException'/></method></interface><interface api_added='8' name='Result' abstract='true'><field api_added='8' name='PI_DISABLE_OUTPUT_ESCAPING' final='true' static='true' value='&quot;javax.xml.transform.disable-output-escaping&quot;' type='java.lang.String'/><field api_added='8' name='PI_ENABLE_OUTPUT_ESCAPING' final='true' static='true' value='&quot;javax.xml.transform.enable-output-escaping&quot;' type='java.lang.String'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemId' type='java.lang.String'/></method></interface><interface api_added='8' name='Source' abstract='true'><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemId' type='java.lang.String'/></method></interface><interface api_added='8' name='SourceLocator' abstract='true'><method api_added='8' name='getColumnNumber' abstract='true' return='int'/><method api_added='8' name='getLineNumber' abstract='true' return='int'/><method api_added='8' name='getPublicId' abstract='true' return='java.lang.String'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/></interface><interface api_added='8' name='Templates' abstract='true'><method api_added='8' name='getOutputProperties' abstract='true' return='java.util.Properties'/><method api_added='8' name='newTransformer' abstract='true' return='javax.xml.transform.Transformer'><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method></interface><interface api_added='8' name='URIResolver' abstract='true'><method api_added='8' name='resolve' abstract='true' return='javax.xml.transform.Source'><parameter name='href' type='java.lang.String'/><parameter name='base' type='java.lang.String'/><exception name='TransformerException' type='javax.xml.transform.TransformerException'/></method></interface></package><package api_added='8' name='javax.xml.transform.dom'><class api_added='8' name='DOMResult' extends='java.lang.Object'><implements name='javax.xml.transform.Result'/><constructor api_added='8' name='DOMResult' type='javax.xml.transform.dom.DOMResult'/><constructor api_added='8' name='DOMResult' type='javax.xml.transform.dom.DOMResult'><parameter name='node' type='org.w3c.dom.Node'/></constructor><constructor api_added='8' name='DOMResult' type='javax.xml.transform.dom.DOMResult'><parameter name='node' type='org.w3c.dom.Node'/><parameter name='systemId' type='java.lang.String'/></constructor><constructor api_added='8' name='DOMResult' type='javax.xml.transform.dom.DOMResult'><parameter name='node' type='org.w3c.dom.Node'/><parameter name='nextSibling' type='org.w3c.dom.Node'/></constructor><constructor api_added='8' name='DOMResult' type='javax.xml.transform.dom.DOMResult'><parameter name='node' type='org.w3c.dom.Node'/><parameter name='nextSibling' type='org.w3c.dom.Node'/><parameter name='systemId' type='java.lang.String'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.dom.DOMResult/feature&quot;' type='java.lang.String'/><method api_added='8' name='getNextSibling' return='org.w3c.dom.Node'/><method api_added='8' name='getNode' return='org.w3c.dom.Node'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='setNextSibling'><parameter name='nextSibling' type='org.w3c.dom.Node'/></method><method api_added='8' name='setNode'><parameter name='node' type='org.w3c.dom.Node'/></method><method api_added='8' name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method></class><class api_added='8' name='DOMSource' extends='java.lang.Object'><implements name='javax.xml.transform.Source'/><constructor api_added='8' name='DOMSource' type='javax.xml.transform.dom.DOMSource'/><constructor api_added='8' name='DOMSource' type='javax.xml.transform.dom.DOMSource'><parameter name='n' type='org.w3c.dom.Node'/></constructor><constructor api_added='8' name='DOMSource' type='javax.xml.transform.dom.DOMSource'><parameter name='node' type='org.w3c.dom.Node'/><parameter name='systemID' type='java.lang.String'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.dom.DOMSource/feature&quot;' type='java.lang.String'/><method api_added='8' name='getNode' return='org.w3c.dom.Node'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='setNode'><parameter name='node' type='org.w3c.dom.Node'/></method><method api_added='8' name='setSystemId'><parameter name='systemID' type='java.lang.String'/></method></class><interface api_added='8' name='DOMLocator' abstract='true'><implements name='javax.xml.transform.SourceLocator'/><method api_added='8' name='getOriginatingNode' abstract='true' return='org.w3c.dom.Node'/></interface></package><package api_added='8' name='javax.xml.transform.sax'><class api_added='8' name='SAXResult' extends='java.lang.Object'><implements name='javax.xml.transform.Result'/><constructor api_added='8' name='SAXResult' type='javax.xml.transform.sax.SAXResult'/><constructor api_added='8' name='SAXResult' type='javax.xml.transform.sax.SAXResult'><parameter name='handler' type='org.xml.sax.ContentHandler'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.sax.SAXResult/feature&quot;' type='java.lang.String'/><method api_added='8' name='getHandler' return='org.xml.sax.ContentHandler'/><method api_added='8' name='getLexicalHandler' return='org.xml.sax.ext.LexicalHandler'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='setHandler'><parameter name='handler' type='org.xml.sax.ContentHandler'/></method><method api_added='8' name='setLexicalHandler'><parameter name='handler' type='org.xml.sax.ext.LexicalHandler'/></method><method api_added='8' name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method></class><class api_added='8' name='SAXSource' extends='java.lang.Object'><implements name='javax.xml.transform.Source'/><constructor api_added='8' name='SAXSource' type='javax.xml.transform.sax.SAXSource'/><constructor api_added='8' name='SAXSource' type='javax.xml.transform.sax.SAXSource'><parameter name='reader' type='org.xml.sax.XMLReader'/><parameter name='inputSource' type='org.xml.sax.InputSource'/></constructor><constructor api_added='8' name='SAXSource' type='javax.xml.transform.sax.SAXSource'><parameter name='inputSource' type='org.xml.sax.InputSource'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.sax.SAXSource/feature&quot;' type='java.lang.String'/><method api_added='8' name='getInputSource' return='org.xml.sax.InputSource'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='getXMLReader' return='org.xml.sax.XMLReader'/><method api_added='8' name='setInputSource'><parameter name='inputSource' type='org.xml.sax.InputSource'/></method><method api_added='8' name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method><method api_added='8' name='setXMLReader'><parameter name='reader' type='org.xml.sax.XMLReader'/></method><method api_added='8' name='sourceToInputSource' static='true' return='org.xml.sax.InputSource'><parameter name='source' type='javax.xml.transform.Source'/></method></class><class api_added='8' name='SAXTransformerFactory' extends='javax.xml.transform.TransformerFactory' abstract='true'><constructor api_added='8' name='SAXTransformerFactory' type='javax.xml.transform.sax.SAXTransformerFactory' visibility='protected'/><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.sax.SAXTransformerFactory/feature&quot;' type='java.lang.String'/><field api_added='8' name='FEATURE_XMLFILTER' final='true' static='true' value='&quot;http://javax.xml.transform.sax.SAXTransformerFactory/feature/xmlfilter&quot;' type='java.lang.String'/><method api_added='8' name='newTemplatesHandler' abstract='true' return='javax.xml.transform.sax.TemplatesHandler'><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newTransformerHandler' abstract='true' return='javax.xml.transform.sax.TransformerHandler'><parameter name='src' type='javax.xml.transform.Source'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newTransformerHandler' abstract='true' return='javax.xml.transform.sax.TransformerHandler'><parameter name='templates' type='javax.xml.transform.Templates'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newTransformerHandler' abstract='true' return='javax.xml.transform.sax.TransformerHandler'><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newXMLFilter' abstract='true' return='org.xml.sax.XMLFilter'><parameter name='src' type='javax.xml.transform.Source'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method><method api_added='8' name='newXMLFilter' abstract='true' return='org.xml.sax.XMLFilter'><parameter name='templates' type='javax.xml.transform.Templates'/><exception name='TransformerConfigurationException' type='javax.xml.transform.TransformerConfigurationException'/></method></class><interface api_added='8' name='TemplatesHandler' abstract='true'><implements name='org.xml.sax.ContentHandler'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='getTemplates' abstract='true' return='javax.xml.transform.Templates'/><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemID' type='java.lang.String'/></method></interface><interface api_added='8' name='TransformerHandler' abstract='true'><implements name='org.xml.sax.ContentHandler'/><implements name='org.xml.sax.DTDHandler'/><implements name='org.xml.sax.ext.LexicalHandler'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='getTransformer' abstract='true' return='javax.xml.transform.Transformer'/><method api_added='8' name='setResult' abstract='true'><parameter name='result' type='javax.xml.transform.Result'/><exception name='IllegalArgumentException' type='java.lang.IllegalArgumentException'/></method><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemID' type='java.lang.String'/></method></interface></package><package api_added='8' name='javax.xml.transform.stream'><class api_added='8' name='StreamResult' extends='java.lang.Object'><implements name='javax.xml.transform.Result'/><constructor api_added='8' name='StreamResult' type='javax.xml.transform.stream.StreamResult'/><constructor api_added='8' name='StreamResult' type='javax.xml.transform.stream.StreamResult'><parameter name='outputStream' type='java.io.OutputStream'/></constructor><constructor api_added='8' name='StreamResult' type='javax.xml.transform.stream.StreamResult'><parameter name='writer' type='java.io.Writer'/></constructor><constructor api_added='8' name='StreamResult' type='javax.xml.transform.stream.StreamResult'><parameter name='systemId' type='java.lang.String'/></constructor><constructor api_added='8' name='StreamResult' type='javax.xml.transform.stream.StreamResult'><parameter name='f' type='java.io.File'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.stream.StreamResult/feature&quot;' type='java.lang.String'/><method api_added='8' name='getOutputStream' return='java.io.OutputStream'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='getWriter' return='java.io.Writer'/><method api_added='8' name='setOutputStream'><parameter name='outputStream' type='java.io.OutputStream'/></method><method api_added='8' name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method><method api_added='8' name='setSystemId'><parameter name='f' type='java.io.File'/></method><method api_added='8' name='setWriter'><parameter name='writer' type='java.io.Writer'/></method></class><class api_added='8' name='StreamSource' extends='java.lang.Object'><implements name='javax.xml.transform.Source'/><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'/><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='inputStream' type='java.io.InputStream'/></constructor><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='inputStream' type='java.io.InputStream'/><parameter name='systemId' type='java.lang.String'/></constructor><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='reader' type='java.io.Reader'/></constructor><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='reader' type='java.io.Reader'/><parameter name='systemId' type='java.lang.String'/></constructor><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='systemId' type='java.lang.String'/></constructor><constructor api_added='8' name='StreamSource' type='javax.xml.transform.stream.StreamSource'><parameter name='f' type='java.io.File'/></constructor><field api_added='8' name='FEATURE' final='true' static='true' value='&quot;http://javax.xml.transform.stream.StreamSource/feature&quot;' type='java.lang.String'/><method api_added='8' name='getInputStream' return='java.io.InputStream'/><method api_added='8' name='getPublicId' return='java.lang.String'/><method api_added='8' name='getReader' return='java.io.Reader'/><method api_added='8' name='getSystemId' return='java.lang.String'/><method api_added='8' name='setInputStream'><parameter name='inputStream' type='java.io.InputStream'/></method><method api_added='8' name='setPublicId'><parameter name='publicId' type='java.lang.String'/></method><method api_added='8' name='setReader'><parameter name='reader' type='java.io.Reader'/></method><method api_added='8' name='setSystemId'><parameter name='systemId' type='java.lang.String'/></method><method api_added='8' name='setSystemId'><parameter name='f' type='java.io.File'/></method></class></package><package api_added='8' name='javax.xml.validation'><class api_added='8' name='Schema' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='Schema' type='javax.xml.validation.Schema' visibility='protected'/><method api_added='8' name='newValidator' abstract='true' return='javax.xml.validation.Validator'/><method api_added='8' name='newValidatorHandler' abstract='true' return='javax.xml.validation.ValidatorHandler'/></class><class api_added='8' name='SchemaFactory' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='SchemaFactory' type='javax.xml.validation.SchemaFactory' visibility='protected'/><method api_added='8' name='getErrorHandler' abstract='true' return='org.xml.sax.ErrorHandler'/><method api_added='8' name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getResourceResolver' abstract='true' return='org.w3c.dom.ls.LSResourceResolver'/><method api_added='8' name='isSchemaLanguageSupported' abstract='true' return='boolean'><parameter name='schemaLanguage' type='java.lang.String'/></method><method api_added='8' name='newInstance' final='true' static='true' return='javax.xml.validation.SchemaFactory'><parameter name='schemaLanguage' type='java.lang.String'/></method><method api_added='8' name='newSchema' return='javax.xml.validation.Schema'><parameter name='schema' type='javax.xml.transform.Source'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='newSchema' return='javax.xml.validation.Schema'><parameter name='schema' type='java.io.File'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='newSchema' return='javax.xml.validation.Schema'><parameter name='schema' type='java.net.URL'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='newSchema' abstract='true' return='javax.xml.validation.Schema'><parameter name='schemas' type='javax.xml.transform.Source[]'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='newSchema' abstract='true' return='javax.xml.validation.Schema'><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='setErrorHandler' abstract='true'><parameter name='errorHandler' type='org.xml.sax.ErrorHandler'/></method><method api_added='8' name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='object' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setResourceResolver' abstract='true'><parameter name='resourceResolver' type='org.w3c.dom.ls.LSResourceResolver'/></method></class><class api_added='8' name='SchemaFactoryLoader' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='SchemaFactoryLoader' type='javax.xml.validation.SchemaFactoryLoader' visibility='protected'/><method api_added='8' name='newFactory' abstract='true' return='javax.xml.validation.SchemaFactory'><parameter name='schemaLanguage' type='java.lang.String'/></method></class><class api_added='8' name='TypeInfoProvider' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='TypeInfoProvider' type='javax.xml.validation.TypeInfoProvider' visibility='protected'/><method api_added='8' name='getAttributeTypeInfo' abstract='true' return='org.w3c.dom.TypeInfo'><parameter name='index' type='int'/></method><method api_added='8' name='getElementTypeInfo' abstract='true' return='org.w3c.dom.TypeInfo'/><method api_added='8' name='isIdAttribute' abstract='true' return='boolean'><parameter name='index' type='int'/></method><method api_added='8' name='isSpecified' abstract='true' return='boolean'><parameter name='index' type='int'/></method></class><class api_added='8' name='Validator' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='Validator' type='javax.xml.validation.Validator' visibility='protected'/><method api_added='8' name='getErrorHandler' abstract='true' return='org.xml.sax.ErrorHandler'/><method api_added='8' name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getResourceResolver' abstract='true' return='org.w3c.dom.ls.LSResourceResolver'/><method api_added='8' name='reset' abstract='true'/><method api_added='8' name='setErrorHandler' abstract='true'><parameter name='errorHandler' type='org.xml.sax.ErrorHandler'/></method><method api_added='8' name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='object' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setResourceResolver' abstract='true'><parameter name='resourceResolver' type='org.w3c.dom.ls.LSResourceResolver'/></method><method api_added='8' name='validate'><parameter name='source' type='javax.xml.transform.Source'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method><method api_added='8' name='validate' abstract='true'><parameter name='source' type='javax.xml.transform.Source'/><parameter name='result' type='javax.xml.transform.Result'/><exception name='IOException' type='java.io.IOException'/><exception name='SAXException' type='org.xml.sax.SAXException'/></method></class><class api_added='8' name='ValidatorHandler' extends='java.lang.Object' abstract='true'><implements name='org.xml.sax.ContentHandler'/><constructor api_added='8' name='ValidatorHandler' type='javax.xml.validation.ValidatorHandler' visibility='protected'/><method api_added='8' name='getContentHandler' abstract='true' return='org.xml.sax.ContentHandler'/><method api_added='8' name='getErrorHandler' abstract='true' return='org.xml.sax.ErrorHandler'/><method api_added='8' name='getFeature' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getProperty' return='java.lang.Object'><parameter name='name' type='java.lang.String'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='getResourceResolver' abstract='true' return='org.w3c.dom.ls.LSResourceResolver'/><method api_added='8' name='getTypeInfoProvider' abstract='true' return='javax.xml.validation.TypeInfoProvider'/><method api_added='8' name='setContentHandler' abstract='true'><parameter name='receiver' type='org.xml.sax.ContentHandler'/></method><method api_added='8' name='setErrorHandler' abstract='true'><parameter name='errorHandler' type='org.xml.sax.ErrorHandler'/></method><method api_added='8' name='setFeature'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setProperty'><parameter name='name' type='java.lang.String'/><parameter name='object' type='java.lang.Object'/><exception name='SAXNotRecognizedException' type='org.xml.sax.SAXNotRecognizedException'/><exception name='SAXNotSupportedException' type='org.xml.sax.SAXNotSupportedException'/></method><method api_added='8' name='setResourceResolver' abstract='true'><parameter name='resourceResolver' type='org.w3c.dom.ls.LSResourceResolver'/></method></class></package><package api_added='8' name='javax.xml.xpath'><class api_added='8' name='XPathConstants' extends='java.lang.Object'><field api_added='8' name='BOOLEAN' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='DOM_OBJECT_MODEL' final='true' static='true' value='&quot;http://java.sun.com/jaxp/xpath/dom&quot;' type='java.lang.String'/><field api_added='8' name='NODE' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='NODESET' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='NUMBER' final='true' static='true' type='javax.xml.namespace.QName'/><field api_added='8' name='STRING' final='true' static='true' type='javax.xml.namespace.QName'/></class><class api_added='8' name='XPathException' extends='java.lang.Exception'><constructor api_added='8' name='XPathException' type='javax.xml.xpath.XPathException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='XPathException' type='javax.xml.xpath.XPathException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='8' name='XPathExpressionException' extends='javax.xml.xpath.XPathException'><constructor api_added='8' name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='8' name='XPathFactory' extends='java.lang.Object' abstract='true'><constructor api_added='8' name='XPathFactory' type='javax.xml.xpath.XPathFactory' visibility='protected'/><field api_added='8' name='DEFAULT_OBJECT_MODEL_URI' final='true' static='true' value='&quot;http://java.sun.com/jaxp/xpath/dom&quot;' type='java.lang.String'/><field api_added='8' name='DEFAULT_PROPERTY_NAME' final='true' static='true' value='&quot;javax.xml.xpath.XPathFactory&quot;' type='java.lang.String'/><method api_added='8' name='getFeature' abstract='true' return='boolean'><parameter name='name' type='java.lang.String'/><exception name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'/></method><method api_added='8' name='isObjectModelSupported' abstract='true' return='boolean'><parameter name='objectModel' type='java.lang.String'/></method><method api_added='8' name='newInstance' final='true' static='true' return='javax.xml.xpath.XPathFactory'/><method api_added='8' name='newInstance' final='true' static='true' return='javax.xml.xpath.XPathFactory'><parameter name='uri' type='java.lang.String'/><exception name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'/></method><method api_added='8' name='newInstance' static='true' return='javax.xml.xpath.XPathFactory'><parameter name='uri' type='java.lang.String'/><parameter name='factoryClassName' type='java.lang.String'/><parameter name='classLoader' type='java.lang.ClassLoader'/><exception name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'/></method><method api_added='8' name='newXPath' abstract='true' return='javax.xml.xpath.XPath'/><method api_added='8' name='setFeature' abstract='true'><parameter name='name' type='java.lang.String'/><parameter name='value' type='boolean'/><exception name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'/></method><method api_added='8' name='setXPathFunctionResolver' abstract='true'><parameter name='resolver' type='javax.xml.xpath.XPathFunctionResolver'/></method><method api_added='8' name='setXPathVariableResolver' abstract='true'><parameter name='resolver' type='javax.xml.xpath.XPathVariableResolver'/></method></class><class api_added='8' name='XPathFactoryConfigurationException' extends='javax.xml.xpath.XPathException'><constructor api_added='8' name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='XPathFactoryConfigurationException' type='javax.xml.xpath.XPathFactoryConfigurationException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><class api_added='8' name='XPathFunctionException' extends='javax.xml.xpath.XPathExpressionException'><constructor api_added='8' name='XPathFunctionException' type='javax.xml.xpath.XPathFunctionException'><parameter name='message' type='java.lang.String'/></constructor><constructor api_added='8' name='XPathFunctionException' type='javax.xml.xpath.XPathFunctionException'><parameter name='cause' type='java.lang.Throwable'/></constructor></class><interface api_added='8' name='XPath' abstract='true'><method api_added='8' name='compile' abstract='true' return='javax.xml.xpath.XPathExpression'><parameter name='expression' type='java.lang.String'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.Object'><parameter name='expression' type='java.lang.String'/><parameter name='item' type='java.lang.Object'/><parameter name='returnType' type='javax.xml.namespace.QName'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.String'><parameter name='expression' type='java.lang.String'/><parameter name='item' type='java.lang.Object'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.Object'><parameter name='expression' type='java.lang.String'/><parameter name='source' type='org.xml.sax.InputSource'/><parameter name='returnType' type='javax.xml.namespace.QName'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.String'><parameter name='expression' type='java.lang.String'/><parameter name='source' type='org.xml.sax.InputSource'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='getNamespaceContext' abstract='true' return='javax.xml.namespace.NamespaceContext'/><method api_added='8' name='getXPathFunctionResolver' abstract='true' return='javax.xml.xpath.XPathFunctionResolver'/><method api_added='8' name='getXPathVariableResolver' abstract='true' return='javax.xml.xpath.XPathVariableResolver'/><method api_added='8' name='reset' abstract='true'/><method api_added='8' name='setNamespaceContext' abstract='true'><parameter name='nsContext' type='javax.xml.namespace.NamespaceContext'/></method><method api_added='8' name='setXPathFunctionResolver' abstract='true'><parameter name='resolver' type='javax.xml.xpath.XPathFunctionResolver'/></method><method api_added='8' name='setXPathVariableResolver' abstract='true'><parameter name='resolver' type='javax.xml.xpath.XPathVariableResolver'/></method></interface><interface api_added='8' name='XPathExpression' abstract='true'><method api_added='8' name='evaluate' abstract='true' return='java.lang.Object'><parameter name='item' type='java.lang.Object'/><parameter name='returnType' type='javax.xml.namespace.QName'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.String'><parameter name='item' type='java.lang.Object'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.Object'><parameter name='source' type='org.xml.sax.InputSource'/><parameter name='returnType' type='javax.xml.namespace.QName'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method><method api_added='8' name='evaluate' abstract='true' return='java.lang.String'><parameter name='source' type='org.xml.sax.InputSource'/><exception name='XPathExpressionException' type='javax.xml.xpath.XPathExpressionException'/></method></interface><interface api_added='8' name='XPathFunction' abstract='true'><method api_added='8' name='evaluate' abstract='true' return='java.lang.Object'><parameter name='args' type='java.util.List'/><exception name='XPathFunctionException' type='javax.xml.xpath.XPathFunctionException'/></method></interface><interface api_added='8' name='XPathFunctionResolver' abstract='true'><method api_added='8' name='resolveFunction' abstract='true' return='javax.xml.xpath.XPathFunction'><parameter name='functionName' type='javax.xml.namespace.QName'/><parameter name='arity' type='int'/></method></interface><interface api_added='8' name='XPathVariableResolver' abstract='true'><method api_added='8' name='resolveVariable' abstract='true' return='java.lang.Object'><parameter name='variableName' type='javax.xml.namespace.QName'/></method></interface></package><package api_added='8' name='org.w3c.dom.ls'><class api_added='8' name='LSException' extends='java.lang.RuntimeException'><constructor api_added='8' name='LSException' type='org.w3c.dom.ls.LSException'><parameter name='code' type='short'/><parameter name='message' type='java.lang.String'/></constructor><field api_added='8' name='PARSE_ERR' final='true' static='true' value='81' type='short'/><field api_added='8' name='SERIALIZE_ERR' final='true' static='true' value='82' type='short'/><field api_added='8' name='code' type='short'/></class><interface api_added='8' name='DOMImplementationLS' abstract='true'><field api_added='8' name='MODE_ASYNCHRONOUS' final='true' static='true' value='2' type='short'/><field api_added='8' name='MODE_SYNCHRONOUS' final='true' static='true' value='1' type='short'/><method api_added='8' name='createLSInput' abstract='true' return='org.w3c.dom.ls.LSInput'/><method api_added='8' name='createLSOutput' abstract='true' return='org.w3c.dom.ls.LSOutput'/><method api_added='8' name='createLSParser' abstract='true' return='org.w3c.dom.ls.LSParser'><parameter name='mode' type='short'/><parameter name='schemaType' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/></method><method api_added='8' name='createLSSerializer' abstract='true' return='org.w3c.dom.ls.LSSerializer'/></interface><interface api_added='8' name='LSInput' abstract='true'><method api_added='8' name='getBaseURI' abstract='true' return='java.lang.String'/><method api_added='8' name='getByteStream' abstract='true' return='java.io.InputStream'/><method api_added='8' name='getCertifiedText' abstract='true' return='boolean'/><method api_added='8' name='getCharacterStream' abstract='true' return='java.io.Reader'/><method api_added='8' name='getEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getPublicId' abstract='true' return='java.lang.String'/><method api_added='8' name='getStringData' abstract='true' return='java.lang.String'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='setBaseURI' abstract='true'><parameter name='baseURI' type='java.lang.String'/></method><method api_added='8' name='setByteStream' abstract='true'><parameter name='byteStream' type='java.io.InputStream'/></method><method api_added='8' name='setCertifiedText' abstract='true'><parameter name='certifiedText' type='boolean'/></method><method api_added='8' name='setCharacterStream' abstract='true'><parameter name='characterStream' type='java.io.Reader'/></method><method api_added='8' name='setEncoding' abstract='true'><parameter name='encoding' type='java.lang.String'/></method><method api_added='8' name='setPublicId' abstract='true'><parameter name='publicId' type='java.lang.String'/></method><method api_added='8' name='setStringData' abstract='true'><parameter name='stringData' type='java.lang.String'/></method><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemId' type='java.lang.String'/></method></interface><interface api_added='8' name='LSOutput' abstract='true'><method api_added='8' name='getByteStream' abstract='true' return='java.io.OutputStream'/><method api_added='8' name='getCharacterStream' abstract='true' return='java.io.Writer'/><method api_added='8' name='getEncoding' abstract='true' return='java.lang.String'/><method api_added='8' name='getSystemId' abstract='true' return='java.lang.String'/><method api_added='8' name='setByteStream' abstract='true'><parameter name='byteStream' type='java.io.OutputStream'/></method><method api_added='8' name='setCharacterStream' abstract='true'><parameter name='characterStream' type='java.io.Writer'/></method><method api_added='8' name='setEncoding' abstract='true'><parameter name='encoding' type='java.lang.String'/></method><method api_added='8' name='setSystemId' abstract='true'><parameter name='systemId' type='java.lang.String'/></method></interface><interface api_added='8' name='LSParser' abstract='true'><field api_added='8' name='ACTION_APPEND_AS_CHILDREN' final='true' static='true' value='1' type='short'/><field api_added='8' name='ACTION_INSERT_AFTER' final='true' static='true' value='4' type='short'/><field api_added='8' name='ACTION_INSERT_BEFORE' final='true' static='true' value='3' type='short'/><field api_added='8' name='ACTION_REPLACE' final='true' static='true' value='5' type='short'/><field api_added='8' name='ACTION_REPLACE_CHILDREN' final='true' static='true' value='2' type='short'/><method api_added='8' name='abort' abstract='true'/><method api_added='8' name='getAsync' abstract='true' return='boolean'/><method api_added='8' name='getBusy' abstract='true' return='boolean'/><method api_added='8' name='getDomConfig' abstract='true' return='org.w3c.dom.DOMConfiguration'/><method api_added='8' name='getFilter' abstract='true' return='org.w3c.dom.ls.LSParserFilter'/><method api_added='8' name='parse' abstract='true' return='org.w3c.dom.Document'><parameter name='input' type='org.w3c.dom.ls.LSInput'/><exception name='DOMException' type='org.w3c.dom.DOMException'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method><method api_added='8' name='parseURI' abstract='true' return='org.w3c.dom.Document'><parameter name='uri' type='java.lang.String'/><exception name='DOMException' type='org.w3c.dom.DOMException'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method><method api_added='8' name='parseWithContext' abstract='true' return='org.w3c.dom.Node'><parameter name='input' type='org.w3c.dom.ls.LSInput'/><parameter name='contextArg' type='org.w3c.dom.Node'/><parameter name='action' type='short'/><exception name='DOMException' type='org.w3c.dom.DOMException'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method><method api_added='8' name='setFilter' abstract='true'><parameter name='filter' type='org.w3c.dom.ls.LSParserFilter'/></method></interface><interface api_added='8' name='LSParserFilter' abstract='true'><field api_added='8' name='FILTER_ACCEPT' final='true' static='true' value='1' type='short'/><field api_added='8' name='FILTER_INTERRUPT' final='true' static='true' value='4' type='short'/><field api_added='8' name='FILTER_REJECT' final='true' static='true' value='2' type='short'/><field api_added='8' name='FILTER_SKIP' final='true' static='true' value='3' type='short'/><method api_added='8' name='acceptNode' abstract='true' return='short'><parameter name='nodeArg' type='org.w3c.dom.Node'/></method><method api_added='8' name='getWhatToShow' abstract='true' return='int'/><method api_added='8' name='startElement' abstract='true' return='short'><parameter name='elementArg' type='org.w3c.dom.Element'/></method></interface><interface api_added='8' name='LSResourceResolver' abstract='true'><method api_added='8' name='resolveResource' abstract='true' return='org.w3c.dom.ls.LSInput'><parameter name='type' type='java.lang.String'/><parameter name='namespaceURI' type='java.lang.String'/><parameter name='publicId' type='java.lang.String'/><parameter name='systemId' type='java.lang.String'/><parameter name='baseURI' type='java.lang.String'/></method></interface><interface api_added='8' name='LSSerializer' abstract='true'><method api_added='8' name='getDomConfig' abstract='true' return='org.w3c.dom.DOMConfiguration'/><method api_added='8' name='getNewLine' abstract='true' return='java.lang.String'/><method api_added='8' name='setNewLine' abstract='true'><parameter name='newLine' type='java.lang.String'/></method><method api_added='8' name='write' abstract='true' return='boolean'><parameter name='nodeArg' type='org.w3c.dom.Node'/><parameter name='destination' type='org.w3c.dom.ls.LSOutput'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method><method api_added='8' name='writeToString' abstract='true' return='java.lang.String'><parameter name='nodeArg' type='org.w3c.dom.Node'/><exception name='DOMException' type='org.w3c.dom.DOMException'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method><method api_added='8' name='writeToURI' abstract='true' return='boolean'><parameter name='nodeArg' type='org.w3c.dom.Node'/><parameter name='uri' type='java.lang.String'/><exception name='LSException' type='org.w3c.dom.ls.LSException'/></method></interface></package></api>